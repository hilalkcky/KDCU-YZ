Java,Clean_Java
public ListSpeechSynthesisTasksResult listSpeechSynthesisTasks(ListSpeechSynthesisTasksRequest request) {request = beforeClientExecution(request);return executeListSpeechSynthesisTasks(request);},public ListSpeechSynthesisTasksResult listSpeechSynthesisTasksListSpeechSynthesisTasksRequest request request  beforeClientExecutionrequestreturn executeListSpeechSynthesisTasksrequest
public UpdateJourneyStateResult updateJourneyState(UpdateJourneyStateRequest request) {request = beforeClientExecution(request);return executeUpdateJourneyState(request);},public UpdateJourneyStateResult updateJourneyStateUpdateJourneyStateRequest request request  beforeClientExecutionrequestreturn executeUpdateJourneyStaterequest
public void removePresentationFormat() {remove1stProperty(PropertyIDMap.PID_PRESFORMAT);},public void removePresentationFormat remove1stPropertyPropertyIDMapPIDPRESFORMAT
"public CellRangeAddressList(int firstRow, int lastRow, int firstCol, int lastCol) {this();addCellRangeAddress(firstRow, firstCol, lastRow, lastCol);}",public CellRangeAddressListint firstRow int lastRow int firstCol int lastCol thisaddCellRangeAddressfirstRow firstCol lastRow lastCol
"public void delete(int key) {int i = binarySearch(mKeys, 0, mSize, key);if (i >= 0) {if (mValues[i] != DELETED) {mValues[i] = DELETED;mGarbage = true;}}}",public void deleteint key int i  binarySearchmKeys 0 mSize keyif i  0 if mValuesi  DELETED mValuesi  DELETEDmGarbage  true
public CreateBranchCommand setStartPoint(RevCommit startPoint) {checkCallable();this.startCommit = startPoint;this.startPoint = null;return this;},public CreateBranchCommand setStartPointRevCommit startPoint checkCallablethisstartCommit  startPointthisstartPoint  nullreturn this
public int centerX() {return x + w / 2;},public int centerX return x  w  2
public ListPresetsResult listPresets() {return listPresets(new ListPresetsRequest());},public ListPresetsResult listPresets return listPresetsnew ListPresetsRequest
public DeleteFolderContentsResult deleteFolderContents(DeleteFolderContentsRequest request) {request = beforeClientExecution(request);return executeDeleteFolderContents(request);},public DeleteFolderContentsResult deleteFolderContentsDeleteFolderContentsRequest request request  beforeClientExecutionrequestreturn executeDeleteFolderContentsrequest
public GetConsoleOutputResult getConsoleOutput(GetConsoleOutputRequest request) {request = beforeClientExecution(request);return executeGetConsoleOutput(request);},public GetConsoleOutputResult getConsoleOutputGetConsoleOutputRequest request request  beforeClientExecutionrequestreturn executeGetConsoleOutputrequest
public PutMailboxPermissionsResult putMailboxPermissions(PutMailboxPermissionsRequest request) {request = beforeClientExecution(request);return executePutMailboxPermissions(request);},public PutMailboxPermissionsResult putMailboxPermissionsPutMailboxPermissionsRequest request request  beforeClientExecutionrequestreturn executePutMailboxPermissionsrequest
public Cluster disableSnapshotCopy(DisableSnapshotCopyRequest request) {request = beforeClientExecution(request);return executeDisableSnapshotCopy(request);},public Cluster disableSnapshotCopyDisableSnapshotCopyRequest request request  beforeClientExecutionrequestreturn executeDisableSnapshotCopyrequest
"public static String stripExtension(String filename) {int idx = filename.indexOf('.');if (idx != -1) {filename = filename.substring(0, idx);}return filename;}",public static String stripExtensionString filename int idx  filenameindexOfif idx  1 filename  filenamesubstring0 idxreturn filename
public ByteBuffer putInt(int value) {throw new ReadOnlyBufferException();},public ByteBuffer putIntint value throw new ReadOnlyBufferException
public int lastIndexOf(final int o){int rval = _limit - 1;for (; rval >= 0; rval--){if (o == _array[ rval ]){break;}}return rval;},public int lastIndexOffinal int oint rval  limit  1for  rval  0 rvalif o  array rval breakreturn rval
"public void setCountsByTime(int[] counts, long msecStep) {countsByTime = counts;countsByTimeStepMSec = msecStep;}",public void setCountsByTimeint counts long msecStep countsByTime  countscountsByTimeStepMSec  msecStep
public FeatHdrRecord(RecordInputStream in) {futureHeader = new FtrHeader(in);isf_sharedFeatureType = in.readShort();reserved = in.readByte();cbHdrData = in.readInt();rgbHdrData = in.readRemainder();},public FeatHdrRecordRecordInputStream in futureHeader  new FtrHeaderinisfsharedFeatureType  inreadShortreserved  inreadBytecbHdrData  inreadIntrgbHdrData  inreadRemainder
public CopyOnWriteArrayList() {elements = EmptyArray.OBJECT;},public CopyOnWriteArrayList elements  EmptyArrayOBJECT
public WriteRequest(DeleteRequest deleteRequest) {setDeleteRequest(deleteRequest);},public WriteRequestDeleteRequest deleteRequest setDeleteRequestdeleteRequest
public void readFully(byte[] buf){_in.readFully(buf);},public void readFullybyte bufinreadFullybuf
"public static Cell getCell(Row row, int columnIndex) {Cell cell = row.getCell(columnIndex);if (cell == null) {cell = row.createCell(columnIndex);}return cell;}",public static Cell getCellRow row int columnIndex Cell cell  rowgetCellcolumnIndexif cell  null cell  rowcreateCellcolumnIndexreturn cell
public void setPackConfig(PackConfig pc) {this.packConfig = pc;},public void setPackConfigPackConfig pc thispackConfig  pc
"public String getSignerName() {return ""HMAC-SHA1"";}",public String getSignerName return HMACSHA1
public IntervalSet or(IntSet a) {IntervalSet o = new IntervalSet();o.addAll(this);o.addAll(a);return o;},public IntervalSet orIntSet a IntervalSet o  new IntervalSetoaddAllthisoaddAllareturn o
"public String toString() {return getClass().getName() + "" ["" +_value +""]"";}",public String toString return getClassgetName    value 
public DescribeVpcEndpointServicePermissionsResult describeVpcEndpointServicePermissions(DescribeVpcEndpointServicePermissionsRequest request) {request = beforeClientExecution(request);return executeDescribeVpcEndpointServicePermissions(request);},public DescribeVpcEndpointServicePermissionsResult describeVpcEndpointServicePermissionsDescribeVpcEndpointServicePermissionsRequest request request  beforeClientExecutionrequestreturn executeDescribeVpcEndpointServicePermissionsrequest
"public static byte[] copyOfRange(byte[] original, int start, int end) {if (start > end) {throw new IllegalArgumentException();}int originalLength = original.length;if (start < 0 || start > originalLength) {throw new ArrayIndexOutOfBoundsException();}int resultLength = end - start;int copyLength = Math.min(resultLength, originalLength - start);byte[] result = new byte[resultLength];System.arraycopy(original, start, result, 0, copyLength);return result;}",public static byte copyOfRangebyte original int start int end if start  end throw new IllegalArgumentExceptionint originalLength  originallengthif start  0  start  originalLength throw new ArrayIndexOutOfBoundsExceptionint resultLength  end  startint copyLength  MathminresultLength originalLength  startbyte result  new byteresultLengthSystemarraycopyoriginal start result 0 copyLengthreturn result
public ListTopicsRequest(String nextToken) {setNextToken(nextToken);},public ListTopicsRequestString nextToken setNextTokennextToken
"public void finish(FieldInfos fis, int numDocs) throws IOException {if (!pendingDocs.isEmpty()) {flush();numDirtyChunks++; }if (numDocs != this.numDocs) {throw new RuntimeException(""Wrote "" + this.numDocs + "" docs, finish called with numDocs="" + numDocs);}indexWriter.finish(numDocs, vectorsStream.getFilePointer());vectorsStream.writeVLong(numChunks);vectorsStream.writeVLong(numDirtyChunks);CodecUtil.writeFooter(vectorsStream);}",public void finishFieldInfos fis int numDocs throws IOException if pendingDocsisEmpty flushnumDirtyChunks if numDocs  thisnumDocs throw new RuntimeExceptionWrote   thisnumDocs   docs finish called with numDocs  numDocsindexWriterfinishnumDocs vectorsStreamgetFilePointervectorsStreamwriteVLongnumChunksvectorsStreamwriteVLongnumDirtyChunksCodecUtilwriteFootervectorsStream
"public boolean isIndexTerm(BytesRef term, TermStats stats) {if (count >= interval) {count = 1;return true;} else {count++;return false;}}",public boolean isIndexTermBytesRef term TermStats stats if count  interval count  1return true else countreturn false
public AssociateDhcpOptionsResult associateDhcpOptions(AssociateDhcpOptionsRequest request) {request = beforeClientExecution(request);return executeAssociateDhcpOptions(request);},public AssociateDhcpOptionsResult associateDhcpOptionsAssociateDhcpOptionsRequest request request  beforeClientExecutionrequestreturn executeAssociateDhcpOptionsrequest
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1,ValueEval arg2) {return evaluate(srcRowIndex, srcColumnIndex, arg0, arg1, arg2, DEFAULT_ARG3);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1ValueEval arg2 return evaluatesrcRowIndex srcColumnIndex arg0 arg1 arg2 DEFAULTARG3
public void disconnect() {if (sock.isConnected())sock.disconnect();},public void disconnect if sockisConnectedsockdisconnect
"public PredictionContext add(PredictionContext ctx) {if ( ctx==PredictionContext.EMPTY ) return PredictionContext.EMPTY;PredictionContext existing = cache.get(ctx);if ( existing!=null ) {return existing;}cache.put(ctx, ctx);return ctx;}",public PredictionContext addPredictionContext ctx if  ctxPredictionContextEMPTY  return PredictionContextEMPTYPredictionContext existing  cachegetctxif  existingnull  return existingcacheputctx ctxreturn ctx
public UploadLayerPartResult uploadLayerPart(UploadLayerPartRequest request) {request = beforeClientExecution(request);return executeUploadLayerPart(request);},public UploadLayerPartResult uploadLayerPartUploadLayerPartRequest request request  beforeClientExecutionrequestreturn executeUploadLayerPartrequest
"public String getScriptText() {return getScriptText(null, null);}",public String getScriptText return getScriptTextnull null
public DescribeClusterSubnetGroupsResult describeClusterSubnetGroups() {return describeClusterSubnetGroups(new DescribeClusterSubnetGroupsRequest());},public DescribeClusterSubnetGroupsResult describeClusterSubnetGroups return describeClusterSubnetGroupsnew DescribeClusterSubnetGroupsRequest
"public char setIndex(int position) {if (position < getBeginIndex() || position > getEndIndex())throw new IllegalArgumentException(""Illegal Position: "" + position);index = start + position;return current();}",public char setIndexint position if position  getBeginIndex  position  getEndIndexthrow new IllegalArgumentExceptionIllegal Position   positionindex  start  positionreturn current
public GetPhoneNumberOrderResult getPhoneNumberOrder(GetPhoneNumberOrderRequest request) {request = beforeClientExecution(request);return executeGetPhoneNumberOrder(request);},public GetPhoneNumberOrderResult getPhoneNumberOrderGetPhoneNumberOrderRequest request request  beforeClientExecutionrequestreturn executeGetPhoneNumberOrderrequest
"public EpsilonTransition(ATNState target, int outermostPrecedenceReturn) {super(target);this.outermostPrecedenceReturn = outermostPrecedenceReturn;}",public EpsilonTransitionATNState target int outermostPrecedenceReturn supertargetthisoutermostPrecedenceReturn  outermostPrecedenceReturn
public DiffCommand setContextLines(int contextLines) {this.contextLines = contextLines;return this;},public DiffCommand setContextLinesint contextLines thiscontextLines  contextLinesreturn this
public RejectVpcPeeringConnectionResult rejectVpcPeeringConnection(RejectVpcPeeringConnectionRequest request) {request = beforeClientExecution(request);return executeRejectVpcPeeringConnection(request);},public RejectVpcPeeringConnectionResult rejectVpcPeeringConnectionRejectVpcPeeringConnectionRequest request request  beforeClientExecutionrequestreturn executeRejectVpcPeeringConnectionrequest
"public static boolean equals(int[] array1, int[] array2) {if (array1 == array2) {return true;}if (array1 == null || array2 == null || array1.length != array2.length) {return false;}for (int i = 0; i < array1.length; i++) {if (array1[i] != array2[i]) {return false;}}return true;}",public static boolean equalsint array1 int array2 if array1  array2 return trueif array1  null  array2  null  array1length  array2length return falsefor int i  0 i  array1length i if array1i  array2i return falsereturn true
"public static void Main(String[] args) throws IOException {if (args.length<1) {System.err.println(""Usage: java QualityQueriesFinder <index-dir>"");System.exit(1);}QualityQueriesFinder qqf = new QualityQueriesFinder(FSDirectory.open(Paths.get(args[0])));String q[] = qqf.bestQueries(""body"",20);for (int i=0; i<q.length; i++) {System.out.println(newline+formatQueryAsTrecTopic(i,q[i],null,null));}}",public static void MainString args throws IOException if argslength1 SystemerrprintlnUsage java QualityQueriesFinder indexdirSystemexit1QualityQueriesFinder qqf  new QualityQueriesFinderFSDirectoryopenPathsgetargs0String q  qqfbestQueriesbody20for int i0 iqlength i SystemoutprintlnnewlineformatQueryAsTrecTopiciqinullnull
"public CharsRef(char[] chars, int offset, int length) {this.chars = chars;this.offset = offset;this.length = length;assert isValid();}",public CharsRefchar chars int offset int length thischars  charsthisoffset  offsetthislength  lengthassert isValid
public UpdateIPSetResult updateIPSet(UpdateIPSetRequest request) {request = beforeClientExecution(request);return executeUpdateIPSet(request);},public UpdateIPSetResult updateIPSetUpdateIPSetRequest request request  beforeClientExecutionrequestreturn executeUpdateIPSetrequest
public void print(Object obj) {print(String.valueOf(obj));},public void printObject obj printStringvalueOfobj
"public String toString() {return ""IndexFileDeleter.CommitPoint("" + segmentsFileName + "")"";}",public String toString return IndexFileDeleterCommitPoint  segmentsFileName  
"public synchronized boolean waitForGeneration(long targetGen, int maxMS) throws InterruptedException {if (targetGen > searchingGen) {reopenLock.lock();waitingGen = Math.max(waitingGen, targetGen);try {reopenCond.signal();} finally {reopenLock.unlock();}long startMS = System.nanoTime()/1000000;while (targetGen > searchingGen) {if (maxMS < 0) {wait();} else {long msLeft = (startMS + maxMS) - System.nanoTime()/1000000;if (msLeft <= 0) {return false;} else {wait(msLeft);}}}}return true;}",public synchronized boolean waitForGenerationlong targetGen int maxMS throws InterruptedException if targetGen  searchingGen reopenLocklockwaitingGen  MathmaxwaitingGen targetGentry reopenCondsignal finally reopenLockunlocklong startMS  SystemnanoTime1000000while targetGen  searchingGen if maxMS  0 wait else long msLeft  startMS  maxMS  SystemnanoTime1000000if msLeft  0 return false else waitmsLeftreturn true
"public StringBuffer append(boolean b) {return append(b ? ""true"" : ""false"");}",public StringBuffer appendboolean b return appendb  true  false
"public ByteBuffer put(int index, byte b) {throw new ReadOnlyBufferException();}",public ByteBuffer putint index byte b throw new ReadOnlyBufferException
public int getLineCount() {return lineCount;},public int getLineCount return lineCount
public boolean equals( Object o ) {return o instanceof DutchStemmer;},public boolean equals Object o  return o instanceof DutchStemmer
public CreateNotificationSubscriptionResult createNotificationSubscription(CreateNotificationSubscriptionRequest request) {request = beforeClientExecution(request);return executeCreateNotificationSubscription(request);},public CreateNotificationSubscriptionResult createNotificationSubscriptionCreateNotificationSubscriptionRequest request request  beforeClientExecutionrequestreturn executeCreateNotificationSubscriptionrequest
public boolean isOutdated() {return snapshot.isModified(getFile());},public boolean isOutdated return snapshotisModifiedgetFile
public DescribeVirtualInterfacesResult describeVirtualInterfaces() {return describeVirtualInterfaces(new DescribeVirtualInterfacesRequest());},public DescribeVirtualInterfacesResult describeVirtualInterfaces return describeVirtualInterfacesnew DescribeVirtualInterfacesRequest
public void onChanged() {buildMap();for (DataSetObserver o : mObservers) {o.onChanged();}},public void onChanged buildMapfor DataSetObserver o  mObservers oonChanged
public DeleteEventTrackerResult deleteEventTracker(DeleteEventTrackerRequest request) {request = beforeClientExecution(request);return executeDeleteEventTracker(request);},public DeleteEventTrackerResult deleteEventTrackerDeleteEventTrackerRequest request request  beforeClientExecutionrequestreturn executeDeleteEventTrackerrequest
public boolean matches(ValueEval x) {if (x instanceof BlankEval) {switch(getCode()) {case CmpOp.NONE:case CmpOp.EQ:return _value.length() == 0;case CmpOp.NE:return _value.length() != 0;}return false;}if(!(x instanceof StringEval)) {return false;}String testedValue = ((StringEval) x).getStringValue();if (testedValue.length() < 1 && _value.length() < 1) {switch(getCode()) {case CmpOp.NONE: return true;case CmpOp.EQ:   return false;case CmpOp.NE:   return true;}return false;}if (_pattern != null) {return evaluate(_pattern.matcher(testedValue).matches());}return evaluate(testedValue.compareToIgnoreCase(_value));},public boolean matchesValueEval x if x instanceof BlankEval switchgetCode case CmpOpNONEcase CmpOpEQreturn valuelength  0case CmpOpNEreturn valuelength  0return falseifx instanceof StringEval return falseString testedValue  StringEval xgetStringValueif testedValuelength  1  valuelength  1 switchgetCode case CmpOpNONE return truecase CmpOpEQ   return falsecase CmpOpNE   return truereturn falseif pattern  null return evaluatepatternmatchertestedValuematchesreturn evaluatetestedValuecompareToIgnoreCasevalue
public ListWebsiteAuthorizationProvidersResult listWebsiteAuthorizationProviders(ListWebsiteAuthorizationProvidersRequest request) {request = beforeClientExecution(request);return executeListWebsiteAuthorizationProviders(request);},public ListWebsiteAuthorizationProvidersResult listWebsiteAuthorizationProvidersListWebsiteAuthorizationProvidersRequest request request  beforeClientExecutionrequestreturn executeListWebsiteAuthorizationProvidersrequest
"public void write(char[] buf, int offset, int count) {doWrite(buf, offset, count);}",public void writechar buf int offset int count doWritebuf offset count
"public String formatAsString() {if(isWholeColumnReference()) {returnCellReference.convertNumToColString(_firstCell.getCol())+ "":"" +CellReference.convertNumToColString(_lastCell.getCol());}StringBuilder sb = new StringBuilder(32);sb.append(_firstCell.formatAsString());if(!_isSingleCell) {sb.append(CELL_DELIMITER);if(_lastCell.getSheetName() == null) {sb.append(_lastCell.formatAsString());} else {_lastCell.appendCellReference(sb);}}return sb.toString();}",public String formatAsString ifisWholeColumnReference returnCellReferenceconvertNumToColStringfirstCellgetCol  CellReferenceconvertNumToColStringlastCellgetColStringBuilder sb  new StringBuilder32sbappendfirstCellformatAsStringifisSingleCell sbappendCELLDELIMITERiflastCellgetSheetName  null sbappendlastCellformatAsString else lastCellappendCellReferencesbreturn sbtoString
"public Graphics create(){return new EscherGraphics(escherGroup, workbook,foreground, font, verticalPointsPerPixel );}",public Graphics createreturn new EscherGraphicsescherGroup workbookforeground font verticalPointsPerPixel 
public DoubleDocValues(ValueSource vs) {this.vs = vs;},public DoubleDocValuesValueSource vs thisvs  vs
public static CharArraySet getDefaultStopSet(){return DefaultSetHolder.DEFAULT_STOP_SET;},public static CharArraySet getDefaultStopSetreturn DefaultSetHolderDEFAULTSTOPSET
public DeleteLoadBalancerPolicyResult deleteLoadBalancerPolicy(DeleteLoadBalancerPolicyRequest request) {request = beforeClientExecution(request);return executeDeleteLoadBalancerPolicy(request);},public DeleteLoadBalancerPolicyResult deleteLoadBalancerPolicyDeleteLoadBalancerPolicyRequest request request  beforeClientExecutionrequestreturn executeDeleteLoadBalancerPolicyrequest
public ReplicationGroup decreaseReplicaCount(DecreaseReplicaCountRequest request) {request = beforeClientExecution(request);return executeDecreaseReplicaCount(request);},public ReplicationGroup decreaseReplicaCountDecreaseReplicaCountRequest request request  beforeClientExecutionrequestreturn executeDecreaseReplicaCountrequest
"public Result update(RevWalk walk) throws IOException {requireCanDoUpdate();try {return result = updateImpl(walk, new Store() {@OverrideResult execute(Result status) throws IOException {if (status == Result.NO_CHANGE)return status;return doUpdate(status);}});} catch (IOException x) {result = Result.IO_FAILURE;throw x;}}",public Result updateRevWalk walk throws IOException requireCanDoUpdatetry return result  updateImplwalk new Store OverrideResult executeResult status throws IOException if status  ResultNOCHANGEreturn statusreturn doUpdatestatus catch IOException x result  ResultIOFAILUREthrow x
public Set<String> getChanged() {return Collections.unmodifiableSet(diff.getChanged());},public SetString getChanged return CollectionsunmodifiableSetdiffgetChanged
"public static String toHex(long value) {StringBuilder sb = new StringBuilder(16);writeHex(sb, value, 16, """");return sb.toString();}",public static String toHexlong value StringBuilder sb  new StringBuilder16writeHexsb value 16 return sbtoString
public int createPlaceholder() {return _offset++;},public int createPlaceholder return offset
@Override public boolean equals(Object o) {if (o instanceof Map.Entry) {Map.Entry other = (Map.Entry) o;return (key == null ? other.getKey() == null : key.equals(other.getKey()))&& (value == null ? other.getValue() == null : value.equals(other.getValue()));}return false;},Override public boolean equalsObject o if o instanceof MapEntry MapEntry other  MapEntry oreturn key  null  othergetKey  null  keyequalsothergetKey value  null  othergetValue  null  valueequalsothergetValuereturn false
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0,ValueEval arg1) {double result;try {double d0 = NumericFunction.singleOperandEvaluate(arg0, srcRowIndex, srcColumnIndex);double d1 = NumericFunction.singleOperandEvaluate(arg1, srcRowIndex, srcColumnIndex);double logE = Math.log(d0);if (Double.compare(d1, Math.E) == 0) {result = logE;} else {result = logE / Math.log(d1);}NumericFunction.checkValue(result);} catch (EvaluationException e) {return e.getErrorEval();}return new NumberEval(result);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0ValueEval arg1 double resulttry double d0  NumericFunctionsingleOperandEvaluatearg0 srcRowIndex srcColumnIndexdouble d1  NumericFunctionsingleOperandEvaluatearg1 srcRowIndex srcColumnIndexdouble logE  Mathlogd0if Doublecompared1 MathE  0 result  logE else result  logE  Mathlogd1NumericFunctioncheckValueresult catch EvaluationException e return egetErrorEvalreturn new NumberEvalresult
public DeleteFilterResult deleteFilter(DeleteFilterRequest request) {request = beforeClientExecution(request);return executeDeleteFilter(request);},public DeleteFilterResult deleteFilterDeleteFilterRequest request request  beforeClientExecutionrequestreturn executeDeleteFilterrequest
public CreateInstanceSnapshotResult createInstanceSnapshot(CreateInstanceSnapshotRequest request) {request = beforeClientExecution(request);return executeCreateInstanceSnapshot(request);},public CreateInstanceSnapshotResult createInstanceSnapshotCreateInstanceSnapshotRequest request request  beforeClientExecutionrequestreturn executeCreateInstanceSnapshotrequest
"public List<Token> getTokens(int start, int stop) {return getTokens(start, stop, null);}",public ListToken getTokensint start int stop return getTokensstart stop null
"public static TermGroupFacetCollector createTermGroupFacetCollector(String groupField,String facetField,boolean facetFieldMultivalued,BytesRef facetPrefix,int initialSize) {if (facetFieldMultivalued) {return new MV(groupField, facetField, facetPrefix, initialSize);} else {return new SV(groupField, facetField, facetPrefix, initialSize);}}",public static TermGroupFacetCollector createTermGroupFacetCollectorString groupFieldString facetFieldboolean facetFieldMultivaluedBytesRef facetPrefixint initialSize if facetFieldMultivalued return new MVgroupField facetField facetPrefix initialSize else return new SVgroupField facetField facetPrefix initialSize
"public RenameAlbumRequest() {super(""CloudPhoto"", ""2017-07-11"", ""RenameAlbum"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public RenameAlbumRequest superCloudPhoto 20170711 RenameAlbum cloudphotosetProtocolProtocolTypeHTTPS
@Override public boolean contains(Object object) {synchronized (mutex) {return c.contains(object);}},Override public boolean containsObject object synchronized mutex return ccontainsobject
"public CharBuffer put(char[] src, int srcOffset, int charCount) {if (charCount > remaining()) {throw new BufferOverflowException();}System.arraycopy(src, srcOffset, backingArray, offset + position, charCount);position += charCount;return this;}",public CharBuffer putchar src int srcOffset int charCount if charCount  remaining throw new BufferOverflowExceptionSystemarraycopysrc srcOffset backingArray offset  position charCountposition  charCountreturn this
public LegendRecord(RecordInputStream in) {field_1_xAxisUpperLeft = in.readInt();field_2_yAxisUpperLeft = in.readInt();field_3_xSize          = in.readInt();field_4_ySize          = in.readInt();field_5_type           = in.readByte();field_6_spacing        = in.readByte();field_7_options        = in.readShort();},public LegendRecordRecordInputStream in field1xAxisUpperLeft  inreadIntfield2yAxisUpperLeft  inreadIntfield3xSize           inreadIntfield4ySize           inreadIntfield5type            inreadBytefield6spacing         inreadBytefield7options         inreadShort
"public static byte[] encodedTypeString(int typeCode) {switch (typeCode) {case OBJ_COMMIT:return ENCODED_TYPE_COMMIT;case OBJ_TREE:return ENCODED_TYPE_TREE;case OBJ_BLOB:return ENCODED_TYPE_BLOB;case OBJ_TAG:return ENCODED_TYPE_TAG;default:throw new IllegalArgumentException(MessageFormat.format(JGitText.get().badObjectType, Integer.valueOf(typeCode)));}}",public static byte encodedTypeStringint typeCode switch typeCode case OBJCOMMITreturn ENCODEDTYPECOMMITcase OBJTREEreturn ENCODEDTYPETREEcase OBJBLOBreturn ENCODEDTYPEBLOBcase OBJTAGreturn ENCODEDTYPETAGdefaultthrow new IllegalArgumentExceptionMessageFormatformatJGitTextgetbadObjectType IntegervalueOftypeCode
public ObjectId getCalulatedPatchId() {return ObjectId.fromRaw(digest.digest());},public ObjectId getCalulatedPatchId return ObjectIdfromRawdigestdigest
public DefaultRowHeightRecord() {field_1_option_flags = 0x0000;field_2_row_height = DEFAULT_ROW_HEIGHT;},public DefaultRowHeightRecord field1optionflags  0x0000field2rowheight  DEFAULTROWHEIGHT
"public final ByteBuffer encode(CharBuffer buffer) {try {return newEncoder().onMalformedInput(CodingErrorAction.REPLACE).onUnmappableCharacter(CodingErrorAction.REPLACE).encode(buffer);} catch (CharacterCodingException ex) {throw new Error(ex.getMessage(), ex);}}",public final ByteBuffer encodeCharBuffer buffer try return newEncoderonMalformedInputCodingErrorActionREPLACEonUnmappableCharacterCodingErrorActionREPLACEencodebuffer catch CharacterCodingException ex throw new ErrorexgetMessage ex
"public final FloatBuffer get(float[] dst, int dstOffset, int floatCount) {if (floatCount > remaining()) {throw new BufferUnderflowException();}System.arraycopy(backingArray, offset + position, dst, dstOffset, floatCount);position += floatCount;return this;}",public final FloatBuffer getfloat dst int dstOffset int floatCount if floatCount  remaining throw new BufferUnderflowExceptionSystemarraycopybackingArray offset  position dst dstOffset floatCountposition  floatCountreturn this
public boolean hasNext() {return nextEntry != null;},public boolean hasNext return nextEntry  null
public DeleteNatGatewayResult deleteNatGateway(DeleteNatGatewayRequest request) {request = beforeClientExecution(request);return executeDeleteNatGateway(request);},public DeleteNatGatewayResult deleteNatGatewayDeleteNatGatewayRequest request request  beforeClientExecutionrequestreturn executeDeleteNatGatewayrequest
"public String resolveNameXText(int refIndex, int definedNameIndex) {return linkTable.resolveNameXText(refIndex, definedNameIndex, this);}",public String resolveNameXTextint refIndex int definedNameIndex return linkTableresolveNameXTextrefIndex definedNameIndex this
"public void setMultiFields(CharSequence[] fields) {if (fields == null) {fields = new CharSequence[0];}getQueryConfigHandler().set(ConfigurationKeys.MULTI_FIELDS, fields);}",public void setMultiFieldsCharSequence fields if fields  null fields  new CharSequence0getQueryConfigHandlersetConfigurationKeysMULTIFIELDS fields
public boolean isCancelled() {lock.lock();try {return pm.isCancelled();} finally {lock.unlock();}},public boolean isCancelled locklocktry return pmisCancelled finally lockunlock
public RemoveTargetsResult removeTargets(RemoveTargetsRequest request) {request = beforeClientExecution(request);return executeRemoveTargets(request);},public RemoveTargetsResult removeTargetsRemoveTargetsRequest request request  beforeClientExecutionrequestreturn executeRemoveTargetsrequest
"public FuzzyQuery(Term term, int maxEdits, int prefixLength, int maxExpansions, boolean transpositions) {super(term.field());if (maxEdits < 0 || maxEdits > LevenshteinAutomata.MAXIMUM_SUPPORTED_DISTANCE) {throw new IllegalArgumentException(""maxEdits must be between 0 and "" + LevenshteinAutomata.MAXIMUM_SUPPORTED_DISTANCE);}if (prefixLength < 0) {throw new IllegalArgumentException(""prefixLength cannot be negative."");}if (maxExpansions <= 0) {throw new IllegalArgumentException(""maxExpansions must be positive."");}this.term = term;this.maxEdits = maxEdits;this.prefixLength = prefixLength;this.transpositions = transpositions;this.maxExpansions = maxExpansions;int[] codePoints = FuzzyTermsEnum.stringToUTF32(term.text());this.termLength = codePoints.length;this.automata = FuzzyTermsEnum.buildAutomata(term.text(), codePoints, prefixLength, transpositions, maxEdits);setRewriteMethod(new MultiTermQuery.TopTermsBlendedFreqScoringRewrite(maxExpansions));this.ramBytesUsed = calculateRamBytesUsed(term, this.automata);}",public FuzzyQueryTerm term int maxEdits int prefixLength int maxExpansions boolean transpositions supertermfieldif maxEdits  0  maxEdits  LevenshteinAutomataMAXIMUMSUPPORTEDDISTANCE throw new IllegalArgumentExceptionmaxEdits must be between 0 and   LevenshteinAutomataMAXIMUMSUPPORTEDDISTANCEif prefixLength  0 throw new IllegalArgumentExceptionprefixLength cannot be negativeif maxExpansions  0 throw new IllegalArgumentExceptionmaxExpansions must be positivethisterm  termthismaxEdits  maxEditsthisprefixLength  prefixLengththistranspositions  transpositionsthismaxExpansions  maxExpansionsint codePoints  FuzzyTermsEnumstringToUTF32termtextthistermLength  codePointslengththisautomata  FuzzyTermsEnumbuildAutomatatermtext codePoints prefixLength transpositions maxEditssetRewriteMethodnew MultiTermQueryTopTermsBlendedFreqScoringRewritemaxExpansionsthisramBytesUsed  calculateRamBytesUsedterm thisautomata
public CheckoutCommand checkout() {return new CheckoutCommand(repo);},public CheckoutCommand checkout return new CheckoutCommandrepo
"public ValueEval evaluate(String sheetName, int rowIndex, int columnIndex) {EvaluationCell cell = _sewb.getEvaluationCell(sheetName, rowIndex, columnIndex);switch (cell.getCellType()) {case BOOLEAN:return BoolEval.valueOf(cell.getBooleanCellValue());case ERROR:return ErrorEval.valueOf(cell.getErrorCellValue());case FORMULA:return _evaluator.evaluate(cell);case NUMERIC:return new NumberEval(cell.getNumericCellValue());case STRING:return new StringEval(cell.getStringCellValue());case BLANK:return null;default:throw new IllegalStateException(""Bad cell type ("" + cell.getCellType() + "")"");}}",public ValueEval evaluateString sheetName int rowIndex int columnIndex EvaluationCell cell  sewbgetEvaluationCellsheetName rowIndex columnIndexswitch cellgetCellType case BOOLEANreturn BoolEvalvalueOfcellgetBooleanCellValuecase ERRORreturn ErrorEvalvalueOfcellgetErrorCellValuecase FORMULAreturn evaluatorevaluatecellcase NUMERICreturn new NumberEvalcellgetNumericCellValuecase STRINGreturn new StringEvalcellgetStringCellValuecase BLANKreturn nulldefaultthrow new IllegalStateExceptionBad cell type   cellgetCellType  
public PutFileSystemPolicyResult putFileSystemPolicy(PutFileSystemPolicyRequest request) {request = beforeClientExecution(request);return executePutFileSystemPolicy(request);},public PutFileSystemPolicyResult putFileSystemPolicyPutFileSystemPolicyRequest request request  beforeClientExecutionrequestreturn executePutFileSystemPolicyrequest
public long fileLength(String name) throws IOException {ensureOpen();FileEntry e = entries.get(IndexFileNames.stripSegmentName(name));if (e == null)throw new FileNotFoundException(name);return e.length;},public long fileLengthString name throws IOException ensureOpenFileEntry e  entriesgetIndexFileNamesstripSegmentNamenameif e  nullthrow new FileNotFoundExceptionnamereturn elength
public DescribeCacheClustersResult describeCacheClusters() {return describeCacheClusters(new DescribeCacheClustersRequest());},public DescribeCacheClustersResult describeCacheClusters return describeCacheClustersnew DescribeCacheClustersRequest
"public void setObjectId(RevObject obj) {setObjectId(obj, obj.getType());}",public void setObjectIdRevObject obj setObjectIdobj objgetType
public boolean rowHasCells(int row) {if (row >= records.length) {return false;}CellValueRecordInterface[] rowCells=records[row];if(rowCells==null) return false;for(int col=0;col<rowCells.length;col++) {if(rowCells[col]!=null) return true;}return false;},public boolean rowHasCellsint row if row  recordslength return falseCellValueRecordInterface rowCellsrecordsrowifrowCellsnull return falseforint col0colrowCellslengthcol ifrowCellscolnull return truereturn false
public TokenStream create(TokenStream input) {return new SpanishLightStemFilter(input);},public TokenStream createTokenStream input return new SpanishLightStemFilterinput
"public StoredField(String name, double value) {super(name, TYPE);fieldsData = value;}",public StoredFieldString name double value supername TYPEfieldsData  value
public DescribePublicIpv4PoolsResult describePublicIpv4Pools(DescribePublicIpv4PoolsRequest request) {request = beforeClientExecution(request);return executeDescribePublicIpv4Pools(request);},public DescribePublicIpv4PoolsResult describePublicIpv4PoolsDescribePublicIpv4PoolsRequest request request  beforeClientExecutionrequestreturn executeDescribePublicIpv4Poolsrequest
"public IndexRevision(IndexWriter writer) throws IOException {IndexDeletionPolicy delPolicy = writer.getConfig().getIndexDeletionPolicy();if (!(delPolicy instanceof SnapshotDeletionPolicy)) {throw new IllegalArgumentException(""IndexWriter must be created with SnapshotDeletionPolicy"");}this.writer = writer;this.sdp = (SnapshotDeletionPolicy) delPolicy;this.commit = sdp.snapshot();this.version = revisionVersion(commit);this.sourceFiles = revisionFiles(commit);}",public IndexRevisionIndexWriter writer throws IOException IndexDeletionPolicy delPolicy  writergetConfiggetIndexDeletionPolicyif delPolicy instanceof SnapshotDeletionPolicy throw new IllegalArgumentExceptionIndexWriter must be created with SnapshotDeletionPolicythiswriter  writerthissdp  SnapshotDeletionPolicy delPolicythiscommit  sdpsnapshotthisversion  revisionVersioncommitthissourceFiles  revisionFilescommit
public void setTabIdArray(short[] array) {_tabids = array.clone();},public void setTabIdArrayshort array tabids  arrayclone
public UpdateObjectAttributesResult updateObjectAttributes(UpdateObjectAttributesRequest request) {request = beforeClientExecution(request);return executeUpdateObjectAttributes(request);},public UpdateObjectAttributesResult updateObjectAttributesUpdateObjectAttributesRequest request request  beforeClientExecutionrequestreturn executeUpdateObjectAttributesrequest
public GetGameSessionLogUrlResult getGameSessionLogUrl(GetGameSessionLogUrlRequest request) {request = beforeClientExecution(request);return executeGetGameSessionLogUrl(request);},public GetGameSessionLogUrlResult getGameSessionLogUrlGetGameSessionLogUrlRequest request request  beforeClientExecutionrequestreturn executeGetGameSessionLogUrlrequest
public RefCount(T object) {this.object = object;},public RefCountT object thisobject  object
"public ByteBuffer put(int index, byte b) {checkIndex(index);backingArray[offset + index] = b;return this;}",public ByteBuffer putint index byte b checkIndexindexbackingArrayoffset  index  breturn this
"public IntervalSet LOOK(ATNState s, ATNState stopState, RuleContext ctx) {IntervalSet r = new IntervalSet();boolean seeThruPreds = true; PredictionContext lookContext = ctx != null ? PredictionContext.fromRuleContext(s.atn, ctx) : null;_LOOK(s, stopState, lookContext,r, new HashSet<ATNConfig>(), new BitSet(), seeThruPreds, true);return r;}",public IntervalSet LOOKATNState s ATNState stopState RuleContext ctx IntervalSet r  new IntervalSetboolean seeThruPreds  true PredictionContext lookContext  ctx  null  PredictionContextfromRuleContextsatn ctx  nullLOOKs stopState lookContextr new HashSetATNConfig new BitSet seeThruPreds truereturn r
public int getValidationType() {return _validationType;},public int getValidationType return validationType
public DeleteTagCommand tagDelete() {return new DeleteTagCommand(repo);},public DeleteTagCommand tagDelete return new DeleteTagCommandrepo
public SortRescorer(Sort sort) {this.sort = sort;},public SortRescorerSort sort thissort  sort
"public void verifyBelongsToWorkbook(HSSFWorkbook wb) {if(wb.getWorkbook() != _workbook) {throw new IllegalArgumentException(""This Style does not belong to the supplied Workbook. Are you trying to assign a style from one workbook to the cell of a differnt workbook?"");}}",public void verifyBelongsToWorkbookHSSFWorkbook wb ifwbgetWorkbook  workbook throw new IllegalArgumentExceptionThis Style does not belong to the supplied Workbook Are you trying to assign a style from one workbook to the cell of a differnt workbook
"public StringBuffer insert(int index, Object obj) {return insert(index, obj == null ? ""null"" : obj.toString());}",public StringBuffer insertint index Object obj return insertindex obj  null  null  objtoString
public boolean containsKey(CharSequence cs) {if(cs == null)throw new NullPointerException();return false;},public boolean containsKeyCharSequence cs ifcs  nullthrow new NullPointerExceptionreturn false
public int compareTo(HSSFRichTextString r) {return _string.compareTo(r._string);},public int compareToHSSFRichTextString r return stringcompareTorstring
public RequestSpotInstancesRequest(String spotPrice) {setSpotPrice(spotPrice);},public RequestSpotInstancesRequestString spotPrice setSpotPricespotPrice
public ObjectId getNewObjectId() {return newObjectId;},public ObjectId getNewObjectId return newObjectId
public void setDeltaBaseAsOffset(boolean deltaBaseAsOffset) {this.deltaBaseAsOffset = deltaBaseAsOffset;},public void setDeltaBaseAsOffsetboolean deltaBaseAsOffset thisdeltaBaseAsOffset  deltaBaseAsOffset
"public LengthFilterFactory(Map<String, String> args) {super(args);min = requireInt(args, MIN_KEY);max = requireInt(args, MAX_KEY);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public LengthFilterFactoryMapString String args superargsmin  requireIntargs MINKEYmax  requireIntargs MAXKEYif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public TruncateTokenFilter(TokenStream input, int length) {super(input);if (length < 1)throw new IllegalArgumentException(""length parameter must be a positive number: "" + length);this.length = length;}",public TruncateTokenFilterTokenStream input int length superinputif length  1throw new IllegalArgumentExceptionlength parameter must be a positive number   lengththislength  length
public ListDomainsResult listDomains() {return listDomains(new ListDomainsRequest());},public ListDomainsResult listDomains return listDomainsnew ListDomainsRequest
public ArabicStemFilter create(TokenStream input) {return new ArabicStemFilter(input);},public ArabicStemFilter createTokenStream input return new ArabicStemFilterinput
"public PushCommand setRefSpecs(RefSpec... specs) {checkCallable();this.refSpecs.clear();Collections.addAll(refSpecs, specs);return this;}",public PushCommand setRefSpecsRefSpec specs checkCallablethisrefSpecsclearCollectionsaddAllrefSpecs specsreturn this
public BlameGenerator setDiffAlgorithm(DiffAlgorithm algorithm) {diffAlgorithm = algorithm;return this;},public BlameGenerator setDiffAlgorithmDiffAlgorithm algorithm diffAlgorithm  algorithmreturn this
public GroupingSearch setIncludeMaxScore(boolean includeMaxScore) {this.includeMaxScore = includeMaxScore;return this;},public GroupingSearch setIncludeMaxScoreboolean includeMaxScore thisincludeMaxScore  includeMaxScorereturn this
"public Field[] createIndexableFields(Shape shape) {double distErr = SpatialArgs.calcDistanceFromErrPct(shape, distErrPct, ctx);return createIndexableFields(shape, distErr);}",public Field createIndexableFieldsShape shape double distErr  SpatialArgscalcDistanceFromErrPctshape distErrPct ctxreturn createIndexableFieldsshape distErr
public PutMethodResponseResult putMethodResponse(PutMethodResponseRequest request) {request = beforeClientExecution(request);return executePutMethodResponse(request);},public PutMethodResponseResult putMethodResponsePutMethodResponseRequest request request  beforeClientExecutionrequestreturn executePutMethodResponserequest
public LegacyCredentials(Credential legacyCrendential) {this.legacyCredential = legacyCrendential;},public LegacyCredentialsCredential legacyCrendential thislegacyCredential  legacyCrendential
public DescribeFeatureTransformationResult describeFeatureTransformation(DescribeFeatureTransformationRequest request) {request = beforeClientExecution(request);return executeDescribeFeatureTransformation(request);},public DescribeFeatureTransformationResult describeFeatureTransformationDescribeFeatureTransformationRequest request request  beforeClientExecutionrequestreturn executeDescribeFeatureTransformationrequest
public DeleteRouteResult deleteRoute(DeleteRouteRequest request) {request = beforeClientExecution(request);return executeDeleteRoute(request);},public DeleteRouteResult deleteRouteDeleteRouteRequest request request  beforeClientExecutionrequestreturn executeDeleteRouterequest
public AssociatePhoneNumbersWithVoiceConnectorResult associatePhoneNumbersWithVoiceConnector(AssociatePhoneNumbersWithVoiceConnectorRequest request) {request = beforeClientExecution(request);return executeAssociatePhoneNumbersWithVoiceConnector(request);},public AssociatePhoneNumbersWithVoiceConnectorResult associatePhoneNumbersWithVoiceConnectorAssociatePhoneNumbersWithVoiceConnectorRequest request request  beforeClientExecutionrequestreturn executeAssociatePhoneNumbersWithVoiceConnectorrequest
public long ramBytesUsed() {long size = BASE_RAM_BYTES_USED + RamUsageEstimator.shallowSizeOf(blocks);if (blocks.length > 0) {size += (blocks.length - 1) * bytesUsedPerBlock;size += RamUsageEstimator.sizeOf(blocks[blocks.length - 1]);}return size;},public long ramBytesUsed long size  BASERAMBYTESUSED  RamUsageEstimatorshallowSizeOfblocksif blockslength  0 size  blockslength  1  bytesUsedPerBlocksize  RamUsageEstimatorsizeOfblocksblockslength  1return size
public short readShort(){return _in.readShort();},public short readShortreturn inreadShort
public UpdatePipelineNotificationsResult updatePipelineNotifications(UpdatePipelineNotificationsRequest request) {request = beforeClientExecution(request);return executeUpdatePipelineNotifications(request);},public UpdatePipelineNotificationsResult updatePipelineNotificationsUpdatePipelineNotificationsRequest request request  beforeClientExecutionrequestreturn executeUpdatePipelineNotificationsrequest
public StringWriter append(char c) {write(c);return this;},public StringWriter appendchar c writecreturn this
public Iterator<V> iterator() {return new ValueIterator();},public IteratorV iterator return new ValueIterator
public UnitsRecord(RecordInputStream in) {field_1_units = in.readShort();},public UnitsRecordRecordInputStream in field1units  inreadShort
public boolean isEmpty() {return first;},public boolean isEmpty return first
"public String toString() {return ""ANY_DIFF""; }",public String toString return ANYDIFF 
public UpdateDomainNameResult updateDomainName(UpdateDomainNameRequest request) {request = beforeClientExecution(request);return executeUpdateDomainName(request);},public UpdateDomainNameResult updateDomainNameUpdateDomainNameRequest request request  beforeClientExecutionrequestreturn executeUpdateDomainNamerequest
public DeleteSnapshotRequest(String snapshotId) {setSnapshotId(snapshotId);},public DeleteSnapshotRequestString snapshotId setSnapshotIdsnapshotId
"public void readFully(byte[] buf) {readFully(buf, 0, buf.length);}",public void readFullybyte buf readFullybuf 0 buflength
public SliceReader(IntBlockPool pool) {this.pool = pool;},public SliceReaderIntBlockPool pool thispool  pool
public void setDeltaSearchMemoryLimit(long memoryLimit) {deltaSearchMemoryLimit = memoryLimit;},public void setDeltaSearchMemoryLimitlong memoryLimit deltaSearchMemoryLimit  memoryLimit
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[BOOKBOOL]\n"");buffer.append(""    .savelinkvalues  = "").append(Integer.toHexString(getSaveLinkValues())).append(""\n"");buffer.append(""[/BOOKBOOL]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendBOOKBOOLnbufferappend    savelinkvalues   appendIntegertoHexStringgetSaveLinkValuesappendnbufferappendBOOKBOOLnreturn buffertoString
public DescribeTransitGatewayAttachmentsResult describeTransitGatewayAttachments(DescribeTransitGatewayAttachmentsRequest request) {request = beforeClientExecution(request);return executeDescribeTransitGatewayAttachments(request);},public DescribeTransitGatewayAttachmentsResult describeTransitGatewayAttachmentsDescribeTransitGatewayAttachmentsRequest request request  beforeClientExecutionrequestreturn executeDescribeTransitGatewayAttachmentsrequest
public CreateVpcResult createVpc(CreateVpcRequest request) {request = beforeClientExecution(request);return executeCreateVpc(request);},public CreateVpcResult createVpcCreateVpcRequest request request  beforeClientExecutionrequestreturn executeCreateVpcrequest
public DescribeElasticGpusResult describeElasticGpus(DescribeElasticGpusRequest request) {request = beforeClientExecution(request);return executeDescribeElasticGpus(request);},public DescribeElasticGpusResult describeElasticGpusDescribeElasticGpusRequest request request  beforeClientExecutionrequestreturn executeDescribeElasticGpusrequest
"public IntBuffer put(int c) {if (position == limit) {throw new BufferOverflowException();}byteBuffer.putInt(position++ * SizeOf.INT, c);return this;}",public IntBuffer putint c if position  limit throw new BufferOverflowExceptionbyteBufferputIntposition  SizeOfINT creturn this
public UpdateEndpointsBatchResult updateEndpointsBatch(UpdateEndpointsBatchRequest request) {request = beforeClientExecution(request);return executeUpdateEndpointsBatch(request);},public UpdateEndpointsBatchResult updateEndpointsBatchUpdateEndpointsBatchRequest request request  beforeClientExecutionrequestreturn executeUpdateEndpointsBatchrequest
"public void fromRaw(byte[] bs, int p) {w1 = NB.decodeInt32(bs, p);w2 = NB.decodeInt32(bs, p + 4);w3 = NB.decodeInt32(bs, p + 8);w4 = NB.decodeInt32(bs, p + 12);w5 = NB.decodeInt32(bs, p + 16);}",public void fromRawbyte bs int p w1  NBdecodeInt32bs pw2  NBdecodeInt32bs p  4w3  NBdecodeInt32bs p  8w4  NBdecodeInt32bs p  12w5  NBdecodeInt32bs p  16
"public static OpenSshConfig get(FS fs) {File home = fs.userHome();if (home == null)home = new File(""."").getAbsoluteFile(); final File config = new File(new File(home, SshConstants.SSH_DIR),SshConstants.CONFIG);return new OpenSshConfig(home, config);}",public static OpenSshConfig getFS fs File home  fsuserHomeif home  nullhome  new FilegetAbsoluteFile final File config  new Filenew Filehome SshConstantsSSHDIRSshConstantsCONFIGreturn new OpenSshConfighome config
public VCenterRecord(RecordInputStream in) {field_1_vcenter = in.readShort();},public VCenterRecordRecordInputStream in field1vcenter  inreadShort
"public synchronized InputStream obtainFile(String sessionID, String source, String fileName) throws IOException {ensureOpen();ReplicationSession session = sessions.get(sessionID);if (session != null && session.isExpired(expirationThresholdMilllis)) {releaseSession(sessionID);session = null;}if (session == null) {throw new SessionExpiredException(""session ("" + sessionID + "") expired while obtaining file: source="" + source+ "" file="" + fileName);}sessions.get(sessionID).markAccessed();return session.revision.revision.open(source, fileName);}",public synchronized InputStream obtainFileString sessionID String source String fileName throws IOException ensureOpenReplicationSession session  sessionsgetsessionIDif session  null  sessionisExpiredexpirationThresholdMilllis releaseSessionsessionIDsession  nullif session  null throw new SessionExpiredExceptionsession   sessionID   expired while obtaining file source  source  file  fileNamesessionsgetsessionIDmarkAccessedreturn sessionrevisionrevisionopensource fileName
public DownloadDefaultKeyPairResult downloadDefaultKeyPair(DownloadDefaultKeyPairRequest request) {request = beforeClientExecution(request);return executeDownloadDefaultKeyPair(request);},public DownloadDefaultKeyPairResult downloadDefaultKeyPairDownloadDefaultKeyPairRequest request request  beforeClientExecutionrequestreturn executeDownloadDefaultKeyPairrequest
public DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations(DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest request) {request = beforeClientExecution(request);return executeDescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations(request);},public DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsResult describeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsDescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsRequest request request  beforeClientExecutionrequestreturn executeDescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociationsrequest
public ResetEbsDefaultKmsKeyIdResult resetEbsDefaultKmsKeyId(ResetEbsDefaultKmsKeyIdRequest request) {request = beforeClientExecution(request);return executeResetEbsDefaultKmsKeyId(request);},public ResetEbsDefaultKmsKeyIdResult resetEbsDefaultKmsKeyIdResetEbsDefaultKmsKeyIdRequest request request  beforeClientExecutionrequestreturn executeResetEbsDefaultKmsKeyIdrequest
public int getPropertiesPerBlock() {return bigBlockSize / POIFSConstants.PROPERTY_SIZE;},public int getPropertiesPerBlock return bigBlockSize  POIFSConstantsPROPERTYSIZE
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval numberVE) {return this.evaluate(srcRowIndex, srcColumnIndex, numberVE, null);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval numberVE return thisevaluatesrcRowIndex srcColumnIndex numberVE null
public GetFindingsStatisticsResult getFindingsStatistics(GetFindingsStatisticsRequest request) {request = beforeClientExecution(request);return executeGetFindingsStatistics(request);},public GetFindingsStatisticsResult getFindingsStatisticsGetFindingsStatisticsRequest request request  beforeClientExecutionrequestreturn executeGetFindingsStatisticsrequest
public DBCluster modifyDBCluster(ModifyDBClusterRequest request) {request = beforeClientExecution(request);return executeModifyDBCluster(request);},public DBCluster modifyDBClusterModifyDBClusterRequest request request  beforeClientExecutionrequestreturn executeModifyDBClusterrequest
"public LimitTokenCountFilterFactory(Map<String, String> args) {super(args);maxTokenCount = requireInt(args, MAX_TOKEN_COUNT_KEY);consumeAllTokens = getBoolean(args, CONSUME_ALL_TOKENS_KEY, false);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public LimitTokenCountFilterFactoryMapString String args superargsmaxTokenCount  requireIntargs MAXTOKENCOUNTKEYconsumeAllTokens  getBooleanargs CONSUMEALLTOKENSKEY falseif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public MatchNoDocsQuery build(QueryNode queryNode) throws QueryNodeException {if (!(queryNode instanceof MatchNoDocsQueryNode)) {throw new QueryNodeException(new MessageImpl(QueryParserMessages.LUCENE_QUERY_CONVERSION_ERROR, queryNode.toQueryString(new EscapeQuerySyntaxImpl()), queryNode.getClass().getName()));}return new MatchNoDocsQuery();}",public MatchNoDocsQuery buildQueryNode queryNode throws QueryNodeException if queryNode instanceof MatchNoDocsQueryNode throw new QueryNodeExceptionnew MessageImplQueryParserMessagesLUCENEQUERYCONVERSIONERROR queryNodetoQueryStringnew EscapeQuerySyntaxImpl queryNodegetClassgetNamereturn new MatchNoDocsQuery
"public GetUserPolicyRequest(String userName, String policyName) {setUserName(userName);setPolicyName(policyName);}",public GetUserPolicyRequestString userName String policyName setUserNameuserNamesetPolicyNamepolicyName
public Cluster rotateEncryptionKey(RotateEncryptionKeyRequest request) {request = beforeClientExecution(request);return executeRotateEncryptionKey(request);},public Cluster rotateEncryptionKeyRotateEncryptionKeyRequest request request  beforeClientExecutionrequestreturn executeRotateEncryptionKeyrequest
public int getLinesAdded() {return nAdded;},public int getLinesAdded return nAdded
"public List<Token> getHiddenTokensToLeft(int tokenIndex, int channel) {lazyInit();if ( tokenIndex<0 || tokenIndex>=tokens.size() ) {throw new IndexOutOfBoundsException(tokenIndex+"" not in 0..""+(tokens.size()-1));}if (tokenIndex == 0) {return null;}int prevOnChannel =previousTokenOnChannel(tokenIndex - 1, Lexer.DEFAULT_TOKEN_CHANNEL);if ( prevOnChannel == tokenIndex - 1 ) return null;int from = prevOnChannel+1;int to = tokenIndex-1;return filterForChannel(from, to, channel);}",public ListToken getHiddenTokensToLeftint tokenIndex int channel lazyInitif  tokenIndex0  tokenIndextokenssize  throw new IndexOutOfBoundsExceptiontokenIndex not in 0tokenssize1if tokenIndex  0 return nullint prevOnChannel previousTokenOnChanneltokenIndex  1 LexerDEFAULTTOKENCHANNELif  prevOnChannel  tokenIndex  1  return nullint from  prevOnChannel1int to  tokenIndex1return filterForChannelfrom to channel
public ValidDBInstanceModificationsMessage describeValidDBInstanceModifications(DescribeValidDBInstanceModificationsRequest request) {request = beforeClientExecution(request);return executeDescribeValidDBInstanceModifications(request);},public ValidDBInstanceModificationsMessage describeValidDBInstanceModificationsDescribeValidDBInstanceModificationsRequest request request  beforeClientExecutionrequestreturn executeDescribeValidDBInstanceModificationsrequest
public final void add(RevFlag flag) {flags |= flag.mask;},public final void addRevFlag flag flags  flagmask
public void clear() {Iterator<E> it = iterator();while (it.hasNext()) {it.next();it.remove();}},public void clear IteratorE it  iteratorwhile ithasNext itnextitremove
public RegisterImageResult registerImage(RegisterImageRequest request) {request = beforeClientExecution(request);return executeRegisterImage(request);},public RegisterImageResult registerImageRegisterImageRequest request request  beforeClientExecutionrequestreturn executeRegisterImagerequest
public boolean equals(Object other) {return sameClassAs(other) &&term.equals(((TermQuery) other).term);},public boolean equalsObject other return sameClassAsother termequalsTermQuery otherterm
"public URI(String scheme, String authority, String path, String query,String fragment) throws URISyntaxException {if (scheme != null && path != null && !path.isEmpty() && path.charAt(0) != '/') {throw new URISyntaxException(path, ""Relative path"");}StringBuilder uri = new StringBuilder();if (scheme != null) {uri.append(scheme);uri.append(':');}if (authority != null) {uri.append("""");AUTHORITY_ENCODER.appendEncoded(uri, authority);}if (path != null) {PATH_ENCODER.appendEncoded(uri, path);}if (query != null) {uri.append('?');ALL_LEGAL_ENCODER.appendEncoded(uri, query);}if (fragment != null) {uri.append('#');ALL_LEGAL_ENCODER.appendEncoded(uri, fragment);}parseURI(uri.toString(), false);}",public URIString scheme String authority String path String queryString fragment throws URISyntaxException if scheme  null  path  null  pathisEmpty  pathcharAt0   throw new URISyntaxExceptionpath Relative pathStringBuilder uri  new StringBuilderif scheme  null uriappendschemeuriappendif authority  null uriappendAUTHORITYENCODERappendEncodeduri authorityif path  null PATHENCODERappendEncodeduri pathif query  null uriappendALLLEGALENCODERappendEncodeduri queryif fragment  null uriappendALLLEGALENCODERappendEncodeduri fragmentparseURIuritoString false
"public BlameGenerator(Repository repository, String path) {this.repository = repository;this.resultPath = PathFilter.create(path);idBuf = new MutableObjectId();setFollowFileRenames(true);initRevPool(false);remaining = -1;}",public BlameGeneratorRepository repository String path thisrepository  repositorythisresultPath  PathFiltercreatepathidBuf  new MutableObjectIdsetFollowFileRenamestrueinitRevPoolfalseremaining  1
"public synchronized void writeTo(OutputStream out) throws IOException {out.write(buf, 0, count);}",public synchronized void writeToOutputStream out throws IOException outwritebuf 0 count
"public DeletableItem(String name, java.util.List<Attribute> attributes) {setName(name);setAttributes(attributes);}",public DeletableItemString name javautilListAttribute attributes setNamenamesetAttributesattributes
public DescribeGroupResult describeGroup(DescribeGroupRequest request) {request = beforeClientExecution(request);return executeDescribeGroup(request);},public DescribeGroupResult describeGroupDescribeGroupRequest request request  beforeClientExecutionrequestreturn executeDescribeGrouprequest
public EnableVpcClassicLinkResult enableVpcClassicLink(EnableVpcClassicLinkRequest request) {request = beforeClientExecution(request);return executeEnableVpcClassicLink(request);},public EnableVpcClassicLinkResult enableVpcClassicLinkEnableVpcClassicLinkRequest request request  beforeClientExecutionrequestreturn executeEnableVpcClassicLinkrequest
public DescribeStacksResult describeStacks() {return describeStacks(new DescribeStacksRequest());},public DescribeStacksResult describeStacks return describeStacksnew DescribeStacksRequest
public CharBuffer duplicate() {return copy(this);},public CharBuffer duplicate return copythis
"public static double mod(double n, double d) {if (d == 0) {return Double.NaN;}else if (sign(n) == sign(d)) {return n % d;}else {return ((n % d) + d) % d;}}",public static double moddouble n double d if d  0 return DoubleNaNelse if signn  signd return n  delse return n  d  d  d
"public static String getLocalizedMessage(String key, Locale locale) {Object message = getResourceBundleObject(key, locale);if (message == null) {return ""Message with key:"" + key + "" and locale: "" + locale+ "" not found."";}return message.toString();}",public static String getLocalizedMessageString key Locale locale Object message  getResourceBundleObjectkey localeif message  null return Message with key  key   and locale   locale  not foundreturn messagetoString
"public CharSequence toQueryString(EscapeQuerySyntax escapeSyntaxParser) {if (getChild() == null)return """";return getChild().toQueryString(escapeSyntaxParser) + ""^""+ getValueString();}",public CharSequence toQueryStringEscapeQuerySyntax escapeSyntaxParser if getChild  nullreturn return getChildtoQueryStringescapeSyntaxParser   getValueString
"public CharSequence toQueryString(EscapeQuerySyntax escapeSyntaxParser) {if (getChild() == null)return """";return ""( "" + getChild().toQueryString(escapeSyntaxParser) + "" )"";}",public CharSequence toQueryStringEscapeQuerySyntax escapeSyntaxParser if getChild  nullreturn return    getChildtoQueryStringescapeSyntaxParser   
public GetInvalidationResult getInvalidation(GetInvalidationRequest request) {request = beforeClientExecution(request);return executeGetInvalidation(request);},public GetInvalidationResult getInvalidationGetInvalidationRequest request request  beforeClientExecutionrequestreturn executeGetInvalidationrequest
"public String formatAsString() {return formatAsString(null, false);}",public String formatAsString return formatAsStringnull false
"public final int prefixCompare(byte[] bs, int p) {int cmp;cmp = NB.compareUInt32(w1, mask(1, NB.decodeInt32(bs, p)));if (cmp != 0)return cmp;cmp = NB.compareUInt32(w2, mask(2, NB.decodeInt32(bs, p + 4)));if (cmp != 0)return cmp;cmp = NB.compareUInt32(w3, mask(3, NB.decodeInt32(bs, p + 8)));if (cmp != 0)return cmp;cmp = NB.compareUInt32(w4, mask(4, NB.decodeInt32(bs, p + 12)));if (cmp != 0)return cmp;return NB.compareUInt32(w5, mask(5, NB.decodeInt32(bs, p + 16)));}",public final int prefixComparebyte bs int p int cmpcmp  NBcompareUInt32w1 mask1 NBdecodeInt32bs pif cmp  0return cmpcmp  NBcompareUInt32w2 mask2 NBdecodeInt32bs p  4if cmp  0return cmpcmp  NBcompareUInt32w3 mask3 NBdecodeInt32bs p  8if cmp  0return cmpcmp  NBcompareUInt32w4 mask4 NBdecodeInt32bs p  12if cmp  0return cmpreturn NBcompareUInt32w5 mask5 NBdecodeInt32bs p  16
public AddApplicationInputProcessingConfigurationResult addApplicationInputProcessingConfiguration(AddApplicationInputProcessingConfigurationRequest request) {request = beforeClientExecution(request);return executeAddApplicationInputProcessingConfiguration(request);},public AddApplicationInputProcessingConfigurationResult addApplicationInputProcessingConfigurationAddApplicationInputProcessingConfigurationRequest request request  beforeClientExecutionrequestreturn executeAddApplicationInputProcessingConfigurationrequest
"public static TermRangeQuery newStringRange(String field, String lowerTerm, String upperTerm, boolean includeLower, boolean includeUpper) {BytesRef lower = lowerTerm == null ? null : new BytesRef(lowerTerm);BytesRef upper = upperTerm == null ? null : new BytesRef(upperTerm);return new TermRangeQuery(field, lower, upper, includeLower, includeUpper);}",public static TermRangeQuery newStringRangeString field String lowerTerm String upperTerm boolean includeLower boolean includeUpper BytesRef lower  lowerTerm  null  null  new BytesReflowerTermBytesRef upper  upperTerm  null  null  new BytesRefupperTermreturn new TermRangeQueryfield lower upper includeLower includeUpper
"static public double fv(double r, int nper, double pmt, double pv, int type) {return -(pv * Math.pow(1 + r, nper) + pmt * (1+r*type) * (Math.pow(1 + r, nper) - 1) / r);}",static public double fvdouble r int nper double pmt double pv int type return pv  Mathpow1  r nper  pmt  1rtype  Mathpow1  r nper  1  r
"public int checkExternSheet(int firstSheetIndex, int lastSheetIndex) {int thisWbIndex = -1; for (int i = 0; i < _externalBookBlocks.length; i++) {SupBookRecord ebr = _externalBookBlocks[i].getExternalBookRecord();if (ebr.isInternalReferences()) {thisWbIndex = i;break;}}if (thisWbIndex < 0) {throw new RuntimeException(""Could not find 'internal references' EXTERNALBOOK"");}int i = _externSheetRecord.getRefIxForSheet(thisWbIndex, firstSheetIndex, lastSheetIndex);if (i >= 0) {return i;}return _externSheetRecord.addRef(thisWbIndex, firstSheetIndex, lastSheetIndex);}",public int checkExternSheetint firstSheetIndex int lastSheetIndex int thisWbIndex  1 for int i  0 i  externalBookBlockslength i SupBookRecord ebr  externalBookBlocksigetExternalBookRecordif ebrisInternalReferences thisWbIndex  ibreakif thisWbIndex  0 throw new RuntimeExceptionCould not find internal references EXTERNALBOOKint i  externSheetRecordgetRefIxForSheetthisWbIndex firstSheetIndex lastSheetIndexif i  0 return ireturn externSheetRecordaddRefthisWbIndex firstSheetIndex lastSheetIndex
public DescribeSentimentDetectionJobResult describeSentimentDetectionJob(DescribeSentimentDetectionJobRequest request) {request = beforeClientExecution(request);return executeDescribeSentimentDetectionJob(request);},public DescribeSentimentDetectionJobResult describeSentimentDetectionJobDescribeSentimentDetectionJobRequest request request  beforeClientExecutionrequestreturn executeDescribeSentimentDetectionJobrequest
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[UNITS]\n"");buffer.append(""    .units                = "").append(""0x"").append(HexDump.toHex(  getUnits ())).append("" ("").append( getUnits() ).append("" )"");buffer.append(System.getProperty(""line.separator""));buffer.append(""[/UNITS]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendUNITSnbufferappend    units                 append0xappendHexDumptoHex  getUnits append append getUnits append bufferappendSystemgetPropertylineseparatorbufferappendUNITSnreturn buffertoString
"public NavigableMap<K, V> tailMap(K from, boolean inclusive) {Bound fromBound = inclusive ? INCLUSIVE : EXCLUSIVE;return subMap(from, fromBound, null, NO_BOUND);}",public NavigableMapK V tailMapK from boolean inclusive Bound fromBound  inclusive  INCLUSIVE  EXCLUSIVEreturn subMapfrom fromBound null NOBOUND
"public static int compareTo(Ref o1, Ref o2) {return o1.getName().compareTo(o2.getName());}",public static int compareToRef o1 Ref o2 return o1getNamecompareToo2getName
public PutEventsConfigurationResult putEventsConfiguration(PutEventsConfigurationRequest request) {request = beforeClientExecution(request);return executePutEventsConfiguration(request);},public PutEventsConfigurationResult putEventsConfigurationPutEventsConfigurationRequest request request  beforeClientExecutionrequestreturn executePutEventsConfigurationrequest
public DetachFromIndexResult detachFromIndex(DetachFromIndexRequest request) {request = beforeClientExecution(request);return executeDetachFromIndex(request);},public DetachFromIndexResult detachFromIndexDetachFromIndexRequest request request  beforeClientExecutionrequestreturn executeDetachFromIndexrequest
public RebaseCommand rebase() {return new RebaseCommand(repo);},public RebaseCommand rebase return new RebaseCommandrepo
"public SearchGroup<T> next() {assert iter.hasNext();final SearchGroup<T> group = iter.next();if (group.sortValues == null) {throw new IllegalArgumentException(""group.sortValues is null; you must pass fillFields=true to the first pass collector"");}return group;}",public SearchGroupT next assert iterhasNextfinal SearchGroupT group  iternextif groupsortValues  null throw new IllegalArgumentExceptiongroupsortValues is null you must pass fillFieldstrue to the first pass collectorreturn group
public UpdateMLModelResult updateMLModel(UpdateMLModelRequest request) {request = beforeClientExecution(request);return executeUpdateMLModel(request);},public UpdateMLModelResult updateMLModelUpdateMLModelRequest request request  beforeClientExecutionrequestreturn executeUpdateMLModelrequest
public CreateIPSetResult createIPSet(CreateIPSetRequest request) {request = beforeClientExecution(request);return executeCreateIPSet(request);},public CreateIPSetResult createIPSetCreateIPSetRequest request request  beforeClientExecutionrequestreturn executeCreateIPSetrequest
public FieldDateResolutionFCListener(QueryConfigHandler config) {this.config = config;},public FieldDateResolutionFCListenerQueryConfigHandler config thisconfig  config
@Override public boolean containsValue(Object value) {HashMapEntry[] tab = table;int len = tab.length;if (value == null) {for (int i = 0; i < len; i++) {for (HashMapEntry e = tab[i]; e != null; e = e.next) {if (e.value == null) {return true;}}}return entryForNullKey != null && entryForNullKey.value == null;}for (int i = 0; i < len; i++) {for (HashMapEntry e = tab[i]; e != null; e = e.next) {if (value.equals(e.value)) {return true;}}}return entryForNullKey != null && value.equals(entryForNullKey.value);},Override public boolean containsValueObject value HashMapEntry tab  tableint len  tablengthif value  null for int i  0 i  len i for HashMapEntry e  tabi e  null e  enext if evalue  null return truereturn entryForNullKey  null  entryForNullKeyvalue  nullfor int i  0 i  len i for HashMapEntry e  tabi e  null e  enext if valueequalsevalue return truereturn entryForNullKey  null  valueequalsentryForNullKeyvalue
public DescribeWorkspaceBundlesResult describeWorkspaceBundles(DescribeWorkspaceBundlesRequest request) {request = beforeClientExecution(request);return executeDescribeWorkspaceBundles(request);},public DescribeWorkspaceBundlesResult describeWorkspaceBundlesDescribeWorkspaceBundlesRequest request request  beforeClientExecutionrequestreturn executeDescribeWorkspaceBundlesrequest
public PostingsEnum reset(int[] postings) {this.postings = postings;upto = -1;return this;},public PostingsEnum resetint postings thispostings  postingsupto  1return this
public void serialize(LittleEndianOutput out) {out.writeShort(sid); out.writeShort(_reserved0);out.writeInt(_engineId);},public void serializeLittleEndianOutput out outwriteShortsid outwriteShortreserved0outwriteIntengineId
public static CharBuffer allocate(int capacity) {if (capacity < 0) {throw new IllegalArgumentException();}return new ReadWriteCharArrayBuffer(capacity);},public static CharBuffer allocateint capacity if capacity  0 throw new IllegalArgumentExceptionreturn new ReadWriteCharArrayBuffercapacity
"public String toFormulaString(String[] operands) {StringBuilder buffer = new StringBuilder();buffer.append(operands[ 0 ]);buffer.append("">="");buffer.append(operands[ 1 ]);return buffer.toString();}",public String toFormulaStringString operands StringBuilder buffer  new StringBuilderbufferappendoperands 0 bufferappendbufferappendoperands 1 return buffertoString
public DeletePipelineResult deletePipeline(DeletePipelineRequest request) {request = beforeClientExecution(request);return executeDeletePipeline(request);},public DeletePipelineResult deletePipelineDeletePipelineRequest request request  beforeClientExecutionrequestreturn executeDeletePipelinerequest
public InterfaceHdrRecord(int codePage) {_codepage = codePage;},public InterfaceHdrRecordint codePage codepage  codePage
public DescribeScalingParametersResult describeScalingParameters(DescribeScalingParametersRequest request) {request = beforeClientExecution(request);return executeDescribeScalingParameters(request);},public DescribeScalingParametersResult describeScalingParametersDescribeScalingParametersRequest request request  beforeClientExecutionrequestreturn executeDescribeScalingParametersrequest
"public Entry<K, V> higherEntry(K key) {return immutableCopy(findBounded(key, HIGHER));}",public EntryK V higherEntryK key return immutableCopyfindBoundedkey HIGHER
public CreateSpotDatafeedSubscriptionRequest(String bucket) {setBucket(bucket);},public CreateSpotDatafeedSubscriptionRequestString bucket setBucketbucket
public String getLocalizedMessage() {return getLocalizedMessage(Locale.getDefault());},public String getLocalizedMessage return getLocalizedMessageLocalegetDefault
public UDFFinder getUDFFinder(){return _uBook.getUDFFinder();},public UDFFinder getUDFFinderreturn uBookgetUDFFinder
"public ExternalName getExternalName(String nameName, String sheetName, int externalWorkbookNumber) {throw new IllegalStateException(""XSSF-style external names are not supported for HSSF"");}",public ExternalName getExternalNameString nameName String sheetName int externalWorkbookNumber throw new IllegalStateExceptionXSSFstyle external names are not supported for HSSF
"public OldFormulaRecord(RecordInputStream ris) {super(ris, ris.getSid() == biff2_sid);if (isBiff2()) {field_4_value = ris.readDouble();} else {long valueLongBits  = ris.readLong();specialCachedValue = FormulaSpecialCachedValue.create(valueLongBits);if (specialCachedValue == null) {field_4_value = Double.longBitsToDouble(valueLongBits);}}if (isBiff2()) {field_5_options = (short)ris.readUByte();} else {field_5_options = ris.readShort();}int expression_len = ris.readShort();int nBytesAvailable = ris.available();field_6_parsed_expr = Formula.read(expression_len, ris, nBytesAvailable);}",public OldFormulaRecordRecordInputStream ris superris risgetSid  biff2sidif isBiff2 field4value  risreadDouble else long valueLongBits   risreadLongspecialCachedValue  FormulaSpecialCachedValuecreatevalueLongBitsif specialCachedValue  null field4value  DoublelongBitsToDoublevalueLongBitsif isBiff2 field5options  shortrisreadUByte else field5options  risreadShortint expressionlen  risreadShortint nBytesAvailable  risavailablefield6parsedexpr  Formulareadexpressionlen ris nBytesAvailable
"public int stem(char s[], int len) {assert s.length >= len + 1 : ""this stemmer requires an oversized array of at least 1"";len = plural.apply(s, len);len = unification.apply(s, len);len = adverb.apply(s, len);int oldlen;do {oldlen = len;len = augmentative.apply(s, len);} while (len != oldlen);oldlen = len;len = noun.apply(s, len);if (len == oldlen) { len = verb.apply(s, len);}len = vowel.apply(s, len);for (int i = 0; i < len; i++)switch(s[i]) {case 'á': s[i] = 'a'; break;case 'é':case 'ê': s[i] = 'e'; break;case 'í': s[i] = 'i'; break;case 'ó': s[i] = 'o'; break;case 'ú': s[i] = 'u'; break;}return len;}",public int stemchar s int len assert slength  len  1  this stemmer requires an oversized array of at least 1len  pluralapplys lenlen  unificationapplys lenlen  adverbapplys lenint oldlendo oldlen  lenlen  augmentativeapplys len while len  oldlenoldlen  lenlen  nounapplys lenif len  oldlen  len  verbapplys lenlen  vowelapplys lenfor int i  0 i  len iswitchsi case á si  a breakcase écase ê si  e breakcase í si  i breakcase ó si  o breakcase ú si  u breakreturn len
"public boolean sameProperties(FontRecord other) {returnfield_1_font_height         == other.field_1_font_height &&field_2_attributes          == other.field_2_attributes &&field_3_color_palette_index == other.field_3_color_palette_index &&field_4_bold_weight         == other.field_4_bold_weight &&field_5_super_sub_script    == other.field_5_super_sub_script &&field_6_underline           == other.field_6_underline &&field_7_family              == other.field_7_family &&field_8_charset             == other.field_8_charset &&field_9_zero                == other.field_9_zero &&Objects.equals(this.field_11_font_name, other.field_11_font_name);}",public boolean samePropertiesFontRecord other returnfield1fontheight          otherfield1fontheight field2attributes           otherfield2attributes field3colorpaletteindex  otherfield3colorpaletteindex field4boldweight          otherfield4boldweight field5supersubscript     otherfield5supersubscript field6underline            otherfield6underline field7family               otherfield7family field8charset              otherfield8charset field9zero                 otherfield9zero Objectsequalsthisfield11fontname otherfield11fontname
public String toFormulaString() {return FormulaError.REF.getString();},public String toFormulaString return FormulaErrorREFgetString
public StartTextDetectionResult startTextDetection(StartTextDetectionRequest request) {request = beforeClientExecution(request);return executeStartTextDetection(request);},public StartTextDetectionResult startTextDetectionStartTextDetectionRequest request request  beforeClientExecutionrequestreturn executeStartTextDetectionrequest
"public DeleteMessageBatchRequestEntry(String id, String receiptHandle) {setId(id);setReceiptHandle(receiptHandle);}",public DeleteMessageBatchRequestEntryString id String receiptHandle setIdidsetReceiptHandlereceiptHandle
"public PatternCaptureGroupTokenFilter create(TokenStream input) {return new PatternCaptureGroupTokenFilter(input, preserveOriginal, pattern);}",public PatternCaptureGroupTokenFilter createTokenStream input return new PatternCaptureGroupTokenFilterinput preserveOriginal pattern
"public SigningCertificate(String userName, String certificateId, String certificateBody, StatusType status) {setUserName(userName);setCertificateId(certificateId);setCertificateBody(certificateBody);setStatus(status.toString());}",public SigningCertificateString userName String certificateId String certificateBody StatusType status setUserNameuserNamesetCertificateIdcertificateIdsetCertificateBodycertificateBodysetStatusstatustoString
"public DistributionConfig(String callerReference, Boolean enabled) {setCallerReference(callerReference);setEnabled(enabled);}",public DistributionConfigString callerReference Boolean enabled setCallerReferencecallerReferencesetEnabledenabled
public FastCharStream(Reader r) {input = r;},public FastCharStreamReader r input  r
public int end(int group) {ensureMatch();return matchOffsets[(group * 2) + 1];},public int endint group ensureMatchreturn matchOffsetsgroup  2  1
"public final Map.Entry<K, V> next() { return nextEntry(); }",public final MapEntryK V next  return nextEntry 
public BlameCommand setTextComparator(RawTextComparator textComparator) {this.textComparator = textComparator;return this;},public BlameCommand setTextComparatorRawTextComparator textComparator thistextComparator  textComparatorreturn this
public final T pop() {if (size > 0) {T result = heap[1];       heap[1] = heap[size];     heap[size] = null;        size--;downHeap(1);              return result;} else {return null;}},public final T pop if size  0 T result  heap1       heap1  heapsize     heapsize  null        sizedownHeap1              return result else return null
"public String toString() {return getClass().getSimpleName() + ""(fields="" + fields.size() + "",delegate="" + postingsReader + "")"";}",public String toString return getClassgetSimpleName  fields  fieldssize  delegate  postingsReader  
public static String shortenRefName(String noteRefName) {if (noteRefName.startsWith(Constants.R_NOTES))return noteRefName.substring(Constants.R_NOTES.length());return noteRefName;},public static String shortenRefNameString noteRefName if noteRefNamestartsWithConstantsRNOTESreturn noteRefNamesubstringConstantsRNOTESlengthreturn noteRefName
public DescribeDomainsResult describeDomains() {return describeDomains(new DescribeDomainsRequest());},public DescribeDomainsResult describeDomains return describeDomainsnew DescribeDomainsRequest
public int available() {return ccis.available();},public int available return ccisavailable
public GetContentModerationResult getContentModeration(GetContentModerationRequest request) {request = beforeClientExecution(request);return executeGetContentModeration(request);},public GetContentModerationResult getContentModerationGetContentModerationRequest request request  beforeClientExecutionrequestreturn executeGetContentModerationrequest
public PrintStream(OutputStream out) {super(out);if (out == null) {throw new NullPointerException();}},public PrintStreamOutputStream out superoutif out  null throw new NullPointerException
public long ramBytesUsed() {long ramBytesUsed = postingsReader.ramBytesUsed();for (TermsReader r : fields.values()) {ramBytesUsed += r.ramBytesUsed();}return ramBytesUsed;},public long ramBytesUsed long ramBytesUsed  postingsReaderramBytesUsedfor TermsReader r  fieldsvalues ramBytesUsed  rramBytesUsedreturn ramBytesUsed
public GetIntegrationResult getIntegration(GetIntegrationRequest request) {request = beforeClientExecution(request);return executeGetIntegration(request);},public GetIntegrationResult getIntegrationGetIntegrationRequest request request  beforeClientExecutionrequestreturn executeGetIntegrationrequest
public void setVisibility(int v) {if (getVisibility() != v) {super.setVisibility(v);if (mIndeterminate) {if (v == GONE || v == INVISIBLE) {stopAnimation();} else {startAnimation();}}}},public void setVisibilityint v if getVisibility  v supersetVisibilityvif mIndeterminate if v  GONE  v  INVISIBLE stopAnimation else startAnimation
"public boolean matches(char s[], int len) {if (!super.matches(s, len))return false;for (int i = 0; i < exceptions.length; i++)if (endsWith(s, len, exceptions[i]))return false;return true;}",public boolean matcheschar s int len if supermatchess lenreturn falsefor int i  0 i  exceptionslength iif endsWiths len exceptionsireturn falsereturn true
public DescribeFleetCapacityResult describeFleetCapacity(DescribeFleetCapacityRequest request) {request = beforeClientExecution(request);return executeDescribeFleetCapacity(request);},public DescribeFleetCapacityResult describeFleetCapacityDescribeFleetCapacityRequest request request  beforeClientExecutionrequestreturn executeDescribeFleetCapacityrequest
public UploadPackInternalServerErrorException(Throwable why) {initCause(why);},public UploadPackInternalServerErrorExceptionThrowable why initCausewhy
public GetNetworkResult getNetwork(GetNetworkRequest request) {request = beforeClientExecution(request);return executeGetNetwork(request);},public GetNetworkResult getNetworkGetNetworkRequest request request  beforeClientExecutionrequestreturn executeGetNetworkrequest
public AllocatePrivateVirtualInterfaceResult allocatePrivateVirtualInterface(AllocatePrivateVirtualInterfaceRequest request) {request = beforeClientExecution(request);return executeAllocatePrivateVirtualInterface(request);},public AllocatePrivateVirtualInterfaceResult allocatePrivateVirtualInterfaceAllocatePrivateVirtualInterfaceRequest request request  beforeClientExecutionrequestreturn executeAllocatePrivateVirtualInterfacerequest
public GetDeploymentResult getDeployment(GetDeploymentRequest request) {request = beforeClientExecution(request);return executeGetDeployment(request);},public GetDeploymentResult getDeploymentGetDeploymentRequest request request  beforeClientExecutionrequestreturn executeGetDeploymentrequest
"public UpdateRepoAuthorizationRequest() {super(""cr"", ""2016-06-07"", ""UpdateRepoAuthorization"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/authorizations/[AuthorizeId]"");setMethod(MethodType.POST);}",public UpdateRepoAuthorizationRequest supercr 20160607 UpdateRepoAuthorization crsetUriPatternreposRepoNamespaceRepoNameauthorizationsAuthorizeIdsetMethodMethodTypePOST
"public void foldToASCII(char[] input, int length){final int maxSizeNeeded = 4 * length;if (output.length < maxSizeNeeded) {output = new char[ArrayUtil.oversize(maxSizeNeeded, Character.BYTES)];}outputPos = foldToASCII(input, 0, output, 0, length);if (preserveOriginal && needToPreserve(input, length)) {state = captureState();}}",public void foldToASCIIchar input int lengthfinal int maxSizeNeeded  4  lengthif outputlength  maxSizeNeeded output  new charArrayUtiloversizemaxSizeNeeded CharacterBYTESoutputPos  foldToASCIIinput 0 output 0 lengthif preserveOriginal  needToPreserveinput length state  captureState
public boolean hasEntry(String name) {if (excludes.contains(name)) {return false;}return directory.hasEntry(name);},public boolean hasEntryString name if excludescontainsname return falsereturn directoryhasEntryname
public void setLockMessage(String msg) {lockMessage = msg;},public void setLockMessageString msg lockMessage  msg
public ReflogCommand reflog() {return new ReflogCommand(repo);},public ReflogCommand reflog return new ReflogCommandrepo
public void serialize(LittleEndianOutput out) {out.writeShort(getFirstRow());out.writeShort(getLastRow());out.writeShort(getFirstColumn());out.writeShort(getLastColumn());},public void serializeLittleEndianOutput out outwriteShortgetFirstRowoutwriteShortgetLastRowoutwriteShortgetFirstColumnoutwriteShortgetLastColumn
"public static int response(java.net.HttpURLConnection c)throws IOException {try {return c.getResponseCode();} catch (ConnectException ce) {final URL url = c.getURL();final String host = (url == null) ? ""<null>"" : url.getHost(); if (""Connection timed out: connect"".equals(ce.getMessage())) throw new ConnectException(MessageFormat.format(JGitText.get().connectionTimeOut, host));throw new ConnectException(ce.getMessage() + "" "" + host); }}",public static int responsejavanetHttpURLConnection cthrows IOException try return cgetResponseCode catch ConnectException ce final URL url  cgetURLfinal String host  url  null  null  urlgetHost if Connection timed out connectequalscegetMessage throw new ConnectExceptionMessageFormatformatJGitTextgetconnectionTimeOut hostthrow new ConnectExceptioncegetMessage     host 
"public static void fill(long[] array, long value) {for (int i = 0; i < array.length; i++) {array[i] = value;}}",public static void filllong array long value for int i  0 i  arraylength i arrayi  value
"public void serialize(LittleEndianOutput out) {out.writeInt(getPositionOfBof());out.writeShort(field_2_option_flags);String name = field_5_sheetname;out.writeByte(name.length());out.writeByte(field_4_isMultibyteUnicode);if (isMultibyte()) {StringUtil.putUnicodeLE(name, out);} else {StringUtil.putCompressedUnicode(name, out);}}",public void serializeLittleEndianOutput out outwriteIntgetPositionOfBofoutwriteShortfield2optionflagsString name  field5sheetnameoutwriteBytenamelengthoutwriteBytefield4isMultibyteUnicodeif isMultibyte StringUtilputUnicodeLEname out else StringUtilputCompressedUnicodename out
"public static String getNonBlankTextOrFail(Element e) throws ParserException {String v = getText(e);if (null != v)v = v.trim();if (null == v || 0 == v.length()) {throw new ParserException(e.getTagName() + "" has no text"");}return v;}",public static String getNonBlankTextOrFailElement e throws ParserException String v  getTexteif null  vv  vtrimif null  v  0  vlength throw new ParserExceptionegetTagName   has no textreturn v
"public void buildFieldConfig(FieldConfig fieldConfig) {Map<String, Float> fieldBoostMap = this.config.get(ConfigurationKeys.FIELD_BOOST_MAP);if (fieldBoostMap != null) {Float boost = fieldBoostMap.get(fieldConfig.getField());if (boost != null) {fieldConfig.set(ConfigurationKeys.BOOST, boost);}}}",public void buildFieldConfigFieldConfig fieldConfig MapString Float fieldBoostMap  thisconfiggetConfigurationKeysFIELDBOOSTMAPif fieldBoostMap  null Float boost  fieldBoostMapgetfieldConfiggetFieldif boost  null fieldConfigsetConfigurationKeysBOOST boost
public PutLifecyclePolicyResult putLifecyclePolicy(PutLifecyclePolicyRequest request) {request = beforeClientExecution(request);return executePutLifecyclePolicy(request);},public PutLifecyclePolicyResult putLifecyclePolicyPutLifecyclePolicyRequest request request  beforeClientExecutionrequestreturn executePutLifecyclePolicyrequest
"public SortedSet<E> subSet(E start, E end) {return subSet(start, true, end, false);}",public SortedSetE subSetE start E end return subSetstart true end false
"public void setParams(String params) {super.setParams(params);if (params != null) {int multiplier;if (params.endsWith(""s"")) {multiplier = 1;params = params.substring(0, params.length()-1);} else if (params.endsWith(""m"")) {multiplier = 60;params = params.substring(0, params.length()-1);} else if (params.endsWith(""h"")) {multiplier = 3600;params = params.substring(0, params.length()-1);} else {multiplier = 1;}waitTimeSec = Double.parseDouble(params) * multiplier;} else {throw new IllegalArgumentException(""you must specify the wait time, eg: 10.0s, 4.5m, 2h"");}}",public void setParamsString params supersetParamsparamsif params  null int multiplierif paramsendsWiths multiplier  1params  paramssubstring0 paramslength1 else if paramsendsWithm multiplier  60params  paramssubstring0 paramslength1 else if paramsendsWithh multiplier  3600params  paramssubstring0 paramslength1 else multiplier  1waitTimeSec  DoubleparseDoubleparams  multiplier else throw new IllegalArgumentExceptionyou must specify the wait time eg 100s 45m 2h
"public PutAttributesRequest(String domainName, String itemName, java.util.List<ReplaceableAttribute> attributes, UpdateCondition expected) {setDomainName(domainName);setItemName(itemName);setAttributes(attributes);setExpected(expected);}",public PutAttributesRequestString domainName String itemName javautilListReplaceableAttribute attributes UpdateCondition expected setDomainNamedomainNamesetItemNameitemNamesetAttributesattributessetExpectedexpected
public DescribeStreamConsumerResult describeStreamConsumer(DescribeStreamConsumerRequest request) {request = beforeClientExecution(request);return executeDescribeStreamConsumer(request);},public DescribeStreamConsumerResult describeStreamConsumerDescribeStreamConsumerRequest request request  beforeClientExecutionrequestreturn executeDescribeStreamConsumerrequest
public void freeze() {this.frozen = true;},public void freeze thisfrozen  true
public FuzzyLikeThisQueryBuilder(Analyzer analyzer) {this.analyzer = analyzer;},public FuzzyLikeThisQueryBuilderAnalyzer analyzer thisanalyzer  analyzer
public DBClusterSnapshot copyDBClusterSnapshot(CopyDBClusterSnapshotRequest request) {request = beforeClientExecution(request);return executeCopyDBClusterSnapshot(request);},public DBClusterSnapshot copyDBClusterSnapshotCopyDBClusterSnapshotRequest request request  beforeClientExecutionrequestreturn executeCopyDBClusterSnapshotrequest
public OutputStreamDataOutput(OutputStream os) {this.os = os;},public OutputStreamDataOutputOutputStream os thisos  os
"public String findPattern(String pat) {int k = super.find(pat);if (k >= 0) {return unpackValues(k);}return """";}",public String findPatternString pat int k  superfindpatif k  0 return unpackValueskreturn 
"public static int murmurhash3_x86_32(BytesRef bytes, int seed) {return murmurhash3_x86_32(bytes.bytes, bytes.offset, bytes.length, seed);}",public static int murmurhash3x8632BytesRef bytes int seed return murmurhash3x8632bytesbytes bytesoffset byteslength seed
public boolean isOverridable() {return overridable;},public boolean isOverridable return overridable
public UpdateMemberResult updateMember(UpdateMemberRequest request) {request = beforeClientExecution(request);return executeUpdateMember(request);},public UpdateMemberResult updateMemberUpdateMemberRequest request request  beforeClientExecutionrequestreturn executeUpdateMemberrequest
public CopyFpgaImageResult copyFpgaImage(CopyFpgaImageRequest request) {request = beforeClientExecution(request);return executeCopyFpgaImage(request);},public CopyFpgaImageResult copyFpgaImageCopyFpgaImageRequest request request  beforeClientExecutionrequestreturn executeCopyFpgaImagerequest
"public void inform(ResourceLoader loader) {try { OpenNLPOpsFactory.getPOSTaggerModel(posTaggerModelFile, loader);} catch (IOException e) {throw new IllegalArgumentException(e);}}",public void informResourceLoader loader try  OpenNLPOpsFactorygetPOSTaggerModelposTaggerModelFile loader catch IOException e throw new IllegalArgumentExceptione
"public CellRangeAddress(int firstRow, int lastRow, int firstCol, int lastCol) {super(firstRow, lastRow, firstCol, lastCol);if (lastRow < firstRow || lastCol < firstCol) {throw new IllegalArgumentException(""Invalid cell range, having lastRow < firstRow || lastCol < firstCol, "" +""had rows "" + lastRow + "" >= "" + firstRow + "" or cells "" + lastCol + "" >= "" + firstCol);}}",public CellRangeAddressint firstRow int lastRow int firstCol int lastCol superfirstRow lastRow firstCol lastColif lastRow  firstRow  lastCol  firstCol throw new IllegalArgumentExceptionInvalid cell range having lastRow  firstRow  lastCol  firstCol  had rows   lastRow      firstRow   or cells   lastCol      firstCol
"public boolean equals(ATNConfig a, ATNConfig b) {if ( a==b ) return true;if ( a==null || b==null ) return false;return a.state.stateNumber==b.state.stateNumber&& a.context.equals(b.context);}",public boolean equalsATNConfig a ATNConfig b if  ab  return trueif  anull  bnull  return falsereturn astatestateNumberbstatestateNumber acontextequalsbcontext
public PushCommand setPushTags() {refSpecs.add(Transport.REFSPEC_TAGS);return this;},public PushCommand setPushTags refSpecsaddTransportREFSPECTAGSreturn this
public CreateEvaluationResult createEvaluation(CreateEvaluationRequest request) {request = beforeClientExecution(request);return executeCreateEvaluation(request);},public CreateEvaluationResult createEvaluationCreateEvaluationRequest request request  beforeClientExecutionrequestreturn executeCreateEvaluationrequest
public DescribeOrderableDBInstanceOptionsResult describeOrderableDBInstanceOptions(DescribeOrderableDBInstanceOptionsRequest request) {request = beforeClientExecution(request);return executeDescribeOrderableDBInstanceOptions(request);},public DescribeOrderableDBInstanceOptionsResult describeOrderableDBInstanceOptionsDescribeOrderableDBInstanceOptionsRequest request request  beforeClientExecutionrequestreturn executeDescribeOrderableDBInstanceOptionsrequest
public long getPosition() {return (long) currentBlockIndex * blockSize + currentBlockUpto;},public long getPosition return long currentBlockIndex  blockSize  currentBlockUpto
public TokenStream create(TokenStream input) {return new FrenchLightStemFilter(input);},public TokenStream createTokenStream input return new FrenchLightStemFilterinput
public AssignPrivateIpAddressesResult assignPrivateIpAddresses(AssignPrivateIpAddressesRequest request) {request = beforeClientExecution(request);return executeAssignPrivateIpAddresses(request);},public AssignPrivateIpAddressesResult assignPrivateIpAddressesAssignPrivateIpAddressesRequest request request  beforeClientExecutionrequestreturn executeAssignPrivateIpAddressesrequest
"public boolean setExecute(File f, boolean canExec) {return false;}",public boolean setExecuteFile f boolean canExec return false
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval lookup_value, ValueEval table_array,ValueEval col_index, ValueEval range_lookup) {try {ValueEval lookupValue = OperandResolver.getSingleValue(lookup_value, srcRowIndex, srcColumnIndex);TwoDEval tableArray = LookupUtils.resolveTableArrayArg(table_array);boolean isRangeLookup;try {isRangeLookup = LookupUtils.resolveRangeLookupArg(range_lookup, srcRowIndex, srcColumnIndex);} catch(RuntimeException e) {isRangeLookup = true;}int rowIndex = LookupUtils.lookupIndexOfValue(lookupValue, LookupUtils.createColumnVector(tableArray, 0), isRangeLookup);int colIndex = LookupUtils.resolveRowOrColIndexArg(col_index, srcRowIndex, srcColumnIndex);ValueVector resultCol = createResultColumnVector(tableArray, colIndex);return resultCol.getItem(rowIndex);} catch (EvaluationException e) {return e.getErrorEval();}}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval lookupvalue ValueEval tablearrayValueEval colindex ValueEval rangelookup try ValueEval lookupValue  OperandResolvergetSingleValuelookupvalue srcRowIndex srcColumnIndexTwoDEval tableArray  LookupUtilsresolveTableArrayArgtablearrayboolean isRangeLookuptry isRangeLookup  LookupUtilsresolveRangeLookupArgrangelookup srcRowIndex srcColumnIndex catchRuntimeException e isRangeLookup  trueint rowIndex  LookupUtilslookupIndexOfValuelookupValue LookupUtilscreateColumnVectortableArray 0 isRangeLookupint colIndex  LookupUtilsresolveRowOrColIndexArgcolindex srcRowIndex srcColumnIndexValueVector resultCol  createResultColumnVectortableArray colIndexreturn resultColgetItemrowIndex catch EvaluationException e return egetErrorEval
public CreateGameSessionResult createGameSession(CreateGameSessionRequest request) {request = beforeClientExecution(request);return executeCreateGameSession(request);},public CreateGameSessionResult createGameSessionCreateGameSessionRequest request request  beforeClientExecutionrequestreturn executeCreateGameSessionrequest
"public RowRecord getRow(int rowIndex) {int maxrow = SpreadsheetVersion.EXCEL97.getLastRowIndex();if (rowIndex < 0 || rowIndex > maxrow) {throw new IllegalArgumentException(""The row number must be between 0 and "" + maxrow + "", but had: "" + rowIndex);}return _rowRecords.get(Integer.valueOf(rowIndex));}",public RowRecord getRowint rowIndex int maxrow  SpreadsheetVersionEXCEL97getLastRowIndexif rowIndex  0  rowIndex  maxrow throw new IllegalArgumentExceptionThe row number must be between 0 and   maxrow   but had   rowIndexreturn rowRecordsgetIntegervalueOfrowIndex
public DescribeClientPropertiesResult describeClientProperties(DescribeClientPropertiesRequest request) {request = beforeClientExecution(request);return executeDescribeClientProperties(request);},public DescribeClientPropertiesResult describeClientPropertiesDescribeClientPropertiesRequest request request  beforeClientExecutionrequestreturn executeDescribeClientPropertiesrequest
public Builder(CompositeReader Reader) {this.Reader = Reader;},public BuilderCompositeReader Reader thisReader  Reader
public synchronized void mark(int readlimit) {in.mark(readlimit);},public synchronized void markint readlimit inmarkreadlimit
public void print(int inum) {print(String.valueOf(inum));},public void printint inum printStringvalueOfinum
"public static final ObjectId fromRaw(int[] is) {return fromRaw(is, 0);}",public static final ObjectId fromRawint is return fromRawis 0
"public String toString() {return slice.toString()+"":""+ postingsEnum;}",public String toString return slicetoString postingsEnum
public void serialize(LittleEndianOutput out) {out.writeShort(getMode());},public void serializeLittleEndianOutput out outwriteShortgetMode
@Override public int size() {return Impl.this.size();},Override public int size return Implthissize
public static int hashCode(Object... objects) {return Arrays.hashCode(objects);},public static int hashCodeObject objects return ArrayshashCodeobjects
"public ByteBuffer putFloat(int index, float value) {throw new ReadOnlyBufferException();}",public ByteBuffer putFloatint index float value throw new ReadOnlyBufferException
public ListJournalS3ExportsForLedgerResult listJournalS3ExportsForLedger(ListJournalS3ExportsForLedgerRequest request) {request = beforeClientExecution(request);return executeListJournalS3ExportsForLedger(request);},public ListJournalS3ExportsForLedgerResult listJournalS3ExportsForLedgerListJournalS3ExportsForLedgerRequest request request  beforeClientExecutionrequestreturn executeListJournalS3ExportsForLedgerrequest
public DeleteMessageBatchResult deleteMessageBatch(DeleteMessageBatchRequest request) {request = beforeClientExecution(request);return executeDeleteMessageBatch(request);},public DeleteMessageBatchResult deleteMessageBatchDeleteMessageBatchRequest request request  beforeClientExecutionrequestreturn executeDeleteMessageBatchrequest
public final void write(LittleEndianOutput out) {out.writeByte(getSid() + getPtgClass());writeCoordinates(out);},public final void writeLittleEndianOutput out outwriteBytegetSid  getPtgClasswriteCoordinatesout
"public FSTCompletionBuilder(int buckets, BytesRefSorter sorter, int shareMaxTailLength) {if (buckets < 1 || buckets > 255) {throw new IllegalArgumentException(""Buckets must be >= 1 and <= 255: ""+ buckets);}if (sorter == null) throw new IllegalArgumentException(""BytesRefSorter must not be null."");this.sorter = sorter;this.buckets = buckets;this.shareMaxTailLength = shareMaxTailLength;}",public FSTCompletionBuilderint buckets BytesRefSorter sorter int shareMaxTailLength if buckets  1  buckets  255 throw new IllegalArgumentExceptionBuckets must be  1 and  255  bucketsif sorter  null throw new IllegalArgumentExceptionBytesRefSorter must not be nullthissorter  sorterthisbuckets  bucketsthisshareMaxTailLength  shareMaxTailLength
public void incRef() {refCount.incrementAndGet();},public void incRef refCountincrementAndGet
public boolean supports(CredentialItem... items) {for (CredentialItem i : items) {if (i instanceof CredentialItem.Username)continue;else if (i instanceof CredentialItem.Password)continue;else return false;}return true;},public boolean supportsCredentialItem items for CredentialItem i  items if i instanceof CredentialItemUsernamecontinueelse if i instanceof CredentialItemPasswordcontinueelse return falsereturn true
public DeleteVpnConnectionRequest(String vpnConnectionId) {setVpnConnectionId(vpnConnectionId);},public DeleteVpnConnectionRequestString vpnConnectionId setVpnConnectionIdvpnConnectionId
"public final ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {if (args.length != 4) {return ErrorEval.VALUE_INVALID;}return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2], args[3]);}",public final ValueEval evaluateValueEval args int srcRowIndex int srcColumnIndex if argslength  4 return ErrorEvalVALUEINVALIDreturn evaluatesrcRowIndex srcColumnIndex args0 args1 args2 args3
public void print(double d) {print(String.valueOf(d));},public void printdouble d printStringvalueOfd
public UpdateUserProfileResult updateUserProfile(UpdateUserProfileRequest request) {request = beforeClientExecution(request);return executeUpdateUserProfile(request);},public UpdateUserProfileResult updateUserProfileUpdateUserProfileRequest request request  beforeClientExecutionrequestreturn executeUpdateUserProfilerequest
public RevFilter clone() {final RevFilter[] s = new RevFilter[subfilters.length];for (int i = 0; i < s.length; i++)s[i] = subfilters[i].clone();return new List(s);},public RevFilter clone final RevFilter s  new RevFiltersubfilterslengthfor int i  0 i  slength isi  subfiltersiclonereturn new Lists
public GetFederationTokenRequest(String name) {setName(name);},public GetFederationTokenRequestString name setNamename
"public static Cell translateUnicodeValues(Cell cell) {String s = cell.getRichStringCellValue().getString();boolean foundUnicode = false;String lowerCaseStr = s.toLowerCase(Locale.ROOT);for (UnicodeMapping entry : unicodeMappings) {String key = entry.entityName;if (lowerCaseStr.contains(key)) {s = s.replaceAll(key, entry.resolvedValue);foundUnicode = true;}}if (foundUnicode) {cell.setCellValue(cell.getRow().getSheet().getWorkbook().getCreationHelper().createRichTextString(s));}return cell;}",public static Cell translateUnicodeValuesCell cell String s  cellgetRichStringCellValuegetStringboolean foundUnicode  falseString lowerCaseStr  stoLowerCaseLocaleROOTfor UnicodeMapping entry  unicodeMappings String key  entryentityNameif lowerCaseStrcontainskey s  sreplaceAllkey entryresolvedValuefoundUnicode  trueif foundUnicode cellsetCellValuecellgetRowgetSheetgetWorkbookgetCreationHelpercreateRichTextStringsreturn cell
public CreateChangeSetResult createChangeSet(CreateChangeSetRequest request) {request = beforeClientExecution(request);return executeCreateChangeSet(request);},public CreateChangeSetResult createChangeSetCreateChangeSetRequest request request  beforeClientExecutionrequestreturn executeCreateChangeSetrequest
public SubmoduleStatusCommand(Repository repo) {super(repo);paths = new ArrayList<>();},public SubmoduleStatusCommandRepository repo superrepopaths  new ArrayList
public int getResultStart() {return outRegion.resultStart;},public int getResultStart return outRegionresultStart
"public static BigInteger round(BigInteger bi, int nBits) {if (nBits < 1) {return bi;}return bi.add(HALF_BITS[nBits]);}",public static BigInteger roundBigInteger bi int nBits if nBits  1 return bireturn biaddHALFBITSnBits
"public static Date round(Date date, Resolution resolution) {return new Date(round(date.getTime(), resolution));}",public static Date roundDate date Resolution resolution return new DaterounddategetTime resolution
"public static int compareArrayByPrefix(char[] shortArray, int shortIndex,char[] longArray, int longIndex) {if (shortArray == null)return 0;else if (longArray == null)return (shortIndex < shortArray.length) ? 1 : 0;int si = shortIndex, li = longIndex;while (si < shortArray.length && li < longArray.length&& shortArray[si] == longArray[li]) {si++;li++;}if (si == shortArray.length) {return 0;} else {if (li == longArray.length)return 1;else return (shortArray[si] > longArray[li]) ? 1 : -1;}}",public static int compareArrayByPrefixchar shortArray int shortIndexchar longArray int longIndex if shortArray  nullreturn 0else if longArray  nullreturn shortIndex  shortArraylength  1  0int si  shortIndex li  longIndexwhile si  shortArraylength  li  longArraylength shortArraysi  longArrayli siliif si  shortArraylength return 0 else if li  longArraylengthreturn 1else return shortArraysi  longArrayli  1  1
public AttachInternetGatewayResult attachInternetGateway(AttachInternetGatewayRequest request) {request = beforeClientExecution(request);return executeAttachInternetGateway(request);},public AttachInternetGatewayResult attachInternetGatewayAttachInternetGatewayRequest request request  beforeClientExecutionrequestreturn executeAttachInternetGatewayrequest
public synchronized boolean containsValue(Object value) {if (value == null) {throw new NullPointerException();}HashtableEntry[] tab = table;int len = tab.length;for (int i = 0; i < len; i++) {for (HashtableEntry e = tab[i]; e != null; e = e.next) {if (value.equals(e.value)) {return true;}}}return false;},public synchronized boolean containsValueObject value if value  null throw new NullPointerExceptionHashtableEntry tab  tableint len  tablengthfor int i  0 i  len i for HashtableEntry e  tabi e  null e  enext if valueequalsevalue return truereturn false
"public String toFormulaString(String[] operands) {StringBuilder buffer = new StringBuilder();buffer.append( operands[0] );buffer.append(""<="");buffer.append( operands[1] );return buffer.toString();}",public String toFormulaStringString operands StringBuilder buffer  new StringBuilderbufferappend operands0 bufferappendbufferappend operands1 return buffertoString
public void write(String str) {write(str.toCharArray());},public void writeString str writestrtoCharArray
public Sort(SortField... fields) {setSort(fields);},public SortSortField fields setSortfields
public DescribeEventCategoriesResult describeEventCategories(DescribeEventCategoriesRequest request) {request = beforeClientExecution(request);return executeDescribeEventCategories(request);},public DescribeEventCategoriesResult describeEventCategoriesDescribeEventCategoriesRequest request request  beforeClientExecutionrequestreturn executeDescribeEventCategoriesrequest
public UpdateDeviceResult updateDevice(UpdateDeviceRequest request) {request = beforeClientExecution(request);return executeUpdateDevice(request);},public UpdateDeviceResult updateDeviceUpdateDeviceRequest request request  beforeClientExecutionrequestreturn executeUpdateDevicerequest
public CreateWorkerBlockResult createWorkerBlock(CreateWorkerBlockRequest request) {request = beforeClientExecution(request);return executeCreateWorkerBlock(request);},public CreateWorkerBlockResult createWorkerBlockCreateWorkerBlockRequest request request  beforeClientExecutionrequestreturn executeCreateWorkerBlockrequest
public synchronized void reset() throws IOException {throw new IOException();},public synchronized void reset throws IOException throw new IOException
"public final void setReader(Reader input) {if (input == null) {throw new NullPointerException(""input must not be null"");} else if (this.input != ILLEGAL_STATE_READER) {throw new IllegalStateException(""TokenStream contract violation: close() call missing"");}this.inputPending = input;setReaderTestPoint();}",public final void setReaderReader input if input  null throw new NullPointerExceptioninput must not be null else if thisinput  ILLEGALSTATEREADER throw new IllegalStateExceptionTokenStream contract violation close call missingthisinputPending  inputsetReaderTestPoint
public GetUsagePlanKeysResult getUsagePlanKeys(GetUsagePlanKeysRequest request) {request = beforeClientExecution(request);return executeGetUsagePlanKeys(request);},public GetUsagePlanKeysResult getUsagePlanKeysGetUsagePlanKeysRequest request request  beforeClientExecutionrequestreturn executeGetUsagePlanKeysrequest
"public String toString(){StringBuilder sb = new StringBuilder();sb.append( ""subInfos=("" );for( SubInfo si : subInfos )sb.append( si.toString() );sb.append( "")/"" ).append( totalBoost ).append( '(' ).append( startOffset ).append( ',' ).append( endOffset ).append( ')' );return sb.toString();}",public String toStringStringBuilder sb  new StringBuildersbappend subInfos for SubInfo si  subInfos sbappend sitoString sbappend  append totalBoost append  append startOffset append  append endOffset append  return sbtoString
"public TokenStream create(TokenStream input) {return new LimitTokenPositionFilter(input, maxTokenPosition, consumeAllTokens);}",public TokenStream createTokenStream input return new LimitTokenPositionFilterinput maxTokenPosition consumeAllTokens
public DescribeFleetUtilizationResult describeFleetUtilization(DescribeFleetUtilizationRequest request) {request = beforeClientExecution(request);return executeDescribeFleetUtilization(request);},public DescribeFleetUtilizationResult describeFleetUtilizationDescribeFleetUtilizationRequest request request  beforeClientExecutionrequestreturn executeDescribeFleetUtilizationrequest
"public void inform(ResourceLoader loader) throws IOException {InputStream stream = null;try {if (dictFile != null) dictionary = getWordSet(loader, dictFile, false);stream = loader.openResource(hypFile);final InputSource is = new InputSource(stream);is.setEncoding(encoding); is.setSystemId(hypFile);hyphenator = HyphenationCompoundWordTokenFilter.getHyphenationTree(is);} finally {IOUtils.closeWhileHandlingException(stream);}}",public void informResourceLoader loader throws IOException InputStream stream  nulltry if dictFile  null dictionary  getWordSetloader dictFile falsestream  loaderopenResourcehypFilefinal InputSource is  new InputSourcestreamissetEncodingencoding issetSystemIdhypFilehyphenator  HyphenationCompoundWordTokenFiltergetHyphenationTreeis finally IOUtilscloseWhileHandlingExceptionstream
public DeclineInvitationsResult declineInvitations(DeclineInvitationsRequest request) {request = beforeClientExecution(request);return executeDeclineInvitations(request);},public DeclineInvitationsResult declineInvitationsDeclineInvitationsRequest request request  beforeClientExecutionrequestreturn executeDeclineInvitationsrequest
public DescribeAutoScalingGroupsResult describeAutoScalingGroups() {return describeAutoScalingGroups(new DescribeAutoScalingGroupsRequest());},public DescribeAutoScalingGroupsResult describeAutoScalingGroups return describeAutoScalingGroupsnew DescribeAutoScalingGroupsRequest
"public String toString() {return String.format(""pushMode(%d)"", mode);}",public String toString return StringformatpushModed mode
public CreateBranchCommand setStartPoint(String startPoint) {checkCallable();this.startPoint = startPoint;this.startCommit = null;return this;},public CreateBranchCommand setStartPointString startPoint checkCallablethisstartPoint  startPointthisstartCommit  nullreturn this
public DBInstance stopDBInstance(StopDBInstanceRequest request) {request = beforeClientExecution(request);return executeStopDBInstance(request);},public DBInstance stopDBInstanceStopDBInstanceRequest request request  beforeClientExecutionrequestreturn executeStopDBInstancerequest
"public SuggestWordQueue(int size, Comparator<SuggestWord> comparator){super(size);this.comparator = comparator;}",public SuggestWordQueueint size ComparatorSuggestWord comparatorsupersizethiscomparator  comparator
"public LBCookieStickinessPolicy(String policyName, Long cookieExpirationPeriod) {setPolicyName(policyName);setCookieExpirationPeriod(cookieExpirationPeriod);}",public LBCookieStickinessPolicyString policyName Long cookieExpirationPeriod setPolicyNamepolicyNamesetCookieExpirationPeriodcookieExpirationPeriod
"public SheetRangeEvaluator(int firstSheetIndex, int lastSheetIndex, SheetRefEvaluator[] sheetEvaluators) {if (firstSheetIndex < 0) {throw new IllegalArgumentException(""Invalid firstSheetIndex: "" + firstSheetIndex + ""."");}if (lastSheetIndex < firstSheetIndex) {throw new IllegalArgumentException(""Invalid lastSheetIndex: "" + lastSheetIndex + "" for firstSheetIndex: "" + firstSheetIndex + ""."");}_firstSheetIndex = firstSheetIndex;_lastSheetIndex = lastSheetIndex;_sheetEvaluators = sheetEvaluators.clone();}",public SheetRangeEvaluatorint firstSheetIndex int lastSheetIndex SheetRefEvaluator sheetEvaluators if firstSheetIndex  0 throw new IllegalArgumentExceptionInvalid firstSheetIndex   firstSheetIndex  if lastSheetIndex  firstSheetIndex throw new IllegalArgumentExceptionInvalid lastSheetIndex   lastSheetIndex   for firstSheetIndex   firstSheetIndex  firstSheetIndex  firstSheetIndexlastSheetIndex  lastSheetIndexsheetEvaluators  sheetEvaluatorsclone
"public RevokeTokenRequest() {super(""OnsMqtt"", ""2019-12-11"", ""RevokeToken"", ""onsmqtt"");setMethod(MethodType.POST);}",public RevokeTokenRequest superOnsMqtt 20191211 RevokeToken onsmqttsetMethodMethodTypePOST
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {try {ValueEval ve = OperandResolver.getSingleValue(arg0, srcRowIndex, srcColumnIndex);double result = OperandResolver.coerceValueToDouble(ve);if (Double.isNaN(result) || Double.isInfinite(result)) {throw new EvaluationException(ErrorEval.NUM_ERROR);}if (arg1 instanceof RefListEval) {return eval(result, ((RefListEval)arg1), true);}final AreaEval aeRange = convertRangeArg(arg1);return eval(result, aeRange, true);} catch (EvaluationException e) {return e.getErrorEval();}}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1 try ValueEval ve  OperandResolvergetSingleValuearg0 srcRowIndex srcColumnIndexdouble result  OperandResolvercoerceValueToDoubleveif DoubleisNaNresult  DoubleisInfiniteresult throw new EvaluationExceptionErrorEvalNUMERRORif arg1 instanceof RefListEval return evalresult RefListEvalarg1 truefinal AreaEval aeRange  convertRangeArgarg1return evalresult aeRange true catch EvaluationException e return egetErrorEval
"public String toFormulaString() {return """";}",public String toFormulaString return 
"public byte readByte() throws IOException {if (bufferPos == bufferSize) {refill();}assert bufferPos == buffer.position() : ""bufferPos="" + bufferPos + "" vs buffer.position()="" + buffer.position();bufferPos++;return buffer.get();}",public byte readByte throws IOException if bufferPos  bufferSize refillassert bufferPos  bufferposition  bufferPos  bufferPos   vs bufferposition  bufferpositionbufferPosreturn bufferget
public ListTargetsByRuleResult listTargetsByRule(ListTargetsByRuleRequest request) {request = beforeClientExecution(request);return executeListTargetsByRule(request);},public ListTargetsByRuleResult listTargetsByRuleListTargetsByRuleRequest request request  beforeClientExecutionrequestreturn executeListTargetsByRulerequest
public DisassociateQualificationFromWorkerResult disassociateQualificationFromWorker(DisassociateQualificationFromWorkerRequest request) {request = beforeClientExecution(request);return executeDisassociateQualificationFromWorker(request);},public DisassociateQualificationFromWorkerResult disassociateQualificationFromWorkerDisassociateQualificationFromWorkerRequest request request  beforeClientExecutionrequestreturn executeDisassociateQualificationFromWorkerrequest
public boolean equals(Object obj) {if (this == obj) return true;if (obj == null) return false;if (getClass() != obj.getClass()) return false;CompiledAutomaton other = (CompiledAutomaton) obj;if (type != other.type) return false;if (type == AUTOMATON_TYPE.SINGLE) {if (!term.equals(other.term)) return false;} else if (type == AUTOMATON_TYPE.NORMAL) {if (!runAutomaton.equals(other.runAutomaton)) return false;}return true;},public boolean equalsObject obj if this  obj return trueif obj  null return falseif getClass  objgetClass return falseCompiledAutomaton other  CompiledAutomaton objif type  othertype return falseif type  AUTOMATONTYPESINGLE if termequalsotherterm return false else if type  AUTOMATONTYPENORMAL if runAutomatonequalsotherrunAutomaton return falsereturn true
"public static CharFilterFactory forName(String name, Map<String,String> args) {return loader.newInstance(name, args);}",public static CharFilterFactory forNameString name MapStringString args return loadernewInstancename args
"public String toString() {String[] units = { ""bytes"", ""KiB"", ""MiB"", ""GiB"" };long sz = getIndexSize();int u = 0;while (1024 <= sz && u < units.length - 1) {int rem = (int) (sz % 1024);sz /= 1024;if (rem != 0)sz++;u++;}return ""DeltaIndex["" + sz + "" "" + units[u] + ""]"";}",public String toString String units   bytes KiB MiB GiB long sz  getIndexSizeint u  0while 1024  sz  u  unitslength  1 int rem  int sz  1024sz  1024if rem  0szureturn DeltaIndex  sz     unitsu  
public SimilarityConfig build() {return new SimilarityConfig(this);},public SimilarityConfig build return new SimilarityConfigthis
public void mark(int readLimit) throws IOException {throw new IOException();},public void markint readLimit throws IOException throw new IOException
"public void collect(int doc) throws IOException {final long time = clock.get();if (time - timeout > 0L) {if (greedy) {in.collect(doc);}throw new TimeExceededException( timeout-t0, time-t0, docBase + doc );}in.collect(doc);}",public void collectint doc throws IOException final long time  clockgetif time  timeout  0L if greedy incollectdocthrow new TimeExceededException timeoutt0 timet0 docBase  doc incollectdoc
"public LocalFile(File directory, int inCoreLimit) {super(inCoreLimit);this.directory = directory;}",public LocalFileFile directory int inCoreLimit superinCoreLimitthisdirectory  directory
"@Override public E remove(int index) {Object[] a = array;int s = size;if (index >= s) {throwIndexOutOfBoundsException(index, s);}@SuppressWarnings(""unchecked"") E result = (E) a[index];System.arraycopy(a, index + 1, a, index, --s - index);a[s] = null;  size = s;modCount++;return result;}",Override public E removeint index Object a  arrayint s  sizeif index  s throwIndexOutOfBoundsExceptionindex sSuppressWarningsunchecked E result  E aindexSystemarraycopya index  1 a index s  indexas  null  size  smodCountreturn result
public RequestUploadCredentialsResult requestUploadCredentials(RequestUploadCredentialsRequest request) {request = beforeClientExecution(request);return executeRequestUploadCredentials(request);},public RequestUploadCredentialsResult requestUploadCredentialsRequestUploadCredentialsRequest request request  beforeClientExecutionrequestreturn executeRequestUploadCredentialsrequest
"public void copyTo(OutputStream out) throws MissingObjectException,IOException {if (isLarge()) {try (ObjectStream in = openStream()) {final long sz = in.getSize();byte[] tmp = new byte[8192];long copied = 0;while (copied < sz) {int n = in.read(tmp);if (n < 0)throw new EOFException();out.write(tmp, 0, n);copied += n;}if (0 <= in.read())throw new EOFException();}} else {out.write(getCachedBytes());}}",public void copyToOutputStream out throws MissingObjectExceptionIOException if isLarge try ObjectStream in  openStream final long sz  ingetSizebyte tmp  new byte8192long copied  0while copied  sz int n  inreadtmpif n  0throw new EOFExceptionoutwritetmp 0 ncopied  nif 0  inreadthrow new EOFException else outwritegetCachedBytes
"@Override public V remove(Object key) {if (key == null) {return removeNullKey();}int hash = secondaryHash(key.hashCode());HashMapEntry<K, V>[] tab = table;int index = hash & (tab.length - 1);for (HashMapEntry<K, V> e = tab[index], prev = null;e != null; prev = e, e = e.next) {if (e.hash == hash && key.equals(e.key)) {if (prev == null) {tab[index] = e.next;} else {prev.next = e.next;}modCount++;size--;postRemove(e);return e.value;}}return null;}",Override public V removeObject key if key  null return removeNullKeyint hash  secondaryHashkeyhashCodeHashMapEntryK V tab  tableint index  hash  tablength  1for HashMapEntryK V e  tabindex prev  nulle  null prev  e e  enext if ehash  hash  keyequalsekey if prev  null tabindex  enext else prevnext  enextmodCountsizepostRemoveereturn evaluereturn null
public RevFilter negate() {return a;},public RevFilter negate return a
public DescribeVpcsResult describeVpcs(DescribeVpcsRequest request) {request = beforeClientExecution(request);return executeDescribeVpcs(request);},public DescribeVpcsResult describeVpcsDescribeVpcsRequest request request  beforeClientExecutionrequestreturn executeDescribeVpcsrequest
public UpdateGameSessionQueueResult updateGameSessionQueue(UpdateGameSessionQueueRequest request) {request = beforeClientExecution(request);return executeUpdateGameSessionQueue(request);},public UpdateGameSessionQueueResult updateGameSessionQueueUpdateGameSessionQueueRequest request request  beforeClientExecutionrequestreturn executeUpdateGameSessionQueuerequest
public String getTitle() {return title;},public String getTitle return title
public final void setNewHeads(List<Head> newHeads) {if (this.newHeads != null)throw new IllegalStateException(JGitText.get().propertyIsAlreadyNonNull);this.newHeads = newHeads;},public final void setNewHeadsListHead newHeads if thisnewHeads  nullthrow new IllegalStateExceptionJGitTextgetpropertyIsAlreadyNonNullthisnewHeads  newHeads
public ObjectId getExpectedOldObjectId() {return expectedOldObjectId;},public ObjectId getExpectedOldObjectId return expectedOldObjectId
public GetRecordsResult getRecords(GetRecordsRequest request) {request = beforeClientExecution(request);return executeGetRecords(request);},public GetRecordsResult getRecordsGetRecordsRequest request request  beforeClientExecutionrequestreturn executeGetRecordsrequest
"public Deleted3DPxg(int externalWorkbookNumber, String sheetName) {this.externalWorkbookNumber = externalWorkbookNumber;this.sheetName = sheetName;}",public Deleted3DPxgint externalWorkbookNumber String sheetName thisexternalWorkbookNumber  externalWorkbookNumberthissheetName  sheetName
public void execute(Lexer lexer) {lexer.skip();},public void executeLexer lexer lexerskip
public DescribeScheduledInstancesResult describeScheduledInstances(DescribeScheduledInstancesRequest request) {request = beforeClientExecution(request);return executeDescribeScheduledInstances(request);},public DescribeScheduledInstancesResult describeScheduledInstancesDescribeScheduledInstancesRequest request request  beforeClientExecutionrequestreturn executeDescribeScheduledInstancesrequest
"public MultiFields(Fields[] subs, ReaderSlice[] subSlices) {this.subs = subs;this.subSlices = subSlices;}",public MultiFieldsFields subs ReaderSlice subSlices thissubs  substhissubSlices  subSlices
public int peekNextSid() {if(!hasNext()) {return -1;}return _list.get(_nextIndex).getSid();},public int peekNextSid ifhasNext return 1return listgetnextIndexgetSid
public ConfigureAgentResult configureAgent(ConfigureAgentRequest request) {request = beforeClientExecution(request);return executeConfigureAgent(request);},public ConfigureAgentResult configureAgentConfigureAgentRequest request request  beforeClientExecutionrequestreturn executeConfigureAgentrequest
public GetStreamingDistributionResult getStreamingDistribution(GetStreamingDistributionRequest request) {request = beforeClientExecution(request);return executeGetStreamingDistribution(request);},public GetStreamingDistributionResult getStreamingDistributionGetStreamingDistributionRequest request request  beforeClientExecutionrequestreturn executeGetStreamingDistributionrequest
public ListTrialComponentsResult listTrialComponents(ListTrialComponentsRequest request) {request = beforeClientExecution(request);return executeListTrialComponents(request);},public ListTrialComponentsResult listTrialComponentsListTrialComponentsRequest request request  beforeClientExecutionrequestreturn executeListTrialComponentsrequest
"public ByteBuffer putShort(int index, short value) {throw new ReadOnlyBufferException();}",public ByteBuffer putShortint index short value throw new ReadOnlyBufferException
public int compareNormalised(NormalisedDecimal other) {int cmp = _relativeDecimalExponent - other._relativeDecimalExponent;if (cmp != 0) {return cmp;}if (_wholePart > other._wholePart) {return 1;}if (_wholePart < other._wholePart) {return -1;}return _fractionalPart - other._fractionalPart;},public int compareNormalisedNormalisedDecimal other int cmp  relativeDecimalExponent  otherrelativeDecimalExponentif cmp  0 return cmpif wholePart  otherwholePart return 1if wholePart  otherwholePart return 1return fractionalPart  otherfractionalPart
"public TokenStream create(TokenStream input) {return new JapaneseKatakanaStemFilter(input, minimumLength);}",public TokenStream createTokenStream input return new JapaneseKatakanaStemFilterinput minimumLength
public EnableAvailabilityZonesForLoadBalancerResult enableAvailabilityZonesForLoadBalancer(EnableAvailabilityZonesForLoadBalancerRequest request) {request = beforeClientExecution(request);return executeEnableAvailabilityZonesForLoadBalancer(request);},public EnableAvailabilityZonesForLoadBalancerResult enableAvailabilityZonesForLoadBalancerEnableAvailabilityZonesForLoadBalancerRequest request request  beforeClientExecutionrequestreturn executeEnableAvailabilityZonesForLoadBalancerrequest
public UpdateEnvironmentResult updateEnvironment(UpdateEnvironmentRequest request) {request = beforeClientExecution(request);return executeUpdateEnvironment(request);},public UpdateEnvironmentResult updateEnvironmentUpdateEnvironmentRequest request request  beforeClientExecutionrequestreturn executeUpdateEnvironmentrequest
public ListTagsForDomainResult listTagsForDomain(ListTagsForDomainRequest request) {request = beforeClientExecution(request);return executeListTagsForDomain(request);},public ListTagsForDomainResult listTagsForDomainListTagsForDomainRequest request request  beforeClientExecutionrequestreturn executeListTagsForDomainrequest
"public static double log(double base, double x) {return Math.log(x) / Math.log(base);}",public static double logdouble base double x return Mathlogx  Mathlogbase
public final void writeBoolean(boolean val) throws IOException {out.write(val ? 1 : 0);written++;},public final void writeBooleanboolean val throws IOException outwriteval  1  0written
public boolean equals(Object other) {if (!(other instanceof ByteBuffer)) {return false;}ByteBuffer otherBuffer = (ByteBuffer) other;if (remaining() != otherBuffer.remaining()) {return false;}int myPosition = position;int otherPosition = otherBuffer.position;boolean equalSoFar = true;while (equalSoFar && (myPosition < limit)) {equalSoFar = get(myPosition++) == otherBuffer.get(otherPosition++);}return equalSoFar;},public boolean equalsObject other if other instanceof ByteBuffer return falseByteBuffer otherBuffer  ByteBuffer otherif remaining  otherBufferremaining return falseint myPosition  positionint otherPosition  otherBufferpositionboolean equalSoFar  truewhile equalSoFar  myPosition  limit equalSoFar  getmyPosition  otherBuffergetotherPositionreturn equalSoFar
public DescribeVirtualGatewaysResult describeVirtualGateways() {return describeVirtualGateways(new DescribeVirtualGatewaysRequest());},public DescribeVirtualGatewaysResult describeVirtualGateways return describeVirtualGatewaysnew DescribeVirtualGatewaysRequest
public FieldConfig getFieldConfig(String fieldName) {FieldConfig fieldConfig = new FieldConfig(StringUtils.toString(fieldName));for (FieldConfigListener listener : this.listeners) {listener.buildFieldConfig(fieldConfig);}return fieldConfig;},public FieldConfig getFieldConfigString fieldName FieldConfig fieldConfig  new FieldConfigStringUtilstoStringfieldNamefor FieldConfigListener listener  thislisteners listenerbuildFieldConfigfieldConfigreturn fieldConfig
"public void setProperty(Row row, int column) {Cell cell = CellUtil.getCell(row, column);CellUtil.setCellStyleProperty(cell, _propertyName, _propertyValue);}",public void setPropertyRow row int column Cell cell  CellUtilgetCellrow columnCellUtilsetCellStylePropertycell propertyName propertyValue
public RebootInstancesResult rebootInstances(RebootInstancesRequest request) {request = beforeClientExecution(request);return executeRebootInstances(request);},public RebootInstancesResult rebootInstancesRebootInstancesRequest request request  beforeClientExecutionrequestreturn executeRebootInstancesrequest
"public Predicate(int ruleIndex, int predIndex, boolean isCtxDependent) {this.ruleIndex = ruleIndex;this.predIndex = predIndex;this.isCtxDependent = isCtxDependent;}",public Predicateint ruleIndex int predIndex boolean isCtxDependent thisruleIndex  ruleIndexthispredIndex  predIndexthisisCtxDependent  isCtxDependent
"public void fillPolygon(int[] xPoints, int[] yPoints,int nPoints){int right  = findBiggest(xPoints);int bottom = findBiggest(yPoints);int left   = findSmallest(xPoints);int top    = findSmallest(yPoints);HSSFPolygon shape = escherGroup.createPolygon(new HSSFChildAnchor(left,top,right,bottom) );shape.setPolygonDrawArea(right - left, bottom - top);shape.setPoints(addToAll(xPoints, -left), addToAll(yPoints, -top));shape.setLineStyleColor(foreground.getRed(), foreground.getGreen(), foreground.getBlue());shape.setFillColor(foreground.getRed(), foreground.getGreen(), foreground.getBlue());}",public void fillPolygonint xPoints int yPointsint nPointsint right   findBiggestxPointsint bottom  findBiggestyPointsint left    findSmallestxPointsint top     findSmallestyPointsHSSFPolygon shape  escherGroupcreatePolygonnew HSSFChildAnchorlefttoprightbottom shapesetPolygonDrawArearight  left bottom  topshapesetPointsaddToAllxPoints left addToAllyPoints topshapesetLineStyleColorforegroundgetRed foregroundgetGreen foregroundgetBlueshapesetFillColorforegroundgetRed foregroundgetGreen foregroundgetBlue
"public ListEventsRequest() {super(""Status"", ""2020-01-17"", ""ListEvents"", ""StatusAPI"");setMethod(MethodType.POST);}",public ListEventsRequest superStatus 20200117 ListEvents StatusAPIsetMethodMethodTypePOST
public ListIAMPolicyAssignmentsResult listIAMPolicyAssignments(ListIAMPolicyAssignmentsRequest request) {request = beforeClientExecution(request);return executeListIAMPolicyAssignments(request);},public ListIAMPolicyAssignmentsResult listIAMPolicyAssignmentsListIAMPolicyAssignmentsRequest request request  beforeClientExecutionrequestreturn executeListIAMPolicyAssignmentsrequest
public CountingOutputStream(OutputStream out) {this.out = out;},public CountingOutputStreamOutputStream out thisout  out
"public void seekExact(BytesRef target, TermState otherState) {if (!target.equals(term)) {state.copyFrom(otherState);term = BytesRef.deepCopyOf(target);seekPending = true;}}",public void seekExactBytesRef target TermState otherState if targetequalsterm statecopyFromotherStateterm  BytesRefdeepCopyOftargetseekPending  true
public void seek(long pos) throws IOException {if (pos != getFilePointer()) {final long alignedPos = pos & ALIGN_NOT_MASK;filePos = alignedPos-bufferSize;final int delta = (int) (pos - alignedPos);if (delta != 0) {refill();buffer.position(delta);bufferPos = delta;} else {bufferPos = bufferSize;}}},public void seeklong pos throws IOException if pos  getFilePointer final long alignedPos  pos  ALIGNNOTMASKfilePos  alignedPosbufferSizefinal int delta  int pos  alignedPosif delta  0 refillbufferpositiondeltabufferPos  delta else bufferPos  bufferSize
public void clear() {removeAllElements();},public void clear removeAllElements
"public QueryCustomerByPhoneRequest() {super(""xspace"", ""2017-07-20"", ""QueryCustomerByPhone"");setUriPattern(""/customerbyphone"");setMethod(MethodType.POST);}",public QueryCustomerByPhoneRequest superxspace 20170720 QueryCustomerByPhonesetUriPatterncustomerbyphonesetMethodMethodTypePOST
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {return this.evaluate(srcRowIndex, srcColumnIndex, arg0, null);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 return thisevaluatesrcRowIndex srcColumnIndex arg0 null
public ListDashboardVersionsResult listDashboardVersions(ListDashboardVersionsRequest request) {request = beforeClientExecution(request);return executeListDashboardVersions(request);},public ListDashboardVersionsResult listDashboardVersionsListDashboardVersionsRequest request request  beforeClientExecutionrequestreturn executeListDashboardVersionsrequest
public IntBuffer put(int c) {if (position == limit) {throw new BufferOverflowException();}backingArray[offset + position++] = c;return this;},public IntBuffer putint c if position  limit throw new BufferOverflowExceptionbackingArrayoffset  position  creturn this
public DeleteHostedZoneResult deleteHostedZone(DeleteHostedZoneRequest request) {request = beforeClientExecution(request);return executeDeleteHostedZone(request);},public DeleteHostedZoneResult deleteHostedZoneDeleteHostedZoneRequest request request  beforeClientExecutionrequestreturn executeDeleteHostedZonerequest
public CreateReceiptRuleResult createReceiptRule(CreateReceiptRuleRequest request) {request = beforeClientExecution(request);return executeCreateReceiptRule(request);},public CreateReceiptRuleResult createReceiptRuleCreateReceiptRuleRequest request request  beforeClientExecutionrequestreturn executeCreateReceiptRulerequest
public Result rename() throws IOException {try {result = doRename();return result;} catch (IOException err) {result = Result.IO_FAILURE;throw err;}},public Result rename throws IOException try result  doRenamereturn result catch IOException err result  ResultIOFAILUREthrow err
public DescribeDBInstancesResult describeDBInstances() {return describeDBInstances(new DescribeDBInstancesRequest());},public DescribeDBInstancesResult describeDBInstances return describeDBInstancesnew DescribeDBInstancesRequest
"public String toString() {if (label != null) {return label + "":"" + tag;}return tag;}",public String toString if label  null return label    tagreturn tag
"public CharSequence toQueryString(EscapeQuerySyntax escaper) {return ""[DELETEDCHILD]"";}",public CharSequence toQueryStringEscapeQuerySyntax escaper return DELETEDCHILD
public CreateAccountResult createAccount(CreateAccountRequest request) {request = beforeClientExecution(request);return executeCreateAccount(request);},public CreateAccountResult createAccountCreateAccountRequest request request  beforeClientExecutionrequestreturn executeCreateAccountrequest
"public Map.Entry<K,V> next() {HashEntry<K,V> e = super.nextEntry();return new WriteThroughEntry(e.key, e.value);}",public MapEntryKV next HashEntryKV e  supernextEntryreturn new WriteThroughEntryekey evalue
public BaseRef(RefEval re) {_refEval = re;_areaEval = null;_firstRowIndex = re.getRow();_firstColumnIndex = re.getColumn();_height = 1;_width = 1;},public BaseRefRefEval re refEval  reareaEval  nullfirstRowIndex  regetRowfirstColumnIndex  regetColumnheight  1width  1
"public void decode(long[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = blocks[blocksOffset++];for (int shift = 62; shift >= 0; shift -= 2) {values[valuesOffset++] = (block >>> shift) & 3;}}}",public void decodelong blocks int blocksOffset long values int valuesOffset int iterations for int i  0 i  iterations i final long block  blocksblocksOffsetfor int shift  62 shift  0 shift  2 valuesvaluesOffset  block  shift  3
public void unrollRecursionContexts(ParserRuleContext _parentctx) {_precedenceStack.pop();_ctx.stop = _input.LT(-1);ParserRuleContext retctx = _ctx; if ( _parseListeners != null ) {while ( _ctx != _parentctx ) {triggerExitRuleEvent();_ctx = (ParserRuleContext)_ctx.parent;}}else {_ctx = _parentctx;}retctx.parent = _parentctx;if (_buildParseTrees && _parentctx != null) {_parentctx.addChild(retctx);}},public void unrollRecursionContextsParserRuleContext parentctx precedenceStackpopctxstop  inputLT1ParserRuleContext retctx  ctx if  parseListeners  null  while  ctx  parentctx  triggerExitRuleEventctx  ParserRuleContextctxparentelse ctx  parentctxretctxparent  parentctxif buildParseTrees  parentctx  null parentctxaddChildretctx
public CancelBundleTaskRequest(String bundleId) {setBundleId(bundleId);},public CancelBundleTaskRequestString bundleId setBundleIdbundleId
"public void add(CharsRef input, CharsRef output, boolean includeOrig) {add(input, countWords(input), output, countWords(output), includeOrig);}",public void addCharsRef input CharsRef output boolean includeOrig addinput countWordsinput output countWordsoutput includeOrig
public SetIdentityDkimEnabledResult setIdentityDkimEnabled(SetIdentityDkimEnabledRequest request) {request = beforeClientExecution(request);return executeSetIdentityDkimEnabled(request);},public SetIdentityDkimEnabledResult setIdentityDkimEnabledSetIdentityDkimEnabledRequest request request  beforeClientExecutionrequestreturn executeSetIdentityDkimEnabledrequest
public GetResolverEndpointResult getResolverEndpoint(GetResolverEndpointRequest request) {request = beforeClientExecution(request);return executeGetResolverEndpoint(request);},public GetResolverEndpointResult getResolverEndpointGetResolverEndpointRequest request request  beforeClientExecutionrequestreturn executeGetResolverEndpointrequest
public void setText(String value) {string = value;start = offset = 0;end = value.length();},public void setTextString value string  valuestart  offset  0end  valuelength
public String toString() {return toString(0);},public String toString return toString0
public void adjustIndex(int offset) {_firstSheetIndex += offset;_lastSheetIndex += offset;},public void adjustIndexint offset firstSheetIndex  offsetlastSheetIndex  offset
"public GalicianStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public GalicianStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public ListRepositoryAssociationsResult listRepositoryAssociations(ListRepositoryAssociationsRequest request) {request = beforeClientExecution(request);return executeListRepositoryAssociations(request);},public ListRepositoryAssociationsResult listRepositoryAssociationsListRepositoryAssociationsRequest request request  beforeClientExecutionrequestreturn executeListRepositoryAssociationsrequest
public void setParams(String params) {super.setParams(params);maxNumSegments = (int)Double.parseDouble(params);},public void setParamsString params supersetParamsparamsmaxNumSegments  intDoubleparseDoubleparams
public char getChar() {return (char) getShort();},public char getChar return char getShort
public void next(int delta) {if (delta == 1) {prevPtr = currPtr;currPtr = nextPtr;if (!eof())parseEntry();return;}final int end = raw.length;int ptr = nextPtr;while (--delta > 0 && ptr != end) {prevPtr = ptr;while (raw[ptr] != 0)ptr++;ptr += OBJECT_ID_LENGTH + 1;}if (delta != 0)throw new ArrayIndexOutOfBoundsException(delta);currPtr = ptr;if (!eof())parseEntry();},public void nextint delta if delta  1 prevPtr  currPtrcurrPtr  nextPtrif eofparseEntryreturnfinal int end  rawlengthint ptr  nextPtrwhile delta  0  ptr  end prevPtr  ptrwhile rawptr  0ptrptr  OBJECTIDLENGTH  1if delta  0throw new ArrayIndexOutOfBoundsExceptiondeltacurrPtr  ptrif eofparseEntry
public Type getType() {return type;},public Type getType return type
"public CharBuffer duplicate() {return copy(this, mark);}",public CharBuffer duplicate return copythis mark
"public NGramFilterFactory(Map<String, String> args) {super(args);minGramSize = requireInt(args, ""minGramSize"");maxGramSize = requireInt(args, ""maxGramSize"");preserveOriginal = getBoolean(args, ""preserveOriginal"", NGramTokenFilter.DEFAULT_PRESERVE_ORIGINAL);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public NGramFilterFactoryMapString String args superargsminGramSize  requireIntargs minGramSizemaxGramSize  requireIntargs maxGramSizepreserveOriginal  getBooleanargs preserveOriginal NGramTokenFilterDEFAULTPRESERVEORIGINALif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public AddRoleToDBClusterResult addRoleToDBCluster(AddRoleToDBClusterRequest request) {request = beforeClientExecution(request);return executeAddRoleToDBCluster(request);},public AddRoleToDBClusterResult addRoleToDBClusterAddRoleToDBClusterRequest request request  beforeClientExecutionrequestreturn executeAddRoleToDBClusterrequest
public BlameGenerator setTextComparator(RawTextComparator comparator) {textComparator = comparator;return this;},public BlameGenerator setTextComparatorRawTextComparator comparator textComparator  comparatorreturn this
"public  PatternCaptureGroupFilterFactory(Map<String,String> args) {super(args);pattern = getPattern(args, ""pattern"");preserveOriginal = args.containsKey(""preserve_original"") ? Boolean.parseBoolean(args.get(""preserve_original"")) : true;}",public  PatternCaptureGroupFilterFactoryMapStringString args superargspattern  getPatternargs patternpreserveOriginal  argscontainsKeypreserveoriginal  BooleanparseBooleanargsgetpreserveoriginal  true
public CreateObjectResult createObject(CreateObjectRequest request) {request = beforeClientExecution(request);return executeCreateObject(request);},public CreateObjectResult createObjectCreateObjectRequest request request  beforeClientExecutionrequestreturn executeCreateObjectrequest
@Override public String getActions() { return null; },Override public String getActions  return null 
public void onChanged() {if (mAdapter != null) {post(new Runnable());}},public void onChanged if mAdapter  null postnew Runnable
public CreateResourceGroupResult createResourceGroup(CreateResourceGroupRequest request) {request = beforeClientExecution(request);return executeCreateResourceGroup(request);},public CreateResourceGroupResult createResourceGroupCreateResourceGroupRequest request request  beforeClientExecutionrequestreturn executeCreateResourceGrouprequest
public static RevFilter has(RevFlag a) {final RevFlagSet s = new RevFlagSet();s.add(a);return new HasAll(s);},public static RevFilter hasRevFlag a final RevFlagSet s  new RevFlagSetsaddareturn new HasAlls
@Override public int size() {return totalSize;},Override public int size return totalSize
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeShort(field_1_index_extern_sheet);out.writeInt(unused1);},public void writeLittleEndianOutput out outwriteBytesid  getPtgClassoutwriteShortfield1indexexternsheetoutwriteIntunused1
"public String toString() {return this.getClass().getSimpleName() + ""@"" + directory + "" lockFactory="" + lockFactory;}",public String toString return thisgetClassgetSimpleName    directory   lockFactory  lockFactory
"public final ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {switch (args.length) {case 3:return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2]);case 4:return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2], args[3]);}return ErrorEval.VALUE_INVALID;}",public final ValueEval evaluateValueEval args int srcRowIndex int srcColumnIndex switch argslength case 3return evaluatesrcRowIndex srcColumnIndex args0 args1 args2case 4return evaluatesrcRowIndex srcColumnIndex args0 args1 args2 args3return ErrorEvalVALUEINVALID
public CancelDataRepositoryTaskResult cancelDataRepositoryTask(CancelDataRepositoryTaskRequest request) {request = beforeClientExecution(request);return executeCancelDataRepositoryTask(request);},public CancelDataRepositoryTaskResult cancelDataRepositoryTaskCancelDataRepositoryTaskRequest request request  beforeClientExecutionrequestreturn executeCancelDataRepositoryTaskrequest
public DateFormatTokenizer(String format) {this.format = format;},public DateFormatTokenizerString format thisformat  format
public static int getBiasedExponent(long rawBits) {return Math.toIntExact((rawBits & EXPONENT_MASK) >> EXPONENT_SHIFT);},public static int getBiasedExponentlong rawBits return MathtoIntExactrawBits  EXPONENTMASK  EXPONENTSHIFT
"public String toString() {return ""IB "" + distribution.toString() + ""-"" + lambda.toString()+ normalization.toString();}",public String toString return IB   distributiontoString    lambdatoString normalizationtoString
public String getName() {return name;},public String getName return name
public boolean inContext(String context) {return false;},public boolean inContextString context return false
"public String toString() {String desc;File directory = getDirectory();if (directory != null)desc = directory.getPath();elsedesc = getClass().getSimpleName() + ""-"" + System.identityHashCode(this);return ""Repository["" + desc + ""]""; }",public String toString String descFile directory  getDirectoryif directory  nulldesc  directorygetPathelsedesc  getClassgetSimpleName    SystemidentityHashCodethisreturn Repository  desc   
"public int serialize(int offset, byte [] data) {LittleEndian.putInt(data, offset+0, field_13_border_styles1);LittleEndian.putInt(data, offset+4, field_14_border_styles2);return 8;}",public int serializeint offset byte  data LittleEndianputIntdata offset0 field13borderstyles1LittleEndianputIntdata offset4 field14borderstyles2return 8
"public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {final byte block = blocks[blocksOffset++];values[valuesOffset++] = (block >>> 7) & 1;values[valuesOffset++] = (block >>> 6) & 1;values[valuesOffset++] = (block >>> 5) & 1;values[valuesOffset++] = (block >>> 4) & 1;values[valuesOffset++] = (block >>> 3) & 1;values[valuesOffset++] = (block >>> 2) & 1;values[valuesOffset++] = (block >>> 1) & 1;values[valuesOffset++] = block & 1;}}",public void decodebyte blocks int blocksOffset long values int valuesOffset int iterations for int j  0 j  iterations j final byte block  blocksblocksOffsetvaluesvaluesOffset  block  7  1valuesvaluesOffset  block  6  1valuesvaluesOffset  block  5  1valuesvaluesOffset  block  4  1valuesvaluesOffset  block  3  1valuesvaluesOffset  block  2  1valuesvaluesOffset  block  1  1valuesvaluesOffset  block  1
public PipedWriter(PipedReader destination) throws IOException {super(destination);connect(destination);},public PipedWriterPipedReader destination throws IOException superdestinationconnectdestination
"public String dequote(byte[] in, int ip, int ie) {boolean inquote = false;final byte[] r = new byte[ie - ip];int rPtr = 0;while (ip < ie) {final byte b = in[ip++];switch (b) {case '\'':inquote = !inquote;continue;case '\\':if (inquote || ip == ie)r[rPtr++] = b; elser[rPtr++] = in[ip++];continue;default:r[rPtr++] = b;continue;}}return RawParseUtils.decode(UTF_8, r, 0, rPtr);}",public String dequotebyte in int ip int ie boolean inquote  falsefinal byte r  new byteie  ipint rPtr  0while ip  ie final byte b  inipswitch b case inquote  inquotecontinuecase if inquote  ip  ierrPtr  b elserrPtr  inipcontinuedefaultrrPtr  bcontinuereturn RawParseUtilsdecodeUTF8 r 0 rPtr
public Status getStatus() {return myStatus;},public Status getStatus return myStatus
public DeltaRecord(RecordInputStream in) {field_1_max_change = in.readDouble();},public DeltaRecordRecordInputStream in field1maxchange  inreadDouble
public void serialize(LittleEndianOutput out) {out.writeShort(getCount());},public void serializeLittleEndianOutput out outwriteShortgetCount
"public ListPartsRequest(String vaultName, String uploadId) {setVaultName(vaultName);setUploadId(uploadId);}",public ListPartsRequestString vaultName String uploadId setVaultNamevaultNamesetUploadIduploadId
"public void set(int index, long value) {final int o = index >>> 2;final int b = index & 3;final int shift = b << 4;blocks[o] = (blocks[o] & ~(65535L << shift)) | (value << shift);}",public void setint index long value final int o  index  2final int b  index  3final int shift  b  4blockso  blockso  65535L  shift  value  shift
public void setRunInBackground(int deltaPri) {runInBackground = true;this.deltaPri = deltaPri;},public void setRunInBackgroundint deltaPri runInBackground  truethisdeltaPri  deltaPri
"public TeeInputStream(InputStream src, OutputStream dst) {this.src = src;this.dst = dst;}",public TeeInputStreamInputStream src OutputStream dst thissrc  srcthisdst  dst
"public void addChild(final Property property)throws IOException{String name = property.getName();if (_children_names.contains(name)){throw new IOException(""Duplicate name \"""" + name + ""\"""");}_children_names.add(name);_children.add(property);}",public void addChildfinal Property propertythrows IOExceptionString name  propertygetNameif childrennamescontainsnamethrow new IOExceptionDuplicate name   name  childrennamesaddnamechildrenaddproperty
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {int result;if (arg0 instanceof TwoDEval) {result = ((TwoDEval) arg0).getWidth();} else if (arg0 instanceof RefEval) {result = 1;} else { return ErrorEval.VALUE_INVALID;}return new NumberEval(result);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 int resultif arg0 instanceof TwoDEval result  TwoDEval arg0getWidth else if arg0 instanceof RefEval result  1 else  return ErrorEvalVALUEINVALIDreturn new NumberEvalresult
public ListModelsResult listModels(ListModelsRequest request) {request = beforeClientExecution(request);return executeListModels(request);},public ListModelsResult listModelsListModelsRequest request request  beforeClientExecutionrequestreturn executeListModelsrequest
"public ExtensionQuery(QueryParser topLevelParser, String field, String rawQueryString) {this.field = field;this.rawQueryString = rawQueryString;this.topLevelParser = topLevelParser;}",public ExtensionQueryQueryParser topLevelParser String field String rawQueryString thisfield  fieldthisrawQueryString  rawQueryStringthistopLevelParser  topLevelParser
public String toString() {return resourceDescription;},public String toString return resourceDescription
public GetDeploymentInstanceResult getDeploymentInstance(GetDeploymentInstanceRequest request) {request = beforeClientExecution(request);return executeGetDeploymentInstance(request);},public GetDeploymentInstanceResult getDeploymentInstanceGetDeploymentInstanceRequest request request  beforeClientExecutionrequestreturn executeGetDeploymentInstancerequest
"public MappingCharFilterFactory(Map<String,String> args) {super(args);mapping = get(args, ""mapping"");if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public MappingCharFilterFactoryMapStringString args superargsmapping  getargs mappingif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public boolean promptPassphrase(String msg) {CredentialItem.StringType v = newPrompt(msg);if (provider.get(uri, v)) {passphrase = v.getValue();return true;}passphrase = null;return false;}",public boolean promptPassphraseString msg CredentialItemStringType v  newPromptmsgif providergeturi v passphrase  vgetValuereturn truepassphrase  nullreturn false
public DescribeReservedDBInstancesResult describeReservedDBInstances() {return describeReservedDBInstances(new DescribeReservedDBInstancesRequest());},public DescribeReservedDBInstancesResult describeReservedDBInstances return describeReservedDBInstancesnew DescribeReservedDBInstancesRequest
public UnsubscribeFromDatasetResult unsubscribeFromDataset(UnsubscribeFromDatasetRequest request) {request = beforeClientExecution(request);return executeUnsubscribeFromDataset(request);},public UnsubscribeFromDatasetResult unsubscribeFromDatasetUnsubscribeFromDatasetRequest request request  beforeClientExecutionrequestreturn executeUnsubscribeFromDatasetrequest
public int available() throws IOException {if (buf == null) {throw new IOException();}return buf.length - pos + in.available();},public int available throws IOException if buf  null throw new IOExceptionreturn buflength  pos  inavailable
@Override public V remove(Object key) {return isInBounds(key) ? TreeMap.this.remove(key) : null;},Override public V removeObject key return isInBoundskey  TreeMapthisremovekey  null
"public void insertSST() {LOG.log(DEBUG, ""creating new SST via insertSST!"");sst = new SSTRecord();records.add(records.size() - 1, createExtendedSST());records.add(records.size() - 2, sst);}",public void insertSST LOGlogDEBUG creating new SST via insertSSTsst  new SSTRecordrecordsaddrecordssize  1 createExtendedSSTrecordsaddrecordssize  2 sst
public AddApplicationCloudWatchLoggingOptionResult addApplicationCloudWatchLoggingOption(AddApplicationCloudWatchLoggingOptionRequest request) {request = beforeClientExecution(request);return executeAddApplicationCloudWatchLoggingOption(request);},public AddApplicationCloudWatchLoggingOptionResult addApplicationCloudWatchLoggingOptionAddApplicationCloudWatchLoggingOptionRequest request request  beforeClientExecutionrequestreturn executeAddApplicationCloudWatchLoggingOptionrequest
public ListCampaignsResult listCampaigns(ListCampaignsRequest request) {request = beforeClientExecution(request);return executeListCampaigns(request);},public ListCampaignsResult listCampaignsListCampaignsRequest request request  beforeClientExecutionrequestreturn executeListCampaignsrequest
public void execute(Lexer lexer) {lexer.more();},public void executeLexer lexer lexermore
"public SetFaceCoverRequest() {super(""CloudPhoto"", ""2017-07-11"", ""SetFaceCover"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public SetFaceCoverRequest superCloudPhoto 20170711 SetFaceCover cloudphotosetProtocolProtocolTypeHTTPS
public GetInstanceAccessResult getInstanceAccess(GetInstanceAccessRequest request) {request = beforeClientExecution(request);return executeGetInstanceAccess(request);},public GetInstanceAccessResult getInstanceAccessGetInstanceAccessRequest request request  beforeClientExecutionrequestreturn executeGetInstanceAccessrequest
public void clear() {value = null;},public void clear value  null
public GetFederationTokenResult getFederationToken(GetFederationTokenRequest request) {request = beforeClientExecution(request);return executeGetFederationToken(request);},public GetFederationTokenResult getFederationTokenGetFederationTokenRequest request request  beforeClientExecutionrequestreturn executeGetFederationTokenrequest
public int first() {currentSentence = 0;text.setIndex(text.getBeginIndex());return current();},public int first currentSentence  0textsetIndextextgetBeginIndexreturn current
"public QueryPhraseMap getFieldTermMap( String fieldName, String term ){QueryPhraseMap rootMap = getRootMap( fieldName );return rootMap == null ? null : rootMap.subMap.get( term );}",public QueryPhraseMap getFieldTermMap String fieldName String term QueryPhraseMap rootMap  getRootMap fieldName return rootMap  null  null  rootMapsubMapget term 
@Override public boolean contains(Object object) {if (object instanceof Multiset.Entry) {Multiset.Entry<?> entry = (Multiset.Entry<?>) object;Object element = entry.getElement();int entryCount = entry.getCount();return entryCount > 0 && count(element) == entryCount;}return false;},Override public boolean containsObject object if object instanceof MultisetEntry MultisetEntry entry  MultisetEntry objectObject element  entrygetElementint entryCount  entrygetCountreturn entryCount  0  countelement  entryCountreturn false
public DeleteLexiconResult deleteLexicon(DeleteLexiconRequest request) {request = beforeClientExecution(request);return executeDeleteLexicon(request);},public DeleteLexiconResult deleteLexiconDeleteLexiconRequest request request  beforeClientExecutionrequestreturn executeDeleteLexiconrequest
public DomainMetadataResult domainMetadata(DomainMetadataRequest request) {request = beforeClientExecution(request);return executeDomainMetadata(request);},public DomainMetadataResult domainMetadataDomainMetadataRequest request request  beforeClientExecutionrequestreturn executeDomainMetadatarequest
public RevFlag getReinterestingFlag() {return REINTERESTING;},public RevFlag getReinterestingFlag return REINTERESTING
"public static void advise(FileDescriptor fd, long offset, long len, int advise) throws IOException {final int code = posix_fadvise(fd, offset, len, advise);if (code != 0) {throw new RuntimeException(""posix_fadvise failed code="" + code);}}",public static void adviseFileDescriptor fd long offset long len int advise throws IOException final int code  posixfadvisefd offset len adviseif code  0 throw new RuntimeExceptionposixfadvise failed code  code
public DeleteSchemaResult deleteSchema(DeleteSchemaRequest request) {request = beforeClientExecution(request);return executeDeleteSchema(request);},public DeleteSchemaResult deleteSchemaDeleteSchemaRequest request request  beforeClientExecutionrequestreturn executeDeleteSchemarequest
public CreateBatchInferenceJobResult createBatchInferenceJob(CreateBatchInferenceJobRequest request) {request = beforeClientExecution(request);return executeCreateBatchInferenceJob(request);},public CreateBatchInferenceJobResult createBatchInferenceJobCreateBatchInferenceJobRequest request request  beforeClientExecutionrequestreturn executeCreateBatchInferenceJobrequest
public BitField(final int mask){_mask = mask;int count       = 0;int bit_pattern = mask;if (bit_pattern != 0){while ((bit_pattern & 1) == 0){count++;bit_pattern >>= 1;}}_shift_count = count;},public BitFieldfinal int maskmask  maskint count        0int bitpattern  maskif bitpattern  0while bitpattern  1  0countbitpattern  1shiftcount  count
public boolean failed() {return !failingPaths.isEmpty();},public boolean failed return failingPathsisEmpty
public String toString() {StringBuilder b = new StringBuilder();for(int i=0;i<len;i++) {if (i > 0) {b.append(' ');}b.append(Integer.toBinaryString(bytes[i].value));}return b.toString();},public String toString StringBuilder b  new StringBuilderforint i0ileni if i  0 bappend bappendIntegertoBinaryStringbytesivaluereturn btoString
public final void remove() {if (modCount != expectedModCount)throw new ConcurrentModificationException();if (lastReturned == null)throw new IllegalStateException();LinkedHashMap.this.remove(lastReturned.key);lastReturned = null;expectedModCount = modCount;},public final void remove if modCount  expectedModCountthrow new ConcurrentModificationExceptionif lastReturned  nullthrow new IllegalStateExceptionLinkedHashMapthisremovelastReturnedkeylastReturned  nullexpectedModCount  modCount
public boolean shouldBeRecursive() {return path.shouldBeRecursive() || ANY_DIFF.shouldBeRecursive();},public boolean shouldBeRecursive return pathshouldBeRecursive  ANYDIFFshouldBeRecursive
public DeleteQueueRequest(String queueUrl) {setQueueUrl(queueUrl);},public DeleteQueueRequestString queueUrl setQueueUrlqueueUrl
"public ExternalName getExternalName(int externSheetIndex, int externNameIndex) {String nameName = linkTable.resolveNameXText(externSheetIndex, externNameIndex, this);if(nameName == null) {return null;}int ix = linkTable.resolveNameXIx(externSheetIndex, externNameIndex);return new ExternalName(nameName, externNameIndex, ix);}",public ExternalName getExternalNameint externSheetIndex int externNameIndex String nameName  linkTableresolveNameXTextexternSheetIndex externNameIndex thisifnameName  null return nullint ix  linkTableresolveNameXIxexternSheetIndex externNameIndexreturn new ExternalNamenameName externNameIndex ix
public RegisterUserResult registerUser(RegisterUserRequest request) {request = beforeClientExecution(request);return executeRegisterUser(request);},public RegisterUserResult registerUserRegisterUserRequest request request  beforeClientExecutionrequestreturn executeRegisterUserrequest
"public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {values[valuesOffset++] = blocks[blocksOffset++] & 0xFF;}}",public void decodebyte blocks int blocksOffset int values int valuesOffset int iterations for int j  0 j  iterations j valuesvaluesOffset  blocksblocksOffset  0xFF
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {return fixed(arg0, new NumberEval(2), BoolEval.FALSE, srcRowIndex, srcColumnIndex);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 return fixedarg0 new NumberEval2 BoolEvalFALSE srcRowIndex srcColumnIndex
public final byte[] array() {return protectedArray();},public final byte array return protectedArray
"public int readUByte() {byte[] buf = new byte[1];try {checkEOF(read(buf), 1);} catch (IOException e) {throw new RuntimeException(e);}return LittleEndian.getUByte(buf);}",public int readUByte byte buf  new byte1try checkEOFreadbuf 1 catch IOException e throw new RuntimeExceptionereturn LittleEndiangetUBytebuf
"public static AttrPtg createSkip(int dist) {return new AttrPtg(optiSkip.set(0), dist, null, -1);}",public static AttrPtg createSkipint dist return new AttrPtgoptiSkipset0 dist null 1
public DescribeUserHierarchyGroupResult describeUserHierarchyGroup(DescribeUserHierarchyGroupRequest request) {request = beforeClientExecution(request);return executeDescribeUserHierarchyGroup(request);},public DescribeUserHierarchyGroupResult describeUserHierarchyGroupDescribeUserHierarchyGroupRequest request request  beforeClientExecutionrequestreturn executeDescribeUserHierarchyGrouprequest
"public User(String path, String userName, String userId, String arn, java.util.Date createDate) {setPath(path);setUserName(userName);setUserId(userId);setArn(arn);setCreateDate(createDate);}",public UserString path String userName String userId String arn javautilDate createDate setPathpathsetUserNameuserNamesetUserIduserIdsetArnarnsetCreateDatecreateDate
"public OpenNLPLemmatizerFilter create(TokenStream in) {try {NLPLemmatizerOp lemmatizerOp = OpenNLPOpsFactory.getLemmatizer(dictionaryFile, lemmatizerModelFile);return new OpenNLPLemmatizerFilter(in, lemmatizerOp);} catch (IOException e) {throw new RuntimeException(e);}}",public OpenNLPLemmatizerFilter createTokenStream in try NLPLemmatizerOp lemmatizerOp  OpenNLPOpsFactorygetLemmatizerdictionaryFile lemmatizerModelFilereturn new OpenNLPLemmatizerFilterin lemmatizerOp catch IOException e throw new RuntimeExceptione
"public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long byte0 = blocks[blocksOffset++] & 0xFF;final long byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 4) | (byte1 >>> 4);final long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 8) | byte2;}}",public void decodebyte blocks int blocksOffset long values int valuesOffset int iterations for int i  0 i  iterations i final long byte0  blocksblocksOffset  0xFFfinal long byte1  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  4  byte1  4final long byte2  blocksblocksOffset  0xFFvaluesvaluesOffset  byte1  15  8  byte2
"public RebootInstanceRequest() {super(""HPC"", ""2016-06-03"", ""RebootInstance"", ""hpc"");setMethod(MethodType.POST);}",public RebootInstanceRequest superHPC 20160603 RebootInstance hpcsetMethodMethodTypePOST
public ListContainerInstancesResult listContainerInstances(ListContainerInstancesRequest request) {request = beforeClientExecution(request);return executeListContainerInstances(request);},public ListContainerInstancesResult listContainerInstancesListContainerInstancesRequest request request  beforeClientExecutionrequestreturn executeListContainerInstancesrequest
public ListClustersResult listClusters(ListClustersRequest request) {request = beforeClientExecution(request);return executeListClusters(request);},public ListClustersResult listClustersListClustersRequest request request  beforeClientExecutionrequestreturn executeListClustersrequest
"public static boolean equals(boolean[] array1, boolean[] array2) {if (array1 == array2) {return true;}if (array1 == null || array2 == null || array1.length != array2.length) {return false;}for (int i = 0; i < array1.length; i++) {if (array1[i] != array2[i]) {return false;}}return true;}",public static boolean equalsboolean array1 boolean array2 if array1  array2 return trueif array1  null  array2  null  array1length  array2length return falsefor int i  0 i  array1length i if array1i  array2i return falsereturn true
"public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final int byte0 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = byte0 >>> 5;values[valuesOffset++] = (byte0 >>> 2) & 7;final int byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte0 & 3) << 1) | (byte1 >>> 7);values[valuesOffset++] = (byte1 >>> 4) & 7;values[valuesOffset++] = (byte1 >>> 1) & 7;final int byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 1) << 2) | (byte2 >>> 6);values[valuesOffset++] = (byte2 >>> 3) & 7;values[valuesOffset++] = byte2 & 7;}}",public void decodebyte blocks int blocksOffset int values int valuesOffset int iterations for int i  0 i  iterations i final int byte0  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  5valuesvaluesOffset  byte0  2  7final int byte1  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  3  1  byte1  7valuesvaluesOffset  byte1  4  7valuesvaluesOffset  byte1  1  7final int byte2  blocksblocksOffset  0xFFvaluesvaluesOffset  byte1  1  2  byte2  6valuesvaluesOffset  byte2  3  7valuesvaluesOffset  byte2  7
public GetRelationalDatabaseSnapshotResult getRelationalDatabaseSnapshot(GetRelationalDatabaseSnapshotRequest request) {request = beforeClientExecution(request);return executeGetRelationalDatabaseSnapshot(request);},public GetRelationalDatabaseSnapshotResult getRelationalDatabaseSnapshotGetRelationalDatabaseSnapshotRequest request request  beforeClientExecutionrequestreturn executeGetRelationalDatabaseSnapshotrequest
"public int fillFields(byte[] data, int offset, EscherRecordFactory recordFactory) {int bytesRemaining = readHeader( data, offset );int pos = offset + 8;field_1_blipTypeWin32 = data[pos];field_2_blipTypeMacOS = data[pos + 1];System.arraycopy( data, pos + 2, field_3_uid, 0, 16 );field_4_tag = LittleEndian.getShort( data, pos + 18 );field_5_size = LittleEndian.getInt( data, pos + 20 );field_6_ref = LittleEndian.getInt( data, pos + 24 );field_7_offset = LittleEndian.getInt( data, pos + 28 );field_8_usage = data[pos + 32];field_9_name = data[pos + 33];field_10_unused2 = data[pos + 34];field_11_unused3 = data[pos + 35];bytesRemaining -= 36;int bytesRead = 0;if (bytesRemaining > 0) {field_12_blipRecord = (EscherBlipRecord) recordFactory.createRecord( data, pos + 36 );bytesRead = field_12_blipRecord.fillFields( data, pos + 36, recordFactory );}pos += 36 + bytesRead;bytesRemaining -= bytesRead;_remainingData = IOUtils.safelyAllocate(bytesRemaining, MAX_RECORD_LENGTH);System.arraycopy( data, pos, _remainingData, 0, bytesRemaining );return bytesRemaining + 8 + 36 + (field_12_blipRecord == null ? 0 : field_12_blipRecord.getRecordSize()) ;}",public int fillFieldsbyte data int offset EscherRecordFactory recordFactory int bytesRemaining  readHeader data offset int pos  offset  8field1blipTypeWin32  dataposfield2blipTypeMacOS  datapos  1Systemarraycopy data pos  2 field3uid 0 16 field4tag  LittleEndiangetShort data pos  18 field5size  LittleEndiangetInt data pos  20 field6ref  LittleEndiangetInt data pos  24 field7offset  LittleEndiangetInt data pos  28 field8usage  datapos  32field9name  datapos  33field10unused2  datapos  34field11unused3  datapos  35bytesRemaining  36int bytesRead  0if bytesRemaining  0 field12blipRecord  EscherBlipRecord recordFactorycreateRecord data pos  36 bytesRead  field12blipRecordfillFields data pos  36 recordFactory pos  36  bytesReadbytesRemaining  bytesReadremainingData  IOUtilssafelyAllocatebytesRemaining MAXRECORDLENGTHSystemarraycopy data pos remainingData 0 bytesRemaining return bytesRemaining  8  36  field12blipRecord  null  0  field12blipRecordgetRecordSize 
@Override public int size() {return size;},Override public int size return size
public PhoneNumberValidateResult phoneNumberValidate(PhoneNumberValidateRequest request) {request = beforeClientExecution(request);return executePhoneNumberValidate(request);},public PhoneNumberValidateResult phoneNumberValidatePhoneNumberValidateRequest request request  beforeClientExecutionrequestreturn executePhoneNumberValidaterequest
public CreateTransformJobResult createTransformJob(CreateTransformJobRequest request) {request = beforeClientExecution(request);return executeCreateTransformJob(request);},public CreateTransformJobResult createTransformJobCreateTransformJobRequest request request  beforeClientExecutionrequestreturn executeCreateTransformJobrequest
public synchronized int search(Object o) {final Object[] dumpArray = elementData;final int size = elementCount;if (o != null) {for (int i = size - 1; i >= 0; i--) {if (o.equals(dumpArray[i])) {return size - i;}}} else {for (int i = size - 1; i >= 0; i--) {if (dumpArray[i] == null) {return size - i;}}}return -1;},public synchronized int searchObject o final Object dumpArray  elementDatafinal int size  elementCountif o  null for int i  size  1 i  0 i if oequalsdumpArrayi return size  i else for int i  size  1 i  0 i if dumpArrayi  null return size  ireturn 1
public DescribeCacheParametersRequest(String cacheParameterGroupName) {setCacheParameterGroupName(cacheParameterGroupName);},public DescribeCacheParametersRequestString cacheParameterGroupName setCacheParameterGroupNamecacheParameterGroupName
public void clear() {synchronized (mutex) {delegate().clear();}},public void clear synchronized mutex delegateclear
public boolean hasRevSort(RevSort sort) {return sorting.contains(sort);},public boolean hasRevSortRevSort sort return sortingcontainssort
public StashListCommand stashList() {return new StashListCommand(repo);},public StashListCommand stashList return new StashListCommandrepo
"public PutGroupPolicyRequest(String groupName, String policyName, String policyDocument) {setGroupName(groupName);setPolicyName(policyName);setPolicyDocument(policyDocument);}",public PutGroupPolicyRequestString groupName String policyName String policyDocument setGroupNamegroupNamesetPolicyNamepolicyNamesetPolicyDocumentpolicyDocument
"public String toString() {return super.get() + ""="" + value;}",public String toString return superget    value
public void writeByte(int v) {checkPosition(1);_buf[_writeIndex++] = (byte)v;},public void writeByteint v checkPosition1bufwriteIndex  bytev
public CountryRecord(RecordInputStream in) {field_1_default_country = in.readShort();field_2_current_country = in.readShort();},public CountryRecordRecordInputStream in field1defaultcountry  inreadShortfield2currentcountry  inreadShort
public UpdateContainerAgentResult updateContainerAgent(UpdateContainerAgentRequest request) {request = beforeClientExecution(request);return executeUpdateContainerAgent(request);},public UpdateContainerAgentResult updateContainerAgentUpdateContainerAgentRequest request request  beforeClientExecutionrequestreturn executeUpdateContainerAgentrequest
public DescribeNodeConfigurationOptionsResult describeNodeConfigurationOptions(DescribeNodeConfigurationOptionsRequest request) {request = beforeClientExecution(request);return executeDescribeNodeConfigurationOptions(request);},public DescribeNodeConfigurationOptionsResult describeNodeConfigurationOptionsDescribeNodeConfigurationOptionsRequest request request  beforeClientExecutionrequestreturn executeDescribeNodeConfigurationOptionsrequest
"public AddImageRequest() {super(""ImageSearch"", ""2019-03-25"", ""AddImage"", ""imagesearch"");setUriPattern(""/v2/image/add"");setMethod(MethodType.POST);}",public AddImageRequest superImageSearch 20190325 AddImage imagesearchsetUriPatternv2imageaddsetMethodMethodTypePOST
public BorderFormatting() {field_13_border_styles1    = 0;field_14_border_styles2    = 0;},public BorderFormatting field13borderstyles1     0field14borderstyles2     0
"public String toFormulaString(String[] operands) {StringBuilder buffer = new StringBuilder();buffer.append(operands[0]);buffer.append("" "");buffer.append(operands[1]);return buffer.toString();}",public String toFormulaStringString operands StringBuilder buffer  new StringBuilderbufferappendoperands0bufferappend bufferappendoperands1return buffertoString
public ListTagsForStreamResult listTagsForStream(ListTagsForStreamRequest request) {request = beforeClientExecution(request);return executeListTagsForStream(request);},public ListTagsForStreamResult listTagsForStreamListTagsForStreamRequest request request  beforeClientExecutionrequestreturn executeListTagsForStreamrequest
"public HSSFName createName(){NameRecord nameRecord = workbook.createName();HSSFName newName = new HSSFName(this, nameRecord);names.add(newName);return newName;}",public HSSFName createNameNameRecord nameRecord  workbookcreateNameHSSFName newName  new HSSFNamethis nameRecordnamesaddnewNamereturn newName
public CreateLogPatternResult createLogPattern(CreateLogPatternRequest request) {request = beforeClientExecution(request);return executeCreateLogPattern(request);},public CreateLogPatternResult createLogPatternCreateLogPatternRequest request request  beforeClientExecutionrequestreturn executeCreateLogPatternrequest
public GetTransitGatewayRouteTablePropagationsResult getTransitGatewayRouteTablePropagations(GetTransitGatewayRouteTablePropagationsRequest request) {request = beforeClientExecution(request);return executeGetTransitGatewayRouteTablePropagations(request);},public GetTransitGatewayRouteTablePropagationsResult getTransitGatewayRouteTablePropagationsGetTransitGatewayRouteTablePropagationsRequest request request  beforeClientExecutionrequestreturn executeGetTransitGatewayRouteTablePropagationsrequest
"public void setup() throws Exception {super.setup();String inputDirProp = getRunData().getConfig().get(ADDINDEXES_INPUT_DIR, null);if (inputDirProp == null) {throw new IllegalArgumentException(""config parameter "" + ADDINDEXES_INPUT_DIR + "" not specified in configuration"");}inputDir = FSDirectory.open(Paths.get(inputDirProp));}",public void setup throws Exception supersetupString inputDirProp  getRunDatagetConfiggetADDINDEXESINPUTDIR nullif inputDirProp  null throw new IllegalArgumentExceptionconfig parameter   ADDINDEXESINPUTDIR   not specified in configurationinputDir  FSDirectoryopenPathsgetinputDirProp
public StashDropCommand setAll(boolean all) {this.all = all;return this;},public StashDropCommand setAllboolean all thisall  allreturn this
public ListTrainingJobsForHyperParameterTuningJobResult listTrainingJobsForHyperParameterTuningJob(ListTrainingJobsForHyperParameterTuningJobRequest request) {request = beforeClientExecution(request);return executeListTrainingJobsForHyperParameterTuningJob(request);},public ListTrainingJobsForHyperParameterTuningJobResult listTrainingJobsForHyperParameterTuningJobListTrainingJobsForHyperParameterTuningJobRequest request request  beforeClientExecutionrequestreturn executeListTrainingJobsForHyperParameterTuningJobrequest
"public String toString() {return String.format(""Match %s; found %d labels"",succeeded() ? ""succeeded"" : ""failed"",getLabels().size());}",public String toString return StringformatMatch s found d labelssucceeded  succeeded  failedgetLabelssize
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {double result;try {double d = singleOperandEvaluate(arg0, srcRowIndex, srcColumnIndex);result = evaluate(d);checkValue(result);} catch (EvaluationException e) {return e.getErrorEval();}return new NumberEval(result);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 double resulttry double d  singleOperandEvaluatearg0 srcRowIndex srcColumnIndexresult  evaluatedcheckValueresult catch EvaluationException e return egetErrorEvalreturn new NumberEvalresult
public CacheSecurityGroup authorizeCacheSecurityGroupIngress(AuthorizeCacheSecurityGroupIngressRequest request) {request = beforeClientExecution(request);return executeAuthorizeCacheSecurityGroupIngress(request);},public CacheSecurityGroup authorizeCacheSecurityGroupIngressAuthorizeCacheSecurityGroupIngressRequest request request  beforeClientExecutionrequestreturn executeAuthorizeCacheSecurityGroupIngressrequest
public String getInflectionType() {return dictionary.getInflectionType(wordId);},public String getInflectionType return dictionarygetInflectionTypewordId
@Override public boolean remove(Object o) {return contains(o) &&(removeValuesForKey(((Multiset.Entry<?>) o).getElement()) > 0);},Override public boolean removeObject o return containso removeValuesForKeyMultisetEntry ogetElement  0
public RevCommit next() {RevCommit r = next;next = nextForIterator();return r;},public RevCommit next RevCommit r  nextnext  nextForIteratorreturn r
public BatchAssociateUserStackResult batchAssociateUserStack(BatchAssociateUserStackRequest request) {request = beforeClientExecution(request);return executeBatchAssociateUserStack(request);},public BatchAssociateUserStackResult batchAssociateUserStackBatchAssociateUserStackRequest request request  beforeClientExecutionrequestreturn executeBatchAssociateUserStackrequest
public ScenarioProtectRecord clone() {return copy();},public ScenarioProtectRecord clone return copy
public final Class getBundleClass() {return bundleClass;},public final Class getBundleClass return bundleClass
"public void nextBuffer() {if (1+bufferUpto == buffers.length) {int[][] newBuffers = new int[(int) (buffers.length*1.5)][];System.arraycopy(buffers, 0, newBuffers, 0, buffers.length);buffers = newBuffers;}buffer = buffers[1+bufferUpto] = allocator.getIntBlock();bufferUpto++;intUpto = 0;intOffset += INT_BLOCK_SIZE;}",public void nextBuffer if 1bufferUpto  bufferslength int newBuffers  new intint bufferslength15Systemarraycopybuffers 0 newBuffers 0 bufferslengthbuffers  newBuffersbuffer  buffers1bufferUpto  allocatorgetIntBlockbufferUptointUpto  0intOffset  INTBLOCKSIZE
public DeleteVpnGatewayRequest(String vpnGatewayId) {setVpnGatewayId(vpnGatewayId);},public DeleteVpnGatewayRequestString vpnGatewayId setVpnGatewayIdvpnGatewayId
"public static Encoder getEncoder(Format format, int version, int bitsPerValue) {checkVersion(version);return BulkOperation.of(format, bitsPerValue);}",public static Encoder getEncoderFormat format int version int bitsPerValue checkVersionversionreturn BulkOperationofformat bitsPerValue
"public ClassificationResult(T assignedClass, double score) {this.assignedClass = assignedClass;this.score = score;}",public ClassificationResultT assignedClass double score thisassignedClass  assignedClassthisscore  score
public CreateRelationalDatabaseSnapshotResult createRelationalDatabaseSnapshot(CreateRelationalDatabaseSnapshotRequest request) {request = beforeClientExecution(request);return executeCreateRelationalDatabaseSnapshot(request);},public CreateRelationalDatabaseSnapshotResult createRelationalDatabaseSnapshotCreateRelationalDatabaseSnapshotRequest request request  beforeClientExecutionrequestreturn executeCreateRelationalDatabaseSnapshotrequest
public NameRecord addName(NameRecord name) {getOrCreateLinkTable().addName(name);return name;},public NameRecord addNameNameRecord name getOrCreateLinkTableaddNamenamereturn name
public void serialize(LittleEndianOutput out) {out.writeShort(getFirstRow());out.writeShort(getLastRow());out.writeByte(getFirstColumn());out.writeByte(getLastColumn());},public void serializeLittleEndianOutput out outwriteShortgetFirstRowoutwriteShortgetLastRowoutwriteBytegetFirstColumnoutwriteBytegetLastColumn
public String getKey() {return key;},public String getKey return key
public GetBlockPublicAccessConfigurationResult getBlockPublicAccessConfiguration(GetBlockPublicAccessConfigurationRequest request) {request = beforeClientExecution(request);return executeGetBlockPublicAccessConfiguration(request);},public GetBlockPublicAccessConfigurationResult getBlockPublicAccessConfigurationGetBlockPublicAccessConfigurationRequest request request  beforeClientExecutionrequestreturn executeGetBlockPublicAccessConfigurationrequest
public static long getResultSize(byte[] delta) {int p = 0;int c;do {c = delta[p++] & 0xff;} while ((c & 0x80) != 0);long resLen = 0;int shift = 0;do {c = delta[p++] & 0xff;resLen |= ((long) (c & 0x7f)) << shift;shift += 7;} while ((c & 0x80) != 0);return resLen;},public static long getResultSizebyte delta int p  0int cdo c  deltap  0xff while c  0x80  0long resLen  0int shift  0do c  deltap  0xffresLen  long c  0x7f  shiftshift  7 while c  0x80  0return resLen
public long ramBytesUsed() {return RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER + Integer.BYTES);},public long ramBytesUsed return RamUsageEstimatoralignObjectSizeRamUsageEstimatorNUMBYTESOBJECTHEADER  IntegerBYTES
"public NoteRecord() {field_6_author = """";field_3_flags = 0;field_7_padding = DEFAULT_PADDING; }",public NoteRecord field6author  field3flags  0field7padding  DEFAULTPADDING 
"public CellReference[] getAllReferencedCells() {if(_isSingleCell) {return  new CellReference[] { _firstCell, };}int minRow = Math.min(_firstCell.getRow(), _lastCell.getRow());int maxRow = Math.max(_firstCell.getRow(), _lastCell.getRow());int minCol = Math.min(_firstCell.getCol(), _lastCell.getCol());int maxCol = Math.max(_firstCell.getCol(), _lastCell.getCol());String sheetName = _firstCell.getSheetName();List<CellReference> refs = new ArrayList<>();for(int row=minRow; row<=maxRow; row++) {for(int col=minCol; col<=maxCol; col++) {CellReference ref = new CellReference(sheetName, row, col, _firstCell.isRowAbsolute(), _firstCell.isColAbsolute());refs.add(ref);}}return refs.toArray(new CellReference[0]);}",public CellReference getAllReferencedCells ifisSingleCell return  new CellReference  firstCell int minRow  MathminfirstCellgetRow lastCellgetRowint maxRow  MathmaxfirstCellgetRow lastCellgetRowint minCol  MathminfirstCellgetCol lastCellgetColint maxCol  MathmaxfirstCellgetCol lastCellgetColString sheetName  firstCellgetSheetNameListCellReference refs  new ArrayListforint rowminRow rowmaxRow row forint colminCol colmaxCol col CellReference ref  new CellReferencesheetName row col firstCellisRowAbsolute firstCellisColAbsoluterefsaddrefreturn refstoArraynew CellReference0
public String[] listAll() {ensureOpen();String[] res = entries.keySet().toArray(new String[entries.size()]);for (int i = 0; i < res.length; i++) {res[i] = segmentName + res[i];}return res;},public String listAll ensureOpenString res  entrieskeySettoArraynew Stringentriessizefor int i  0 i  reslength i resi  segmentName  resireturn res
public UpdateDataRetentionResult updateDataRetention(UpdateDataRetentionRequest request) {request = beforeClientExecution(request);return executeUpdateDataRetention(request);},public UpdateDataRetentionResult updateDataRetentionUpdateDataRetentionRequest request request  beforeClientExecutionrequestreturn executeUpdateDataRetentionrequest
public CreateDistributionRequest(DistributionConfig distributionConfig) {setDistributionConfig(distributionConfig);},public CreateDistributionRequestDistributionConfig distributionConfig setDistributionConfigdistributionConfig
public DescribeBatchPredictionsResult describeBatchPredictions(DescribeBatchPredictionsRequest request) {request = beforeClientExecution(request);return executeDescribeBatchPredictions(request);},public DescribeBatchPredictionsResult describeBatchPredictionsDescribeBatchPredictionsRequest request request  beforeClientExecutionrequestreturn executeDescribeBatchPredictionsrequest
public float getScore(int index) {return scores[index];},public float getScoreint index return scoresindex
public BatchUpdatePhoneNumberResult batchUpdatePhoneNumber(BatchUpdatePhoneNumberRequest request) {request = beforeClientExecution(request);return executeBatchUpdatePhoneNumber(request);},public BatchUpdatePhoneNumberResult batchUpdatePhoneNumberBatchUpdatePhoneNumberRequest request request  beforeClientExecutionrequestreturn executeBatchUpdatePhoneNumberrequest
public LMSimilarity(CollectionModel collectionModel) {this.collectionModel = collectionModel;},public LMSimilarityCollectionModel collectionModel thiscollectionModel  collectionModel
public GetGlobalSettingsResult getGlobalSettings(GetGlobalSettingsRequest request) {request = beforeClientExecution(request);return executeGetGlobalSettings(request);},public GetGlobalSettingsResult getGlobalSettingsGetGlobalSettingsRequest request request  beforeClientExecutionrequestreturn executeGetGlobalSettingsrequest
public CreateHITTypeResult createHITType(CreateHITTypeRequest request) {request = beforeClientExecution(request);return executeCreateHITType(request);},public CreateHITTypeResult createHITTypeCreateHITTypeRequest request request  beforeClientExecutionrequestreturn executeCreateHITTyperequest
public MLTConfig build() {return new MLTConfig(this);},public MLTConfig build return new MLTConfigthis
public CharsRef(String string) {this.chars = string.toCharArray();this.offset = 0;this.length = chars.length;},public CharsRefString string thischars  stringtoCharArraythisoffset  0thislength  charslength
public ListFargateProfilesResult listFargateProfiles(ListFargateProfilesRequest request) {request = beforeClientExecution(request);return executeListFargateProfiles(request);},public ListFargateProfilesResult listFargateProfilesListFargateProfilesRequest request request  beforeClientExecutionrequestreturn executeListFargateProfilesrequest
"public Entry<K, V> floorEntry(K key) {return immutableCopy(findBounded(key, FLOOR));}",public EntryK V floorEntryK key return immutableCopyfindBoundedkey FLOOR
public boolean equals( Object o ) {return o instanceof NorwegianStemmer;},public boolean equals Object o  return o instanceof NorwegianStemmer
public DeleteVaultNotificationsResult deleteVaultNotifications(DeleteVaultNotificationsRequest request) {request = beforeClientExecution(request);return executeDeleteVaultNotifications(request);},public DeleteVaultNotificationsResult deleteVaultNotificationsDeleteVaultNotificationsRequest request request  beforeClientExecutionrequestreturn executeDeleteVaultNotificationsrequest
"public static boolean endsWith(char s[], int len, String suffix) {final int suffixLen = suffix.length();if (suffixLen > len)return false;for (int i = suffixLen - 1; i >= 0; i--)if (s[len -(suffixLen - i)] != suffix.charAt(i))return false;return true;}",public static boolean endsWithchar s int len String suffix final int suffixLen  suffixlengthif suffixLen  lenreturn falsefor int i  suffixLen  1 i  0 iif slen suffixLen  i  suffixcharAtireturn falsereturn true
"public synchronized void setRequireDimCount(String dimName, boolean v) {DimConfig ft = fieldTypes.get(dimName);if (ft == null) {ft = new DimConfig();fieldTypes.put(dimName, ft);}ft.requireDimCount = v;}",public synchronized void setRequireDimCountString dimName boolean v DimConfig ft  fieldTypesgetdimNameif ft  null ft  new DimConfigfieldTypesputdimName ftftrequireDimCount  v
public HSSFName getName(String name) {int nameIndex = getNameIndex(name);if (nameIndex < 0) {return null;}return names.get(nameIndex);},public HSSFName getNameString name int nameIndex  getNameIndexnameif nameIndex  0 return nullreturn namesgetnameIndex
"public ScriptBootstrapActionConfig(String path, java.util.List<String> args) {setPath(path);setArgs(args);}",public ScriptBootstrapActionConfigString path javautilListString args setPathpathsetArgsargs
public RegisterApplicationRevisionResult registerApplicationRevision(RegisterApplicationRevisionRequest request) {request = beforeClientExecution(request);return executeRegisterApplicationRevision(request);},public RegisterApplicationRevisionResult registerApplicationRevisionRegisterApplicationRevisionRequest request request  beforeClientExecutionrequestreturn executeRegisterApplicationRevisionrequest
public SendTestEventNotificationResult sendTestEventNotification(SendTestEventNotificationRequest request) {request = beforeClientExecution(request);return executeSendTestEventNotification(request);},public SendTestEventNotificationResult sendTestEventNotificationSendTestEventNotificationRequest request request  beforeClientExecutionrequestreturn executeSendTestEventNotificationrequest
public void setRefLogIdent(PersonIdent pi) {refLogIdent = pi;},public void setRefLogIdentPersonIdent pi refLogIdent  pi
public GetDomainDeliverabilityCampaignResult getDomainDeliverabilityCampaign(GetDomainDeliverabilityCampaignRequest request) {request = beforeClientExecution(request);return executeGetDomainDeliverabilityCampaign(request);},public GetDomainDeliverabilityCampaignResult getDomainDeliverabilityCampaignGetDomainDeliverabilityCampaignRequest request request  beforeClientExecutionrequestreturn executeGetDomainDeliverabilityCampaignrequest
"public String toFormulaString() {StringBuilder b = new StringBuilder();b.append(""{"");for (int y = 0; y < _nRows; y++) {if (y > 0) {b.append("";"");}for (int x = 0; x < _nColumns; x++) {if (x > 0) {b.append("","");}Object o = _arrayValues[getValueIndex(x, y)];b.append(getConstantText(o));}}b.append(""}"");return b.toString();}",public String toFormulaString StringBuilder b  new StringBuilderbappendfor int y  0 y  nRows y if y  0 bappendfor int x  0 x  nColumns x if x  0 bappendObject o  arrayValuesgetValueIndexx ybappendgetConstantTextobappendreturn btoString
"public ShingleFilterFactory(Map<String, String> args) {super(args);maxShingleSize = getInt(args, ""maxShingleSize"", ShingleFilter.DEFAULT_MAX_SHINGLE_SIZE);if (maxShingleSize < 2) {throw new IllegalArgumentException(""Invalid maxShingleSize ("" + maxShingleSize + "") - must be at least 2"");}minShingleSize = getInt(args, ""minShingleSize"", ShingleFilter.DEFAULT_MIN_SHINGLE_SIZE);if (minShingleSize < 2) {throw new IllegalArgumentException(""Invalid minShingleSize ("" + minShingleSize + "") - must be at least 2"");}if (minShingleSize > maxShingleSize) {throw new IllegalArgumentException(""Invalid minShingleSize ("" + minShingleSize + "") - must be no greater than maxShingleSize ("" + maxShingleSize + "")"");}outputUnigrams = getBoolean(args, ""outputUnigrams"", true);outputUnigramsIfNoShingles = getBoolean(args, ""outputUnigramsIfNoShingles"", false);tokenSeparator = get(args, ""tokenSeparator"", ShingleFilter.DEFAULT_TOKEN_SEPARATOR);fillerToken = get(args, ""fillerToken"", ShingleFilter.DEFAULT_FILLER_TOKEN);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public ShingleFilterFactoryMapString String args superargsmaxShingleSize  getIntargs maxShingleSize ShingleFilterDEFAULTMAXSHINGLESIZEif maxShingleSize  2 throw new IllegalArgumentExceptionInvalid maxShingleSize   maxShingleSize    must be at least 2minShingleSize  getIntargs minShingleSize ShingleFilterDEFAULTMINSHINGLESIZEif minShingleSize  2 throw new IllegalArgumentExceptionInvalid minShingleSize   minShingleSize    must be at least 2if minShingleSize  maxShingleSize throw new IllegalArgumentExceptionInvalid minShingleSize   minShingleSize    must be no greater than maxShingleSize   maxShingleSize  outputUnigrams  getBooleanargs outputUnigrams trueoutputUnigramsIfNoShingles  getBooleanargs outputUnigramsIfNoShingles falsetokenSeparator  getargs tokenSeparator ShingleFilterDEFAULTTOKENSEPARATORfillerToken  getargs fillerToken ShingleFilterDEFAULTFILLERTOKENif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public UpdateRelationalDatabaseParametersResult updateRelationalDatabaseParameters(UpdateRelationalDatabaseParametersRequest request) {request = beforeClientExecution(request);return executeUpdateRelationalDatabaseParameters(request);},public UpdateRelationalDatabaseParametersResult updateRelationalDatabaseParametersUpdateRelationalDatabaseParametersRequest request request  beforeClientExecutionrequestreturn executeUpdateRelationalDatabaseParametersrequest
"public static Collection<ParseTree> findAllRuleNodes(ParseTree t, int ruleIndex) {return findAllNodes(t, ruleIndex, false);}",public static CollectionParseTree findAllRuleNodesParseTree t int ruleIndex return findAllNodest ruleIndex false
public int getObjectCount() {return entryCount;},public int getObjectCount return entryCount
"public ActionTransition(ATNState target, int ruleIndex, int actionIndex, boolean isCtxDependent) {super(target);this.ruleIndex = ruleIndex;this.actionIndex = actionIndex;this.isCtxDependent = isCtxDependent;}",public ActionTransitionATNState target int ruleIndex int actionIndex boolean isCtxDependent supertargetthisruleIndex  ruleIndexthisactionIndex  actionIndexthisisCtxDependent  isCtxDependent
"public long get(int index) {final int blockOffset = index / valuesPerBlock;final long skip = ((long) blockOffset) << 3;try {in.seek(startPointer + skip);long block = in.readLong();final int offsetInBlock = index % valuesPerBlock;return (block >>> (offsetInBlock * bitsPerValue)) & mask;} catch (IOException e) {throw new IllegalStateException(""failed"", e);}}",public long getint index final int blockOffset  index  valuesPerBlockfinal long skip  long blockOffset  3try inseekstartPointer  skiplong block  inreadLongfinal int offsetInBlock  index  valuesPerBlockreturn block  offsetInBlock  bitsPerValue  mask catch IOException e throw new IllegalStateExceptionfailed e
"public String getSignerType() {return ""BEARERTOKEN"";}",public String getSignerType return BEARERTOKEN
public PipedOutputStream(PipedInputStream target) throws IOException {connect(target);},public PipedOutputStreamPipedInputStream target throws IOException connecttarget
public DeleteLedgerResult deleteLedger(DeleteLedgerRequest request) {request = beforeClientExecution(request);return executeDeleteLedger(request);},public DeleteLedgerResult deleteLedgerDeleteLedgerRequest request request  beforeClientExecutionrequestreturn executeDeleteLedgerrequest
public GetCognitoEventsResult getCognitoEvents(GetCognitoEventsRequest request) {request = beforeClientExecution(request);return executeGetCognitoEvents(request);},public GetCognitoEventsResult getCognitoEventsGetCognitoEventsRequest request request  beforeClientExecutionrequestreturn executeGetCognitoEventsrequest
"public NameXPtg getNameXPtg(String name, SheetIdentifier sheet) {int sheetRefIndex = getSheetExtIx(sheet);return _iBook.getNameXPtg(name, sheetRefIndex, _uBook.getUDFFinder());}",public NameXPtg getNameXPtgString name SheetIdentifier sheet int sheetRefIndex  getSheetExtIxsheetreturn iBookgetNameXPtgname sheetRefIndex uBookgetUDFFinder
public ListResolverEndpointsResult listResolverEndpoints(ListResolverEndpointsRequest request) {request = beforeClientExecution(request);return executeListResolverEndpoints(request);},public ListResolverEndpointsResult listResolverEndpointsListResolverEndpointsRequest request request  beforeClientExecutionrequestreturn executeListResolverEndpointsrequest
public String readLine() {try {return Reader.readLine();} catch (IOException e) {throw new IOError(e);}},public String readLine try return ReaderreadLine catch IOException e throw new IOErrore
public int hash2(char carray[]) {int hash = 5381;for (int i = 0; i < carray.length; i++) {char d = carray[i];hash = ((hash << 5) + hash) + d & 0x00FF;hash = ((hash << 5) + hash) + d >> 8;}return hash;},public int hash2char carray int hash  5381for int i  0 i  carraylength i char d  carrayihash  hash  5  hash  d  0x00FFhash  hash  5  hash  d  8return hash
"public static long toBookSheetColumn(int bookIndex, int sheetIndex, int columnIndex) {return ((bookIndex   & 0xFFFFL) << 48)  +((sheetIndex  & 0xFFFFL) << 32) +((columnIndex & 0xFFFFL) << 0);}",public static long toBookSheetColumnint bookIndex int sheetIndex int columnIndex return bookIndex    0xFFFFL  48  sheetIndex   0xFFFFL  32 columnIndex  0xFFFFL  0
public CreateConfigurationProfileResult createConfigurationProfile(CreateConfigurationProfileRequest request) {request = beforeClientExecution(request);return executeCreateConfigurationProfile(request);},public CreateConfigurationProfileResult createConfigurationProfileCreateConfigurationProfileRequest request request  beforeClientExecutionrequestreturn executeCreateConfigurationProfilerequest
public ReplicationGroup startMigration(StartMigrationRequest request) {request = beforeClientExecution(request);return executeStartMigration(request);},public ReplicationGroup startMigrationStartMigrationRequest request request  beforeClientExecutionrequestreturn executeStartMigrationrequest
"public OffsetLimitTokenFilter(TokenStream input, int offsetLimit) {super(input);this.offsetLimit = offsetLimit;}",public OffsetLimitTokenFilterTokenStream input int offsetLimit superinputthisoffsetLimit  offsetLimit
"public final void write(byte[] b, int off, int len)throws IOException {while (0 < len) {final int n = Math.min(len, BYTES_TO_WRITE_BEFORE_CANCEL_CHECK);count += n;if (checkCancelAt <= count) {if (writeMonitor.isCancelled()) {throw new IOException(JGitText.get().packingCancelledDuringObjectsWriting);}checkCancelAt = count + BYTES_TO_WRITE_BEFORE_CANCEL_CHECK;}out.write(b, off, n);md.update(b, off, n);off += n;len -= n;}}",public final void writebyte b int off int lenthrows IOException while 0  len final int n  Mathminlen BYTESTOWRITEBEFORECANCELCHECKcount  nif checkCancelAt  count if writeMonitorisCancelled throw new IOExceptionJGitTextgetpackingCancelledDuringObjectsWritingcheckCancelAt  count  BYTESTOWRITEBEFORECANCELCHECKoutwriteb off nmdupdateb off noff  nlen  n
"public Cell merge(Cell m, Cell e) {Cell n = new Cell();if (m.skip != e.skip) {return null;}if (m.cmd >= 0) {if (e.cmd >= 0) {if (m.cmd == e.cmd) {n.cmd = m.cmd;} else {return null;}} else {n.cmd = m.cmd;}} else {n.cmd = e.cmd;}if (m.ref >= 0) {if (e.ref >= 0) {if (m.ref == e.ref) {if (m.skip == e.skip) {n.ref = m.ref;} else {return null;}} else {return null;}} else {n.ref = m.ref;}} else {n.ref = e.ref;}n.cnt = m.cnt + e.cnt;n.skip = m.skip;return n;}",public Cell mergeCell m Cell e Cell n  new Cellif mskip  eskip return nullif mcmd  0 if ecmd  0 if mcmd  ecmd ncmd  mcmd else return null else ncmd  mcmd else ncmd  ecmdif mref  0 if eref  0 if mref  eref if mskip  eskip nref  mref else return null else return null else nref  mref else nref  erefncnt  mcnt  ecntnskip  mskipreturn n
public GetCampaignActivitiesResult getCampaignActivities(GetCampaignActivitiesRequest request) {request = beforeClientExecution(request);return executeGetCampaignActivities(request);},public GetCampaignActivitiesResult getCampaignActivitiesGetCampaignActivitiesRequest request request  beforeClientExecutionrequestreturn executeGetCampaignActivitiesrequest
public long estimateBytesUsed() {return bytesUsed;},public long estimateBytesUsed return bytesUsed
public FunctionNameEval(String functionName) {_functionName = functionName;},public FunctionNameEvalString functionName functionName  functionName
public final float averageBytesPerChar() {return averageBytesPerChar;},public final float averageBytesPerChar return averageBytesPerChar
"public CreateCacheSecurityGroupRequest(String cacheSecurityGroupName, String description) {setCacheSecurityGroupName(cacheSecurityGroupName);setDescription(description);}",public CreateCacheSecurityGroupRequestString cacheSecurityGroupName String description setCacheSecurityGroupNamecacheSecurityGroupNamesetDescriptiondescription
"public void removeAt(int index) {System.arraycopy(mKeys, index + 1, mKeys, index, mSize - (index + 1));System.arraycopy(mValues, index + 1, mValues, index, mSize - (index + 1));mSize--;}",public void removeAtint index SystemarraycopymKeys index  1 mKeys index mSize  index  1SystemarraycopymValues index  1 mValues index mSize  index  1mSize
public DescribeIndexFieldsResult describeIndexFields(DescribeIndexFieldsRequest request) {request = beforeClientExecution(request);return executeDescribeIndexFields(request);},public DescribeIndexFieldsResult describeIndexFieldsDescribeIndexFieldsRequest request request  beforeClientExecutionrequestreturn executeDescribeIndexFieldsrequest
public void remove(int key) {delete(key);},public void removeint key deletekey
public ShortBuffer duplicate() {ByteBuffer bb = byteBuffer.duplicate().order(byteBuffer.order());ShortToByteBufferAdapter buf = new ShortToByteBufferAdapter(bb);buf.limit = limit;buf.position = position;buf.mark = mark;return buf;},public ShortBuffer duplicate ByteBuffer bb  byteBufferduplicateorderbyteBufferorderShortToByteBufferAdapter buf  new ShortToByteBufferAdapterbbbuflimit  limitbufposition  positionbufmark  markreturn buf
public void addDbcell(int cell){if (field_5_dbcells == null){field_5_dbcells = new IntList();}field_5_dbcells.add(cell);},public void addDbcellint cellif field5dbcells  nullfield5dbcells  new IntListfield5dbcellsaddcell
public DeleteSubnetResult deleteSubnet(DeleteSubnetRequest request) {request = beforeClientExecution(request);return executeDeleteSubnet(request);},public DeleteSubnetResult deleteSubnetDeleteSubnetRequest request request  beforeClientExecutionrequestreturn executeDeleteSubnetrequest
"public List<HSSFPictureData> getAllPictures(){List<HSSFPictureData> pictures = new ArrayList<>();for (org.apache.poi.hssf.record.Record r : workbook.getRecords()) {if (r instanceof AbstractEscherHolderRecord) {((AbstractEscherHolderRecord) r).decode();List<EscherRecord> escherRecords = ((AbstractEscherHolderRecord) r).getEscherRecords();searchForPictures(escherRecords, pictures);}}return Collections.unmodifiableList(pictures);}",public ListHSSFPictureData getAllPicturesListHSSFPictureData pictures  new ArrayListfor orgapachepoihssfrecordRecord r  workbookgetRecords if r instanceof AbstractEscherHolderRecord AbstractEscherHolderRecord rdecodeListEscherRecord escherRecords  AbstractEscherHolderRecord rgetEscherRecordssearchForPicturesescherRecords picturesreturn CollectionsunmodifiableListpictures
public DescribeWorkspacesConnectionStatusResult describeWorkspacesConnectionStatus(DescribeWorkspacesConnectionStatusRequest request) {request = beforeClientExecution(request);return executeDescribeWorkspacesConnectionStatus(request);},public DescribeWorkspacesConnectionStatusResult describeWorkspacesConnectionStatusDescribeWorkspacesConnectionStatusRequest request request  beforeClientExecutionrequestreturn executeDescribeWorkspacesConnectionStatusrequest
"public String toString() {return ""MultiDocsAndPositionsEnum("" + Arrays.toString(getSubs()) + "")"";}",public String toString return MultiDocsAndPositionsEnum  ArraystoStringgetSubs  
"public InvokeServiceAsyncRequest() {super(""industry-brain"", ""2018-07-12"", ""InvokeServiceAsync"");setMethod(MethodType.POST);}",public InvokeServiceAsyncRequest superindustrybrain 20180712 InvokeServiceAsyncsetMethodMethodTypePOST
"public AuthorizeSecurityGroupIngressRequest(String groupName, java.util.List<IpPermission> ipPermissions) {setGroupName(groupName);setIpPermissions(ipPermissions);}",public AuthorizeSecurityGroupIngressRequestString groupName javautilListIpPermission ipPermissions setGroupNamegroupNamesetIpPermissionsipPermissions
"public static byte[] readData(InputStream stream, String section ) throws IOException {try {StringBuilder sectionText = new StringBuilder();boolean inSection = false;int c = stream.read();while ( c != -1 ) {switch ( c ) {case '[':inSection = true;break;case '\n':case '\r':inSection = false;sectionText = new StringBuilder();break;case ']':inSection = false;if ( sectionText.toString().equals( section ) ) return readData( stream, '[' );sectionText = new StringBuilder();break;default:if ( inSection ) sectionText.append( (char) c );}c = stream.read();}} finally {stream.close();}throw new IOException( ""Section '"" + section + ""' not found"" );}",public static byte readDataInputStream stream String section  throws IOException try StringBuilder sectionText  new StringBuilderboolean inSection  falseint c  streamreadwhile  c  1  switch  c  case inSection  truebreakcase ncase rinSection  falsesectionText  new StringBuilderbreakcase inSection  falseif  sectionTexttoStringequals section   return readData stream  sectionText  new StringBuilderbreakdefaultif  inSection  sectionTextappend char c c  streamread finally streamclosethrow new IOException Section   section   not found 
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval numberVE) {int number;try {number = OperandResolver.coerceValueToInt(numberVE);} catch (EvaluationException e) {return ErrorEval.VALUE_INVALID;}if (number < 0) {return ErrorEval.NUM_ERROR;}return new NumberEval(factorial(number).longValue());}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval numberVE int numbertry number  OperandResolvercoerceValueToIntnumberVE catch EvaluationException e return ErrorEvalVALUEINVALIDif number  0 return ErrorEvalNUMERRORreturn new NumberEvalfactorialnumberlongValue
public final LexerActionExecutor getLexerActionExecutor() {return lexerActionExecutor;},public final LexerActionExecutor getLexerActionExecutor return lexerActionExecutor
public EnableUserResult enableUser(EnableUserRequest request) {request = beforeClientExecution(request);return executeEnableUser(request);},public EnableUserResult enableUserEnableUserRequest request request  beforeClientExecutionrequestreturn executeEnableUserrequest
"public void fillSlice(BytesRef b, long start, int length) {assert length >= 0: ""length="" + length;assert length <= blockSize+1: ""length="" + length;b.length = length;if (length == 0) {return;}final int index = (int) (start >> blockBits);final int offset = (int) (start & blockMask);if (blockSize - offset >= length) {b.bytes = blocks[index];b.offset = offset;} else {b.bytes = new byte[length];b.offset = 0;System.arraycopy(blocks[index], offset, b.bytes, 0, blockSize-offset);System.arraycopy(blocks[1+index], 0, b.bytes, blockSize-offset, length-(blockSize-offset));}}",public void fillSliceBytesRef b long start int length assert length  0 length  lengthassert length  blockSize1 length  lengthblength  lengthif length  0 returnfinal int index  int start  blockBitsfinal int offset  int start  blockMaskif blockSize  offset  length bbytes  blocksindexboffset  offset else bbytes  new bytelengthboffset  0Systemarraycopyblocksindex offset bbytes 0 blockSizeoffsetSystemarraycopyblocks1index 0 bbytes blockSizeoffset lengthblockSizeoffset
public DescribeJournalS3ExportResult describeJournalS3Export(DescribeJournalS3ExportRequest request) {request = beforeClientExecution(request);return executeDescribeJournalS3Export(request);},public DescribeJournalS3ExportResult describeJournalS3ExportDescribeJournalS3ExportRequest request request  beforeClientExecutionrequestreturn executeDescribeJournalS3Exportrequest
"public void setCoordinates(int x1, int y1, int x2, int y2) {_spgrRecord.setRectY1(y1);_spgrRecord.setRectY2(y2);_spgrRecord.setRectX1(x1);_spgrRecord.setRectX2(x2);}",public void setCoordinatesint x1 int y1 int x2 int y2 spgrRecordsetRectY1y1spgrRecordsetRectY2y2spgrRecordsetRectX1x1spgrRecordsetRectX2x2
public DescribeTagsResult describeTags(DescribeTagsRequest request) {request = beforeClientExecution(request);return executeDescribeTags(request);},public DescribeTagsResult describeTagsDescribeTagsRequest request request  beforeClientExecutionrequestreturn executeDescribeTagsrequest
public int doLogic() {return 1;},public int doLogic return 1
public DeleteCustomerGatewayResult deleteCustomerGateway(DeleteCustomerGatewayRequest request) {request = beforeClientExecution(request);return executeDeleteCustomerGateway(request);},public DeleteCustomerGatewayResult deleteCustomerGatewayDeleteCustomerGatewayRequest request request  beforeClientExecutionrequestreturn executeDeleteCustomerGatewayrequest
"public static Map newContext(IndexSearcher searcher) {Map context = new IdentityHashMap();context.put(""searcher"", searcher);return context;}",public static Map newContextIndexSearcher searcher Map context  new IdentityHashMapcontextputsearcher searcherreturn context
"public NameRecord getSpecificBuiltinRecord(byte builtInCode, int sheetNumber) {Iterator<NameRecord> iterator = _definedNames.iterator();while (iterator.hasNext()) {NameRecord record = iterator.next();if (record.getBuiltInName() == builtInCode && record.getSheetNumber() == sheetNumber) {return record;}}return null;}",public NameRecord getSpecificBuiltinRecordbyte builtInCode int sheetNumber IteratorNameRecord iterator  definedNamesiteratorwhile iteratorhasNext NameRecord record  iteratornextif recordgetBuiltInName  builtInCode  recordgetSheetNumber  sheetNumber return recordreturn null
public final double readDouble() throws IOException {return Double.longBitsToDouble(readLong());},public final double readDouble throws IOException return DoublelongBitsToDoublereadLong
"public void write(byte[] buffer, int offset, int count) throws IOException {super.write(buffer, offset, count);}",public void writebyte buffer int offset int count throws IOException superwritebuffer offset count
public TokenStream create(TokenStream input) {return new PersianNormalizationFilter(input);},public TokenStream createTokenStream input return new PersianNormalizationFilterinput
"public SpanishLightStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public SpanishLightStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public SmallDocSet(int size) {intSet = new SentinelIntSet(size, -1);}",public SmallDocSetint size intSet  new SentinelIntSetsize 1
"public RawCharSequence(byte[] buf, int start, int end) {buffer = buf;startPtr = start;endPtr = end;}",public RawCharSequencebyte buf int start int end buffer  bufstartPtr  startendPtr  end
public GetCustomVerificationEmailTemplateResult getCustomVerificationEmailTemplate(GetCustomVerificationEmailTemplateRequest request) {request = beforeClientExecution(request);return executeGetCustomVerificationEmailTemplate(request);},public GetCustomVerificationEmailTemplateResult getCustomVerificationEmailTemplateGetCustomVerificationEmailTemplateRequest request request  beforeClientExecutionrequestreturn executeGetCustomVerificationEmailTemplaterequest
"public SendMessageBatchRequest(String queueUrl, java.util.List<SendMessageBatchRequestEntry> entries) {setQueueUrl(queueUrl);setEntries(entries);}",public SendMessageBatchRequestString queueUrl javautilListSendMessageBatchRequestEntry entries setQueueUrlqueueUrlsetEntriesentries
public void writeInt(int v) {writeContinueIfRequired(4);_ulrOutput.writeInt(v);},public void writeIntint v writeContinueIfRequired4ulrOutputwriteIntv
public DescribeDataSourcesResult describeDataSources(DescribeDataSourcesRequest request) {request = beforeClientExecution(request);return executeDescribeDataSources(request);},public DescribeDataSourcesResult describeDataSourcesDescribeDataSourcesRequest request request  beforeClientExecutionrequestreturn executeDescribeDataSourcesrequest
public ListRoomsResult listRooms(ListRoomsRequest request) {request = beforeClientExecution(request);return executeListRooms(request);},public ListRoomsResult listRoomsListRoomsRequest request request  beforeClientExecutionrequestreturn executeListRoomsrequest
public char getConversion() {return c;},public char getConversion return c
public boolean equals(Object _other) {FieldAndTerm other = (FieldAndTerm) _other;return other.field.equals(field) && term.bytesEquals(other.term);},public boolean equalsObject other FieldAndTerm other  FieldAndTerm otherreturn otherfieldequalsfield  termbytesEqualsotherterm
public CreateConfigurationSetEventDestinationResult createConfigurationSetEventDestination(CreateConfigurationSetEventDestinationRequest request) {request = beforeClientExecution(request);return executeCreateConfigurationSetEventDestination(request);},public CreateConfigurationSetEventDestinationResult createConfigurationSetEventDestinationCreateConfigurationSetEventDestinationRequest request request  beforeClientExecutionrequestreturn executeCreateConfigurationSetEventDestinationrequest
"public Ole10Native(String label, String filename, String command, byte[] data) {setLabel(label);setFileName(filename);setCommand(command);setDataBuffer(data);mode = EncodingMode.parsed;}",public Ole10NativeString label String filename String command byte data setLabellabelsetFileNamefilenamesetCommandcommandsetDataBufferdatamode  EncodingModeparsed
"public String toString() {StringBuilder sb = new StringBuilder();if (fetchResult != null)sb.append(fetchResult.toString());elsesb.append(""No fetch result"");sb.append(""\n"");if (mergeResult != null)sb.append(mergeResult.toString());else if (rebaseResult != null)sb.append(rebaseResult.toString());elsesb.append(""No update result"");return sb.toString();}",public String toString StringBuilder sb  new StringBuilderif fetchResult  nullsbappendfetchResulttoStringelsesbappendNo fetch resultsbappendnif mergeResult  nullsbappendmergeResulttoStringelse if rebaseResult  nullsbappendrebaseResulttoStringelsesbappendNo update resultreturn sbtoString
"public static Cell createCell(Row row, int column, String value) {return createCell(row, column, value, null);}",public static Cell createCellRow row int column String value return createCellrow column value null
public TokenStream create(TokenStream input) {return new HindiNormalizationFilter(input);},public TokenStream createTokenStream input return new HindiNormalizationFilterinput
public DescribeAddressesResult describeAddresses() {return describeAddresses(new DescribeAddressesRequest());},public DescribeAddressesResult describeAddresses return describeAddressesnew DescribeAddressesRequest
"public SimpleQQParser(String qqName, String indexField) {this(new String[] { qqName }, indexField);}",public SimpleQQParserString qqName String indexField thisnew String  qqName  indexField
public void dispatch(RefsChangedListener listener) {listener.onRefsChanged(this);},public void dispatchRefsChangedListener listener listeneronRefsChangedthis
"public SnowballFilter(TokenStream in, String name) {super(in);try {Class<? extends SnowballStemmer> stemClass =Class.forName(""org.tartarus.snowball.ext."" + name + ""Stemmer"").asSubclass(SnowballStemmer.class);stemmer = stemClass.getConstructor().newInstance();} catch (Exception e) {}}",public SnowballFilterTokenStream in String name superintry Class extends SnowballStemmer stemClass ClassforNameorgtartarussnowballext  name  StemmerasSubclassSnowballStemmerclassstemmer  stemClassgetConstructornewInstance catch Exception e 
public UpgradeAppliedSchemaResult upgradeAppliedSchema(UpgradeAppliedSchemaRequest request) {request = beforeClientExecution(request);return executeUpgradeAppliedSchema(request);},public UpgradeAppliedSchemaResult upgradeAppliedSchemaUpgradeAppliedSchemaRequest request request  beforeClientExecutionrequestreturn executeUpgradeAppliedSchemarequest
"public String getParent() {int length = path.length(), firstInPath = 0;if (separatorChar == '\\' && length > 2 && path.charAt(1) == ':') {firstInPath = 2;}int index = path.lastIndexOf(separatorChar);if (index == -1 && firstInPath > 0) {index = 2;}if (index == -1 || path.charAt(length - 1) == separatorChar) {return null;}if (path.indexOf(separatorChar) == index&& path.charAt(firstInPath) == separatorChar) {return path.substring(0, index + 1);}return path.substring(0, index);}",public String getParent int length  pathlength firstInPath  0if separatorChar    length  2  pathcharAt1   firstInPath  2int index  pathlastIndexOfseparatorCharif index  1  firstInPath  0 index  2if index  1  pathcharAtlength  1  separatorChar return nullif pathindexOfseparatorChar  index pathcharAtfirstInPath  separatorChar return pathsubstring0 index  1return pathsubstring0 index
"public BufferedChecksumIndexInput(IndexInput Main) {super(""BufferedChecksumIndexInput("" + Main + "")"");this.Main = Main;this.digest = new BufferedChecksum(new CRC32());}",public BufferedChecksumIndexInputIndexInput Main superBufferedChecksumIndexInput  Main  thisMain  Mainthisdigest  new BufferedChecksumnew CRC32
public final void remove(RevFlagSet set) {flags &= ~set.mask;},public final void removeRevFlagSet set flags  setmask
public boolean equals(Object obj) {if (this == obj)return true;if (obj == null)return false;if (getClass() != obj.getClass())return false;return true;},public boolean equalsObject obj if this  objreturn trueif obj  nullreturn falseif getClass  objgetClassreturn falsereturn true
public GetFaceSearchResult getFaceSearch(GetFaceSearchRequest request) {request = beforeClientExecution(request);return executeGetFaceSearch(request);},public GetFaceSearchResult getFaceSearchGetFaceSearchRequest request request  beforeClientExecutionrequestreturn executeGetFaceSearchrequest
public DescribeUserStackAssociationsResult describeUserStackAssociations(DescribeUserStackAssociationsRequest request) {request = beforeClientExecution(request);return executeDescribeUserStackAssociations(request);},public DescribeUserStackAssociationsResult describeUserStackAssociationsDescribeUserStackAssociationsRequest request request  beforeClientExecutionrequestreturn executeDescribeUserStackAssociationsrequest
public void close() throws IOException {in.close();in = new ClosedInputStream();},public void close throws IOException inclosein  new ClosedInputStream
public CreateBranchCommand branchCreate() {return new CreateBranchCommand(repo);},public CreateBranchCommand branchCreate return new CreateBranchCommandrepo
public void serialize(LittleEndianOutput out) {out.writeShort(rt);out.writeShort(grbitFrt);out.writeShort(wOffset);out.writeShort(at);out.writeShort(grbit);if(unused != null)out.writeShort(unused);},public void serializeLittleEndianOutput out outwriteShortrtoutwriteShortgrbitFrtoutwriteShortwOffsetoutwriteShortatoutwriteShortgrbitifunused  nulloutwriteShortunused
"public StringBuilder insert(int offset, Object obj) {insert0(offset, obj == null ? ""null"" : obj.toString());return this;}",public StringBuilder insertint offset Object obj insert0offset obj  null  null  objtoStringreturn this
public int next() {int res = child;if (child != TaxonomyReader.INVALID_ORDINAL) {child = siblings[child];}return res;},public int next int res  childif child  TaxonomyReaderINVALIDORDINAL child  siblingschildreturn res
public DeleteStackResult deleteStack(DeleteStackRequest request) {request = beforeClientExecution(request);return executeDeleteStack(request);},public DeleteStackResult deleteStackDeleteStackRequest request request  beforeClientExecutionrequestreturn executeDeleteStackrequest
"public NorwegianMinimalStemFilterFactory(Map<String,String> args) {super(args);String variant = get(args, ""variant"");if (variant == null || ""nb"".equals(variant)) {flags = BOKMAAL;} else if (""nn"".equals(variant)) {flags = NYNORSK;} else if (""no"".equals(variant)) {flags = BOKMAAL | NYNORSK;} else {throw new IllegalArgumentException(""invalid variant: "" + variant);}if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public NorwegianMinimalStemFilterFactoryMapStringString args superargsString variant  getargs variantif variant  null  nbequalsvariant flags  BOKMAAL else if nnequalsvariant flags  NYNORSK else if noequalsvariant flags  BOKMAAL  NYNORSK else throw new IllegalArgumentExceptioninvalid variant   variantif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public String toString() {return ""Z("" + z + "")"";}",public String toString return Z  z  
"public static org.apache.poi.hssf.record.Record create(RecordInputStream in) {switch (in.remaining()) {case 0:return instance;case 2:return new InterfaceHdrRecord(in);}throw new RecordFormatException(""Invalid record data size: "" + in.remaining());}",public static orgapachepoihssfrecordRecord createRecordInputStream in switch inremaining case 0return instancecase 2return new InterfaceHdrRecordinthrow new RecordFormatExceptionInvalid record data size   inremaining
public int getCellsPnt() {int size = 0;for (Row row : rows)size += row.getCellsPnt();return size;},public int getCellsPnt int size  0for Row row  rowssize  rowgetCellsPntreturn size
"public boolean equals(Object obj) {if (obj == this) {return true;}else if (!(obj instanceof LexerActionExecutor)) {return false;}LexerActionExecutor other = (LexerActionExecutor)obj;return hashCode == other.hashCode&& Arrays.equals(lexerActions, other.lexerActions);}",public boolean equalsObject obj if obj  this return trueelse if obj instanceof LexerActionExecutor return falseLexerActionExecutor other  LexerActionExecutorobjreturn hashCode  otherhashCode ArraysequalslexerActions otherlexerActions
public static final Analyzer createAnalyzer(String className) throws Exception{final Class<? extends Analyzer> clazz = Class.forName(className).asSubclass(Analyzer.class);try {Constructor<? extends Analyzer> cnstr = clazz.getConstructor(Version.class);return cnstr.newInstance(Version.LATEST);} catch (NoSuchMethodException nsme) {return clazz.getConstructor().newInstance();}},public static final Analyzer createAnalyzerString className throws Exceptionfinal Class extends Analyzer clazz  ClassforNameclassNameasSubclassAnalyzerclasstry Constructor extends Analyzer cnstr  clazzgetConstructorVersionclassreturn cnstrnewInstanceVersionLATEST catch NoSuchMethodException nsme return clazzgetConstructornewInstance
public GetSegmentVersionsResult getSegmentVersions(GetSegmentVersionsRequest request) {request = beforeClientExecution(request);return executeGetSegmentVersions(request);},public GetSegmentVersionsResult getSegmentVersionsGetSegmentVersionsRequest request request  beforeClientExecutionrequestreturn executeGetSegmentVersionsrequest
public int getDeltaBaseCacheLimit() {return deltaBaseCacheLimit;},public int getDeltaBaseCacheLimit return deltaBaseCacheLimit
public GroupMerger(Sort groupSort) {groupComp = new GroupComparator<>(groupSort);queue = new TreeSet<>(groupComp);groupsSeen = new HashMap<>();},public GroupMergerSort groupSort groupComp  new GroupComparatorgroupSortqueue  new TreeSetgroupCompgroupsSeen  new HashMap
public long get(int index) {final int o = index >>> 4;final int b = index & 15;final int shift = b << 2;return (blocks[o] >>> shift) & 15L;},public long getint index final int o  index  4final int b  index  15final int shift  b  2return blockso  shift  15L
"public FileIdCluster( int drawingGroupId, int numShapeIdsUsed ) {this.field_1_drawingGroupId = drawingGroupId;this.field_2_numShapeIdsUsed = numShapeIdsUsed;}",public FileIdCluster int drawingGroupId int numShapeIdsUsed  thisfield1drawingGroupId  drawingGroupIdthisfield2numShapeIdsUsed  numShapeIdsUsed
"public CharArrayIterator clone() {CharArrayIterator clone = new CharArrayIterator();clone.setText(array, start, length);clone.index = index;return clone;}",public CharArrayIterator clone CharArrayIterator clone  new CharArrayIteratorclonesetTextarray start lengthcloneindex  indexreturn clone
public DescribeReservedNodesResult describeReservedNodes(DescribeReservedNodesRequest request) {request = beforeClientExecution(request);return executeDescribeReservedNodes(request);},public DescribeReservedNodesResult describeReservedNodesDescribeReservedNodesRequest request request  beforeClientExecutionrequestreturn executeDescribeReservedNodesrequest
"public ObjectWalk(Repository repo, int depth) {super(repo);this.depth = depth;this.deepenNots = Collections.emptyList();this.UNSHALLOW = newFlag(""UNSHALLOW""); this.REINTERESTING = newFlag(""REINTERESTING""); this.DEEPEN_NOT = newFlag(""DEEPEN_NOT""); }",public ObjectWalkRepository repo int depth superrepothisdepth  depththisdeepenNots  CollectionsemptyListthisUNSHALLOW  newFlagUNSHALLOW thisREINTERESTING  newFlagREINTERESTING thisDEEPENNOT  newFlagDEEPENNOT 
public boolean isRefLogDisabled() {return refLogMessage == null;},public boolean isRefLogDisabled return refLogMessage  null
public SetLoadBalancerListenerSSLCertificateResult setLoadBalancerListenerSSLCertificate(SetLoadBalancerListenerSSLCertificateRequest request) {request = beforeClientExecution(request);return executeSetLoadBalancerListenerSSLCertificate(request);},public SetLoadBalancerListenerSSLCertificateResult setLoadBalancerListenerSSLCertificateSetLoadBalancerListenerSSLCertificateRequest request request  beforeClientExecutionrequestreturn executeSetLoadBalancerListenerSSLCertificaterequest
public DescribeRulesPackagesResult describeRulesPackages(DescribeRulesPackagesRequest request) {request = beforeClientExecution(request);return executeDescribeRulesPackages(request);},public DescribeRulesPackagesResult describeRulesPackagesDescribeRulesPackagesRequest request request  beforeClientExecutionrequestreturn executeDescribeRulesPackagesrequest
public byte readByte() throws IOException {return primitiveTypes.readByte();},public byte readByte throws IOException return primitiveTypesreadByte
public String getConversion() {return s;},public String getConversion return s
"public StandardSyntaxParserTokenManager(CharStream stream, int lexState){this(stream);SwitchTo(lexState);}",public StandardSyntaxParserTokenManagerCharStream stream int lexStatethisstreamSwitchTolexState
public TokenStream create(TokenStream input) {return new TurkishLowerCaseFilter(input);},public TokenStream createTokenStream input return new TurkishLowerCaseFilterinput
"public String toString() {return ""B"";}",public String toString return B
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {return evaluate(srcRowIndex, srcColumnIndex, arg0, DEFAULT_ARG1);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 return evaluatesrcRowIndex srcColumnIndex arg0 DEFAULTARG1
"public void doubleField(FieldInfo fieldInfo, double value) {doc.add(new StoredField(fieldInfo.name, value));}",public void doubleFieldFieldInfo fieldInfo double value docaddnew StoredFieldfieldInfoname value
public GetDistributionConfigRequest(String id) {setId(id);},public GetDistributionConfigRequestString id setIdid
public DescribeCacheSecurityGroupsResult describeCacheSecurityGroups() {return describeCacheSecurityGroups(new DescribeCacheSecurityGroupsRequest());},public DescribeCacheSecurityGroupsResult describeCacheSecurityGroups return describeCacheSecurityGroupsnew DescribeCacheSecurityGroupsRequest
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {double d;try {ValueEval ve = OperandResolver.getSingleValue(arg0, srcRowIndex, srcColumnIndex);d = OperandResolver.coerceValueToDouble(ve);} catch (EvaluationException e) {return e.getErrorEval();}if (d == 0.0) { return NumberEval.ZERO;}return new NumberEval(d / 100);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 double dtry ValueEval ve  OperandResolvergetSingleValuearg0 srcRowIndex srcColumnIndexd  OperandResolvercoerceValueToDoubleve catch EvaluationException e return egetErrorEvalif d  00  return NumberEvalZEROreturn new NumberEvald  100
"public boolean containsCell(int rowIndex, int columnIndex) {if (columnIndex < _firstColumnIndex) {return false;}if (columnIndex > _lastColumnIndex) {return false;}if (rowIndex < _firstRowIndex) {return false;}if (rowIndex > _lastRowIndex) {return false;}return true;}",public boolean containsCellint rowIndex int columnIndex if columnIndex  firstColumnIndex return falseif columnIndex  lastColumnIndex return falseif rowIndex  firstRowIndex return falseif rowIndex  lastRowIndex return falsereturn true
public GetSegmentVersionResult getSegmentVersion(GetSegmentVersionRequest request) {request = beforeClientExecution(request);return executeGetSegmentVersion(request);},public GetSegmentVersionResult getSegmentVersionGetSegmentVersionRequest request request  beforeClientExecutionrequestreturn executeGetSegmentVersionrequest
"public final FloatBuffer put(float[] src, int srcOffset, int byteCount) {throw new ReadOnlyBufferException();}",public final FloatBuffer putfloat src int srcOffset int byteCount throw new ReadOnlyBufferException
"public final IntBuffer put(int[] src) {return put(src, 0, src.length);}",public final IntBuffer putint src return putsrc 0 srclength
"public SearchFaceRequest() {super(""LinkFace"", ""2018-07-20"", ""SearchFace"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public SearchFaceRequest superLinkFace 20180720 SearchFacesetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public TagStreamResult tagStream(TagStreamRequest request) {request = beforeClientExecution(request);return executeTagStream(request);},public TagStreamResult tagStreamTagStreamRequest request request  beforeClientExecutionrequestreturn executeTagStreamrequest
public String getAccessKeyId() {return this.accessKeyId;},public String getAccessKeyId return thisaccessKeyId
public ET previous() {if (expectedModCount == list.modCount) {if (link != list.voidLink) {lastLink = link;link = link.previous;pos--;return lastLink.data;}throw new NoSuchElementException();}throw new ConcurrentModificationException();},public ET previous if expectedModCount  listmodCount if link  listvoidLink lastLink  linklink  linkpreviousposreturn lastLinkdatathrow new NoSuchElementExceptionthrow new ConcurrentModificationException
public CreateLBCookieStickinessPolicyResult createLBCookieStickinessPolicy(CreateLBCookieStickinessPolicyRequest request) {request = beforeClientExecution(request);return executeCreateLBCookieStickinessPolicy(request);},public CreateLBCookieStickinessPolicyResult createLBCookieStickinessPolicyCreateLBCookieStickinessPolicyRequest request request  beforeClientExecutionrequestreturn executeCreateLBCookieStickinessPolicyrequest
public CreateDataSourceFromRDSResult createDataSourceFromRDS(CreateDataSourceFromRDSRequest request) {request = beforeClientExecution(request);return executeCreateDataSourceFromRDS(request);},public CreateDataSourceFromRDSResult createDataSourceFromRDSCreateDataSourceFromRDSRequest request request  beforeClientExecutionrequestreturn executeCreateDataSourceFromRDSrequest
public CreateReceiptFilterResult createReceiptFilter(CreateReceiptFilterRequest request) {request = beforeClientExecution(request);return executeCreateReceiptFilter(request);},public CreateReceiptFilterResult createReceiptFilterCreateReceiptFilterRequest request request  beforeClientExecutionrequestreturn executeCreateReceiptFilterrequest
public final byte get(int index) {checkIndex(index);return backingArray[offset + index];},public final byte getint index checkIndexindexreturn backingArrayoffset  index
"public CherryPickCommand include(AnyObjectId commit) {return include(commit.getName(), commit);}",public CherryPickCommand includeAnyObjectId commit return includecommitgetName commit
public ATNDeserializationOptions() {this.verifyATN = true;this.generateRuleBypassTransitions = false;},public ATNDeserializationOptions thisverifyATN  truethisgenerateRuleBypassTransitions  false
public ListIdentityPoliciesResult listIdentityPolicies(ListIdentityPoliciesRequest request) {request = beforeClientExecution(request);return executeListIdentityPolicies(request);},public ListIdentityPoliciesResult listIdentityPoliciesListIdentityPoliciesRequest request request  beforeClientExecutionrequestreturn executeListIdentityPoliciesrequest
public static boolean isValidCode(int errorCode) {for (FormulaError error : values()) {if (error.getCode() == errorCode) return true;if (error.getLongCode() == errorCode) return true;}return false;},public static boolean isValidCodeint errorCode for FormulaError error  values if errorgetCode  errorCode return trueif errorgetLongCode  errorCode return truereturn false
public RKRecord(RecordInputStream in) {super(in);field_4_rk_number = in.readInt();},public RKRecordRecordInputStream in superinfield4rknumber  inreadInt
public void copyTo(ByteBuffer b) {b.put(toHexByteArray());},public void copyToByteBuffer b bputtoHexByteArray
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[DAT]\n"");buffer.append(""    .options              = "").append(""0x"").append(HexDump.toHex(  getOptions ())).append("" ("").append( getOptions() ).append("" )"");buffer.append(System.getProperty(""line.separator""));buffer.append(""         .horizontalBorder         = "").append(isHorizontalBorder()).append('\n');buffer.append(""         .verticalBorder           = "").append(isVerticalBorder()).append('\n');buffer.append(""         .border                   = "").append(isBorder()).append('\n');buffer.append(""         .showSeriesKey            = "").append(isShowSeriesKey()).append('\n');buffer.append(""[/DAT]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendDATnbufferappend    options               append0xappendHexDumptoHex  getOptions append append getOptions append bufferappendSystemgetPropertylineseparatorbufferappend         horizontalBorder          appendisHorizontalBorderappendnbufferappend         verticalBorder            appendisVerticalBorderappendnbufferappend         border                    appendisBorderappendnbufferappend         showSeriesKey             appendisShowSeriesKeyappendnbufferappendDATnreturn buffertoString
public UpdateDashboardResult updateDashboard(UpdateDashboardRequest request) {request = beforeClientExecution(request);return executeUpdateDashboard(request);},public UpdateDashboardResult updateDashboardUpdateDashboardRequest request request  beforeClientExecutionrequestreturn executeUpdateDashboardrequest
"public RegisterTagRequest() {super(""CloudPhoto"", ""2017-07-11"", ""RegisterTag"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public RegisterTagRequest superCloudPhoto 20170711 RegisterTag cloudphotosetProtocolProtocolTypeHTTPS
public DiffCommand setPathFilter(TreeFilter pathFilter) {this.pathFilter = pathFilter;return this;},public DiffCommand setPathFilterTreeFilter pathFilter thispathFilter  pathFilterreturn this
public boolean markSupported() {return true;},public boolean markSupported return true
"public String toString() {StringBuilder sb = new StringBuilder(getClass().getSimpleName() + "": "");sb.append(""maxThreadCount="").append(maxThreadCount).append("", "");sb.append(""maxMergeCount="").append(maxMergeCount).append("", "");sb.append(""ioThrottle="").append(doAutoIOThrottle);return sb.toString();}",public String toString StringBuilder sb  new StringBuildergetClassgetSimpleName   sbappendmaxThreadCountappendmaxThreadCountappend sbappendmaxMergeCountappendmaxMergeCountappend sbappendioThrottleappenddoAutoIOThrottlereturn sbtoString
public synchronized void println(String str) {print(str);newline();},public synchronized void printlnString str printstrnewline
public UpdateApiResult updateApi(UpdateApiRequest request) {request = beforeClientExecution(request);return executeUpdateApi(request);},public UpdateApiResult updateApiUpdateApiRequest request request  beforeClientExecutionrequestreturn executeUpdateApirequest
public FlushStageAuthorizersCacheResult flushStageAuthorizersCache(FlushStageAuthorizersCacheRequest request) {request = beforeClientExecution(request);return executeFlushStageAuthorizersCache(request);},public FlushStageAuthorizersCacheResult flushStageAuthorizersCacheFlushStageAuthorizersCacheRequest request request  beforeClientExecutionrequestreturn executeFlushStageAuthorizersCacherequest
public BasicQueryFactory(int maxBasicQueries) {this.maxBasicQueries = maxBasicQueries;this.queriesMade = 0;},public BasicQueryFactoryint maxBasicQueries thismaxBasicQueries  maxBasicQueriesthisqueriesMade  0
public TrackingRefUpdate getTrackingRefUpdate(String localName) {return updates.get(localName);},public TrackingRefUpdate getTrackingRefUpdateString localName return updatesgetlocalName
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[CATLAB]\n"");buffer.append(""    .rt      ="").append(HexDump.shortToHex(rt)).append('\n');buffer.append(""    .grbitFrt="").append(HexDump.shortToHex(grbitFrt)).append('\n');buffer.append(""    .wOffset ="").append(HexDump.shortToHex(wOffset)).append('\n');buffer.append(""    .at      ="").append(HexDump.shortToHex(at)).append('\n');buffer.append(""    .grbit   ="").append(HexDump.shortToHex(grbit)).append('\n');if(unused != null)buffer.append(""    .unused  ="").append(HexDump.shortToHex(unused)).append('\n');buffer.append(""[/CATLAB]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendCATLABnbufferappend    rt      appendHexDumpshortToHexrtappendnbufferappend    grbitFrtappendHexDumpshortToHexgrbitFrtappendnbufferappend    wOffset appendHexDumpshortToHexwOffsetappendnbufferappend    at      appendHexDumpshortToHexatappendnbufferappend    grbit   appendHexDumpshortToHexgrbitappendnifunused  nullbufferappend    unused  appendHexDumpshortToHexunusedappendnbufferappendCATLABnreturn buffertoString
public EnableDirectoryResult enableDirectory(EnableDirectoryRequest request) {request = beforeClientExecution(request);return executeEnableDirectory(request);},public EnableDirectoryResult enableDirectoryEnableDirectoryRequest request request  beforeClientExecutionrequestreturn executeEnableDirectoryrequest
"public IntBuffer put(int[] src, int srcOffset, int intCount) {if (intCount > remaining()) {throw new BufferOverflowException();}System.arraycopy(src, srcOffset, backingArray, offset + position, intCount);position += intCount;return this;}",public IntBuffer putint src int srcOffset int intCount if intCount  remaining throw new BufferOverflowExceptionSystemarraycopysrc srcOffset backingArray offset  position intCountposition  intCountreturn this
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[PROT4REVPASSWORD]\n"");buffer.append(""    .password = "").append(HexDump.shortToHex(field_1_password)).append(""\n"");buffer.append(""[/PROT4REVPASSWORD]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendPROT4REVPASSWORDnbufferappend    password  appendHexDumpshortToHexfield1passwordappendnbufferappendPROT4REVPASSWORDnreturn buffertoString
public DescribeProjectVersionsResult describeProjectVersions(DescribeProjectVersionsRequest request) {request = beforeClientExecution(request);return executeDescribeProjectVersions(request);},public DescribeProjectVersionsResult describeProjectVersionsDescribeProjectVersionsRequest request request  beforeClientExecutionrequestreturn executeDescribeProjectVersionsrequest
public UpdateHostedZoneCommentResult updateHostedZoneComment(UpdateHostedZoneCommentRequest request) {request = beforeClientExecution(request);return executeUpdateHostedZoneComment(request);},public UpdateHostedZoneCommentResult updateHostedZoneCommentUpdateHostedZoneCommentRequest request request  beforeClientExecutionrequestreturn executeUpdateHostedZoneCommentrequest
"public Rescorer getRescorer(Bindings bindings) {return new ExpressionRescorer(this, bindings);}",public Rescorer getRescorerBindings bindings return new ExpressionRescorerthis bindings
"public SortedSet<E> headSet(E end) {return headSet(end, false);}",public SortedSetE headSetE end return headSetend false
"final public QueryNode DisjQuery(CharSequence field) throws ParseException {QueryNode first, c;Vector<QueryNode> clauses = null;first = ConjQuery(field);label_2:while (true) {switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {case OR:;break;default:jj_la1[3] = jj_gen;break label_2;}jj_consume_token(OR);c = ConjQuery(field);if (clauses == null) {clauses = new Vector<QueryNode>();clauses.addElement(first);}clauses.addElement(c);}if (clauses != null) {{if (true) return new OrQueryNode(clauses);}} else {{if (true) return first;}}throw new Error(""Missing return statement in function"");}",final public QueryNode DisjQueryCharSequence field throws ParseException QueryNode first cVectorQueryNode clauses  nullfirst  ConjQueryfieldlabel2while true switch jjntk1jjntkjjntk case ORbreakdefaultjjla13  jjgenbreak label2jjconsumetokenORc  ConjQueryfieldif clauses  null clauses  new VectorQueryNodeclausesaddElementfirstclausesaddElementcif clauses  null if true return new OrQueryNodeclauses else if true return firstthrow new ErrorMissing return statement in function
public DataValidationConstraint createExplicitListConstraint(String[] listOfValues) {return DVConstraint.createExplicitListConstraint(listOfValues);},public DataValidationConstraint createExplicitListConstraintString listOfValues return DVConstraintcreateExplicitListConstraintlistOfValues
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0,ValueEval arg1) {String s0;String s1;try {s0 = evaluateStringArg(arg0, srcRowIndex, srcColumnIndex);s1 = evaluateStringArg(arg1, srcRowIndex, srcColumnIndex);} catch (EvaluationException e) {return e.getErrorEval();}return BoolEval.valueOf(s0.equals(s1));}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0ValueEval arg1 String s0String s1try s0  evaluateStringArgarg0 srcRowIndex srcColumnIndexs1  evaluateStringArgarg1 srcRowIndex srcColumnIndex catch EvaluationException e return egetErrorEvalreturn BoolEvalvalueOfs0equalss1
public boolean offer(E o) {return addLastImpl(o);},public boolean offerE o return addLastImplo
public ListInvalidationsRequest(String distributionId) {setDistributionId(distributionId);},public ListInvalidationsRequestString distributionId setDistributionIddistributionId
"public TagPhotoRequest() {super(""CloudPhoto"", ""2017-07-11"", ""TagPhoto"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public TagPhotoRequest superCloudPhoto 20170711 TagPhoto cloudphotosetProtocolProtocolTypeHTTPS
public CreateFleetResult createFleet(CreateFleetRequest request) {request = beforeClientExecution(request);return executeCreateFleet(request);},public CreateFleetResult createFleetCreateFleetRequest request request  beforeClientExecutionrequestreturn executeCreateFleetrequest
public GetTransitGatewayAttachmentPropagationsResult getTransitGatewayAttachmentPropagations(GetTransitGatewayAttachmentPropagationsRequest request) {request = beforeClientExecution(request);return executeGetTransitGatewayAttachmentPropagations(request);},public GetTransitGatewayAttachmentPropagationsResult getTransitGatewayAttachmentPropagationsGetTransitGatewayAttachmentPropagationsRequest request request  beforeClientExecutionrequestreturn executeGetTransitGatewayAttachmentPropagationsrequest
public ListWorkteamsResult listWorkteams(ListWorkteamsRequest request) {request = beforeClientExecution(request);return executeListWorkteams(request);},public ListWorkteamsResult listWorkteamsListWorkteamsRequest request request  beforeClientExecutionrequestreturn executeListWorkteamsrequest
public DetachVpnGatewayResult detachVpnGateway(DetachVpnGatewayRequest request) {request = beforeClientExecution(request);return executeDetachVpnGateway(request);},public DetachVpnGatewayResult detachVpnGatewayDetachVpnGatewayRequest request request  beforeClientExecutionrequestreturn executeDetachVpnGatewayrequest
public ListGeoLocationsResult listGeoLocations() {return listGeoLocations(new ListGeoLocationsRequest());},public ListGeoLocationsResult listGeoLocations return listGeoLocationsnew ListGeoLocationsRequest
"public String toString() {return getClass().getName() + "" ["" +getStringValue() +""]"";}",public String toString return getClassgetName    getStringValue 
public static double decodeNumber(int number) {long raw_number = number;raw_number = raw_number >> 2;double rvalue = 0;if ((number & 0x02) == 0x02){rvalue = raw_number;}else{rvalue = Double.longBitsToDouble(raw_number << 34);}if ((number & 0x01) == 0x01){rvalue /= 100;}return rvalue;},public static double decodeNumberint number long rawnumber  numberrawnumber  rawnumber  2double rvalue  0if number  0x02  0x02rvalue  rawnumberelservalue  DoublelongBitsToDoublerawnumber  34if number  0x01  0x01rvalue  100return rvalue
public long get(long index) {assert index >= 0 && index < valueCount;final int block = (int) (index >>> blockShift);final int idx = (int) (index & blockMask);return (minValues == null ? 0 : minValues[block]) + subReaders[block].get(idx);},public long getlong index assert index  0  index  valueCountfinal int block  int index  blockShiftfinal int idx  int index  blockMaskreturn minValues  null  0  minValuesblock  subReadersblockgetidx
public UpdatePublishingDestinationResult updatePublishingDestination(UpdatePublishingDestinationRequest request) {request = beforeClientExecution(request);return executeUpdatePublishingDestination(request);},public UpdatePublishingDestinationResult updatePublishingDestinationUpdatePublishingDestinationRequest request request  beforeClientExecutionrequestreturn executeUpdatePublishingDestinationrequest
"public void notifyDeleteCell(EvaluationCell cell) {int sheetIndex = getSheetIndex(cell.getSheet());_cache.notifyDeleteCell(_workbookIx, sheetIndex, cell);}",public void notifyDeleteCellEvaluationCell cell int sheetIndex  getSheetIndexcellgetSheetcachenotifyDeleteCellworkbookIx sheetIndex cell
"public Request<GetPolicyRequest> marshall(GetPolicyRequest getPolicyRequest) {if (getPolicyRequest == null) {throw new SdkClientException(""Invalid argument passed to marshall(...)"");}Request<GetPolicyRequest> request = new DefaultRequest<GetPolicyRequest>(getPolicyRequest, ""AmazonIdentityManagement"");request.addParameter(""Action"", ""GetPolicy"");request.addParameter(""Version"", ""2010-05-08"");request.setHttpMethod(HttpMethodName.POST);if (getPolicyRequest.getPolicyArn() != null) {request.addParameter(""PolicyArn"", StringUtils.fromString(getPolicyRequest.getPolicyArn()));}return request;}",public RequestGetPolicyRequest marshallGetPolicyRequest getPolicyRequest if getPolicyRequest  null throw new SdkClientExceptionInvalid argument passed to marshallRequestGetPolicyRequest request  new DefaultRequestGetPolicyRequestgetPolicyRequest AmazonIdentityManagementrequestaddParameterAction GetPolicyrequestaddParameterVersion 20100508requestsetHttpMethodHttpMethodNamePOSTif getPolicyRequestgetPolicyArn  null requestaddParameterPolicyArn StringUtilsfromStringgetPolicyRequestgetPolicyArnreturn request
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval real_num, ValueEval i_num) {return this.evaluate(srcRowIndex, srcColumnIndex, real_num, i_num, new StringEval(DEFAULT_SUFFIX));}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval realnum ValueEval inum return thisevaluatesrcRowIndex srcColumnIndex realnum inum new StringEvalDEFAULTSUFFIX
"public int fillFields(byte[] data, int offset, EscherRecordFactory recordFactory) { readHeader( data, offset );int pos            = offset + 8;int size           = 0;field_1_numShapes   =  LittleEndian.getInt( data, pos + size );     size += 4;field_2_lastMSOSPID =  LittleEndian.getInt( data, pos + size );     size += 4;return getRecordSize();}",public int fillFieldsbyte data int offset EscherRecordFactory recordFactory  readHeader data offset int pos             offset  8int size            0field1numShapes     LittleEndiangetInt data pos  size      size  4field2lastMSOSPID   LittleEndiangetInt data pos  size      size  4return getRecordSize
public final CharsetEncoder reset() {status = INIT;implReset();return this;},public final CharsetEncoder reset status  INITimplResetreturn this
public void emit(Token token) {this._token = token;},public void emitToken token thistoken  token
"public AbstractTreeIterator createSubtreeIterator(ObjectReader Reader)throws IncorrectObjectTypeException, IOException {if (currentSubtree == null)throw new IncorrectObjectTypeException(getEntryObjectId(),Constants.TYPE_TREE);return new DirCacheBuildIterator(this, currentSubtree);}",public AbstractTreeIterator createSubtreeIteratorObjectReader Readerthrows IncorrectObjectTypeException IOException if currentSubtree  nullthrow new IncorrectObjectTypeExceptiongetEntryObjectIdConstantsTYPETREEreturn new DirCacheBuildIteratorthis currentSubtree
"public GreekLowerCaseFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public GreekLowerCaseFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public URI relativize(URI relative) {if (relative.opaque || opaque) {return relative;}if (scheme == null ? relative.scheme != null : !scheme.equals(relative.scheme)) {return relative;}if (authority == null ? relative.authority != null : !authority.equals(relative.authority)) {return relative;}String thisPath = normalize(path, false);String relativePath = normalize(relative.path, false);if (!thisPath.equals(relativePath)) {thisPath = thisPath.substring(0, thisPath.lastIndexOf('/') + 1);if (!relativePath.startsWith(thisPath)) {return relative;}}URI result = new URI();result.fragment = relative.fragment;result.query = relative.query;result.path = relativePath.substring(thisPath.length());result.setSchemeSpecificPart();return result;}",public URI relativizeURI relative if relativeopaque  opaque return relativeif scheme  null  relativescheme  null  schemeequalsrelativescheme return relativeif authority  null  relativeauthority  null  authorityequalsrelativeauthority return relativeString thisPath  normalizepath falseString relativePath  normalizerelativepath falseif thisPathequalsrelativePath thisPath  thisPathsubstring0 thisPathlastIndexOf  1if relativePathstartsWiththisPath return relativeURI result  new URIresultfragment  relativefragmentresultquery  relativequeryresultpath  relativePathsubstringthisPathlengthresultsetSchemeSpecificPartreturn result
"public Reader freeze(boolean trim) {if (frozen) {throw new IllegalStateException(""already frozen"");}if (didSkipBytes) {throw new IllegalStateException(""cannot freeze when copy(BytesRef, BytesRef) was used"");}if (trim && upto < blockSize) {final byte[] newBlock = new byte[upto];System.arraycopy(currentBlock, 0, newBlock, 0, upto);currentBlock = newBlock;}if (currentBlock == null) {currentBlock = EMPTY_BYTES;}addBlock(currentBlock);frozen = true;currentBlock = null;return new PagedBytes.Reader(this);}",public Reader freezeboolean trim if frozen throw new IllegalStateExceptionalready frozenif didSkipBytes throw new IllegalStateExceptioncannot freeze when copyBytesRef BytesRef was usedif trim  upto  blockSize final byte newBlock  new byteuptoSystemarraycopycurrentBlock 0 newBlock 0 uptocurrentBlock  newBlockif currentBlock  null currentBlock  EMPTYBYTESaddBlockcurrentBlockfrozen  truecurrentBlock  nullreturn new PagedBytesReaderthis
"public ValueEval evaluate(ValueEval[] args, OperationEvaluationContext ec) {if (args.length == 2) {return evaluate(ec.getRowIndex(), ec.getColumnIndex(), args[0], args[1]);}if (args.length == 3) {return evaluate(ec.getRowIndex(), ec.getColumnIndex(), args[0], args[1], args[2]);}return ErrorEval.VALUE_INVALID;}",public ValueEval evaluateValueEval args OperationEvaluationContext ec if argslength  2 return evaluateecgetRowIndex ecgetColumnIndex args0 args1if argslength  3 return evaluateecgetRowIndex ecgetColumnIndex args0 args1 args2return ErrorEvalVALUEINVALID
public Cluster createCluster(CreateClusterRequest request) {request = beforeClientExecution(request);return executeCreateCluster(request);},public Cluster createClusterCreateClusterRequest request request  beforeClientExecutionrequestreturn executeCreateClusterrequest
"public PersistentSnapshotDeletionPolicy(IndexDeletionPolicy primary,Directory dir, OpenMode mode) throws IOException {super(primary);this.dir = dir;if (mode == OpenMode.CREATE) {clearPriorSnapshots();}loadPriorSnapshots();if (mode == OpenMode.APPEND && nextWriteGen == 0) {throw new IllegalStateException(""no snapshots stored in this directory"");}}",public PersistentSnapshotDeletionPolicyIndexDeletionPolicy primaryDirectory dir OpenMode mode throws IOException superprimarythisdir  dirif mode  OpenModeCREATE clearPriorSnapshotsloadPriorSnapshotsif mode  OpenModeAPPEND  nextWriteGen  0 throw new IllegalStateExceptionno snapshots stored in this directory
public String getText(RuleContext ctx) {return getText(ctx.getSourceInterval());},public String getTextRuleContext ctx return getTextctxgetSourceInterval
public final float get() {if (position == limit) {throw new BufferUnderflowException();}return backingArray[offset + position++];},public final float get if position  limit throw new BufferUnderflowExceptionreturn backingArrayoffset  position
public DeleteDataSetResult deleteDataSet(DeleteDataSetRequest request) {request = beforeClientExecution(request);return executeDeleteDataSet(request);},public DeleteDataSetResult deleteDataSetDeleteDataSetRequest request request  beforeClientExecutionrequestreturn executeDeleteDataSetrequest
public boolean contains(Object o) {return containsKey(o);},public boolean containsObject o return containsKeyo
"public boolean matches(char s[], int len) {return super.matches(s, len) && !exceptions.contains(s, 0, len);}",public boolean matcheschar s int len return supermatchess len  exceptionscontainss 0 len
public int getDeltaSearchWindowSize() {return deltaSearchWindowSize;},public int getDeltaSearchWindowSize return deltaSearchWindowSize
public GetDomainNameResult getDomainName(GetDomainNameRequest request) {request = beforeClientExecution(request);return executeGetDomainName(request);},public GetDomainNameResult getDomainNameGetDomainNameRequest request request  beforeClientExecutionrequestreturn executeGetDomainNamerequest
public DeleteAccessLogSettingsResult deleteAccessLogSettings(DeleteAccessLogSettingsRequest request) {request = beforeClientExecution(request);return executeDeleteAccessLogSettings(request);},public DeleteAccessLogSettingsResult deleteAccessLogSettingsDeleteAccessLogSettingsRequest request request  beforeClientExecutionrequestreturn executeDeleteAccessLogSettingsrequest
"public QueryValueSource(Query q, float defVal) {this.q = q;this.defVal = defVal;}",public QueryValueSourceQuery q float defVal thisq  qthisdefVal  defVal
@Override public Object[] toArray() {return snapshot().toArray();},Override public Object toArray return snapshottoArray
"public String toLexerString() {if ( s0==null ) return """";DFASerializer serializer = new LexerDFASerializer(this);return serializer.toString();}",public String toLexerString if  s0null  return DFASerializer serializer  new LexerDFASerializerthisreturn serializertoString
"public void clear() {fill(0, size(), 0);}",public void clear fill0 size 0
public GetStreamingDistributionConfigResult getStreamingDistributionConfig(GetStreamingDistributionConfigRequest request) {request = beforeClientExecution(request);return executeGetStreamingDistributionConfig(request);},public GetStreamingDistributionConfigResult getStreamingDistributionConfigGetStreamingDistributionConfigRequest request request  beforeClientExecutionrequestreturn executeGetStreamingDistributionConfigrequest
public UpdateDomainContactResult updateDomainContact(UpdateDomainContactRequest request) {request = beforeClientExecution(request);return executeUpdateDomainContact(request);},public UpdateDomainContactResult updateDomainContactUpdateDomainContactRequest request request  beforeClientExecutionrequestreturn executeUpdateDomainContactrequest
"public ListIterator<E> listIterator(int location) {return new LinkIterator<E>(this, location);}",public ListIteratorE listIteratorint location return new LinkIteratorEthis location
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[STARTBLOCK]\n"");buffer.append(""    .rt              ="").append(HexDump.shortToHex(rt)).append('\n');buffer.append(""    .grbitFrt        ="").append(HexDump.shortToHex(grbitFrt)).append('\n');buffer.append(""    .iObjectKind     ="").append(HexDump.shortToHex(iObjectKind)).append('\n');buffer.append(""    .iObjectContext  ="").append(HexDump.shortToHex(iObjectContext)).append('\n');buffer.append(""    .iObjectInstance1="").append(HexDump.shortToHex(iObjectInstance1)).append('\n');buffer.append(""    .iObjectInstance2="").append(HexDump.shortToHex(iObjectInstance2)).append('\n');buffer.append(""[/STARTBLOCK]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendSTARTBLOCKnbufferappend    rt              appendHexDumpshortToHexrtappendnbufferappend    grbitFrt        appendHexDumpshortToHexgrbitFrtappendnbufferappend    iObjectKind     appendHexDumpshortToHexiObjectKindappendnbufferappend    iObjectContext  appendHexDumpshortToHexiObjectContextappendnbufferappend    iObjectInstance1appendHexDumpshortToHexiObjectInstance1appendnbufferappend    iObjectInstance2appendHexDumpshortToHexiObjectInstance2appendnbufferappendSTARTBLOCKnreturn buffertoString
public long get(int index) {final int o = index / 7;final int b = index % 7;final int shift = b * 9;return (blocks[o] >>> shift) & 511L;},public long getint index final int o  index  7final int b  index  7final int shift  b  9return blockso  shift  511L
"public String toString(String field) {StringBuilder buffer = new StringBuilder();boolean needParens = (getLowFreqMinimumNumberShouldMatch() > 0);if (needParens) {buffer.append(""("");}for (int i = 0; i < terms.size(); i++) {Term t = terms.get(i);buffer.append(newTermQuery(t, null).toString());if (i != terms.size() - 1) buffer.append("", "");}if (needParens) {buffer.append("")"");}if (getLowFreqMinimumNumberShouldMatch() > 0 || getHighFreqMinimumNumberShouldMatch() > 0) {buffer.append('~');buffer.append(""("");buffer.append(getLowFreqMinimumNumberShouldMatch());buffer.append(getHighFreqMinimumNumberShouldMatch());buffer.append("")"");}return buffer.toString();}",public String toStringString field StringBuilder buffer  new StringBuilderboolean needParens  getLowFreqMinimumNumberShouldMatch  0if needParens bufferappendfor int i  0 i  termssize i Term t  termsgetibufferappendnewTermQueryt nulltoStringif i  termssize  1 bufferappend if needParens bufferappendif getLowFreqMinimumNumberShouldMatch  0  getHighFreqMinimumNumberShouldMatch  0 bufferappendbufferappendbufferappendgetLowFreqMinimumNumberShouldMatchbufferappendgetHighFreqMinimumNumberShouldMatchbufferappendreturn buffertoString
public String[] getStopWords(String fieldName) {Set<String> stopWords = stopWordsPerField.get(fieldName);return stopWords != null ? stopWords.toArray(new String[stopWords.size()]) : new String[0];},public String getStopWordsString fieldName SetString stopWords  stopWordsPerFieldgetfieldNamereturn stopWords  null  stopWordstoArraynew StringstopWordssize  new String0
public void print(float f) {print(String.valueOf(f));},public void printfloat f printStringvalueOff
"public MopenCreateGroupRequest() {super(""MoPen"", ""2018-02-11"", ""MopenCreateGroup"", ""mopen"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public MopenCreateGroupRequest superMoPen 20180211 MopenCreateGroup mopensetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
"public SmallObject(int type, byte[] data) {this.type = type;this.data = data;}",public SmallObjectint type byte data thistype  typethisdata  data
public final boolean matches(char c) {return Character.isUpperCase(c);},public final boolean matcheschar c return CharacterisUpperCasec
public StartNotebookInstanceResult startNotebookInstance(StartNotebookInstanceRequest request) {request = beforeClientExecution(request);return executeStartNotebookInstance(request);},public StartNotebookInstanceResult startNotebookInstanceStartNotebookInstanceRequest request request  beforeClientExecutionrequestreturn executeStartNotebookInstancerequest
"public static void putUnicodeLE(String input, byte[] output, int offset) {byte[] bytes = input.getBytes(UTF16LE);System.arraycopy(bytes, 0, output, offset, bytes.length);}",public static void putUnicodeLEString input byte output int offset byte bytes  inputgetBytesUTF16LESystemarraycopybytes 0 output offset byteslength
public void deleteDocument(int docID) {final int i = readerIndex(docID);getSequentialSubReaders().get(i).deleteDocument(docID - readerBase(i));},public void deleteDocumentint docID final int i  readerIndexdocIDgetSequentialSubReadersgetideleteDocumentdocID  readerBasei
"public boolean isRelevant(String docName, QualityQuery query) {QRelJudgement qrj = judgements.get(query.getQueryID());return qrj!=null && qrj.isRelevant(docName);}",public boolean isRelevantString docName QualityQuery query QRelJudgement qrj  judgementsgetquerygetQueryIDreturn qrjnull  qrjisRelevantdocName
public final int getBeginB() {return beginB;},public final int getBeginB return beginB
public ModifySpotFleetRequestResult modifySpotFleetRequest(ModifySpotFleetRequestRequest request) {request = beforeClientExecution(request);return executeModifySpotFleetRequest(request);},public ModifySpotFleetRequestResult modifySpotFleetRequestModifySpotFleetRequestRequest request request  beforeClientExecutionrequestreturn executeModifySpotFleetRequestrequest
public UncalcedRecord() {_reserved = 0;},public UncalcedRecord reserved  0
public static PageOrder valueOf(int value){return _table[value];},public static PageOrder valueOfint valuereturn tablevalue
public static CellValue valueOf(boolean booleanValue) {return booleanValue ? TRUE : FALSE;},public static CellValue valueOfboolean booleanValue return booleanValue  TRUE  FALSE
public void write(String str) {buf.append(str);},public void writeString str bufappendstr
"public void addListener(HSSFListener lsnr, short sid) {List<HSSFListener> list = _records.computeIfAbsent(Short.valueOf(sid), k -> new ArrayList<>(1));list.add(lsnr);}",public void addListenerHSSFListener lsnr short sid ListHSSFListener list  recordscomputeIfAbsentShortvalueOfsid k  new ArrayList1listaddlsnr
public GetMeetingResult getMeeting(GetMeetingRequest request) {request = beforeClientExecution(request);return executeGetMeeting(request);},public GetMeetingResult getMeetingGetMeetingRequest request request  beforeClientExecutionrequestreturn executeGetMeetingrequest
public void stopTimer() {stop = true;},public void stopTimer stop  true
public AttachLoadBalancerTargetGroupsResult attachLoadBalancerTargetGroups(AttachLoadBalancerTargetGroupsRequest request) {request = beforeClientExecution(request);return executeAttachLoadBalancerTargetGroups(request);},public AttachLoadBalancerTargetGroupsResult attachLoadBalancerTargetGroupsAttachLoadBalancerTargetGroupsRequest request request  beforeClientExecutionrequestreturn executeAttachLoadBalancerTargetGroupsrequest
public GetQueryLoggingConfigResult getQueryLoggingConfig(GetQueryLoggingConfigRequest request) {request = beforeClientExecution(request);return executeGetQueryLoggingConfig(request);},public GetQueryLoggingConfigResult getQueryLoggingConfigGetQueryLoggingConfigRequest request request  beforeClientExecutionrequestreturn executeGetQueryLoggingConfigrequest
"public ListIterator<E> listIterator() {Object[] snapshot = elements;return new CowIterator<E>(snapshot, 0, snapshot.length);}",public ListIteratorE listIterator Object snapshot  elementsreturn new CowIteratorEsnapshot 0 snapshotlength
public CreateSnapshotResult createSnapshot(CreateSnapshotRequest request) {request = beforeClientExecution(request);return executeCreateSnapshot(request);},public CreateSnapshotResult createSnapshotCreateSnapshotRequest request request  beforeClientExecutionrequestreturn executeCreateSnapshotrequest
public boolean hasObject(AnyObjectId objectId) {try {return getObjectDatabase().has(objectId);} catch (IOException e) {throw new UncheckedIOException(e);}},public boolean hasObjectAnyObjectId objectId try return getObjectDatabasehasobjectId catch IOException e throw new UncheckedIOExceptione
"public final void sort(int from, int to) {checkRange(from, to);mergeSort(from, to);}",public final void sortint from int to checkRangefrom tomergeSortfrom to
"public <T extends EscherRecord> T getChildById( short recordId ) {for ( EscherRecord childRecord : this ) {if ( childRecord.getRecordId() == recordId ) {@SuppressWarnings( ""unchecked"" )final T result = (T) childRecord;return result;}}return null;}",public T extends EscherRecord T getChildById short recordId  for  EscherRecord childRecord  this  if  childRecordgetRecordId  recordId  SuppressWarnings unchecked final T result  T childRecordreturn resultreturn null
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_xBasis);out.writeShort(field_2_yBasis);out.writeShort(field_3_heightBasis);out.writeShort(field_4_scale);out.writeShort(field_5_indexToFontTable);},public void serializeLittleEndianOutput out outwriteShortfield1xBasisoutwriteShortfield2yBasisoutwriteShortfield3heightBasisoutwriteShortfield4scaleoutwriteShortfield5indexToFontTable
"public static String toHex(int value) {StringBuilder sb = new StringBuilder(8);writeHex(sb, value & 0xFFFFFFFFL, 8, """");return sb.toString();}",public static String toHexint value StringBuilder sb  new StringBuilder8writeHexsb value  0xFFFFFFFFL 8 return sbtoString
"public static Collection<Ref> sort(Collection<Ref> refs) {final List<Ref> r = new ArrayList<>(refs);Collections.sort(r, INSTANCE);return r;}",public static CollectionRef sortCollectionRef refs final ListRef r  new ArrayListrefsCollectionssortr INSTANCEreturn r
public DescribeVpcsResult describeVpcs() {return describeVpcs(new DescribeVpcsRequest());},public DescribeVpcsResult describeVpcs return describeVpcsnew DescribeVpcsRequest
public ListProposalsResult listProposals(ListProposalsRequest request) {request = beforeClientExecution(request);return executeListProposals(request);},public ListProposalsResult listProposalsListProposalsRequest request request  beforeClientExecutionrequestreturn executeListProposalsrequest
public void close() throws IOException {flush();output.close();},public void close throws IOException flushoutputclose
public final T get() {return object;},public final T get return object
"public BundleInstanceRequest(String instanceId, Storage storage) {setInstanceId(instanceId);setStorage(storage);}",public BundleInstanceRequestString instanceId Storage storage setInstanceIdinstanceIdsetStoragestorage
"public void back(int delta) {if (delta == 1 && 0 <= prevPtr) {currPtr = prevPtr;prevPtr = -1;if (!eof())parseEntry();return;} else if (delta <= 0)throw new ArrayIndexOutOfBoundsException(delta);final int[] trace = new int[delta + 1];Arrays.fill(trace, -1);int ptr = 0;while (ptr != currPtr) {System.arraycopy(trace, 1, trace, 0, delta);trace[delta] = ptr;while (raw[ptr] != 0)ptr++;ptr += OBJECT_ID_LENGTH + 1;}if (trace[1] == -1)throw new ArrayIndexOutOfBoundsException(delta);prevPtr = trace[0];currPtr = trace[1];parseEntry();}",public void backint delta if delta  1  0  prevPtr currPtr  prevPtrprevPtr  1if eofparseEntryreturn else if delta  0throw new ArrayIndexOutOfBoundsExceptiondeltafinal int trace  new intdelta  1Arraysfilltrace 1int ptr  0while ptr  currPtr Systemarraycopytrace 1 trace 0 deltatracedelta  ptrwhile rawptr  0ptrptr  OBJECTIDLENGTH  1if trace1  1throw new ArrayIndexOutOfBoundsExceptiondeltaprevPtr  trace0currPtr  trace1parseEntry
"public String toString() {return ""pred_""+ruleIndex+"":""+predIndex;}",public String toString return predruleIndexpredIndex
"public PatternSyntaxException(String description, String pattern, int index) {this.desc = description;this.pattern = pattern;this.index = index;}",public PatternSyntaxExceptionString description String pattern int index thisdesc  descriptionthispattern  patternthisindex  index
"public AlphaAnimation(float from, float to) {mStartAlpha = from;mEndAlpha = to;mCurrentAlpha = from;}",public AlphaAnimationfloat from float to mStartAlpha  frommEndAlpha  tomCurrentAlpha  from
"public int doLogic() throws Exception {TaxonomyWriter taxonomyWriter = getRunData().getTaxonomyWriter();if (taxonomyWriter != null) {taxonomyWriter.commit();} else {throw new IllegalStateException(""TaxonomyWriter is not currently open"");}return 1;}",public int doLogic throws Exception TaxonomyWriter taxonomyWriter  getRunDatagetTaxonomyWriterif taxonomyWriter  null taxonomyWritercommit else throw new IllegalStateExceptionTaxonomyWriter is not currently openreturn 1
"public DeltaIndex(byte[] sourceBuffer) {src = sourceBuffer;DeltaIndexScanner scan = new DeltaIndexScanner(src, src.length);table = scan.table;tableMask = scan.tableMask;entries = new long[1 + countEntries(scan)];copyEntries(scan);}",public DeltaIndexbyte sourceBuffer src  sourceBufferDeltaIndexScanner scan  new DeltaIndexScannersrc srclengthtable  scantabletableMask  scantableMaskentries  new long1  countEntriesscancopyEntriesscan
public int previousIndex() {return pos;},public int previousIndex return pos
public QueryMaker getQueryMaker() {return getRunData().getQueryMaker(this);},public QueryMaker getQueryMaker return getRunDatagetQueryMakerthis
"public JapaneseTokenizerFactory(Map<String,String> args) {super(args);mode = Mode.valueOf(get(args, MODE, JapaneseTokenizer.DEFAULT_MODE.toString()).toUpperCase(Locale.ROOT));userDictionaryPath = args.remove(USER_DICT_PATH);userDictionaryEncoding = args.remove(USER_DICT_ENCODING);discardPunctuation = getBoolean(args, DISCARD_PUNCTUATION, true);discardCompoundToken = getBoolean(args, DISCARD_COMPOUND_TOKEN, true);nbestCost = getInt(args, NBEST_COST, 0);nbestExamples = args.remove(NBEST_EXAMPLES);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public JapaneseTokenizerFactoryMapStringString args superargsmode  ModevalueOfgetargs MODE JapaneseTokenizerDEFAULTMODEtoStringtoUpperCaseLocaleROOTuserDictionaryPath  argsremoveUSERDICTPATHuserDictionaryEncoding  argsremoveUSERDICTENCODINGdiscardPunctuation  getBooleanargs DISCARDPUNCTUATION truediscardCompoundToken  getBooleanargs DISCARDCOMPOUNDTOKEN truenbestCost  getIntargs NBESTCOST 0nbestExamples  argsremoveNBESTEXAMPLESif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public Long longValue(String key) {String value = responseMap.get(key);if (null == value || 0 == value.length()) {return null;}return Long.valueOf(responseMap.get(key));},public Long longValueString key String value  responseMapgetkeyif null  value  0  valuelength return nullreturn LongvalueOfresponseMapgetkey
"public GetLibraryRequest() {super(""CloudPhoto"", ""2017-07-11"", ""GetLibrary"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public GetLibraryRequest superCloudPhoto 20170711 GetLibrary cloudphotosetProtocolProtocolTypeHTTPS
public short getFontOfFormattingRun(int index) {FormatRun r = _string.getFormatRun(index);return r.getFontIndex();},public short getFontOfFormattingRunint index FormatRun r  stringgetFormatRunindexreturn rgetFontIndex
"public int fillFields(byte[] data, int offset, EscherRecordFactory recordFactory) {int bytesRemaining = readHeader( data, offset );int pos            = offset + 8;int size           = 0;field_1_shapeIdMax     =  LittleEndian.getInt( data, pos + size );size+=4;size+=4;field_3_numShapesSaved =  LittleEndian.getInt( data, pos + size );size+=4;field_4_drawingsSaved  =  LittleEndian.getInt( data, pos + size );size+=4;field_5_fileIdClusters.clear();int numIdClusters = (bytesRemaining-size) / 8;for (int i = 0; i < numIdClusters; i++) {int drawingGroupId = LittleEndian.getInt( data, pos + size );int numShapeIdsUsed = LittleEndian.getInt( data, pos + size + 4 );FileIdCluster fic = new FileIdCluster(drawingGroupId, numShapeIdsUsed);field_5_fileIdClusters.add(fic);maxDgId = Math.max(maxDgId, drawingGroupId);size += 8;}bytesRemaining -= size;if (bytesRemaining != 0) {throw new RecordFormatException(""Expecting no remaining data but got "" + bytesRemaining + "" byte(s)."");}return 8 + size;}",public int fillFieldsbyte data int offset EscherRecordFactory recordFactory int bytesRemaining  readHeader data offset int pos             offset  8int size            0field1shapeIdMax       LittleEndiangetInt data pos  size size4size4field3numShapesSaved   LittleEndiangetInt data pos  size size4field4drawingsSaved    LittleEndiangetInt data pos  size size4field5fileIdClustersclearint numIdClusters  bytesRemainingsize  8for int i  0 i  numIdClusters i int drawingGroupId  LittleEndiangetInt data pos  size int numShapeIdsUsed  LittleEndiangetInt data pos  size  4 FileIdCluster fic  new FileIdClusterdrawingGroupId numShapeIdsUsedfield5fileIdClustersaddficmaxDgId  MathmaxmaxDgId drawingGroupIdsize  8bytesRemaining  sizeif bytesRemaining  0 throw new RecordFormatExceptionExpecting no remaining data but got   bytesRemaining   bytesreturn 8  size
"public void encode(int[] values, int valuesOffset, byte[] blocks,int blocksOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = encode(values, valuesOffset);valuesOffset += valueCount;blocksOffset = writeLong(block, blocks, blocksOffset);}}",public void encodeint values int valuesOffset byte blocksint blocksOffset int iterations for int i  0 i  iterations i final long block  encodevalues valuesOffsetvaluesOffset  valueCountblocksOffset  writeLongblock blocks blocksOffset
public GetTerminologyResult getTerminology(GetTerminologyRequest request) {request = beforeClientExecution(request);return executeGetTerminology(request);},public GetTerminologyResult getTerminologyGetTerminologyRequest request request  beforeClientExecutionrequestreturn executeGetTerminologyrequest
public void serialize(LittleEndianOutput out) {out.writeShort(_character);out.writeShort(_fontIndex);},public void serializeLittleEndianOutput out outwriteShortcharacteroutwriteShortfontIndex
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_options);},public void serializeLittleEndianOutput out outwriteShortfield1options
public SearchFacesResult searchFaces(SearchFacesRequest request) {request = beforeClientExecution(request);return executeSearchFaces(request);},public SearchFacesResult searchFacesSearchFacesRequest request request  beforeClientExecutionrequestreturn executeSearchFacesrequest
public int getPositionIncrementGap(String fieldName) {return getWrappedAnalyzer(fieldName).getPositionIncrementGap(fieldName);},public int getPositionIncrementGapString fieldName return getWrappedAnalyzerfieldNamegetPositionIncrementGapfieldName
public DescribeSchemaResult describeSchema(DescribeSchemaRequest request) {request = beforeClientExecution(request);return executeDescribeSchema(request);},public DescribeSchemaResult describeSchemaDescribeSchemaRequest request request  beforeClientExecutionrequestreturn executeDescribeSchemarequest
@Override public int size() {return BoundedMap.this.size();},Override public int size return BoundedMapthissize
public MutableEntry cloneEntry() {final MutableEntry r = new MutableEntry();ensureId();r.idBuffer.fromObjectId(idBuffer);r.offset = offset;return r;},public MutableEntry cloneEntry final MutableEntry r  new MutableEntryensureIdridBufferfromObjectIdidBufferroffset  offsetreturn r
"public OperateEquipmentRequest() {super(""industry-brain"", ""2018-07-12"", ""OperateEquipment"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public OperateEquipmentRequest superindustrybrain 20180712 OperateEquipmentsetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public boolean add(E e) {synchronized (mutex) {return delegate().add(e);}},public boolean addE e synchronized mutex return delegateadde
public boolean equals( Object o ){if ( this == o ) {return true;}if ( !( o instanceof EscherSimpleProperty ) ) {return false;}final EscherSimpleProperty escherSimpleProperty = (EscherSimpleProperty) o;if ( propertyValue != escherSimpleProperty.propertyValue ) {return false;}if ( getId() != escherSimpleProperty.getId() ) {return false;}return true;},public boolean equals Object o if  this  o  return trueif   o instanceof EscherSimpleProperty   return falsefinal EscherSimpleProperty escherSimpleProperty  EscherSimpleProperty oif  propertyValue  escherSimplePropertypropertyValue  return falseif  getId  escherSimplePropertygetId  return falsereturn true
public final FloatBuffer asFloatBuffer() {return FloatToByteBufferAdapter.asFloatBuffer(this);},public final FloatBuffer asFloatBuffer return FloatToByteBufferAdapterasFloatBufferthis
public void removeThumbnail() {remove1stProperty(PropertyIDMap.PID_THUMBNAIL);},public void removeThumbnail remove1stPropertyPropertyIDMapPIDTHUMBNAIL
"public static int compareIgnoreCase(String a, String b) {for (int i = 0; i < a.length() && i < b.length(); i++) {int d = toLowerCase(a.charAt(i)) - toLowerCase(b.charAt(i));if (d != 0)return d;}return a.length() - b.length();}",public static int compareIgnoreCaseString a String b for int i  0 i  alength  i  blength i int d  toLowerCaseacharAti  toLowerCasebcharAtiif d  0return dreturn alength  blength
"public ViewDefinitionRecord(RecordInputStream in) {rwFirst = in.readUShort();rwLast = in.readUShort();colFirst = in.readUShort();colLast = in.readUShort();rwFirstHead = in.readUShort();rwFirstData = in.readUShort();colFirstData = in.readUShort();iCache = in.readUShort();reserved = in.readUShort();sxaxis4Data = in.readUShort();ipos4Data = in.readUShort();cDim = in.readUShort();cDimRw = in.readUShort();cDimCol = in.readUShort();cDimPg = in.readUShort();cDimData = in.readUShort();cRw = in.readUShort();cCol = in.readUShort();grbit = in.readUShort();itblAutoFmt = in.readUShort();int cchName = in.readUShort();int cchData = in.readUShort();name = StringUtil.readUnicodeString(in, cchName);dataField = StringUtil.readUnicodeString(in, cchData);}",public ViewDefinitionRecordRecordInputStream in rwFirst  inreadUShortrwLast  inreadUShortcolFirst  inreadUShortcolLast  inreadUShortrwFirstHead  inreadUShortrwFirstData  inreadUShortcolFirstData  inreadUShortiCache  inreadUShortreserved  inreadUShortsxaxis4Data  inreadUShortipos4Data  inreadUShortcDim  inreadUShortcDimRw  inreadUShortcDimCol  inreadUShortcDimPg  inreadUShortcDimData  inreadUShortcRw  inreadUShortcCol  inreadUShortgrbit  inreadUShortitblAutoFmt  inreadUShortint cchName  inreadUShortint cchData  inreadUShortname  StringUtilreadUnicodeStringin cchNamedataField  StringUtilreadUnicodeStringin cchData
"public FormatRecord(RecordInputStream in) {field_1_index_code = in.readShort();int field_3_unicode_len = in.readUShort();field_3_hasMultibyte = (in.readByte() & 0x01) != 0;if (field_3_hasMultibyte) {field_4_formatstring = readStringCommon(in, field_3_unicode_len, false);} else {field_4_formatstring = readStringCommon(in, field_3_unicode_len, true);}}",public FormatRecordRecordInputStream in field1indexcode  inreadShortint field3unicodelen  inreadUShortfield3hasMultibyte  inreadByte  0x01  0if field3hasMultibyte field4formatstring  readStringCommonin field3unicodelen false else field4formatstring  readStringCommonin field3unicodelen true
public DescribeBrokerResult describeBroker(DescribeBrokerRequest request) {request = beforeClientExecution(request);return executeDescribeBroker(request);},public DescribeBrokerResult describeBrokerDescribeBrokerRequest request request  beforeClientExecutionrequestreturn executeDescribeBrokerrequest
public void reset() {if ( getInputStream()!=null ) getInputStream().seek(0);_errHandler.reset(this);_ctx = null;_syntaxErrors = 0;matchedEOF = false;setTrace(false);_precedenceStack.clear();_precedenceStack.push(0);ATNSimulator interpreter = getInterpreter();if (interpreter != null) {interpreter.reset();}},public void reset if  getInputStreamnull  getInputStreamseek0errHandlerresetthisctx  nullsyntaxErrors  0matchedEOF  falsesetTracefalseprecedenceStackclearprecedenceStackpush0ATNSimulator interpreter  getInterpreterif interpreter  null interpreterreset
public boolean remove(Object o) {final RevFlag flag = (RevFlag) o;if ((mask & flag.mask) == 0)return false;mask &= ~flag.mask;for (int i = 0; i < active.size(); i++)if (active.get(i).mask == flag.mask)active.remove(i);return true;},public boolean removeObject o final RevFlag flag  RevFlag oif mask  flagmask  0return falsemask  flagmaskfor int i  0 i  activesize iif activegetimask  flagmaskactiveremoveireturn true
"public String format(Passage passages[], String content) {StringBuilder sb = new StringBuilder();int pos = 0;for (Passage passage : passages) {if (passage.getStartOffset() > pos && pos > 0) {sb.append(ellipsis);}pos = passage.getStartOffset();for (int i = 0; i < passage.getNumMatches(); i++) {int start = passage.getMatchStarts()[i];assert start >= pos && start < passage.getEndOffset();append(sb, content, pos, start);int end = passage.getMatchEnds()[i];assert end > start;while (i + 1 < passage.getNumMatches() && passage.getMatchStarts()[i+1] < end) {end = passage.getMatchEnds()[++i];}end = Math.min(end, passage.getEndOffset()); sb.append(preTag);append(sb, content, start, end);sb.append(postTag);pos = end;}append(sb, content, pos, Math.max(pos, passage.getEndOffset()));pos = passage.getEndOffset();}return sb.toString();}",public String formatPassage passages String content StringBuilder sb  new StringBuilderint pos  0for Passage passage  passages if passagegetStartOffset  pos  pos  0 sbappendellipsispos  passagegetStartOffsetfor int i  0 i  passagegetNumMatches i int start  passagegetMatchStartsiassert start  pos  start  passagegetEndOffsetappendsb content pos startint end  passagegetMatchEndsiassert end  startwhile i  1  passagegetNumMatches  passagegetMatchStartsi1  end end  passagegetMatchEndsiend  Mathminend passagegetEndOffset sbappendpreTagappendsb content start endsbappendpostTagpos  endappendsb content pos Mathmaxpos passagegetEndOffsetpos  passagegetEndOffsetreturn sbtoString
"public DrillSidewaysResult(Facets facets, TopDocs hits) {this.facets = facets;this.hits = hits;}",public DrillSidewaysResultFacets facets TopDocs hits thisfacets  facetsthishits  hits
public ListTrafficPolicyInstancesByPolicyResult listTrafficPolicyInstancesByPolicy(ListTrafficPolicyInstancesByPolicyRequest request) {request = beforeClientExecution(request);return executeListTrafficPolicyInstancesByPolicy(request);},public ListTrafficPolicyInstancesByPolicyResult listTrafficPolicyInstancesByPolicyListTrafficPolicyInstancesByPolicyRequest request request  beforeClientExecutionrequestreturn executeListTrafficPolicyInstancesByPolicyrequest
"public ComplexPhraseQuery(String field, String phrasedQueryStringContents,int slopFactor, boolean inOrder) {this.field = Objects.requireNonNull(field);this.phrasedQueryStringContents = Objects.requireNonNull(phrasedQueryStringContents);this.slopFactor = slopFactor;this.inOrder = inOrder;}",public ComplexPhraseQueryString field String phrasedQueryStringContentsint slopFactor boolean inOrder thisfield  ObjectsrequireNonNullfieldthisphrasedQueryStringContents  ObjectsrequireNonNullphrasedQueryStringContentsthisslopFactor  slopFactorthisinOrder  inOrder
"public String toString(String field) {StringBuilder buffer = new StringBuilder();if (!term.field().equals(field)) {buffer.append(term.field());buffer.append("":"");}buffer.append(getClass().getSimpleName());buffer.append("" {"");buffer.append('\n');buffer.append(automaton.toString());buffer.append(""}"");return buffer.toString();}",public String toStringString field StringBuilder buffer  new StringBuilderif termfieldequalsfield bufferappendtermfieldbufferappendbufferappendgetClassgetSimpleNamebufferappend bufferappendnbufferappendautomatontoStringbufferappendreturn buffertoString
public final String toFormulaString() {return getName();},public final String toFormulaString return getName
public AreaRecord clone() {return copy();},public AreaRecord clone return copy
public long ramBytesUsed() {return TERMS_BASE_RAM_BYTES_USED + (fst!=null ? fst.ramBytesUsed() : 0)+ RamUsageEstimator.sizeOf(scratch.bytes()) + RamUsageEstimator.sizeOf(scratchUTF16.chars());},public long ramBytesUsed return TERMSBASERAMBYTESUSED  fstnull  fstramBytesUsed  0 RamUsageEstimatorsizeOfscratchbytes  RamUsageEstimatorsizeOfscratchUTF16chars
"public DeleteConfigurationTemplateRequest(String applicationName, String templateName) {setApplicationName(applicationName);setTemplateName(templateName);}",public DeleteConfigurationTemplateRequestString applicationName String templateName setApplicationNameapplicationNamesetTemplateNametemplateName
"public List<Token> getTokens(int start, int stop, int ttype) {HashSet<Integer> s = new HashSet<Integer>(ttype);s.add(ttype);return getTokens(start,stop, s);}",public ListToken getTokensint start int stop int ttype HashSetInteger s  new HashSetIntegerttypesaddttypereturn getTokensstartstop s
public DescribeIamInstanceProfileAssociationsResult describeIamInstanceProfileAssociations(DescribeIamInstanceProfileAssociationsRequest request) {request = beforeClientExecution(request);return executeDescribeIamInstanceProfileAssociations(request);},public DescribeIamInstanceProfileAssociationsResult describeIamInstanceProfileAssociationsDescribeIamInstanceProfileAssociationsRequest request request  beforeClientExecutionrequestreturn executeDescribeIamInstanceProfileAssociationsrequest
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval textArg) {ValueEval veText1;try {veText1 = OperandResolver.getSingleValue(textArg, srcRowIndex, srcColumnIndex);} catch (EvaluationException e) {return e.getErrorEval();}String text = OperandResolver.coerceValueToString(veText1);if (text.length() == 0) {return ErrorEval.VALUE_INVALID;}int code = text.charAt(0);return new StringEval(String.valueOf(code));}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval textArg ValueEval veText1try veText1  OperandResolvergetSingleValuetextArg srcRowIndex srcColumnIndex catch EvaluationException e return egetErrorEvalString text  OperandResolvercoerceValueToStringveText1if textlength  0 return ErrorEvalVALUEINVALIDint code  textcharAt0return new StringEvalStringvalueOfcode
public AttachVpnGatewayResult attachVpnGateway(AttachVpnGatewayRequest request) {request = beforeClientExecution(request);return executeAttachVpnGateway(request);},public AttachVpnGatewayResult attachVpnGatewayAttachVpnGatewayRequest request request  beforeClientExecutionrequestreturn executeAttachVpnGatewayrequest
"public int compareTo(FloatBuffer otherBuffer) {int compareRemaining = (remaining() < otherBuffer.remaining()) ? remaining(): otherBuffer.remaining();int thisPos = position;int otherPos = otherBuffer.position;float thisFloat, otherFloat;while (compareRemaining > 0) {thisFloat = get(thisPos);otherFloat = otherBuffer.get(otherPos);if ((thisFloat != otherFloat)&& ((thisFloat == thisFloat) || (otherFloat == otherFloat))) {return thisFloat < otherFloat ? -1 : 1;}thisPos++;otherPos++;compareRemaining--;}return remaining() - otherBuffer.remaining();}",public int compareToFloatBuffer otherBuffer int compareRemaining  remaining  otherBufferremaining  remaining otherBufferremainingint thisPos  positionint otherPos  otherBufferpositionfloat thisFloat otherFloatwhile compareRemaining  0 thisFloat  getthisPosotherFloat  otherBuffergetotherPosif thisFloat  otherFloat thisFloat  thisFloat  otherFloat  otherFloat return thisFloat  otherFloat  1  1thisPosotherPoscompareRemainingreturn remaining  otherBufferremaining
"public Matcher useTransparentBounds(boolean value) {transparentBounds = value;useTransparentBoundsImpl(address, value);return this;}",public Matcher useTransparentBoundsboolean value transparentBounds  valueuseTransparentBoundsImpladdress valuereturn this
public void remove() {if (lastEntryReturned == null)throw new IllegalStateException();if (modCount != expectedModCount)throw new ConcurrentModificationException();Hashtable.this.remove(lastEntryReturned.key);lastEntryReturned = null;expectedModCount = modCount;},public void remove if lastEntryReturned  nullthrow new IllegalStateExceptionif modCount  expectedModCountthrow new ConcurrentModificationExceptionHashtablethisremovelastEntryReturnedkeylastEntryReturned  nullexpectedModCount  modCount
"public String toFormulaString() {StringBuilder sb = new StringBuilder(64);if (externalWorkbookNumber >= 0) {sb.append('[');sb.append(externalWorkbookNumber);sb.append(']');}if (sheetName != null) {SheetNameFormatter.appendFormat(sb, sheetName);}sb.append('!');sb.append(FormulaError.REF.getString());return sb.toString();}",public String toFormulaString StringBuilder sb  new StringBuilder64if externalWorkbookNumber  0 sbappendsbappendexternalWorkbookNumbersbappendif sheetName  null SheetNameFormatterappendFormatsb sheetNamesbappendsbappendFormulaErrorREFgetStringreturn sbtoString
"public String toString() {return slice.toString()+"":""+ postingsEnum;}",public String toString return slicetoString postingsEnum
public CreateVpnConnectionRouteResult createVpnConnectionRoute(CreateVpnConnectionRouteRequest request) {request = beforeClientExecution(request);return executeCreateVpnConnectionRoute(request);},public CreateVpnConnectionRouteResult createVpnConnectionRouteCreateVpnConnectionRouteRequest request request  beforeClientExecutionrequestreturn executeCreateVpnConnectionRouterequest
public boolean hasNext() {return next != null;},public boolean hasNext return next  null
public DeleteDBSecurityGroupRequest(String dBSecurityGroupName) {setDBSecurityGroupName(dBSecurityGroupName);},public DeleteDBSecurityGroupRequestString dBSecurityGroupName setDBSecurityGroupNamedBSecurityGroupName
"public int compare(Property o1, Property o2){String VBA_PROJECT = ""_VBA_PROJECT"";String name1  = o1.getName();String name2  = o2.getName();int  result = name1.length() - name2.length();if (result == 0){if (name1.compareTo(VBA_PROJECT) == 0)result = 1;else if (name2.compareTo(VBA_PROJECT) == 0)result = -1;else{if (name1.startsWith(""__"") && name2.startsWith(""__"")){result = name1.compareToIgnoreCase(name2);}else if (name1.startsWith(""__"")){result = 1;}else if (name2.startsWith(""__"")){result = -1;}elseresult = name1.compareToIgnoreCase(name2);}}return result;}",public int compareProperty o1 Property o2String VBAPROJECT  VBAPROJECTString name1   o1getNameString name2   o2getNameint  result  name1length  name2lengthif result  0if name1compareToVBAPROJECT  0result  1else if name2compareToVBAPROJECT  0result  1elseif name1startsWith  name2startsWithresult  name1compareToIgnoreCasename2else if name1startsWithresult  1else if name2startsWithresult  1elseresult  name1compareToIgnoreCasename2return result
"public DoubleBuffer get(double[] dst, int dstOffset, int doubleCount) {Arrays.checkOffsetAndCount(dst.length, dstOffset, doubleCount);if (doubleCount > remaining()) {throw new BufferUnderflowException();}for (int i = dstOffset; i < dstOffset + doubleCount; ++i) {dst[i] = get();}return this;}",public DoubleBuffer getdouble dst int dstOffset int doubleCount ArrayscheckOffsetAndCountdstlength dstOffset doubleCountif doubleCount  remaining throw new BufferUnderflowExceptionfor int i  dstOffset i  dstOffset  doubleCount i dsti  getreturn this
"public CharsRef add(CharsRef prefix, CharsRef output) {assert prefix != null;assert output != null;if (prefix == NO_OUTPUT) {return output;} else if (output == NO_OUTPUT) {return prefix;} else {assert prefix.length > 0;assert output.length > 0;CharsRef result = new CharsRef(prefix.length + output.length);System.arraycopy(prefix.chars, prefix.offset, result.chars, 0, prefix.length);System.arraycopy(output.chars, output.offset, result.chars, prefix.length, output.length);result.length = prefix.length + output.length;return result;}}",public CharsRef addCharsRef prefix CharsRef output assert prefix  nullassert output  nullif prefix  NOOUTPUT return output else if output  NOOUTPUT return prefix else assert prefixlength  0assert outputlength  0CharsRef result  new CharsRefprefixlength  outputlengthSystemarraycopyprefixchars prefixoffset resultchars 0 prefixlengthSystemarraycopyoutputchars outputoffset resultchars prefixlength outputlengthresultlength  prefixlength  outputlengthreturn result
public UpdateProfileResult updateProfile(UpdateProfileRequest request) {request = beforeClientExecution(request);return executeUpdateProfile(request);},public UpdateProfileResult updateProfileUpdateProfileRequest request request  beforeClientExecutionrequestreturn executeUpdateProfilerequest
"public LikeThisQueryBuilder(Analyzer analyzer, String[] defaultFieldNames) {this.analyzer = analyzer;this.defaultFieldNames = defaultFieldNames;}",public LikeThisQueryBuilderAnalyzer analyzer String defaultFieldNames thisanalyzer  analyzerthisdefaultFieldNames  defaultFieldNames
"public StringBuffer insert(int index, long l) {return insert(index, Long.toString(l));}",public StringBuffer insertint index long l return insertindex LongtoStringl
"public Field(String name, BytesRef bytes, IndexableFieldType type) {if (name == null) {throw new IllegalArgumentException(""name must not be null"");}if (bytes == null) {throw new IllegalArgumentException(""bytes must not be null"");}if (type == null) {throw new IllegalArgumentException(""type must not be null"");}this.name = name;this.fieldsData = bytes;this.type = type;}",public FieldString name BytesRef bytes IndexableFieldType type if name  null throw new IllegalArgumentExceptionname must not be nullif bytes  null throw new IllegalArgumentExceptionbytes must not be nullif type  null throw new IllegalArgumentExceptiontype must not be nullthisname  namethisfieldsData  bytesthistype  type
public void clear() {mSize = 0;},public void clear mSize  0
public SrndQuery parse2(String query) throws ParseException {ReInit(new FastCharStream(new StringReader(query)));try {return TopSrndQuery();} catch (TokenMgrError tme) {throw new ParseException(tme.getMessage());}},public SrndQuery parse2String query throws ParseException ReInitnew FastCharStreamnew StringReaderquerytry return TopSrndQuery catch TokenMgrError tme throw new ParseExceptiontmegetMessage
"@Override public int size() {return (int) Math.min(this.size, Integer.MAX_VALUE);}",Override public int size return int Mathminthissize IntegerMAXVALUE
public DescribeConfigurationResult describeConfiguration(DescribeConfigurationRequest request) {request = beforeClientExecution(request);return executeDescribeConfiguration(request);},public DescribeConfigurationResult describeConfigurationDescribeConfigurationRequest request request  beforeClientExecutionrequestreturn executeDescribeConfigurationrequest
"public String getCharErrorDisplay(int c) {String s = getErrorDisplay(c);return ""'""+s+""'"";}",public String getCharErrorDisplayint c String s  getErrorDisplaycreturn s
public DescribeHumanTaskUiResult describeHumanTaskUi(DescribeHumanTaskUiRequest request) {request = beforeClientExecution(request);return executeDescribeHumanTaskUi(request);},public DescribeHumanTaskUiResult describeHumanTaskUiDescribeHumanTaskUiRequest request request  beforeClientExecutionrequestreturn executeDescribeHumanTaskUirequest
public void Run() {try {int n = task.runAndMaybeStats(letChildReport);if (anyExhaustibleTasks) {updateExhausted(task);}count += n;} catch (NoMoreDataException e) {exhausted = true;} catch (Exception e) {throw new RuntimeException(e);}},public void Run try int n  taskrunAndMaybeStatsletChildReportif anyExhaustibleTasks updateExhaustedtaskcount  n catch NoMoreDataException e exhausted  true catch Exception e throw new RuntimeExceptione
public DescribeImagePermissionsResult describeImagePermissions(DescribeImagePermissionsRequest request) {request = beforeClientExecution(request);return executeDescribeImagePermissions(request);},public DescribeImagePermissionsResult describeImagePermissionsDescribeImagePermissionsRequest request request  beforeClientExecutionrequestreturn executeDescribeImagePermissionsrequest
public SrndQuery clone() {try {return (SrndQuery)super.clone();} catch (CloneNotSupportedException cns) {throw new Error(cns);}},public SrndQuery clone try return SrndQuerysuperclone catch CloneNotSupportedException cns throw new Errorcns
"public void recycleByteBlocks(byte[][] blocks, int start, int end) {final int numBlocks = Math.min(maxBufferedBlocks - freeBlocks, end - start);final int size = freeBlocks + numBlocks;if (size >= freeByteBlocks.length) {final byte[][] newBlocks = new byte[ArrayUtil.oversize(size,RamUsageEstimator.NUM_BYTES_OBJECT_REF)][];System.arraycopy(freeByteBlocks, 0, newBlocks, 0, freeBlocks);freeByteBlocks = newBlocks;}final int stop = start + numBlocks;for (int i = start; i < stop; i++) {freeByteBlocks[freeBlocks++] = blocks[i];blocks[i] = null;}for (int i = stop; i < end; i++) {blocks[i] = null;}bytesUsed.addAndGet(-(end - stop) * blockSize);assert bytesUsed.get() >= 0;}",public void recycleByteBlocksbyte blocks int start int end final int numBlocks  MathminmaxBufferedBlocks  freeBlocks end  startfinal int size  freeBlocks  numBlocksif size  freeByteBlockslength final byte newBlocks  new byteArrayUtiloversizesizeRamUsageEstimatorNUMBYTESOBJECTREFSystemarraycopyfreeByteBlocks 0 newBlocks 0 freeBlocksfreeByteBlocks  newBlocksfinal int stop  start  numBlocksfor int i  start i  stop i freeByteBlocksfreeBlocks  blocksiblocksi  nullfor int i  stop i  end i blocksi  nullbytesUsedaddAndGetend  stop  blockSizeassert bytesUsedget  0
"public GeohashPrefixTree(SpatialContext ctx, int maxLevels) {super(ctx, maxLevels);Rectangle bounds = ctx.getWorldBounds();if (bounds.getMinX() != -180)throw new IllegalArgumentException(""Geohash only supports lat-lon world bounds. Got ""+bounds);int MAXP = getMaxLevelsPossible();if (maxLevels <= 0 || maxLevels > MAXP)throw new IllegalArgumentException(""maxLevels must be [1-""+MAXP+""] but got ""+ maxLevels);}",public GeohashPrefixTreeSpatialContext ctx int maxLevels superctx maxLevelsRectangle bounds  ctxgetWorldBoundsif boundsgetMinX  180throw new IllegalArgumentExceptionGeohash only supports latlon world bounds Got boundsint MAXP  getMaxLevelsPossibleif maxLevels  0  maxLevels  MAXPthrow new IllegalArgumentExceptionmaxLevels must be 1MAXP but got  maxLevels
public void removeName(int namenum) {_definedNames.remove(namenum);},public void removeNameint namenum definedNamesremovenamenum
public CancelSpotFleetRequestsResult cancelSpotFleetRequests(CancelSpotFleetRequestsRequest request) {request = beforeClientExecution(request);return executeCancelSpotFleetRequests(request);},public CancelSpotFleetRequestsResult cancelSpotFleetRequestsCancelSpotFleetRequestsRequest request request  beforeClientExecutionrequestreturn executeCancelSpotFleetRequestsrequest
"public GetIndustryInfoLineageListRequest() {super(""industry-brain"", ""2018-07-12"", ""GetIndustryInfoLineageList"");setProtocol(ProtocolType.HTTPS);}",public GetIndustryInfoLineageListRequest superindustrybrain 20180712 GetIndustryInfoLineageListsetProtocolProtocolTypeHTTPS
"public static double[] grow(double[] array, int minSize) {assert minSize >= 0: ""size must be positive (got "" + minSize + ""): likely integer overflow?"";if (array.length < minSize) {return growExact(array, oversize(minSize, Double.BYTES));} else return array;}",public static double growdouble array int minSize assert minSize  0 size must be positive got   minSize   likely integer overflowif arraylength  minSize return growExactarray oversizeminSize DoubleBYTES else return array
public void setResult(RefUpdate.Result status) {result = status;super.setResult(status);},public void setResultRefUpdateResult status result  statussupersetResultstatus
"public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final int byte0 = blocks[blocksOffset++] & 0xFF;final int byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 2) | (byte1 >>> 6);final int byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 63) << 4) | (byte2 >>> 4);final int byte3 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte2 & 15) << 6) | (byte3 >>> 2);final int byte4 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte3 & 3) << 8) | byte4;}}",public void decodebyte blocks int blocksOffset int values int valuesOffset int iterations for int i  0 i  iterations i final int byte0  blocksblocksOffset  0xFFfinal int byte1  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  2  byte1  6final int byte2  blocksblocksOffset  0xFFvaluesvaluesOffset  byte1  63  4  byte2  4final int byte3  blocksblocksOffset  0xFFvaluesvaluesOffset  byte2  15  6  byte3  2final int byte4  blocksblocksOffset  0xFFvaluesvaluesOffset  byte3  3  8  byte4
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1, ValueEval arg2) {try {ValueEval ve = OperandResolver.getSingleValue(arg0, srcRowIndex, srcColumnIndex);final double result = OperandResolver.coerceValueToDouble(ve);if (Double.isNaN(result) || Double.isInfinite(result)) {throw new EvaluationException(ErrorEval.NUM_ERROR);}ve = OperandResolver.getSingleValue(arg2, srcRowIndex, srcColumnIndex);int order_value = OperandResolver.coerceValueToInt(ve);final boolean order;if (order_value==0) {order = true;} else if(order_value==1) {order = false;} else {throw new EvaluationException(ErrorEval.NUM_ERROR);}if (arg1 instanceof RefListEval) {return eval(result, ((RefListEval)arg1), order);}final AreaEval aeRange = convertRangeArg(arg1);return eval(result, aeRange, order);} catch (EvaluationException e) {return e.getErrorEval();}}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1 ValueEval arg2 try ValueEval ve  OperandResolvergetSingleValuearg0 srcRowIndex srcColumnIndexfinal double result  OperandResolvercoerceValueToDoubleveif DoubleisNaNresult  DoubleisInfiniteresult throw new EvaluationExceptionErrorEvalNUMERRORve  OperandResolvergetSingleValuearg2 srcRowIndex srcColumnIndexint ordervalue  OperandResolvercoerceValueToIntvefinal boolean orderif ordervalue0 order  true else ifordervalue1 order  false else throw new EvaluationExceptionErrorEvalNUMERRORif arg1 instanceof RefListEval return evalresult RefListEvalarg1 orderfinal AreaEval aeRange  convertRangeArgarg1return evalresult aeRange order catch EvaluationException e return egetErrorEval
public DeleteEventBusResult deleteEventBus(DeleteEventBusRequest request) {request = beforeClientExecution(request);return executeDeleteEventBus(request);},public DeleteEventBusResult deleteEventBusDeleteEventBusRequest request request  beforeClientExecutionrequestreturn executeDeleteEventBusrequest
"public static ByteBuffer wrap(byte[] array, int start, int byteCount) {Arrays.checkOffsetAndCount(array.length, start, byteCount);ByteBuffer buf = new ReadWriteHeapByteBuffer(array);buf.position = start;buf.limit = start + byteCount;return buf;}",public static ByteBuffer wrapbyte array int start int byteCount ArrayscheckOffsetAndCountarraylength start byteCountByteBuffer buf  new ReadWriteHeapByteBufferarraybufposition  startbuflimit  start  byteCountreturn buf
public String apiVersion() {return this.apiVersion;},public String apiVersion return thisapiVersion
public SearchResult search(SearchRequest request) {request = beforeClientExecution(request);return executeSearch(request);},public SearchResult searchSearchRequest request request  beforeClientExecutionrequestreturn executeSearchrequest
public PushCommand setRemote(String remote) {checkCallable();this.remote = remote;return this;},public PushCommand setRemoteString remote checkCallablethisremote  remotereturn this
public AcceptReservedInstancesExchangeQuoteResult acceptReservedInstancesExchangeQuote(AcceptReservedInstancesExchangeQuoteRequest request) {request = beforeClientExecution(request);return executeAcceptReservedInstancesExchangeQuote(request);},public AcceptReservedInstancesExchangeQuoteResult acceptReservedInstancesExchangeQuoteAcceptReservedInstancesExchangeQuoteRequest request request  beforeClientExecutionrequestreturn executeAcceptReservedInstancesExchangeQuoterequest
public GetAuthorizationTokenResult getAuthorizationToken(GetAuthorizationTokenRequest request) {request = beforeClientExecution(request);return executeGetAuthorizationToken(request);},public GetAuthorizationTokenResult getAuthorizationTokenGetAuthorizationTokenRequest request request  beforeClientExecutionrequestreturn executeGetAuthorizationTokenrequest
public static InitCommand init() {return new InitCommand();},public static InitCommand init return new InitCommand
"public static RevFilter create(Collection<RevFilter> list) {if (list.size() < 2)throw new IllegalArgumentException(JGitText.get().atLeastTwoFiltersNeeded);final RevFilter[] subfilters = new RevFilter[list.size()];list.toArray(subfilters);if (subfilters.length == 2)return create(subfilters[0], subfilters[1]);return new List(subfilters);}",public static RevFilter createCollectionRevFilter list if listsize  2throw new IllegalArgumentExceptionJGitTextgetatLeastTwoFiltersNeededfinal RevFilter subfilters  new RevFilterlistsizelisttoArraysubfiltersif subfilterslength  2return createsubfilters0 subfilters1return new Listsubfilters
"public static PredictionContext mergeRoot(SingletonPredictionContext a,SingletonPredictionContext b,boolean rootIsWildcard){if ( rootIsWildcard ) {if ( a == EMPTY ) return EMPTY;  if ( b == EMPTY ) return EMPTY;  }else {if ( a == EMPTY && b == EMPTY ) return EMPTY; if ( a == EMPTY ) { int[] payloads = {b.returnState, EMPTY_RETURN_STATE};PredictionContext[] parents = {b.parent, null};PredictionContext joined =new ArrayPredictionContext(parents, payloads);return joined;}if ( b == EMPTY ) { int[] payloads = {a.returnState, EMPTY_RETURN_STATE};PredictionContext[] parents = {a.parent, null};PredictionContext joined =new ArrayPredictionContext(parents, payloads);return joined;}}return null;}",public static PredictionContext mergeRootSingletonPredictionContext aSingletonPredictionContext bboolean rootIsWildcardif  rootIsWildcard  if  a  EMPTY  return EMPTY  if  b  EMPTY  return EMPTY  else if  a  EMPTY  b  EMPTY  return EMPTY if  a  EMPTY   int payloads  breturnState EMPTYRETURNSTATEPredictionContext parents  bparent nullPredictionContext joined new ArrayPredictionContextparents payloadsreturn joinedif  b  EMPTY   int payloads  areturnState EMPTYRETURNSTATEPredictionContext parents  aparent nullPredictionContext joined new ArrayPredictionContextparents payloadsreturn joinedreturn null
public ListTerminologiesResult listTerminologies(ListTerminologiesRequest request) {request = beforeClientExecution(request);return executeListTerminologies(request);},public ListTerminologiesResult listTerminologiesListTerminologiesRequest request request  beforeClientExecutionrequestreturn executeListTerminologiesrequest
public ModifyInstanceGroupsRequest(java.util.List<InstanceGroupModifyConfig> instanceGroups) {setInstanceGroups(instanceGroups);},public ModifyInstanceGroupsRequestjavautilListInstanceGroupModifyConfig instanceGroups setInstanceGroupsinstanceGroups
"public String toString() {return ""AnyObjectId["" + name() + ""]"";}",public String toString return AnyObjectId  name  
public long ramBytesUsed() {long ramBytesUsed = postingsReader.ramBytesUsed();for (TermsReader r : fields.values()) {ramBytesUsed += r.ramBytesUsed();}return ramBytesUsed;},public long ramBytesUsed long ramBytesUsed  postingsReaderramBytesUsedfor TermsReader r  fieldsvalues ramBytesUsed  rramBytesUsedreturn ramBytesUsed
"public static final ObjectId fromRaw(int[] is, int p) {return new ObjectId(is[p], is[p + 1], is[p + 2], is[p + 3], is[p + 4]);}",public static final ObjectId fromRawint is int p return new ObjectIdisp isp  1 isp  2 isp  3 isp  4
public RemoveTagsFromStreamResult removeTagsFromStream(RemoveTagsFromStreamRequest request) {request = beforeClientExecution(request);return executeRemoveTagsFromStream(request);},public RemoveTagsFromStreamResult removeTagsFromStreamRemoveTagsFromStreamRequest request request  beforeClientExecutionrequestreturn executeRemoveTagsFromStreamrequest
public void writeChar(int value) throws IOException {checkWritePrimitiveTypes();primitiveTypes.writeChar(value);},public void writeCharint value throws IOException checkWritePrimitiveTypesprimitiveTypeswriteCharvalue
public void setParams(String params) {super.setParams(params);if (params != null) {commitUserData = params;}},public void setParamsString params supersetParamsparamsif params  null commitUserData  params
public OptionGroup modifyOptionGroup(ModifyOptionGroupRequest request) {request = beforeClientExecution(request);return executeModifyOptionGroup(request);},public OptionGroup modifyOptionGroupModifyOptionGroupRequest request request  beforeClientExecutionrequestreturn executeModifyOptionGrouprequest
public CreateCommentResult createComment(CreateCommentRequest request) {request = beforeClientExecution(request);return executeCreateComment(request);},public CreateCommentResult createCommentCreateCommentRequest request request  beforeClientExecutionrequestreturn executeCreateCommentrequest
public void setParams(String params) {super.setParams(params);userData = params;},public void setParamsString params supersetParamsparamsuserData  params
public SearchAvailablePhoneNumbersResult searchAvailablePhoneNumbers(SearchAvailablePhoneNumbersRequest request) {request = beforeClientExecution(request);return executeSearchAvailablePhoneNumbers(request);},public SearchAvailablePhoneNumbersResult searchAvailablePhoneNumbersSearchAvailablePhoneNumbersRequest request request  beforeClientExecutionrequestreturn executeSearchAvailablePhoneNumbersrequest
public SpanPositionCheckQuery(SpanQuery match) {this.match = Objects.requireNonNull(match);},public SpanPositionCheckQuerySpanQuery match thismatch  ObjectsrequireNonNullmatch
public boolean removeChildRecord(EscherRecord toBeRemoved) {return _childRecords.remove(toBeRemoved);},public boolean removeChildRecordEscherRecord toBeRemoved return childRecordsremovetoBeRemoved
"public BytesRef clone() {return new BytesRef(bytes, offset, length);}",public BytesRef clone return new BytesRefbytes offset length
public ByteBuffer putLong(long value) {throw new ReadOnlyBufferException();},public ByteBuffer putLonglong value throw new ReadOnlyBufferException
"@Override public boolean add(E object) {synchronized (CopyOnWriteArrayList.this) {add(slice.to - slice.from, object);return true;}}",Override public boolean addE object synchronized CopyOnWriteArrayListthis addsliceto  slicefrom objectreturn true
public RevTree lookupTree(AnyObjectId id) {RevTree c = (RevTree) objects.get(id);if (c == null) {c = new RevTree(id);objects.add(c);}return c;},public RevTree lookupTreeAnyObjectId id RevTree c  RevTree objectsgetidif c  null c  new RevTreeidobjectsaddcreturn c
public boolean equals(Object other) {return sameClassAs(other) &&func.equals(((FunctionQuery) other).func);},public boolean equalsObject other return sameClassAsother funcequalsFunctionQuery otherfunc
"public boolean changeExternalReference(String oldUrl, String newUrl) {for (ExternalBookBlock ex : _externalBookBlocks) {SupBookRecord externalRecord = ex.getExternalBookRecord();if (externalRecord.isExternalReferences()&& externalRecord.getURL().equals(oldUrl)) {externalRecord.setURL(newUrl);return true;}}return false;}",public boolean changeExternalReferenceString oldUrl String newUrl for ExternalBookBlock ex  externalBookBlocks SupBookRecord externalRecord  exgetExternalBookRecordif externalRecordisExternalReferences externalRecordgetURLequalsoldUrl externalRecordsetURLnewUrlreturn truereturn false
public void removeLastPrinted() {remove1stProperty(PropertyIDMap.PID_LASTPRINTED);},public void removeLastPrinted remove1stPropertyPropertyIDMapPIDLASTPRINTED
public MergeCommand merge() {return new MergeCommand(repo);},public MergeCommand merge return new MergeCommandrepo
"public String toString() {final Type t = getType();return t + ""("" + beginA + ""-"" + endA + "","" + beginB + ""-"" + endB + "")"";}",public String toString final Type t  getTypereturn t    beginA    endA    beginB    endB  
public void serialize(LittleEndianOutput out) {int nItems = _list.size();out.writeShort(nItems);for (int k = 0; k < nItems; k++) {CellRangeAddress region = _list.get(k);region.serialize(out);}},public void serializeLittleEndianOutput out int nItems  listsizeoutwriteShortnItemsfor int k  0 k  nItems k CellRangeAddress region  listgetkregionserializeout
"public void remove() {throw new UnsupportedOperationException(""Remove not supported"");}",public void remove throw new UnsupportedOperationExceptionRemove not supported
public TagCommand setSigned(boolean signed) {this.signed = signed;return this;},public TagCommand setSignedboolean signed thissigned  signedreturn this
public DescribeReservedInstancesListingsResult describeReservedInstancesListings(DescribeReservedInstancesListingsRequest request) {request = beforeClientExecution(request);return executeDescribeReservedInstancesListings(request);},public DescribeReservedInstancesListingsResult describeReservedInstancesListingsDescribeReservedInstancesListingsRequest request request  beforeClientExecutionrequestreturn executeDescribeReservedInstancesListingsrequest
public String getName() {return getRef().getName();},public String getName return getRefgetName
public boolean isAllSet(final int holder){return (holder & _mask) == _mask;},public boolean isAllSetfinal int holderreturn holder  mask  mask
public static int getEncodedSize(String value) {int result = 2 + 1;result += value.length() * (StringUtil.hasMultibyte(value) ? 2 : 1);return result;},public static int getEncodedSizeString value int result  2  1result  valuelength  StringUtilhasMultibytevalue  2  1return result
"public List<CharsRef> stem(char word[], int length) {if (dictionary.needsInputCleaning) {scratchSegment.setLength(0);scratchSegment.append(word, 0, length);CharSequence cleaned = dictionary.cleanInput(scratchSegment, segment);scratchBuffer = ArrayUtil.grow(scratchBuffer, cleaned.length());length = segment.length();segment.getChars(0, length, scratchBuffer, 0);word = scratchBuffer;}int caseType = caseOf(word, length);if (caseType == UPPER_CASE) {caseFoldTitle(word, length);caseFoldLower(titleBuffer, length);List<CharsRef> list = doStem(word, length, false);list.addAll(doStem(titleBuffer, length, true));list.addAll(doStem(lowerBuffer, length, true));return list;} else if (caseType == TITLE_CASE) {caseFoldLower(word, length);List<CharsRef> list = doStem(word, length, false);list.addAll(doStem(lowerBuffer, length, true));return list;} else {return doStem(word, length, false);}}",public ListCharsRef stemchar word int length if dictionaryneedsInputCleaning scratchSegmentsetLength0scratchSegmentappendword 0 lengthCharSequence cleaned  dictionarycleanInputscratchSegment segmentscratchBuffer  ArrayUtilgrowscratchBuffer cleanedlengthlength  segmentlengthsegmentgetChars0 length scratchBuffer 0word  scratchBufferint caseType  caseOfword lengthif caseType  UPPERCASE caseFoldTitleword lengthcaseFoldLowertitleBuffer lengthListCharsRef list  doStemword length falselistaddAlldoStemtitleBuffer length truelistaddAlldoStemlowerBuffer length truereturn list else if caseType  TITLECASE caseFoldLowerword lengthListCharsRef list  doStemword length falselistaddAlldoStemlowerBuffer length truereturn list else return doStemword length false
"public HSSFConditionalFormattingRule createConditionalFormattingRule(String formula) {CFRuleRecord rr = CFRuleRecord.create(_sheet, formula);return new HSSFConditionalFormattingRule(_sheet, rr);}",public HSSFConditionalFormattingRule createConditionalFormattingRuleString formula CFRuleRecord rr  CFRuleRecordcreatesheet formulareturn new HSSFConditionalFormattingRulesheet rr
"public Record create(RecordInputStream in) {Object[] args = { in, };try {return (org.apache.poi.hssf.record.Record) _m.invoke(null, args);} catch (IllegalArgumentException | IllegalAccessException e) {throw new RuntimeException(e);} catch (InvocationTargetException e) {throw new org.apache.poi.util.RecordFormatException(""Unable to construct record instance"" , e.getTargetException());}}",public Record createRecordInputStream in Object args   in try return orgapachepoihssfrecordRecord minvokenull args catch IllegalArgumentException  IllegalAccessException e throw new RuntimeExceptione catch InvocationTargetException e throw new orgapachepoiutilRecordFormatExceptionUnable to construct record instance  egetTargetException
"public int set(int index, long[] arr, int off, int len) {assert len > 0 : ""len must be > 0 (got "" + len + "")"";assert index >= 0 && index < size();len = Math.min(len, size() - index);assert off + len <= arr.length;for (int i = index, o = off, end = index + len; i < end; ++i, ++o) {set(i, arr[o]);}return len;}",public int setint index long arr int off int len assert len  0  len must be  0 got   len  assert index  0  index  sizelen  Mathminlen size  indexassert off  len  arrlengthfor int i  index o  off end  index  len i  end i o seti arroreturn len
public synchronized long ramBytesUsed() {long bytes = 0;for(CachedOrds ords : ordsCache.values()) {bytes += ords.ramBytesUsed();}return bytes;},public synchronized long ramBytesUsed long bytes  0forCachedOrds ords  ordsCachevalues bytes  ordsramBytesUsedreturn bytes
public void writeDouble(double v) {writeLong(Double.doubleToLongBits(v));},public void writeDoubledouble v writeLongDoubledoubleToLongBitsv
"public String toString() {return ""DocumentsWriterFlushControl [activeBytes="" + activeBytes+ "", flushBytes="" + flushBytes + ""]"";}",public String toString return DocumentsWriterFlushControl activeBytes  activeBytes  flushBytes  flushBytes  
public ListSecurityConfigurationsResult listSecurityConfigurations(ListSecurityConfigurationsRequest request) {request = beforeClientExecution(request);return executeListSecurityConfigurations(request);},public ListSecurityConfigurationsResult listSecurityConfigurationsListSecurityConfigurationsRequest request request  beforeClientExecutionrequestreturn executeListSecurityConfigurationsrequest
public ListQualificationRequestsResult listQualificationRequests(ListQualificationRequestsRequest request) {request = beforeClientExecution(request);return executeListQualificationRequests(request);},public ListQualificationRequestsResult listQualificationRequestsListQualificationRequestsRequest request request  beforeClientExecutionrequestreturn executeListQualificationRequestsrequest
"public void println(char[] chars) {println(new String(chars, 0, chars.length));}",public void printlnchar chars printlnnew Stringchars 0 charslength
public ReleaseAddressResult releaseAddress(ReleaseAddressRequest request) {request = beforeClientExecution(request);return executeReleaseAddress(request);},public ReleaseAddressResult releaseAddressReleaseAddressRequest request request  beforeClientExecutionrequestreturn executeReleaseAddressrequest
"public static boolean[] copyOfRange(boolean[] original, int start, int end) {if (start > end) {throw new IllegalArgumentException();}int originalLength = original.length;if (start < 0 || start > originalLength) {throw new ArrayIndexOutOfBoundsException();}int resultLength = end - start;int copyLength = Math.min(resultLength, originalLength - start);boolean[] result = new boolean[resultLength];System.arraycopy(original, start, result, 0, copyLength);return result;}",public static boolean copyOfRangeboolean original int start int end if start  end throw new IllegalArgumentExceptionint originalLength  originallengthif start  0  start  originalLength throw new ArrayIndexOutOfBoundsExceptionint resultLength  end  startint copyLength  MathminresultLength originalLength  startboolean result  new booleanresultLengthSystemarraycopyoriginal start result 0 copyLengthreturn result
"public void fillOval(int x, int y, int width, int height){HSSFSimpleShape shape = escherGroup.createShape(new HSSFChildAnchor( x, y, x + width, y + height ) );shape.setShapeType(HSSFSimpleShape.OBJECT_TYPE_OVAL);shape.setLineStyle(HSSFShape.LINESTYLE_NONE);shape.setFillColor(foreground.getRed(), foreground.getGreen(), foreground.getBlue());shape.setLineStyleColor(foreground.getRed(), foreground.getGreen(), foreground.getBlue());shape.setNoFill(false);}",public void fillOvalint x int y int width int heightHSSFSimpleShape shape  escherGroupcreateShapenew HSSFChildAnchor x y x  width y  height  shapesetShapeTypeHSSFSimpleShapeOBJECTTYPEOVALshapesetLineStyleHSSFShapeLINESTYLENONEshapesetFillColorforegroundgetRed foregroundgetGreen foregroundgetBlueshapesetLineStyleColorforegroundgetRed foregroundgetGreen foregroundgetBlueshapesetNoFillfalse
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1,ValueEval arg2) {try {String needle = TextFunction.evaluateStringArg(arg0, srcRowIndex, srcColumnIndex);String haystack = TextFunction.evaluateStringArg(arg1, srcRowIndex, srcColumnIndex);int startpos = TextFunction.evaluateIntArg(arg2, srcRowIndex, srcColumnIndex) - 1;if (startpos < 0) {return ErrorEval.VALUE_INVALID;}return eval(haystack, needle, startpos);} catch (EvaluationException e) {return e.getErrorEval();}}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1ValueEval arg2 try String needle  TextFunctionevaluateStringArgarg0 srcRowIndex srcColumnIndexString haystack  TextFunctionevaluateStringArgarg1 srcRowIndex srcColumnIndexint startpos  TextFunctionevaluateIntArgarg2 srcRowIndex srcColumnIndex  1if startpos  0 return ErrorEvalVALUEINVALIDreturn evalhaystack needle startpos catch EvaluationException e return egetErrorEval
"public CreateInvalidationRequest(String distributionId, InvalidationBatch invalidationBatch) {setDistributionId(distributionId);setInvalidationBatch(invalidationBatch);}",public CreateInvalidationRequestString distributionId InvalidationBatch invalidationBatch setDistributionIddistributionIdsetInvalidationBatchinvalidationBatch
public CreateUsageReportSubscriptionResult createUsageReportSubscription(CreateUsageReportSubscriptionRequest request) {request = beforeClientExecution(request);return executeCreateUsageReportSubscription(request);},public CreateUsageReportSubscriptionResult createUsageReportSubscriptionCreateUsageReportSubscriptionRequest request request  beforeClientExecutionrequestreturn executeCreateUsageReportSubscriptionrequest
public static String fromString(String value) {return value;},public static String fromStringString value return value
public GetDetectorsResult getDetectors(GetDetectorsRequest request) {request = beforeClientExecution(request);return executeGetDetectors(request);},public GetDetectorsResult getDetectorsGetDetectorsRequest request request  beforeClientExecutionrequestreturn executeGetDetectorsrequest
public static String fromDouble(Double d) {return Double.toString(d);},public static String fromDoubleDouble d return DoubletoStringd
"public void writeProtectWorkbook( String password, String username ) {FileSharingRecord frec = getFileSharing();WriteAccessRecord waccess = getWriteAccess(); getWriteProtect();frec.setReadOnly((short)1);frec.setPassword((short)CryptoFunctions.createXorVerifier1(password));frec.setUsername(username);waccess.setUsername(username);}",public void writeProtectWorkbook String password String username  FileSharingRecord frec  getFileSharingWriteAccessRecord waccess  getWriteAccess getWriteProtectfrecsetReadOnlyshort1frecsetPasswordshortCryptoFunctionscreateXorVerifier1passwordfrecsetUsernameusernamewaccesssetUsernameusername
"public Process exec(String command, int timeout)throws TransportException {String ssh = SystemReader.getInstance().getenv(""GIT_SSH""); boolean putty = ssh.toLowerCase(Locale.ROOT).contains(""plink""); List<String> args = new ArrayList<>();args.add(ssh);if (putty&& !ssh.toLowerCase(Locale.ROOT).contains(""tortoiseplink"")) args.add(""-batch""); if (0 < getURI().getPort()) {args.add(putty ? ""-P"" : ""-p""); args.add(String.valueOf(getURI().getPort()));}if (getURI().getUser() != null)args.add(getURI().getUser() + ""@"" + getURI().getHost()); elseargs.add(getURI().getHost());args.add(command);ProcessBuilder pb = createProcess(args);try {return pb.start();} catch (IOException err) {throw new TransportException(err.getMessage(), err);}}",public Process execString command int timeoutthrows TransportException String ssh  SystemReadergetInstancegetenvGITSSH boolean putty  sshtoLowerCaseLocaleROOTcontainsplink ListString args  new ArrayListargsaddsshif putty sshtoLowerCaseLocaleROOTcontainstortoiseplink argsaddbatch if 0  getURIgetPort argsaddputty  P  p argsaddStringvalueOfgetURIgetPortif getURIgetUser  nullargsaddgetURIgetUser    getURIgetHost elseargsaddgetURIgetHostargsaddcommandProcessBuilder pb  createProcessargstry return pbstart catch IOException err throw new TransportExceptionerrgetMessage err
public void serialize(LittleEndianOutput out) {out.write(recordData);},public void serializeLittleEndianOutput out outwriterecordData
public UpdateFleetCapacityResult updateFleetCapacity(UpdateFleetCapacityRequest request) {request = beforeClientExecution(request);return executeUpdateFleetCapacity(request);},public UpdateFleetCapacityResult updateFleetCapacityUpdateFleetCapacityRequest request request  beforeClientExecutionrequestreturn executeUpdateFleetCapacityrequest
public CreateDirectConnectGatewayAssociationResult createDirectConnectGatewayAssociation(CreateDirectConnectGatewayAssociationRequest request) {request = beforeClientExecution(request);return executeCreateDirectConnectGatewayAssociation(request);},public CreateDirectConnectGatewayAssociationResult createDirectConnectGatewayAssociationCreateDirectConnectGatewayAssociationRequest request request  beforeClientExecutionrequestreturn executeCreateDirectConnectGatewayAssociationrequest
"public TokenStream create(TokenStream input) {if (words == null) {return input;} else {final TokenStream filter = new KeepWordFilter(input, words);return filter;}}",public TokenStream createTokenStream input if words  null return input else final TokenStream filter  new KeepWordFilterinput wordsreturn filter
public final int getEndA() {return endA;},public final int getEndA return endA
public String getStrictHostKeyChecking() {return strictHostKeyChecking;},public String getStrictHostKeyChecking return strictHostKeyChecking
public Lift(boolean changeSkip) {this.changeSkip = changeSkip;},public Liftboolean changeSkip thischangeSkip  changeSkip
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_precision);},public void serializeLittleEndianOutput out outwriteShortfield1precision
public GetAuthorizerResult getAuthorizer(GetAuthorizerRequest request) {request = beforeClientExecution(request);return executeGetAuthorizer(request);},public GetAuthorizerResult getAuthorizerGetAuthorizerRequest request request  beforeClientExecutionrequestreturn executeGetAuthorizerrequest
"public StringCharacterIterator(String value, int start, int end, int location) {string = value;if (start < 0 || end > string.length() || start > end|| location < start || location > end) {throw new IllegalArgumentException();}this.start = start;this.end = end;offset = location;}",public StringCharacterIteratorString value int start int end int location string  valueif start  0  end  stringlength  start  end location  start  location  end throw new IllegalArgumentExceptionthisstart  startthisend  endoffset  location
"public String toString() {StringBuilder buf = new StringBuilder();buf.append(""ObjectToPack["");buf.append(Constants.typeString(getType()));buf.append("" "");buf.append(name());if (wantWrite())buf.append("" wantWrite"");if (isReuseAsIs())buf.append("" reuseAsIs"");if (isDoNotDelta())buf.append("" doNotDelta"");if (isEdge())buf.append("" edge"");if (getDeltaDepth() > 0)buf.append("" depth="").append(getDeltaDepth());if (isDeltaRepresentation()) {if (getDeltaBase() != null)buf.append("" base=inpack:"").append(getDeltaBase().name());elsebuf.append("" base=edge:"").append(getDeltaBaseId().name());}if (isWritten())buf.append("" offset="").append(getOffset());buf.append(""]"");return buf.toString();}",public String toString StringBuilder buf  new StringBuilderbufappendObjectToPackbufappendConstantstypeStringgetTypebufappend bufappendnameif wantWritebufappend wantWriteif isReuseAsIsbufappend reuseAsIsif isDoNotDeltabufappend doNotDeltaif isEdgebufappend edgeif getDeltaDepth  0bufappend depthappendgetDeltaDepthif isDeltaRepresentation if getDeltaBase  nullbufappend baseinpackappendgetDeltaBasenameelsebufappend baseedgeappendgetDeltaBaseIdnameif isWrittenbufappend offsetappendgetOffsetbufappendreturn buftoString
"public String toString() {return ""1"";}",public String toString return 1
"public final void readFully(byte[] dst, int offset, int byteCount) throws IOException {Streams.readFully(in, dst, offset, byteCount);}",public final void readFullybyte dst int offset int byteCount throws IOException StreamsreadFullyin dst offset byteCount
public GetMailboxDetailsResult getMailboxDetails(GetMailboxDetailsRequest request) {request = beforeClientExecution(request);return executeGetMailboxDetails(request);},public GetMailboxDetailsResult getMailboxDetailsGetMailboxDetailsRequest request request  beforeClientExecutionrequestreturn executeGetMailboxDetailsrequest
"public CharBuffer append(CharSequence csq) {if (csq != null) {return put(csq.toString());}return put(""null"");}",public CharBuffer appendCharSequence csq if csq  null return putcsqtoStringreturn putnull
"public RegisterFaceRequest() {super(""LinkFace"", ""2018-07-20"", ""RegisterFace"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public RegisterFaceRequest superLinkFace 20180720 RegisterFacesetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public static void checkValue(double result) throws EvaluationException {if (Double.isNaN(result) || Double.isInfinite(result)) {throw new EvaluationException(ErrorEval.NUM_ERROR);}},public static void checkValuedouble result throws EvaluationException if DoubleisNaNresult  DoubleisInfiniteresult throw new EvaluationExceptionErrorEvalNUMERROR
public PutInvitationConfigurationResult putInvitationConfiguration(PutInvitationConfigurationRequest request) {request = beforeClientExecution(request);return executePutInvitationConfiguration(request);},public PutInvitationConfigurationResult putInvitationConfigurationPutInvitationConfigurationRequest request request  beforeClientExecutionrequestreturn executePutInvitationConfigurationrequest
"public QueryNode process(QueryNode queryTree) throws QueryNodeException {Operator op = getQueryConfigHandler().get(ConfigurationKeys.DEFAULT_OPERATOR);if (op == null) {throw new IllegalArgumentException(""StandardQueryConfigHandler.ConfigurationKeys.DEFAULT_OPERATOR should be set on the QueryConfigHandler"");}this.usingAnd = StandardQueryConfigHandler.Operator.AND == op;return super.process(queryTree);}",public QueryNode processQueryNode queryTree throws QueryNodeException Operator op  getQueryConfigHandlergetConfigurationKeysDEFAULTOPERATORif op  null throw new IllegalArgumentExceptionStandardQueryConfigHandlerConfigurationKeysDEFAULTOPERATOR should be set on the QueryConfigHandlerthisusingAnd  StandardQueryConfigHandlerOperatorAND  opreturn superprocessqueryTree
"public void add(BytesRef utf8, int bucket) throws IOException {if (bucket < 0 || bucket >= buckets) {throw new IllegalArgumentException(""Bucket outside of the allowed range [0, "" + buckets + ""): "" + bucket);}scratch.grow(utf8.length + 10);scratch.clear();scratch.append((byte) bucket);scratch.append(utf8);sorter.add(scratch.get());}",public void addBytesRef utf8 int bucket throws IOException if bucket  0  bucket  buckets throw new IllegalArgumentExceptionBucket outside of the allowed range 0   buckets     bucketscratchgrowutf8length  10scratchclearscratchappendbyte bucketscratchappendutf8sorteraddscratchget
public DescribeWorkspaceBundlesResult describeWorkspaceBundles() {return describeWorkspaceBundles(new DescribeWorkspaceBundlesRequest());},public DescribeWorkspaceBundlesResult describeWorkspaceBundles return describeWorkspaceBundlesnew DescribeWorkspaceBundlesRequest
"public static String decode(String s) {return decode(s, false, Charsets.UTF_8);}",public static String decodeString s return decodes false CharsetsUTF8
public void setExpire(Date expire) {this.expire = expire;expireAgeMillis = -1;},public void setExpireDate expire thisexpire  expireexpireAgeMillis  1
"public int DecRef() {assert count > 0: Thread.currentThread().getName() + "": RefCount is 0 pre-decrement for file \"""" + fileName + ""\"""";return --count;}",public int DecRef assert count  0 ThreadcurrentThreadgetName   RefCount is 0 predecrement for file   fileName  return count
public List<WeightedFragInfo> getWeightedFragInfoList( List<WeightedFragInfo> src ) {return src;},public ListWeightedFragInfo getWeightedFragInfoList ListWeightedFragInfo src  return src
public CreateInstancesFromSnapshotResult createInstancesFromSnapshot(CreateInstancesFromSnapshotRequest request) {request = beforeClientExecution(request);return executeCreateInstancesFromSnapshot(request);},public CreateInstancesFromSnapshotResult createInstancesFromSnapshotCreateInstancesFromSnapshotRequest request request  beforeClientExecutionrequestreturn executeCreateInstancesFromSnapshotrequest
public Comparator<? super E> comparator() {return backingMap.comparator();},public Comparator super E comparator return backingMapcomparator
public boolean isValueSecure() {return valueSecure;},public boolean isValueSecure return valueSecure
"public static short[] grow(short[] array, int minSize) {assert minSize >= 0: ""size must be positive (got "" + minSize + ""): likely integer overflow?"";if (array.length < minSize) {return growExact(array, oversize(minSize, Short.BYTES));} else return array;}",public static short growshort array int minSize assert minSize  0 size must be positive got   minSize   likely integer overflowif arraylength  minSize return growExactarray oversizeminSize ShortBYTES else return array
"public ObjectId idFor(int type, byte[] data) {return idFor(type, data, 0, data.length);}",public ObjectId idForint type byte data return idFortype data 0 datalength
public CreateDomainNameResult createDomainName(CreateDomainNameRequest request) {request = beforeClientExecution(request);return executeCreateDomainName(request);},public CreateDomainNameResult createDomainNameCreateDomainNameRequest request request  beforeClientExecutionrequestreturn executeCreateDomainNamerequest
public DeleteAddressBookResult deleteAddressBook(DeleteAddressBookRequest request) {request = beforeClientExecution(request);return executeDeleteAddressBook(request);},public DeleteAddressBookResult deleteAddressBookDeleteAddressBookRequest request request  beforeClientExecutionrequestreturn executeDeleteAddressBookrequest
public void addToolPack(UDFFinder toopack){AggregatingUDFFinder udfs = (AggregatingUDFFinder)_udfFinder;udfs.add(toopack);},public void addToolPackUDFFinder toopackAggregatingUDFFinder udfs  AggregatingUDFFinderudfFinderudfsaddtoopack
public SearchUsersResult searchUsers(SearchUsersRequest request) {request = beforeClientExecution(request);return executeSearchUsers(request);},public SearchUsersResult searchUsersSearchUsersRequest request request  beforeClientExecutionrequestreturn executeSearchUsersrequest
public String getAccessKeySecret() {return privateKeySecret;},public String getAccessKeySecret return privateKeySecret
"public void setValueAt(int index, E value) {if (mGarbage) {gc();}mValues[index] = value;}",public void setValueAtint index E value if mGarbage gcmValuesindex  value
public RefErrorPtg() {field_1_reserved = 0;},public RefErrorPtg field1reserved  0
public boolean getFlagByBit(int bitmask) {return ((flags & bitmask) != 0);},public boolean getFlagByBitint bitmask return flags  bitmask  0
public UpdateAccountSendingEnabledResult updateAccountSendingEnabled(UpdateAccountSendingEnabledRequest request) {request = beforeClientExecution(request);return executeUpdateAccountSendingEnabled(request);},public UpdateAccountSendingEnabledResult updateAccountSendingEnabledUpdateAccountSendingEnabledRequest request request  beforeClientExecutionrequestreturn executeUpdateAccountSendingEnabledrequest
"public AppCookieStickinessPolicy(String policyName, String cookieName) {setPolicyName(policyName);setCookieName(cookieName);}",public AppCookieStickinessPolicyString policyName String cookieName setPolicyNamepolicyNamesetCookieNamecookieName
public GetAccountBalanceResult getAccountBalance(GetAccountBalanceRequest request) {request = beforeClientExecution(request);return executeGetAccountBalance(request);},public GetAccountBalanceResult getAccountBalanceGetAccountBalanceRequest request request  beforeClientExecutionrequestreturn executeGetAccountBalancerequest
public DescribeConversionTasksResult describeConversionTasks(DescribeConversionTasksRequest request) {request = beforeClientExecution(request);return executeDescribeConversionTasks(request);},public DescribeConversionTasksResult describeConversionTasksDescribeConversionTasksRequest request request  beforeClientExecutionrequestreturn executeDescribeConversionTasksrequest
public DescribeImagesResult describeImages() {return describeImages(new DescribeImagesRequest());},public DescribeImagesResult describeImages return describeImagesnew DescribeImagesRequest
public void close() {_closed = true;},public void close closed  true
public ListSignalingChannelsResult listSignalingChannels(ListSignalingChannelsRequest request) {request = beforeClientExecution(request);return executeListSignalingChannels(request);},public ListSignalingChannelsResult listSignalingChannelsListSignalingChannelsRequest request request  beforeClientExecutionrequestreturn executeListSignalingChannelsrequest
"public MergeFacesRequest() {super(""CloudPhoto"", ""2017-07-11"", ""MergeFaces"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public MergeFacesRequest superCloudPhoto 20170711 MergeFaces cloudphotosetProtocolProtocolTypeHTTPS
public DetectTextResult detectText(DetectTextRequest request) {request = beforeClientExecution(request);return executeDetectText(request);},public DetectTextResult detectTextDetectTextRequest request request  beforeClientExecutionrequestreturn executeDetectTextrequest
"public DoubleBuffer get(double[] dst) {return get(dst, 0, dst.length);}",public DoubleBuffer getdouble dst return getdst 0 dstlength
public long getCreationTime() {return decodeTS(P_CTIME);},public long getCreationTime return decodeTSPCTIME
"public TreeFilter clone() {return new Binary(a.clone(), b.clone());}",public TreeFilter clone return new Binaryaclone bclone
"public ByteBuffer putChar(char value) {int newPosition = position + SizeOf.CHAR;if (newPosition > limit) {throw new BufferOverflowException();}Memory.pokeShort(backingArray, offset + position, (short) value, order);position = newPosition;return this;}",public ByteBuffer putCharchar value int newPosition  position  SizeOfCHARif newPosition  limit throw new BufferOverflowExceptionMemorypokeShortbackingArray offset  position short value orderposition  newPositionreturn this
"public String toString() {return String.format(""Rect [(%d,%d)-(%d,%d): %dx%d]"", x, y, x + w, y + h, w, h);}",public String toString return StringformatRect dddd dxd x y x  w y  h w h
"public static LongBuffer wrap(long[] array) {return wrap(array, 0, array.length);}",public static LongBuffer wraplong array return wraparray 0 arraylength
"public CharsRef clone() {return new CharsRef(chars, offset, length);}",public CharsRef clone return new CharsRefchars offset length
"public SpanNearClauseFactory(IndexReader Reader, String fieldName, BasicQueryFactory qf) {this.Reader = Reader;this.fieldName = fieldName;this.weightBySpanQuery = new HashMap<>();this.qf = qf;}",public SpanNearClauseFactoryIndexReader Reader String fieldName BasicQueryFactory qf thisReader  ReaderthisfieldName  fieldNamethisweightBySpanQuery  new HashMapthisqf  qf
public BeginRecord clone() {return copy();},public BeginRecord clone return copy
public int start() {return start(0);},public int start return start0
public DescribeGameSessionQueuesResult describeGameSessionQueues(DescribeGameSessionQueuesRequest request) {request = beforeClientExecution(request);return executeDescribeGameSessionQueues(request);},public DescribeGameSessionQueuesResult describeGameSessionQueuesDescribeGameSessionQueuesRequest request request  beforeClientExecutionrequestreturn executeDescribeGameSessionQueuesrequest
public SubmitAttachmentStateChangesResult submitAttachmentStateChanges(SubmitAttachmentStateChangesRequest request) {request = beforeClientExecution(request);return executeSubmitAttachmentStateChanges(request);},public SubmitAttachmentStateChangesResult submitAttachmentStateChangesSubmitAttachmentStateChangesRequest request request  beforeClientExecutionrequestreturn executeSubmitAttachmentStateChangesrequest
public UnicodeString getString(int id ){return field_3_strings.get( id );},public UnicodeString getStringint id return field3stringsget id 
public BigInteger getSignificand() {return _significand;},public BigInteger getSignificand return significand
public void join( AbstractEscherHolderRecord record ){rawDataContainer.concatenate(record.getRawData());},public void join AbstractEscherHolderRecord record rawDataContainerconcatenaterecordgetRawData
"public static byte[] grow(byte[] array, int minSize) {assert minSize >= 0: ""size must be positive (got "" + minSize + ""): likely integer overflow?"";if (array.length < minSize) {return growExact(array, oversize(minSize, Byte.BYTES));} else return array;}",public static byte growbyte array int minSize assert minSize  0 size must be positive got   minSize   likely integer overflowif arraylength  minSize return growExactarray oversizeminSize ByteBYTES else return array
public boolean equals(Object obj) {if (this == obj)return true;if (obj == null)return false;if (getClass() != obj.getClass())return false;FlushInfo other = (FlushInfo) obj;if (estimatedSegmentSize != other.estimatedSegmentSize)return false;if (numDocs != other.numDocs)return false;return true;},public boolean equalsObject obj if this  objreturn trueif obj  nullreturn falseif getClass  objgetClassreturn falseFlushInfo other  FlushInfo objif estimatedSegmentSize  otherestimatedSegmentSizereturn falseif numDocs  othernumDocsreturn falsereturn true
"public void copyRawTo(int[] b, int o) {b[o] = w1;b[o + 1] = w2;b[o + 2] = w3;b[o + 3] = w4;b[o + 4] = w5;}",public void copyRawToint b int o bo  w1bo  1  w2bo  2  w3bo  3  w4bo  4  w5
public ReadPipelineResult readPipeline(ReadPipelineRequest request) {request = beforeClientExecution(request);return executeReadPipeline(request);},public ReadPipelineResult readPipelineReadPipelineRequest request request  beforeClientExecutionrequestreturn executeReadPipelinerequest
"public BoostQueryNode(QueryNode query, float value) {if (query == null) {throw new QueryNodeError(new MessageImpl(QueryParserMessages.NODE_ACTION_NOT_SUPPORTED, ""query"", ""null""));}this.value = value;setLeaf(false);allocate();add(query);}",public BoostQueryNodeQueryNode query float value if query  null throw new QueryNodeErrornew MessageImplQueryParserMessagesNODEACTIONNOTSUPPORTED query nullthisvalue  valuesetLeaffalseallocateaddquery
public void setFallbackAlgorithm(DiffAlgorithm alg) {fallback = alg;},public void setFallbackAlgorithmDiffAlgorithm alg fallback  alg
public void add(Transition t) {find(t.min).starts.add(t);find(1+t.max).ends.add(t);},public void addTransition t findtminstartsaddtfind1tmaxendsaddt
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("" [FEATURE FORMULA ERRORS]\n"");buffer.append(""  checkCalculationErrors    = "");buffer.append(""  checkEmptyCellRef         = "");buffer.append(""  checkNumbersAsText        = "");buffer.append(""  checkInconsistentRanges   = "");buffer.append(""  checkInconsistentFormulas = "");buffer.append(""  checkDateTimeFormats      = "");buffer.append(""  checkUnprotectedFormulas  = "");buffer.append(""  performDataValidation     = "");buffer.append("" [/FEATURE FORMULA ERRORS]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappend FEATURE FORMULA ERRORSnbufferappend  checkCalculationErrors     bufferappend  checkEmptyCellRef          bufferappend  checkNumbersAsText         bufferappend  checkInconsistentRanges    bufferappend  checkInconsistentFormulas  bufferappend  checkDateTimeFormats       bufferappend  checkUnprotectedFormulas   bufferappend  performDataValidation      bufferappend FEATURE FORMULA ERRORSnreturn buffertoString
public void execute(Lexer lexer) {lexer.setType(type);},public void executeLexer lexer lexersetTypetype
public UpgradePublishedSchemaResult upgradePublishedSchema(UpgradePublishedSchemaRequest request) {request = beforeClientExecution(request);return executeUpgradePublishedSchema(request);},public UpgradePublishedSchemaResult upgradePublishedSchemaUpgradePublishedSchemaRequest request request  beforeClientExecutionrequestreturn executeUpgradePublishedSchemarequest
"public int readRecordSID() {readPlain(buffer, 0, LittleEndianConsts.SHORT_SIZE);int sid = LittleEndian.getUShort(buffer, 0);shouldSkipEncryptionOnCurrentRecord = isNeverEncryptedRecord(sid);return sid;}",public int readRecordSID readPlainbuffer 0 LittleEndianConstsSHORTSIZEint sid  LittleEndiangetUShortbuffer 0shouldSkipEncryptionOnCurrentRecord  isNeverEncryptedRecordsidreturn sid
public CreateImageBuilderStreamingURLResult createImageBuilderStreamingURL(CreateImageBuilderStreamingURLRequest request) {request = beforeClientExecution(request);return executeCreateImageBuilderStreamingURL(request);},public CreateImageBuilderStreamingURLResult createImageBuilderStreamingURLCreateImageBuilderStreamingURLRequest request request  beforeClientExecutionrequestreturn executeCreateImageBuilderStreamingURLrequest
"public SheetIdentifier(String bookName, NameIdentifier sheetIdentifier) {_bookName = bookName;_sheetIdentifier = sheetIdentifier;}",public SheetIdentifierString bookName NameIdentifier sheetIdentifier bookName  bookNamesheetIdentifier  sheetIdentifier
public boolean equals( Object o ) {return o instanceof PortugueseStemmer;},public boolean equals Object o  return o instanceof PortugueseStemmer
public PasswordRecord clone() {return copy();},public PasswordRecord clone return copy
public DescribeTableRequest(String tableName) {setTableName(tableName);},public DescribeTableRequestString tableName setTableNametableName
public ModifyCacheParameterGroupResult modifyCacheParameterGroup(ModifyCacheParameterGroupRequest request) {request = beforeClientExecution(request);return executeModifyCacheParameterGroup(request);},public ModifyCacheParameterGroupResult modifyCacheParameterGroupModifyCacheParameterGroupRequest request request  beforeClientExecutionrequestreturn executeModifyCacheParameterGrouprequest
"public E set(int location, E object) {ListIterator<E> it = listIterator(location);if (!it.hasNext()) {throw new IndexOutOfBoundsException();}E result = it.next();it.set(object);return result;}",public E setint location E object ListIteratorE it  listIteratorlocationif ithasNext throw new IndexOutOfBoundsExceptionE result  itnextitsetobjectreturn result
public String toFormulaString() {return NumberToTextConverter.toText(field_1_value);},public String toFormulaString return NumberToTextConvertertoTextfield1value
public ListBootstrapActionsResult listBootstrapActions(ListBootstrapActionsRequest request) {request = beforeClientExecution(request);return executeListBootstrapActions(request);},public ListBootstrapActionsResult listBootstrapActionsListBootstrapActionsRequest request request  beforeClientExecutionrequestreturn executeListBootstrapActionsrequest
"public void serialize(LittleEndianOutput out) {out.writeShort(_wStyle);out.writeShort(_cLine);out.writeShort(_dxMin);StringUtil.writeUnicodeString(out, _str);if(_unused != null) {out.writeByte(_unused);}}",public void serializeLittleEndianOutput out outwriteShortwStyleoutwriteShortcLineoutwriteShortdxMinStringUtilwriteUnicodeStringout strifunused  null outwriteByteunused
"public SynonymFilter(TokenStream input, SynonymMap synonyms, boolean ignoreCase) {super(input);this.synonyms = synonyms;this.ignoreCase = ignoreCase;this.fst = synonyms.fst;if (fst == null) {throw new IllegalArgumentException(""fst must be non-null"");}this.fstReader = fst.getBytesReader();rollBufferSize = 1+synonyms.maxHorizontalContext;futureInputs = new PendingInput[rollBufferSize];futureOutputs = new PendingOutputs[rollBufferSize];for(int pos=0;pos<rollBufferSize;pos++) {futureInputs[pos] = new PendingInput();futureOutputs[pos] = new PendingOutputs();}scratchArc = new FST.Arc<>();}",public SynonymFilterTokenStream input SynonymMap synonyms boolean ignoreCase superinputthissynonyms  synonymsthisignoreCase  ignoreCasethisfst  synonymsfstif fst  null throw new IllegalArgumentExceptionfst must be nonnullthisfstReader  fstgetBytesReaderrollBufferSize  1synonymsmaxHorizontalContextfutureInputs  new PendingInputrollBufferSizefutureOutputs  new PendingOutputsrollBufferSizeforint pos0posrollBufferSizepos futureInputspos  new PendingInputfutureOutputspos  new PendingOutputsscratchArc  new FSTArc
public CreateApiResult createApi(CreateApiRequest request) {request = beforeClientExecution(request);return executeCreateApi(request);},public CreateApiResult createApiCreateApiRequest request request  beforeClientExecutionrequestreturn executeCreateApirequest
"public IndexOutput createOutput(String name, IOContext context) throws IOException {ensureOpen();if (context.context != Context.MERGE || context.mergeInfo.estimatedMergeBytes < minBytesDirect) {return delegate.createOutput(name, context);} else {return new NativeUnixIndexOutput(getDirectory().resolve(name), name, mergeBufferSize);}}",public IndexOutput createOutputString name IOContext context throws IOException ensureOpenif contextcontext  ContextMERGE  contextmergeInfoestimatedMergeBytes  minBytesDirect return delegatecreateOutputname context else return new NativeUnixIndexOutputgetDirectoryresolvename name mergeBufferSize
"public void drawArc(int x, int y, int width, int height,int startAngle, int arcAngle){if (logger.check( POILogger.WARN ))logger.log(POILogger.WARN,""drawArc not supported"");}",public void drawArcint x int y int width int heightint startAngle int arcAngleif loggercheck POILoggerWARN loggerlogPOILoggerWARNdrawArc not supported
public UpdateUserSettingsResult updateUserSettings(UpdateUserSettingsRequest request) {request = beforeClientExecution(request);return executeUpdateUserSettings(request);},public UpdateUserSettingsResult updateUserSettingsUpdateUserSettingsRequest request request  beforeClientExecutionrequestreturn executeUpdateUserSettingsrequest
public DeleteDiskSnapshotResult deleteDiskSnapshot(DeleteDiskSnapshotRequest request) {request = beforeClientExecution(request);return executeDeleteDiskSnapshot(request);},public DeleteDiskSnapshotResult deleteDiskSnapshotDeleteDiskSnapshotRequest request request  beforeClientExecutionrequestreturn executeDeleteDiskSnapshotrequest
public ColumnInfoRecord() {setColumnWidth(2275);_options = 2;_xfIndex = 0x0f;field_6_reserved = 2; },public ColumnInfoRecord setColumnWidth2275options  2xfIndex  0x0ffield6reserved  2 
"public final long getLong(int index) {checkIndex(index, SizeOf.LONG);return Memory.peekLong(backingArray, offset + index, order);}",public final long getLongint index checkIndexindex SizeOfLONGreturn MemorypeekLongbackingArray offset  index order
public DeleteKnownHostKeysResult deleteKnownHostKeys(DeleteKnownHostKeysRequest request) {request = beforeClientExecution(request);return executeDeleteKnownHostKeys(request);},public DeleteKnownHostKeysResult deleteKnownHostKeysDeleteKnownHostKeysRequest request request  beforeClientExecutionrequestreturn executeDeleteKnownHostKeysrequest
public DeleteSigningCertificateRequest(String certificateId) {setCertificateId(certificateId);},public DeleteSigningCertificateRequestString certificateId setCertificateIdcertificateId
public StopProcessingJobResult stopProcessingJob(StopProcessingJobRequest request) {request = beforeClientExecution(request);return executeStopProcessingJob(request);},public StopProcessingJobResult stopProcessingJobStopProcessingJobRequest request request  beforeClientExecutionrequestreturn executeStopProcessingJobrequest
"public TermsEnum getTermsEnum(Terms terms) throws IOException {switch(type) {case NONE:return TermsEnum.EMPTY;case ALL:return terms.iterator();case SINGLE:return new SingleTermsEnum(terms.iterator(), term);case NORMAL:return terms.intersect(this, null);default:throw new RuntimeException(""unhandled case"");}}",public TermsEnum getTermsEnumTerms terms throws IOException switchtype case NONEreturn TermsEnumEMPTYcase ALLreturn termsiteratorcase SINGLEreturn new SingleTermsEnumtermsiterator termcase NORMALreturn termsintersectthis nulldefaultthrow new RuntimeExceptionunhandled case
"public void grow() {costs = ArrayUtil.grow(costs, 1+count);lastRightID = ArrayUtil.grow(lastRightID, 1+count);backPos = ArrayUtil.grow(backPos, 1+count);backWordPos = ArrayUtil.grow(backWordPos, 1+count);backIndex = ArrayUtil.grow(backIndex, 1+count);backID = ArrayUtil.grow(backID, 1+count);final Type[] newBackType = new Type[backID.length];System.arraycopy(backType, 0, newBackType, 0, backType.length);backType = newBackType;}",public void grow costs  ArrayUtilgrowcosts 1countlastRightID  ArrayUtilgrowlastRightID 1countbackPos  ArrayUtilgrowbackPos 1countbackWordPos  ArrayUtilgrowbackWordPos 1countbackIndex  ArrayUtilgrowbackIndex 1countbackID  ArrayUtilgrowbackID 1countfinal Type newBackType  new TypebackIDlengthSystemarraycopybackType 0 newBackType 0 backTypelengthbackType  newBackType
"public int get(final int index){if (index >= _limit){throw new IndexOutOfBoundsException(index + "" not accessible in a list of length "" + _limit);}return _array[ index ];}",public int getfinal int indexif index  limitthrow new IndexOutOfBoundsExceptionindex   not accessible in a list of length   limitreturn array index 
"public LongBuffer slice() {return new ReadWriteLongArrayBuffer(remaining(), backingArray, offset + position);}",public LongBuffer slice return new ReadWriteLongArrayBufferremaining backingArray offset  position
public ListProblemsResult listProblems(ListProblemsRequest request) {request = beforeClientExecution(request);return executeListProblems(request);},public ListProblemsResult listProblemsListProblemsRequest request request  beforeClientExecutionrequestreturn executeListProblemsrequest
"public static double pmt(double r, double n, double p, double f, boolean t) {double retval = 0;if (r == 0) {retval = -1*(f+p)/n;}else {double r1 = r + 1;retval = ( f + p * Math.pow(r1, n) ) * r/((t ? r1 : 1) * (1 - Math.pow(r1, n)));}return retval;}",public static double pmtdouble r double n double p double f boolean t double retval  0if r  0 retval  1fpnelse double r1  r  1retval   f  p  Mathpowr1 n   rt  r1  1  1  Mathpowr1 nreturn retval
public PrintGridlinesRecord clone() {return copy();},public PrintGridlinesRecord clone return copy
"public HSSFCellStyle getColumnStyle(int column) {short styleIndex = _sheet.getXFIndexForColAt((short) column);if (styleIndex == 0xf) {return null;}ExtendedFormatRecord xf = _book.getExFormatAt(styleIndex);return new HSSFCellStyle(styleIndex, xf, _book);}",public HSSFCellStyle getColumnStyleint column short styleIndex  sheetgetXFIndexForColAtshort columnif styleIndex  0xf return nullExtendedFormatRecord xf  bookgetExFormatAtstyleIndexreturn new HSSFCellStylestyleIndex xf book
"public Query makeLuceneQueryField(String fieldName, BasicQueryFactory qf){Query q = makeLuceneQueryFieldNoBoost(fieldName, qf);if (isWeighted()) {q = new BoostQuery(q, getWeight()); }return q;}",public Query makeLuceneQueryFieldString fieldName BasicQueryFactory qfQuery q  makeLuceneQueryFieldNoBoostfieldName qfif isWeighted q  new BoostQueryq getWeight return q
"public double getPrecisionAt(int n) {if (n<1 || n>MAX_POINTS) {throw new IllegalArgumentException(""n=""+n+"" - but it must be in [1,""+MAX_POINTS+""] range!"");}if (n>numPoints) {return (numPoints * pAt[(int)numPoints])/n;}return pAt[n];}",public double getPrecisionAtint n if n1  nMAXPOINTS throw new IllegalArgumentExceptionnn  but it must be in 1MAXPOINTS rangeif nnumPoints return numPoints  pAtintnumPointsnreturn pAtn
public DescribeEngineDefaultParametersRequest(String dBParameterGroupFamily) {setDBParameterGroupFamily(dBParameterGroupFamily);},public DescribeEngineDefaultParametersRequestString dBParameterGroupFamily setDBParameterGroupFamilydBParameterGroupFamily
public DeleteClientCertificateResult deleteClientCertificate(DeleteClientCertificateRequest request) {request = beforeClientExecution(request);return executeDeleteClientCertificate(request);},public DeleteClientCertificateResult deleteClientCertificateDeleteClientCertificateRequest request request  beforeClientExecutionrequestreturn executeDeleteClientCertificaterequest
"public int compareTo(CharBuffer otherBuffer) {int compareRemaining = (remaining() < otherBuffer.remaining()) ? remaining(): otherBuffer.remaining();int thisPos = position;int otherPos = otherBuffer.position;char thisByte, otherByte;while (compareRemaining > 0) {thisByte = get(thisPos);otherByte = otherBuffer.get(otherPos);if (thisByte != otherByte) {return thisByte < otherByte ? -1 : 1;}thisPos++;otherPos++;compareRemaining--;}return remaining() - otherBuffer.remaining();}",public int compareToCharBuffer otherBuffer int compareRemaining  remaining  otherBufferremaining  remaining otherBufferremainingint thisPos  positionint otherPos  otherBufferpositionchar thisByte otherBytewhile compareRemaining  0 thisByte  getthisPosotherByte  otherBuffergetotherPosif thisByte  otherByte return thisByte  otherByte  1  1thisPosotherPoscompareRemainingreturn remaining  otherBufferremaining
public byte readByte(){return _in.readByte();},public byte readBytereturn inreadByte
public SendBounceResult sendBounce(SendBounceRequest request) {request = beforeClientExecution(request);return executeSendBounce(request);},public SendBounceResult sendBounceSendBounceRequest request request  beforeClientExecutionrequestreturn executeSendBouncerequest
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0,ValueEval arg1) {double dn;try {ValueEval ve1 = OperandResolver.getSingleValue(arg1, srcRowIndex, srcColumnIndex);dn = OperandResolver.coerceValueToDouble(ve1);} catch (EvaluationException e1) {return ErrorEval.VALUE_INVALID;}if (dn < 0 || dn > 1) { return ErrorEval.NUM_ERROR;}double result;try {double[] ds = ValueCollector.collectValues(arg0);int N = ds.length;if (N == 0 || N > 8191) {return ErrorEval.NUM_ERROR;}double n = (N - 1) * dn + 1;if (n == 1d) {result = StatsLib.kthSmallest(ds, 1);} else if (Double.compare(n, N) == 0) {result = StatsLib.kthLargest(ds, 1);} else {int k = (int) n;double d = n - k;result = StatsLib.kthSmallest(ds, k) + d* (StatsLib.kthSmallest(ds, k + 1) - StatsLib.kthSmallest(ds, k));}NumericFunction.checkValue(result);} catch (EvaluationException e) {return e.getErrorEval();}return new NumberEval(result);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0ValueEval arg1 double dntry ValueEval ve1  OperandResolvergetSingleValuearg1 srcRowIndex srcColumnIndexdn  OperandResolvercoerceValueToDoubleve1 catch EvaluationException e1 return ErrorEvalVALUEINVALIDif dn  0  dn  1  return ErrorEvalNUMERRORdouble resulttry double ds  ValueCollectorcollectValuesarg0int N  dslengthif N  0  N  8191 return ErrorEvalNUMERRORdouble n  N  1  dn  1if n  1d result  StatsLibkthSmallestds 1 else if Doublecomparen N  0 result  StatsLibkthLargestds 1 else int k  int ndouble d  n  kresult  StatsLibkthSmallestds k  d StatsLibkthSmallestds k  1  StatsLibkthSmallestds kNumericFunctioncheckValueresult catch EvaluationException e return egetErrorEvalreturn new NumberEvalresult
public int getIndexOfFormattingRun(int index) {FormatRun r = _string.getFormatRun(index);return r.getCharacterPos();},public int getIndexOfFormattingRunint index FormatRun r  stringgetFormatRunindexreturn rgetCharacterPos
"public void getEntryObjectId(MutableObjectId out) {out.fromRaw(idBuffer(), idOffset());}",public void getEntryObjectIdMutableObjectId out outfromRawidBuffer idOffset
"public static byte[] grow(byte[] array, int minSize) {assert minSize >= 0: ""size must be positive (got "" + minSize + ""): likely integer overflow?"";if (array.length < minSize) {return growExact(array, oversize(minSize, Byte.BYTES));} else return array;}",public static byte growbyte array int minSize assert minSize  0 size must be positive got   minSize   likely integer overflowif arraylength  minSize return growExactarray oversizeminSize ByteBYTES else return array
"public boolean get(String name, boolean dflt) {boolean vals[] = (boolean[]) valByRound.get(name);if (vals != null) {return vals[roundNumber % vals.length];}String sval = props.getProperty(name, """" + dflt);if (sval.indexOf("":"") < 0) {return Boolean.valueOf(sval).booleanValue();}int k = sval.indexOf("":"");String colName = sval.substring(0, k);sval = sval.substring(k + 1);colForValByRound.put(name, colName);vals = propToBooleanArray(sval);valByRound.put(name, vals);return vals[roundNumber % vals.length];}",public boolean getString name boolean dflt boolean vals  boolean valByRoundgetnameif vals  null return valsroundNumber  valslengthString sval  propsgetPropertyname   dfltif svalindexOf  0 return BooleanvalueOfsvalbooleanValueint k  svalindexOfString colName  svalsubstring0 ksval  svalsubstringk  1colForValByRoundputname colNamevals  propToBooleanArraysvalvalByRoundputname valsreturn valsroundNumber  valslength
"public GroupingSearch setCaching(int maxDocsToCache, boolean cacheScores) {this.maxDocsToCache = maxDocsToCache;this.maxCacheRAMMB = null;this.cacheScores = cacheScores;return this;}",public GroupingSearch setCachingint maxDocsToCache boolean cacheScores thismaxDocsToCache  maxDocsToCachethismaxCacheRAMMB  nullthiscacheScores  cacheScoresreturn this
public boolean isValidTermOrPhrase( final List<TermInfo> phraseCandidate ){if( !terminal ) return false;if( phraseCandidate.size() == 1 ) return true;int pos = phraseCandidate.get( 0 ).getPosition();for( int i = 1; i < phraseCandidate.size(); i++ ){int nextPos = phraseCandidate.get( i ).getPosition();if( Math.abs( nextPos - pos - 1 ) > slop ) return false;pos = nextPos;}return true;},public boolean isValidTermOrPhrase final ListTermInfo phraseCandidate if terminal  return falseif phraseCandidatesize  1  return trueint pos  phraseCandidateget 0 getPositionfor int i  1 i  phraseCandidatesize i int nextPos  phraseCandidateget i getPositionif Mathabs nextPos  pos  1   slop  return falsepos  nextPosreturn true
public Run startWorkflowExecution(StartWorkflowExecutionRequest request) {request = beforeClientExecution(request);return executeStartWorkflowExecution(request);},public Run startWorkflowExecutionStartWorkflowExecutionRequest request request  beforeClientExecutionrequestreturn executeStartWorkflowExecutionrequest
public char[] nextKey() {goNext();return keys[lastPos];},public char nextKey goNextreturn keyslastPos
public ContainsResult contains(BytesRef value) {int hash = hashFunction.hash(value);if (hash < 0) {hash = hash * -1;}return mayContainValue(hash);},public ContainsResult containsBytesRef value int hash  hashFunctionhashvalueif hash  0 hash  hash  1return mayContainValuehash
public GetMethodResponseResult getMethodResponse(GetMethodResponseRequest request) {request = beforeClientExecution(request);return executeGetMethodResponse(request);},public GetMethodResponseResult getMethodResponseGetMethodResponseRequest request request  beforeClientExecutionrequestreturn executeGetMethodResponserequest
public void setValue(boolean value) {_value = value ? 1 : 0;_isError = false;},public void setValueboolean value value  value  1  0isError  false
"public synchronized E elementAt(int location) {if (location < elementCount) {return (E) elementData[location];}throw arrayIndexOutOfBoundsException(location, elementCount);}",public synchronized E elementAtint location if location  elementCount return E elementDatalocationthrow arrayIndexOutOfBoundsExceptionlocation elementCount
"public void set(int index, long value) {final int o = index >>> 3;final int b = index & 7;final int shift = b << 3;blocks[o] = (blocks[o] & ~(255L << shift)) | (value << shift);}",public void setint index long value final int o  index  3final int b  index  7final int shift  b  3blockso  blockso  255L  shift  value  shift
public IterationRecord clone() {return copy();},public IterationRecord clone return copy
public boolean requiresCommitBody() {return a.requiresCommitBody();},public boolean requiresCommitBody return arequiresCommitBody
public UpdateTrafficPolicyCommentResult updateTrafficPolicyComment(UpdateTrafficPolicyCommentRequest request) {request = beforeClientExecution(request);return executeUpdateTrafficPolicyComment(request);},public UpdateTrafficPolicyCommentResult updateTrafficPolicyCommentUpdateTrafficPolicyCommentRequest request request  beforeClientExecutionrequestreturn executeUpdateTrafficPolicyCommentrequest
public UpdatePrimaryEmailAddressResult updatePrimaryEmailAddress(UpdatePrimaryEmailAddressRequest request) {request = beforeClientExecution(request);return executeUpdatePrimaryEmailAddress(request);},public UpdatePrimaryEmailAddressResult updatePrimaryEmailAddressUpdatePrimaryEmailAddressRequest request request  beforeClientExecutionrequestreturn executeUpdatePrimaryEmailAddressrequest
"public static Pattern compile(String pattern) {return new Pattern(pattern, 0);}",public static Pattern compileString pattern return new Patternpattern 0
"public static int update(int hash, int value) {final int c1 = 0xCC9E2D51;final int c2 = 0x1B873593;final int r1 = 15;final int r2 = 13;final int m = 5;final int n = 0xE6546B64;int k = value;k = k * c1;k = (k << r1) | (k >>> (32 - r1));k = k * c2;hash = hash ^ k;hash = (hash << r2) | (hash >>> (32 - r2));hash = hash * m + n;return hash;}",public static int updateint hash int value final int c1  0xCC9E2D51final int c2  0x1B873593final int r1  15final int r2  13final int m  5final int n  0xE6546B64int k  valuek  k  c1k  k  r1  k  32  r1k  k  c2hash  hash  khash  hash  r2  hash  32  r2hash  hash  m  nreturn hash
public void serialize(LittleEndianOutput out) {out.writeShort(getHorizontalHold());out.writeShort(getVerticalHold());out.writeShort(getWidth());out.writeShort(getHeight());out.writeShort(getOptions());out.writeShort(getActiveSheetIndex());out.writeShort(getFirstVisibleTab());out.writeShort(getNumSelectedTabs());out.writeShort(getTabWidthRatio());},public void serializeLittleEndianOutput out outwriteShortgetHorizontalHoldoutwriteShortgetVerticalHoldoutwriteShortgetWidthoutwriteShortgetHeightoutwriteShortgetOptionsoutwriteShortgetActiveSheetIndexoutwriteShortgetFirstVisibleTaboutwriteShortgetNumSelectedTabsoutwriteShortgetTabWidthRatio
"public boolean lessThan(ShardRef first, ShardRef second) {assert first != second;final FieldDoc firstFD = (FieldDoc) shardHits[first.shardIndex][first.hitIndex];final FieldDoc secondFD = (FieldDoc) shardHits[second.shardIndex][second.hitIndex];for(int compIDX=0;compIDX<comparators.length;compIDX++) {final FieldComparator comp = comparators[compIDX];final int cmp = reverseMul[compIDX] * comp.compareValues(firstFD.fields[compIDX], secondFD.fields[compIDX]);if (cmp != 0) {return cmp < 0;}}return tieBreakLessThan(first, firstFD, second, secondFD, tieBreaker);}",public boolean lessThanShardRef first ShardRef second assert first  secondfinal FieldDoc firstFD  FieldDoc shardHitsfirstshardIndexfirsthitIndexfinal FieldDoc secondFD  FieldDoc shardHitssecondshardIndexsecondhitIndexforint compIDX0compIDXcomparatorslengthcompIDX final FieldComparator comp  comparatorscompIDXfinal int cmp  reverseMulcompIDX  compcompareValuesfirstFDfieldscompIDX secondFDfieldscompIDXif cmp  0 return cmp  0return tieBreakLessThanfirst firstFD second secondFD tieBreaker
"public static int UTF8toUTF16(BytesRef bytesRef, char[] chars) {return UTF8toUTF16(bytesRef.bytes, bytesRef.offset, bytesRef.length, chars);}",public static int UTF8toUTF16BytesRef bytesRef char chars return UTF8toUTF16bytesRefbytes bytesRefoffset bytesReflength chars
"public Trie optimize(Trie orig) {List<CharSequence> cmds = orig.cmds;List<Row> rows = new ArrayList<>();List<Row> orows = orig.rows;int remap[] = new int[orows.size()];Arrays.fill(remap, 1);for (int j = orows.size() - 1; j >= 0; j--) {if (eat(orows.get(j), remap)) {remap[j] = 0;}}Arrays.fill(remap, -1);rows = removeGaps(orig.root, orows, new ArrayList<Row>(), remap);return new Trie(orig.forward, remap[orig.root], cmds, rows);}",public Trie optimizeTrie orig ListCharSequence cmds  origcmdsListRow rows  new ArrayListListRow orows  origrowsint remap  new intorowssizeArraysfillremap 1for int j  orowssize  1 j  0 j if eatorowsgetj remap remapj  0Arraysfillremap 1rows  removeGapsorigroot orows new ArrayListRow remapreturn new Trieorigforward remaporigroot cmds rows
public DataValidationConstraint createCustomConstraint(String formula) {return DVConstraint.createCustomFormulaConstraint(formula);},public DataValidationConstraint createCustomConstraintString formula return DVConstraintcreateCustomFormulaConstraintformula
"public ByteBuffer putInt(int index, int value) {throw new ReadOnlyBufferException();}",public ByteBuffer putIntint index int value throw new ReadOnlyBufferException
public DescribeLoadBalancerPolicyTypesResult describeLoadBalancerPolicyTypes() {return describeLoadBalancerPolicyTypes(new DescribeLoadBalancerPolicyTypesRequest());},public DescribeLoadBalancerPolicyTypesResult describeLoadBalancerPolicyTypes return describeLoadBalancerPolicyTypesnew DescribeLoadBalancerPolicyTypesRequest
public NIOFSIndexInput clone() {NIOFSIndexInput clone = (NIOFSIndexInput)super.clone();clone.isClone = true;return clone;},public NIOFSIndexInput clone NIOFSIndexInput clone  NIOFSIndexInputsuperclonecloneisClone  truereturn clone
public long getTotalSLLATNLookaheadOps() {DecisionInfo[] decisions = atnSimulator.getDecisionInfo();long k = 0;for (int i = 0; i < decisions.length; i++) {k += decisions[i].SLL_ATNTransitions;}return k;},public long getTotalSLLATNLookaheadOps DecisionInfo decisions  atnSimulatorgetDecisionInfolong k  0for int i  0 i  decisionslength i k  decisionsiSLLATNTransitionsreturn k
public UpdateEndpointResult updateEndpoint(UpdateEndpointRequest request) {request = beforeClientExecution(request);return executeUpdateEndpoint(request);},public UpdateEndpointResult updateEndpointUpdateEndpointRequest request request  beforeClientExecutionrequestreturn executeUpdateEndpointrequest
public GetEmailChannelResult getEmailChannel(GetEmailChannelRequest request) {request = beforeClientExecution(request);return executeGetEmailChannel(request);},public GetEmailChannelResult getEmailChannelGetEmailChannelRequest request request  beforeClientExecutionrequestreturn executeGetEmailChannelrequest
public ListPhoneNumberOrdersResult listPhoneNumberOrders(ListPhoneNumberOrdersRequest request) {request = beforeClientExecution(request);return executeListPhoneNumberOrders(request);},public ListPhoneNumberOrdersResult listPhoneNumberOrdersListPhoneNumberOrdersRequest request request  beforeClientExecutionrequestreturn executeListPhoneNumberOrdersrequest
public UpdateBuildResult updateBuild(UpdateBuildRequest request) {request = beforeClientExecution(request);return executeUpdateBuild(request);},public UpdateBuildResult updateBuildUpdateBuildRequest request request  beforeClientExecutionrequestreturn executeUpdateBuildrequest
"public int serialize( int offset, byte[] data, EscherSerializationListener listener ){listener.beforeRecordSerialize( offset, getRecordId(), this );LittleEndian.putShort( data, offset, getOptions() );LittleEndian.putShort( data, offset + 2, getRecordId() );int remainingBytes = 16;LittleEndian.putInt( data, offset + 4, remainingBytes );LittleEndian.putInt( data, offset + 8, field_1_rectX1 );LittleEndian.putInt( data, offset + 12, field_2_rectY1 );LittleEndian.putInt( data, offset + 16, field_3_rectX2 );LittleEndian.putInt( data, offset + 20, field_4_rectY2 );listener.afterRecordSerialize( offset + getRecordSize(), getRecordId(), offset + getRecordSize(), this );return 8 + 16;}",public int serialize int offset byte data EscherSerializationListener listener listenerbeforeRecordSerialize offset getRecordId this LittleEndianputShort data offset getOptions LittleEndianputShort data offset  2 getRecordId int remainingBytes  16LittleEndianputInt data offset  4 remainingBytes LittleEndianputInt data offset  8 field1rectX1 LittleEndianputInt data offset  12 field2rectY1 LittleEndianputInt data offset  16 field3rectX2 LittleEndianputInt data offset  20 field4rectY2 listenerafterRecordSerialize offset  getRecordSize getRecordId offset  getRecordSize this return 8  16
public CleanCommand setDryRun(boolean dryRun) {this.dryRun = dryRun;return this;},public CleanCommand setDryRunboolean dryRun thisdryRun  dryRunreturn this
public DescribeClusterVersionsResult describeClusterVersions(DescribeClusterVersionsRequest request) {request = beforeClientExecution(request);return executeDescribeClusterVersions(request);},public DescribeClusterVersionsResult describeClusterVersionsDescribeClusterVersionsRequest request request  beforeClientExecutionrequestreturn executeDescribeClusterVersionsrequest
public DescribeWorkspacesResult describeWorkspaces(DescribeWorkspacesRequest request) {request = beforeClientExecution(request);return executeDescribeWorkspaces(request);},public DescribeWorkspacesResult describeWorkspacesDescribeWorkspacesRequest request request  beforeClientExecutionrequestreturn executeDescribeWorkspacesrequest
"public void copyRawTo(int[] b, int o) {b[o] = w1;b[o + 1] = w2;b[o + 2] = w3;b[o + 3] = w4;b[o + 4] = w5;}",public void copyRawToint b int o bo  w1bo  1  w2bo  2  w3bo  3  w4bo  4  w5
public SetStackPolicyResult setStackPolicy(SetStackPolicyRequest request) {request = beforeClientExecution(request);return executeSetStackPolicy(request);},public SetStackPolicyResult setStackPolicySetStackPolicyRequest request request  beforeClientExecutionrequestreturn executeSetStackPolicyrequest
"public String toString() {StringBuilder s = new StringBuilder();append(s, oldRef, ""CREATE""); s.append(' ');append(s, newRef, ""DELETE""); s.append(' ').append(getRefName());s.append(' ').append(getResult());if (getMessage() != null) {s.append(' ').append(getMessage());}return s.toString();}",public String toString StringBuilder s  new StringBuilderappends oldRef CREATE sappend appends newRef DELETE sappend appendgetRefNamesappend appendgetResultif getMessage  null sappend appendgetMessagereturn stoString
public short getXFAt(int coffset) {return field_3_rks[coffset].xf;},public short getXFAtint coffset return field3rkscoffsetxf
"public ByteBuffer put(byte[] src, int srcOffset, int byteCount) {Arrays.checkOffsetAndCount(src.length, srcOffset, byteCount);if (byteCount > remaining()) {throw new BufferOverflowException();}for (int i = srcOffset; i < srcOffset + byteCount; ++i) {put(src[i]);}return this;}",public ByteBuffer putbyte src int srcOffset int byteCount ArrayscheckOffsetAndCountsrclength srcOffset byteCountif byteCount  remaining throw new BufferOverflowExceptionfor int i  srcOffset i  srcOffset  byteCount i putsrcireturn this
public ReceiveMessageResult receiveMessage(String queueUrl) {return receiveMessage(new ReceiveMessageRequest().withQueueUrl(queueUrl));},public ReceiveMessageResult receiveMessageString queueUrl return receiveMessagenew ReceiveMessageRequestwithQueueUrlqueueUrl
public NativeUnixIndexInput(NativeUnixIndexInput other) throws IOException {super(other.toString());this.fis = null;channel = other.channel;this.bufferSize = other.bufferSize;buffer = ByteBuffer.allocateDirect(bufferSize);filePos = -bufferSize;bufferPos = bufferSize;isOpen = true;isClone = true;seek(other.getFilePointer());},public NativeUnixIndexInputNativeUnixIndexInput other throws IOException superothertoStringthisfis  nullchannel  otherchannelthisbufferSize  otherbufferSizebuffer  ByteBufferallocateDirectbufferSizefilePos  bufferSizebufferPos  bufferSizeisOpen  trueisClone  trueseekothergetFilePointer
"public Merger newMerger(Repository db, boolean inCore) {return new OneSide(db, treeIndex);}",public Merger newMergerRepository db boolean inCore return new OneSidedb treeIndex
public void flush() {synchronized (lock) {if (out != null) {try {out.flush();} catch (IOException e) {setError();}} else {setError();}}},public void flush synchronized lock if out  null try outflush catch IOException e setError else setError
public DisassociateIamInstanceProfileResult disassociateIamInstanceProfile(DisassociateIamInstanceProfileRequest request) {request = beforeClientExecution(request);return executeDisassociateIamInstanceProfile(request);},public DisassociateIamInstanceProfileResult disassociateIamInstanceProfileDisassociateIamInstanceProfileRequest request request  beforeClientExecutionrequestreturn executeDisassociateIamInstanceProfilerequest
"public void beginTask(String title, int totalWork) {if (!isMainThread())throw new IllegalStateException();pm.beginTask(title, totalWork);}",public void beginTaskString title int totalWork if isMainThreadthrow new IllegalStateExceptionpmbeginTasktitle totalWork
public void Run() {try {count = task.runAndMaybeStats(letChildReport);} catch (Exception e) {throw new RuntimeException(e);}},public void Run try count  taskrunAndMaybeStatsletChildReport catch Exception e throw new RuntimeExceptione
"public TokenFilter create(TokenStream input) {return new EdgeNGramTokenFilter(input, minGramSize, maxGramSize, preserveOriginal);}",public TokenFilter createTokenStream input return new EdgeNGramTokenFilterinput minGramSize maxGramSize preserveOriginal
"public String toString() {return ""RemoteRefUpdate[remoteName=""+ remoteName+ "", ""+ status+ "", ""+ (expectedOldObjectId != null ? expectedOldObjectId.name(): ""(null)"") + ""...""+ (newObjectId != null ? newObjectId.name() : ""(null)"")+ (fastForward ? "", fastForward"" : """")+ "", srcRef="" + srcRef+ (forceUpdate ? "", forceUpdate"" : """") + "", message=""+ (message != null ? ""\"""" + message + ""\"""" : ""null"") + ""]"";}",public String toString return RemoteRefUpdateremoteName remoteName   status   expectedOldObjectId  null  expectedOldObjectIdname null   newObjectId  null  newObjectIdname  null fastForward   fastForward    srcRef  srcRef forceUpdate   forceUpdate     message message  null    message    null  
public ListJournalS3ExportsResult listJournalS3Exports(ListJournalS3ExportsRequest request) {request = beforeClientExecution(request);return executeListJournalS3Exports(request);},public ListJournalS3ExportsResult listJournalS3ExportsListJournalS3ExportsRequest request request  beforeClientExecutionrequestreturn executeListJournalS3Exportsrequest
"public boolean lookingAt() {matchFound = lookingAtImpl(address, input, matchOffsets);if (matchFound) {findPos = matchOffsets[1];}return matchFound;}",public boolean lookingAt matchFound  lookingAtImpladdress input matchOffsetsif matchFound findPos  matchOffsets1return matchFound
public DescribeIdentityUsageResult describeIdentityUsage(DescribeIdentityUsageRequest request) {request = beforeClientExecution(request);return executeDescribeIdentityUsage(request);},public DescribeIdentityUsageResult describeIdentityUsageDescribeIdentityUsageRequest request request  beforeClientExecutionrequestreturn executeDescribeIdentityUsagerequest
"public void carry(RevFlag flag) {final int carry = flags & flag.mask;if (carry != 0)carryFlags(this, carry);}",public void carryRevFlag flag final int carry  flags  flagmaskif carry  0carryFlagsthis carry
public Count(){_predicate = defaultPredicate;},public Countpredicate  defaultPredicate
public ShowNoteCommand notesShow() {return new ShowNoteCommand(repo);},public ShowNoteCommand notesShow return new ShowNoteCommandrepo
public ResolveRoomResult resolveRoom(ResolveRoomRequest request) {request = beforeClientExecution(request);return executeResolveRoom(request);},public ResolveRoomResult resolveRoomResolveRoomRequest request request  beforeClientExecutionrequestreturn executeResolveRoomrequest
"public ValueEval getArea3DEval(Area3DPxg aptg) {SheetRangeEvaluator sre = createExternSheetRefEvaluator(aptg.getSheetName(), aptg.getLastSheetName(), aptg.getExternalWorkbookNumber());return new LazyAreaEval(aptg.getFirstRow(), aptg.getFirstColumn(),aptg.getLastRow(), aptg.getLastColumn(), sre);}",public ValueEval getArea3DEvalArea3DPxg aptg SheetRangeEvaluator sre  createExternSheetRefEvaluatoraptggetSheetName aptggetLastSheetName aptggetExternalWorkbookNumberreturn new LazyAreaEvalaptggetFirstRow aptggetFirstColumnaptggetLastRow aptggetLastColumn sre
"public DoubleMetaphoneFilterFactory(Map<String,String> args) {super(args);inject = getBoolean(args, INJECT, true);maxCodeLength = getInt(args, MAX_CODE_LENGTH, DEFAULT_MAX_CODE_LENGTH);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public DoubleMetaphoneFilterFactoryMapStringString args superargsinject  getBooleanargs INJECT truemaxCodeLength  getIntargs MAXCODELENGTH DEFAULTMAXCODELENGTHif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[PALETTE]\n"");buffer.append(""  numcolors     = "").append(_colors.size()).append('\n');for (int i = 0; i < _colors.size(); i++) {PColor c = _colors.get(i);buffer.append(""* colornum      = "").append(i).append('\n');buffer.append(c);buffer.append("""");}}",public String toString StringBuilder buffer  new StringBuilderbufferappendPALETTEnbufferappend  numcolors      appendcolorssizeappendnfor int i  0 i  colorssize i PColor c  colorsgetibufferappend colornum       appendiappendnbufferappendcbufferappend
public DocOffsetSorter(int maxDoc) {super(maxDoc / 64);this.tmpDocs = new int[maxDoc / 64];this.tmpOffsets = new long[maxDoc / 64];},public DocOffsetSorterint maxDoc supermaxDoc  64thistmpDocs  new intmaxDoc  64thistmpOffsets  new longmaxDoc  64
public EnableInsightRulesResult enableInsightRules(EnableInsightRulesRequest request) {request = beforeClientExecution(request);return executeEnableInsightRules(request);},public EnableInsightRulesResult enableInsightRulesEnableInsightRulesRequest request request  beforeClientExecutionrequestreturn executeEnableInsightRulesrequest
"public boolean equals(Object obj) {if ( this==obj ) return true;if ( !(obj instanceof AND) ) return false;AND other = (AND)obj;return Arrays.equals(this.opnds, other.opnds);}",public boolean equalsObject obj if  thisobj  return trueif  obj instanceof AND  return falseAND other  ANDobjreturn Arraysequalsthisopnds otheropnds
public static int getEncodedSize(Ptg[] ptgs) {int result = 0;for (Ptg ptg : ptgs) {result += ptg.getSize();}return result;},public static int getEncodedSizePtg ptgs int result  0for Ptg ptg  ptgs result  ptggetSizereturn result
"public IterationRecord(boolean iterateOn) {_flags = iterationOn.setBoolean(0, iterateOn);}",public IterationRecordboolean iterateOn flags  iterationOnsetBoolean0 iterateOn
public UnlinkIdentityResult unlinkIdentity(UnlinkIdentityRequest request) {request = beforeClientExecution(request);return executeUnlinkIdentity(request);},public UnlinkIdentityResult unlinkIdentityUnlinkIdentityRequest request request  beforeClientExecutionrequestreturn executeUnlinkIdentityrequest
public CreateThreatIntelSetResult createThreatIntelSet(CreateThreatIntelSetRequest request) {request = beforeClientExecution(request);return executeCreateThreatIntelSet(request);},public CreateThreatIntelSetResult createThreatIntelSetCreateThreatIntelSetRequest request request  beforeClientExecutionrequestreturn executeCreateThreatIntelSetrequest
public TokenizedPhraseQueryNode() {setLeaf(false);allocate();},public TokenizedPhraseQueryNode setLeaffalseallocate
public DataItemRecord(RecordInputStream in) {isxvdData = in.readUShort();iiftab = in.readUShort();df = in.readUShort();isxvd = in.readUShort();isxvi = in.readUShort();ifmt = in.readUShort();name = in.readString();},public DataItemRecordRecordInputStream in isxvdData  inreadUShortiiftab  inreadUShortdf  inreadUShortisxvd  inreadUShortisxvi  inreadUShortifmt  inreadUShortname  inreadString
public DeleteDBParameterGroupResult deleteDBParameterGroup(DeleteDBParameterGroupRequest request) {request = beforeClientExecution(request);return executeDeleteDBParameterGroup(request);},public DeleteDBParameterGroupResult deleteDBParameterGroupDeleteDBParameterGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteDBParameterGrouprequest
public GetReservedNodeExchangeOfferingsResult getReservedNodeExchangeOfferings(GetReservedNodeExchangeOfferingsRequest request) {request = beforeClientExecution(request);return executeGetReservedNodeExchangeOfferings(request);},public GetReservedNodeExchangeOfferingsResult getReservedNodeExchangeOfferingsGetReservedNodeExchangeOfferingsRequest request request  beforeClientExecutionrequestreturn executeGetReservedNodeExchangeOfferingsrequest
public static long nextHighestPowerOfTwo(long v) {v--;v |= v >> 1;v |= v >> 2;v |= v >> 4;v |= v >> 8;v |= v >> 16;v |= v >> 32;v++;return v;},public static long nextHighestPowerOfTwolong v vv  v  1v  v  2v  v  4v  v  8v  v  16v  v  32vreturn v
public RunInstancesResult runInstances(RunInstancesRequest request) {request = beforeClientExecution(request);return executeRunInstances(request);},public RunInstancesResult runInstancesRunInstancesRequest request request  beforeClientExecutionrequestreturn executeRunInstancesrequest
"public ChangeMessageVisibilityBatchResult changeMessageVisibilityBatch(String queueUrl, java.util.List<ChangeMessageVisibilityBatchRequestEntry> entries) {return changeMessageVisibilityBatch(new ChangeMessageVisibilityBatchRequest().withQueueUrl(queueUrl).withEntries(entries));}",public ChangeMessageVisibilityBatchResult changeMessageVisibilityBatchString queueUrl javautilListChangeMessageVisibilityBatchRequestEntry entries return changeMessageVisibilityBatchnew ChangeMessageVisibilityBatchRequestwithQueueUrlqueueUrlwithEntriesentries
public DeleteRealtimeEndpointResult deleteRealtimeEndpoint(DeleteRealtimeEndpointRequest request) {request = beforeClientExecution(request);return executeDeleteRealtimeEndpoint(request);},public DeleteRealtimeEndpointResult deleteRealtimeEndpointDeleteRealtimeEndpointRequest request request  beforeClientExecutionrequestreturn executeDeleteRealtimeEndpointrequest
public CreateDiskSnapshotResult createDiskSnapshot(CreateDiskSnapshotRequest request) {request = beforeClientExecution(request);return executeCreateDiskSnapshot(request);},public CreateDiskSnapshotResult createDiskSnapshotCreateDiskSnapshotRequest request request  beforeClientExecutionrequestreturn executeCreateDiskSnapshotrequest
public void mark(int readLimit) throws IOException {if (readLimit < 0) {throw new IllegalArgumentException();}synchronized (lock) {checkNotClosed();markpos = pos;}},public void markint readLimit throws IOException if readLimit  0 throw new IllegalArgumentExceptionsynchronized lock checkNotClosedmarkpos  pos
"public TokenStream create(TokenStream input) {return new ICUNormalizer2Filter(input, normalizer);}",public TokenStream createTokenStream input return new ICUNormalizer2Filterinput normalizer
public ModifyImageAttributeResult modifyImageAttribute(ModifyImageAttributeRequest request) {request = beforeClientExecution(request);return executeModifyImageAttribute(request);},public ModifyImageAttributeResult modifyImageAttributeModifyImageAttributeRequest request request  beforeClientExecutionrequestreturn executeModifyImageAttributerequest
public DescribeClusterSubnetGroupsResult describeClusterSubnetGroups(DescribeClusterSubnetGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeClusterSubnetGroups(request);},public DescribeClusterSubnetGroupsResult describeClusterSubnetGroupsDescribeClusterSubnetGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeClusterSubnetGroupsrequest
public StopQueryExecutionResult stopQueryExecution(StopQueryExecutionRequest request) {request = beforeClientExecution(request);return executeStopQueryExecution(request);},public StopQueryExecutionResult stopQueryExecutionStopQueryExecutionRequest request request  beforeClientExecutionrequestreturn executeStopQueryExecutionrequest
"public UpdateUserInfoRequest() {super(""cr"", ""2016-06-07"", ""UpdateUserInfo"", ""cr"");setUriPattern(""/users"");setMethod(MethodType.POST);}",public UpdateUserInfoRequest supercr 20160607 UpdateUserInfo crsetUriPatternuserssetMethodMethodTypePOST
public DiscoverInputSchemaResult discoverInputSchema(DiscoverInputSchemaRequest request) {request = beforeClientExecution(request);return executeDiscoverInputSchema(request);},public DiscoverInputSchemaResult discoverInputSchemaDiscoverInputSchemaRequest request request  beforeClientExecutionrequestreturn executeDiscoverInputSchemarequest
public GetEnvironmentResult getEnvironment(GetEnvironmentRequest request) {request = beforeClientExecution(request);return executeGetEnvironment(request);},public GetEnvironmentResult getEnvironmentGetEnvironmentRequest request request  beforeClientExecutionrequestreturn executeGetEnvironmentrequest
"public UpdateCondition(String name, String value, Boolean exists) {setName(name);setValue(value);setExists(exists);}",public UpdateConditionString name String value Boolean exists setNamenamesetValuevaluesetExistsexists
public void serialize(LittleEndianOutput out) {out.writeShort(getCalcMode());},public void serializeLittleEndianOutput out outwriteShortgetCalcMode
public AmazonS3EncryptionClient(EncryptionMaterials encryptionMaterials) {this(new StaticEncryptionMaterialsProvider(encryptionMaterials));},public AmazonS3EncryptionClientEncryptionMaterials encryptionMaterials thisnew StaticEncryptionMaterialsProviderencryptionMaterials
public void addRule(ConditionalFormattingRule cfRule){addRule((HSSFConditionalFormattingRule)cfRule);},public void addRuleConditionalFormattingRule cfRuleaddRuleHSSFConditionalFormattingRulecfRule
public Iterator<E> descendingIterator() {return descendingSet().iterator();},public IteratorE descendingIterator return descendingSetiterator
public DescribeSubnetGroupsResult describeSubnetGroups(DescribeSubnetGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeSubnetGroups(request);},public DescribeSubnetGroupsResult describeSubnetGroupsDescribeSubnetGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeSubnetGroupsrequest
"public void append(String name, RevBlob blob) {append(name, REGULAR_FILE, blob);}",public void appendString name RevBlob blob appendname REGULARFILE blob
"public NavigableMap<K, V> subMap(K from, boolean fromInclusive, K to, boolean toInclusive) {Bound fromBound = fromInclusive ? INCLUSIVE : EXCLUSIVE;Bound toBound = toInclusive ? INCLUSIVE : EXCLUSIVE;return subMap(from, fromBound, to, toBound);}",public NavigableMapK V subMapK from boolean fromInclusive K to boolean toInclusive Bound fromBound  fromInclusive  INCLUSIVE  EXCLUSIVEBound toBound  toInclusive  INCLUSIVE  EXCLUSIVEreturn subMapfrom fromBound to toBound
public E next() {if (expectedModCount == modCount) {try {E result = get(pos + 1);lastPosition = ++pos;return result;} catch (IndexOutOfBoundsException e) {throw new NoSuchElementException();}}throw new ConcurrentModificationException();},public E next if expectedModCount  modCount try E result  getpos  1lastPosition  posreturn result catch IndexOutOfBoundsException e throw new NoSuchElementExceptionthrow new ConcurrentModificationException
"static public double ipmt(double r, int per, int nper, double pv) {return ipmt(r, per, nper, pv, 0);}",static public double ipmtdouble r int per int nper double pv return ipmtr per nper pv 0
"public TokenStream create(TokenStream input) {if (dictionary == null) {return input;}return new DictionaryCompoundWordTokenFilter(input, dictionary, minWordSize, minSubwordSize, maxSubwordSize, onlyLongestMatch);}",public TokenStream createTokenStream input if dictionary  null return inputreturn new DictionaryCompoundWordTokenFilterinput dictionary minWordSize minSubwordSize maxSubwordSize onlyLongestMatch
"public String toString() {StringBuilder r = new StringBuilder();r.append(""("");fieldNamesToString(r);r.append(q.toString());r.append("")"");return r.toString();}",public String toString StringBuilder r  new StringBuilderrappendfieldNamesToStringrrappendqtoStringrappendreturn rtoString
public AssociateDeviceWithRoomResult associateDeviceWithRoom(AssociateDeviceWithRoomRequest request) {request = beforeClientExecution(request);return executeAssociateDeviceWithRoom(request);},public AssociateDeviceWithRoomResult associateDeviceWithRoomAssociateDeviceWithRoomRequest request request  beforeClientExecutionrequestreturn executeAssociateDeviceWithRoomrequest
public DeleteRetentionPolicyRequest(String logGroupName) {setLogGroupName(logGroupName);},public DeleteRetentionPolicyRequestString logGroupName setLogGroupNamelogGroupName
"public TypeTokenFilterFactory(Map<String,String> args) {super(args);stopTypesFiles = require(args, ""types"");useWhitelist = getBoolean(args, ""useWhitelist"", false);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public TypeTokenFilterFactoryMapStringString args superargsstopTypesFiles  requireargs typesuseWhitelist  getBooleanargs useWhitelist falseif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public ServerCertificate(ServerCertificateMetadata serverCertificateMetadata, String certificateBody) {setServerCertificateMetadata(serverCertificateMetadata);setCertificateBody(certificateBody);}",public ServerCertificateServerCertificateMetadata serverCertificateMetadata String certificateBody setServerCertificateMetadataserverCertificateMetadatasetCertificateBodycertificateBody
"public final void add(RevCommit c, RevFlag queueControl) {if (!c.has(queueControl)) {c.add(queueControl);add(c);}}",public final void addRevCommit c RevFlag queueControl if chasqueueControl caddqueueControladdc
public BlameCommand setFilePath(String filePath) {this.path = filePath;return this;},public BlameCommand setFilePathString filePath thispath  filePathreturn this
public boolean isTraverseEmptyCells() {return traverseEmptyCells;},public boolean isTraverseEmptyCells return traverseEmptyCells
"public QueryCustomerByIdRequest() {super(""xspace"", ""2017-07-20"", ""QueryCustomerById"");setUriPattern(""/customer"");setMethod(MethodType.PUT);}",public QueryCustomerByIdRequest superxspace 20170720 QueryCustomerByIdsetUriPatterncustomersetMethodMethodTypePUT
"public OpenNLPPOSFilterFactory(Map<String,String> args) {super(args);posTaggerModelFile = require(args, POS_TAGGER_MODEL);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public OpenNLPPOSFilterFactoryMapStringString args superargsposTaggerModelFile  requireargs POSTAGGERMODELif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public GetLinkAttributesResult getLinkAttributes(GetLinkAttributesRequest request) {request = beforeClientExecution(request);return executeGetLinkAttributes(request);},public GetLinkAttributesResult getLinkAttributesGetLinkAttributesRequest request request  beforeClientExecutionrequestreturn executeGetLinkAttributesrequest
public byte[] getByteBlock() {bytesUsed.addAndGet(blockSize);return new byte[blockSize];},public byte getByteBlock bytesUsedaddAndGetblockSizereturn new byteblockSize
public CanonicalTreeParser() {reset(EMPTY);},public CanonicalTreeParser resetEMPTY
"public OldLabelRecord(RecordInputStream in){super(in, in.getSid() == biff2_sid);if (isBiff2()) {field_4_string_len  = (short)in.readUByte();} else {field_4_string_len   = in.readShort();}field_5_bytes = IOUtils.safelyAllocate(field_4_string_len, MAX_RECORD_LENGTH);in.read(field_5_bytes, 0, field_4_string_len);if (in.remaining() > 0) {logger.log(POILogger.INFO,""LabelRecord data remains: "" + in.remaining() +"" : "" + HexDump.toHex(in.readRemainder()));}}",public OldLabelRecordRecordInputStream insuperin ingetSid  biff2sidif isBiff2 field4stringlen   shortinreadUByte else field4stringlen    inreadShortfield5bytes  IOUtilssafelyAllocatefield4stringlen MAXRECORDLENGTHinreadfield5bytes 0 field4stringlenif inremaining  0 loggerlogPOILoggerINFOLabelRecord data remains   inremaining     HexDumptoHexinreadRemainder
public DBCellRecord clone() {return copy();},public DBCellRecord clone return copy
public GetCampaignResult getCampaign(GetCampaignRequest request) {request = beforeClientExecution(request);return executeGetCampaign(request);},public GetCampaignResult getCampaignGetCampaignRequest request request  beforeClientExecutionrequestreturn executeGetCampaignrequest
public boolean isEmpty() {return backingMap.isEmpty();},public boolean isEmpty return backingMapisEmpty
"public Object subtract(Object object, Object inc) {return outputs.subtract((T) object, (T) inc);}",public Object subtractObject object Object inc return outputssubtractT object T inc
"public String toString() {StringBuilder sb = new StringBuilder();sb.append(""[COLINFO]\n"");sb.append(""  colfirst = "").append(getFirstColumn()).append(""\n"");sb.append(""  collast  = "").append(getLastColumn()).append(""\n"");sb.append(""  colwidth = "").append(getColumnWidth()).append(""\n"");sb.append(""  xfindex  = "").append(getXFIndex()).append(""\n"");sb.append(""  options  = "").append(HexDump.shortToHex(_options)).append(""\n"");sb.append(""    hidden   = "").append(getHidden()).append(""\n"");sb.append(""    olevel   = "").append(getOutlineLevel()).append(""\n"");sb.append(""    collapsed= "").append(getCollapsed()).append(""\n"");sb.append(""[/COLINFO]\n"");return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappendCOLINFOnsbappend  colfirst  appendgetFirstColumnappendnsbappend  collast   appendgetLastColumnappendnsbappend  colwidth  appendgetColumnWidthappendnsbappend  xfindex   appendgetXFIndexappendnsbappend  options   appendHexDumpshortToHexoptionsappendnsbappend    hidden    appendgetHiddenappendnsbappend    olevel    appendgetOutlineLevelappendnsbappend    collapsed appendgetCollapsedappendnsbappendCOLINFOnreturn sbtoString
public EditList toEditList() {final EditList r = new EditList();for (HunkHeader hunk : hunks)r.addAll(hunk.toEditList());return r;},public EditList toEditList final EditList r  new EditListfor HunkHeader hunk  hunksraddAllhunktoEditListreturn r
"public void setParams(String params) {super.setParams(params);if (params != null) {String[] split = params.split("","");if (split.length > 0) {commitUserData = split[0];}}}",public void setParamsString params supersetParamsparamsif params  null String split  paramssplitif splitlength  0 commitUserData  split0
"public HSSFCell createCell(int columnIndex, CellType type){short shortCellNum = (short)columnIndex;if(columnIndex > 0x7FFF) {shortCellNum = (short)(0xffff - columnIndex);}HSSFCell cell = new HSSFCell(book, sheet, getRowNum(), shortCellNum, type);addCell(cell);sheet.getSheet().addValueRecord(getRowNum(), cell.getCellValueRecord());return cell;}",public HSSFCell createCellint columnIndex CellType typeshort shortCellNum  shortcolumnIndexifcolumnIndex  0x7FFF shortCellNum  short0xffff  columnIndexHSSFCell cell  new HSSFCellbook sheet getRowNum shortCellNum typeaddCellcellsheetgetSheetaddValueRecordgetRowNum cellgetCellValueRecordreturn cell
"public PhraseQuery build() {Term[] terms = this.terms.toArray(new Term[this.terms.size()]);int[] positions = new int[this.positions.size()];for (int i = 0; i < positions.length; ++i) {positions[i] = this.positions.get(i);}return new PhraseQuery(slop, terms, positions);}",public PhraseQuery build Term terms  thistermstoArraynew Termthistermssizeint positions  new intthispositionssizefor int i  0 i  positionslength i positionsi  thispositionsgetireturn new PhraseQueryslop terms positions
public ModifyInstanceEventStartTimeResult modifyInstanceEventStartTime(ModifyInstanceEventStartTimeRequest request) {request = beforeClientExecution(request);return executeModifyInstanceEventStartTime(request);},public ModifyInstanceEventStartTimeResult modifyInstanceEventStartTimeModifyInstanceEventStartTimeRequest request request  beforeClientExecutionrequestreturn executeModifyInstanceEventStartTimerequest
public boolean checkShowJsonItemName() {return false;},public boolean checkShowJsonItemName return false
public Analyzer create() {return new Analyzer() {private final Integer positionIncrementGap = AnalyzerFactory.this.positionIncrementGap;private final Integer offsetGap = AnalyzerFactory.this.offsetGap;};},public Analyzer create return new Analyzer private final Integer positionIncrementGap  AnalyzerFactorythispositionIncrementGapprivate final Integer offsetGap  AnalyzerFactorythisoffsetGap
"public static RevFilter create(RevFilter[] list) {if (list.length == 2)return create(list[0], list[1]);if (list.length < 2)throw new IllegalArgumentException(JGitText.get().atLeastTwoFiltersNeeded);final RevFilter[] subfilters = new RevFilter[list.length];System.arraycopy(list, 0, subfilters, 0, list.length);return new List(subfilters);}",public static RevFilter createRevFilter list if listlength  2return createlist0 list1if listlength  2throw new IllegalArgumentExceptionJGitTextgetatLeastTwoFiltersNeededfinal RevFilter subfilters  new RevFilterlistlengthSystemarraycopylist 0 subfilters 0 listlengthreturn new Listsubfilters
public DescribePrefixListsResult describePrefixLists(DescribePrefixListsRequest request) {request = beforeClientExecution(request);return executeDescribePrefixLists(request);},public DescribePrefixListsResult describePrefixListsDescribePrefixListsRequest request request  beforeClientExecutionrequestreturn executeDescribePrefixListsrequest
"public CharVector clone() {CharVector cv = new CharVector(array.clone(), blockSize);cv.n = this.n;return cv;}",public CharVector clone CharVector cv  new CharVectorarrayclone blockSizecvn  thisnreturn cv
public CreateDatasetImportJobResult createDatasetImportJob(CreateDatasetImportJobRequest request) {request = beforeClientExecution(request);return executeCreateDatasetImportJob(request);},public CreateDatasetImportJobResult createDatasetImportJobCreateDatasetImportJobRequest request request  beforeClientExecutionrequestreturn executeCreateDatasetImportJobrequest
public GetRecommenderConfigurationsResult getRecommenderConfigurations(GetRecommenderConfigurationsRequest request) {request = beforeClientExecution(request);return executeGetRecommenderConfigurations(request);},public GetRecommenderConfigurationsResult getRecommenderConfigurationsGetRecommenderConfigurationsRequest request request  beforeClientExecutionrequestreturn executeGetRecommenderConfigurationsrequest
public void setOldPrefix(String prefix) {oldPrefix = prefix;},public void setOldPrefixString prefix oldPrefix  prefix
public DescribeAvailabilityZonesResult describeAvailabilityZones() {return describeAvailabilityZones(new DescribeAvailabilityZonesRequest());},public DescribeAvailabilityZonesResult describeAvailabilityZones return describeAvailabilityZonesnew DescribeAvailabilityZonesRequest
public final boolean matches(char c) {return this.expectedCharacter == c;},public final boolean matcheschar c return thisexpectedCharacter  c
"public static void putCompressedUnicode(String input, byte[] output, int offset) {byte[] bytes = input.getBytes(ISO_8859_1);System.arraycopy(bytes, 0, output, offset, bytes.length);}",public static void putCompressedUnicodeString input byte output int offset byte bytes  inputgetBytesISO88591Systemarraycopybytes 0 output offset byteslength
"public void put(int key, int value) {int i = binarySearch(mKeys, 0, mSize, key);if (i >= 0) {mValues[i] = value;} else {i = ~i;if (mSize >= mKeys.length) {int n = ArrayUtils.idealIntArraySize(mSize + 1);int[] nkeys = new int[n];int[] nvalues = new int[n];System.arraycopy(mKeys, 0, nkeys, 0, mKeys.length);System.arraycopy(mValues, 0, nvalues, 0, mValues.length);mKeys = nkeys;mValues = nvalues;}if (mSize - i != 0) {System.arraycopy(mKeys, i, mKeys, i + 1, mSize - i);System.arraycopy(mValues, i, mValues, i + 1, mSize - i);}mKeys[i] = key;mValues[i] = value;mSize++;}}",public void putint key int value int i  binarySearchmKeys 0 mSize keyif i  0 mValuesi  value else i  iif mSize  mKeyslength int n  ArrayUtilsidealIntArraySizemSize  1int nkeys  new intnint nvalues  new intnSystemarraycopymKeys 0 nkeys 0 mKeyslengthSystemarraycopymValues 0 nvalues 0 mValueslengthmKeys  nkeysmValues  nvaluesif mSize  i  0 SystemarraycopymKeys i mKeys i  1 mSize  iSystemarraycopymValues i mValues i  1 mSize  imKeysi  keymValuesi  valuemSize
public void clearEscherRecords(){escherRecords.clear();},public void clearEscherRecordsescherRecordsclear
public String getSchemeSpecificPart() {return decode(schemeSpecificPart);},public String getSchemeSpecificPart return decodeschemeSpecificPart
public DeleteSkillAuthorizationResult deleteSkillAuthorization(DeleteSkillAuthorizationRequest request) {request = beforeClientExecution(request);return executeDeleteSkillAuthorization(request);},public DeleteSkillAuthorizationResult deleteSkillAuthorizationDeleteSkillAuthorizationRequest request request  beforeClientExecutionrequestreturn executeDeleteSkillAuthorizationrequest
"public QuerySyncPicScheduleRequest() {super(""LinkFace"", ""2018-07-20"", ""QuerySyncPicSchedule"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public QuerySyncPicScheduleRequest superLinkFace 20180720 QuerySyncPicSchedulesetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public SheetRecordCollectingListener(HSSFListener childListener) {this.childListener = childListener;},public SheetRecordCollectingListenerHSSFListener childListener thischildListener  childListener
public boolean equals( Object o ) {return o instanceof RussianStemmer;},public boolean equals Object o  return o instanceof RussianStemmer
public void clear() {ArrayList <HSSFShape> copy = new ArrayList<>(_shapes);for (HSSFShape shape: copy){removeShape(shape);}},public void clear ArrayList HSSFShape copy  new ArrayListshapesfor HSSFShape shape copyremoveShapeshape
public AddTagsToVaultResult addTagsToVault(AddTagsToVaultRequest request) {request = beforeClientExecution(request);return executeAddTagsToVault(request);},public AddTagsToVaultResult addTagsToVaultAddTagsToVaultRequest request request  beforeClientExecutionrequestreturn executeAddTagsToVaultrequest
public String toString() {return getClass().getSimpleName() + '@' + Integer.toHexString(hashCode());},public String toString return getClassgetSimpleName    IntegertoHexStringhashCode
public final boolean equals(Object obj) {if (obj instanceof Charset) {Charset that = (Charset) obj;return this.canonicalName.equals(that.canonicalName);}return false;},public final boolean equalsObject obj if obj instanceof Charset Charset that  Charset objreturn thiscanonicalNameequalsthatcanonicalNamereturn false
"public String toString() {return source + "" --> "" + dest + "" "" + (char) min + ""-"" + (char) max;}",public String toString return source      dest     char min    char max
public DeleteDirectoryConfigResult deleteDirectoryConfig(DeleteDirectoryConfigRequest request) {request = beforeClientExecution(request);return executeDeleteDirectoryConfig(request);},public DeleteDirectoryConfigResult deleteDirectoryConfigDeleteDirectoryConfigRequest request request  beforeClientExecutionrequestreturn executeDeleteDirectoryConfigrequest
"public static DVConstraint createTimeConstraint(int comparisonOperator, String expr1, String expr2) {if (expr1 == null) {throw new IllegalArgumentException(""expr1 must be supplied"");}OperatorType.validateSecondArg(comparisonOperator, expr1);String formula1 = getFormulaFromTextExpression(expr1);Double value1 = formula1 == null ? convertTime(expr1) : null;String formula2 = getFormulaFromTextExpression(expr2);Double value2 = formula2 == null ? convertTime(expr2) : null;return new DVConstraint(ValidationType.TIME, comparisonOperator, formula1, formula2, value1, value2, null);}",public static DVConstraint createTimeConstraintint comparisonOperator String expr1 String expr2 if expr1  null throw new IllegalArgumentExceptionexpr1 must be suppliedOperatorTypevalidateSecondArgcomparisonOperator expr1String formula1  getFormulaFromTextExpressionexpr1Double value1  formula1  null  convertTimeexpr1  nullString formula2  getFormulaFromTextExpressionexpr2Double value2  formula2  null  convertTimeexpr2  nullreturn new DVConstraintValidationTypeTIME comparisonOperator formula1 formula2 value1 value2 null
"public String toString() {return ""."";}",public String toString return 
"public RestoreDBInstanceFromDBSnapshotRequest(String dBInstanceIdentifier, String dBSnapshotIdentifier) {setDBInstanceIdentifier(dBInstanceIdentifier);setDBSnapshotIdentifier(dBSnapshotIdentifier);}",public RestoreDBInstanceFromDBSnapshotRequestString dBInstanceIdentifier String dBSnapshotIdentifier setDBInstanceIdentifierdBInstanceIdentifiersetDBSnapshotIdentifierdBSnapshotIdentifier
public String getName() {return seqName; },public String getName return seqName 
"public void readFully(byte[] buf) {readFully(buf, 0, buf.length);}",public void readFullybyte buf readFullybuf 0 buflength
public boolean containsKey(Object o) {if(o == null)throw new NullPointerException();return false;},public boolean containsKeyObject o ifo  nullthrow new NullPointerExceptionreturn false
public String toFormulaString() {return FormulaError.REF.getString();},public String toFormulaString return FormulaErrorREFgetString
public History getWorkflowExecutionHistory(GetWorkflowExecutionHistoryRequest request) {request = beforeClientExecution(request);return executeGetWorkflowExecutionHistory(request);},public History getWorkflowExecutionHistoryGetWorkflowExecutionHistoryRequest request request  beforeClientExecutionrequestreturn executeGetWorkflowExecutionHistoryrequest
public DeleteFileSystemPolicyResult deleteFileSystemPolicy(DeleteFileSystemPolicyRequest request) {request = beforeClientExecution(request);return executeDeleteFileSystemPolicy(request);},public DeleteFileSystemPolicyResult deleteFileSystemPolicyDeleteFileSystemPolicyRequest request request  beforeClientExecutionrequestreturn executeDeleteFileSystemPolicyrequest
"public ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {switch (args.length) {case 1:return evaluate(srcRowIndex, srcColumnIndex, args[0]);case 0:return new NumberEval(srcColumnIndex+1);}return ErrorEval.VALUE_INVALID;}",public ValueEval evaluateValueEval args int srcRowIndex int srcColumnIndex switch argslength case 1return evaluatesrcRowIndex srcColumnIndex args0case 0return new NumberEvalsrcColumnIndex1return ErrorEvalVALUEINVALID
public String getFormat(short index) {if (_movedBuiltins) {return _formats.get(index);}if(index == -1) {return null;}String fmt = _formats.size() > index ? _formats.get(index) : null;if (_builtinFormats.length > index && _builtinFormats[index] != null) {if (fmt != null) {return fmt;} else {return _builtinFormats[index];}}return fmt;},public String getFormatshort index if movedBuiltins return formatsgetindexifindex  1 return nullString fmt  formatssize  index  formatsgetindex  nullif builtinFormatslength  index  builtinFormatsindex  null if fmt  null return fmt else return builtinFormatsindexreturn fmt
"public boolean include(RevWalk walker, RevCommit cmit)throws StopWalkException, MissingObjectException,IncorrectObjectTypeException, IOException {count++;if (count > maxCount)throw StopWalkException.INSTANCE;return true;}",public boolean includeRevWalk walker RevCommit cmitthrows StopWalkException MissingObjectExceptionIncorrectObjectTypeException IOException countif count  maxCountthrow StopWalkExceptionINSTANCEreturn true
public final Buffer mark() {mark = position;return this;},public final Buffer mark mark  positionreturn this
public ModifyClientPropertiesResult modifyClientProperties(ModifyClientPropertiesRequest request) {request = beforeClientExecution(request);return executeModifyClientProperties(request);},public ModifyClientPropertiesResult modifyClientPropertiesModifyClientPropertiesRequest request request  beforeClientExecutionrequestreturn executeModifyClientPropertiesrequest
public void stopWalk() {if (parent != null)parent.stopWalk();},public void stopWalk if parent  nullparentstopWalk
"public ObjectId toObjectId() {return isComplete() ? new ObjectId(w1, w2, w3, w4, w5) : null;}",public ObjectId toObjectId return isComplete  new ObjectIdw1 w2 w3 w4 w5  null
public UpdateIntegrationResult updateIntegration(UpdateIntegrationRequest request) {request = beforeClientExecution(request);return executeUpdateIntegration(request);},public UpdateIntegrationResult updateIntegrationUpdateIntegrationRequest request request  beforeClientExecutionrequestreturn executeUpdateIntegrationrequest
public PutDetectorResult putDetector(PutDetectorRequest request) {request = beforeClientExecution(request);return executePutDetector(request);},public PutDetectorResult putDetectorPutDetectorRequest request request  beforeClientExecutionrequestreturn executePutDetectorrequest
"public long getLong(String section, String name, long defaultValue) {return typedGetter.getLong(this, section, null, name, defaultValue);}",public long getLongString section String name long defaultValue return typedGettergetLongthis section null name defaultValue
"public void resetBackgroundImage(){EscherSimpleProperty property = getOptRecord().lookup(EscherPropertyTypes.FILL__PATTERNTEXTURE);if (null != property){EscherBSERecord bse = getPatriarch().getSheet().getWorkbook().getWorkbook().getBSERecord(property.getPropertyValue());bse.setRef(bse.getRef() - 1);getOptRecord().removeEscherProperty(EscherPropertyTypes.FILL__PATTERNTEXTURE);}setPropertyValue(new EscherSimpleProperty( EscherPropertyTypes.FILL__FILLTYPE, false, false, FILL_TYPE_SOLID));}",public void resetBackgroundImageEscherSimpleProperty property  getOptRecordlookupEscherPropertyTypesFILLPATTERNTEXTUREif null  propertyEscherBSERecord bse  getPatriarchgetSheetgetWorkbookgetWorkbookgetBSERecordpropertygetPropertyValuebsesetRefbsegetRef  1getOptRecordremoveEscherPropertyEscherPropertyTypesFILLPATTERNTEXTUREsetPropertyValuenew EscherSimpleProperty EscherPropertyTypesFILLFILLTYPE false false FILLTYPESOLID
"public void reset(DataInput in, long valueCount) {this.in = in;assert valueCount >= 0;this.valueCount = valueCount;off = blockSize;ord = 0;}",public void resetDataInput in long valueCount thisin  inassert valueCount  0thisvalueCount  valueCountoff  blockSizeord  0
public ResetSnapshotAttributeResult resetSnapshotAttribute(ResetSnapshotAttributeRequest request) {request = beforeClientExecution(request);return executeResetSnapshotAttribute(request);},public ResetSnapshotAttributeResult resetSnapshotAttributeResetSnapshotAttributeRequest request request  beforeClientExecutionrequestreturn executeResetSnapshotAttributerequest
public MutableValue duplicate() {MutableValueStr v = new MutableValueStr();v.value.copyBytes(value);v.exists = this.exists;return v;},public MutableValue duplicate MutableValueStr v  new MutableValueStrvvaluecopyBytesvaluevexists  thisexistsreturn v
public int getColumnNumber() { return column; },public int getColumnNumber  return column 
"public TokenStream create(TokenStream input) {if (pattern != null) {input = new PatternKeywordMarkerFilter(input, pattern);}if (protectedWords != null) {input = new SetKeywordMarkerFilter(input, protectedWords);}return input;}",public TokenStream createTokenStream input if pattern  null input  new PatternKeywordMarkerFilterinput patternif protectedWords  null input  new SetKeywordMarkerFilterinput protectedWordsreturn input
"public ElisionFilter(TokenStream input, CharArraySet articles) {super(input);this.articles = articles;}",public ElisionFilterTokenStream input CharArraySet articles superinputthisarticles  articles
"public static int strcmp(String str, char[] a, int start) {int i, d, len = str.length();for (i = 0; i < len; i++) {d = (int) str.charAt(i) - a[start + i];if (d != 0) {return d;}if (a[start + i] == 0) {return d;}}if (a[start + i] != 0) {return -a[start + i];}return 0;}",public static int strcmpString str char a int start int i d len  strlengthfor i  0 i  len i d  int strcharAti  astart  iif d  0 return dif astart  i  0 return dif astart  i  0 return astart  ireturn 0
public NavigableSet<E> descendingSet() {return (descendingSet != null) ? descendingSet: (descendingSet = new TreeSet<E>(backingMap.descendingMap()));},public NavigableSetE descendingSet return descendingSet  null  descendingSet descendingSet  new TreeSetEbackingMapdescendingMap
public DecisionInfo[] getDecisionInfo() {return decisions;},public DecisionInfo getDecisionInfo return decisions
public PushConnection openPush() throws NotSupportedException {throw new NotSupportedException(JGitText.get().pushIsNotSupportedForBundleTransport);},public PushConnection openPush throws NotSupportedException throw new NotSupportedExceptionJGitTextgetpushIsNotSupportedForBundleTransport
public PutRecordResult putRecord(PutRecordRequest request) {request = beforeClientExecution(request);return executePutRecord(request);},public PutRecordResult putRecordPutRecordRequest request request  beforeClientExecutionrequestreturn executePutRecordrequest
public List<? extends Token> getAllTokens() {List<Token> tokens = new ArrayList<Token>();Token t = nextToken();while ( t.getType()!=Token.EOF ) {tokens.add(t);t = nextToken();}return tokens;},public List extends Token getAllTokens ListToken tokens  new ArrayListTokenToken t  nextTokenwhile  tgetTypeTokenEOF  tokensaddtt  nextTokenreturn tokens
public ModifyInstanceCapacityReservationAttributesResult modifyInstanceCapacityReservationAttributes(ModifyInstanceCapacityReservationAttributesRequest request) {request = beforeClientExecution(request);return executeModifyInstanceCapacityReservationAttributes(request);},public ModifyInstanceCapacityReservationAttributesResult modifyInstanceCapacityReservationAttributesModifyInstanceCapacityReservationAttributesRequest request request  beforeClientExecutionrequestreturn executeModifyInstanceCapacityReservationAttributesrequest
"public MoveFacePhotosRequest() {super(""CloudPhoto"", ""2017-07-11"", ""MoveFacePhotos"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public MoveFacePhotosRequest superCloudPhoto 20170711 MoveFacePhotos cloudphotosetProtocolProtocolTypeHTTPS
public RequestSpotFleetResult requestSpotFleet(RequestSpotFleetRequest request) {request = beforeClientExecution(request);return executeRequestSpotFleet(request);},public RequestSpotFleetResult requestSpotFleetRequestSpotFleetRequest request request  beforeClientExecutionrequestreturn executeRequestSpotFleetrequest
public ListApplicationSnapshotsResult listApplicationSnapshots(ListApplicationSnapshotsRequest request) {request = beforeClientExecution(request);return executeListApplicationSnapshots(request);},public ListApplicationSnapshotsResult listApplicationSnapshotsListApplicationSnapshotsRequest request request  beforeClientExecutionrequestreturn executeListApplicationSnapshotsrequest
"public DefaultAcsClient(IClientProfile profile, AlibabaCloudCredentials credentials) {this(profile, new StaticCredentialsProvider(credentials));}",public DefaultAcsClientIClientProfile profile AlibabaCloudCredentials credentials thisprofile new StaticCredentialsProvidercredentials
"public ConcurrentRefUpdateException(String message, Ref ref,RefUpdate.Result rc) {super((rc == null) ? message : message + "". "" + MessageFormat.format(JGitText.get().refUpdateReturnCodeWas, rc));this.rc = rc;this.ref = ref;}",public ConcurrentRefUpdateExceptionString message Ref refRefUpdateResult rc superrc  null  message  message     MessageFormatformatJGitTextgetrefUpdateReturnCodeWas rcthisrc  rcthisref  ref
public DeleteNetworkAclResult deleteNetworkAcl(DeleteNetworkAclRequest request) {request = beforeClientExecution(request);return executeDeleteNetworkAcl(request);},public DeleteNetworkAclResult deleteNetworkAclDeleteNetworkAclRequest request request  beforeClientExecutionrequestreturn executeDeleteNetworkAclrequest
"public ShortBuffer get(short[] dst, int dstOffset, int shortCount) {Arrays.checkOffsetAndCount(dst.length, dstOffset, shortCount);if (shortCount > remaining()) {throw new BufferUnderflowException();}for (int i = dstOffset; i < dstOffset + shortCount; ++i) {dst[i] = get();}return this;}",public ShortBuffer getshort dst int dstOffset int shortCount ArrayscheckOffsetAndCountdstlength dstOffset shortCountif shortCount  remaining throw new BufferUnderflowExceptionfor int i  dstOffset i  dstOffset  shortCount i dsti  getreturn this
"public static SharedValueManager createEmpty() {return new SharedValueManager(new SharedFormulaRecord[0], new CellReference[0], new ArrayRecord[0], new TableRecord[0]);}",public static SharedValueManager createEmpty return new SharedValueManagernew SharedFormulaRecord0 new CellReference0 new ArrayRecord0 new TableRecord0
public DeleteCacheSecurityGroupResult deleteCacheSecurityGroup(DeleteCacheSecurityGroupRequest request) {request = beforeClientExecution(request);return executeDeleteCacheSecurityGroup(request);},public DeleteCacheSecurityGroupResult deleteCacheSecurityGroupDeleteCacheSecurityGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteCacheSecurityGrouprequest
public CreateGroupRequest(String groupName) {setGroupName(groupName);},public CreateGroupRequestString groupName setGroupNamegroupName
public void setParentId(AnyObjectId newParent) {parentIds = new ObjectId[] { newParent.copy() };},public void setParentIdAnyObjectId newParent parentIds  new ObjectId  newParentcopy 
public static boolean hasConflictingAltSet(Collection<BitSet> altsets) {for (BitSet alts : altsets) {if ( alts.cardinality()>1 ) {return true;}}return false;},public static boolean hasConflictingAltSetCollectionBitSet altsets for BitSet alts  altsets if  altscardinality1  return truereturn false
public CommonRpcRequest(String product) {super(product);setAcceptFormat(FormatType.JSON);},public CommonRpcRequestString product superproductsetAcceptFormatFormatTypeJSON
public K next()        { return super.nextEntry().key; },public K next         return supernextEntrykey 
public DeleteTransitGatewayMulticastDomainResult deleteTransitGatewayMulticastDomain(DeleteTransitGatewayMulticastDomainRequest request) {request = beforeClientExecution(request);return executeDeleteTransitGatewayMulticastDomain(request);},public DeleteTransitGatewayMulticastDomainResult deleteTransitGatewayMulticastDomainDeleteTransitGatewayMulticastDomainRequest request request  beforeClientExecutionrequestreturn executeDeleteTransitGatewayMulticastDomainrequest
public DescribeEventsResult describeEvents(DescribeEventsRequest request) {request = beforeClientExecution(request);return executeDescribeEvents(request);},public DescribeEventsResult describeEventsDescribeEventsRequest request request  beforeClientExecutionrequestreturn executeDescribeEventsrequest
public DescribeFleetsResult describeFleets(DescribeFleetsRequest request) {request = beforeClientExecution(request);return executeDescribeFleets(request);},public DescribeFleetsResult describeFleetsDescribeFleetsRequest request request  beforeClientExecutionrequestreturn executeDescribeFleetsrequest
public DescribeDataRepositoryTasksResult describeDataRepositoryTasks(DescribeDataRepositoryTasksRequest request) {request = beforeClientExecution(request);return executeDescribeDataRepositoryTasks(request);},public DescribeDataRepositoryTasksResult describeDataRepositoryTasksDescribeDataRepositoryTasksRequest request request  beforeClientExecutionrequestreturn executeDescribeDataRepositoryTasksrequest
public StartLabelDetectionResult startLabelDetection(StartLabelDetectionRequest request) {request = beforeClientExecution(request);return executeStartLabelDetection(request);},public StartLabelDetectionResult startLabelDetectionStartLabelDetectionRequest request request  beforeClientExecutionrequestreturn executeStartLabelDetectionrequest
public static long getLastCommitGeneration(String[] files) {long max = -1;for (String file : files) {if (file.startsWith(IndexFileNames.SEGMENTS) &&file.startsWith(OLD_SEGMENTS_GEN) == false) {long gen = generationFromSegmentsFileName(file);if (gen > max) {max = gen;}}}return max;},public static long getLastCommitGenerationString files long max  1for String file  files if filestartsWithIndexFileNamesSEGMENTS filestartsWithOLDSEGMENTSGEN  false long gen  generationFromSegmentsFileNamefileif gen  max max  genreturn max
public EnableFastSnapshotRestoresResult enableFastSnapshotRestores(EnableFastSnapshotRestoresRequest request) {request = beforeClientExecution(request);return executeEnableFastSnapshotRestores(request);},public EnableFastSnapshotRestoresResult enableFastSnapshotRestoresEnableFastSnapshotRestoresRequest request request  beforeClientExecutionrequestreturn executeEnableFastSnapshotRestoresrequest
public ListVPCAssociationAuthorizationsResult listVPCAssociationAuthorizations(ListVPCAssociationAuthorizationsRequest request) {request = beforeClientExecution(request);return executeListVPCAssociationAuthorizations(request);},public ListVPCAssociationAuthorizationsResult listVPCAssociationAuthorizationsListVPCAssociationAuthorizationsRequest request request  beforeClientExecutionrequestreturn executeListVPCAssociationAuthorizationsrequest
public Thumbnail(final byte[] thumbnailData){this._thumbnailData = thumbnailData;},public Thumbnailfinal byte thumbnailDatathisthumbnailData  thumbnailData
"public final Explanation explain(BasicStats stats, double tfn) {return Explanation.match((float) (scoreTimes1pTfn(stats) / (1 + tfn)),getClass().getSimpleName() + "", computed as 1 / (tfn + 1) from:"",Explanation.match((float) tfn, ""tfn, normalized term frequency""));}",public final Explanation explainBasicStats stats double tfn return Explanationmatchfloat scoreTimes1pTfnstats  1  tfngetClassgetSimpleName   computed as 1  tfn  1 fromExplanationmatchfloat tfn tfn normalized term frequency
public static String[] parse(String line) {boolean insideQuote = false;ArrayList<String> result = new ArrayList<>();int quoteCount = 0;StringBuilder sb = new StringBuilder();for(int i = 0; i < line.length(); i++) {char c = line.charAt(i);if(c == QUOTE) {insideQuote = !insideQuote;quoteCount++;}if(c == COMMA && !insideQuote) {String value = sb.toString();value = unQuoteUnEscape(value);result.add(value);sb.setLength(0);continue;}sb.append(c);}result.add(sb.toString());if(quoteCount % 2 != 0) {return new String[0];}return result.toArray(new String[result.size()]);},public static String parseString line boolean insideQuote  falseArrayListString result  new ArrayListint quoteCount  0StringBuilder sb  new StringBuilderforint i  0 i  linelength i char c  linecharAtiifc  QUOTE insideQuote  insideQuotequoteCountifc  COMMA  insideQuote String value  sbtoStringvalue  unQuoteUnEscapevalueresultaddvaluesbsetLength0continuesbappendcresultaddsbtoStringifquoteCount  2  0 return new String0return resulttoArraynew Stringresultsize
"public String toString(String field) {StringBuilder buffer = new StringBuilder();buffer.append(""mask("");buffer.append(maskedQuery.toString(field));buffer.append("")"");buffer.append("" as "");buffer.append(this.field);return buffer.toString();}",public String toStringString field StringBuilder buffer  new StringBuilderbufferappendmaskbufferappendmaskedQuerytoStringfieldbufferappendbufferappend as bufferappendthisfieldreturn buffertoString
public static RevFilter create(String pattern) {if (pattern.length() == 0)throw new IllegalArgumentException(JGitText.get().cannotMatchOnEmptyString);if (SubStringRevFilter.safe(pattern))return new SubStringSearch(pattern);return new PatternSearch(pattern);},public static RevFilter createString pattern if patternlength  0throw new IllegalArgumentExceptionJGitTextgetcannotMatchOnEmptyStringif SubStringRevFiltersafepatternreturn new SubStringSearchpatternreturn new PatternSearchpattern
public NotImplementedFunctionException(String functionName) {super(functionName);this.functionName = functionName;},public NotImplementedFunctionExceptionString functionName superfunctionNamethisfunctionName  functionName
public DeleteResourceResult deleteResource(DeleteResourceRequest request) {request = beforeClientExecution(request);return executeDeleteResource(request);},public DeleteResourceResult deleteResourceDeleteResourceRequest request request  beforeClientExecutionrequestreturn executeDeleteResourcerequest
"public PaletteRecord() {PColor[] defaultPalette = createDefaultPalette();_colors.ensureCapacity(defaultPalette.length);Collections.addAll(_colors, defaultPalette);}",public PaletteRecord PColor defaultPalette  createDefaultPalettecolorsensureCapacitydefaultPalettelengthCollectionsaddAllcolors defaultPalette
"public GetRepoBuildLogsRequest() {super(""cr"", ""2016-06-07"", ""GetRepoBuildLogs"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/build/[BuildId]/logs"");setMethod(MethodType.GET);}",public GetRepoBuildLogsRequest supercr 20160607 GetRepoBuildLogs crsetUriPatternreposRepoNamespaceRepoNamebuildBuildIdlogssetMethodMethodTypeGET
"public String toString() {return ""SortedSetDocValuesFacetField(dim="" + dim + "" label="" + label + "")"";}",public String toString return SortedSetDocValuesFacetFielddim  dim   label  label  
"public Break(int Main, int subFrom, int subTo) {this.Main = Main;this.subFrom = subFrom;this.subTo = subTo;}",public Breakint Main int subFrom int subTo thisMain  MainthissubFrom  subFromthissubTo  subTo
public void setParams(String params) {super.setParams(params);docSize = (int) Float.parseFloat(params);},public void setParamsString params supersetParamsparamsdocSize  int FloatparseFloatparams
"public static double pv(double r, double n, double y, double f, boolean t) {double retval = 0;if (r == 0) {retval = -1*((n*y)+f);}else {double r1 = r + 1;retval =(( ( 1 - Math.pow(r1, n) ) / r ) * (t ? r1 : 1)  * y - f)/Math.pow(r1, n);}return retval;}",public static double pvdouble r double n double y double f boolean t double retval  0if r  0 retval  1nyfelse double r1  r  1retval   1  Mathpowr1 n   r   t  r1  1   y  fMathpowr1 nreturn retval
public int compareTo(File another) {return this.getPath().compareTo(another.getPath());},public int compareToFile another return thisgetPathcompareToanothergetPath
public void writeByte(int value) throws IOException {checkWritePrimitiveTypes();primitiveTypes.writeByte(value);},public void writeByteint value throws IOException checkWritePrimitiveTypesprimitiveTypeswriteBytevalue
"public String toString() {StringBuilder buffer = new StringBuilder(""[Data Table - Parent cell is an interior cell in a data table]\n"");buffer.append(""top left row = "").append(getRow()).append(""\n"");buffer.append(""top left col = "").append(getColumn()).append(""\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderData Table  Parent cell is an interior cell in a data tablenbufferappendtop left row  appendgetRowappendnbufferappendtop left col  appendgetColumnappendnreturn buffertoString
public Credential() {this.refreshDate = new Date();},public Credential thisrefreshDate  new Date
"public NavigableMap<K, V> subMap(K fromInclusive, K toExclusive) {return subMap(fromInclusive, INCLUSIVE, toExclusive, EXCLUSIVE);}",public NavigableMapK V subMapK fromInclusive K toExclusive return subMapfromInclusive INCLUSIVE toExclusive EXCLUSIVE
public DescribeLedgerResult describeLedger(DescribeLedgerRequest request) {request = beforeClientExecution(request);return executeDescribeLedger(request);},public DescribeLedgerResult describeLedgerDescribeLedgerRequest request request  beforeClientExecutionrequestreturn executeDescribeLedgerrequest
public boolean isNoPrefix() {return noPrefix;},public boolean isNoPrefix return noPrefix
"public static Policy fromJson(String jsonString) {return fromJson(jsonString, new PolicyReaderOptions());}",public static Policy fromJsonString jsonString return fromJsonjsonString new PolicyReaderOptions
public GetPhoneNumberResult getPhoneNumber(GetPhoneNumberRequest request) {request = beforeClientExecution(request);return executeGetPhoneNumber(request);},public GetPhoneNumberResult getPhoneNumberGetPhoneNumberRequest request request  beforeClientExecutionrequestreturn executeGetPhoneNumberrequest
"public static void writeUnicodeString(LittleEndianOutput out, String value) {int nChars = value.length();out.writeShort(nChars);boolean is16Bit = hasMultibyte(value);out.writeByte(is16Bit ? 0x01 : 0x00);if (is16Bit) {putUnicodeLE(value, out);} else {putCompressedUnicode(value, out);}}",public static void writeUnicodeStringLittleEndianOutput out String value int nChars  valuelengthoutwriteShortnCharsboolean is16Bit  hasMultibytevalueoutwriteByteis16Bit  0x01  0x00if is16Bit putUnicodeLEvalue out else putCompressedUnicodevalue out
public DescribeCoipPoolsResult describeCoipPools(DescribeCoipPoolsRequest request) {request = beforeClientExecution(request);return executeDescribeCoipPools(request);},public DescribeCoipPoolsResult describeCoipPoolsDescribeCoipPoolsRequest request request  beforeClientExecutionrequestreturn executeDescribeCoipPoolsrequest
"public void removeRow(Row row) {HSSFRow hrow = (HSSFRow) row;if (row.getSheet() != this) {throw new IllegalArgumentException(""Specified row does not belong to this sheet"");}for (Cell cell : row) {HSSFCell xcell = (HSSFCell) cell;if (xcell.isPartOfArrayFormulaGroup()) {String msg = ""Row[rownum="" + row.getRowNum() + ""] contains cell(s) included in a multi-cell array formula. You cannot change part of an array."";xcell.tryToDeleteArrayFormula(msg);}}if (_rows.size() > 0) {Integer key = Integer.valueOf(row.getRowNum());HSSFRow removedRow = _rows.remove(key);if (removedRow != row) {throw new IllegalArgumentException(""Specified row does not belong to this sheet"");}if (hrow.getRowNum() == getLastRowNum()) {_lastrow = findLastRow(_lastrow);}if (hrow.getRowNum() == getFirstRowNum()) {_firstrow = findFirstRow(_firstrow);}_sheet.removeRow(hrow.getRowRecord());if(_rows.size() == 0) {_firstrow = -1;_lastrow = -1;}}}",public void removeRowRow row HSSFRow hrow  HSSFRow rowif rowgetSheet  this throw new IllegalArgumentExceptionSpecified row does not belong to this sheetfor Cell cell  row HSSFCell xcell  HSSFCell cellif xcellisPartOfArrayFormulaGroup String msg  Rowrownum  rowgetRowNum   contains cells included in a multicell array formula You cannot change part of an arrayxcelltryToDeleteArrayFormulamsgif rowssize  0 Integer key  IntegervalueOfrowgetRowNumHSSFRow removedRow  rowsremovekeyif removedRow  row throw new IllegalArgumentExceptionSpecified row does not belong to this sheetif hrowgetRowNum  getLastRowNum lastrow  findLastRowlastrowif hrowgetRowNum  getFirstRowNum firstrow  findFirstRowfirstrowsheetremoveRowhrowgetRowRecordifrowssize  0 firstrow  1lastrow  1
"public static TreeFilter create(Collection<TreeFilter> list) {if (list.size() < 2)throw new IllegalArgumentException(JGitText.get().atLeastTwoFiltersNeeded);final TreeFilter[] subfilters = new TreeFilter[list.size()];list.toArray(subfilters);if (subfilters.length == 2)return create(subfilters[0], subfilters[1]);return new List(subfilters);}",public static TreeFilter createCollectionTreeFilter list if listsize  2throw new IllegalArgumentExceptionJGitTextgetatLeastTwoFiltersNeededfinal TreeFilter subfilters  new TreeFilterlistsizelisttoArraysubfiltersif subfilterslength  2return createsubfilters0 subfilters1return new Listsubfilters
public SpanOrTermsBuilder(Analyzer analyzer) {this.analyzer = analyzer;},public SpanOrTermsBuilderAnalyzer analyzer thisanalyzer  analyzer
public boolean isReadOnly() {return byteBuffer.isReadOnly();},public boolean isReadOnly return byteBufferisReadOnly
"public void setValuesCellRange(CellRangeAddressBase range) {Integer count = setVerticalCellRange(dataValues, range);if (count == null){return;}series.setNumValues((short)(int)count);}",public void setValuesCellRangeCellRangeAddressBase range Integer count  setVerticalCellRangedataValues rangeif count  nullreturnseriessetNumValuesshortintcount
public GlobalReplicationGroup modifyGlobalReplicationGroup(ModifyGlobalReplicationGroupRequest request) {request = beforeClientExecution(request);return executeModifyGlobalReplicationGroup(request);},public GlobalReplicationGroup modifyGlobalReplicationGroupModifyGlobalReplicationGroupRequest request request  beforeClientExecutionrequestreturn executeModifyGlobalReplicationGrouprequest
public CreateTrialResult createTrial(CreateTrialRequest request) {request = beforeClientExecution(request);return executeCreateTrial(request);},public CreateTrialResult createTrialCreateTrialRequest request request  beforeClientExecutionrequestreturn executeCreateTrialrequest
public void preWrite() {List<Property> pList = new ArrayList<>();int i=0;for (Property p : _properties) {if (p == null) continue;p.setIndex(i++);pList.add(p);}for (Property p : pList) p.preWrite();},public void preWrite ListProperty pList  new ArrayListint i0for Property p  properties if p  null continuepsetIndexipListaddpfor Property p  pList ppreWrite
public E first() {return backingMap.firstKey();},public E first return backingMapfirstKey
public int available() {return data.length - ptr;},public int available return datalength  ptr
public GetHostedZoneCountResult getHostedZoneCount(GetHostedZoneCountRequest request) {request = beforeClientExecution(request);return executeGetHostedZoneCount(request);},public GetHostedZoneCountResult getHostedZoneCountGetHostedZoneCountRequest request request  beforeClientExecutionrequestreturn executeGetHostedZoneCountrequest
public LookupResult[] getResults() {int size = size();LookupResult[] res = new LookupResult[size];for (int i = size - 1; i >= 0; i--) {res[i] = pop();}return res;},public LookupResult getResults int size  sizeLookupResult res  new LookupResultsizefor int i  size  1 i  0 i resi  popreturn res
"public void add(Transition t) {if (transitions.length < next+3) {transitions = ArrayUtil.grow(transitions, next+3);}transitions[next] = t.dest;transitions[next+1] = t.min;transitions[next+2] = t.max;next += 3;}",public void addTransition t if transitionslength  next3 transitions  ArrayUtilgrowtransitions next3transitionsnext  tdesttransitionsnext1  tmintransitionsnext2  tmaxnext  3
"public String getFormatString(int formatIndex) {String format = null;if (formatIndex >= HSSFDataFormat.getNumberOfBuiltinBuiltinFormats()) {FormatRecord tfr = _customFormatRecords.get(Integer.valueOf(formatIndex));if (tfr == null) {logger.log( POILogger.ERROR, ""Requested format at index "" + formatIndex+ "", but it wasn't found"");} else {format = tfr.getFormatString();}} else {format = HSSFDataFormat.getBuiltinFormat((short) formatIndex);}return format;}",public String getFormatStringint formatIndex String format  nullif formatIndex  HSSFDataFormatgetNumberOfBuiltinBuiltinFormats FormatRecord tfr  customFormatRecordsgetIntegervalueOfformatIndexif tfr  null loggerlog POILoggerERROR Requested format at index   formatIndex  but it wasnt found else format  tfrgetFormatString else format  HSSFDataFormatgetBuiltinFormatshort formatIndexreturn format
public DisassociateDelegateFromResourceResult disassociateDelegateFromResource(DisassociateDelegateFromResourceRequest request) {request = beforeClientExecution(request);return executeDisassociateDelegateFromResource(request);},public DisassociateDelegateFromResourceResult disassociateDelegateFromResourceDisassociateDelegateFromResourceRequest request request  beforeClientExecutionrequestreturn executeDisassociateDelegateFromResourcerequest
"public void readFully(byte[] dst, int offset, int byteCount) throws IOException {primitiveTypes.readFully(dst, offset, byteCount);}",public void readFullybyte dst int offset int byteCount throws IOException primitiveTypesreadFullydst offset byteCount
public StartDocumentClassificationJobResult startDocumentClassificationJob(StartDocumentClassificationJobRequest request) {request = beforeClientExecution(request);return executeStartDocumentClassificationJob(request);},public StartDocumentClassificationJobResult startDocumentClassificationJobStartDocumentClassificationJobRequest request request  beforeClientExecutionrequestreturn executeStartDocumentClassificationJobrequest
public final float[] array() {return protectedArray();},public final float array return protectedArray
"public void prunePacked() throws IOException {ObjectDirectory objdb = repo.getObjectDatabase();Collection<PackFile> packs = objdb.getPacks();File objects = repo.getObjectsDirectory();String[] fanout = objects.list();if (fanout != null && fanout.length > 0) {pm.beginTask(JGitText.get().pruneLoosePackedObjects, fanout.length);try {for (String d : fanout) {checkCancelled();pm.update(1);if (d.length() != 2)continue;String[] entries = new File(objects, d).list();if (entries == null)continue;for (String e : entries) {checkCancelled();if (e.length() != Constants.OBJECT_ID_STRING_LENGTH - 2)continue;ObjectId id;try {id = ObjectId.fromString(d + e);} catch (IllegalArgumentException notAnObject) {continue;}boolean found = false;for (PackFile p : packs) {checkCancelled();if (p.hasObject(id)) {found = true;break;}}if (found)FileUtils.delete(objdb.fileFor(id), FileUtils.RETRY| FileUtils.SKIP_MISSING| FileUtils.IGNORE_ERRORS);}}} finally {pm.endTask();}}}",public void prunePacked throws IOException ObjectDirectory objdb  repogetObjectDatabaseCollectionPackFile packs  objdbgetPacksFile objects  repogetObjectsDirectoryString fanout  objectslistif fanout  null  fanoutlength  0 pmbeginTaskJGitTextgetpruneLoosePackedObjects fanoutlengthtry for String d  fanout checkCancelledpmupdate1if dlength  2continueString entries  new Fileobjects dlistif entries  nullcontinuefor String e  entries checkCancelledif elength  ConstantsOBJECTIDSTRINGLENGTH  2continueObjectId idtry id  ObjectIdfromStringd  e catch IllegalArgumentException notAnObject continueboolean found  falsefor PackFile p  packs checkCancelledif phasObjectid found  truebreakif foundFileUtilsdeleteobjdbfileForid FileUtilsRETRY FileUtilsSKIPMISSING FileUtilsIGNOREERRORS finally pmendTask
public ListJobsByPipelineResult listJobsByPipeline(ListJobsByPipelineRequest request) {request = beforeClientExecution(request);return executeListJobsByPipeline(request);},public ListJobsByPipelineResult listJobsByPipelineListJobsByPipelineRequest request request  beforeClientExecutionrequestreturn executeListJobsByPipelinerequest
"public SaveTaskForSubmittingDomainRealNameVerificationByIdentityCredentialRequest() {super(""Domain"", ""2018-01-29"", ""SaveTaskForSubmittingDomainRealNameVerificationByIdentityCredential"");setMethod(MethodType.POST);}",public SaveTaskForSubmittingDomainRealNameVerificationByIdentityCredentialRequest superDomain 20180129 SaveTaskForSubmittingDomainRealNameVerificationByIdentityCredentialsetMethodMethodTypePOST
public DeleteDhcpOptionsResult deleteDhcpOptions(DeleteDhcpOptionsRequest request) {request = beforeClientExecution(request);return executeDeleteDhcpOptions(request);},public DeleteDhcpOptionsResult deleteDhcpOptionsDeleteDhcpOptionsRequest request request  beforeClientExecutionrequestreturn executeDeleteDhcpOptionsrequest
public String getSheetLastNameByExternSheet(int externSheetIndex) {return _iBook.findSheetLastNameFromExternSheet(externSheetIndex);},public String getSheetLastNameByExternSheetint externSheetIndex return iBookfindSheetLastNameFromExternSheetexternSheetIndex
public InMemorySorter(Comparator<BytesRef> comparator) {this.comparator = comparator;},public InMemorySorterComparatorBytesRef comparator thiscomparator  comparator
public boolean isSymbolic() {return true;},public boolean isSymbolic return true
"public static ValueEval chooseSingleElementFromArea(AreaEval ae,int srcCellRow, int srcCellCol) throws EvaluationException {ValueEval result = chooseSingleElementFromAreaInternal(ae, srcCellRow, srcCellCol);if (result instanceof ErrorEval) {throw new EvaluationException((ErrorEval) result);}return result;}",public static ValueEval chooseSingleElementFromAreaAreaEval aeint srcCellRow int srcCellCol throws EvaluationException ValueEval result  chooseSingleElementFromAreaInternalae srcCellRow srcCellColif result instanceof ErrorEval throw new EvaluationExceptionErrorEval resultreturn result
"public int freeBlocks(int num) {assert num >= 0 : ""free blocks must be >= 0 but was: ""+ num;final int stop;final int count;if (num > freeBlocks) {stop = 0;count = freeBlocks;} else {stop = freeBlocks - num;count = num;}while (freeBlocks > stop) {freeByteBlocks[--freeBlocks] = null;}bytesUsed.addAndGet(-count*blockSize);assert bytesUsed.get() >= 0;return count;}",public int freeBlocksint num assert num  0  free blocks must be  0 but was  numfinal int stopfinal int countif num  freeBlocks stop  0count  freeBlocks else stop  freeBlocks  numcount  numwhile freeBlocks  stop freeByteBlocksfreeBlocks  nullbytesUsedaddAndGetcountblockSizeassert bytesUsedget  0return count
"public final static String htmlEncode(String plainText){if (plainText == null || plainText.length() == 0){return """";}StringBuilder result = new StringBuilder(plainText.length());for (int index=0; index<plainText.length(); index++){char ch = plainText.charAt(index);switch (ch) {case '""':result.append(""&quot;"");break;case '&':result.append(""&amp;"");break;case '<':result.append(""&lt;"");break;case '>':result.append(""&gt;"");break;case '\'':result.append(""&#x27;"");break;case '/':result.append(""&#x2F;"");break;default:result.append(ch);}}return result.toString();}",public final static String htmlEncodeString plainTextif plainText  null  plainTextlength  0return StringBuilder result  new StringBuilderplainTextlengthfor int index0 indexplainTextlength indexchar ch  plainTextcharAtindexswitch ch case resultappendquotbreakcase resultappendampbreakcase resultappendltbreakcase resultappendgtbreakcase resultappendx27breakcase resultappendx2Fbreakdefaultresultappendchreturn resulttoString
public boolean isReuseDeltas() {return reuseDeltas;},public boolean isReuseDeltas return reuseDeltas
public static int headerLength(String codec) {return 9+codec.length();},public static int headerLengthString codec return 9codeclength
public StartCelebrityRecognitionResult startCelebrityRecognition(StartCelebrityRecognitionRequest request) {request = beforeClientExecution(request);return executeStartCelebrityRecognition(request);},public StartCelebrityRecognitionResult startCelebrityRecognitionStartCelebrityRecognitionRequest request request  beforeClientExecutionrequestreturn executeStartCelebrityRecognitionrequest
"public synchronized void write(byte[] buffer, int offset, int length) throws IOException {checkNotClosed();if (buffer == null) {throw new NullPointerException(""buffer == null"");}byte[] internalBuffer = buf;if (length >= internalBuffer.length) {flushInternal();out.write(buffer, offset, length);return;}Arrays.checkOffsetAndCount(buffer.length, offset, length);if (length > (internalBuffer.length - count)) {flushInternal();}System.arraycopy(buffer, offset, internalBuffer, count, length);count += length;}",public synchronized void writebyte buffer int offset int length throws IOException checkNotClosedif buffer  null throw new NullPointerExceptionbuffer  nullbyte internalBuffer  bufif length  internalBufferlength flushInternaloutwritebuffer offset lengthreturnArrayscheckOffsetAndCountbufferlength offset lengthif length  internalBufferlength  count flushInternalSystemarraycopybuffer offset internalBuffer count lengthcount  length
public int readRecordSID() {return _lei.readUShort();},public int readRecordSID return leireadUShort
public ListProfileTimesResult listProfileTimes(ListProfileTimesRequest request) {request = beforeClientExecution(request);return executeListProfileTimes(request);},public ListProfileTimesResult listProfileTimesListProfileTimesRequest request request  beforeClientExecutionrequestreturn executeListProfileTimesrequest
public RevFilter clone() {final RevFilter[] s = new RevFilter[subfilters.length];for (int i = 0; i < s.length; i++)s[i] = subfilters[i].clone();return new List(s);},public RevFilter clone final RevFilter s  new RevFiltersubfilterslengthfor int i  0 i  slength isi  subfiltersiclonereturn new Lists
public Cluster modifyCluster(ModifyClusterRequest request) {request = beforeClientExecution(request);return executeModifyCluster(request);},public Cluster modifyClusterModifyClusterRequest request request  beforeClientExecutionrequestreturn executeModifyClusterrequest
public GetRouteResponsesResult getRouteResponses(GetRouteResponsesRequest request) {request = beforeClientExecution(request);return executeGetRouteResponses(request);},public GetRouteResponsesResult getRouteResponsesGetRouteResponsesRequest request request  beforeClientExecutionrequestreturn executeGetRouteResponsesrequest
"synchronized public QueryMaker getQueryMaker(ReadTask readTask) {Class<? extends ReadTask> readTaskClass = readTask.getClass();QueryMaker qm = readTaskQueryMaker.get(readTaskClass);if (qm == null) {try {qm = qmkrClass.getConstructor().newInstance();qm.setConfig(config);} catch (Exception e) {throw new RuntimeException(e);}readTaskQueryMaker.put(readTaskClass,qm);}return qm;}",synchronized public QueryMaker getQueryMakerReadTask readTask Class extends ReadTask readTaskClass  readTaskgetClassQueryMaker qm  readTaskQueryMakergetreadTaskClassif qm  null try qm  qmkrClassgetConstructornewInstanceqmsetConfigconfig catch Exception e throw new RuntimeExceptionereadTaskQueryMakerputreadTaskClassqmreturn qm
"public boolean promptYesNo(String msg) {CredentialItem.YesNoType v = new CredentialItem.YesNoType(msg);return provider.get(uri, v) && v.getValue();}",public boolean promptYesNoString msg CredentialItemYesNoType v  new CredentialItemYesNoTypemsgreturn providergeturi v  vgetValue
"public String utf8ToString() {final char[] ref = new char[length];final int len = UnicodeUtil.UTF8toUTF16(bytes, offset, length, ref);return new String(ref, 0, len);}",public String utf8ToString final char ref  new charlengthfinal int len  UnicodeUtilUTF8toUTF16bytes offset length refreturn new Stringref 0 len
public ListCandidatesForAutoMLJobResult listCandidatesForAutoMLJob(ListCandidatesForAutoMLJobRequest request) {request = beforeClientExecution(request);return executeListCandidatesForAutoMLJob(request);},public ListCandidatesForAutoMLJobResult listCandidatesForAutoMLJobListCandidatesForAutoMLJobRequest request request  beforeClientExecutionrequestreturn executeListCandidatesForAutoMLJobrequest
public String toFormulaString(FormulaRenderingWorkbook book) {return book.resolveNameXText(this);},public String toFormulaStringFormulaRenderingWorkbook book return bookresolveNameXTextthis
public UpdateSkillGroupResult updateSkillGroup(UpdateSkillGroupRequest request) {request = beforeClientExecution(request);return executeUpdateSkillGroup(request);},public UpdateSkillGroupResult updateSkillGroupUpdateSkillGroupRequest request request  beforeClientExecutionrequestreturn executeUpdateSkillGrouprequest
"public String getValue() {return RawParseUtils.decode(enc, buffer, valStart, valEnd);}",public String getValue return RawParseUtilsdecodeenc buffer valStart valEnd
public ListAssociatedFleetsResult listAssociatedFleets(ListAssociatedFleetsRequest request) {request = beforeClientExecution(request);return executeListAssociatedFleets(request);},public ListAssociatedFleetsResult listAssociatedFleetsListAssociatedFleetsRequest request request  beforeClientExecutionrequestreturn executeListAssociatedFleetsrequest
public void removeLastChild() {if ( children!=null ) {children.remove(children.size()-1);}},public void removeLastChild if  childrennull  childrenremovechildrensize1
"public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long byte0 = blocks[blocksOffset++] & 0xFF;final long byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 6) | (byte1 >>> 2);final long byte2 = blocks[blocksOffset++] & 0xFF;final long byte3 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 3) << 12) | (byte2 << 4) | (byte3 >>> 4);final long byte4 = blocks[blocksOffset++] & 0xFF;final long byte5 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte3 & 15) << 10) | (byte4 << 2) | (byte5 >>> 6);final long byte6 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte5 & 63) << 8) | byte6;}}",public void decodebyte blocks int blocksOffset long values int valuesOffset int iterations for int i  0 i  iterations i final long byte0  blocksblocksOffset  0xFFfinal long byte1  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  6  byte1  2final long byte2  blocksblocksOffset  0xFFfinal long byte3  blocksblocksOffset  0xFFvaluesvaluesOffset  byte1  3  12  byte2  4  byte3  4final long byte4  blocksblocksOffset  0xFFfinal long byte5  blocksblocksOffset  0xFFvaluesvaluesOffset  byte3  15  10  byte4  2  byte5  6final long byte6  blocksblocksOffset  0xFFvaluesvaluesOffset  byte5  63  8  byte6
"public String describeParams() {StringBuilder sb = new StringBuilder();sb.append(""\t"").append(""maxQueryTerms  : "").append(maxQueryTerms).append(""\n"");sb.append(""\t"").append(""minWordLen     : "").append(minWordLen).append(""\n"");sb.append(""\t"").append(""maxWordLen     : "").append(maxWordLen).append(""\n"");sb.append(""\t"").append(""fieldNames     : "");String delim = """";for (String fieldName : fieldNames) {sb.append(delim).append(fieldName);delim = "", "";}sb.append(""\n"");sb.append(""\t"").append(""boost          : "").append(boost).append(""\n"");sb.append(""\t"").append(""minTermFreq    : "").append(minTermFreq).append(""\n"");sb.append(""\t"").append(""minDocFreq     : "").append(minDocFreq).append(""\n"");return sb.toString();}",public String describeParams StringBuilder sb  new StringBuildersbappendtappendmaxQueryTerms   appendmaxQueryTermsappendnsbappendtappendminWordLen      appendminWordLenappendnsbappendtappendmaxWordLen      appendmaxWordLenappendnsbappendtappendfieldNames      String delim  for String fieldName  fieldNames sbappenddelimappendfieldNamedelim   sbappendnsbappendtappendboost           appendboostappendnsbappendtappendminTermFreq     appendminTermFreqappendnsbappendtappendminDocFreq      appendminDocFreqappendnreturn sbtoString
public RunScheduledInstancesResult runScheduledInstances(RunScheduledInstancesRequest request) {request = beforeClientExecution(request);return executeRunScheduledInstances(request);},public RunScheduledInstancesResult runScheduledInstancesRunScheduledInstancesRequest request request  beforeClientExecutionrequestreturn executeRunScheduledInstancesrequest
public static boolean isValidExcelDate(double value){return (value > -Double.MIN_VALUE);},public static boolean isValidExcelDatedouble valuereturn value  DoubleMINVALUE
public CreateBranchCommand setForce(boolean force) {checkCallable();this.force = force;return this;},public CreateBranchCommand setForceboolean force checkCallablethisforce  forcereturn this
"public AbstractEscherHolderRecord(RecordInputStream in) {if (! DESERIALISE ) {rawDataContainer.concatenate(in.readRemainder());} else {byte[] data = in.readAllContinuedRemainder();convertToEscherRecords( 0, data.length, data );}}",public AbstractEscherHolderRecordRecordInputStream in if  DESERIALISE  rawDataContainerconcatenateinreadRemainder else byte data  inreadAllContinuedRemainderconvertToEscherRecords 0 datalength data 
public int next(int n) {currentSentence += n;if (n < 0) {if (text.getIndex() == text.getEndIndex()) {++currentSentence;}if (currentSentence < 0) {currentSentence = 0;text.setIndex(text.getBeginIndex());return DONE;} else {text.setIndex(sentenceStarts[currentSentence]);}} else if (n > 0) {if (currentSentence >= sentenceStarts.length) {currentSentence = sentenceStarts.length - 1;text.setIndex(text.getEndIndex());return DONE;} else {text.setIndex(sentenceStarts[currentSentence]);}}return current();},public int nextint n currentSentence  nif n  0 if textgetIndex  textgetEndIndex currentSentenceif currentSentence  0 currentSentence  0textsetIndextextgetBeginIndexreturn DONE else textsetIndexsentenceStartscurrentSentence else if n  0 if currentSentence  sentenceStartslength currentSentence  sentenceStartslength  1textsetIndextextgetEndIndexreturn DONE else textsetIndexsentenceStartscurrentSentencereturn current
"public boolean equals(Object obj) {if (this == obj) return true;if (obj == null) return false;if (getClass() != obj.getClass()) return false;RunAutomaton other = (RunAutomaton) obj;if (alphabetSize != other.alphabetSize) return false;if (size != other.size) return false;if (!Arrays.equals(points, other.points)) return false;if (!accept.equals(other.accept)) return false;if (!Arrays.equals(transitions, other.transitions)) return false;return true;}",public boolean equalsObject obj if this  obj return trueif obj  null return falseif getClass  objgetClass return falseRunAutomaton other  RunAutomaton objif alphabetSize  otheralphabetSize return falseif size  othersize return falseif Arraysequalspoints otherpoints return falseif acceptequalsotheraccept return falseif Arraysequalstransitions othertransitions return falsereturn true
public void setOffset(long offset) {this.offset = offset;},public void setOffsetlong offset thisoffset  offset
public DescribeKeyPairsResult describeKeyPairs() {return describeKeyPairs(new DescribeKeyPairsRequest());},public DescribeKeyPairsResult describeKeyPairs return describeKeyPairsnew DescribeKeyPairsRequest
public ParseTree get(String label) {List<ParseTree> parseTrees = labels.get(label);if ( parseTrees==null || parseTrees.size()==0 ) {return null;}return parseTrees.get( parseTrees.size()-1 ); },public ParseTree getString label ListParseTree parseTrees  labelsgetlabelif  parseTreesnull  parseTreessize0  return nullreturn parseTreesget parseTreessize1  
public ListRecordsResult listRecords(ListRecordsRequest request) {request = beforeClientExecution(request);return executeListRecords(request);},public ListRecordsResult listRecordsListRecordsRequest request request  beforeClientExecutionrequestreturn executeListRecordsrequest
public DetectStackResourceDriftResult detectStackResourceDrift(DetectStackResourceDriftRequest request) {request = beforeClientExecution(request);return executeDetectStackResourceDrift(request);},public DetectStackResourceDriftResult detectStackResourceDriftDetectStackResourceDriftRequest request request  beforeClientExecutionrequestreturn executeDetectStackResourceDriftrequest
public String encodeText(String originalText){return htmlEncode(originalText);},public String encodeTextString originalTextreturn htmlEncodeoriginalText
public Collection<ParseTree> evaluate(ParseTree t) {if ( invert ) return new ArrayList<ParseTree>(); return Trees.getDescendants(t);},public CollectionParseTree evaluateParseTree t if  invert  return new ArrayListParseTree return TreesgetDescendantst
public DeleteUsagePlanKeyResult deleteUsagePlanKey(DeleteUsagePlanKeyRequest request) {request = beforeClientExecution(request);return executeDeleteUsagePlanKey(request);},public DeleteUsagePlanKeyResult deleteUsagePlanKeyDeleteUsagePlanKeyRequest request request  beforeClientExecutionrequestreturn executeDeleteUsagePlanKeyrequest
public String getLocalName() {return localName;},public String getLocalName return localName
public DeleteDocumentResult deleteDocument(DeleteDocumentRequest request) {request = beforeClientExecution(request);return executeDeleteDocument(request);},public DeleteDocumentResult deleteDocumentDeleteDocumentRequest request request  beforeClientExecutionrequestreturn executeDeleteDocumentrequest
public int getExternalSheetIndex(String sheetName) {int sheetIndex = _uBook.getSheetIndex(sheetName);return _iBook.checkExternSheet(sheetIndex);},public int getExternalSheetIndexString sheetName int sheetIndex  uBookgetSheetIndexsheetNamereturn iBookcheckExternSheetsheetIndex
public IdentityEncoder(Charset charset) {this.charset = charset;},public IdentityEncoderCharset charset thischarset  charset
"public static SupBookRecord createInternalReferences(short numberOfSheets) {return new SupBookRecord(false, numberOfSheets);}",public static SupBookRecord createInternalReferencesshort numberOfSheets return new SupBookRecordfalse numberOfSheets
public DBInstance createDBInstanceReadReplica(CreateDBInstanceReadReplicaRequest request) {request = beforeClientExecution(request);return executeCreateDBInstanceReadReplica(request);},public DBInstance createDBInstanceReadReplicaCreateDBInstanceReadReplicaRequest request request  beforeClientExecutionrequestreturn executeCreateDBInstanceReadReplicarequest
public DescribePartnerEventSourceResult describePartnerEventSource(DescribePartnerEventSourceRequest request) {request = beforeClientExecution(request);return executeDescribePartnerEventSource(request);},public DescribePartnerEventSourceResult describePartnerEventSourceDescribePartnerEventSourceRequest request request  beforeClientExecutionrequestreturn executeDescribePartnerEventSourcerequest
public EnterStandbyResult enterStandby(EnterStandbyRequest request) {request = beforeClientExecution(request);return executeEnterStandby(request);},public EnterStandbyResult enterStandbyEnterStandbyRequest request request  beforeClientExecutionrequestreturn executeEnterStandbyrequest
"public ParseException generateParseException() {jj_expentries.clear();boolean[] la1tokens = new boolean[24];if (jj_kind >= 0) {la1tokens[jj_kind] = true;jj_kind = -1;}for (int i = 0; i < 10; i++) {if (jj_la1[i] == jj_gen) {for (int j = 0; j < 32; j++) {if ((jj_la1_0[i] & (1<<j)) != 0) {la1tokens[j] = true;}}}}for (int i = 0; i < 24; i++) {if (la1tokens[i]) {jj_expentry = new int[1];jj_expentry[0] = i;jj_expentries.add(jj_expentry);}}jj_endpos = 0;jj_rescan_token();jj_add_error_token(0, 0);int[][] exptokseq = new int[jj_expentries.size()][];for (int i = 0; i < jj_expentries.size(); i++) {exptokseq[i] = jj_expentries.get(i);}return new ParseException(token, exptokseq, tokenImage);}",public ParseException generateParseException jjexpentriesclearboolean la1tokens  new boolean24if jjkind  0 la1tokensjjkind  truejjkind  1for int i  0 i  10 i if jjla1i  jjgen for int j  0 j  32 j if jjla10i  1j  0 la1tokensj  truefor int i  0 i  24 i if la1tokensi jjexpentry  new int1jjexpentry0  ijjexpentriesaddjjexpentryjjendpos  0jjrescantokenjjadderrortoken0 0int exptokseq  new intjjexpentriessizefor int i  0 i  jjexpentriessize i exptokseqi  jjexpentriesgetireturn new ParseExceptiontoken exptokseq tokenImage
public CreateCloudFrontOriginAccessIdentityRequest(CloudFrontOriginAccessIdentityConfig cloudFrontOriginAccessIdentityConfig) {setCloudFrontOriginAccessIdentityConfig(cloudFrontOriginAccessIdentityConfig);},public CreateCloudFrontOriginAccessIdentityRequestCloudFrontOriginAccessIdentityConfig cloudFrontOriginAccessIdentityConfig setCloudFrontOriginAccessIdentityConfigcloudFrontOriginAccessIdentityConfig
public ResetFpgaImageAttributeResult resetFpgaImageAttribute(ResetFpgaImageAttributeRequest request) {request = beforeClientExecution(request);return executeResetFpgaImageAttribute(request);},public ResetFpgaImageAttributeResult resetFpgaImageAttributeResetFpgaImageAttributeRequest request request  beforeClientExecutionrequestreturn executeResetFpgaImageAttributerequest
public void serialize(ContinuableRecordOutput out) {out.writeInt(_numStrings);out.writeInt(_numUniqueStrings);for ( int k = 0; k < strings.size(); k++ ){if (k % ExtSSTRecord.DEFAULT_BUCKET_SIZE == 0){int rOff = out.getTotalSize();int index = k/ExtSSTRecord.DEFAULT_BUCKET_SIZE;if (index < ExtSSTRecord.MAX_BUCKETS) {bucketAbsoluteOffsets[index] = rOff;bucketRelativeOffsets[index] = rOff;}}UnicodeString s = getUnicodeString(k);s.serialize(out);}},public void serializeContinuableRecordOutput out outwriteIntnumStringsoutwriteIntnumUniqueStringsfor  int k  0 k  stringssize k if k  ExtSSTRecordDEFAULTBUCKETSIZE  0int rOff  outgetTotalSizeint index  kExtSSTRecordDEFAULTBUCKETSIZEif index  ExtSSTRecordMAXBUCKETS bucketAbsoluteOffsetsindex  rOffbucketRelativeOffsetsindex  rOffUnicodeString s  getUnicodeStringksserializeout
public DeleteGroupMembershipResult deleteGroupMembership(DeleteGroupMembershipRequest request) {request = beforeClientExecution(request);return executeDeleteGroupMembership(request);},public DeleteGroupMembershipResult deleteGroupMembershipDeleteGroupMembershipRequest request request  beforeClientExecutionrequestreturn executeDeleteGroupMembershiprequest
public GetHostedZoneCountResult getHostedZoneCount() {return getHostedZoneCount(new GetHostedZoneCountRequest());},public GetHostedZoneCountResult getHostedZoneCount return getHostedZoneCountnew GetHostedZoneCountRequest
"public NameXPtg getNameXPtg(String name, int sheetRefIndex) {for (int i = 0; i < _externalBookBlocks.length; i++) {int definedNameIndex = _externalBookBlocks[i].getIndexOfName(name);if (definedNameIndex < 0) {continue;}int thisSheetRefIndex = findRefIndexFromExtBookIndex(i);if (thisSheetRefIndex >= 0) {if (sheetRefIndex == -1 || thisSheetRefIndex == sheetRefIndex) {return new NameXPtg(thisSheetRefIndex, definedNameIndex);}}}return null;}",public NameXPtg getNameXPtgString name int sheetRefIndex for int i  0 i  externalBookBlockslength i int definedNameIndex  externalBookBlocksigetIndexOfNamenameif definedNameIndex  0 continueint thisSheetRefIndex  findRefIndexFromExtBookIndexiif thisSheetRefIndex  0 if sheetRefIndex  1  thisSheetRefIndex  sheetRefIndex return new NameXPtgthisSheetRefIndex definedNameIndexreturn null
public E pop() {return removeFirstImpl();},public E pop return removeFirstImpl
public void set(ET object) {if (expectedModCount == list.modCount) {if (lastLink != null) {lastLink.data = object;} else {throw new IllegalStateException();}} else {throw new ConcurrentModificationException();}},public void setET object if expectedModCount  listmodCount if lastLink  null lastLinkdata  object else throw new IllegalStateException else throw new ConcurrentModificationException
"public ElisionFilterFactory(Map<String,String> args) {super(args);articlesFile = get(args, ""articles"");ignoreCase = getBoolean(args, ""ignoreCase"", false);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public ElisionFilterFactoryMapStringString args superargsarticlesFile  getargs articlesignoreCase  getBooleanargs ignoreCase falseif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public int[] grow() {final int[] ord = super.grow();if (start.length < ord.length) {start = ArrayUtil.grow(start, ord.length);end = ArrayUtil.grow(end, ord.length);freq = ArrayUtil.grow(freq, ord.length);}assert start.length >= ord.length;assert end.length >= ord.length;assert freq.length >= ord.length;return ord;}",public int grow final int ord  supergrowif startlength  ordlength start  ArrayUtilgrowstart ordlengthend  ArrayUtilgrowend ordlengthfreq  ArrayUtilgrowfreq ordlengthassert startlength  ordlengthassert endlength  ordlengthassert freqlength  ordlengthreturn ord
public GetPersonalizedRankingResult getPersonalizedRanking(GetPersonalizedRankingRequest request) {request = beforeClientExecution(request);return executeGetPersonalizedRanking(request);},public GetPersonalizedRankingResult getPersonalizedRankingGetPersonalizedRankingRequest request request  beforeClientExecutionrequestreturn executeGetPersonalizedRankingrequest
"public ObjectId getObjectId() {return ObjectId.fromRaw(idBuffer(), idOffset());}",public ObjectId getObjectId return ObjectIdfromRawidBuffer idOffset
public void serialize(LittleEndianOutput out) {out.writeInt(getFirstRow());out.writeInt(getLastRow());out.writeShort(getFirstCol());out.writeShort(getLastCol());out.writeShort(( short ) 0);},public void serializeLittleEndianOutput out outwriteIntgetFirstRowoutwriteIntgetLastRowoutwriteShortgetFirstColoutwriteShortgetLastColoutwriteShort short  0
public RmCommand(Repository repo) {super(repo);filepatterns = new LinkedList<>();},public RmCommandRepository repo superrepofilepatterns  new LinkedList
"public void recover(Parser recognizer, RecognitionException e) {for (ParserRuleContext context = recognizer.getContext(); context != null; context = context.getParent()) {context.exception = e;}throw new ParseCancellationException(e);}",public void recoverParser recognizer RecognitionException e for ParserRuleContext context  recognizergetContext context  null context  contextgetParent contextexception  ethrow new ParseCancellationExceptione
"public static BATBlock createBATBlock(final POIFSBigBlockSize bigBlockSize, ByteBuffer data){BATBlock block = new BATBlock(bigBlockSize);byte[] buffer = new byte[LittleEndian.INT_SIZE];for(int i=0; i<block._values.length; i++) {data.get(buffer);block._values[i] = LittleEndian.getInt(buffer);}block.recomputeFree();return block;}",public static BATBlock createBATBlockfinal POIFSBigBlockSize bigBlockSize ByteBuffer dataBATBlock block  new BATBlockbigBlockSizebyte buffer  new byteLittleEndianINTSIZEforint i0 iblockvalueslength i datagetbufferblockvaluesi  LittleEndiangetIntbufferblockrecomputeFreereturn block
"public byte[] toByteArray() throws IOException {final long len = length();if (Integer.MAX_VALUE < len)throw new OutOfMemoryError(JGitText.get().lengthExceedsMaximumArraySize);final byte[] out = new byte[(int) len];int outPtr = 0;for (Block b : blocks) {System.arraycopy(b.buffer, 0, out, outPtr, b.count);outPtr += b.count;}return out;}",public byte toByteArray throws IOException final long len  lengthif IntegerMAXVALUE  lenthrow new OutOfMemoryErrorJGitTextgetlengthExceedsMaximumArraySizefinal byte out  new byteint lenint outPtr  0for Block b  blocks Systemarraycopybbuffer 0 out outPtr bcountoutPtr  bcountreturn out
public short clearShort(final short holder){return ( short ) clear(holder);},public short clearShortfinal short holderreturn  short  clearholder
"public final String toString() {StringBuilder sb = new StringBuilder();String recordName = getRecordName();sb.append(""["").append(recordName).append(""]\n"");sb.append(""    .row    = "").append(HexDump.shortToHex(getRow())).append(""\n"");sb.append(""    .col    = "").append(HexDump.shortToHex(getColumn())).append(""\n"");sb.append(""    .xfindex= "").append(HexDump.shortToHex(getXFIndex())).append(""\n"");appendValueText(sb);sb.append(""\n"");sb.append(""[/"").append(recordName).append(""]\n"");return sb.toString();}",public final String toString StringBuilder sb  new StringBuilderString recordName  getRecordNamesbappendappendrecordNameappendnsbappend    row     appendHexDumpshortToHexgetRowappendnsbappend    col     appendHexDumpshortToHexgetColumnappendnsbappend    xfindex appendHexDumpshortToHexgetXFIndexappendnappendValueTextsbsbappendnsbappendappendrecordNameappendnreturn sbtoString
public IllegalFormatCodePointException(int c) {this.c = c;},public IllegalFormatCodePointExceptionint c thisc  c
"public CharSequence toQueryString(EscapeQuerySyntax escapeSyntaxParser) {return ""@"" + this.schema + "":'"" + this.value + ""'"";}",public CharSequence toQueryStringEscapeQuerySyntax escapeSyntaxParser return   thisschema    thisvalue  
"public ValueEval evaluate(ValueEval[] args, OperationEvaluationContext ec) {if (args.length != 2) {return ErrorEval.VALUE_INVALID;}try {double startDateAsNumber = NumericFunction.singleOperandEvaluate(args[0], ec.getRowIndex(), ec.getColumnIndex());int months = (int) NumericFunction.singleOperandEvaluate(args[1], ec.getRowIndex(), ec.getColumnIndex());if (startDateAsNumber >= 0.0 && startDateAsNumber < 1.0) {startDateAsNumber = 1.0;}Date startDate = DateUtil.getJavaDate(startDateAsNumber, false);Calendar cal = LocaleUtil.getLocaleCalendar();cal.setTime(startDate);cal.clear(Calendar.HOUR);cal.set(Calendar.HOUR_OF_DAY, 0);cal.clear(Calendar.MINUTE);cal.clear(Calendar.SECOND);cal.clear(Calendar.MILLISECOND);cal.add(Calendar.MONTH, months + 1);cal.set(Calendar.DAY_OF_MONTH, 1);cal.add(Calendar.DAY_OF_MONTH, -1);return new NumberEval(DateUtil.getExcelDate(cal.getTime()));} catch (EvaluationException e) {return e.getErrorEval();}}",public ValueEval evaluateValueEval args OperationEvaluationContext ec if argslength  2 return ErrorEvalVALUEINVALIDtry double startDateAsNumber  NumericFunctionsingleOperandEvaluateargs0 ecgetRowIndex ecgetColumnIndexint months  int NumericFunctionsingleOperandEvaluateargs1 ecgetRowIndex ecgetColumnIndexif startDateAsNumber  00  startDateAsNumber  10 startDateAsNumber  10Date startDate  DateUtilgetJavaDatestartDateAsNumber falseCalendar cal  LocaleUtilgetLocaleCalendarcalsetTimestartDatecalclearCalendarHOURcalsetCalendarHOUROFDAY 0calclearCalendarMINUTEcalclearCalendarSECONDcalclearCalendarMILLISECONDcaladdCalendarMONTH months  1calsetCalendarDAYOFMONTH 1caladdCalendarDAYOFMONTH 1return new NumberEvalDateUtilgetExcelDatecalgetTime catch EvaluationException e return egetErrorEval
"public UnicodeString getSSTString(int str) {if (sst == null) {insertSST();}UnicodeString retval = sst.getString(str);LOG.log(DEBUG, ""Returning SST for index="", str, "" String= "", retval);return retval;}",public UnicodeString getSSTStringint str if sst  null insertSSTUnicodeString retval  sstgetStringstrLOGlogDEBUG Returning SST for index str  String  retvalreturn retval
"public String quote(String in) {final StringBuilder r = new StringBuilder();r.append('\'');int start = 0, i = 0;for (; i < in.length(); i++) {switch (in.charAt(i)) {case '\'':case '!':r.append(in, start, i);r.append('\'');r.append('\\');r.append(in.charAt(i));r.append('\'');start = i + 1;break;}}r.append(in, start, i);r.append('\'');return r.toString();}",public String quoteString in final StringBuilder r  new StringBuilderrappendint start  0 i  0for  i  inlength i switch incharAti case case rappendin start irappendrappendrappendincharAtirappendstart  i  1breakrappendin start irappendreturn rtoString
"public void clear() {lastElement = 0;currentOffset = 0;Arrays.fill(offsets, 0);pool.reset(false, true); }",public void clear lastElement  0currentOffset  0Arraysfilloffsets 0poolresetfalse true 
"public ReplaceableItem(String name, java.util.List<ReplaceableAttribute> attributes) {setName(name);setAttributes(attributes);}",public ReplaceableItemString name javautilListReplaceableAttribute attributes setNamenamesetAttributesattributes
public int getScore() {return score;},public int getScore return score
public IrishLowerCaseFilter(TokenStream in) {super(in);},public IrishLowerCaseFilterTokenStream in superin
"public synchronized void setSecondaryProgress(int secondaryProgress) {if (mIndeterminate) {return;}if (secondaryProgress < 0) {secondaryProgress = 0;}if (secondaryProgress > mMax) {secondaryProgress = mMax;}if (secondaryProgress != mSecondaryProgress) {mSecondaryProgress = secondaryProgress;refreshProgress(R.id.secondaryProgress, mSecondaryProgress, false);}}",public synchronized void setSecondaryProgressint secondaryProgress if mIndeterminate returnif secondaryProgress  0 secondaryProgress  0if secondaryProgress  mMax secondaryProgress  mMaxif secondaryProgress  mSecondaryProgress mSecondaryProgress  secondaryProgressrefreshProgressRidsecondaryProgress mSecondaryProgress false
"public static byte[] grow(byte[] array) {return grow(array, 1 + array.length);}",public static byte growbyte array return growarray 1  arraylength
"public List<Token> getHiddenTokensToRight(int tokenIndex) {return getHiddenTokensToRight(tokenIndex, -1);}",public ListToken getHiddenTokensToRightint tokenIndex return getHiddenTokensToRighttokenIndex 1
public DataValidityTable() {_headerRec = new DVALRecord();_validationList = new ArrayList<>();},public DataValidityTable headerRec  new DVALRecordvalidationList  new ArrayList
public EvaluationException(ErrorEval errorEval) {_errorEval = errorEval;},public EvaluationExceptionErrorEval errorEval errorEval  errorEval
"public UpdateConfigurationTemplateRequest(String applicationName, String templateName) {setApplicationName(applicationName);setTemplateName(templateName);}",public UpdateConfigurationTemplateRequestString applicationName String templateName setApplicationNameapplicationNamesetTemplateNametemplateName
public DescribeAvailabilityZonesResult describeAvailabilityZones(DescribeAvailabilityZonesRequest request) {request = beforeClientExecution(request);return executeDescribeAvailabilityZones(request);},public DescribeAvailabilityZonesResult describeAvailabilityZonesDescribeAvailabilityZonesRequest request request  beforeClientExecutionrequestreturn executeDescribeAvailabilityZonesrequest
public static int idealShortArraySize(int need) {return idealByteArraySize(need * 2) / 2;},public static int idealShortArraySizeint need return idealByteArraySizeneed  2  2
"public NumericPayloadTokenFilterFactory(Map<String, String> args) {super(args);payload = requireFloat(args, ""payload"");typeMatch = require(args, ""typeMatch"");if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public NumericPayloadTokenFilterFactoryMapString String args superargspayload  requireFloatargs payloadtypeMatch  requireargs typeMatchif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {values[valuesOffset++] = blocks[blocksOffset++] & 0xFF;}}",public void decodebyte blocks int blocksOffset long values int valuesOffset int iterations for int j  0 j  iterations j valuesvaluesOffset  blocksblocksOffset  0xFF
public DescribeResourcePermissionsResult describeResourcePermissions(DescribeResourcePermissionsRequest request) {request = beforeClientExecution(request);return executeDescribeResourcePermissions(request);},public DescribeResourcePermissionsResult describeResourcePermissionsDescribeResourcePermissionsRequest request request  beforeClientExecutionrequestreturn executeDescribeResourcePermissionsrequest
"public TokenStream create(TokenStream input) {return map.fst == null ? input : new SynonymFilter(input, map, ignoreCase);}",public TokenStream createTokenStream input return mapfst  null  input  new SynonymFilterinput map ignoreCase
public List<String> getRuleInvocationStack() {return getRuleInvocationStack(_ctx);},public ListString getRuleInvocationStack return getRuleInvocationStackctx
"public void write(String s) {reserve(s.length());s.getChars(0,s.length(),buf, len);len +=s.length();}",public void writeString s reserveslengthsgetChars0slengthbuf lenlen slength
public void clear() {map.clear();},public void clear mapclear
public DeleteWorkteamResult deleteWorkteam(DeleteWorkteamRequest request) {request = beforeClientExecution(request);return executeDeleteWorkteam(request);},public DeleteWorkteamResult deleteWorkteamDeleteWorkteamRequest request request  beforeClientExecutionrequestreturn executeDeleteWorkteamrequest
"public String toString() {return ""("" + a.toString() + "" OR "" + b.toString() + "")"";}",public String toString return   atoString   OR   btoString  
public TreeFilter clone() {final TreeFilter[] s = new TreeFilter[subfilters.length];for (int i = 0; i < s.length; i++)s[i] = subfilters[i].clone();return new List(s);},public TreeFilter clone final TreeFilter s  new TreeFiltersubfilterslengthfor int i  0 i  slength isi  subfiltersiclonereturn new Lists
"public String toString() {StringBuilder buf = new StringBuilder();buf.append(""DiffEntry["");buf.append(changeType);buf.append("" "");switch (changeType) {case ADD:buf.append(newPath);break;case COPY:buf.append(oldPath + ""->"" + newPath);break;case DELETE:buf.append(oldPath);break;case MODIFY:buf.append(oldPath);break;case RENAME:buf.append(oldPath + ""->"" + newPath);break;}buf.append(""]"");return buf.toString();}",public String toString StringBuilder buf  new StringBuilderbufappendDiffEntrybufappendchangeTypebufappend switch changeType case ADDbufappendnewPathbreakcase COPYbufappendoldPath    newPathbreakcase DELETEbufappendoldPathbreakcase MODIFYbufappendoldPathbreakcase RENAMEbufappendoldPath    newPathbreakbufappendreturn buftoString
public CreateRepositoryResult createRepository(CreateRepositoryRequest request) {request = beforeClientExecution(request);return executeCreateRepository(request);},public CreateRepositoryResult createRepositoryCreateRepositoryRequest request request  beforeClientExecutionrequestreturn executeCreateRepositoryrequest
"public static String toHex(String value) {return (value == null || value.length() == 0)? ""[]"": toHex(value.getBytes(LocaleUtil.CHARSET_1252));}",public static String toHexString value return value  null  valuelength  0  toHexvaluegetBytesLocaleUtilCHARSET1252
public LineFormatRecord(RecordInputStream in) {field_1_lineColor          = in.readInt();field_2_linePattern        = in.readShort();field_3_weight             = in.readShort();field_4_format             = in.readShort();field_5_colourPaletteIndex = in.readShort();},public LineFormatRecordRecordInputStream in field1lineColor           inreadIntfield2linePattern         inreadShortfield3weight              inreadShortfield4format              inreadShortfield5colourPaletteIndex  inreadShort
public DescribeClusterResult describeCluster(DescribeClusterRequest request) {request = beforeClientExecution(request);return executeDescribeCluster(request);},public DescribeClusterResult describeClusterDescribeClusterRequest request request  beforeClientExecutionrequestreturn executeDescribeClusterrequest
public UserAgentConfig getUserAgentConfig() {return userAgentConfig;},public UserAgentConfig getUserAgentConfig return userAgentConfig
public float getTokenScore() {String termText = termAtt.toString();WeightedTerm queryTerm = termsToFind.get(termText);if (queryTerm == null) {return 0;}if (!uniqueTermsInFragment.contains(termText)) {totalScore += queryTerm.getWeight();uniqueTermsInFragment.add(termText);}return queryTerm.getWeight();},public float getTokenScore String termText  termAtttoStringWeightedTerm queryTerm  termsToFindgettermTextif queryTerm  null return 0if uniqueTermsInFragmentcontainstermText totalScore  queryTermgetWeightuniqueTermsInFragmentaddtermTextreturn queryTermgetWeight
public void clear() {arrays.clear();},public void clear arraysclear
public DescribeEndpointsResult describeEndpoints(DescribeEndpointsRequest request) {request = beforeClientExecution(request);return executeDescribeEndpoints(request);},public DescribeEndpointsResult describeEndpointsDescribeEndpointsRequest request request  beforeClientExecutionrequestreturn executeDescribeEndpointsrequest
"public String toString() {return ""PATH(\"""" + pathStr + ""\"")"";}",public String toString return PATH  pathStr  
"public DictionaryCompoundWordTokenFilterFactory(Map<String, String> args) {super(args);dictFile = require(args, ""dictionary"");minWordSize = getInt(args, ""minWordSize"", CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE);minSubwordSize = getInt(args, ""minSubwordSize"", CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE);maxSubwordSize = getInt(args, ""maxSubwordSize"", CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE);onlyLongestMatch = getBoolean(args, ""onlyLongestMatch"", true);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public DictionaryCompoundWordTokenFilterFactoryMapString String args superargsdictFile  requireargs dictionaryminWordSize  getIntargs minWordSize CompoundWordTokenFilterBaseDEFAULTMINWORDSIZEminSubwordSize  getIntargs minSubwordSize CompoundWordTokenFilterBaseDEFAULTMINSUBWORDSIZEmaxSubwordSize  getIntargs maxSubwordSize CompoundWordTokenFilterBaseDEFAULTMAXSUBWORDSIZEonlyLongestMatch  getBooleanargs onlyLongestMatch trueif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public final void writeFloat(float val) throws IOException {writeInt(Float.floatToIntBits(val));},public final void writeFloatfloat val throws IOException writeIntFloatfloatToIntBitsval
"public char[] toCharArray() {char newbuf[] = new char[size()];System.arraycopy(buf, 0, newbuf, 0, size());return newbuf;}",public char toCharArray char newbuf  new charsizeSystemarraycopybuf 0 newbuf 0 sizereturn newbuf
"public IntervalSet getExpectedTokens() {if (recognizer != null) {return recognizer.getATN().getExpectedTokens(offendingState, ctx);}return null;}",public IntervalSet getExpectedTokens if recognizer  null return recognizergetATNgetExpectedTokensoffendingState ctxreturn null
"public HindiNormalizationFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public HindiNormalizationFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public UpdateUserIdentityInfoResult updateUserIdentityInfo(UpdateUserIdentityInfoRequest request) {request = beforeClientExecution(request);return executeUpdateUserIdentityInfo(request);},public UpdateUserIdentityInfoResult updateUserIdentityInfoUpdateUserIdentityInfoRequest request request  beforeClientExecutionrequestreturn executeUpdateUserIdentityInforequest
public Allocator(int blockSize) {this.blockSize = blockSize;},public Allocatorint blockSize thisblockSize  blockSize
"public NoteMapMerger(Repository db, NoteMerger noteMerger,MergeStrategy nonNotesMergeStrategy) {this.db = db;this.Reader = db.newObjectReader();this.inserter = db.newObjectInserter();this.noteMerger = noteMerger;this.nonNotesMergeStrategy = nonNotesMergeStrategy;this.objectIdPrefix = new MutableObjectId();}",public NoteMapMergerRepository db NoteMerger noteMergerMergeStrategy nonNotesMergeStrategy thisdb  dbthisReader  dbnewObjectReaderthisinserter  dbnewObjectInserterthisnoteMerger  noteMergerthisnonNotesMergeStrategy  nonNotesMergeStrategythisobjectIdPrefix  new MutableObjectId
public ListAliasesResult listAliases(ListAliasesRequest request) {request = beforeClientExecution(request);return executeListAliases(request);},public ListAliasesResult listAliasesListAliasesRequest request request  beforeClientExecutionrequestreturn executeListAliasesrequest
public STSAssumeRoleSessionCredentialsProvider withRoleSessionName(String roleSessionName) {this.roleSessionName = roleSessionName;return this;},public STSAssumeRoleSessionCredentialsProvider withRoleSessionNameString roleSessionName thisroleSessionName  roleSessionNamereturn this
public IntList(int capacity) {entries = new int[capacity];},public IntListint capacity entries  new intcapacity
public Result getResult() {return result;},public Result getResult return result
public int size() {return count;},public int size return count
public DescribeAccountAttributesResult describeAccountAttributes() {return describeAccountAttributes(new DescribeAccountAttributesRequest());},public DescribeAccountAttributesResult describeAccountAttributes return describeAccountAttributesnew DescribeAccountAttributesRequest
"public String toString() {return ""G"";}",public String toString return G
"public StoredField(String name, double value) {super(name, TYPE);fieldsData = value;}",public StoredFieldString name double value supername TYPEfieldsData  value
"public GroupedFacetResult(int size, int minCount, boolean orderByCount, int totalCount, int totalMissingCount) {this.facetEntries = new TreeSet<>(orderByCount ? orderByCountAndValue : orderByValue);this.totalMissingCount = totalMissingCount;this.totalCount = totalCount;maxSize = size;currentMin = minCount;}",public GroupedFacetResultint size int minCount boolean orderByCount int totalCount int totalMissingCount thisfacetEntries  new TreeSetorderByCount  orderByCountAndValue  orderByValuethistotalMissingCount  totalMissingCountthistotalCount  totalCountmaxSize  sizecurrentMin  minCount
public FieldInfo fieldInfo(String fieldName) {return byName.get(fieldName);},public FieldInfo fieldInfoString fieldName return byNamegetfieldName
public int regionStart() {return regionStart;},public int regionStart return regionStart
public int getPort() {return Host.this.getPort();},public int getPort return HostthisgetPort
"public InterruptTimer(String threadName) {state = new AlarmState();autoKiller = new AutoKiller(state);thread = new AlarmThread(threadName, state);thread.start();}",public InterruptTimerString threadName state  new AlarmStateautoKiller  new AutoKillerstatethread  new AlarmThreadthreadName statethreadstart
"public HighFrequencyDictionary(IndexReader Reader, String field, float thresh) {this.Reader = Reader;this.field = field;this.thresh = thresh;}",public HighFrequencyDictionaryIndexReader Reader String field float thresh thisReader  Readerthisfield  fieldthisthresh  thresh
public ModifyDBProxyTargetGroupResult modifyDBProxyTargetGroup(ModifyDBProxyTargetGroupRequest request) {request = beforeClientExecution(request);return executeModifyDBProxyTargetGroup(request);},public ModifyDBProxyTargetGroupResult modifyDBProxyTargetGroupModifyDBProxyTargetGroupRequest request request  beforeClientExecutionrequestreturn executeModifyDBProxyTargetGrouprequest
public void close() throws IOException {input.close();},public void close throws IOException inputclose
public void reset() {arriving = -1;leaving = -1;},public void reset arriving  1leaving  1
"public SetLoadBalancerListenerSSLCertificateRequest(String loadBalancerName, Integer loadBalancerPort, String sSLCertificateId) {setLoadBalancerName(loadBalancerName);setLoadBalancerPort(loadBalancerPort);setSSLCertificateId(sSLCertificateId);}",public SetLoadBalancerListenerSSLCertificateRequestString loadBalancerName Integer loadBalancerPort String sSLCertificateId setLoadBalancerNameloadBalancerNamesetLoadBalancerPortloadBalancerPortsetSSLCertificateIdsSLCertificateId
public SpanTermQuery(Term term) {this.term = Objects.requireNonNull(term);this.termStates = null;},public SpanTermQueryTerm term thisterm  ObjectsrequireNonNulltermthistermStates  null
public long ramBytesUsed() {long ramBytesUsed = postingsReader.ramBytesUsed();for (TermsReader r : fields.values()) {ramBytesUsed += r.ramBytesUsed();}return ramBytesUsed;},public long ramBytesUsed long ramBytesUsed  postingsReaderramBytesUsedfor TermsReader r  fieldsvalues ramBytesUsed  rramBytesUsedreturn ramBytesUsed
public boolean equals(Object o) {if (this.getClass() != o.getClass()) return false;DocFreqValueSource other = (DocFreqValueSource)o;return this.indexedField.equals(other.indexedField) && this.indexedBytes.equals(other.indexedBytes);},public boolean equalsObject o if thisgetClass  ogetClass return falseDocFreqValueSource other  DocFreqValueSourceoreturn thisindexedFieldequalsotherindexedField  thisindexedBytesequalsotherindexedBytes
"public Term getLucenePrefixTerm(String fieldName) {return new Term(fieldName, getPrefix());}",public Term getLucenePrefixTermString fieldName return new TermfieldName getPrefix
"public Collection<ParseTree> evaluate(ParseTree t) {return Trees.findAllTokenNodes(t, tokenType);}",public CollectionParseTree evaluateParseTree t return TreesfindAllTokenNodest tokenType
public static Signer getSigner(AlibabaCloudCredentials credentials) {if (credentials instanceof KeyPairCredentials) {return SHA256_WITH_RSA_SIGNER;} else if (credentials instanceof BearerTokenCredentials) {return BEARER_TOKEN_SIGNER;} else {return HMACSHA1_SIGNER;}},public static Signer getSignerAlibabaCloudCredentials credentials if credentials instanceof KeyPairCredentials return SHA256WITHRSASIGNER else if credentials instanceof BearerTokenCredentials return BEARERTOKENSIGNER else return HMACSHA1SIGNER
public PutAccountSendingAttributesResult putAccountSendingAttributes(PutAccountSendingAttributesRequest request) {request = beforeClientExecution(request);return executePutAccountSendingAttributes(request);},public PutAccountSendingAttributesResult putAccountSendingAttributesPutAccountSendingAttributesRequest request request  beforeClientExecutionrequestreturn executePutAccountSendingAttributesrequest
"public static String getExtension(String filename) {final int idx = filename.indexOf('.');if (idx == -1) {return null;} else {return filename.substring(idx + 1, filename.length());}}",public static String getExtensionString filename final int idx  filenameindexOfif idx  1 return null else return filenamesubstringidx  1 filenamelength
public RunJobFlowResult runJobFlow(RunJobFlowRequest request) {request = beforeClientExecution(request);return executeRunJobFlow(request);},public RunJobFlowResult runJobFlowRunJobFlowRequest request request  beforeClientExecutionrequestreturn executeRunJobFlowrequest
public int lastLength() {return lastLength;},public int lastLength return lastLength
public ListStreamConsumersResult listStreamConsumers(ListStreamConsumersRequest request) {request = beforeClientExecution(request);return executeListStreamConsumers(request);},public ListStreamConsumersResult listStreamConsumersListStreamConsumersRequest request request  beforeClientExecutionrequestreturn executeListStreamConsumersrequest
"public static SimpleFraction buildFractionMaxDenominator(double value, int maxDenominator){return buildFractionMaxDenominator(value, 0, maxDenominator, 100);}",public static SimpleFraction buildFractionMaxDenominatordouble value int maxDenominatorreturn buildFractionMaxDenominatorvalue 0 maxDenominator 100
"public void seekExact(BytesRef term, TermState state) {throw new IllegalStateException(""this method should never be called"");}",public void seekExactBytesRef term TermState state throw new IllegalStateExceptionthis method should never be called
public LsRemoteCommand setUploadPack(String uploadPack) {this.uploadPack = uploadPack;return this;},public LsRemoteCommand setUploadPackString uploadPack thisuploadPack  uploadPackreturn this
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval numberVE) {final String hex;if (numberVE instanceof RefEval) {RefEval re = (RefEval) numberVE;hex = OperandResolver.coerceValueToString(re.getInnerValueEval(re.getFirstSheetIndex()));} else {hex = OperandResolver.coerceValueToString(numberVE);}try {return new NumberEval(BaseNumberUtils.convertToDecimal(hex, HEXADECIMAL_BASE, MAX_NUMBER_OF_PLACES));}  catch (IllegalArgumentException e) {return ErrorEval.NUM_ERROR;}}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval numberVE final String hexif numberVE instanceof RefEval RefEval re  RefEval numberVEhex  OperandResolvercoerceValueToStringregetInnerValueEvalregetFirstSheetIndex else hex  OperandResolvercoerceValueToStringnumberVEtry return new NumberEvalBaseNumberUtilsconvertToDecimalhex HEXADECIMALBASE MAXNUMBEROFPLACES  catch IllegalArgumentException e return ErrorEvalNUMERROR
public DescribeInstancesResult describeInstances() {return describeInstances(new DescribeInstancesRequest());},public DescribeInstancesResult describeInstances return describeInstancesnew DescribeInstancesRequest
"public Collection<RevCommit> call() throws GitAPIException,InvalidRefNameException {checkCallable();try {if (repo.exactRef(Constants.R_STASH) == null)return Collections.emptyList();} catch (IOException e) {throw new InvalidRefNameException(MessageFormat.format(JGitText.get().cannotRead, Constants.R_STASH), e);}final ReflogCommand refLog = new ReflogCommand(repo);refLog.setRef(Constants.R_STASH);final Collection<ReflogEntry> stashEntries = refLog.call();if (stashEntries.isEmpty())return Collections.emptyList();final List<RevCommit> stashCommits = new ArrayList<>(stashEntries.size());try (RevWalk walk = new RevWalk(repo)) {for (ReflogEntry entry : stashEntries) {try {stashCommits.add(walk.parseCommit(entry.getNewId()));} catch (IOException e) {throw new JGitInternalException(MessageFormat.format(JGitText.get().cannotReadCommit, entry.getNewId()),e);}}}return stashCommits;}",public CollectionRevCommit call throws GitAPIExceptionInvalidRefNameException checkCallabletry if repoexactRefConstantsRSTASH  nullreturn CollectionsemptyList catch IOException e throw new InvalidRefNameExceptionMessageFormatformatJGitTextgetcannotRead ConstantsRSTASH efinal ReflogCommand refLog  new ReflogCommandreporefLogsetRefConstantsRSTASHfinal CollectionReflogEntry stashEntries  refLogcallif stashEntriesisEmptyreturn CollectionsemptyListfinal ListRevCommit stashCommits  new ArrayListstashEntriessizetry RevWalk walk  new RevWalkrepo for ReflogEntry entry  stashEntries try stashCommitsaddwalkparseCommitentrygetNewId catch IOException e throw new JGitInternalExceptionMessageFormatformatJGitTextgetcannotReadCommit entrygetNewIdereturn stashCommits
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeByte(field_1_error_code);},public void writeLittleEndianOutput out outwriteBytesid  getPtgClassoutwriteBytefield1errorcode
public PutAccountSettingResult putAccountSetting(PutAccountSettingRequest request) {request = beforeClientExecution(request);return executePutAccountSetting(request);},public PutAccountSettingResult putAccountSettingPutAccountSettingRequest request request  beforeClientExecutionrequestreturn executePutAccountSettingrequest
"public static CharacterBuffer newCharacterBuffer(final int bufferSize) {if (bufferSize < 2) {throw new IllegalArgumentException(""buffersize must be >= 2"");}return new CharacterBuffer(new char[bufferSize], 0, 0);}",public static CharacterBuffer newCharacterBufferfinal int bufferSize if bufferSize  2 throw new IllegalArgumentExceptionbuffersize must be  2return new CharacterBuffernew charbufferSize 0 0
public int getLevelForDistance(double dist) {if (dist == 0)return maxLevels;for (int i = 0; i < maxLevels-1; i++) {if(dist > levelW[i] && dist > levelH[i]) {return i+1;}}return maxLevels;},public int getLevelForDistancedouble dist if dist  0return maxLevelsfor int i  0 i  maxLevels1 i ifdist  levelWi  dist  levelHi return i1return maxLevels
"public Query makeLuceneQueryFieldNoBoost(String fieldName, BasicQueryFactory qf) {return makeLuceneQueryNoBoost(qf); }",public Query makeLuceneQueryFieldNoBoostString fieldName BasicQueryFactory qf return makeLuceneQueryNoBoostqf 
public ListDedicatedIpPoolsResult listDedicatedIpPools(ListDedicatedIpPoolsRequest request) {request = beforeClientExecution(request);return executeListDedicatedIpPools(request);},public ListDedicatedIpPoolsResult listDedicatedIpPoolsListDedicatedIpPoolsRequest request request  beforeClientExecutionrequestreturn executeListDedicatedIpPoolsrequest
public static ValueVector createVector(RefEval re) {return new SheetVector(re);},public static ValueVector createVectorRefEval re return new SheetVectorre
public RemoveNoteCommand setObjectId(RevObject id) {checkCallable();this.id = id;return this;},public RemoveNoteCommand setObjectIdRevObject id checkCallablethisid  idreturn this
public int getSheetIndex(String sheetName) {return _uBook.getSheetIndex(sheetName);},public int getSheetIndexString sheetName return uBookgetSheetIndexsheetName
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_chartGroupIndex);},public void serializeLittleEndianOutput out outwriteShortfield1chartGroupIndex
"public FontFormatting() {setFontHeight(-1);setItalic(false);setFontWieghtModified(false);setOutline(false);setShadow(false);setStrikeout(false);setEscapementType((short)0);setUnderlineType((byte)0);setFontColorIndex((short)-1);setFontStyleModified(false);setFontOutlineModified(false);setFontShadowModified(false);setFontCancellationModified(false);setEscapementTypeModified(false);setUnderlineTypeModified(false);setShort(OFFSET_FONT_NAME, 0);setInt(OFFSET_NOT_USED1, 0x00000001);setInt(OFFSET_NOT_USED2, 0x00000000);setInt(OFFSET_NOT_USED3, 0x7FFFFFFF);setShort(OFFSET_FONT_FORMATING_END, 0x0001);}",public FontFormatting setFontHeight1setItalicfalsesetFontWieghtModifiedfalsesetOutlinefalsesetShadowfalsesetStrikeoutfalsesetEscapementTypeshort0setUnderlineTypebyte0setFontColorIndexshort1setFontStyleModifiedfalsesetFontOutlineModifiedfalsesetFontShadowModifiedfalsesetFontCancellationModifiedfalsesetEscapementTypeModifiedfalsesetUnderlineTypeModifiedfalsesetShortOFFSETFONTNAME 0setIntOFFSETNOTUSED1 0x00000001setIntOFFSETNOTUSED2 0x00000000setIntOFFSETNOTUSED3 0x7FFFFFFFsetShortOFFSETFONTFORMATINGEND 0x0001
public GetFacetResult getFacet(GetFacetRequest request) {request = beforeClientExecution(request);return executeGetFacet(request);},public GetFacetResult getFacetGetFacetRequest request request  beforeClientExecutionrequestreturn executeGetFacetrequest
public IndexInput clone() {return (IndexInput) super.clone();},public IndexInput clone return IndexInput superclone
"public String toFormulaString(){throw new RuntimeException(""Table and Arrays are not yet supported"");}",public String toFormulaStringthrow new RuntimeExceptionTable and Arrays are not yet supported
public StartFleetResult startFleet(StartFleetRequest request) {request = beforeClientExecution(request);return executeStartFleet(request);},public StartFleetResult startFleetStartFleetRequest request request  beforeClientExecutionrequestreturn executeStartFleetrequest
public static FontFamily valueOf(int nativeId) {for (FontFamily ff : values()) {if (ff.nativeId == nativeId) {return ff;}}return null;},public static FontFamily valueOfint nativeId for FontFamily ff  values if ffnativeId  nativeId return ffreturn null
public synchronized boolean isEmpty() {return size == 0;},public synchronized boolean isEmpty return size  0
"public static String encodeBytes(byte[] source) {return encodeBytes(source, 0, source.length);}",public static String encodeBytesbyte source return encodeBytessource 0 sourcelength
public DescribeBackupsResult describeBackups(DescribeBackupsRequest request) {request = beforeClientExecution(request);return executeDescribeBackups(request);},public DescribeBackupsResult describeBackupsDescribeBackupsRequest request request  beforeClientExecutionrequestreturn executeDescribeBackupsrequest
public ReflectionMethodRecordCreator(Method m) {_m = m;},public ReflectionMethodRecordCreatorMethod m m  m
public static int resolvesToJustOneViableAlt(Collection<BitSet> altsets) {return getSingleViableAlt(altsets);},public static int resolvesToJustOneViableAltCollectionBitSet altsets return getSingleViableAltaltsets
public GetGatewayResult getGateway(GetGatewayRequest request) {request = beforeClientExecution(request);return executeGetGateway(request);},public GetGatewayResult getGatewayGetGatewayRequest request request  beforeClientExecutionrequestreturn executeGetGatewayrequest
public void onFilterComplete(int count) {updateDropDownForFilter(count);},public void onFilterCompleteint count updateDropDownForFiltercount
public boolean isReadOnly() {return true;},public boolean isReadOnly return true
public FreeRefFunction findUserDefinedFunction(String functionName) {return _bookEvaluator.findUserDefinedFunction(functionName);},public FreeRefFunction findUserDefinedFunctionString functionName return bookEvaluatorfindUserDefinedFunctionfunctionName
public boolean equals(Object obj) {if (!(obj instanceof PrecedencePredicate)) {return false;}if (this == obj) {return true;}PrecedencePredicate other = (PrecedencePredicate)obj;return this.precedence == other.precedence;},public boolean equalsObject obj if obj instanceof PrecedencePredicate return falseif this  obj return truePrecedencePredicate other  PrecedencePredicateobjreturn thisprecedence  otherprecedence
public int getStringWidth(String str){int width = 0;for (int i = 0; i < str.length(); i++){width += getCharWidth(str.charAt(i));}return width;},public int getStringWidthString strint width  0for int i  0 i  strlength iwidth  getCharWidthstrcharAtireturn width
public ByteVector(byte[] a) {blockSize = DEFAULT_BLOCK_SIZE;array = a;n = 0;},public ByteVectorbyte a blockSize  DEFAULTBLOCKSIZEarray  an  0
public DeleteVerifiedEmailAddressResult deleteVerifiedEmailAddress(DeleteVerifiedEmailAddressRequest request) {request = beforeClientExecution(request);return executeDeleteVerifiedEmailAddress(request);},public DeleteVerifiedEmailAddressResult deleteVerifiedEmailAddressDeleteVerifiedEmailAddressRequest request request  beforeClientExecutionrequestreturn executeDeleteVerifiedEmailAddressrequest
public DescribeScalingActivitiesResult describeScalingActivities(DescribeScalingActivitiesRequest request) {request = beforeClientExecution(request);return executeDescribeScalingActivities(request);},public DescribeScalingActivitiesResult describeScalingActivitiesDescribeScalingActivitiesRequest request request  beforeClientExecutionrequestreturn executeDescribeScalingActivitiesrequest
"public SimpleQueryParser(Analyzer analyzer, String field) {this(analyzer, Collections.singletonMap(field, 1.0F));}",public SimpleQueryParserAnalyzer analyzer String field thisanalyzer CollectionssingletonMapfield 10F
"final public SrndQuery AndQuery() throws ParseException {SrndQuery q;ArrayList<SrndQuery> queries = null;Token oprt = null;q = NotQuery();label_3:while (true) {switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {case AND:;break;default:jj_la1[1] = jj_gen;break label_3;}oprt = jj_consume_token(AND);if (queries == null) {queries = new ArrayList<SrndQuery>();queries.add(q);}q = NotQuery();queries.add(q);}{if (true) return (queries == null) ? q : getAndQuery(queries, true , oprt);}throw new Error(""Missing return statement in function"");}",final public SrndQuery AndQuery throws ParseException SrndQuery qArrayListSrndQuery queries  nullToken oprt  nullq  NotQuerylabel3while true switch jjntk1jjntkjjntk case ANDbreakdefaultjjla11  jjgenbreak label3oprt  jjconsumetokenANDif queries  null queries  new ArrayListSrndQueryqueriesaddqq  NotQueryqueriesaddqif true return queries  null  q  getAndQueryqueries true  oprtthrow new ErrorMissing return statement in function
public final int get() {if (position == limit) {throw new BufferUnderflowException();}return backingArray[offset + position++];},public final int get if position  limit throw new BufferUnderflowExceptionreturn backingArrayoffset  position
"public AddJobFlowStepsRequest(String jobFlowId, java.util.List<StepConfig> steps) {setJobFlowId(jobFlowId);setSteps(steps);}",public AddJobFlowStepsRequestString jobFlowId javautilListStepConfig steps setJobFlowIdjobFlowIdsetStepssteps
"public String toFormulaString(String[] operands) {StringBuilder buffer = new StringBuilder();buffer.append( operands[0] );buffer.append(""<>"");buffer.append( operands[1] );return buffer.toString();}",public String toFormulaStringString operands StringBuilder buffer  new StringBuilderbufferappend operands0 bufferappendbufferappend operands1 return buffertoString
"public static String toHex(short value) {StringBuilder sb = new StringBuilder(4);writeHex(sb, value & 0xFFFF, 4, """");return sb.toString();}",public static String toHexshort value StringBuilder sb  new StringBuilder4writeHexsb value  0xFFFF 4 return sbtoString
public static String stripSegmentName(String filename) {int idx = indexOfSegmentName(filename);if (idx != -1) {filename = filename.substring(idx);}return filename;},public static String stripSegmentNameString filename int idx  indexOfSegmentNamefilenameif idx  1 filename  filenamesubstringidxreturn filename
public InvalidMarkException(String detailMessage) {super(detailMessage);},public InvalidMarkExceptionString detailMessage superdetailMessage
public V nextElement() { return nextEntryNotFailFast().value; },public V nextElement  return nextEntryNotFailFastvalue 
public boolean equals(Object o) {if (o instanceof PersonIdent) {final PersonIdent p = (PersonIdent) o;return getName().equals(p.getName())&& getEmailAddress().equals(p.getEmailAddress())&& when / 1000L == p.when / 1000L;}return false;},public boolean equalsObject o if o instanceof PersonIdent final PersonIdent p  PersonIdent oreturn getNameequalspgetName getEmailAddressequalspgetEmailAddress when  1000L  pwhen  1000Lreturn false
public DetectKeyPhrasesResult detectKeyPhrases(DetectKeyPhrasesRequest request) {request = beforeClientExecution(request);return executeDetectKeyPhrases(request);},public DetectKeyPhrasesResult detectKeyPhrasesDetectKeyPhrasesRequest request request  beforeClientExecutionrequestreturn executeDetectKeyPhrasesrequest
"public long skip(long byteCount) throws IOException {return Streams.skipByReading(this, byteCount);}",public long skiplong byteCount throws IOException return StreamsskipByReadingthis byteCount
"public ByteBuffer get(byte[] dst) {return get(dst, 0, dst.length);}",public ByteBuffer getbyte dst return getdst 0 dstlength
public void setHideObj(short hide){field_1_hide_obj = hide;},public void setHideObjshort hidefield1hideobj  hide
public final void setLastColumnRaw(short column) {field_4_last_column = column;},public final void setLastColumnRawshort column field4lastcolumn  column
public static PrintCellComments valueOf(int value){return _table[value];},public static PrintCellComments valueOfint valuereturn tablevalue
public DBInstance deleteDBInstance(DeleteDBInstanceRequest request) {request = beforeClientExecution(request);return executeDeleteDBInstance(request);},public DBInstance deleteDBInstanceDeleteDBInstanceRequest request request  beforeClientExecutionrequestreturn executeDeleteDBInstancerequest
"public String require(Map<String,String> args, String name) {String s = args.remove(name);if (s == null) {throw new IllegalArgumentException(""Configuration Error: missing parameter '"" + name + ""'"");}return s;}",public String requireMapStringString args String name String s  argsremovenameif s  null throw new IllegalArgumentExceptionConfiguration Error missing parameter   name  return s
"public CompositeReaderContext build() {return (CompositeReaderContext) build(null, Reader, 0, 0);}",public CompositeReaderContext build return CompositeReaderContext buildnull Reader 0 0
"public GetImageLayerRequest() {super(""cr"", ""2016-06-07"", ""GetImageLayer"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/tags/[Tag]/layers"");setMethod(MethodType.GET);}",public GetImageLayerRequest supercr 20160607 GetImageLayer crsetUriPatternreposRepoNamespaceRepoNametagsTaglayerssetMethodMethodTypeGET
public ParameterNameValue(String parameterName) {setParameterName(parameterName);},public ParameterNameValueString parameterName setParameterNameparameterName
public CreateDirectConnectGatewayAssociationProposalResult createDirectConnectGatewayAssociationProposal(CreateDirectConnectGatewayAssociationProposalRequest request) {request = beforeClientExecution(request);return executeCreateDirectConnectGatewayAssociationProposal(request);},public CreateDirectConnectGatewayAssociationProposalResult createDirectConnectGatewayAssociationProposalCreateDirectConnectGatewayAssociationProposalRequest request request  beforeClientExecutionrequestreturn executeCreateDirectConnectGatewayAssociationProposalrequest
public ListResourceDelegatesResult listResourceDelegates(ListResourceDelegatesRequest request) {request = beforeClientExecution(request);return executeListResourceDelegates(request);},public ListResourceDelegatesResult listResourceDelegatesListResourceDelegatesRequest request request  beforeClientExecutionrequestreturn executeListResourceDelegatesrequest
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval numberVE, ValueEval placesVE) {ValueEval veText1;try {veText1 = OperandResolver.getSingleValue(numberVE, srcRowIndex, srcColumnIndex);} catch (EvaluationException e) {return e.getErrorEval();}String strText1 = OperandResolver.coerceValueToString(veText1);Double number = OperandResolver.parseDouble(strText1);if (number == null) {return ErrorEval.VALUE_INVALID;}if (number.longValue() < MIN_VALUE || number.longValue() > MAX_VALUE) {return ErrorEval.NUM_ERROR;}int placesNumber;if (number < 0 || placesVE == null) {placesNumber = DEFAULT_PLACES_VALUE;} else {ValueEval placesValueEval;try {placesValueEval = OperandResolver.getSingleValue(placesVE, srcRowIndex, srcColumnIndex);} catch (EvaluationException e) {return e.getErrorEval();}String placesStr = OperandResolver.coerceValueToString(placesValueEval);Double placesNumberDouble = OperandResolver.parseDouble(placesStr);if (placesNumberDouble == null) {return ErrorEval.VALUE_INVALID;}placesNumber = placesNumberDouble.intValue();if (placesNumber < 0 || placesNumber == 0) {return ErrorEval.NUM_ERROR;}}String binary = Integer.toBinaryString(number.intValue());if (binary.length() > DEFAULT_PLACES_VALUE) {binary = binary.substring(binary.length() - DEFAULT_PLACES_VALUE);}if (binary.length() > placesNumber) {return ErrorEval.NUM_ERROR;}return new StringEval(binary);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval numberVE ValueEval placesVE ValueEval veText1try veText1  OperandResolvergetSingleValuenumberVE srcRowIndex srcColumnIndex catch EvaluationException e return egetErrorEvalString strText1  OperandResolvercoerceValueToStringveText1Double number  OperandResolverparseDoublestrText1if number  null return ErrorEvalVALUEINVALIDif numberlongValue  MINVALUE  numberlongValue  MAXVALUE return ErrorEvalNUMERRORint placesNumberif number  0  placesVE  null placesNumber  DEFAULTPLACESVALUE else ValueEval placesValueEvaltry placesValueEval  OperandResolvergetSingleValueplacesVE srcRowIndex srcColumnIndex catch EvaluationException e return egetErrorEvalString placesStr  OperandResolvercoerceValueToStringplacesValueEvalDouble placesNumberDouble  OperandResolverparseDoubleplacesStrif placesNumberDouble  null return ErrorEvalVALUEINVALIDplacesNumber  placesNumberDoubleintValueif placesNumber  0  placesNumber  0 return ErrorEvalNUMERRORString binary  IntegertoBinaryStringnumberintValueif binarylength  DEFAULTPLACESVALUE binary  binarysubstringbinarylength  DEFAULTPLACESVALUEif binarylength  placesNumber return ErrorEvalNUMERRORreturn new StringEvalbinary
"public static int checkHeaderNoMagic(DataInput in, String codec, int minVersion, int maxVersion) throws IOException {final String actualCodec = in.readString();if (!actualCodec.equals(codec)) {throw new CorruptIndexException(""codec mismatch: actual codec="" + actualCodec + "" vs expected codec="" + codec, in);}final int actualVersion = in.readInt();if (actualVersion < minVersion) {throw new IndexFormatTooOldException(in, actualVersion, minVersion, maxVersion);}if (actualVersion > maxVersion) {throw new IndexFormatTooNewException(in, actualVersion, minVersion, maxVersion);}return actualVersion;}",public static int checkHeaderNoMagicDataInput in String codec int minVersion int maxVersion throws IOException final String actualCodec  inreadStringif actualCodecequalscodec throw new CorruptIndexExceptioncodec mismatch actual codec  actualCodec   vs expected codec  codec infinal int actualVersion  inreadIntif actualVersion  minVersion throw new IndexFormatTooOldExceptionin actualVersion minVersion maxVersionif actualVersion  maxVersion throw new IndexFormatTooNewExceptionin actualVersion minVersion maxVersionreturn actualVersion
public DescribeDefaultParametersResult describeDefaultParameters(DescribeDefaultParametersRequest request) {request = beforeClientExecution(request);return executeDescribeDefaultParameters(request);},public DescribeDefaultParametersResult describeDefaultParametersDescribeDefaultParametersRequest request request  beforeClientExecutionrequestreturn executeDescribeDefaultParametersrequest
"public SimpleSpanFragmenter(QueryScorer queryScorer, int fragmentSize) {this.fragmentSize = fragmentSize;this.queryScorer = queryScorer;}",public SimpleSpanFragmenterQueryScorer queryScorer int fragmentSize thisfragmentSize  fragmentSizethisqueryScorer  queryScorer
public CreateApplicationResult createApplication(CreateApplicationRequest request) {request = beforeClientExecution(request);return executeCreateApplication(request);},public CreateApplicationResult createApplicationCreateApplicationRequest request request  beforeClientExecutionrequestreturn executeCreateApplicationrequest
public URIish getURI() {return uri;},public URIish getURI return uri
public DeleteConferenceProviderResult deleteConferenceProvider(DeleteConferenceProviderRequest request) {request = beforeClientExecution(request);return executeDeleteConferenceProvider(request);},public DeleteConferenceProviderResult deleteConferenceProviderDeleteConferenceProviderRequest request request  beforeClientExecutionrequestreturn executeDeleteConferenceProviderrequest
public byte setByte(final byte holder){return ( byte ) set(holder);},public byte setBytefinal byte holderreturn  byte  setholder
public PipedInputStream(PipedOutputStream out) throws IOException {connect(out);},public PipedInputStreamPipedOutputStream out throws IOException connectout
public IntBuffer slice() {byteBuffer.limit(limit * SizeOf.INT);byteBuffer.position(position * SizeOf.INT);ByteBuffer bb = byteBuffer.slice().order(byteBuffer.order());IntBuffer result = new IntToByteBufferAdapter(bb);byteBuffer.clear();return result;},public IntBuffer slice byteBufferlimitlimit  SizeOfINTbyteBufferpositionposition  SizeOfINTByteBuffer bb  byteBuffersliceorderbyteBufferorderIntBuffer result  new IntToByteBufferAdapterbbbyteBufferclearreturn result
public CreateDeploymentConfigResult createDeploymentConfig(CreateDeploymentConfigRequest request) {request = beforeClientExecution(request);return executeCreateDeploymentConfig(request);},public CreateDeploymentConfigResult createDeploymentConfigCreateDeploymentConfigRequest request request  beforeClientExecutionrequestreturn executeCreateDeploymentConfigrequest
"public HSSFColor findColor(byte red, byte green, byte blue){byte[] b = _palette.getColor(PaletteRecord.FIRST_COLOR_INDEX);for (short i = PaletteRecord.FIRST_COLOR_INDEX; b != null;b = _palette.getColor(++i)){if (b[0] == red && b[1] == green && b[2] == blue){return new CustomColor(i, b);}}return null;}",public HSSFColor findColorbyte red byte green byte bluebyte b  palettegetColorPaletteRecordFIRSTCOLORINDEXfor short i  PaletteRecordFIRSTCOLORINDEX b  nullb  palettegetColoriif b0  red  b1  green  b2  bluereturn new CustomColori breturn null
public boolean canEncode(char c) {return implCanEncode(CharBuffer.wrap(new char[] { c }));},public boolean canEncodechar c return implCanEncodeCharBufferwrapnew char  c 
"public NetworkInterface(String macAddress) {mac = macAddress;path = ""/network/interfaces/macs/"" + mac + ""/"";}",public NetworkInterfaceString macAddress mac  macAddresspath  networkinterfacesmacs  mac  
public final boolean isAccept(int state) {return accept.get(state);},public final boolean isAcceptint state return acceptgetstate
public String toStringTree() {return toStringTree((List<String>)null);},public String toStringTree return toStringTreeListStringnull
"public TermRangeQuery(String field, BytesRef lowerTerm, BytesRef upperTerm, boolean includeLower, boolean includeUpper) {super(new Term(field, lowerTerm), toAutomaton(lowerTerm, upperTerm, includeLower, includeUpper), Integer.MAX_VALUE, true);this.lowerTerm = lowerTerm;this.upperTerm = upperTerm;this.includeLower = includeLower;this.includeUpper = includeUpper;}",public TermRangeQueryString field BytesRef lowerTerm BytesRef upperTerm boolean includeLower boolean includeUpper supernew Termfield lowerTerm toAutomatonlowerTerm upperTerm includeLower includeUpper IntegerMAXVALUE truethislowerTerm  lowerTermthisupperTerm  upperTermthisincludeLower  includeLowerthisincludeUpper  includeUpper
"public ScanResult scan(String tableName, java.util.List<String> attributesToGet) {return scan(new ScanRequest().withTableName(tableName).withAttributesToGet(attributesToGet));}",public ScanResult scanString tableName javautilListString attributesToGet return scannew ScanRequestwithTableNametableNamewithAttributesToGetattributesToGet
public StopLabelingJobResult stopLabelingJob(StopLabelingJobRequest request) {request = beforeClientExecution(request);return executeStopLabelingJob(request);},public StopLabelingJobResult stopLabelingJobStopLabelingJobRequest request request  beforeClientExecutionrequestreturn executeStopLabelingJobrequest
public PublishSchemaResult publishSchema(PublishSchemaRequest request) {request = beforeClientExecution(request);return executePublishSchema(request);},public PublishSchemaResult publishSchemaPublishSchemaRequest request request  beforeClientExecutionrequestreturn executePublishSchemarequest
"public DeleteAttributesRequest(String domainName, String itemName, java.util.List<Attribute> attributes) {setDomainName(domainName);setItemName(itemName);setAttributes(attributes);}",public DeleteAttributesRequestString domainName String itemName javautilListAttribute attributes setDomainNamedomainNamesetItemNameitemNamesetAttributesattributes
public ObjectId toObjectId() {return this;},public ObjectId toObjectId return this
@Override public ListIterator<E> listIterator() {return listIterator(0);},Override public ListIteratorE listIterator return listIterator0
public ExternalBookBlock() {_externalBookRecord = SupBookRecord.createAddInFunctions();_externalNameRecords = new ExternalNameRecord[0];_crnBlocks = new CRNBlock[0];},public ExternalBookBlock externalBookRecord  SupBookRecordcreateAddInFunctionsexternalNameRecords  new ExternalNameRecord0crnBlocks  new CRNBlock0
public String getFragment() {return decode(fragment);},public String getFragment return decodefragment
"public String toString() {return slice.toString()+"":""+ postingsEnum;}",public String toString return slicetoString postingsEnum
public ByteBuffer putDouble(double value) {throw new ReadOnlyBufferException();},public ByteBuffer putDoubledouble value throw new ReadOnlyBufferException
"public static InternalWorkbook createStubWorkbook(ExternSheetRecord[] externs,BoundSheetRecord[] bounds) {return createStubWorkbook(externs, bounds, null);}",public static InternalWorkbook createStubWorkbookExternSheetRecord externsBoundSheetRecord bounds return createStubWorkbookexterns bounds null
public IndexDocumentsResult indexDocuments(IndexDocumentsRequest request) {request = beforeClientExecution(request);return executeIndexDocuments(request);},public IndexDocumentsResult indexDocumentsIndexDocumentsRequest request request  beforeClientExecutionrequestreturn executeIndexDocumentsrequest
"public String toStringTree(Parser recog) {return Trees.toStringTree(this, recog);}",public String toStringTreeParser recog return TreestoStringTreethis recog
"public FieldsConsumer fieldsConsumer(SegmentWriteState state)throws IOException {if (delegatePostingsFormat == null) {throw new UnsupportedOperationException(""Error - "" + getClass().getName()+ "" has been constructed without a choice of PostingsFormat"");}FieldsConsumer fieldsConsumer = delegatePostingsFormat.fieldsConsumer(state);return new BloomFilteredFieldsConsumer(fieldsConsumer, state);}",public FieldsConsumer fieldsConsumerSegmentWriteState statethrows IOException if delegatePostingsFormat  null throw new UnsupportedOperationExceptionError    getClassgetName  has been constructed without a choice of PostingsFormatFieldsConsumer fieldsConsumer  delegatePostingsFormatfieldsConsumerstatereturn new BloomFilteredFieldsConsumerfieldsConsumer state
"public String toString() {return super.toString() + ""(\"""" + pattern.pattern() + ""\"")"";}",public String toString return supertoString    patternpattern  
"public static String stripTags(String buf, int start) {if (start>0) {buf = buf.substring(start);}return buf.replaceAll(""<[^>]*>"", "" "");}",public static String stripTagsString buf int start if start0 buf  bufsubstringstartreturn bufreplaceAll  
"public Reader create(Reader input) {return new JapaneseIterationMarkCharFilter(input, normalizeKanji, normalizeKana);}",public Reader createReader input return new JapaneseIterationMarkCharFilterinput normalizeKanji normalizeKana
public int getKeyProgressIncrement() {return mKeyProgressIncrement;},public int getKeyProgressIncrement return mKeyProgressIncrement
public void ReInit(StandardSyntaxParserTokenManager tm) {token_source = tm;token = new Token();jj_ntk = -1;jj_gen = 0;for (int i = 0; i < 25; i++) jj_la1[i] = -1;for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();},public void ReInitStandardSyntaxParserTokenManager tm tokensource  tmtoken  new Tokenjjntk  1jjgen  0for int i  0 i  25 i jjla1i  1for int i  0 i  jj2rtnslength i jj2rtnsi  new JJCalls
"public long copyUsingLengthPrefix(BytesRef bytes) {if (bytes.length >= 32768) {throw new IllegalArgumentException(""max length is 32767 (got "" + bytes.length + "")"");}if (upto + bytes.length + 2 > blockSize) {if (bytes.length + 2 > blockSize) {throw new IllegalArgumentException(""block size "" + blockSize + "" is too small to store length "" + bytes.length + "" bytes"");}if (currentBlock != null) {addBlock(currentBlock);}currentBlock = new byte[blockSize];upto = 0;}final long pointer = getPointer();if (bytes.length < 128) {currentBlock[upto++] = (byte) bytes.length;} else {currentBlock[upto++] = (byte) (0x80 | (bytes.length >> 8));currentBlock[upto++] = (byte) (bytes.length & 0xff);}System.arraycopy(bytes.bytes, bytes.offset, currentBlock, upto, bytes.length);upto += bytes.length;return pointer;}",public long copyUsingLengthPrefixBytesRef bytes if byteslength  32768 throw new IllegalArgumentExceptionmax length is 32767 got   byteslength  if upto  byteslength  2  blockSize if byteslength  2  blockSize throw new IllegalArgumentExceptionblock size   blockSize   is too small to store length   byteslength   bytesif currentBlock  null addBlockcurrentBlockcurrentBlock  new byteblockSizeupto  0final long pointer  getPointerif byteslength  128 currentBlockupto  byte byteslength else currentBlockupto  byte 0x80  byteslength  8currentBlockupto  byte byteslength  0xffSystemarraycopybytesbytes bytesoffset currentBlock upto byteslengthupto  byteslengthreturn pointer
"public HighFreqTerm(int[] docIDs, int[] freqs, int[][] positions, byte[][][] payloads, long totalTermFreq) {this.docIDs = docIDs;this.freqs = freqs;this.positions = positions;this.payloads = payloads;this.totalTermFreq = totalTermFreq;}",public HighFreqTermint docIDs int freqs int positions byte payloads long totalTermFreq thisdocIDs  docIDsthisfreqs  freqsthispositions  positionsthispayloads  payloadsthistotalTermFreq  totalTermFreq
public TermQuery newTermQuery(Term term) throws TooManyBasicQueries {checkMax();return new TermQuery(term);},public TermQuery newTermQueryTerm term throws TooManyBasicQueries checkMaxreturn new TermQueryterm
"public HindiStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public HindiStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public DecisionInfo[] getDecisionInfo() {return atnSimulator.getDecisionInfo();},public DecisionInfo getDecisionInfo return atnSimulatorgetDecisionInfo
"public String toString() {return ""<regexp field='"" + this.field + ""' term='"" + this.text + ""'/>"";}",public String toString return regexp field  thisfield   term  thistext  
public CreateStackSetResult createStackSet(CreateStackSetRequest request) {request = beforeClientExecution(request);return executeCreateStackSet(request);},public CreateStackSetResult createStackSetCreateStackSetRequest request request  beforeClientExecutionrequestreturn executeCreateStackSetrequest
public SendMessagesResult sendMessages(SendMessagesRequest request) {request = beforeClientExecution(request);return executeSendMessages(request);},public SendMessagesResult sendMessagesSendMessagesRequest request request  beforeClientExecutionrequestreturn executeSendMessagesrequest
"public synchronized void setCharAt(int index, char ch) {super.setCharAt(index, ch);}",public synchronized void setCharAtint index char ch supersetCharAtindex ch
public CreateIntegrationResult createIntegration(CreateIntegrationRequest request) {request = beforeClientExecution(request);return executeCreateIntegration(request);},public CreateIntegrationResult createIntegrationCreateIntegrationRequest request request  beforeClientExecutionrequestreturn executeCreateIntegrationrequest
public void execute(Lexer lexer) {lexer.mode(mode);},public void executeLexer lexer lexermodemode
public void readFully(byte[] dst) throws IOException {primitiveTypes.readFully(dst);},public void readFullybyte dst throws IOException primitiveTypesreadFullydst
"public final void decRef() throws IOException {ensureOpen();final int rc = refCount.decrementAndGet();if (rc == 0) {boolean success = false;try {doClose();closed = true;success = true;} finally {if (!success) {refCount.incrementAndGet();}}} else if (rc < 0) {throw new IllegalStateException(""too many decRef calls: refCount is "" + rc + "" after decrement"");}}",public final void decRef throws IOException ensureOpenfinal int rc  refCountdecrementAndGetif rc  0 boolean success  falsetry doCloseclosed  truesuccess  true finally if success refCountincrementAndGet else if rc  0 throw new IllegalStateExceptiontoo many decRef calls refCount is   rc   after decrement
"public String toString() {if ( dfa.s0==null ) return null;StringBuilder buf = new StringBuilder();List<DFAState> states = dfa.getStates();for (DFAState s : states) {int n = 0;if ( s.edges!=null ) n = s.edges.length;for (int i=0; i<n; i++) {DFAState t = s.edges[i];if ( t!=null && t.stateNumber != Integer.MAX_VALUE ) {buf.append(getStateString(s));String label = getEdgeLabel(i);buf.append(""-"").append(label).append(""->"").append(getStateString(t)).append('\n');}}}String output = buf.toString();if ( output.length()==0 ) return null;return output;}",public String toString if  dfas0null  return nullStringBuilder buf  new StringBuilderListDFAState states  dfagetStatesfor DFAState s  states int n  0if  sedgesnull  n  sedgeslengthfor int i0 in i DFAState t  sedgesiif  tnull  tstateNumber  IntegerMAXVALUE  bufappendgetStateStringsString label  getEdgeLabelibufappendappendlabelappendappendgetStateStringtappendnString output  buftoStringif  outputlength0  return nullreturn output
"public static void register(Repository db) {if (db.getDirectory() != null) {FileKey key = FileKey.exact(db.getDirectory(), db.getFS());cache.registerRepository(key, db);}}",public static void registerRepository db if dbgetDirectory  null FileKey key  FileKeyexactdbgetDirectory dbgetFScacheregisterRepositorykey db
public GetConfigurationSetEventDestinationsResult getConfigurationSetEventDestinations(GetConfigurationSetEventDestinationsRequest request) {request = beforeClientExecution(request);return executeGetConfigurationSetEventDestinations(request);},public GetConfigurationSetEventDestinationsResult getConfigurationSetEventDestinationsGetConfigurationSetEventDestinationsRequest request request  beforeClientExecutionrequestreturn executeGetConfigurationSetEventDestinationsrequest
public ByteBuffer put(byte value) {throw new ReadOnlyBufferException();},public ByteBuffer putbyte value throw new ReadOnlyBufferException
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1,ValueEval arg2) {AreaEval aeRange;AreaEval aeSum;try {aeRange = convertRangeArg(arg0);aeSum = createSumRange(arg2, aeRange);} catch (EvaluationException e) {return e.getErrorEval();}return eval(srcRowIndex, srcColumnIndex, arg1, aeRange, aeSum);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1ValueEval arg2 AreaEval aeRangeAreaEval aeSumtry aeRange  convertRangeArgarg0aeSum  createSumRangearg2 aeRange catch EvaluationException e return egetErrorEvalreturn evalsrcRowIndex srcColumnIndex arg1 aeRange aeSum
"public MoPenAddGroupMemberRequest() {super(""MoPen"", ""2018-02-11"", ""MoPenAddGroupMember"", ""mopen"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public MoPenAddGroupMemberRequest superMoPen 20180211 MoPenAddGroupMember mopensetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public DeleteAssessmentTargetResult deleteAssessmentTarget(DeleteAssessmentTargetRequest request) {request = beforeClientExecution(request);return executeDeleteAssessmentTarget(request);},public DeleteAssessmentTargetResult deleteAssessmentTargetDeleteAssessmentTargetRequest request request  beforeClientExecutionrequestreturn executeDeleteAssessmentTargetrequest
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[SXDI]\n"");buffer.append(""  .isxvdData = "").append(HexDump.shortToHex(isxvdData)).append(""\n"");buffer.append(""  .iiftab = "").append(HexDump.shortToHex(iiftab)).append(""\n"");buffer.append(""  .df = "").append(HexDump.shortToHex(df)).append(""\n"");buffer.append(""  .isxvd = "").append(HexDump.shortToHex(isxvd)).append(""\n"");buffer.append(""  .isxvi = "").append(HexDump.shortToHex(isxvi)).append(""\n"");buffer.append(""  .ifmt = "").append(HexDump.shortToHex(ifmt)).append(""\n"");buffer.append(""[/SXDI]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendSXDInbufferappend  isxvdData  appendHexDumpshortToHexisxvdDataappendnbufferappend  iiftab  appendHexDumpshortToHexiiftabappendnbufferappend  df  appendHexDumpshortToHexdfappendnbufferappend  isxvd  appendHexDumpshortToHexisxvdappendnbufferappend  isxvi  appendHexDumpshortToHexisxviappendnbufferappend  ifmt  appendHexDumpshortToHexifmtappendnbufferappendSXDInreturn buffertoString
"public String toString() {return ""LL"";}",public String toString return LL
public DescribeReservedInstancesOfferingsResult describeReservedInstancesOfferings(DescribeReservedInstancesOfferingsRequest request) {request = beforeClientExecution(request);return executeDescribeReservedInstancesOfferings(request);},public DescribeReservedInstancesOfferingsResult describeReservedInstancesOfferingsDescribeReservedInstancesOfferingsRequest request request  beforeClientExecutionrequestreturn executeDescribeReservedInstancesOfferingsrequest
public void setNextEnum(TermsEnum termsEnum) {this.termsEnum = termsEnum;this.boostAtt = termsEnum.attributes().addAttribute(BoostAttribute.class);},public void setNextEnumTermsEnum termsEnum thistermsEnum  termsEnumthisboostAtt  termsEnumattributesaddAttributeBoostAttributeclass
public RevFilter clone() {return new PatternSearch(pattern());},public RevFilter clone return new PatternSearchpattern
public GetRouteResponseResult getRouteResponse(GetRouteResponseRequest request) {request = beforeClientExecution(request);return executeGetRouteResponse(request);},public GetRouteResponseResult getRouteResponseGetRouteResponseRequest request request  beforeClientExecutionrequestreturn executeGetRouteResponserequest
public UpdateLagResult updateLag(UpdateLagRequest request) {request = beforeClientExecution(request);return executeUpdateLag(request);},public UpdateLagResult updateLagUpdateLagRequest request request  beforeClientExecutionrequestreturn executeUpdateLagrequest
public DescribeEndpointResult describeEndpoint(DescribeEndpointRequest request) {request = beforeClientExecution(request);return executeDescribeEndpoint(request);},public DescribeEndpointResult describeEndpointDescribeEndpointRequest request request  beforeClientExecutionrequestreturn executeDescribeEndpointrequest
public void addPositionSpans(List<PositionSpan> positionSpans) {this.positionSpans.addAll(positionSpans);},public void addPositionSpansListPositionSpan positionSpans thispositionSpansaddAllpositionSpans
public boolean remove(Object object) {return backingMap.remove(object) != null;},public boolean removeObject object return backingMapremoveobject  null
public ListPartsResult listParts(ListPartsRequest request) {request = beforeClientExecution(request);return executeListParts(request);},public ListPartsResult listPartsListPartsRequest request request  beforeClientExecutionrequestreturn executeListPartsrequest
public void setForceUpdate(boolean b) {force = b;},public void setForceUpdateboolean b force  b
public void removeCustomProperties() {if (getSectionCount() < 2) {}},public void removeCustomProperties if getSectionCount  2 
public int available() {return remaining();},public int available return remaining
public GetInstanceResult getInstance(GetInstanceRequest request) {request = beforeClientExecution(request);return executeGetInstance(request);},public GetInstanceResult getInstanceGetInstanceRequest request request  beforeClientExecutionrequestreturn executeGetInstancerequest
public UpdateSmsChannelResult updateSmsChannel(UpdateSmsChannelRequest request) {request = beforeClientExecution(request);return executeUpdateSmsChannel(request);},public UpdateSmsChannelResult updateSmsChannelUpdateSmsChannelRequest request request  beforeClientExecutionrequestreturn executeUpdateSmsChannelrequest
public CreateEgressOnlyInternetGatewayResult createEgressOnlyInternetGateway(CreateEgressOnlyInternetGatewayRequest request) {request = beforeClientExecution(request);return executeCreateEgressOnlyInternetGateway(request);},public CreateEgressOnlyInternetGatewayResult createEgressOnlyInternetGatewayCreateEgressOnlyInternetGatewayRequest request request  beforeClientExecutionrequestreturn executeCreateEgressOnlyInternetGatewayrequest
public GetResourcesResult getResources(GetResourcesRequest request) {request = beforeClientExecution(request);return executeGetResources(request);},public GetResourcesResult getResourcesGetResourcesRequest request request  beforeClientExecutionrequestreturn executeGetResourcesrequest
public ByteBlockPool(Allocator allocator) {this.allocator = allocator;},public ByteBlockPoolAllocator allocator thisallocator  allocator
public ListStepsResult listSteps(ListStepsRequest request) {request = beforeClientExecution(request);return executeListSteps(request);},public ListStepsResult listStepsListStepsRequest request request  beforeClientExecutionrequestreturn executeListStepsrequest
public boolean readBoolean() throws IOException {return primitiveTypes.readBoolean();},public boolean readBoolean throws IOException return primitiveTypesreadBoolean
"public PutLogEventsRequest(String logGroupName, String logStreamName, java.util.List<InputLogEvent> logEvents) {setLogGroupName(logGroupName);setLogStreamName(logStreamName);setLogEvents(logEvents);}",public PutLogEventsRequestString logGroupName String logStreamName javautilListInputLogEvent logEvents setLogGroupNamelogGroupNamesetLogStreamNamelogStreamNamesetLogEventslogEvents
public void reset(int sliceOffset) {this.offset = sliceOffset;},public void resetint sliceOffset thisoffset  sliceOffset
public GetAttendeeResult getAttendee(GetAttendeeRequest request) {request = beforeClientExecution(request);return executeGetAttendee(request);},public GetAttendeeResult getAttendeeGetAttendeeRequest request request  beforeClientExecutionrequestreturn executeGetAttendeerequest
public long getFilePointer() {return pointer + pos;},public long getFilePointer return pointer  pos
"public int serializeSimplePart(byte[] data, int pos) {LittleEndian.putShort(data, pos, getId());int recordSize = getComplexData().length;if (!sizeIncludesHeaderSize) {recordSize -= 6;}LittleEndian.putInt(data, pos + 2, recordSize);return 6;}",public int serializeSimplePartbyte data int pos LittleEndianputShortdata pos getIdint recordSize  getComplexDatalengthif sizeIncludesHeaderSize recordSize  6LittleEndianputIntdata pos  2 recordSizereturn 6
"public CherryPickCommand include(AnyObjectId commit) {return include(commit.getName(), commit);}",public CherryPickCommand includeAnyObjectId commit return includecommitgetName commit
"public int readDataSize() {readPlain(buffer, 0, LittleEndianConsts.SHORT_SIZE);int dataSize = LittleEndian.getUShort(buffer, 0);ccis.setNextRecordSize(dataSize);return dataSize;}",public int readDataSize readPlainbuffer 0 LittleEndianConstsSHORTSIZEint dataSize  LittleEndiangetUShortbuffer 0ccissetNextRecordSizedataSizereturn dataSize
"public RemoveUserFromGroupRequest(String groupName, String userName) {setGroupName(groupName);setUserName(userName);}",public RemoveUserFromGroupRequestString groupName String userName setGroupNamegroupNamesetUserNameuserName
public PutImageResult putImage(PutImageRequest request) {request = beforeClientExecution(request);return executePutImage(request);},public PutImageResult putImagePutImageRequest request request  beforeClientExecutionrequestreturn executePutImagerequest
public boolean stem() {limit_backward = cursor;cursor = limit;int v_1 = limit - cursor;r_endings();cursor = limit - v_1;int v_2 = limit - cursor;r_undouble();cursor = limit - v_2;int v_3 = limit - cursor;r_respell();cursor = limit - v_3;cursor = limit_backward;return true;},public boolean stem limitbackward  cursorcursor  limitint v1  limit  cursorrendingscursor  limit  v1int v2  limit  cursorrundoublecursor  limit  v2int v3  limit  cursorrrespellcursor  limit  v3cursor  limitbackwardreturn true
"public IntervalSet[] getDecisionLookahead(ATNState s) {if ( s==null ) {return null;}IntervalSet[] look = new IntervalSet[s.getNumberOfTransitions()];for (int alt = 0; alt < s.getNumberOfTransitions(); alt++) {look[alt] = new IntervalSet();Set<ATNConfig> lookBusy = new HashSet<ATNConfig>();boolean seeThruPreds = false; _LOOK(s.transition(alt).target, null, PredictionContext.EMPTY,look[alt], lookBusy, new BitSet(), seeThruPreds, false);if ( look[alt].size()==0 || look[alt].contains(HIT_PRED) ) {look[alt] = null;}}return look;}",public IntervalSet getDecisionLookaheadATNState s if  snull  return nullIntervalSet look  new IntervalSetsgetNumberOfTransitionsfor int alt  0 alt  sgetNumberOfTransitions alt lookalt  new IntervalSetSetATNConfig lookBusy  new HashSetATNConfigboolean seeThruPreds  false LOOKstransitionalttarget null PredictionContextEMPTYlookalt lookBusy new BitSet seeThruPreds falseif  lookaltsize0  lookaltcontainsHITPRED  lookalt  nullreturn look
"public static Ptg createPtg(LittleEndianInput in) {byte id = in.readByte();if (id < 0x20) {return createBasePtg(id, in);}Ptg  retval = createClassifiedPtg(id, in);if (id >= 0x60) {retval.setClass(CLASS_ARRAY);} else if (id >= 0x40) {retval.setClass(CLASS_VALUE);} else {retval.setClass(CLASS_REF);}return retval;}",public static Ptg createPtgLittleEndianInput in byte id  inreadByteif id  0x20 return createBasePtgid inPtg  retval  createClassifiedPtgid inif id  0x60 retvalsetClassCLASSARRAY else if id  0x40 retvalsetClassCLASSVALUE else retvalsetClassCLASSREFreturn retval
public ListEntitiesDetectionJobsResult listEntitiesDetectionJobs(ListEntitiesDetectionJobsRequest request) {request = beforeClientExecution(request);return executeListEntitiesDetectionJobs(request);},public ListEntitiesDetectionJobsResult listEntitiesDetectionJobsListEntitiesDetectionJobsRequest request request  beforeClientExecutionrequestreturn executeListEntitiesDetectionJobsrequest
public ListReviewableHITsResult listReviewableHITs(ListReviewableHITsRequest request) {request = beforeClientExecution(request);return executeListReviewableHITs(request);},public ListReviewableHITsResult listReviewableHITsListReviewableHITsRequest request request  beforeClientExecutionrequestreturn executeListReviewableHITsrequest
"public OperationEvaluationContext(WorkbookEvaluator bookEvaluator, EvaluationWorkbook workbook, int sheetIndex, int srcRowNum,int srcColNum, EvaluationTracker tracker) {this(bookEvaluator, workbook, sheetIndex, srcRowNum, srcColNum, tracker, true);}",public OperationEvaluationContextWorkbookEvaluator bookEvaluator EvaluationWorkbook workbook int sheetIndex int srcRowNumint srcColNum EvaluationTracker tracker thisbookEvaluator workbook sheetIndex srcRowNum srcColNum tracker true
public void setMaxDocFreqPct(int maxPercentage) {setMaxDocFreq(Math.toIntExact((long) maxPercentage * ir.maxDoc() / 100));},public void setMaxDocFreqPctint maxPercentage setMaxDocFreqMathtoIntExactlong maxPercentage  irmaxDoc  100
"public final void lazySet(V newValue) {unsafe.putOrderedObject(this, valueOffset, newValue);}",public final void lazySetV newValue unsafeputOrderedObjectthis valueOffset newValue
public UpdateVpcLinkResult updateVpcLink(UpdateVpcLinkRequest request) {request = beforeClientExecution(request);return executeUpdateVpcLink(request);},public UpdateVpcLinkResult updateVpcLinkUpdateVpcLinkRequest request request  beforeClientExecutionrequestreturn executeUpdateVpcLinkrequest
public void removeNoteCount() {remove1stProperty(PropertyIDMap.PID_NOTECOUNT);},public void removeNoteCount remove1stPropertyPropertyIDMapPIDNOTECOUNT
"public Ref setValue(Ref value) {Ref prior = put(getKey(), value);ref = value;return prior;}",public Ref setValueRef value Ref prior  putgetKey valueref  valuereturn prior
public RevCommit getSourceCommit(int idx) {return sourceCommits[idx];},public RevCommit getSourceCommitint idx return sourceCommitsidx
"public ClassicTokenizerFactory(Map<String,String> args) {super(args);maxTokenLength = getInt(args, ""maxTokenLength"", StandardAnalyzer.DEFAULT_MAX_TOKEN_LENGTH);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public ClassicTokenizerFactoryMapStringString args superargsmaxTokenLength  getIntargs maxTokenLength StandardAnalyzerDEFAULTMAXTOKENLENGTHif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public GetDistributionResult getDistribution(GetDistributionRequest request) {request = beforeClientExecution(request);return executeGetDistribution(request);},public GetDistributionResult getDistributionGetDistributionRequest request request  beforeClientExecutionrequestreturn executeGetDistributionrequest
"public long seek(long ord) {long idx = ord / indexInterval;assert idx < fieldIndex.numIndexTerms;final long offset = fieldIndex.termOffsets.get(idx);final int length = (int) (fieldIndex.termOffsets.get(1+idx) - offset);termBytesReader.fillSlice(term, fieldIndex.termBytesStart + offset, length);this.ord = idx * indexInterval;return fieldIndex.termsStart + fieldIndex.termsDictOffsets.get(idx);}",public long seeklong ord long idx  ord  indexIntervalassert idx  fieldIndexnumIndexTermsfinal long offset  fieldIndextermOffsetsgetidxfinal int length  int fieldIndextermOffsetsget1idx  offsettermBytesReaderfillSliceterm fieldIndextermBytesStart  offset lengththisord  idx  indexIntervalreturn fieldIndextermsStart  fieldIndextermsDictOffsetsgetidx
public DescribeInterconnectsResult describeInterconnects(DescribeInterconnectsRequest request) {request = beforeClientExecution(request);return executeDescribeInterconnects(request);},public DescribeInterconnectsResult describeInterconnectsDescribeInterconnectsRequest request request  beforeClientExecutionrequestreturn executeDescribeInterconnectsrequest
public static EvaluationException invalidValue() {return new EvaluationException(ErrorEval.VALUE_INVALID);},public static EvaluationException invalidValue return new EvaluationExceptionErrorEvalVALUEINVALID
"public static String escapeWhitespace(String s, boolean escapeSpaces) {StringBuilder buf = new StringBuilder();for (char c : s.toCharArray()) {if ( c==' ' && escapeSpaces ) buf.append('\u00B7');else if ( c=='\t' ) buf.append(""\\t"");else if ( c=='\n' ) buf.append(""\\n"");else if ( c=='\r' ) buf.append(""\\r"");else buf.append(c);}return buf.toString();}",public static String escapeWhitespaceString s boolean escapeSpaces StringBuilder buf  new StringBuilderfor char c  stoCharArray if  c   escapeSpaces  bufappendu00B7else if  ct  bufappendtelse if  cn  bufappendnelse if  cr  bufappendrelse bufappendcreturn buftoString
public DescribeOrderableClusterOptionsResult describeOrderableClusterOptions(DescribeOrderableClusterOptionsRequest request) {request = beforeClientExecution(request);return executeDescribeOrderableClusterOptions(request);},public DescribeOrderableClusterOptionsResult describeOrderableClusterOptionsDescribeOrderableClusterOptionsRequest request request  beforeClientExecutionrequestreturn executeDescribeOrderableClusterOptionsrequest
"public DeleteArchiveRequest(String vaultName, String archiveId) {setVaultName(vaultName);setArchiveId(archiveId);}",public DeleteArchiveRequestString vaultName String archiveId setVaultNamevaultNamesetArchiveIdarchiveId
public DescribeSnapshotsResult describeSnapshots(DescribeSnapshotsRequest request) {request = beforeClientExecution(request);return executeDescribeSnapshots(request);},public DescribeSnapshotsResult describeSnapshotsDescribeSnapshotsRequest request request  beforeClientExecutionrequestreturn executeDescribeSnapshotsrequest
public BatchDeleteClusterSnapshotsResult batchDeleteClusterSnapshots(BatchDeleteClusterSnapshotsRequest request) {request = beforeClientExecution(request);return executeBatchDeleteClusterSnapshots(request);},public BatchDeleteClusterSnapshotsResult batchDeleteClusterSnapshotsBatchDeleteClusterSnapshotsRequest request request  beforeClientExecutionrequestreturn executeBatchDeleteClusterSnapshotsrequest
public DescribeClientVpnRoutesResult describeClientVpnRoutes(DescribeClientVpnRoutesRequest request) {request = beforeClientExecution(request);return executeDescribeClientVpnRoutes(request);},public DescribeClientVpnRoutesResult describeClientVpnRoutesDescribeClientVpnRoutesRequest request request  beforeClientExecutionrequestreturn executeDescribeClientVpnRoutesrequest
"public String toString() {String padd = getPadding();StringBuilder sb = new StringBuilder(super.toString());sb.append(parallel ? "" ["" : "" {"");sb.append(NEW_LINE);for (final PerfTask task : tasks) {sb.append(task.toString());sb.append(NEW_LINE);}sb.append(padd);sb.append(!letChildReport ? "">"" : (parallel ? ""]"" : ""}""));if (fixedTime) {sb.append(' ').append(NumberFormat.getNumberInstance(Locale.ROOT).format(runTimeSec)).append('s');} else if (repetitions>1) {sb.append("" * "").append(repetitions);} else if (repetitions==REPEAT_EXHAUST) {sb.append("" * EXHAUST"");}if (rate>0) {sb.append("",  rate: "").append(rate).append('/').append(perMin ? ""min"" : ""sec"");}if (getRunInBackground()) {sb.append("" &"");int x = getBackgroundDeltaPriority();if (x != 0) {sb.append(x);}}return sb.toString();}",public String toString String padd  getPaddingStringBuilder sb  new StringBuildersupertoStringsbappendparallel      sbappendNEWLINEfor final PerfTask task  tasks sbappendtasktoStringsbappendNEWLINEsbappendpaddsbappendletChildReport    parallel    if fixedTime sbappend appendNumberFormatgetNumberInstanceLocaleROOTformatrunTimeSecappends else if repetitions1 sbappend  appendrepetitions else if repetitionsREPEATEXHAUST sbappend  EXHAUSTif rate0 sbappend  rate appendrateappendappendperMin  min  secif getRunInBackground sbappend int x  getBackgroundDeltaPriorityif x  0 sbappendxreturn sbtoString
public void serialize(LittleEndianOutput out) {out.writeDouble(field_1_minimumAxisValue);out.writeDouble(field_2_maximumAxisValue);out.writeDouble(field_3_majorIncrement);out.writeDouble(field_4_minorIncrement);out.writeDouble(field_5_categoryAxisCross);out.writeShort(field_6_options);},public void serializeLittleEndianOutput out outwriteDoublefield1minimumAxisValueoutwriteDoublefield2maximumAxisValueoutwriteDoublefield3majorIncrementoutwriteDoublefield4minorIncrementoutwriteDoublefield5categoryAxisCrossoutwriteShortfield6options
public final void makeReadOnly() {readOnly = true;},public final void makeReadOnly readOnly  true
public DescribeDirectConnectGatewaysResult describeDirectConnectGateways(DescribeDirectConnectGatewaysRequest request) {request = beforeClientExecution(request);return executeDescribeDirectConnectGateways(request);},public DescribeDirectConnectGatewaysResult describeDirectConnectGatewaysDescribeDirectConnectGatewaysRequest request request  beforeClientExecutionrequestreturn executeDescribeDirectConnectGatewaysrequest
public GetUsagePlanKeyResult getUsagePlanKey(GetUsagePlanKeyRequest request) {request = beforeClientExecution(request);return executeGetUsagePlanKey(request);},public GetUsagePlanKeyResult getUsagePlanKeyGetUsagePlanKeyRequest request request  beforeClientExecutionrequestreturn executeGetUsagePlanKeyrequest
public DescribeVpcEndpointConnectionNotificationsResult describeVpcEndpointConnectionNotifications(DescribeVpcEndpointConnectionNotificationsRequest request) {request = beforeClientExecution(request);return executeDescribeVpcEndpointConnectionNotifications(request);},public DescribeVpcEndpointConnectionNotificationsResult describeVpcEndpointConnectionNotificationsDescribeVpcEndpointConnectionNotificationsRequest request request  beforeClientExecutionrequestreturn executeDescribeVpcEndpointConnectionNotificationsrequest
public UpdateGatewayGroupResult updateGatewayGroup(UpdateGatewayGroupRequest request) {request = beforeClientExecution(request);return executeUpdateGatewayGroup(request);},public UpdateGatewayGroupResult updateGatewayGroupUpdateGatewayGroupRequest request request  beforeClientExecutionrequestreturn executeUpdateGatewayGrouprequest
public DetachClassicLinkVpcResult detachClassicLinkVpc(DetachClassicLinkVpcRequest request) {request = beforeClientExecution(request);return executeDetachClassicLinkVpc(request);},public DetachClassicLinkVpcResult detachClassicLinkVpcDetachClassicLinkVpcRequest request request  beforeClientExecutionrequestreturn executeDetachClassicLinkVpcrequest
public ListOperationsResult listOperations() {return listOperations(new ListOperationsRequest());},public ListOperationsResult listOperations return listOperationsnew ListOperationsRequest
public BatchDeletePhoneNumberResult batchDeletePhoneNumber(BatchDeletePhoneNumberRequest request) {request = beforeClientExecution(request);return executeBatchDeletePhoneNumber(request);},public BatchDeletePhoneNumberResult batchDeletePhoneNumberBatchDeletePhoneNumberRequest request request  beforeClientExecutionrequestreturn executeBatchDeletePhoneNumberrequest
public void setExpireAgeMillis(long expireAgeMillis) {this.expireAgeMillis = expireAgeMillis;expire = null;},public void setExpireAgeMillislong expireAgeMillis thisexpireAgeMillis  expireAgeMillisexpire  null
public DeactivateEventSourceResult deactivateEventSource(DeactivateEventSourceRequest request) {request = beforeClientExecution(request);return executeDeactivateEventSource(request);},public DeactivateEventSourceResult deactivateEventSourceDeactivateEventSourceRequest request request  beforeClientExecutionrequestreturn executeDeactivateEventSourcerequest
"public void readBytes(byte[] b, int offset, int len) {System.arraycopy(bytes, pos, b, offset, len);pos += len;}",public void readBytesbyte b int offset int len Systemarraycopybytes pos b offset lenpos  len
"public IntBuffer put(int index, int c) {throw new ReadOnlyBufferException();}",public IntBuffer putint index int c throw new ReadOnlyBufferException
public SendUsersMessagesResult sendUsersMessages(SendUsersMessagesRequest request) {request = beforeClientExecution(request);return executeSendUsersMessages(request);},public SendUsersMessagesResult sendUsersMessagesSendUsersMessagesRequest request request  beforeClientExecutionrequestreturn executeSendUsersMessagesrequest
public MissingFormatWidthException(String s) {if (s == null) {throw new NullPointerException();}this.s = s;},public MissingFormatWidthExceptionString s if s  null throw new NullPointerExceptionthiss  s
public DescribeVolumesRequest(java.util.List<String> volumeIds) {setVolumeIds(volumeIds);},public DescribeVolumesRequestjavautilListString volumeIds setVolumeIdsvolumeIds
"public SubmitCutoutTaskRequest() {super(""lubancloud"", ""2018-05-09"", ""SubmitCutoutTask"", ""luban"");setMethod(MethodType.POST);}",public SubmitCutoutTaskRequest superlubancloud 20180509 SubmitCutoutTask lubansetMethodMethodTypePOST
public DoubleBuffer asReadOnlyBuffer() {return duplicate();},public DoubleBuffer asReadOnlyBuffer return duplicate
@Override public int size() {return subMap.size();},Override public int size return subMapsize
public CreateLabelsResult createLabels(CreateLabelsRequest request) {request = beforeClientExecution(request);return executeCreateLabels(request);},public CreateLabelsResult createLabelsCreateLabelsRequest request request  beforeClientExecutionrequestreturn executeCreateLabelsrequest
public boolean isEmpty() {return size == 0;},public boolean isEmpty return size  0
public int getRenameScore() {return outCandidate.renameScore;},public int getRenameScore return outCandidaterenameScore
"public SeriesTextRecord() {field_4_text = """";is16bit = false;}",public SeriesTextRecord field4text  is16bit  false
public char get() {if (position == limit) {throw new BufferUnderflowException();}return sequence.charAt(position++);},public char get if position  limit throw new BufferUnderflowExceptionreturn sequencecharAtposition
"public static double irr(double[] values, double guess) {double x0 = guess;for (int i = 0; i < MAX_ITERATION_COUNT; i++) {final double factor = 1.0 + x0;double denominator = factor;if (denominator == 0) {return Double.NaN;}double fValue = values[0];double fDerivative = 0;for (int k = 1; k < values.length; k++) {final double value = values[k];fValue += value / denominator;denominator *= factor;fDerivative -= k * value / denominator;}if (fDerivative == 0) {return Double.NaN;}double x1 =  x0 - fValue/fDerivative;if (Math.abs(x1 - x0) <= ABSOLUTE_ACCURACY) {return x1;}x0 = x1;}return Double.NaN;}",public static double irrdouble values double guess double x0  guessfor int i  0 i  MAXITERATIONCOUNT i final double factor  10  x0double denominator  factorif denominator  0 return DoubleNaNdouble fValue  values0double fDerivative  0for int k  1 k  valueslength k final double value  valueskfValue  value  denominatordenominator  factorfDerivative  k  value  denominatorif fDerivative  0 return DoubleNaNdouble x1   x0  fValuefDerivativeif Mathabsx1  x0  ABSOLUTEACCURACY return x1x0  x1return DoubleNaN
"public static String toHex(long value) {StringBuilder sb = new StringBuilder(16);writeHex(sb, value, 16, """");return sb.toString();}",public static String toHexlong value StringBuilder sb  new StringBuilder16writeHexsb value 16 return sbtoString
public void skip() {_type = SKIP;},public void skip type  SKIP
public HSSFClientAnchor getPreferredSize(){return getPreferredSize(1.0);},public HSSFClientAnchor getPreferredSizereturn getPreferredSize10
"public void fromRaw(int[] ints) {fromRaw(ints, 0);}",public void fromRawint ints fromRawints 0
public ModifyClusterParameterGroupResult modifyClusterParameterGroup(ModifyClusterParameterGroupRequest request) {request = beforeClientExecution(request);return executeModifyClusterParameterGroup(request);},public ModifyClusterParameterGroupResult modifyClusterParameterGroupModifyClusterParameterGroupRequest request request  beforeClientExecutionrequestreturn executeModifyClusterParameterGrouprequest
"public boolean get(URIish uri, List<CredentialItem> items)throws UnsupportedCredentialItem {return get(uri, items.toArray(new CredentialItem[0]));}",public boolean getURIish uri ListCredentialItem itemsthrows UnsupportedCredentialItem return geturi itemstoArraynew CredentialItem0
public synchronized FormatType getFormat() {return acceptFormat;},public synchronized FormatType getFormat return acceptFormat
public ListTypesResult listTypes(ListTypesRequest request) {request = beforeClientExecution(request);return executeListTypes(request);},public ListTypesResult listTypesListTypesRequest request request  beforeClientExecutionrequestreturn executeListTypesrequest
public K next() { return nextEntry().key; },public K next  return nextEntrykey 
public StartAssessmentRunResult startAssessmentRun(StartAssessmentRunRequest request) {request = beforeClientExecution(request);return executeStartAssessmentRun(request);},public StartAssessmentRunResult startAssessmentRunStartAssessmentRunRequest request request  beforeClientExecutionrequestreturn executeStartAssessmentRunrequest
"public boolean equals(Object obj) {if ( this==obj ) return true;if ( !(obj instanceof OR) ) return false;OR other = (OR)obj;return Arrays.equals(this.opnds, other.opnds);}",public boolean equalsObject obj if  thisobj  return trueif  obj instanceof OR  return falseOR other  ORobjreturn Arraysequalsthisopnds otheropnds
public boolean equals(Object other) {return ((PointTransitions) other).point == point;},public boolean equalsObject other return PointTransitions otherpoint  point
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1,ValueEval arg2, ValueEval arg3) {throw new RuntimeException(""Incomplete code""+ "" - don't know how to support the 'area_num' parameter yet)"");}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1ValueEval arg2 ValueEval arg3 throw new RuntimeExceptionIncomplete code   dont know how to support the areanum parameter yet
public DescribeClusterParametersResult describeClusterParameters(DescribeClusterParametersRequest request) {request = beforeClientExecution(request);return executeDescribeClusterParameters(request);},public DescribeClusterParametersResult describeClusterParametersDescribeClusterParametersRequest request request  beforeClientExecutionrequestreturn executeDescribeClusterParametersrequest
public String typeName() {return typeName;},public String typeName return typeName
public CreateModelPackageResult createModelPackage(CreateModelPackageRequest request) {request = beforeClientExecution(request);return executeCreateModelPackage(request);},public CreateModelPackageResult createModelPackageCreateModelPackageRequest request request  beforeClientExecutionrequestreturn executeCreateModelPackagerequest
public long ramBytesUsed() {long mem = RamUsageEstimator.shallowSizeOf(this) + RamUsageEstimator.sizeOf(offsets);if (offsets != ordinals) {mem += RamUsageEstimator.sizeOf(ordinals);}return mem;},public long ramBytesUsed long mem  RamUsageEstimatorshallowSizeOfthis  RamUsageEstimatorsizeOfoffsetsif offsets  ordinals mem  RamUsageEstimatorsizeOfordinalsreturn mem
public final int get(int index) {checkIndex(index);return backingArray[offset + index];},public final int getint index checkIndexindexreturn backingArrayoffset  index
public final State captureState() {final State state = this.getCurrentState();return (state == null) ? null : state.clone();},public final State captureState final State state  thisgetCurrentStatereturn state  null  null  stateclone
"public String toString() {CellReference cr = new CellReference(getRow(), getColumn());return getClass().getName() + ""["" +_evaluator.getSheetNameRange() +'!' +cr.formatAsString() +""]"";}",public String toString CellReference cr  new CellReferencegetRow getColumnreturn getClassgetName   evaluatorgetSheetNameRange  crformatAsString 
public CharBuffer compact() {throw new ReadOnlyBufferException();},public CharBuffer compact throw new ReadOnlyBufferException
public DetectCustomLabelsResult detectCustomLabels(DetectCustomLabelsRequest request) {request = beforeClientExecution(request);return executeDetectCustomLabels(request);},public DetectCustomLabelsResult detectCustomLabelsDetectCustomLabelsRequest request request  beforeClientExecutionrequestreturn executeDetectCustomLabelsrequest
public int indexOf(final int o){int rval = 0;for (; rval < _limit; rval++){if (o == _array[ rval ]){break;}}if (rval == _limit){rval = -1;   }return rval;},public int indexOffinal int oint rval  0for  rval  limit rvalif o  array rval breakif rval  limitrval  1   return rval
"public boolean matches(int symbol, int minVocabSymbol, int maxVocabSymbol) {return symbol >= minVocabSymbol && symbol <= maxVocabSymbol;}",public boolean matchesint symbol int minVocabSymbol int maxVocabSymbol return symbol  minVocabSymbol  symbol  maxVocabSymbol
@Override public int indexOf(Object object) {Object[] a = array;int s = size;if (object != null) {for (int i = 0; i < s; i++) {if (object.equals(a[i])) {return i;}}} else {for (int i = 0; i < s; i++) {if (a[i] == null) {return i;}}}return -1;},Override public int indexOfObject object Object a  arrayint s  sizeif object  null for int i  0 i  s i if objectequalsai return i else for int i  0 i  s i if ai  null return ireturn 1
public void setObjectChecking(boolean on) {setObjectChecker(on ? new ObjectChecker() : null);},public void setObjectCheckingboolean on setObjectCheckeron  new ObjectChecker  null
public ModifyVpcEndpointResult modifyVpcEndpoint(ModifyVpcEndpointRequest request) {request = beforeClientExecution(request);return executeModifyVpcEndpoint(request);},public ModifyVpcEndpointResult modifyVpcEndpointModifyVpcEndpointRequest request request  beforeClientExecutionrequestreturn executeModifyVpcEndpointrequest
public DeleteMethodResponseResult deleteMethodResponse(DeleteMethodResponseRequest request) {request = beforeClientExecution(request);return executeDeleteMethodResponse(request);},public DeleteMethodResponseResult deleteMethodResponseDeleteMethodResponseRequest request request  beforeClientExecutionrequestreturn executeDeleteMethodResponserequest
public StringRecord( RecordInputStream in) {int field_1_string_length           = in.readUShort();_is16bitUnicode            = in.readByte() != 0x00;if (_is16bitUnicode){_text = in.readUnicodeLEString(field_1_string_length);} else {_text = in.readCompressedUnicode(field_1_string_length);}},public StringRecord RecordInputStream in int field1stringlength            inreadUShortis16bitUnicode             inreadByte  0x00if is16bitUnicodetext  inreadUnicodeLEStringfield1stringlength else text  inreadCompressedUnicodefield1stringlength
public DrawingRecord(RecordInputStream in) {recordData = in.readRemainder();},public DrawingRecordRecordInputStream in recordData  inreadRemainder
public GetProfileResult getProfile(GetProfileRequest request) {request = beforeClientExecution(request);return executeGetProfile(request);},public GetProfileResult getProfileGetProfileRequest request request  beforeClientExecutionrequestreturn executeGetProfilerequest
public DescribeTableResult describeTable(String tableName) {return describeTable(new DescribeTableRequest().withTableName(tableName));},public DescribeTableResult describeTableString tableName return describeTablenew DescribeTableRequestwithTableNametableName
public GetSegmentResult getSegment(GetSegmentRequest request) {request = beforeClientExecution(request);return executeGetSegment(request);},public GetSegmentResult getSegmentGetSegmentRequest request request  beforeClientExecutionrequestreturn executeGetSegmentrequest
"public IntBuffer duplicate() {return copy(this, mark);}",public IntBuffer duplicate return copythis mark
public PutAlarmResult putAlarm(PutAlarmRequest request) {request = beforeClientExecution(request);return executePutAlarm(request);},public PutAlarmResult putAlarmPutAlarmRequest request request  beforeClientExecutionrequestreturn executePutAlarmrequest
public boolean matches(ValueEval x) {int testValue;if(x instanceof StringEval) {return false;} else if((x instanceof BoolEval)) {BoolEval be = (BoolEval) x;testValue = boolToInt(be.getBooleanValue());} else if((x instanceof BlankEval)) {switch (getCode()) {case CmpOp.NE:return true;default:return false;}} else if((x instanceof NumberEval)) {switch (getCode()) {case CmpOp.NE:return true;default:return false;}} else {return false;}return evaluate(testValue - _value);},public boolean matchesValueEval x int testValueifx instanceof StringEval return false else ifx instanceof BoolEval BoolEval be  BoolEval xtestValue  boolToIntbegetBooleanValue else ifx instanceof BlankEval switch getCode case CmpOpNEreturn truedefaultreturn false else ifx instanceof NumberEval switch getCode case CmpOpNEreturn truedefaultreturn false else return falsereturn evaluatetestValue  value
public DeleteTrialResult deleteTrial(DeleteTrialRequest request) {request = beforeClientExecution(request);return executeDeleteTrial(request);},public DeleteTrialResult deleteTrialDeleteTrialRequest request request  beforeClientExecutionrequestreturn executeDeleteTrialrequest
public String toString() {return set.toString();},public String toString return settoString
"public String toString(String field) {StringBuilder buffer = new StringBuilder();if (!getField().equals(field)) {buffer.append(getField());buffer.append("":"");}buffer.append(includeLower ? '[' : '{');buffer.append(lowerTerm != null ? (""*"".equals(Term.toString(lowerTerm)) ? ""\\*"" : Term.toString(lowerTerm))  : ""*"");buffer.append("" TO "");buffer.append(upperTerm != null ? (""*"".equals(Term.toString(upperTerm)) ? ""\\*"" : Term.toString(upperTerm)) : ""*"");buffer.append(includeUpper ? ']' : '}');return buffer.toString();}",public String toStringString field StringBuilder buffer  new StringBuilderif getFieldequalsfield bufferappendgetFieldbufferappendbufferappendincludeLower    bufferappendlowerTerm  null  equalsTermtoStringlowerTerm    TermtoStringlowerTerm   bufferappend TO bufferappendupperTerm  null  equalsTermtoStringupperTerm    TermtoStringupperTerm  bufferappendincludeUpper    return buffertoString
public void reset() {count = 0;},public void reset count  0
"public int[] init() {return bytesStart = new int[ArrayUtil.oversize(initSize, Integer.BYTES)];}",public int init return bytesStart  new intArrayUtiloversizeinitSize IntegerBYTES
"public int codePointBefore(int index) {if (index < 1 || index > count) {throw indexAndLength(index);}return Character.codePointBefore(value, index);}",public int codePointBeforeint index if index  1  index  count throw indexAndLengthindexreturn CharactercodePointBeforevalue index
"public String toString() {return ""SkipWorkTree("" + treeIdx + "")"";}",public String toString return SkipWorkTree  treeIdx  
public GetLifecyclePoliciesResult getLifecyclePolicies(GetLifecyclePoliciesRequest request) {request = beforeClientExecution(request);return executeGetLifecyclePolicies(request);},public GetLifecyclePoliciesResult getLifecyclePoliciesGetLifecyclePoliciesRequest request request  beforeClientExecutionrequestreturn executeGetLifecyclePoliciesrequest
"public NRTCachingDirectory(Directory delegate, double maxMergeSizeMB, double maxCachedMB) {super(delegate);maxMergeSizeBytes = (long) (maxMergeSizeMB * 1024 * 1024);maxCachedBytes = (long) (maxCachedMB * 1024 * 1024);}",public NRTCachingDirectoryDirectory delegate double maxMergeSizeMB double maxCachedMB superdelegatemaxMergeSizeBytes  long maxMergeSizeMB  1024  1024maxCachedBytes  long maxCachedMB  1024  1024
"public void visitContainedRecords(RecordVisitor rv) {visitIfPresent(_protectRecord, rv);visitIfPresent(_objectProtectRecord, rv);visitIfPresent(_scenarioProtectRecord, rv);visitIfPresent(_passwordRecord, rv);}",public void visitContainedRecordsRecordVisitor rv visitIfPresentprotectRecord rvvisitIfPresentobjectProtectRecord rvvisitIfPresentscenarioProtectRecord rvvisitIfPresentpasswordRecord rv
"public RefSubRecord(int extBookIndex, int firstSheetIndex, int lastSheetIndex) {_extBookIndex = extBookIndex;_firstSheetIndex = firstSheetIndex;_lastSheetIndex = lastSheetIndex;}",public RefSubRecordint extBookIndex int firstSheetIndex int lastSheetIndex extBookIndex  extBookIndexfirstSheetIndex  firstSheetIndexlastSheetIndex  lastSheetIndex
public long getEntryLength() {return current().getLength();},public long getEntryLength return currentgetLength
"public String toString() {return getClass().getSimpleName() + ""(maxLevels:"" + maxLevels + "",ctx:"" + ctx + "")"";}",public String toString return getClassgetSimpleName  maxLevels  maxLevels  ctx  ctx  
public BooleanQueryBuilder(QueryBuilder factory) {this.factory = factory;},public BooleanQueryBuilderQueryBuilder factory thisfactory  factory
"public HSSFShape(EscherContainerRecord spContainer, ObjRecord objRecord) {this._escherContainer = spContainer;this._objRecord = objRecord;this._optRecord = spContainer.getChildById(EscherOptRecord.RECORD_ID);this.anchor = HSSFAnchor.createAnchorFromEscher(spContainer);}",public HSSFShapeEscherContainerRecord spContainer ObjRecord objRecord thisescherContainer  spContainerthisobjRecord  objRecordthisoptRecord  spContainergetChildByIdEscherOptRecordRECORDIDthisanchor  HSSFAnchorcreateAnchorFromEscherspContainer
public ListUpdatesResult listUpdates(ListUpdatesRequest request) {request = beforeClientExecution(request);return executeListUpdates(request);},public ListUpdatesResult listUpdatesListUpdatesRequest request request  beforeClientExecutionrequestreturn executeListUpdatesrequest
public IncreaseStreamRetentionPeriodResult increaseStreamRetentionPeriod(IncreaseStreamRetentionPeriodRequest request) {request = beforeClientExecution(request);return executeIncreaseStreamRetentionPeriod(request);},public IncreaseStreamRetentionPeriodResult increaseStreamRetentionPeriodIncreaseStreamRetentionPeriodRequest request request  beforeClientExecutionrequestreturn executeIncreaseStreamRetentionPeriodrequest
public void writeFloat(float value) throws IOException {checkWritePrimitiveTypes();primitiveTypes.writeFloat(value);},public void writeFloatfloat value throws IOException checkWritePrimitiveTypesprimitiveTypeswriteFloatvalue
public Collection<Cell> getSubCells() {String[] hashes = GeohashUtils.getSubGeohashes(getGeohash());List<Cell> cells = new ArrayList<>(hashes.length);for (String hash : hashes) {cells.add(new GhCell(hash));}return cells;},public CollectionCell getSubCells String hashes  GeohashUtilsgetSubGeohashesgetGeohashListCell cells  new ArrayListhasheslengthfor String hash  hashes cellsaddnew GhCellhashreturn cells
"public StringBuilder insert(int offset, CharSequence s) {insert0(offset, s == null ? ""null"" : s.toString());return this;}",public StringBuilder insertint offset CharSequence s insert0offset s  null  null  stoStringreturn this
"public static Collection<ParseTree> findAllTokenNodes(ParseTree t, int ttype) {return findAllNodes(t, ttype, true);}",public static CollectionParseTree findAllTokenNodesParseTree t int ttype return findAllNodest ttype true
"public NameIdentifier(String name, boolean isQuoted) {_name = name;_isQuoted = isQuoted;}",public NameIdentifierString name boolean isQuoted name  nameisQuoted  isQuoted
"public ObjectLoader open(DiffEntry.Side side, DiffEntry ent)throws IOException {switch (side) {case OLD:return oldSource.open(ent.oldPath, ent.oldId.toObjectId());case NEW:return newSource.open(ent.newPath, ent.newId.toObjectId());default:throw new IllegalArgumentException();}}",public ObjectLoader openDiffEntrySide side DiffEntry entthrows IOException switch side case OLDreturn oldSourceopenentoldPath entoldIdtoObjectIdcase NEWreturn newSourceopenentnewPath entnewIdtoObjectIddefaultthrow new IllegalArgumentException
public DBClusterSnapshot createDBClusterSnapshot(CreateDBClusterSnapshotRequest request) {request = beforeClientExecution(request);return executeCreateDBClusterSnapshot(request);},public DBClusterSnapshot createDBClusterSnapshotCreateDBClusterSnapshotRequest request request  beforeClientExecutionrequestreturn executeCreateDBClusterSnapshotrequest
"public ExternalBookBlock(String url, String[] sheetNames) {_externalBookRecord = SupBookRecord.createExternalReferences(url, sheetNames);_crnBlocks = new CRNBlock[0];}",public ExternalBookBlockString url String sheetNames externalBookRecord  SupBookRecordcreateExternalReferencesurl sheetNamescrnBlocks  new CRNBlock0
"public static int compareWithCase(String a, String b) {for (int i = 0; i < a.length() && i < b.length(); i++) {int d = a.charAt(i) - b.charAt(i);if (d != 0)return d;}return a.length() - b.length();}",public static int compareWithCaseString a String b for int i  0 i  alength  i  blength i int d  acharAti  bcharAtiif d  0return dreturn alength  blength
public RecallPoint [] getRecallPoints() {return recallPoints.toArray(new RecallPoint[0]);},public RecallPoint  getRecallPoints return recallPointstoArraynew RecallPoint0
"public RemoveFacePhotosRequest() {super(""CloudPhoto"", ""2017-07-11"", ""RemoveFacePhotos"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public RemoveFacePhotosRequest superCloudPhoto 20170711 RemoveFacePhotos cloudphotosetProtocolProtocolTypeHTTPS
"public static IntsRef toUTF32(char[] s, int offset, int length, IntsRefBuilder scratch) {int charIdx = offset;int intIdx = 0;final int charLimit = offset + length;while(charIdx < charLimit) {scratch.grow(intIdx+1);final int utf32 = Character.codePointAt(s, charIdx, charLimit);scratch.setIntAt(intIdx, utf32);charIdx += Character.charCount(utf32);intIdx++;}scratch.setLength(intIdx);return scratch.get();}",public static IntsRef toUTF32char s int offset int length IntsRefBuilder scratch int charIdx  offsetint intIdx  0final int charLimit  offset  lengthwhilecharIdx  charLimit scratchgrowintIdx1final int utf32  CharactercodePointAts charIdx charLimitscratchsetIntAtintIdx utf32charIdx  CharactercharCountutf32intIdxscratchsetLengthintIdxreturn scratchget
public void skipBytes(long count) {pos -= count;},public void skipByteslong count pos  count
public void addDataValidation(DVRecord dvRecord) {_validationList.add(dvRecord);_headerRec.setDVRecNo(_validationList.size());},public void addDataValidationDVRecord dvRecord validationListadddvRecordheaderRecsetDVRecNovalidationListsize
"public void setDoubleValue(double value) {if (!(fieldsData instanceof Double)) {throw new IllegalArgumentException(""cannot change value type from "" + fieldsData.getClass().getSimpleName() + "" to Double"");}fieldsData = Double.valueOf(value);}",public void setDoubleValuedouble value if fieldsData instanceof Double throw new IllegalArgumentExceptioncannot change value type from   fieldsDatagetClassgetSimpleName   to DoublefieldsData  DoublevalueOfvalue
"public DeleteRepoAuthorizationRequest() {super(""cr"", ""2016-06-07"", ""DeleteRepoAuthorization"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/authorizations/[AuthorizeId]"");setMethod(MethodType.DELETE);}",public DeleteRepoAuthorizationRequest supercr 20160607 DeleteRepoAuthorization crsetUriPatternreposRepoNamespaceRepoNameauthorizationsAuthorizeIdsetMethodMethodTypeDELETE
"public final void writeObject(Object object) throws IOException {writeObject(object, false);}",public final void writeObjectObject object throws IOException writeObjectobject false
"public String toString() {byte[] raw = toByteArray();CanonicalTreeParser p = new CanonicalTreeParser();p.reset(raw);StringBuilder r = new StringBuilder();r.append(""Tree={"");if (!p.eof()) {r.append('\n');try {new ObjectChecker().checkTree(raw);} catch (CorruptObjectException error) {r.append(""*** ERROR: "").append(error.getMessage()).append(""\n"");r.append('\n');}}while (!p.eof()) {final FileMode mode = p.getEntryFileMode();r.append(mode);r.append(' ');r.append(Constants.typeString(mode.getObjectType()));r.append(' ');r.append(p.getEntryObjectId().name());r.append(' ');r.append(p.getEntryPathString());r.append('\n');p.next();}r.append(""}"");return r.toString();}",public String toString byte raw  toByteArrayCanonicalTreeParser p  new CanonicalTreeParserpresetrawStringBuilder r  new StringBuilderrappendTreeif peof rappendntry new ObjectCheckercheckTreeraw catch CorruptObjectException error rappend ERROR appenderrorgetMessageappendnrappendnwhile peof final FileMode mode  pgetEntryFileModerappendmoderappend rappendConstantstypeStringmodegetObjectTyperappend rappendpgetEntryObjectIdnamerappend rappendpgetEntryPathStringrappendnpnextrappendreturn rtoString
public char getChar(int index) {return (char) getShort(index);},public char getCharint index return char getShortindex
"public String toString() {return ""I(ne)"";}",public String toString return Ine
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[GUTS]\n"");buffer.append(""    .leftgutter     = "").append(Integer.toHexString(getLeftRowGutter())).append(""\n"");buffer.append(""    .topgutter      = "").append(Integer.toHexString(getTopColGutter())).append(""\n"");buffer.append(""    .rowlevelmax    = "").append(Integer.toHexString(getRowLevelMax())).append(""\n"");buffer.append(""    .collevelmax    = "").append(Integer.toHexString(getColLevelMax())).append(""\n"");buffer.append(""[/GUTS]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendGUTSnbufferappend    leftgutter      appendIntegertoHexStringgetLeftRowGutterappendnbufferappend    topgutter       appendIntegertoHexStringgetTopColGutterappendnbufferappend    rowlevelmax     appendIntegertoHexStringgetRowLevelMaxappendnbufferappend    collevelmax     appendIntegertoHexStringgetColLevelMaxappendnbufferappendGUTSnreturn buffertoString
public ParseTree getChild(int i) {return null;},public ParseTree getChildint i return null
public ListInvalidationsResult listInvalidations(ListInvalidationsRequest request) {request = beforeClientExecution(request);return executeListInvalidations(request);},public ListInvalidationsResult listInvalidationsListInvalidationsRequest request request  beforeClientExecutionrequestreturn executeListInvalidationsrequest
"public TokenStream newSinkTokenStream() {return new SinkTokenStream(this.cloneAttributes(), cachedStates);}",public TokenStream newSinkTokenStream return new SinkTokenStreamthiscloneAttributes cachedStates
public PrecedencePredicate(int precedence) {this.precedence = precedence;},public PrecedencePredicateint precedence thisprecedence  precedence
public ReadPresetResult readPreset(ReadPresetRequest request) {request = beforeClientExecution(request);return executeReadPreset(request);},public ReadPresetResult readPresetReadPresetRequest request request  beforeClientExecutionrequestreturn executeReadPresetrequest
public File getIndexFile() throws NoWorkTreeException {if (isBare())throw new NoWorkTreeException();return indexFile;},public File getIndexFile throws NoWorkTreeException if isBarethrow new NoWorkTreeExceptionreturn indexFile
public ListApplicationsResult listApplications(ListApplicationsRequest request) {request = beforeClientExecution(request);return executeListApplications(request);},public ListApplicationsResult listApplicationsListApplicationsRequest request request  beforeClientExecutionrequestreturn executeListApplicationsrequest
"public DataValidationConstraint createNumericConstraint(int validationType,int operatorType, String formula1, String formula2) {return DVConstraint.createNumericConstraint(validationType, operatorType, formula1, formula2);}",public DataValidationConstraint createNumericConstraintint validationTypeint operatorType String formula1 String formula2 return DVConstraintcreateNumericConstraintvalidationType operatorType formula1 formula2
"public int read(byte[] buffer) throws IOException {return read(buffer, 0, buffer.length);}",public int readbyte buffer throws IOException return readbuffer 0 bufferlength
"public String toFormulaString() {return _value ? ""TRUE"" : ""FALSE"";}",public String toFormulaString return value  TRUE  FALSE
"public void write(char[] chars, int offset, int count) {Arrays.checkOffsetAndCount(chars.length, offset, count);if (count == 0) {return;}buf.append(chars, offset, count);}",public void writechar chars int offset int count ArrayscheckOffsetAndCountcharslength offset countif count  0 returnbufappendchars offset count
public void ReInit(CharStream stream) {token_source.ReInit(stream);token = new Token();jj_ntk = -1;jj_gen = 0;for (int i = 0; i < 10; i++) jj_la1[i] = -1;for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();},public void ReInitCharStream stream tokensourceReInitstreamtoken  new Tokenjjntk  1jjgen  0for int i  0 i  10 i jjla1i  1for int i  0 i  jj2rtnslength i jj2rtnsi  new JJCalls
public RevokeDBSecurityGroupIngressRequest(String dBSecurityGroupName) {setDBSecurityGroupName(dBSecurityGroupName);},public RevokeDBSecurityGroupIngressRequestString dBSecurityGroupName setDBSecurityGroupNamedBSecurityGroupName
public InitiateDocumentVersionUploadResult initiateDocumentVersionUpload(InitiateDocumentVersionUploadRequest request) {request = beforeClientExecution(request);return executeInitiateDocumentVersionUpload(request);},public InitiateDocumentVersionUploadResult initiateDocumentVersionUploadInitiateDocumentVersionUploadRequest request request  beforeClientExecutionrequestreturn executeInitiateDocumentVersionUploadrequest
public MemAreaPtg(int subexLen) {field_1_reserved = 0;field_2_subex_len = subexLen;},public MemAreaPtgint subexLen field1reserved  0field2subexlen  subexLen
"public FtrHeader() {associatedRange = new CellRangeAddress(0, 0, 0, 0);}",public FtrHeader associatedRange  new CellRangeAddress0 0 0 0
public IntBuffer compact() {if (byteBuffer.isReadOnly()) {throw new ReadOnlyBufferException();}byteBuffer.limit(limit * SizeOf.INT);byteBuffer.position(position * SizeOf.INT);byteBuffer.compact();byteBuffer.clear();position = limit - position;limit = capacity;mark = UNSET_MARK;return this;},public IntBuffer compact if byteBufferisReadOnly throw new ReadOnlyBufferExceptionbyteBufferlimitlimit  SizeOfINTbyteBufferpositionposition  SizeOfINTbyteBuffercompactbyteBufferclearposition  limit  positionlimit  capacitymark  UNSETMARKreturn this
public String getRawAuthority() {return authority;},public String getRawAuthority return authority
"public void write(byte[] b, int off, int len) throws IOException {if ((off < 0) || (off > b.length) || (len < 0) ||((off + len) > b.length) || ((off + len) < 0)) {throw new IndexOutOfBoundsException();} else if (len == 0) {return;}do {createBlockIfNeeded();int writeBytes = Math.min(buffer.remaining(), len);buffer.put(b, off, writeBytes);off += writeBytes;len -= writeBytes;} while (len > 0);}",public void writebyte b int off int len throws IOException if off  0  off  blength  len  0 off  len  blength  off  len  0 throw new IndexOutOfBoundsException else if len  0 returndo createBlockIfNeededint writeBytes  Mathminbufferremaining lenbufferputb off writeBytesoff  writeByteslen  writeBytes while len  0
"public static void validateSimple(String s, String legal)throws URISyntaxException {for (int i = 0; i < s.length(); i++) {char ch = s.charAt(i);if (!((ch >= 'a' && ch <= 'z')|| (ch >= 'A' && ch <= 'Z')|| (ch >= '0' && ch <= '9')|| legal.indexOf(ch) > -1)) {throw new URISyntaxException(s, ""Illegal character"", i);}}}",public static void validateSimpleString s String legalthrows URISyntaxException for int i  0 i  slength i char ch  scharAtiif ch  a  ch  z ch  A  ch  Z ch  0  ch  9 legalindexOfch  1 throw new URISyntaxExceptions Illegal character i
"public static String readUnicodeString(LittleEndianInput in) {int nChars = in.readUShort();byte flag = in.readByte();if ((flag & 0x01) == 0) {return readCompressedUnicode(in, nChars);}return readUnicodeLE(in, nChars);}",public static String readUnicodeStringLittleEndianInput in int nChars  inreadUShortbyte flag  inreadByteif flag  0x01  0 return readCompressedUnicodein nCharsreturn readUnicodeLEin nChars
public DocValuesOrdinalsReader(String field) {this.field = field;},public DocValuesOrdinalsReaderString field thisfield  field
public AdvertiseByoipCidrResult advertiseByoipCidr(AdvertiseByoipCidrRequest request) {request = beforeClientExecution(request);return executeAdvertiseByoipCidr(request);},public AdvertiseByoipCidrResult advertiseByoipCidrAdvertiseByoipCidrRequest request request  beforeClientExecutionrequestreturn executeAdvertiseByoipCidrrequest
public DescribeAlarmsResult describeAlarms() {return describeAlarms(new DescribeAlarmsRequest());},public DescribeAlarmsResult describeAlarms return describeAlarmsnew DescribeAlarmsRequest
public DescribeCrossAccountAccessRoleResult describeCrossAccountAccessRole(DescribeCrossAccountAccessRoleRequest request) {request = beforeClientExecution(request);return executeDescribeCrossAccountAccessRole(request);},public DescribeCrossAccountAccessRoleResult describeCrossAccountAccessRoleDescribeCrossAccountAccessRoleRequest request request  beforeClientExecutionrequestreturn executeDescribeCrossAccountAccessRolerequest
public StringBuilder reverse() {reverse0();return this;},public StringBuilder reverse reverse0return this
public DescribeImagesResult describeImages(DescribeImagesRequest request) {request = beforeClientExecution(request);return executeDescribeImages(request);},public DescribeImagesResult describeImagesDescribeImagesRequest request request  beforeClientExecutionrequestreturn executeDescribeImagesrequest
public CreateDhcpOptionsRequest(java.util.List<DhcpConfiguration> dhcpConfigurations) {setDhcpConfigurations(dhcpConfigurations);},public CreateDhcpOptionsRequestjavautilListDhcpConfiguration dhcpConfigurations setDhcpConfigurationsdhcpConfigurations
public StartChatContactResult startChatContact(StartChatContactRequest request) {request = beforeClientExecution(request);return executeStartChatContact(request);},public StartChatContactResult startChatContactStartChatContactRequest request request  beforeClientExecutionrequestreturn executeStartChatContactrequest
public GetCampaignsResult getCampaigns(GetCampaignsRequest request) {request = beforeClientExecution(request);return executeGetCampaigns(request);},public GetCampaignsResult getCampaignsGetCampaignsRequest request request  beforeClientExecutionrequestreturn executeGetCampaignsrequest
public GetAssessmentReportResult getAssessmentReport(GetAssessmentReportRequest request) {request = beforeClientExecution(request);return executeGetAssessmentReport(request);},public GetAssessmentReportResult getAssessmentReportGetAssessmentReportRequest request request  beforeClientExecutionrequestreturn executeGetAssessmentReportrequest
"public void reportAmbiguity(Parser recognizer,DFA dfa,int startIndex,int stopIndex,boolean exact,BitSet ambigAlts,ATNConfigSet configs){if (exactOnly && !exact) {return;}String format = ""reportAmbiguity d=%s: ambigAlts=%s, input='%s'"";String decision = getDecisionDescription(recognizer, dfa);BitSet conflictingAlts = getConflictingAlts(ambigAlts, configs);String text = recognizer.getTokenStream().getText(Interval.of(startIndex, stopIndex));String message = String.format(format, decision, conflictingAlts, text);recognizer.notifyErrorListeners(message);}",public void reportAmbiguityParser recognizerDFA dfaint startIndexint stopIndexboolean exactBitSet ambigAltsATNConfigSet configsif exactOnly  exact returnString format  reportAmbiguity ds ambigAltss inputsString decision  getDecisionDescriptionrecognizer dfaBitSet conflictingAlts  getConflictingAltsambigAlts configsString text  recognizergetTokenStreamgetTextIntervalofstartIndex stopIndexString message  Stringformatformat decision conflictingAlts textrecognizernotifyErrorListenersmessage
public Object[] toArray() {synchronized (Hashtable.this) {return super.toArray();}},public Object toArray synchronized Hashtablethis return supertoArray
public boolean contains(Object o) {if (o instanceof RevFlag)return (mask & ((RevFlag) o).mask) != 0;return false;},public boolean containsObject o if o instanceof RevFlagreturn mask  RevFlag omask  0return false
public DisableAlarmActionsResult disableAlarmActions(DisableAlarmActionsRequest request) {request = beforeClientExecution(request);return executeDisableAlarmActions(request);},public DisableAlarmActionsResult disableAlarmActionsDisableAlarmActionsRequest request request  beforeClientExecutionrequestreturn executeDisableAlarmActionsrequest
public RegisterDBProxyTargetsResult registerDBProxyTargets(RegisterDBProxyTargetsRequest request) {request = beforeClientExecution(request);return executeRegisterDBProxyTargets(request);},public RegisterDBProxyTargetsResult registerDBProxyTargetsRegisterDBProxyTargetsRequest request request  beforeClientExecutionrequestreturn executeRegisterDBProxyTargetsrequest
"public static void fill(byte[] array, int start, int end, byte value) {Arrays.checkStartAndEnd(array.length, start, end);for (int i = start; i < end; i++) {array[i] = value;}}",public static void fillbyte array int start int end byte value ArrayscheckStartAndEndarraylength start endfor int i  start i  end i arrayi  value
public boolean containsColumn(int columnIndex) {return _firstCol <= columnIndex && columnIndex <= _lastCol;},public boolean containsColumnint columnIndex return firstCol  columnIndex  columnIndex  lastCol
"public Hashtable() {table = (HashtableEntry<K, V>[]) EMPTY_TABLE;threshold = -1; }",public Hashtable table  HashtableEntryK V EMPTYTABLEthreshold  1 
public final AttributeFactory getAttributeFactory() {return this.factory;},public final AttributeFactory getAttributeFactory return thisfactory
public void onChange(boolean selfChange) {refreshData();},public void onChangeboolean selfChange refreshData
public ListObjectAttributesResult listObjectAttributes(ListObjectAttributesRequest request) {request = beforeClientExecution(request);return executeListObjectAttributes(request);},public ListObjectAttributesResult listObjectAttributesListObjectAttributesRequest request request  beforeClientExecutionrequestreturn executeListObjectAttributesrequest
public GetDeploymentsResult getDeployments(GetDeploymentsRequest request) {request = beforeClientExecution(request);return executeGetDeployments(request);},public GetDeploymentsResult getDeploymentsGetDeploymentsRequest request request  beforeClientExecutionrequestreturn executeGetDeploymentsrequest
public ListWorkGroupsResult listWorkGroups(ListWorkGroupsRequest request) {request = beforeClientExecution(request);return executeListWorkGroups(request);},public ListWorkGroupsResult listWorkGroupsListWorkGroupsRequest request request  beforeClientExecutionrequestreturn executeListWorkGroupsrequest
"public CreatePhotoStoreRequest() {super(""CloudPhoto"", ""2017-07-11"", ""CreatePhotoStore"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public CreatePhotoStoreRequest superCloudPhoto 20170711 CreatePhotoStore cloudphotosetProtocolProtocolTypeHTTPS
public PutMethodResult putMethod(PutMethodRequest request) {request = beforeClientExecution(request);return executePutMethod(request);},public PutMethodResult putMethodPutMethodRequest request request  beforeClientExecutionrequestreturn executePutMethodrequest
public DescribeServiceAccessPoliciesResult describeServiceAccessPolicies(DescribeServiceAccessPoliciesRequest request) {request = beforeClientExecution(request);return executeDescribeServiceAccessPolicies(request);},public DescribeServiceAccessPoliciesResult describeServiceAccessPoliciesDescribeServiceAccessPoliciesRequest request request  beforeClientExecutionrequestreturn executeDescribeServiceAccessPoliciesrequest
public DescribeCacheParameterGroupsResult describeCacheParameterGroups() {return describeCacheParameterGroups(new DescribeCacheParameterGroupsRequest());},public DescribeCacheParameterGroupsResult describeCacheParameterGroups return describeCacheParameterGroupsnew DescribeCacheParameterGroupsRequest
"public Float getAndIncrement(String key) {String key2 = key.trim().toLowerCase(locale);TSTNode node = getNode(key2);if (node == null) {return null;}Float aux = (Float) (node.data);if (aux == null) {aux = 1f;} else {aux = (float) (aux.intValue() + 1);}put(key2, aux);return aux;}",public Float getAndIncrementString key String key2  keytrimtoLowerCaselocaleTSTNode node  getNodekey2if node  null return nullFloat aux  Float nodedataif aux  null aux  1f else aux  float auxintValue  1putkey2 auxreturn aux
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[WINDOWPROTECT]\n"");buffer.append(""    .options = "").append(HexDump.shortToHex(_options)).append(""\n"");buffer.append(""[/WINDOWPROTECT]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendWINDOWPROTECTnbufferappend    options  appendHexDumpshortToHexoptionsappendnbufferappendWINDOWPROTECTnreturn buffertoString
public RetrieveDomainAuthCodeResult retrieveDomainAuthCode(RetrieveDomainAuthCodeRequest request) {request = beforeClientExecution(request);return executeRetrieveDomainAuthCode(request);},public RetrieveDomainAuthCodeResult retrieveDomainAuthCodeRetrieveDomainAuthCodeRequest request request  beforeClientExecutionrequestreturn executeRetrieveDomainAuthCoderequest
public GetRelationalDatabaseMetricDataResult getRelationalDatabaseMetricData(GetRelationalDatabaseMetricDataRequest request) {request = beforeClientExecution(request);return executeGetRelationalDatabaseMetricData(request);},public GetRelationalDatabaseMetricDataResult getRelationalDatabaseMetricDataGetRelationalDatabaseMetricDataRequest request request  beforeClientExecutionrequestreturn executeGetRelationalDatabaseMetricDatarequest
"public Entry<K, V> pollFirstEntry() {Node<K, V> result = endpoint(true);if (result != null) {removeInternal(result);}return immutableCopy(result);}",public EntryK V pollFirstEntry NodeK V result  endpointtrueif result  null removeInternalresultreturn immutableCopyresult
"public LimitTokenPositionFilter(TokenStream in, int maxTokenPosition, boolean consumeAllTokens) {super(in);if (maxTokenPosition < 1) {throw new IllegalArgumentException(""maxTokenPosition must be greater than zero"");}this.maxTokenPosition = maxTokenPosition;this.consumeAllTokens = consumeAllTokens;}",public LimitTokenPositionFilterTokenStream in int maxTokenPosition boolean consumeAllTokens superinif maxTokenPosition  1 throw new IllegalArgumentExceptionmaxTokenPosition must be greater than zerothismaxTokenPosition  maxTokenPositionthisconsumeAllTokens  consumeAllTokens
public ViewFieldsRecord(RecordInputStream in) {_sxaxis = in.readShort();_cSub = in.readShort();_grbitSub = in.readShort();_cItm = in.readShort();int cchName = in.readUShort();if (cchName != STRING_NOT_PRESENT_LEN) {int flag = in.readByte();if ((flag & 0x01) != 0) {_name = in.readUnicodeLEString(cchName);} else {_name = in.readCompressedUnicode(cchName);}}},public ViewFieldsRecordRecordInputStream in sxaxis  inreadShortcSub  inreadShortgrbitSub  inreadShortcItm  inreadShortint cchName  inreadUShortif cchName  STRINGNOTPRESENTLEN int flag  inreadByteif flag  0x01  0 name  inreadUnicodeLEStringcchName else name  inreadCompressedUnicodecchName
"public synchronized static DefaultProfile getProfile(String regionId, String accessKeyId, String secret) {Credential creden = new Credential(accessKeyId, secret);profile = new DefaultProfile(regionId, creden);return profile;}",public synchronized static DefaultProfile getProfileString regionId String accessKeyId String secret Credential creden  new CredentialaccessKeyId secretprofile  new DefaultProfileregionId credenreturn profile
"public int indexOf(String string) {return indexOf(string, 0);}",public int indexOfString string return indexOfstring 0
public ListAppsResult listApps(ListAppsRequest request) {request = beforeClientExecution(request);return executeListApps(request);},public ListAppsResult listAppsListAppsRequest request request  beforeClientExecutionrequestreturn executeListAppsrequest
public ListAttachedIndicesResult listAttachedIndices(ListAttachedIndicesRequest request) {request = beforeClientExecution(request);return executeListAttachedIndices(request);},public ListAttachedIndicesResult listAttachedIndicesListAttachedIndicesRequest request request  beforeClientExecutionrequestreturn executeListAttachedIndicesrequest
public void addShape(HSSFShape shape) {shape.setPatriarch(this);_shapes.add(shape);},public void addShapeHSSFShape shape shapesetPatriarchthisshapesaddshape
public CreateNatGatewayResult createNatGateway(CreateNatGatewayRequest request) {request = beforeClientExecution(request);return executeCreateNatGateway(request);},public CreateNatGatewayResult createNatGatewayCreateNatGatewayRequest request request  beforeClientExecutionrequestreturn executeCreateNatGatewayrequest
public GetApnsVoipChannelResult getApnsVoipChannel(GetApnsVoipChannelRequest request) {request = beforeClientExecution(request);return executeGetApnsVoipChannel(request);},public GetApnsVoipChannelResult getApnsVoipChannelGetApnsVoipChannelRequest request request  beforeClientExecutionrequestreturn executeGetApnsVoipChannelrequest
public ReplaceTransitGatewayRouteResult replaceTransitGatewayRoute(ReplaceTransitGatewayRouteRequest request) {request = beforeClientExecution(request);return executeReplaceTransitGatewayRoute(request);},public ReplaceTransitGatewayRouteResult replaceTransitGatewayRouteReplaceTransitGatewayRouteRequest request request  beforeClientExecutionrequestreturn executeReplaceTransitGatewayRouterequest
public long ramBytesUsed() {return super.ramBytesUsed()+ offsets.ramBytesUsed()+ lengths.ramBytesUsed()+ RamUsageEstimator.NUM_BYTES_OBJECT_HEADER+ 2 * Integer.BYTES+ 3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF+ values.bytes().length;},public long ramBytesUsed return superramBytesUsed offsetsramBytesUsed lengthsramBytesUsed RamUsageEstimatorNUMBYTESOBJECTHEADER 2  IntegerBYTES 3  RamUsageEstimatorNUMBYTESOBJECTREF valuesbyteslength
"public ParseTreePattern compile(String pattern, int patternRuleIndex) {List<? extends Token> tokenList = tokenize(pattern);ListTokenSource tokenSrc = new ListTokenSource(tokenList);CommonTokenStream tokens = new CommonTokenStream(tokenSrc);ParserInterpreter parserInterp = new ParserInterpreter(parser.getGrammarFileName(),parser.getVocabulary(),Arrays.asList(parser.getRuleNames()),parser.getATNWithBypassAlts(),tokens);ParseTree tree = null;try {parserInterp.setErrorHandler(new BailErrorStrategy());tree = parserInterp.parse(patternRuleIndex);}catch (ParseCancellationException e) {throw (RecognitionException)e.getCause();}catch (RecognitionException re) {throw re;}catch (Exception e) {throw new CannotInvokeStartRule(e);}if ( tokens.LA(1)!=Token.EOF ) {throw new StartRuleDoesNotConsumeFullPattern();}return new ParseTreePattern(this, pattern, patternRuleIndex, tree);}",public ParseTreePattern compileString pattern int patternRuleIndex List extends Token tokenList  tokenizepatternListTokenSource tokenSrc  new ListTokenSourcetokenListCommonTokenStream tokens  new CommonTokenStreamtokenSrcParserInterpreter parserInterp  new ParserInterpreterparsergetGrammarFileNameparsergetVocabularyArraysasListparsergetRuleNamesparsergetATNWithBypassAltstokensParseTree tree  nulltry parserInterpsetErrorHandlernew BailErrorStrategytree  parserInterpparsepatternRuleIndexcatch ParseCancellationException e throw RecognitionExceptionegetCausecatch RecognitionException re throw recatch Exception e throw new CannotInvokeStartRuleeif  tokensLA1TokenEOF  throw new StartRuleDoesNotConsumeFullPatternreturn new ParseTreePatternthis pattern patternRuleIndex tree
public GetRelationalDatabaseLogEventsResult getRelationalDatabaseLogEvents(GetRelationalDatabaseLogEventsRequest request) {request = beforeClientExecution(request);return executeGetRelationalDatabaseLogEvents(request);},public GetRelationalDatabaseLogEventsResult getRelationalDatabaseLogEventsGetRelationalDatabaseLogEventsRequest request request  beforeClientExecutionrequestreturn executeGetRelationalDatabaseLogEventsrequest
"public TokenStream create(TokenStream input) {return new BeiderMorseFilter(input, engine, languageSet);}",public TokenStream createTokenStream input return new BeiderMorseFilterinput engine languageSet
"public FloatBuffer duplicate() {return copy(this, mark);}",public FloatBuffer duplicate return copythis mark
"public ClasspathResourceLoader(Class<?> clazz) {this(clazz, clazz.getClassLoader());}",public ClasspathResourceLoaderClass clazz thisclazz clazzgetClassLoader
public DescribeRouteTablesResult describeRouteTables(DescribeRouteTablesRequest request) {request = beforeClientExecution(request);return executeDescribeRouteTables(request);},public DescribeRouteTablesResult describeRouteTablesDescribeRouteTablesRequest request request  beforeClientExecutionrequestreturn executeDescribeRouteTablesrequest
public void setRenameCallback(RenameCallback callback) {renameCallback = callback;},public void setRenameCallbackRenameCallback callback renameCallback  callback
public DimensionsRecord createDimensions() {DimensionsRecord result = new DimensionsRecord();result.setFirstRow(_firstrow);result.setLastRow(_lastrow);result.setFirstCol((short) _valuesAgg.getFirstCellNum());result.setLastCol((short) _valuesAgg.getLastCellNum());return result;},public DimensionsRecord createDimensions DimensionsRecord result  new DimensionsRecordresultsetFirstRowfirstrowresultsetLastRowlastrowresultsetFirstColshort valuesAgggetFirstCellNumresultsetLastColshort valuesAgggetLastCellNumreturn result
public StopTransformJobResult stopTransformJob(StopTransformJobRequest request) {request = beforeClientExecution(request);return executeStopTransformJob(request);},public StopTransformJobResult stopTransformJobStopTransformJobRequest request request  beforeClientExecutionrequestreturn executeStopTransformJobrequest
"public final String toString() {return getClass().getName() + "" ["" +getStringValue() +""]"";}",public final String toString return getClassgetName    getStringValue 
"public QueryAuthenticationRequest() {super(""LinkFace"", ""2018-07-20"", ""QueryAuthentication"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public QueryAuthenticationRequest superLinkFace 20180720 QueryAuthenticationsetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public PrintStream append(char c) {print(c);return this;},public PrintStream appendchar c printcreturn this
public StartKeyPhrasesDetectionJobResult startKeyPhrasesDetectionJob(StartKeyPhrasesDetectionJobRequest request) {request = beforeClientExecution(request);return executeStartKeyPhrasesDetectionJob(request);},public StartKeyPhrasesDetectionJobResult startKeyPhrasesDetectionJobStartKeyPhrasesDetectionJobRequest request request  beforeClientExecutionrequestreturn executeStartKeyPhrasesDetectionJobrequest
public QueryPhraseMap searchPhrase( final List<TermInfo> phraseCandidate ){QueryPhraseMap currMap = this;for( TermInfo ti : phraseCandidate ){currMap = currMap.subMap.get( ti.getText() );if( currMap == null ) return null;}return currMap.isValidTermOrPhrase( phraseCandidate ) ? currMap : null;},public QueryPhraseMap searchPhrase final ListTermInfo phraseCandidate QueryPhraseMap currMap  thisfor TermInfo ti  phraseCandidate currMap  currMapsubMapget tigetText if currMap  null  return nullreturn currMapisValidTermOrPhrase phraseCandidate   currMap  null
"public void add(Term term) {if (term == null) {throw new IllegalArgumentException(""Term must not be null"");}this.terms.add(term);}",public void addTerm term if term  null throw new IllegalArgumentExceptionTerm must not be nullthistermsaddterm
public ListEmailIdentitiesResult listEmailIdentities(ListEmailIdentitiesRequest request) {request = beforeClientExecution(request);return executeListEmailIdentities(request);},public ListEmailIdentitiesResult listEmailIdentitiesListEmailIdentitiesRequest request request  beforeClientExecutionrequestreturn executeListEmailIdentitiesrequest
"public MutableFPNumber(BigInteger frac, int binaryExponent) {_significand = frac;_binaryExponent = binaryExponent;}",public MutableFPNumberBigInteger frac int binaryExponent significand  fracbinaryExponent  binaryExponent
public CreateNetworkProfileResult createNetworkProfile(CreateNetworkProfileRequest request) {request = beforeClientExecution(request);return executeCreateNetworkProfile(request);},public CreateNetworkProfileResult createNetworkProfileCreateNetworkProfileRequest request request  beforeClientExecutionrequestreturn executeCreateNetworkProfilerequest
public Transition removeTransition(int index) {return transitions.remove(index);},public Transition removeTransitionint index return transitionsremoveindex
"public int doLogic() throws Exception {final PerfRunData runData = getRunData();IndexWriter w = runData.getIndexWriter();if (w == null) {throw new RuntimeException(""please open the writer before invoking NearRealtimeReader"");}if (runData.getIndexReader() != null) {throw new RuntimeException(""please close the existing Reader before invoking NearRealtimeReader"");}long t = System.currentTimeMillis();DirectoryReader r = DirectoryReader.open(w);runData.setIndexReader(r);r.decRef();reopenCount = 0;while(!stopNow) {long waitForMsec = (pauseMSec - (System.currentTimeMillis() - t));if (waitForMsec > 0) {Thread.sleep(waitForMsec);}t = System.currentTimeMillis();final DirectoryReader newReader = DirectoryReader.openIfChanged(r);if (newReader != null) {final int delay = (int) (System.currentTimeMillis()-t);if (reopenTimes.length == reopenCount) {reopenTimes = ArrayUtil.grow(reopenTimes, 1+reopenCount);}reopenTimes[reopenCount++] = delay;runData.setIndexReader(newReader);newReader.decRef();r = newReader;}}stopNow = false;return reopenCount;}",public int doLogic throws Exception final PerfRunData runData  getRunDataIndexWriter w  runDatagetIndexWriterif w  null throw new RuntimeExceptionplease open the writer before invoking NearRealtimeReaderif runDatagetIndexReader  null throw new RuntimeExceptionplease close the existing Reader before invoking NearRealtimeReaderlong t  SystemcurrentTimeMillisDirectoryReader r  DirectoryReaderopenwrunDatasetIndexReaderrrdecRefreopenCount  0whilestopNow long waitForMsec  pauseMSec  SystemcurrentTimeMillis  tif waitForMsec  0 ThreadsleepwaitForMsect  SystemcurrentTimeMillisfinal DirectoryReader newReader  DirectoryReaderopenIfChangedrif newReader  null final int delay  int SystemcurrentTimeMillistif reopenTimeslength  reopenCount reopenTimes  ArrayUtilgrowreopenTimes 1reopenCountreopenTimesreopenCount  delayrunDatasetIndexReadernewReadernewReaderdecRefr  newReaderstopNow  falsereturn reopenCount
public PutAttributesResult putAttributes(PutAttributesRequest request) {request = beforeClientExecution(request);return executePutAttributes(request);},public PutAttributesResult putAttributesPutAttributesRequest request request  beforeClientExecutionrequestreturn executePutAttributesrequest
public DeleteLocalGatewayRouteTableVpcAssociationResult deleteLocalGatewayRouteTableVpcAssociation(DeleteLocalGatewayRouteTableVpcAssociationRequest request) {request = beforeClientExecution(request);return executeDeleteLocalGatewayRouteTableVpcAssociation(request);},public DeleteLocalGatewayRouteTableVpcAssociationResult deleteLocalGatewayRouteTableVpcAssociationDeleteLocalGatewayRouteTableVpcAssociationRequest request request  beforeClientExecutionrequestreturn executeDeleteLocalGatewayRouteTableVpcAssociationrequest
public TreeFilter clone() {return this;},public TreeFilter clone return this
"public static TreeFilter create(TreeFilter[] list) {if (list.length == 2)return create(list[0], list[1]);if (list.length < 2)throw new IllegalArgumentException(JGitText.get().atLeastTwoFiltersNeeded);final TreeFilter[] subfilters = new TreeFilter[list.length];System.arraycopy(list, 0, subfilters, 0, list.length);return new List(subfilters);}",public static TreeFilter createTreeFilter list if listlength  2return createlist0 list1if listlength  2throw new IllegalArgumentExceptionJGitTextgetatLeastTwoFiltersNeededfinal TreeFilter subfilters  new TreeFilterlistlengthSystemarraycopylist 0 subfilters 0 listlengthreturn new Listsubfilters
public void back(int delta) {while (--delta >= 0) {if (currentSubtree != null)nextSubtreePos--;ptr--;parseEntry(false);if (currentSubtree != null)ptr -= currentSubtree.getEntrySpan() - 1;}},public void backint delta while delta  0 if currentSubtree  nullnextSubtreePosptrparseEntryfalseif currentSubtree  nullptr  currentSubtreegetEntrySpan  1
"public Map<String, SubmoduleStatus> call() throws GitAPIException {checkCallable();try (SubmoduleWalk generator = SubmoduleWalk.forIndex(repo)) {if (!paths.isEmpty())generator.setFilter(PathFilterGroup.createFromStrings(paths));Map<String, SubmoduleStatus> statuses = new HashMap<>();while (generator.next()) {SubmoduleStatus status = getStatus(generator);statuses.put(status.getPath(), status);}return statuses;} catch (IOException | ConfigInvalidException e) {throw new JGitInternalException(e.getMessage(), e);}}",public MapString SubmoduleStatus call throws GitAPIException checkCallabletry SubmoduleWalk generator  SubmoduleWalkforIndexrepo if pathsisEmptygeneratorsetFilterPathFilterGroupcreateFromStringspathsMapString SubmoduleStatus statuses  new HashMapwhile generatornext SubmoduleStatus status  getStatusgeneratorstatusesputstatusgetPath statusreturn statuses catch IOException  ConfigInvalidException e throw new JGitInternalExceptionegetMessage e
public synchronized int available() {return count - pos;},public synchronized int available return count  pos
"public SmallStream(int type, byte[] data) {this.type = type;this.data = data;}",public SmallStreamint type byte data thistype  typethisdata  data
public String escapeExtensionField(String extfield) {return QueryParserBase.escape(extfield);},public String escapeExtensionFieldString extfield return QueryParserBaseescapeextfield
"public QueryScorer(Query query) {init(query, null, null, true);}",public QueryScorerQuery query initquery null null true
public int getHighIx() {return _highIx;},public int getHighIx return highIx
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[VCENTER]\n"");buffer.append(""    .vcenter        = "").append(getVCenter()).append(""\n"");buffer.append(""[/VCENTER]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendVCENTERnbufferappend    vcenter         appendgetVCenterappendnbufferappendVCENTERnreturn buffertoString
public int size(){return _limit;},public int sizereturn limit
"public PredictCategoryRequest() {super(""visionai-poc"", ""2020-04-08"", ""PredictCategory"");setMethod(MethodType.POST);}",public PredictCategoryRequest supervisionaipoc 20200408 PredictCategorysetMethodMethodTypePOST
public DeleteLagResult deleteLag(DeleteLagRequest request) {request = beforeClientExecution(request);return executeDeleteLag(request);},public DeleteLagResult deleteLagDeleteLagRequest request request  beforeClientExecutionrequestreturn executeDeleteLagrequest
public boolean equals(Object other) {if (!(other instanceof LongBuffer)) {return false;}LongBuffer otherBuffer = (LongBuffer) other;if (remaining() != otherBuffer.remaining()) {return false;}int myPosition = position;int otherPosition = otherBuffer.position;boolean equalSoFar = true;while (equalSoFar && (myPosition < limit)) {equalSoFar = get(myPosition++) == otherBuffer.get(otherPosition++);}return equalSoFar;},public boolean equalsObject other if other instanceof LongBuffer return falseLongBuffer otherBuffer  LongBuffer otherif remaining  otherBufferremaining return falseint myPosition  positionint otherPosition  otherBufferpositionboolean equalSoFar  truewhile equalSoFar  myPosition  limit equalSoFar  getmyPosition  otherBuffergetotherPositionreturn equalSoFar
public void end() {state.end();},public void end stateend
"public BooleanMatcher(boolean value, CmpOp operator) {super(operator);_value = boolToInt(value);}",public BooleanMatcherboolean value CmpOp operator superoperatorvalue  boolToIntvalue
public SheetVector(RefEval re) {_size = re.getNumberOfSheets();_re = re;},public SheetVectorRefEval re size  regetNumberOfSheetsre  re
public UpdateGameSessionResult updateGameSession(UpdateGameSessionRequest request) {request = beforeClientExecution(request);return executeUpdateGameSession(request);},public UpdateGameSessionResult updateGameSessionUpdateGameSessionRequest request request  beforeClientExecutionrequestreturn executeUpdateGameSessionrequest
"public String getName() {return String.format(Locale.ROOT, ""Dirichlet(%f)"", getMu());}",public String getName return StringformatLocaleROOT Dirichletf getMu
"public void decompress(DataInput in, int originalLength, int offset, int length, BytesRef bytes) throws IOException {assert offset + length <= originalLength;if (length == 0) {bytes.length = 0;return;}final int compressedLength = in.readVInt();final int paddedLength = compressedLength + 1;compressed = ArrayUtil.grow(compressed, paddedLength);in.readBytes(compressed, 0, compressedLength);compressed[compressedLength] = 0; final Inflater decompressor = new Inflater(true);try {decompressor.setInput(compressed, 0, paddedLength);bytes.offset = bytes.length = 0;bytes.bytes = ArrayUtil.grow(bytes.bytes, originalLength);try {bytes.length = decompressor.inflate(bytes.bytes, bytes.length, originalLength);} catch (DataFormatException e) {throw new IOException(e);}if (!decompressor.finished()) {throw new CorruptIndexException(""Invalid decoder state: needsInput="" + decompressor.needsInput()+ "", needsDict="" + decompressor.needsDictionary(), in);}} finally {decompressor.end();}if (bytes.length != originalLength) {throw new CorruptIndexException(""Lengths mismatch: "" + bytes.length + "" != "" + originalLength, in);}bytes.offset = offset;bytes.length = length;}",public void decompressDataInput in int originalLength int offset int length BytesRef bytes throws IOException assert offset  length  originalLengthif length  0 byteslength  0returnfinal int compressedLength  inreadVIntfinal int paddedLength  compressedLength  1compressed  ArrayUtilgrowcompressed paddedLengthinreadBytescompressed 0 compressedLengthcompressedcompressedLength  0 final Inflater decompressor  new Inflatertruetry decompressorsetInputcompressed 0 paddedLengthbytesoffset  byteslength  0bytesbytes  ArrayUtilgrowbytesbytes originalLengthtry byteslength  decompressorinflatebytesbytes byteslength originalLength catch DataFormatException e throw new IOExceptioneif decompressorfinished throw new CorruptIndexExceptionInvalid decoder state needsInput  decompressorneedsInput  needsDict  decompressorneedsDictionary in finally decompressorendif byteslength  originalLength throw new CorruptIndexExceptionLengths mismatch   byteslength      originalLength inbytesoffset  offsetbyteslength  length
"public Pair<String,String> splitExtensionField(String defaultField,String field) {int indexOf = field.indexOf(this.extensionFieldDelimiter);if (indexOf < 0)return new Pair<>(field, null);final String indexField = indexOf == 0 ? defaultField : field.substring(0,indexOf);final String extensionKey = field.substring(indexOf + 1);return new Pair<>(indexField, extensionKey);}",public PairStringString splitExtensionFieldString defaultFieldString field int indexOf  fieldindexOfthisextensionFieldDelimiterif indexOf  0return new Pairfield nullfinal String indexField  indexOf  0  defaultField  fieldsubstring0indexOffinal String extensionKey  fieldsubstringindexOf  1return new PairindexField extensionKey
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[FRAME]\n"");buffer.append(""    .borderType           = "").append(""0x"").append(HexDump.toHex(  getBorderType ())).append("" ("").append( getBorderType() ).append("" )"");buffer.append(System.getProperty(""line.separator""));buffer.append(""    .options              = "").append(""0x"").append(HexDump.toHex(  getOptions ())).append("" ("").append( getOptions() ).append("" )"");buffer.append(System.getProperty(""line.separator""));buffer.append(""         .autoSize                 = "").append(isAutoSize()).append('\n');buffer.append(""         .autoPosition             = "").append(isAutoPosition()).append('\n');buffer.append(""[/FRAME]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendFRAMEnbufferappend    borderType            append0xappendHexDumptoHex  getBorderType append append getBorderType append bufferappendSystemgetPropertylineseparatorbufferappend    options               append0xappendHexDumptoHex  getOptions append append getOptions append bufferappendSystemgetPropertylineseparatorbufferappend         autoSize                  appendisAutoSizeappendnbufferappend         autoPosition              appendisAutoPositionappendnbufferappendFRAMEnreturn buffertoString
public Cluster pauseCluster(PauseClusterRequest request) {request = beforeClientExecution(request);return executePauseCluster(request);},public Cluster pauseClusterPauseClusterRequest request request  beforeClientExecutionrequestreturn executePauseClusterrequest
public void setValue(String newValue) {value = newValue;},public void setValueString newValue value  newValue
public AllocateAddressResult allocateAddress(AllocateAddressRequest request) {request = beforeClientExecution(request);return executeAllocateAddress(request);},public AllocateAddressResult allocateAddressAllocateAddressRequest request request  beforeClientExecutionrequestreturn executeAllocateAddressrequest
public GetNetworkProfileResult getNetworkProfile(GetNetworkProfileRequest request) {request = beforeClientExecution(request);return executeGetNetworkProfile(request);},public GetNetworkProfileResult getNetworkProfileGetNetworkProfileRequest request request  beforeClientExecutionrequestreturn executeGetNetworkProfilerequest
public static void reThrow(Throwable th) throws IOException {if (th != null) {throw rethrowAlways(th);}},public static void reThrowThrowable th throws IOException if th  null throw rethrowAlwaysth
public void removeCell(CellValueRecordInterface cvRec) {if (cvRec instanceof FormulaRecordAggregate) {((FormulaRecordAggregate)cvRec).notifyFormulaChanging();}_valuesAgg.removeCell(cvRec);},public void removeCellCellValueRecordInterface cvRec if cvRec instanceof FormulaRecordAggregate FormulaRecordAggregatecvRecnotifyFormulaChangingvaluesAggremoveCellcvRec
public Snapshot createSnapshot(CreateSnapshotRequest request) {request = beforeClientExecution(request);return executeCreateSnapshot(request);},public Snapshot createSnapshotCreateSnapshotRequest request request  beforeClientExecutionrequestreturn executeCreateSnapshotrequest
"public Token get(int i) {if ( i < 0 || i >= tokens.size() ) {throw new IndexOutOfBoundsException(""token index ""+i+"" out of range 0..""+(tokens.size()-1));}return tokens.get(i);}",public Token getint i if  i  0  i  tokenssize  throw new IndexOutOfBoundsExceptiontoken index i out of range 0tokenssize1return tokensgeti
public DescribeAlarmsResult describeAlarms(DescribeAlarmsRequest request) {request = beforeClientExecution(request);return executeDescribeAlarms(request);},public DescribeAlarmsResult describeAlarmsDescribeAlarmsRequest request request  beforeClientExecutionrequestreturn executeDescribeAlarmsrequest
"public static long[] grow(long[] array, int minSize) {assert minSize >= 0: ""size must be positive (got "" + minSize + ""): likely integer overflow?"";if (array.length < minSize) {return growExact(array, oversize(minSize, Long.BYTES));} else return array;}",public static long growlong array int minSize assert minSize  0 size must be positive got   minSize   likely integer overflowif arraylength  minSize return growExactarray oversizeminSize LongBYTES else return array
"public int serialize( int offset, byte[] data, EscherSerializationListener listener ){listener.beforeRecordSerialize( offset, getRecordId(), this );LittleEndian.putShort( data, offset, getOptions() );LittleEndian.putShort( data, offset + 2, getRecordId() );int remainingBytes = 8;LittleEndian.putInt( data, offset + 4, remainingBytes );LittleEndian.putInt( data, offset + 8, field_1_shapeId );LittleEndian.putInt( data, offset + 12, field_2_flags );listener.afterRecordSerialize( offset + getRecordSize(), getRecordId(), getRecordSize(), this );return 8 + 8;}",public int serialize int offset byte data EscherSerializationListener listener listenerbeforeRecordSerialize offset getRecordId this LittleEndianputShort data offset getOptions LittleEndianputShort data offset  2 getRecordId int remainingBytes  8LittleEndianputInt data offset  4 remainingBytes LittleEndianputInt data offset  8 field1shapeId LittleEndianputInt data offset  12 field2flags listenerafterRecordSerialize offset  getRecordSize getRecordId getRecordSize this return 8  8
public LsRemoteCommand setTags(boolean tags) {this.tags = tags;return this;},public LsRemoteCommand setTagsboolean tags thistags  tagsreturn this
"public ASCIIFoldingFilterFactory(Map<String,String> args) {super(args);preserveOriginal = getBoolean(args, PRESERVE_ORIGINAL, false);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public ASCIIFoldingFilterFactoryMapStringString args superargspreserveOriginal  getBooleanargs PRESERVEORIGINAL falseif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public String toString() {return ""input="" + input.get() + "" output="" + output + "" context="" + context + "" boost="" + boost + "" payload="" + payload;}",public String toString return input  inputget   output  output   context  context   boost  boost   payload  payload
public ListNotesCommand setNotesRef(String notesRef) {checkCallable();this.notesRef = notesRef;return this;},public ListNotesCommand setNotesRefString notesRef checkCallablethisnotesRef  notesRefreturn this
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[SXVD]\n"");buffer.append(""    .sxaxis    = "").append(HexDump.shortToHex(_sxaxis)).append('\n');buffer.append(""    .cSub      = "").append(HexDump.shortToHex(_cSub)).append('\n');buffer.append(""    .grbitSub  = "").append(HexDump.shortToHex(_grbitSub)).append('\n');buffer.append(""    .cItm      = "").append(HexDump.shortToHex(_cItm)).append('\n');buffer.append(""    .name      = "").append(_name).append('\n');buffer.append(""[/SXVD]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendSXVDnbufferappend    sxaxis     appendHexDumpshortToHexsxaxisappendnbufferappend    cSub       appendHexDumpshortToHexcSubappendnbufferappend    grbitSub   appendHexDumpshortToHexgrbitSubappendnbufferappend    cItm       appendHexDumpshortToHexcItmappendnbufferappend    name       appendnameappendnbufferappendSXVDnreturn buffertoString
public V get(Object o) {if(o == null)throw new NullPointerException();return null;},public V getObject o ifo  nullthrow new NullPointerExceptionreturn null
"public String toString() {final StringBuilder sb = new StringBuilder();sb.append(""[NAMECMT]\n"");sb.append(""    .record type            = "").append(HexDump.shortToHex(field_1_record_type)).append(""\n"");sb.append(""    .frt cell ref flag      = "").append(HexDump.byteToHex(field_2_frt_cell_ref_flag)).append(""\n"");sb.append(""    .reserved               = "").append(field_3_reserved).append(""\n"");sb.append(""    .name length            = "").append(field_6_name_text.length()).append(""\n"");sb.append(""    .comment length         = "").append(field_7_comment_text.length()).append(""\n"");sb.append(""    .name                   = "").append(field_6_name_text).append(""\n"");sb.append(""    .comment                = "").append(field_7_comment_text).append(""\n"");sb.append(""[/NAMECMT]\n"");return sb.toString();}",public String toString final StringBuilder sb  new StringBuildersbappendNAMECMTnsbappend    record type             appendHexDumpshortToHexfield1recordtypeappendnsbappend    frt cell ref flag       appendHexDumpbyteToHexfield2frtcellrefflagappendnsbappend    reserved                appendfield3reservedappendnsbappend    name length             appendfield6nametextlengthappendnsbappend    comment length          appendfield7commenttextlengthappendnsbappend    name                    appendfield6nametextappendnsbappend    comment                 appendfield7commenttextappendnsbappendNAMECMTnreturn sbtoString
"public CodepointCountFilterFactory(Map<String, String> args) {super(args);min = requireInt(args, MIN_KEY);max = requireInt(args, MAX_KEY);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public CodepointCountFilterFactoryMapString String args superargsmin  requireIntargs MINKEYmax  requireIntargs MAXKEYif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public Entry<K, V> ceilingEntry(K key) {return immutableCopy(findBounded(key, CEILING));}",public EntryK V ceilingEntryK key return immutableCopyfindBoundedkey CEILING
public long setStartTimeMillis() {startTimeMillis = System.currentTimeMillis();return startTimeMillis;},public long setStartTimeMillis startTimeMillis  SystemcurrentTimeMillisreturn startTimeMillis
public ListProfilingGroupsResult listProfilingGroups(ListProfilingGroupsRequest request) {request = beforeClientExecution(request);return executeListProfilingGroups(request);},public ListProfilingGroupsResult listProfilingGroupsListProfilingGroupsRequest request request  beforeClientExecutionrequestreturn executeListProfilingGroupsrequest
"public static PersonIdent parsePersonIdent(String in) {return parsePersonIdent(Constants.encode(in), 0);}",public static PersonIdent parsePersonIdentString in return parsePersonIdentConstantsencodein 0
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_numerator);out.writeShort(field_2_denominator);},public void serializeLittleEndianOutput out outwriteShortfield1numeratoroutwriteShortfield2denominator
public AddCommand setUpdate(boolean update) {this.update = update;return this;},public AddCommand setUpdateboolean update thisupdate  updatereturn this
"public static <T> T[] copyOf(T[] original, int newLength) {if (original == null) {throw new NullPointerException();}if (newLength < 0) {throw new NegativeArraySizeException();}return copyOfRange(original, 0, newLength);}",public static T T copyOfT original int newLength if original  null throw new NullPointerExceptionif newLength  0 throw new NegativeArraySizeExceptionreturn copyOfRangeoriginal 0 newLength
public void writeByte(int v) {writeContinueIfRequired(1);_ulrOutput.writeByte(v);},public void writeByteint v writeContinueIfRequired1ulrOutputwriteBytev
public DeleteDBInstanceRequest(String dBInstanceIdentifier) {setDBInstanceIdentifier(dBInstanceIdentifier);},public DeleteDBInstanceRequestString dBInstanceIdentifier setDBInstanceIdentifierdBInstanceIdentifier
public void reset() {previousValue = value = minValue;},public void reset previousValue  value  minValue
public void setLength(long sz) {setLength((int) sz);},public void setLengthlong sz setLengthint sz
"public static String revisionVersion(IndexCommit indexCommit, IndexCommit taxoCommit) {return Long.toString(indexCommit.getGeneration(), RADIX) + "":"" + Long.toString(taxoCommit.getGeneration(), RADIX);}",public static String revisionVersionIndexCommit indexCommit IndexCommit taxoCommit return LongtoStringindexCommitgetGeneration RADIX    LongtoStringtaxoCommitgetGeneration RADIX
public String pattern() {return needleString;},public String pattern return needleString
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append( ""[SST]\n"" );buffer.append( ""    .numstrings     = "" ).append( Integer.toHexString( getNumStrings() ) ).append( ""\n"" );buffer.append( ""    .uniquestrings  = "" ).append( Integer.toHexString( getNumUniqueStrings() ) ).append( ""\n"" );for ( int k = 0; k < field_3_strings.size(); k++ ){UnicodeString s = field_3_strings.get( k );buffer.append(""    .string_"").append(k).append(""      = "").append( s.getDebugInfo() ).append( ""\n"" );}buffer.append( ""[/SST]\n"" );return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappend SSTn bufferappend     numstrings       append IntegertoHexString getNumStrings  append n bufferappend     uniquestrings    append IntegertoHexString getNumUniqueStrings  append n for  int k  0 k  field3stringssize k UnicodeString s  field3stringsget k bufferappend    stringappendkappend       append sgetDebugInfo append n bufferappend SSTn return buffertoString
"public CharSequence toQueryString(EscapeQuerySyntax escapeSyntaxParser) {if (getChildren() == null || getChildren().size() == 0)return """";StringBuilder sb = new StringBuilder();String filler = """";for (Iterator<QueryNode> it = getChildren().iterator(); it.hasNext();) {sb.append(filler).append(it.next().toQueryString(escapeSyntaxParser));filler = "" OR "";}if ((getParent() != null && getParent() instanceof GroupQueryNode)|| isRoot())return sb.toString();else return ""( "" + sb.toString() + "" )"";}",public CharSequence toQueryStringEscapeQuerySyntax escapeSyntaxParser if getChildren  null  getChildrensize  0return StringBuilder sb  new StringBuilderString filler  for IteratorQueryNode it  getChildreniterator ithasNext sbappendfillerappenditnexttoQueryStringescapeSyntaxParserfiller   OR if getParent  null  getParent instanceof GroupQueryNode isRootreturn sbtoStringelse return    sbtoString   
public PushCommand setReceivePack(String receivePack) {checkCallable();this.receivePack = receivePack;return this;},public PushCommand setReceivePackString receivePack checkCallablethisreceivePack  receivePackreturn this
public DeleteImagePermissionsResult deleteImagePermissions(DeleteImagePermissionsRequest request) {request = beforeClientExecution(request);return executeDeleteImagePermissions(request);},public DeleteImagePermissionsResult deleteImagePermissionsDeleteImagePermissionsRequest request request  beforeClientExecutionrequestreturn executeDeleteImagePermissionsrequest
public static Ptg[] getTokens(Formula formula) {if (formula == null) {return null;}return formula.getTokens();},public static Ptg getTokensFormula formula if formula  null return nullreturn formulagetTokens
public void skipToNextByte() {remainingBits = 0;},public void skipToNextByte remainingBits  0
public GetJourneyExecutionActivityMetricsResult getJourneyExecutionActivityMetrics(GetJourneyExecutionActivityMetricsRequest request) {request = beforeClientExecution(request);return executeGetJourneyExecutionActivityMetrics(request);},public GetJourneyExecutionActivityMetricsResult getJourneyExecutionActivityMetricsGetJourneyExecutionActivityMetricsRequest request request  beforeClientExecutionrequestreturn executeGetJourneyExecutionActivityMetricsrequest
public DeregisterContainerInstanceResult deregisterContainerInstance(DeregisterContainerInstanceRequest request) {request = beforeClientExecution(request);return executeDeregisterContainerInstance(request);},public DeregisterContainerInstanceResult deregisterContainerInstanceDeregisterContainerInstanceRequest request request  beforeClientExecutionrequestreturn executeDeregisterContainerInstancerequest
public DeleteEntityRecognizerResult deleteEntityRecognizer(DeleteEntityRecognizerRequest request) {request = beforeClientExecution(request);return executeDeleteEntityRecognizer(request);},public DeleteEntityRecognizerResult deleteEntityRecognizerDeleteEntityRecognizerRequest request request  beforeClientExecutionrequestreturn executeDeleteEntityRecognizerrequest
public DescribeGameSessionsResult describeGameSessions(DescribeGameSessionsRequest request) {request = beforeClientExecution(request);return executeDescribeGameSessions(request);},public DescribeGameSessionsResult describeGameSessionsDescribeGameSessionsRequest request request  beforeClientExecutionrequestreturn executeDescribeGameSessionsrequest
"public SegToken(char[] idArray, int start, int end, int wordType, int weight) {this.charArray = idArray;this.startOffset = start;this.endOffset = end;this.wordType = wordType;this.weight = weight;}",public SegTokenchar idArray int start int end int wordType int weight thischarArray  idArraythisstartOffset  startthisendOffset  endthiswordType  wordTypethisweight  weight
public int compareTo( TermInfo o ){return ( this.position - o.position );},public int compareTo TermInfo o return  thisposition  oposition 
public TagMeetingResult tagMeeting(TagMeetingRequest request) {request = beforeClientExecution(request);return executeTagMeeting(request);},public TagMeetingResult tagMeetingTagMeetingRequest request request  beforeClientExecutionrequestreturn executeTagMeetingrequest
public final Buffer limit(int newLimit) {limitImpl(newLimit);return this;},public final Buffer limitint newLimit limitImplnewLimitreturn this
"public final DoubleValuesSource makeRecipDistanceValueSource(Shape queryShape) {Rectangle bbox = queryShape.getBoundingBox();double diagonalDist = ctx.getDistCalc().distance(ctx.makePoint(bbox.getMinX(), bbox.getMinY()), bbox.getMaxX(), bbox.getMaxY());double distToEdge = diagonalDist * 0.5;float c = (float)distToEdge * 0.1f;DoubleValuesSource distance = makeDistanceValueSource(queryShape.getCenter(), 1.0);return new ReciprocalDoubleValuesSource(c, distance);}",public final DoubleValuesSource makeRecipDistanceValueSourceShape queryShape Rectangle bbox  queryShapegetBoundingBoxdouble diagonalDist  ctxgetDistCalcdistancectxmakePointbboxgetMinX bboxgetMinY bboxgetMaxX bboxgetMaxYdouble distToEdge  diagonalDist  05float c  floatdistToEdge  01fDoubleValuesSource distance  makeDistanceValueSourcequeryShapegetCenter 10return new ReciprocalDoubleValuesSourcec distance
public GetLoginProfileRequest(String userName) {setUserName(userName);},public GetLoginProfileRequestString userName setUserNameuserName
"public int serializeComplexPart( byte[] data, int pos ){return 0;}",public int serializeComplexPart byte data int pos return 0
"public DBCellRecord(int rowOffset, short[] cellOffsets) {field_1_row_offset = rowOffset;field_2_cell_offsets = cellOffsets;}",public DBCellRecordint rowOffset short cellOffsets field1rowoffset  rowOffsetfield2celloffsets  cellOffsets
"public StoredField(String name, long value) {super(name, TYPE);fieldsData = value;}",public StoredFieldString name long value supername TYPEfieldsData  value
public final Locale getLocale() {return locale;},public final Locale getLocale return locale
public SpanNotBuilder(SpanQueryBuilder factory) {this.factory = factory;},public SpanNotBuilderSpanQueryBuilder factory thisfactory  factory
public String toString() {return toString(0);},public String toString return toString0
public int compareTo(ExtRst o) {int result;result = reserved - o.reserved;if (result != 0) {return result;}result = formattingFontIndex - o.formattingFontIndex;if (result != 0) {return result;}result = formattingOptions - o.formattingOptions;if (result != 0) {return result;}result = numberOfRuns - o.numberOfRuns;if (result != 0) {return result;}result = phoneticText.compareTo(o.phoneticText);if (result != 0) {return result;}result = phRuns.length - o.phRuns.length;if (result != 0) {return result;}for(int i=0; i<phRuns.length; i++) {result = phRuns[i].phoneticTextFirstCharacterOffset - o.phRuns[i].phoneticTextFirstCharacterOffset;if (result != 0) {return result;}result = phRuns[i].realTextFirstCharacterOffset - o.phRuns[i].realTextFirstCharacterOffset;if (result != 0) {return result;}result = phRuns[i].realTextLength - o.phRuns[i].realTextLength;if (result != 0) {return result;}}result = Arrays.hashCode(extraData)-Arrays.hashCode(o.extraData);return result;},public int compareToExtRst o int resultresult  reserved  oreservedif result  0 return resultresult  formattingFontIndex  oformattingFontIndexif result  0 return resultresult  formattingOptions  oformattingOptionsif result  0 return resultresult  numberOfRuns  onumberOfRunsif result  0 return resultresult  phoneticTextcompareToophoneticTextif result  0 return resultresult  phRunslength  ophRunslengthif result  0 return resultforint i0 iphRunslength i result  phRunsiphoneticTextFirstCharacterOffset  ophRunsiphoneticTextFirstCharacterOffsetif result  0 return resultresult  phRunsirealTextFirstCharacterOffset  ophRunsirealTextFirstCharacterOffsetif result  0 return resultresult  phRunsirealTextLength  ophRunsirealTextLengthif result  0 return resultresult  ArrayshashCodeextraDataArrayshashCodeoextraDatareturn result
public GetInstanceSnapshotsResult getInstanceSnapshots(GetInstanceSnapshotsRequest request) {request = beforeClientExecution(request);return executeGetInstanceSnapshots(request);},public GetInstanceSnapshotsResult getInstanceSnapshotsGetInstanceSnapshotsRequest request request  beforeClientExecutionrequestreturn executeGetInstanceSnapshotsrequest
"public static long[] grow(long[] array) {return grow(array, 1 + array.length);}",public static long growlong array return growarray 1  arraylength
public TranslateTextResult translateText(TranslateTextRequest request) {request = beforeClientExecution(request);return executeTranslateText(request);},public TranslateTextResult translateTextTranslateTextRequest request request  beforeClientExecutionrequestreturn executeTranslateTextrequest
"public DimensionsRecord(RecordInputStream in) {field_1_first_row = in.readInt();field_2_last_row  = in.readInt();field_3_first_col = in.readShort();field_4_last_col  = in.readShort();field_5_zero      = in.readShort();if (in.available() == 2) {logger.log(POILogger.INFO, ""DimensionsRecord has extra 2 bytes."");in.readShort();}}",public DimensionsRecordRecordInputStream in field1firstrow  inreadIntfield2lastrow   inreadIntfield3firstcol  inreadShortfield4lastcol   inreadShortfield5zero       inreadShortif inavailable  2 loggerlogPOILoggerINFO DimensionsRecord has extra 2 bytesinreadShort
public int flags() {return flags;},public int flags return flags
"public Vector(int capacity, int capacityIncrement) {if (capacity < 0) {throw new IllegalArgumentException();}elementData = newElementArray(capacity);elementCount = 0;this.capacityIncrement = capacityIncrement;}",public Vectorint capacity int capacityIncrement if capacity  0 throw new IllegalArgumentExceptionelementData  newElementArraycapacityelementCount  0thiscapacityIncrement  capacityIncrement
public DeleteLogGroupRequest(String logGroupName) {setLogGroupName(logGroupName);},public DeleteLogGroupRequestString logGroupName setLogGroupNamelogGroupName
public RemoveManagedScalingPolicyResult removeManagedScalingPolicy(RemoveManagedScalingPolicyRequest request) {request = beforeClientExecution(request);return executeRemoveManagedScalingPolicy(request);},public RemoveManagedScalingPolicyResult removeManagedScalingPolicyRemoveManagedScalingPolicyRequest request request  beforeClientExecutionrequestreturn executeRemoveManagedScalingPolicyrequest
public GetDataRetrievalPolicyResult getDataRetrievalPolicy(GetDataRetrievalPolicyRequest request) {request = beforeClientExecution(request);return executeGetDataRetrievalPolicy(request);},public GetDataRetrievalPolicyResult getDataRetrievalPolicyGetDataRetrievalPolicyRequest request request  beforeClientExecutionrequestreturn executeGetDataRetrievalPolicyrequest
public DescribeExportImageTasksResult describeExportImageTasks(DescribeExportImageTasksRequest request) {request = beforeClientExecution(request);return executeDescribeExportImageTasks(request);},public DescribeExportImageTasksResult describeExportImageTasksDescribeExportImageTasksRequest request request  beforeClientExecutionrequestreturn executeDescribeExportImageTasksrequest
"public DefaultICUTokenizerConfig(boolean cjkAsWords, boolean myanmarAsWords) {this.cjkAsWords = cjkAsWords;this.myanmarAsWords = myanmarAsWords;}",public DefaultICUTokenizerConfigboolean cjkAsWords boolean myanmarAsWords thiscjkAsWords  cjkAsWordsthismyanmarAsWords  myanmarAsWords
public DisableAvailabilityZonesForLoadBalancerResult disableAvailabilityZonesForLoadBalancer(DisableAvailabilityZonesForLoadBalancerRequest request) {request = beforeClientExecution(request);return executeDisableAvailabilityZonesForLoadBalancer(request);},public DisableAvailabilityZonesForLoadBalancerResult disableAvailabilityZonesForLoadBalancerDisableAvailabilityZonesForLoadBalancerRequest request request  beforeClientExecutionrequestreturn executeDisableAvailabilityZonesForLoadBalancerrequest
"public synchronized void setIndexFieldName(String dimName, String indexFieldName) {DimConfig ft = fieldTypes.get(dimName);if (ft == null) {ft = new DimConfig();fieldTypes.put(dimName, ft);}ft.indexFieldName = indexFieldName;}",public synchronized void setIndexFieldNameString dimName String indexFieldName DimConfig ft  fieldTypesgetdimNameif ft  null ft  new DimConfigfieldTypesputdimName ftftindexFieldName  indexFieldName
"public BytesRef encode(char[] buffer, int offset, int length) {int payload = ArrayUtil.parseInt(buffer, offset, length);byte[] bytes = PayloadHelper.encodeInt(payload);BytesRef result = new BytesRef(bytes);return result;}",public BytesRef encodechar buffer int offset int length int payload  ArrayUtilparseIntbuffer offset lengthbyte bytes  PayloadHelperencodeIntpayloadBytesRef result  new BytesRefbytesreturn result
public HideObjRecord(RecordInputStream in) {field_1_hide_obj = in.readShort();},public HideObjRecordRecordInputStream in field1hideobj  inreadShort
"public String toString() {if ( isEmpty() ) return ""[]"";StringBuilder buf = new StringBuilder();buf.append(""["");for (int i=0; i<returnStates.length; i++) {if ( i>0 ) buf.append("", "");if ( returnStates[i]==EMPTY_RETURN_STATE ) {buf.append(""$"");continue;}buf.append(returnStates[i]);if ( parents[i]!=null ) {buf.append(' ');buf.append(parents[i].toString());}else {buf.append(""null"");}}buf.append(""]"");return buf.toString();}",public String toString if  isEmpty  return StringBuilder buf  new StringBuilderbufappendfor int i0 ireturnStateslength i if  i0  bufappend if  returnStatesiEMPTYRETURNSTATE  bufappendcontinuebufappendreturnStatesiif  parentsinull  bufappend bufappendparentsitoStringelse bufappendnullbufappendreturn buftoString
public synchronized int getSecondaryProgress() {return mIndeterminate ? 0 : mSecondaryProgress;},public synchronized int getSecondaryProgress return mIndeterminate  0  mSecondaryProgress
public DeleteContactMethodResult deleteContactMethod(DeleteContactMethodRequest request) {request = beforeClientExecution(request);return executeDeleteContactMethod(request);},public DeleteContactMethodResult deleteContactMethodDeleteContactMethodRequest request request  beforeClientExecutionrequestreturn executeDeleteContactMethodrequest
"@Override public List<E> subList(int start, int end) {synchronized (mutex) {return new SynchronizedList<E>(list.subList(start, end), mutex);}}",Override public ListE subListint start int end synchronized mutex return new SynchronizedListElistsubListstart end mutex
@Override public boolean equals(Object object) {return m.equals(object);},Override public boolean equalsObject object return mequalsobject
"public static String getSchemePrefix(String spec) {int colon = spec.indexOf(':');if (colon < 1) {return null;}for (int i = 0; i < colon; i++) {char c = spec.charAt(i);if (!isValidSchemeChar(i, c)) {return null;}}return spec.substring(0, colon).toLowerCase(Locale.US);}",public static String getSchemePrefixString spec int colon  specindexOfif colon  1 return nullfor int i  0 i  colon i char c  speccharAtiif isValidSchemeChari c return nullreturn specsubstring0 colontoLowerCaseLocaleUS
"public ByteBuffer put(byte[] src, int srcOffset, int byteCount) {throw new ReadOnlyBufferException();}",public ByteBuffer putbyte src int srcOffset int byteCount throw new ReadOnlyBufferException
public CreateServiceResult createService(CreateServiceRequest request) {request = beforeClientExecution(request);return executeCreateService(request);},public CreateServiceResult createServiceCreateServiceRequest request request  beforeClientExecutionrequestreturn executeCreateServicerequest
public void serialize(LittleEndianOutput out) {out.writeShort(_numberOfRegions);for (int i = 0; i < _numberOfRegions; i++) {_regions[_startIndex + i].serialize(out);}},public void serializeLittleEndianOutput out outwriteShortnumberOfRegionsfor int i  0 i  numberOfRegions i regionsstartIndex  iserializeout
"public StringBuilder insert(int offset, char c) {insert0(offset, c);return this;}",public StringBuilder insertint offset char c insert0offset creturn this
public LabelSSTRecord(RecordInputStream in) {super(in);field_4_sst_index = in.readInt();},public LabelSSTRecordRecordInputStream in superinfield4sstindex  inreadInt
public void setObjectId(AnyObjectId id) {if (objectId == null)objectId = id.copy();},public void setObjectIdAnyObjectId id if objectId  nullobjectId  idcopy
public int add(CFRecordsAggregate cfAggregate) {cfAggregate.getHeader().setID(_cfHeaders.size());_cfHeaders.add(cfAggregate);return _cfHeaders.size() - 1;},public int addCFRecordsAggregate cfAggregate cfAggregategetHeadersetIDcfHeaderssizecfHeadersaddcfAggregatereturn cfHeaderssize  1
public TermVectorsPostingsArray(int size) {super(size);freqs = new int[size];lastOffsets = new int[size];lastPositions = new int[size];},public TermVectorsPostingsArrayint size supersizefreqs  new intsizelastOffsets  new intsizelastPositions  new intsize
"public FieldsQuery(SrndQuery q, List<String> fieldNames, char fieldOp) {this.q = q;this.fieldNames = fieldNames;this.fieldOp = fieldOp;}",public FieldsQuerySrndQuery q ListString fieldNames char fieldOp thisq  qthisfieldNames  fieldNamesthisfieldOp  fieldOp
public TokenStream create(TokenStream in) {return new GreekLowerCaseFilter(in);},public TokenStream createTokenStream in return new GreekLowerCaseFilterin
public ECSMetadataServiceCredentialsFetcher() {this.connectionTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MILLISECONDS;},public ECSMetadataServiceCredentialsFetcher thisconnectionTimeoutInMilliseconds  DEFAULTTIMEOUTINMILLISECONDS
"public static Decoder getDecoder(Format format, int version, int bitsPerValue) {checkVersion(version);return BulkOperation.of(format, bitsPerValue);}",public static Decoder getDecoderFormat format int version int bitsPerValue checkVersionversionreturn BulkOperationofformat bitsPerValue
public synchronized void reset() {nameFinder.clearAdaptiveData();},public synchronized void reset nameFinderclearAdaptiveData
public String nextKeyString() {return new String(nextKey());},public String nextKeyString return new StringnextKey
public DescribeEventsResult describeEvents() {return describeEvents(new DescribeEventsRequest());},public DescribeEventsResult describeEvents return describeEventsnew DescribeEventsRequest
public UpdateNodeResult updateNode(UpdateNodeRequest request) {request = beforeClientExecution(request);return executeUpdateNode(request);},public UpdateNodeResult updateNodeUpdateNodeRequest request request  beforeClientExecutionrequestreturn executeUpdateNoderequest
"public GetJobOutputRequest(String vaultName, String jobId, String range) {setVaultName(vaultName);setJobId(jobId);setRange(range);}",public GetJobOutputRequestString vaultName String jobId String range setVaultNamevaultNamesetJobIdjobIdsetRangerange
"public static String stripTags(String buf, int start) {if (start>0) {buf = buf.substring(start);}return buf.replaceAll(""<[^>]*>"", "" "");}",public static String stripTagsString buf int start if start0 buf  bufsubstringstartreturn bufreplaceAll  
public DescribeLaunchTemplatesResult describeLaunchTemplates(DescribeLaunchTemplatesRequest request) {request = beforeClientExecution(request);return executeDescribeLaunchTemplates(request);},public DescribeLaunchTemplatesResult describeLaunchTemplatesDescribeLaunchTemplatesRequest request request  beforeClientExecutionrequestreturn executeDescribeLaunchTemplatesrequest
"public SynonymFilterFactory(Map<String,String> args) {super(args);ignoreCase = getBoolean(args, ""ignoreCase"", false);synonyms = require(args, ""synonyms"");format = get(args, ""format"");expand = getBoolean(args, ""expand"", true);analyzerName = get(args, ""analyzer"");tokenizerFactory = get(args, ""tokenizerFactory"");if (analyzerName != null && tokenizerFactory != null) {throw new IllegalArgumentException(""Analyzer and TokenizerFactory can't be specified both: "" +analyzerName + "" and "" + tokenizerFactory);}if (tokenizerFactory != null) {tokArgs.put(""luceneMatchVersion"", getLuceneMatchVersion().toString());for (Iterator<String> itr = args.keySet().iterator(); itr.hasNext();) {String key = itr.next();tokArgs.put(key.replaceAll(""^tokenizerFactory\\."",""""), args.get(key));itr.remove();}}if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public SynonymFilterFactoryMapStringString args superargsignoreCase  getBooleanargs ignoreCase falsesynonyms  requireargs synonymsformat  getargs formatexpand  getBooleanargs expand trueanalyzerName  getargs analyzertokenizerFactory  getargs tokenizerFactoryif analyzerName  null  tokenizerFactory  null throw new IllegalArgumentExceptionAnalyzer and TokenizerFactory cant be specified both  analyzerName   and   tokenizerFactoryif tokenizerFactory  null tokArgsputluceneMatchVersion getLuceneMatchVersiontoStringfor IteratorString itr  argskeySetiterator itrhasNext String key  itrnexttokArgsputkeyreplaceAlltokenizerFactory argsgetkeyitrremoveif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public void removePrintArea(int sheetIndex) {getWorkbook().removeBuiltinRecord(NameRecord.BUILTIN_PRINT_AREA, sheetIndex+1);}",public void removePrintAreaint sheetIndex getWorkbookremoveBuiltinRecordNameRecordBUILTINPRINTAREA sheetIndex1
public ModifyTrafficMirrorFilterNetworkServicesResult modifyTrafficMirrorFilterNetworkServices(ModifyTrafficMirrorFilterNetworkServicesRequest request) {request = beforeClientExecution(request);return executeModifyTrafficMirrorFilterNetworkServices(request);},public ModifyTrafficMirrorFilterNetworkServicesResult modifyTrafficMirrorFilterNetworkServicesModifyTrafficMirrorFilterNetworkServicesRequest request request  beforeClientExecutionrequestreturn executeModifyTrafficMirrorFilterNetworkServicesrequest
"public ValueEval evaluate(ValueEval[] args, OperationEvaluationContext ec) {if (args.length == 2) {return evaluate(ec.getRowIndex(), ec.getColumnIndex(), args[0], args[1]);}return ErrorEval.VALUE_INVALID;}",public ValueEval evaluateValueEval args OperationEvaluationContext ec if argslength  2 return evaluateecgetRowIndex ecgetColumnIndex args0 args1return ErrorEvalVALUEINVALID
public DeltaRecord(double maxChange) {field_1_max_change = maxChange;},public DeltaRecorddouble maxChange field1maxchange  maxChange
public UpdateDomainEntryResult updateDomainEntry(UpdateDomainEntryRequest request) {request = beforeClientExecution(request);return executeUpdateDomainEntry(request);},public UpdateDomainEntryResult updateDomainEntryUpdateDomainEntryRequest request request  beforeClientExecutionrequestreturn executeUpdateDomainEntryrequest
"public SegmentCommitInfo clone() {SegmentCommitInfo other = new SegmentCommitInfo(info, delCount, softDelCount, delGen, fieldInfosGen, docValuesGen);other.nextWriteDelGen = nextWriteDelGen;other.nextWriteFieldInfosGen = nextWriteFieldInfosGen;other.nextWriteDocValuesGen = nextWriteDocValuesGen;for (Entry<Integer,Set<String>> e : dvUpdatesFiles.entrySet()) {other.dvUpdatesFiles.put(e.getKey(), new HashSet<>(e.getValue()));}other.fieldInfosFiles.addAll(fieldInfosFiles);return other;}",public SegmentCommitInfo clone SegmentCommitInfo other  new SegmentCommitInfoinfo delCount softDelCount delGen fieldInfosGen docValuesGenothernextWriteDelGen  nextWriteDelGenothernextWriteFieldInfosGen  nextWriteFieldInfosGenothernextWriteDocValuesGen  nextWriteDocValuesGenfor EntryIntegerSetString e  dvUpdatesFilesentrySet otherdvUpdatesFilesputegetKey new HashSetegetValueotherfieldInfosFilesaddAllfieldInfosFilesreturn other
"public String putAttribute(String key, String value) {HashMap<String, String> newMap = new HashMap<>(attributes);String oldValue = newMap.put(key, value);attributes = Collections.unmodifiableMap(newMap);return oldValue;}",public String putAttributeString key String value HashMapString String newMap  new HashMapattributesString oldValue  newMapputkey valueattributes  CollectionsunmodifiableMapnewMapreturn oldValue
public void write(int oneChar) {buf.append((char) oneChar);},public void writeint oneChar bufappendchar oneChar
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[WRITEPROTECT]\n"");buffer.append(""[/WRITEPROTECT]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendWRITEPROTECTnbufferappendWRITEPROTECTnreturn buffertoString
public EvaluationSheet getSheet(int sheetIndex) {return new HSSFEvaluationSheet(_uBook.getSheetAt(sheetIndex));},public EvaluationSheet getSheetint sheetIndex return new HSSFEvaluationSheetuBookgetSheetAtsheetIndex
public void removeSlideCount() {remove1stProperty(PropertyIDMap.PID_SLIDECOUNT);},public void removeSlideCount remove1stPropertyPropertyIDMapPIDSLIDECOUNT
public DescribeFlowDefinitionResult describeFlowDefinition(DescribeFlowDefinitionRequest request) {request = beforeClientExecution(request);return executeDescribeFlowDefinition(request);},public DescribeFlowDefinitionResult describeFlowDefinitionDescribeFlowDefinitionRequest request request  beforeClientExecutionrequestreturn executeDescribeFlowDefinitionrequest
public void set(int index) {intSet.put(index);if (index > maxInt)maxInt = index;},public void setint index intSetputindexif index  maxIntmaxInt  index
public boolean equals(Object other) {if (other == null) {return false;}if (other instanceof CharsRef) {return this.charsEquals((CharsRef) other);}return false;},public boolean equalsObject other if other  null return falseif other instanceof CharsRef return thischarsEqualsCharsRef otherreturn false
"public StopFilterFactory(Map<String,String> args) {super(args);stopWordFiles = get(args, ""words"");format = get(args, ""format"", (null == stopWordFiles ? null : FORMAT_WORDSET));ignoreCase = getBoolean(args, ""ignoreCase"", false);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public StopFilterFactoryMapStringString args superargsstopWordFiles  getargs wordsformat  getargs format null  stopWordFiles  null  FORMATWORDSETignoreCase  getBooleanargs ignoreCase falseif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public void addState(ATNState state) {if (state != null) {state.atn = this;state.stateNumber = states.size();}states.add(state);},public void addStateATNState state if state  null stateatn  thisstatestateNumber  statessizestatesaddstate
public String batchUrl() {return this.batchUrl;},public String batchUrl return thisbatchUrl
"public ParseException generateParseException() {jj_expentries.clear();boolean[] la1tokens = new boolean[33];if (jj_kind >= 0) {la1tokens[jj_kind] = true;jj_kind = -1;}for (int i = 0; i < 25; i++) {if (jj_la1[i] == jj_gen) {for (int j = 0; j < 32; j++) {if ((jj_la1_0[i] & (1<<j)) != 0) {la1tokens[j] = true;}if ((jj_la1_1[i] & (1<<j)) != 0) {la1tokens[32+j] = true;}}}}for (int i = 0; i < 33; i++) {if (la1tokens[i]) {jj_expentry = new int[1];jj_expentry[0] = i;jj_expentries.add(jj_expentry);}}jj_endpos = 0;jj_rescan_token();jj_add_error_token(0, 0);int[][] exptokseq = new int[jj_expentries.size()][];for (int i = 0; i < jj_expentries.size(); i++) {exptokseq[i] = jj_expentries.get(i);}return new ParseException(token, exptokseq, tokenImage);}",public ParseException generateParseException jjexpentriesclearboolean la1tokens  new boolean33if jjkind  0 la1tokensjjkind  truejjkind  1for int i  0 i  25 i if jjla1i  jjgen for int j  0 j  32 j if jjla10i  1j  0 la1tokensj  trueif jjla11i  1j  0 la1tokens32j  truefor int i  0 i  33 i if la1tokensi jjexpentry  new int1jjexpentry0  ijjexpentriesaddjjexpentryjjendpos  0jjrescantokenjjadderrortoken0 0int exptokseq  new intjjexpentriessizefor int i  0 i  jjexpentriessize i exptokseqi  jjexpentriesgetireturn new ParseExceptiontoken exptokseq tokenImage
@Override public Iterator<K> iterator() {return new KeyIterator();},Override public IteratorK iterator return new KeyIterator
public DoubleList() {_array = new double[8];_count = 0;},public DoubleList array  new double8count  0
public AddNoteCommand setMessage(String message) {checkCallable();this.message = message;return this;},public AddNoteCommand setMessageString message checkCallablethismessage  messagereturn this
public SerializationHandleMap() {this.size = 0;this.threshold = 21; int arraySize = (int) (((long) threshold * 10000) / LOAD_FACTOR);resizeArrays(arraySize);},public SerializationHandleMap thissize  0thisthreshold  21 int arraySize  int long threshold  10000  LOADFACTORresizeArraysarraySize
public PagedBytes(int blockBits) {assert blockBits > 0 && blockBits <= 31 : blockBits;this.blockSize = 1 << blockBits;this.blockBits = blockBits;blockMask = blockSize-1;upto = blockSize;bytesUsedPerBlock = RamUsageEstimator.alignObjectSize(blockSize + RamUsageEstimator.NUM_BYTES_ARRAY_HEADER);numBlocks = 0;},public PagedBytesint blockBits assert blockBits  0  blockBits  31  blockBitsthisblockSize  1  blockBitsthisblockBits  blockBitsblockMask  blockSize1upto  blockSizebytesUsedPerBlock  RamUsageEstimatoralignObjectSizeblockSize  RamUsageEstimatorNUMBYTESARRAYHEADERnumBlocks  0
public IncreaseReplicationFactorResult increaseReplicationFactor(IncreaseReplicationFactorRequest request) {request = beforeClientExecution(request);return executeIncreaseReplicationFactor(request);},public IncreaseReplicationFactorResult increaseReplicationFactorIncreaseReplicationFactorRequest request request  beforeClientExecutionrequestreturn executeIncreaseReplicationFactorrequest
public UpdateRuntimeConfigurationResult updateRuntimeConfiguration(UpdateRuntimeConfigurationRequest request) {request = beforeClientExecution(request);return executeUpdateRuntimeConfiguration(request);},public UpdateRuntimeConfigurationResult updateRuntimeConfigurationUpdateRuntimeConfigurationRequest request request  beforeClientExecutionrequestreturn executeUpdateRuntimeConfigurationrequest
"public char getChar(Map<String,String> args, String name, char defaultValue) {String s = args.remove(name);if (s == null) {return defaultValue;} else {if (s.length() != 1) {throw new IllegalArgumentException(name + "" should be a char. \"""" + s + ""\"" is invalid"");} else {return s.charAt(0);}}}",public char getCharMapStringString args String name char defaultValue String s  argsremovenameif s  null return defaultValue else if slength  1 throw new IllegalArgumentExceptionname   should be a char   s   is invalid else return scharAt0
"public void notifyListeners(LexerNoViableAltException e) {String text = _input.getText(Interval.of(_tokenStartCharIndex, _input.index()));String msg = ""token recognition error at: '""+ getErrorDisplay(text) + ""'"";ANTLRErrorListener listener = getErrorListenerDispatch();listener.syntaxError(this, null, _tokenStartLine, _tokenStartCharPositionInLine, msg, e);}",public void notifyListenersLexerNoViableAltException e String text  inputgetTextIntervaloftokenStartCharIndex inputindexString msg  token recognition error at  getErrorDisplaytext  ANTLRErrorListener listener  getErrorListenerDispatchlistenersyntaxErrorthis null tokenStartLine tokenStartCharPositionInLine msg e
public void writeLong(long v) {writeContinueIfRequired(8);_ulrOutput.writeLong(v);},public void writeLonglong v writeContinueIfRequired8ulrOutputwriteLongv
"public ChangeMessageVisibilityBatchRequest(String queueUrl, java.util.List<ChangeMessageVisibilityBatchRequestEntry> entries) {setQueueUrl(queueUrl);setEntries(entries);}",public ChangeMessageVisibilityBatchRequestString queueUrl javautilListChangeMessageVisibilityBatchRequestEntry entries setQueueUrlqueueUrlsetEntriesentries
public GetExportJobResult getExportJob(GetExportJobRequest request) {request = beforeClientExecution(request);return executeGetExportJob(request);},public GetExportJobResult getExportJobGetExportJobRequest request request  beforeClientExecutionrequestreturn executeGetExportJobrequest
public AddRoleToDBInstanceResult addRoleToDBInstance(AddRoleToDBInstanceRequest request) {request = beforeClientExecution(request);return executeAddRoleToDBInstance(request);},public AddRoleToDBInstanceResult addRoleToDBInstanceAddRoleToDBInstanceRequest request request  beforeClientExecutionrequestreturn executeAddRoleToDBInstancerequest
public DeregisterInstancesFromLoadBalancerResult deregisterInstancesFromLoadBalancer(DeregisterInstancesFromLoadBalancerRequest request) {request = beforeClientExecution(request);return executeDeregisterInstancesFromLoadBalancer(request);},public DeregisterInstancesFromLoadBalancerResult deregisterInstancesFromLoadBalancerDeregisterInstancesFromLoadBalancerRequest request request  beforeClientExecutionrequestreturn executeDeregisterInstancesFromLoadBalancerrequest
"public synchronized StringBuffer insert(int index, char ch) {insert0(index, ch);return this;}",public synchronized StringBuffer insertint index char ch insert0index chreturn this
public DownloadDBLogFilePortionResult downloadDBLogFilePortion(DownloadDBLogFilePortionRequest request) {request = beforeClientExecution(request);return executeDownloadDBLogFilePortion(request);},public DownloadDBLogFilePortionResult downloadDBLogFilePortionDownloadDBLogFilePortionRequest request request  beforeClientExecutionrequestreturn executeDownloadDBLogFilePortionrequest
public GetStaticIpResult getStaticIp(GetStaticIpRequest request) {request = beforeClientExecution(request);return executeGetStaticIp(request);},public GetStaticIpResult getStaticIpGetStaticIpRequest request request  beforeClientExecutionrequestreturn executeGetStaticIprequest
public CreateUsagePlanResult createUsagePlan(CreateUsagePlanRequest request) {request = beforeClientExecution(request);return executeCreateUsagePlan(request);},public CreateUsagePlanResult createUsagePlanCreateUsagePlanRequest request request  beforeClientExecutionrequestreturn executeCreateUsagePlanrequest
"public BlameResult call() throws GitAPIException {checkCallable();try (BlameGenerator gen = new BlameGenerator(repo, path)) {if (diffAlgorithm != null)gen.setDiffAlgorithm(diffAlgorithm);if (textComparator != null)gen.setTextComparator(textComparator);if (followFileRenames != null)gen.setFollowFileRenames(followFileRenames.booleanValue());if (reverseEndCommits != null)gen.reverse(startCommit, reverseEndCommits);else if (startCommit != null)gen.push(null, startCommit);else {gen.prepareHead();}return gen.computeBlameResult();} catch (IOException e) {throw new JGitInternalException(e.getMessage(), e);}}",public BlameResult call throws GitAPIException checkCallabletry BlameGenerator gen  new BlameGeneratorrepo path if diffAlgorithm  nullgensetDiffAlgorithmdiffAlgorithmif textComparator  nullgensetTextComparatortextComparatorif followFileRenames  nullgensetFollowFileRenamesfollowFileRenamesbooleanValueif reverseEndCommits  nullgenreversestartCommit reverseEndCommitselse if startCommit  nullgenpushnull startCommitelse genprepareHeadreturn gencomputeBlameResult catch IOException e throw new JGitInternalExceptionegetMessage e
public SearchTransitGatewayMulticastGroupsResult searchTransitGatewayMulticastGroups(SearchTransitGatewayMulticastGroupsRequest request) {request = beforeClientExecution(request);return executeSearchTransitGatewayMulticastGroups(request);},public SearchTransitGatewayMulticastGroupsResult searchTransitGatewayMulticastGroupsSearchTransitGatewayMulticastGroupsRequest request request  beforeClientExecutionrequestreturn executeSearchTransitGatewayMulticastGroupsrequest
"public LinearOffsetRange normaliseAndTranslate(int translationAmount) {if (_length > 0) {if(translationAmount == 0) {return this;}return new LinearOffsetRange(translationAmount + _offset, _length);}return new LinearOffsetRange(translationAmount + _offset + _length + 1, -_length);}",public LinearOffsetRange normaliseAndTranslateint translationAmount if length  0 iftranslationAmount  0 return thisreturn new LinearOffsetRangetranslationAmount  offset lengthreturn new LinearOffsetRangetranslationAmount  offset  length  1 length
public boolean isInvoke(char c) {return invokeMap[characterCategoryMap[c]];},public boolean isInvokechar c return invokeMapcharacterCategoryMapc
public int getSize() {return size;},public int getSize return size
public int read() throws IOException {if (buf == null) {throw new IOException();}if (pos < buf.length) {return (buf[pos++] & 0xFF);}return in.read();},public int read throws IOException if buf  null throw new IOExceptionif pos  buflength return bufpos  0xFFreturn inread
public int mark() {return 0;},public int mark return 0
"public SearchPhotosRequest() {super(""CloudPhoto"", ""2017-07-11"", ""SearchPhotos"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public SearchPhotosRequest superCloudPhoto 20170711 SearchPhotos cloudphotosetProtocolProtocolTypeHTTPS
"public void copyFrom(TermState other) {assert other instanceof OrdTermState : ""can not copy from "" + other.getClass().getName();this.ord = ((OrdTermState) other).ord;}",public void copyFromTermState other assert other instanceof OrdTermState  can not copy from   othergetClassgetNamethisord  OrdTermState otherord
public AnalyzeDocumentResult analyzeDocument(AnalyzeDocumentRequest request) {request = beforeClientExecution(request);return executeAnalyzeDocument(request);},public AnalyzeDocumentResult analyzeDocumentAnalyzeDocumentRequest request request  beforeClientExecutionrequestreturn executeAnalyzeDocumentrequest
public int calcExtSSTRecordSize() {return ExtSSTRecord.getRecordSizeForStrings(field_3_strings.size());},public int calcExtSSTRecordSize return ExtSSTRecordgetRecordSizeForStringsfield3stringssize
"public static FormulaShifter createForSheetShift(int srcSheetIndex, int dstSheetIndex) {return new FormulaShifter(srcSheetIndex, dstSheetIndex);}",public static FormulaShifter createForSheetShiftint srcSheetIndex int dstSheetIndex return new FormulaShiftersrcSheetIndex dstSheetIndex
"public void setRule(int idx, ConditionalFormattingRule cfRule){setRule(idx, (HSSFConditionalFormattingRule)cfRule);}",public void setRuleint idx ConditionalFormattingRule cfRulesetRuleidx HSSFConditionalFormattingRulecfRule
public SelectionRecord(RecordInputStream in) {field_1_pane            = in.readByte();field_2_row_active_cell = in.readUShort();field_3_col_active_cell = in.readShort();field_4_active_cell_ref_index = in.readShort();int field_5_num_refs    = in.readUShort();field_6_refs = new CellRangeAddress8Bit[field_5_num_refs];for (int i = 0; i < field_6_refs.length; i++) {field_6_refs[i] = new CellRangeAddress8Bit(in);}},public SelectionRecordRecordInputStream in field1pane             inreadBytefield2rowactivecell  inreadUShortfield3colactivecell  inreadShortfield4activecellrefindex  inreadShortint field5numrefs     inreadUShortfield6refs  new CellRangeAddress8Bitfield5numrefsfor int i  0 i  field6refslength i field6refsi  new CellRangeAddress8Bitin
public void setNeedNewObjectIds(boolean b) {if (b)newObjectIds = new ObjectIdSubclassMap<>();elsenewObjectIds = null;},public void setNeedNewObjectIdsboolean b if bnewObjectIds  new ObjectIdSubclassMapelsenewObjectIds  null
public GetResolverRulePolicyResult getResolverRulePolicy(GetResolverRulePolicyRequest request) {request = beforeClientExecution(request);return executeGetResolverRulePolicy(request);},public GetResolverRulePolicyResult getResolverRulePolicyGetResolverRulePolicyRequest request request  beforeClientExecutionrequestreturn executeGetResolverRulePolicyrequest
"public static DoubleBuffer wrap(double[] array) {return wrap(array, 0, array.length);}",public static DoubleBuffer wrapdouble array return wraparray 0 arraylength
public UnitsRecord clone() {return copy();},public UnitsRecord clone return copy
"public void readFully(byte[] buf, int off, int len) {try {checkEOF(_read(buf, off, len), len);} catch (IOException e) {throw new RuntimeException(e);}}",public void readFullybyte buf int off int len try checkEOFreadbuf off len len catch IOException e throw new RuntimeExceptione
public DescribeInterconnectLoaResult describeInterconnectLoa(DescribeInterconnectLoaRequest request) {request = beforeClientExecution(request);return executeDescribeInterconnectLoa(request);},public DescribeInterconnectLoaResult describeInterconnectLoaDescribeInterconnectLoaRequest request request  beforeClientExecutionrequestreturn executeDescribeInterconnectLoarequest
public static ByteOrder nativeOrder() {return NATIVE_ORDER;},public static ByteOrder nativeOrder return NATIVEORDER
public CalcModeRecord(RecordInputStream in) {field_1_calcmode = in.readShort();},public CalcModeRecordRecordInputStream in field1calcmode  inreadShort
"public void addParentId(AnyObjectId additionalParent) {if (parentIds.length == 0) {setParentId(additionalParent);} else {ObjectId[] newParents = new ObjectId[parentIds.length + 1];System.arraycopy(parentIds, 0, newParents, 0, parentIds.length);newParents[parentIds.length] = additionalParent.copy();parentIds = newParents;}}",public void addParentIdAnyObjectId additionalParent if parentIdslength  0 setParentIdadditionalParent else ObjectId newParents  new ObjectIdparentIdslength  1SystemarraycopyparentIds 0 newParents 0 parentIdslengthnewParentsparentIdslength  additionalParentcopyparentIds  newParents
public CreateAccessPointResult createAccessPoint(CreateAccessPointRequest request) {request = beforeClientExecution(request);return executeCreateAccessPoint(request);},public CreateAccessPointResult createAccessPointCreateAccessPointRequest request request  beforeClientExecutionrequestreturn executeCreateAccessPointrequest
public DeleteLoadBalancerListenersResult deleteLoadBalancerListeners(DeleteLoadBalancerListenersRequest request) {request = beforeClientExecution(request);return executeDeleteLoadBalancerListeners(request);},public DeleteLoadBalancerListenersResult deleteLoadBalancerListenersDeleteLoadBalancerListenersRequest request request  beforeClientExecutionrequestreturn executeDeleteLoadBalancerListenersrequest
public DescribeOrderableClusterOptionsResult describeOrderableClusterOptions() {return describeOrderableClusterOptions(new DescribeOrderableClusterOptionsRequest());},public DescribeOrderableClusterOptionsResult describeOrderableClusterOptions return describeOrderableClusterOptionsnew DescribeOrderableClusterOptionsRequest
public void setDerefTags(boolean deref) {derefTags = deref;},public void setDerefTagsboolean deref derefTags  deref
"public DeactivateMFADeviceRequest(String userName, String serialNumber) {setUserName(userName);setSerialNumber(serialNumber);}",public DeactivateMFADeviceRequestString userName String serialNumber setUserNameuserNamesetSerialNumberserialNumber
public boolean markSupported() {synchronized (lock) {return in.markSupported();}},public boolean markSupported synchronized lock return inmarkSupported
"public static void createNewFile(File f) throws IOException {if (!f.createNewFile())throw new IOException(MessageFormat.format(JGitText.get().createNewFileFailed, f));}",public static void createNewFileFile f throws IOException if fcreateNewFilethrow new IOExceptionMessageFormatformatJGitTextgetcreateNewFileFailed f
public String getFieldAsString() {if (this.field == null)return null;else return this.field.toString();},public String getFieldAsString if thisfield  nullreturn nullelse return thisfieldtoString
"public void inform(ResourceLoader loader) throws IOException {String dicts[] = dictionaryFiles.split("","");InputStream affix = null;List<InputStream> dictionaries = new ArrayList<>();try {dictionaries = new ArrayList<>();for (String file : dicts) {dictionaries.add(loader.openResource(file));}affix = loader.openResource(affixFile);Path tempPath = Files.createTempDirectory(Dictionary.getDefaultTempDir(), ""Hunspell"");try (Directory tempDir = FSDirectory.open(tempPath)) {this.dictionary = new Dictionary(tempDir, ""hunspell"", affix, dictionaries, ignoreCase);} finally {IOUtils.rm(tempPath);}} catch (ParseException e) {throw new IOException(""Unable to load hunspell data! [dictionary="" + dictionaries + "",affix="" + affixFile + ""]"", e);} finally {IOUtils.closeWhileHandlingException(affix);IOUtils.closeWhileHandlingException(dictionaries);}}",public void informResourceLoader loader throws IOException String dicts  dictionaryFilessplitInputStream affix  nullListInputStream dictionaries  new ArrayListtry dictionaries  new ArrayListfor String file  dicts dictionariesaddloaderopenResourcefileaffix  loaderopenResourceaffixFilePath tempPath  FilescreateTempDirectoryDictionarygetDefaultTempDir Hunspelltry Directory tempDir  FSDirectoryopentempPath thisdictionary  new DictionarytempDir hunspell affix dictionaries ignoreCase finally IOUtilsrmtempPath catch ParseException e throw new IOExceptionUnable to load hunspell data dictionary  dictionaries  affix  affixFile   e finally IOUtilscloseWhileHandlingExceptionaffixIOUtilscloseWhileHandlingExceptiondictionaries
public DetectDocumentTextResult detectDocumentText(DetectDocumentTextRequest request) {request = beforeClientExecution(request);return executeDetectDocumentText(request);},public DetectDocumentTextResult detectDocumentTextDetectDocumentTextRequest request request  beforeClientExecutionrequestreturn executeDetectDocumentTextrequest
public DescribeCertificatesResult describeCertificates(DescribeCertificatesRequest request) {request = beforeClientExecution(request);return executeDescribeCertificates(request);},public DescribeCertificatesResult describeCertificatesDescribeCertificatesRequest request request  beforeClientExecutionrequestreturn executeDescribeCertificatesrequest
public int getFormatCount() {return _formats.length;},public int getFormatCount return formatslength
public GetOutcomesResult getOutcomes(GetOutcomesRequest request) {request = beforeClientExecution(request);return executeGetOutcomes(request);},public GetOutcomesResult getOutcomesGetOutcomesRequest request request  beforeClientExecutionrequestreturn executeGetOutcomesrequest
public Set<URIishField> getOptionalFields() {return Collections.emptySet();},public SetURIishField getOptionalFields return CollectionsemptySet
"public BasicStats(String field, double boost) {this.field = field;this.boost = boost;}",public BasicStatsString field double boost thisfield  fieldthisboost  boost
public UpdateSecurityGroupRuleDescriptionsIngressResult updateSecurityGroupRuleDescriptionsIngress(UpdateSecurityGroupRuleDescriptionsIngressRequest request) {request = beforeClientExecution(request);return executeUpdateSecurityGroupRuleDescriptionsIngress(request);},public UpdateSecurityGroupRuleDescriptionsIngressResult updateSecurityGroupRuleDescriptionsIngressUpdateSecurityGroupRuleDescriptionsIngressRequest request request  beforeClientExecutionrequestreturn executeUpdateSecurityGroupRuleDescriptionsIngressrequest
public long getOffset() {return position;},public long getOffset return position
public Collection<Ref> getAdvertisedRefs() {return Collections.unmodifiableCollection(advertisedRefs.values());},public CollectionRef getAdvertisedRefs return CollectionsunmodifiableCollectionadvertisedRefsvalues
public QueryParser(QueryParserTokenManager tm) {token_source = tm;token = new Token();jj_ntk = -1;jj_gen = 0;for (int i = 0; i < 10; i++) jj_la1[i] = -1;for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();},public QueryParserQueryParserTokenManager tm tokensource  tmtoken  new Tokenjjntk  1jjgen  0for int i  0 i  10 i jjla1i  1for int i  0 i  jj2rtnslength i jj2rtnsi  new JJCalls
public void setText(CharacterIterator newText) {start = newText.getBeginIndex();end = newText.getEndIndex();text = newText;current = start;},public void setTextCharacterIterator newText start  newTextgetBeginIndexend  newTextgetEndIndextext  newTextcurrent  start
public PutOutcomeResult putOutcome(PutOutcomeRequest request) {request = beforeClientExecution(request);return executePutOutcome(request);},public PutOutcomeResult putOutcomePutOutcomeRequest request request  beforeClientExecutionrequestreturn executePutOutcomerequest
public UnescapedCharSequence(CharSequence text) {this.chars = new char[text.length()];this.wasEscaped = new boolean[text.length()];for (int i = 0; i < text.length(); i++) {this.chars[i] = text.charAt(i);this.wasEscaped[i] = false;}},public UnescapedCharSequenceCharSequence text thischars  new chartextlengththiswasEscaped  new booleantextlengthfor int i  0 i  textlength i thischarsi  textcharAtithiswasEscapedi  false
"public DoubleBuffer put(double[] src, int srcOffset, int doubleCount) {byteBuffer.limit(limit * SizeOf.DOUBLE);byteBuffer.position(position * SizeOf.DOUBLE);if (byteBuffer instanceof ReadWriteDirectByteBuffer) {((ReadWriteDirectByteBuffer) byteBuffer).put(src, srcOffset, doubleCount);} else {((ReadWriteHeapByteBuffer) byteBuffer).put(src, srcOffset, doubleCount);}this.position += doubleCount;return this;}",public DoubleBuffer putdouble src int srcOffset int doubleCount byteBufferlimitlimit  SizeOfDOUBLEbyteBufferpositionposition  SizeOfDOUBLEif byteBuffer instanceof ReadWriteDirectByteBuffer ReadWriteDirectByteBuffer byteBufferputsrc srcOffset doubleCount else ReadWriteHeapByteBuffer byteBufferputsrc srcOffset doubleCountthisposition  doubleCountreturn this
public void remove() {throw new UnsupportedOperationException();},public void remove throw new UnsupportedOperationException
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[CHARTTITLEFORMAT]\n"");buffer.append(""    .format_runs       = "").append(_formats.length).append(""\n"");for(int i=0; i<_formats.length; i++) {CTFormat ctf = _formats[i];buffer.append(""       .char_offset= "").append(ctf.getOffset());buffer.append("",.fontidx= "").append(ctf.getFontIndex());buffer.append(""\n"");}buffer.append(""[/CHARTTITLEFORMAT]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendCHARTTITLEFORMATnbufferappend    formatruns        appendformatslengthappendnforint i0 iformatslength i CTFormat ctf  formatsibufferappend       charoffset appendctfgetOffsetbufferappendfontidx appendctfgetFontIndexbufferappendnbufferappendCHARTTITLEFORMATnreturn buffertoString
public StartDominantLanguageDetectionJobResult startDominantLanguageDetectionJob(StartDominantLanguageDetectionJobRequest request) {request = beforeClientExecution(request);return executeStartDominantLanguageDetectionJob(request);},public StartDominantLanguageDetectionJobResult startDominantLanguageDetectionJobStartDominantLanguageDetectionJobRequest request request  beforeClientExecutionrequestreturn executeStartDominantLanguageDetectionJobrequest
public static boolean hasNonConflictingAltSet(Collection<BitSet> altsets) {for (BitSet alts : altsets) {if ( alts.cardinality()==1 ) {return true;}}return false;},public static boolean hasNonConflictingAltSetCollectionBitSet altsets for BitSet alts  altsets if  altscardinality1  return truereturn false
"public ByteBuffer putChar(int index, char value) {return putShort(index, (short) value);}",public ByteBuffer putCharint index char value return putShortindex short value
"public DataValidationConstraint createTextLengthConstraint(int operatorType, String formula1, String formula2) {return DVConstraint.createNumericConstraint(ValidationType.TEXT_LENGTH, operatorType, formula1, formula2);}",public DataValidationConstraint createTextLengthConstraintint operatorType String formula1 String formula2 return DVConstraintcreateNumericConstraintValidationTypeTEXTLENGTH operatorType formula1 formula2
public void writeShort(int v) {writeContinueIfRequired(2);_ulrOutput.writeShort(v);},public void writeShortint v writeContinueIfRequired2ulrOutputwriteShortv
"public final short getShort(int index) {checkIndex(index, SizeOf.SHORT);return Memory.peekShort(backingArray, offset + index, order);}",public final short getShortint index checkIndexindex SizeOfSHORTreturn MemorypeekShortbackingArray offset  index order
"public static FuncPtg create(int functionIndex) {FunctionMetadata fm = FunctionMetadataRegistry.getFunctionByIndex(functionIndex);if(fm == null) {throw new RuntimeException(""Invalid built-in function index ("" + functionIndex + "")"");}return new FuncPtg(functionIndex, fm);}",public static FuncPtg createint functionIndex FunctionMetadata fm  FunctionMetadataRegistrygetFunctionByIndexfunctionIndexiffm  null throw new RuntimeExceptionInvalid builtin function index   functionIndex  return new FuncPtgfunctionIndex fm
"public String toString() {return ""{""+ruleIndex+"":""+predIndex+""}?"";}",public String toString return ruleIndexpredIndex
public ListDashboardsResult listDashboards(ListDashboardsRequest request) {request = beforeClientExecution(request);return executeListDashboards(request);},public ListDashboardsResult listDashboardsListDashboardsRequest request request  beforeClientExecutionrequestreturn executeListDashboardsrequest
public DeleteVoiceTemplateResult deleteVoiceTemplate(DeleteVoiceTemplateRequest request) {request = beforeClientExecution(request);return executeDeleteVoiceTemplate(request);},public DeleteVoiceTemplateResult deleteVoiceTemplateDeleteVoiceTemplateRequest request request  beforeClientExecutionrequestreturn executeDeleteVoiceTemplaterequest
"public void addListenerForAllRecords(HSSFListener lsnr) {short[] rectypes = RecordFactory.getAllKnownRecordSIDs();for (short rectype : rectypes) {addListener(lsnr, rectype);}}",public void addListenerForAllRecordsHSSFListener lsnr short rectypes  RecordFactorygetAllKnownRecordSIDsfor short rectype  rectypes addListenerlsnr rectype
public DescribeLocalGatewayRouteTablesResult describeLocalGatewayRouteTables(DescribeLocalGatewayRouteTablesRequest request) {request = beforeClientExecution(request);return executeDescribeLocalGatewayRouteTables(request);},public DescribeLocalGatewayRouteTablesResult describeLocalGatewayRouteTablesDescribeLocalGatewayRouteTablesRequest request request  beforeClientExecutionrequestreturn executeDescribeLocalGatewayRouteTablesrequest
public EnableDomainAutoRenewResult enableDomainAutoRenew(EnableDomainAutoRenewRequest request) {request = beforeClientExecution(request);return executeEnableDomainAutoRenew(request);},public EnableDomainAutoRenewResult enableDomainAutoRenewEnableDomainAutoRenewRequest request request  beforeClientExecutionrequestreturn executeEnableDomainAutoRenewrequest
public String toString() {StringBuilder result = new StringBuilder();result.append(type.toString());result.append('<');result.append(name);result.append(':');if (fieldsData != null) {result.append(fieldsData);}result.append('>');return result.toString();},public String toString StringBuilder result  new StringBuilderresultappendtypetoStringresultappendresultappendnameresultappendif fieldsData  null resultappendfieldsDataresultappendreturn resulttoString
public DescribeConversionTasksResult describeConversionTasks() {return describeConversionTasks(new DescribeConversionTasksRequest());},public DescribeConversionTasksResult describeConversionTasks return describeConversionTasksnew DescribeConversionTasksRequest
public GetFieldLevelEncryptionProfileConfigResult getFieldLevelEncryptionProfileConfig(GetFieldLevelEncryptionProfileConfigRequest request) {request = beforeClientExecution(request);return executeGetFieldLevelEncryptionProfileConfig(request);},public GetFieldLevelEncryptionProfileConfigResult getFieldLevelEncryptionProfileConfigGetFieldLevelEncryptionProfileConfigRequest request request  beforeClientExecutionrequestreturn executeGetFieldLevelEncryptionProfileConfigrequest
public ListInstancesResult listInstances(ListInstancesRequest request) {request = beforeClientExecution(request);return executeListInstances(request);},public ListInstancesResult listInstancesListInstancesRequest request request  beforeClientExecutionrequestreturn executeListInstancesrequest
"public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {final byte block = blocks[blocksOffset++];values[valuesOffset++] = (block >>> 6) & 3;values[valuesOffset++] = (block >>> 4) & 3;values[valuesOffset++] = (block >>> 2) & 3;values[valuesOffset++] = block & 3;}}",public void decodebyte blocks int blocksOffset int values int valuesOffset int iterations for int j  0 j  iterations j final byte block  blocksblocksOffsetvaluesvaluesOffset  block  6  3valuesvaluesOffset  block  4  3valuesvaluesOffset  block  2  3valuesvaluesOffset  block  3
"public int read(byte[] dst, int pos, int cnt) throws IOException {try {int n = 0;while (n < cnt) {int r = inf.inflate(dst, pos + n, cnt - n);n += r;if (inf.finished())break;if (inf.needsInput()) {onObjectData(src, buf, p, bAvail);use(bAvail);p = fill(src, 1);inf.setInput(buf, p, bAvail);} else if (r == 0) {throw new CorruptObjectException(MessageFormat.format(JGitText.get().packfileCorruptionDetected,JGitText.get().unknownZlibError));}}actualSize += n;return 0 < n ? n : -1;} catch (DataFormatException dfe) {throw new CorruptObjectException(MessageFormat.format(JGitText.get().packfileCorruptionDetected, dfe.getMessage()));}}",public int readbyte dst int pos int cnt throws IOException try int n  0while n  cnt int r  infinflatedst pos  n cnt  nn  rif inffinishedbreakif infneedsInput onObjectDatasrc buf p bAvailusebAvailp  fillsrc 1infsetInputbuf p bAvail else if r  0 throw new CorruptObjectExceptionMessageFormatformatJGitTextgetpackfileCorruptionDetectedJGitTextgetunknownZlibErroractualSize  nreturn 0  n  n  1 catch DataFormatException dfe throw new CorruptObjectExceptionMessageFormatformatJGitTextgetpackfileCorruptionDetected dfegetMessage
public WorkflowExecutionCount countClosedWorkflowExecutions(CountClosedWorkflowExecutionsRequest request) {request = beforeClientExecution(request);return executeCountClosedWorkflowExecutions(request);},public WorkflowExecutionCount countClosedWorkflowExecutionsCountClosedWorkflowExecutionsRequest request request  beforeClientExecutionrequestreturn executeCountClosedWorkflowExecutionsrequest
public E remove() {return removeFirstImpl();},public E remove return removeFirstImpl
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval numberVE) {final String number;if (numberVE instanceof RefEval) {RefEval re = (RefEval) numberVE;number = OperandResolver.coerceValueToString(re.getInnerValueEval(re.getFirstSheetIndex()));} else {number = OperandResolver.coerceValueToString(numberVE);}if (number.length() > 10) {return ErrorEval.NUM_ERROR;}String unsigned;boolean isPositive;if (number.length() < 10) {unsigned = number;isPositive = true;} else {unsigned = number.substring(1);isPositive = number.startsWith(""0"");}String value;try {if (isPositive) {int sum = getDecimalValue(unsigned);value = String.valueOf(sum);} else {String inverted = toggleBits(unsigned);int sum = getDecimalValue(inverted);sum++;value = ""-"" + sum;}} catch (NumberFormatException e) {return ErrorEval.NUM_ERROR;}return new NumberEval(Long.parseLong(value));}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval numberVE final String numberif numberVE instanceof RefEval RefEval re  RefEval numberVEnumber  OperandResolvercoerceValueToStringregetInnerValueEvalregetFirstSheetIndex else number  OperandResolvercoerceValueToStringnumberVEif numberlength  10 return ErrorEvalNUMERRORString unsignedboolean isPositiveif numberlength  10 unsigned  numberisPositive  true else unsigned  numbersubstring1isPositive  numberstartsWith0String valuetry if isPositive int sum  getDecimalValueunsignedvalue  StringvalueOfsum else String inverted  toggleBitsunsignedint sum  getDecimalValueinvertedsumvalue    sum catch NumberFormatException e return ErrorEvalNUMERRORreturn new NumberEvalLongparseLongvalue
public ObjectId getOldId() {return oldId;},public ObjectId getOldId return oldId
public FeatProtection(RecordInputStream in) {fSD = in.readInt();passwordVerifier = in.readInt();title = StringUtil.readUnicodeString(in);securityDescriptor = in.readRemainder();},public FeatProtectionRecordInputStream in fSD  inreadIntpasswordVerifier  inreadInttitle  StringUtilreadUnicodeStringinsecurityDescriptor  inreadRemainder
public UpdateContactAttributesResult updateContactAttributes(UpdateContactAttributesRequest request) {request = beforeClientExecution(request);return executeUpdateContactAttributes(request);},public UpdateContactAttributesResult updateContactAttributesUpdateContactAttributesRequest request request  beforeClientExecutionrequestreturn executeUpdateContactAttributesrequest
public DescribeClientVpnEndpointsResult describeClientVpnEndpoints(DescribeClientVpnEndpointsRequest request) {request = beforeClientExecution(request);return executeDescribeClientVpnEndpoints(request);},public DescribeClientVpnEndpointsResult describeClientVpnEndpointsDescribeClientVpnEndpointsRequest request request  beforeClientExecutionrequestreturn executeDescribeClientVpnEndpointsrequest
public DescribeCacheSecurityGroupsResult describeCacheSecurityGroups(DescribeCacheSecurityGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeCacheSecurityGroups(request);},public DescribeCacheSecurityGroupsResult describeCacheSecurityGroupsDescribeCacheSecurityGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeCacheSecurityGroupsrequest
public boolean equals(Object object) {synchronized (Hashtable.this) {return super.equals(object);}},public boolean equalsObject object synchronized Hashtablethis return superequalsobject
public static List<TransportProtocol> getTransportProtocols() {int cnt = protocols.size();List<TransportProtocol> res = new ArrayList<>(cnt);for (WeakReference<TransportProtocol> ref : protocols) {TransportProtocol proto = ref.get();if (proto != null)res.add(proto);elseprotocols.remove(ref);}return Collections.unmodifiableList(res);},public static ListTransportProtocol getTransportProtocols int cnt  protocolssizeListTransportProtocol res  new ArrayListcntfor WeakReferenceTransportProtocol ref  protocols TransportProtocol proto  refgetif proto  nullresaddprotoelseprotocolsremoverefreturn CollectionsunmodifiableListres
"public SrndTermQuery(String termText, boolean quoted) {super(quoted);this.termText = termText;}",public SrndTermQueryString termText boolean quoted superquotedthistermText  termText
public CreateEmailTemplateResult createEmailTemplate(CreateEmailTemplateRequest request) {request = beforeClientExecution(request);return executeCreateEmailTemplate(request);},public CreateEmailTemplateResult createEmailTemplateCreateEmailTemplateRequest request request  beforeClientExecutionrequestreturn executeCreateEmailTemplaterequest
public ByteBuffer putChar(char value) {return putShort((short) value);},public ByteBuffer putCharchar value return putShortshort value
"public static String getLocalizedMessage(String key) {return getLocalizedMessage(key, Locale.getDefault());}",public static String getLocalizedMessageString key return getLocalizedMessagekey LocalegetDefault
public Snapshot deleteSnapshot(DeleteSnapshotRequest request) {request = beforeClientExecution(request);return executeDeleteSnapshot(request);},public Snapshot deleteSnapshotDeleteSnapshotRequest request request  beforeClientExecutionrequestreturn executeDeleteSnapshotrequest
public ListMemberAccountsResult listMemberAccounts(ListMemberAccountsRequest request) {request = beforeClientExecution(request);return executeListMemberAccounts(request);},public ListMemberAccountsResult listMemberAccountsListMemberAccountsRequest request request  beforeClientExecutionrequestreturn executeListMemberAccountsrequest
public boolean shouldRefresh() {long now = System.currentTimeMillis();return now - lastFailedRefreshTime > refreshIntervalInMillSeconds;},public boolean shouldRefresh long now  SystemcurrentTimeMillisreturn now  lastFailedRefreshTime  refreshIntervalInMillSeconds
"public void setRefLogMessage(String msg, boolean appendStatus) {if (msg == null && !appendStatus)disableRefLog();else if (msg == null && appendStatus) {refLogMessage = """"; refLogIncludeResult = true;} else {refLogMessage = msg;refLogIncludeResult = appendStatus;}}",public void setRefLogMessageString msg boolean appendStatus if msg  null  appendStatusdisableRefLogelse if msg  null  appendStatus refLogMessage   refLogIncludeResult  true else refLogMessage  msgrefLogIncludeResult  appendStatus
public Status getStatus() {return myStatus;},public Status getStatus return myStatus
public GetDeploymentStrategyResult getDeploymentStrategy(GetDeploymentStrategyRequest request) {request = beforeClientExecution(request);return executeGetDeploymentStrategy(request);},public GetDeploymentStrategyResult getDeploymentStrategyGetDeploymentStrategyRequest request request  beforeClientExecutionrequestreturn executeGetDeploymentStrategyrequest
public DeleteEventResult deleteEvent(DeleteEventRequest request) {request = beforeClientExecution(request);return executeDeleteEvent(request);},public DeleteEventResult deleteEventDeleteEventRequest request request  beforeClientExecutionrequestreturn executeDeleteEventrequest
public ListQueryLoggingConfigsResult listQueryLoggingConfigs(ListQueryLoggingConfigsRequest request) {request = beforeClientExecution(request);return executeListQueryLoggingConfigs(request);},public ListQueryLoggingConfigsResult listQueryLoggingConfigsListQueryLoggingConfigsRequest request request  beforeClientExecutionrequestreturn executeListQueryLoggingConfigsrequest
public BatchGetDeploymentTargetsResult batchGetDeploymentTargets(BatchGetDeploymentTargetsRequest request) {request = beforeClientExecution(request);return executeBatchGetDeploymentTargets(request);},public BatchGetDeploymentTargetsResult batchGetDeploymentTargetsBatchGetDeploymentTargetsRequest request request  beforeClientExecutionrequestreturn executeBatchGetDeploymentTargetsrequest
public GetRulesResult getRules(GetRulesRequest request) {request = beforeClientExecution(request);return executeGetRules(request);},public GetRulesResult getRulesGetRulesRequest request request  beforeClientExecutionrequestreturn executeGetRulesrequest
public void setMessage(String newMessage) {message = newMessage;},public void setMessageString newMessage message  newMessage
public String toString(String field) {return null;},public String toStringString field return null
public ReplicationGroup completeMigration(CompleteMigrationRequest request) {request = beforeClientExecution(request);return executeCompleteMigration(request);},public ReplicationGroup completeMigrationCompleteMigrationRequest request request  beforeClientExecutionrequestreturn executeCompleteMigrationrequest
"public SupBookRecord(RecordInputStream in) {int recLen = in.remaining();field_1_number_of_sheets = in.readShort();if(recLen > SMALL_RECORD_SIZE) {_isAddInFunctions = false;field_2_encoded_url = in.readString();String[] sheetNames = new String[field_1_number_of_sheets];for (int i = 0; i < sheetNames.length; i++) {sheetNames[i] = in.readString();}field_3_sheet_names = sheetNames;return;}field_2_encoded_url = null;field_3_sheet_names = null;short nextShort = in.readShort();if(nextShort == TAG_INTERNAL_REFERENCES) {_isAddInFunctions = false;} else if(nextShort == TAG_ADD_IN_FUNCTIONS) {_isAddInFunctions = true;if(field_1_number_of_sheets != 1) {throw new RuntimeException(""Expected 0x0001 for number of sheets field in 'Add-In Functions' but got (""+ field_1_number_of_sheets + "")"");}} else {throw new RuntimeException(""invalid EXTERNALBOOK code (""+ Integer.toHexString(nextShort) + "")"");}}",public SupBookRecordRecordInputStream in int recLen  inremainingfield1numberofsheets  inreadShortifrecLen  SMALLRECORDSIZE isAddInFunctions  falsefield2encodedurl  inreadStringString sheetNames  new Stringfield1numberofsheetsfor int i  0 i  sheetNameslength i sheetNamesi  inreadStringfield3sheetnames  sheetNamesreturnfield2encodedurl  nullfield3sheetnames  nullshort nextShort  inreadShortifnextShort  TAGINTERNALREFERENCES isAddInFunctions  false else ifnextShort  TAGADDINFUNCTIONS isAddInFunctions  trueiffield1numberofsheets  1 throw new RuntimeExceptionExpected 0x0001 for number of sheets field in AddIn Functions but got  field1numberofsheets   else throw new RuntimeExceptioninvalid EXTERNALBOOK code  IntegertoHexStringnextShort  
public GetEmailTemplateResult getEmailTemplate(GetEmailTemplateRequest request) {request = beforeClientExecution(request);return executeGetEmailTemplate(request);},public GetEmailTemplateResult getEmailTemplateGetEmailTemplateRequest request request  beforeClientExecutionrequestreturn executeGetEmailTemplaterequest
"public void setByte(int index, int value) {switch (index >> 2) {case 0:w1 = set(w1, index & 3, value);break;case 1:w2 = set(w2, index & 3, value);break;case 2:w3 = set(w3, index & 3, value);break;case 3:w4 = set(w4, index & 3, value);break;case 4:w5 = set(w5, index & 3, value);break;default:throw new ArrayIndexOutOfBoundsException(index);}}",public void setByteint index int value switch index  2 case 0w1  setw1 index  3 valuebreakcase 1w2  setw2 index  3 valuebreakcase 2w3  setw3 index  3 valuebreakcase 3w4  setw4 index  3 valuebreakcase 4w5  setw5 index  3 valuebreakdefaultthrow new ArrayIndexOutOfBoundsExceptionindex
"public LongBuffer put(int index, long c) {throw new ReadOnlyBufferException();}",public LongBuffer putint index long c throw new ReadOnlyBufferException
public SumTotalTermFreqValueSource(String indexedField) {this.indexedField = indexedField;},public SumTotalTermFreqValueSourceString indexedField thisindexedField  indexedField
"public NavigableSet<E> tailSet(E start, boolean startInclusive) {Comparator<? super E> c = backingMap.comparator();if (c == null) {((Comparable<E>) start).compareTo(start);} else {c.compare(start, start);}return new TreeSet<E>(backingMap.tailMap(start, startInclusive));}",public NavigableSetE tailSetE start boolean startInclusive Comparator super E c  backingMapcomparatorif c  null ComparableE startcompareTostart else ccomparestart startreturn new TreeSetEbackingMaptailMapstart startInclusive
public ReadJobResult readJob(ReadJobRequest request) {request = beforeClientExecution(request);return executeReadJob(request);},public ReadJobResult readJobReadJobRequest request request  beforeClientExecutionrequestreturn executeReadJobrequest
public GetSignalingChannelEndpointResult getSignalingChannelEndpoint(GetSignalingChannelEndpointRequest request) {request = beforeClientExecution(request);return executeGetSignalingChannelEndpoint(request);},public GetSignalingChannelEndpointResult getSignalingChannelEndpointGetSignalingChannelEndpointRequest request request  beforeClientExecutionrequestreturn executeGetSignalingChannelEndpointrequest
"public VariableGapTermsIndexWriter(SegmentWriteState state, IndexTermSelector policy) throws IOException {final String indexFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, TERMS_INDEX_EXTENSION);out = state.directory.createOutput(indexFileName, state.context);boolean success = false;try {fieldInfos = state.fieldInfos;this.policy = policy;CodecUtil.writeIndexHeader(out, CODEC_NAME, VERSION_CURRENT, state.segmentInfo.getId(), state.segmentSuffix);success = true;} finally {if (!success) {IOUtils.closeWhileHandlingException(out);}}}",public VariableGapTermsIndexWriterSegmentWriteState state IndexTermSelector policy throws IOException final String indexFileName  IndexFileNamessegmentFileNamestatesegmentInfoname statesegmentSuffix TERMSINDEXEXTENSIONout  statedirectorycreateOutputindexFileName statecontextboolean success  falsetry fieldInfos  statefieldInfosthispolicy  policyCodecUtilwriteIndexHeaderout CODECNAME VERSIONCURRENT statesegmentInfogetId statesegmentSuffixsuccess  true finally if success IOUtilscloseWhileHandlingExceptionout
"@Override public boolean add(E object) {Object[] a = array;int s = size;if (s == a.length) {Object[] newArray = new Object[s +(s < (MIN_CAPACITY_INCREMENT / 2) ?MIN_CAPACITY_INCREMENT : s >> 1)];System.arraycopy(a, 0, newArray, 0, s);array = a = newArray;}a[s] = object;size = s + 1;modCount++;return true;}",Override public boolean addE object Object a  arrayint s  sizeif s  alength Object newArray  new Objects s  MINCAPACITYINCREMENT  2 MINCAPACITYINCREMENT  s  1Systemarraycopya 0 newArray 0 sarray  a  newArrayas  objectsize  s  1modCountreturn true
public Set<Integer> toSet() {Set<Integer> s = new HashSet<Integer>();for (Interval I : intervals) {int a = I.a;int b = I.b;for (int v=a; v<=b; v++) {s.add(v);}}return s;},public SetInteger toSet SetInteger s  new HashSetIntegerfor Interval I  intervals int a  Iaint b  Ibfor int va vb v saddvreturn s
public final void writeBoolean(boolean val) throws IOException {write(val ? 1 : 0);},public final void writeBooleanboolean val throws IOException writeval  1  0
"public void serialize(LittleEndianOutput out) {throw new RecordFormatException( ""Sorry, you can't serialize MulRK in this release"");}",public void serializeLittleEndianOutput out throw new RecordFormatException Sorry you cant serialize MulRK in this release
public T get(int index) {if (index < 0 || size <= index)throw new IndexOutOfBoundsException(String.valueOf(index));return directory[toDirectoryIndex(index)][toBlockIndex(index)];},public T getint index if index  0  size  indexthrow new IndexOutOfBoundsExceptionStringvalueOfindexreturn directorytoDirectoryIndexindextoBlockIndexindex
public DeleteSnapshotCopyGrantResult deleteSnapshotCopyGrant(DeleteSnapshotCopyGrantRequest request) {request = beforeClientExecution(request);return executeDeleteSnapshotCopyGrant(request);},public DeleteSnapshotCopyGrantResult deleteSnapshotCopyGrantDeleteSnapshotCopyGrantRequest request request  beforeClientExecutionrequestreturn executeDeleteSnapshotCopyGrantrequest
"public void resetFontStyle(){setFontStyle(false,false);}",public void resetFontStylesetFontStylefalsefalse
public static int getEncodedSize(int numberOfRanges) {return 2 + CellRangeAddress.getEncodedSize(numberOfRanges);},public static int getEncodedSizeint numberOfRanges return 2  CellRangeAddressgetEncodedSizenumberOfRanges
public ListJobsRequest(String vaultName) {setVaultName(vaultName);},public ListJobsRequestString vaultName setVaultNamevaultName
public DeletePlacementGroupRequest(String groupName) {setGroupName(groupName);},public DeletePlacementGroupRequestString groupName setGroupNamegroupName
public void fill() {lazyInit();final int blockSize = 1000;while (true) {int fetched = fetch(blockSize);if (fetched < blockSize) {return;}}},public void fill lazyInitfinal int blockSize  1000while true int fetched  fetchblockSizeif fetched  blockSize return
public DescribeGlobalClustersResult describeGlobalClusters(DescribeGlobalClustersRequest request) {request = beforeClientExecution(request);return executeDescribeGlobalClusters(request);},public DescribeGlobalClustersResult describeGlobalClustersDescribeGlobalClustersRequest request request  beforeClientExecutionrequestreturn executeDescribeGlobalClustersrequest
public PutVoiceConnectorTerminationResult putVoiceConnectorTermination(PutVoiceConnectorTerminationRequest request) {request = beforeClientExecution(request);return executePutVoiceConnectorTermination(request);},public PutVoiceConnectorTerminationResult putVoiceConnectorTerminationPutVoiceConnectorTerminationRequest request request  beforeClientExecutionrequestreturn executePutVoiceConnectorTerminationrequest
"public static int strcmp(char[] a, int startA, char[] b, int startB) {for (; a[startA] == b[startB]; startA++, startB++) {if (a[startA] == 0) {return 0;}}return a[startA] - b[startB];}",public static int strcmpchar a int startA char b int startB for  astartA  bstartB startA startB if astartA  0 return 0return astartA  bstartB
public StartSentimentDetectionJobResult startSentimentDetectionJob(StartSentimentDetectionJobRequest request) {request = beforeClientExecution(request);return executeStartSentimentDetectionJob(request);},public StartSentimentDetectionJobResult startSentimentDetectionJobStartSentimentDetectionJobRequest request request  beforeClientExecutionrequestreturn executeStartSentimentDetectionJobrequest
"public HSSFCell createCell(int column){return this.createCell(column,CellType.BLANK);}",public HSSFCell createCellint columnreturn thiscreateCellcolumnCellTypeBLANK
public RecalcIdRecord(RecordInputStream in) {in.readUShort(); _reserved0 = in.readUShort();_engineId = in.readInt();},public RecalcIdRecordRecordInputStream in inreadUShort reserved0  inreadUShortengineId  inreadInt
public static int getEncodedSizeWithoutArrayData(Ptg[] ptgs) {int result = 0;for (Ptg ptg : ptgs) {if (ptg instanceof ArrayPtg) {result += ArrayPtg.PLAIN_TOKEN_SIZE;} else {result += ptg.getSize();}}return result;},public static int getEncodedSizeWithoutArrayDataPtg ptgs int result  0for Ptg ptg  ptgs if ptg instanceof ArrayPtg result  ArrayPtgPLAINTOKENSIZE else result  ptggetSizereturn result
"public static double ceiling(double n, double s) {if (n>0 && s<0) {return Double.NaN;} else {return (n == 0 || s == 0) ? 0 : Math.ceil(n/s) * s;}}",public static double ceilingdouble n double s if n0  s0 return DoubleNaN else return n  0  s  0  0  Mathceilns  s
public ListResolverRulesResult listResolverRules(ListResolverRulesRequest request) {request = beforeClientExecution(request);return executeListResolverRules(request);},public ListResolverRulesResult listResolverRulesListResolverRulesRequest request request  beforeClientExecutionrequestreturn executeListResolverRulesrequest
public ListBusinessReportSchedulesResult listBusinessReportSchedules(ListBusinessReportSchedulesRequest request) {request = beforeClientExecution(request);return executeListBusinessReportSchedules(request);},public ListBusinessReportSchedulesResult listBusinessReportSchedulesListBusinessReportSchedulesRequest request request  beforeClientExecutionrequestreturn executeListBusinessReportSchedulesrequest
"public EscherDgRecord createDgRecord() {EscherDgRecord dg = new EscherDgRecord();dg.setRecordId( EscherDgRecord.RECORD_ID );short dgId = findNewDrawingGroupId();dg.setOptions( (short) ( dgId << 4 ) );dg.setNumShapes( 0 );dg.setLastMSOSPID( -1 );drawingGroups.add(dg);dgg.addCluster( dgId, 0 );dgg.setDrawingsSaved( dgg.getDrawingsSaved() + 1 );return dg;}",public EscherDgRecord createDgRecord EscherDgRecord dg  new EscherDgRecorddgsetRecordId EscherDgRecordRECORDID short dgId  findNewDrawingGroupIddgsetOptions short  dgId  4  dgsetNumShapes 0 dgsetLastMSOSPID 1 drawingGroupsadddgdggaddCluster dgId 0 dggsetDrawingsSaved dgggetDrawingsSaved  1 return dg
"public Transport open(URIish uri)throws NotSupportedException, TransportException {throw new NotSupportedException(JGitText.get().transportNeedsRepository);}",public Transport openURIish urithrows NotSupportedException TransportException throw new NotSupportedExceptionJGitTextgettransportNeedsRepository
"public int compare(Ref o1, Ref o2) {return compareTo(o1, o2);}",public int compareRef o1 Ref o2 return compareToo1 o2
"public OrdRange(int start, int end) {this.start = start;this.end = end;}",public OrdRangeint start int end thisstart  startthisend  end
"public boolean add(E object) {return backingMap.put(object, this) == null;}",public boolean addE object return backingMapputobject this  null
"public void write(String s) {reserve(s.length());s.getChars(0,s.length(),buf, len);len +=s.length();}",public void writeString s reserveslengthsgetChars0slengthbuf lenlen slength
public long skip(long cnt) throws IOException {try {beginRead();return super.skip(cnt);} catch (InterruptedIOException e) {throw readTimedOut(e);} finally {endRead();}},public long skiplong cnt throws IOException try beginReadreturn superskipcnt catch InterruptedIOException e throw readTimedOute finally endRead
"public StepDetail(StepConfig stepConfig, StepExecutionStatusDetail executionStatusDetail) {setStepConfig(stepConfig);setExecutionStatusDetail(executionStatusDetail);}",public StepDetailStepConfig stepConfig StepExecutionStatusDetail executionStatusDetail setStepConfigstepConfigsetExecutionStatusDetailexecutionStatusDetail
final public Token getToken(int index) {Token t = token;for (int i = 0; i < index; i++) {if (t.next != null) t = t.next;else t = t.next = token_source.getNextToken();}return t;},final public Token getTokenint index Token t  tokenfor int i  0 i  index i if tnext  null t  tnextelse t  tnext  tokensourcegetNextTokenreturn t
public Object[] toArray() {synchronized (mutex) {return delegate().toArray();}},public Object toArray synchronized mutex return delegatetoArray
public DBParameterGroup createDBParameterGroup(CreateDBParameterGroupRequest request) {request = beforeClientExecution(request);return executeCreateDBParameterGroup(request);},public DBParameterGroup createDBParameterGroupCreateDBParameterGroupRequest request request  beforeClientExecutionrequestreturn executeCreateDBParameterGrouprequest
"public StringBuilder append(boolean b) {append0(b ? ""true"" : ""false"");return this;}",public StringBuilder appendboolean b append0b  true  falsereturn this
"public void execute(Lexer lexer, CharStream input, int startIndex) {boolean requiresSeek = false;int stopIndex = input.index();try {for (LexerAction lexerAction : lexerActions) {if (lexerAction instanceof LexerIndexedCustomAction) {int offset = ((LexerIndexedCustomAction)lexerAction).getOffset();input.seek(startIndex + offset);lexerAction = ((LexerIndexedCustomAction)lexerAction).getAction();requiresSeek = (startIndex + offset) != stopIndex;}else if (lexerAction.isPositionDependent()) {input.seek(stopIndex);requiresSeek = false;}lexerAction.execute(lexer);}}finally {if (requiresSeek) {input.seek(stopIndex);}}}",public void executeLexer lexer CharStream input int startIndex boolean requiresSeek  falseint stopIndex  inputindextry for LexerAction lexerAction  lexerActions if lexerAction instanceof LexerIndexedCustomAction int offset  LexerIndexedCustomActionlexerActiongetOffsetinputseekstartIndex  offsetlexerAction  LexerIndexedCustomActionlexerActiongetActionrequiresSeek  startIndex  offset  stopIndexelse if lexerActionisPositionDependent inputseekstopIndexrequiresSeek  falselexerActionexecutelexerfinally if requiresSeek inputseekstopIndex
public ListMailboxPermissionsResult listMailboxPermissions(ListMailboxPermissionsRequest request) {request = beforeClientExecution(request);return executeListMailboxPermissions(request);},public ListMailboxPermissionsResult listMailboxPermissionsListMailboxPermissionsRequest request request  beforeClientExecutionrequestreturn executeListMailboxPermissionsrequest
public ConditionalFormattingTable(RecordStream rs) {while (rs.peekNextRecord() instanceof CFHeaderBase) {_cfHeaders.add(CFRecordsAggregate.createCFAggregate(rs));}},public ConditionalFormattingTableRecordStream rs while rspeekNextRecord instanceof CFHeaderBase cfHeadersaddCFRecordsAggregatecreateCFAggregaters
"public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final int byte0 = blocks[blocksOffset++] & 0xFF;final int byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 4) | (byte1 >>> 4);final int byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 8) | byte2;}}",public void decodebyte blocks int blocksOffset int values int valuesOffset int iterations for int i  0 i  iterations i final int byte0  blocksblocksOffset  0xFFfinal int byte1  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  4  byte1  4final int byte2  blocksblocksOffset  0xFFvaluesvaluesOffset  byte1  15  8  byte2
"public Map<String, Ref> getTags() {try {return getRefDatabase().getRefs(Constants.R_TAGS);} catch (IOException e) {throw new UncheckedIOException(e);}}",public MapString Ref getTags try return getRefDatabasegetRefsConstantsRTAGS catch IOException e throw new UncheckedIOExceptione
"public ComposedQuery(List<SrndQuery> qs, boolean operatorInfix, String opName) {recompose(qs);this.operatorInfix = operatorInfix;this.opName = opName;}",public ComposedQueryListSrndQuery qs boolean operatorInfix String opName recomposeqsthisoperatorInfix  operatorInfixthisopName  opName
public TestRoleResult testRole(TestRoleRequest request) {request = beforeClientExecution(request);return executeTestRole(request);},public TestRoleResult testRoleTestRoleRequest request request  beforeClientExecutionrequestreturn executeTestRolerequest
"public String toString() {final StringBuilder r = new StringBuilder();r.append(""("");for (int i = 0; i < subfilters.length; i++) {if (i > 0)r.append("" AND "");r.append(subfilters[i].toString());}r.append("")"");return r.toString();}",public String toString final StringBuilder r  new StringBuilderrappendfor int i  0 i  subfilterslength i if i  0rappend AND rappendsubfiltersitoStringrappendreturn rtoString
public ModifyVpcAttributeResult modifyVpcAttribute(ModifyVpcAttributeRequest request) {request = beforeClientExecution(request);return executeModifyVpcAttribute(request);},public ModifyVpcAttributeResult modifyVpcAttributeModifyVpcAttributeRequest request request  beforeClientExecutionrequestreturn executeModifyVpcAttributerequest
public void seekExact(long ord) throws IOException {throw new UnsupportedOperationException();},public void seekExactlong ord throws IOException throw new UnsupportedOperationException
"public ArabicNormalizationFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public ArabicNormalizationFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public boolean equals(Object obj) {if (!(obj instanceof BookSheetKey)) {return false;}BookSheetKey other = (BookSheetKey) obj;return _bookIndex == other._bookIndex && _sheetIndex == other._sheetIndex;},public boolean equalsObject obj if obj instanceof BookSheetKey return falseBookSheetKey other  BookSheetKey objreturn bookIndex  otherbookIndex  sheetIndex  othersheetIndex
"public TermQuery(Term t, TermStates states) {assert states != null;term = Objects.requireNonNull(t);perReaderTermState = Objects.requireNonNull(states);}",public TermQueryTerm t TermStates states assert states  nullterm  ObjectsrequireNonNulltperReaderTermState  ObjectsrequireNonNullstates
public GetClusterCredentialsResult getClusterCredentials(GetClusterCredentialsRequest request) {request = beforeClientExecution(request);return executeGetClusterCredentials(request);},public GetClusterCredentialsResult getClusterCredentialsGetClusterCredentialsRequest request request  beforeClientExecutionrequestreturn executeGetClusterCredentialsrequest
public boolean equals(Object other) {return (getClass() == other.getClass()) && this.equalsSameType(other);},public boolean equalsObject other return getClass  othergetClass  thisequalsSameTypeother
"public Item clone() {return new Item(parent, child);}",public Item clone return new Itemparent child
public UpdateClusterResult updateCluster(UpdateClusterRequest request) {request = beforeClientExecution(request);return executeUpdateCluster(request);},public UpdateClusterResult updateClusterUpdateClusterRequest request request  beforeClientExecutionrequestreturn executeUpdateClusterrequest
public E get(int index) {synchronized (mutex) {return delegate().get(index);}},public E getint index synchronized mutex return delegategetindex
public LogCommand setMaxCount(int maxCount) {checkCallable();this.maxCount = maxCount;return this;},public LogCommand setMaxCountint maxCount checkCallablethismaxCount  maxCountreturn this
public GetInsightRuleReportResult getInsightRuleReport(GetInsightRuleReportRequest request) {request = beforeClientExecution(request);return executeGetInsightRuleReport(request);},public GetInsightRuleReportResult getInsightRuleReportGetInsightRuleReportRequest request request  beforeClientExecutionrequestreturn executeGetInsightRuleReportrequest
"public CommonToken(Token oldToken) {type = oldToken.getType();line = oldToken.getLine();index = oldToken.getTokenIndex();charPositionInLine = oldToken.getCharPositionInLine();channel = oldToken.getChannel();start = oldToken.getStartIndex();stop = oldToken.getStopIndex();if (oldToken instanceof CommonToken) {text = ((CommonToken)oldToken).text;source = ((CommonToken)oldToken).source;}else {text = oldToken.getText();source = new Pair<TokenSource, CharStream>(oldToken.getTokenSource(), oldToken.getInputStream());}}",public CommonTokenToken oldToken type  oldTokengetTypeline  oldTokengetLineindex  oldTokengetTokenIndexcharPositionInLine  oldTokengetCharPositionInLinechannel  oldTokengetChannelstart  oldTokengetStartIndexstop  oldTokengetStopIndexif oldToken instanceof CommonToken text  CommonTokenoldTokentextsource  CommonTokenoldTokensourceelse text  oldTokengetTextsource  new PairTokenSource CharStreamoldTokengetTokenSource oldTokengetInputStream
public ListSolutionsResult listSolutions(ListSolutionsRequest request) {request = beforeClientExecution(request);return executeListSolutions(request);},public ListSolutionsResult listSolutionsListSolutionsRequest request request  beforeClientExecutionrequestreturn executeListSolutionsrequest
public boolean hasPrevious() {return index > from;},public boolean hasPrevious return index  from
public final void end() {if (finalState != null) {restoreState(finalState);}},public final void end if finalState  null restoreStatefinalState
"public DoubleBuffer put(int index, double c) {checkIndex(index);backingArray[offset + index] = c;return this;}",public DoubleBuffer putint index double c checkIndexindexbackingArrayoffset  index  creturn this
"public ThreeWayMerger newMerger(Repository db) {return new ResolveMerger(db, false);}",public ThreeWayMerger newMergerRepository db return new ResolveMergerdb false
"public static long pop_union(long[] arr1, long[] arr2, int wordOffset, int numWords) {long popCount = 0;for (int i = wordOffset, end = wordOffset + numWords; i < end; ++i) {popCount += Long.bitCount(arr1[i] | arr2[i]);}return popCount;}",public static long popunionlong arr1 long arr2 int wordOffset int numWords long popCount  0for int i  wordOffset end  wordOffset  numWords i  end i popCount  LongbitCountarr1i  arr2ireturn popCount
public LongBuffer put(long c) {if (position == limit) {throw new BufferOverflowException();}backingArray[offset + position++] = c;return this;},public LongBuffer putlong c if position  limit throw new BufferOverflowExceptionbackingArrayoffset  position  creturn this
public ConstValueSource(float constant) {this.constant = constant;this.dv = constant;},public ConstValueSourcefloat constant thisconstant  constantthisdv  constant
public boolean matches(char c) {return punctCharacters.indexOf(c) != -1;},public boolean matcheschar c return punctCharactersindexOfc  1
"public FlushInfo(int numDocs, long estimatedSegmentSize) {this.numDocs = numDocs;this.estimatedSegmentSize = estimatedSegmentSize;}",public FlushInfoint numDocs long estimatedSegmentSize thisnumDocs  numDocsthisestimatedSegmentSize  estimatedSegmentSize
"public void print(char[] chars) {print(new String(chars, 0, chars.length));}",public void printchar chars printnew Stringchars 0 charslength
public E element() {return getFirstImpl();},public E element return getFirstImpl
public ListNodegroupsResult listNodegroups(ListNodegroupsRequest request) {request = beforeClientExecution(request);return executeListNodegroups(request);},public ListNodegroupsResult listNodegroupsListNodegroupsRequest request request  beforeClientExecutionrequestreturn executeListNodegroupsrequest
public PutSkillAuthorizationResult putSkillAuthorization(PutSkillAuthorizationRequest request) {request = beforeClientExecution(request);return executePutSkillAuthorization(request);},public PutSkillAuthorizationResult putSkillAuthorizationPutSkillAuthorizationRequest request request  beforeClientExecutionrequestreturn executePutSkillAuthorizationrequest
public DescribeSourceRegionsResult describeSourceRegions(DescribeSourceRegionsRequest request) {request = beforeClientExecution(request);return executeDescribeSourceRegions(request);},public DescribeSourceRegionsResult describeSourceRegionsDescribeSourceRegionsRequest request request  beforeClientExecutionrequestreturn executeDescribeSourceRegionsrequest
public SplitShardResult splitShard(SplitShardRequest request) {request = beforeClientExecution(request);return executeSplitShard(request);},public SplitShardResult splitShardSplitShardRequest request request  beforeClientExecutionrequestreturn executeSplitShardrequest
"public CreateTableRequest(String tableName, java.util.List<KeySchemaElement> keySchema) {setTableName(tableName);setKeySchema(keySchema);}",public CreateTableRequestString tableName javautilListKeySchemaElement keySchema setTableNametableNamesetKeySchemakeySchema
"public void serialize(LittleEndianOutput out) {out.writeShort(field_1_id);out.writeByte(field_4_text.length());if (is16bit) {out.writeByte(0x01);StringUtil.putUnicodeLE(field_4_text, out);} else {out.writeByte(0x00);StringUtil.putCompressedUnicode(field_4_text, out);}}",public void serializeLittleEndianOutput out outwriteShortfield1idoutwriteBytefield4textlengthif is16bit outwriteByte0x01StringUtilputUnicodeLEfield4text out else outwriteByte0x00StringUtilputCompressedUnicodefield4text out
public UpdateVoiceTemplateResult updateVoiceTemplate(UpdateVoiceTemplateRequest request) {request = beforeClientExecution(request);return executeUpdateVoiceTemplate(request);},public UpdateVoiceTemplateResult updateVoiceTemplateUpdateVoiceTemplateRequest request request  beforeClientExecutionrequestreturn executeUpdateVoiceTemplaterequest
public BookBoolRecord(RecordInputStream in) {field_1_save_link_values = in.readShort();},public BookBoolRecordRecordInputStream in field1savelinkvalues  inreadShort
public final Buffer flip() {limit = position;position = 0;mark = UNSET_MARK;return this;},public final Buffer flip limit  positionposition  0mark  UNSETMARKreturn this
"public IntBuffer get(int[] dst, int dstOffset, int intCount) {Arrays.checkOffsetAndCount(dst.length, dstOffset, intCount);if (intCount > remaining()) {throw new BufferUnderflowException();}for (int i = dstOffset; i < dstOffset + intCount; ++i) {dst[i] = get();}return this;}",public IntBuffer getint dst int dstOffset int intCount ArrayscheckOffsetAndCountdstlength dstOffset intCountif intCount  remaining throw new BufferUnderflowExceptionfor int i  dstOffset i  dstOffset  intCount i dsti  getreturn this
public GroupingSearch setGroupDocsOffset(int groupDocsOffset) {this.groupDocsOffset = groupDocsOffset;return this;},public GroupingSearch setGroupDocsOffsetint groupDocsOffset thisgroupDocsOffset  groupDocsOffsetreturn this
"public Builder() {this(16, 16);}",public Builder this16 16
public String getCommandName() {return command;},public String getCommandName return command
public int getFirstInternalSheetIndexForExtIndex(int extRefIndex) {if (extRefIndex >= _externSheetRecord.getNumOfRefs() || extRefIndex < 0) {return -1;}return _externSheetRecord.getFirstSheetIndexFromRefIndex(extRefIndex);},public int getFirstInternalSheetIndexForExtIndexint extRefIndex if extRefIndex  externSheetRecordgetNumOfRefs  extRefIndex  0 return 1return externSheetRecordgetFirstSheetIndexFromRefIndexextRefIndex
public boolean isExpired() {return this.expiredDate == null || this.expiredDate.after(new Date());},public boolean isExpired return thisexpiredDate  null  thisexpiredDateafternew Date
public ListPolicyAttachmentsResult listPolicyAttachments(ListPolicyAttachmentsRequest request) {request = beforeClientExecution(request);return executeListPolicyAttachments(request);},public ListPolicyAttachmentsResult listPolicyAttachmentsListPolicyAttachmentsRequest request request  beforeClientExecutionrequestreturn executeListPolicyAttachmentsrequest
public double readDouble() {return Double.longBitsToDouble(readLong());},public double readDouble return DoublelongBitsToDoublereadLong
public UpdateLoginProfileRequest(String userName) {setUserName(userName);},public UpdateLoginProfileRequestString userName setUserNameuserName
public String getResultPath() {return resultPath;},public String getResultPath return resultPath
"public DescribeInstanceAttributeRequest(String instanceId, InstanceAttributeName attribute) {setInstanceId(instanceId);setAttribute(attribute.toString());}",public DescribeInstanceAttributeRequestString instanceId InstanceAttributeName attribute setInstanceIdinstanceIdsetAttributeattributetoString
public int previousIndex() {return index - 1;},public int previousIndex return index  1
"public static RevFilter create(RevFilter[] list) {if (list.length == 2)return create(list[0], list[1]);if (list.length < 2)throw new IllegalArgumentException(JGitText.get().atLeastTwoFiltersNeeded);final RevFilter[] subfilters = new RevFilter[list.length];System.arraycopy(list, 0, subfilters, 0, list.length);return new List(subfilters);}",public static RevFilter createRevFilter list if listlength  2return createlist0 list1if listlength  2throw new IllegalArgumentExceptionJGitTextgetatLeastTwoFiltersNeededfinal RevFilter subfilters  new RevFilterlistlengthSystemarraycopylist 0 subfilters 0 listlengthreturn new Listsubfilters
public void reset() {seek(0);},public void reset seek0
public ListResourceRecordSetsRequest(String hostedZoneId) {setHostedZoneId(hostedZoneId);},public ListResourceRecordSetsRequestString hostedZoneId setHostedZoneIdhostedZoneId
public EventBasedExcelExtractor(POIFSFileSystem fs) {this(fs.getRoot());super.setFilesystem(fs);},public EventBasedExcelExtractorPOIFSFileSystem fs thisfsgetRootsupersetFilesystemfs
public ListClustersResult listClusters() {return listClusters(new ListClustersRequest());},public ListClustersResult listClusters return listClustersnew ListClustersRequest
public CreateAddressResult createAddress(CreateAddressRequest request) {request = beforeClientExecution(request);return executeCreateAddress(request);},public CreateAddressResult createAddressCreateAddressRequest request request  beforeClientExecutionrequestreturn executeCreateAddressrequest
"public ListFacePhotosRequest() {super(""CloudPhoto"", ""2017-07-11"", ""ListFacePhotos"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public ListFacePhotosRequest superCloudPhoto 20170711 ListFacePhotos cloudphotosetProtocolProtocolTypeHTTPS
"public String toPrivateASCIIString() {return format(true, true);}",public String toPrivateASCIIString return formattrue true
public BatchGetNamedQueryResult batchGetNamedQuery(BatchGetNamedQueryRequest request) {request = beforeClientExecution(request);return executeBatchGetNamedQuery(request);},public BatchGetNamedQueryResult batchGetNamedQueryBatchGetNamedQueryRequest request request  beforeClientExecutionrequestreturn executeBatchGetNamedQueryrequest
public CreateProfilingGroupResult createProfilingGroup(CreateProfilingGroupRequest request) {request = beforeClientExecution(request);return executeCreateProfilingGroup(request);},public CreateProfilingGroupResult createProfilingGroupCreateProfilingGroupRequest request request  beforeClientExecutionrequestreturn executeCreateProfilingGrouprequest
@Override public String toString() {return Arrays.toString(elements);},Override public String toString return ArraystoStringelements
"public String toString() {String padd = getPadding();StringBuilder sb = new StringBuilder(padd);if (disableCounting) {sb.append('-');}sb.append(getName());if (getRunInBackground()) {sb.append("" &"");int x = getBackgroundDeltaPriority();if (x != 0) {sb.append(x);}}return sb.toString();}",public String toString String padd  getPaddingStringBuilder sb  new StringBuilderpaddif disableCounting sbappendsbappendgetNameif getRunInBackground sbappend int x  getBackgroundDeltaPriorityif x  0 sbappendxreturn sbtoString
public Counter bytesUsed() {return bytesUsed;},public Counter bytesUsed return bytesUsed
public ListStreamingDistributionsResult listStreamingDistributions(ListStreamingDistributionsRequest request) {request = beforeClientExecution(request);return executeListStreamingDistributions(request);},public ListStreamingDistributionsResult listStreamingDistributionsListStreamingDistributionsRequest request request  beforeClientExecutionrequestreturn executeListStreamingDistributionsrequest
"public final void writeInt(int val) throws IOException {Memory.pokeInt(scratch, 0, val, ByteOrder.BIG_ENDIAN);write(scratch, 0, SizeOf.INT);}",public final void writeIntint val throws IOException MemorypokeIntscratch 0 val ByteOrderBIGENDIANwritescratch 0 SizeOfINT
"public static ExpandedDouble fromRawBitsAndExponent(long rawBits, int exp) {return new ExpandedDouble(getFrac(rawBits), exp);}",public static ExpandedDouble fromRawBitsAndExponentlong rawBits int exp return new ExpandedDoublegetFracrawBits exp
public boolean offerFirst(E e) {return addFirstImpl(e);},public boolean offerFirstE e return addFirstImple
"public BlockTermsWriter(TermsIndexWriterBase termsIndexWriter,SegmentWriteState state, PostingsWriterBase postingsWriter)throws IOException {final String termsFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, TERMS_EXTENSION);this.termsIndexWriter = termsIndexWriter;maxDoc = state.segmentInfo.maxDoc();out = state.directory.createOutput(termsFileName, state.context);boolean success = false;try {fieldInfos = state.fieldInfos;CodecUtil.writeIndexHeader(out, CODEC_NAME, VERSION_CURRENT, state.segmentInfo.getId(), state.segmentSuffix);currentField = null;this.postingsWriter = postingsWriter;postingsWriter.init(out, state); success = true;} finally {if (!success) {IOUtils.closeWhileHandlingException(out);}}}",public BlockTermsWriterTermsIndexWriterBase termsIndexWriterSegmentWriteState state PostingsWriterBase postingsWriterthrows IOException final String termsFileName  IndexFileNamessegmentFileNamestatesegmentInfoname statesegmentSuffix TERMSEXTENSIONthistermsIndexWriter  termsIndexWritermaxDoc  statesegmentInfomaxDocout  statedirectorycreateOutputtermsFileName statecontextboolean success  falsetry fieldInfos  statefieldInfosCodecUtilwriteIndexHeaderout CODECNAME VERSIONCURRENT statesegmentInfogetId statesegmentSuffixcurrentField  nullthispostingsWriter  postingsWriterpostingsWriterinitout state success  true finally if success IOUtilscloseWhileHandlingExceptionout
"public InstanceGroupModifyConfig(String instanceGroupId, Integer instanceCount) {setInstanceGroupId(instanceGroupId);setInstanceCount(instanceCount);}",public InstanceGroupModifyConfigString instanceGroupId Integer instanceCount setInstanceGroupIdinstanceGroupIdsetInstanceCountinstanceCount
public void collect(int doc) {totalHits++;},public void collectint doc totalHits
public void writeByte(int v) {try {out.write(v);} catch (IOException e) {throw new RuntimeException(e);}},public void writeByteint v try outwritev catch IOException e throw new RuntimeExceptione
"public int serializeComplexPart(byte[] data, int pos) {System.arraycopy(complexData, 0, data, pos, complexData.length);return complexData.length;}",public int serializeComplexPartbyte data int pos SystemarraycopycomplexData 0 data pos complexDatalengthreturn complexDatalength
"public String toString() {return ""<notokenfound/>"";}",public String toString return notokenfound
public DecisionInfo(int decision) {this.decision = decision;},public DecisionInfoint decision thisdecision  decision
"public CFRuleRecord(RecordInputStream in) {setConditionType(in.readByte());setComparisonOperation(in.readByte());int field_3_formula1_len = in.readUShort();int field_4_formula2_len = in.readUShort();readFormatOptions(in);setFormula1(Formula.read(field_3_formula1_len, in));setFormula2(Formula.read(field_4_formula2_len, in));}",public CFRuleRecordRecordInputStream in setConditionTypeinreadBytesetComparisonOperationinreadByteint field3formula1len  inreadUShortint field4formula2len  inreadUShortreadFormatOptionsinsetFormula1Formulareadfield3formula1len insetFormula2Formulareadfield4formula2len in
public GroupMarkerSubRecord() {reserved = EMPTY_BYTE_ARRAY;},public GroupMarkerSubRecord reserved  EMPTYBYTEARRAY
public SegToken filter(SegToken token) {switch (token.wordType) {case WordType.FULLWIDTH_NUMBER:case WordType.FULLWIDTH_STRING: for (int i = 0; i < token.charArray.length; i++) {if (token.charArray[i] >= 0xFF10)token.charArray[i] -= 0xFEE0;if (token.charArray[i] >= 0x0041 && token.charArray[i] <= 0x005A) token.charArray[i] += 0x0020;}break;case WordType.STRING:for (int i = 0; i < token.charArray.length; i++) {if (token.charArray[i] >= 0x0041 && token.charArray[i] <= 0x005A) token.charArray[i] += 0x0020;}break;case WordType.DELIMITER: token.charArray = Utility.COMMON_DELIMITER;break;default:break;}return token;},public SegToken filterSegToken token switch tokenwordType case WordTypeFULLWIDTHNUMBERcase WordTypeFULLWIDTHSTRING for int i  0 i  tokencharArraylength i if tokencharArrayi  0xFF10tokencharArrayi  0xFEE0if tokencharArrayi  0x0041  tokencharArrayi  0x005A tokencharArrayi  0x0020breakcase WordTypeSTRINGfor int i  0 i  tokencharArraylength i if tokencharArrayi  0x0041  tokencharArrayi  0x005A tokencharArrayi  0x0020breakcase WordTypeDELIMITER tokencharArray  UtilityCOMMONDELIMITERbreakdefaultbreakreturn token
public BarRecord(RecordInputStream in) {field_1_barSpace      = in.readShort();field_2_categorySpace = in.readShort();field_3_formatFlags   = in.readShort();},public BarRecordRecordInputStream in field1barSpace       inreadShortfield2categorySpace  inreadShortfield3formatFlags    inreadShort
"public final boolean tryIncRef() {int count;while ((count = refCount.get()) > 0) {if (refCount.compareAndSet(count, count+1)) {return true;}}return false;}",public final boolean tryIncRef int countwhile count  refCountget  0 if refCountcompareAndSetcount count1 return truereturn false
public GetStackPolicyResult getStackPolicy(GetStackPolicyRequest request) {request = beforeClientExecution(request);return executeGetStackPolicy(request);},public GetStackPolicyResult getStackPolicyGetStackPolicyRequest request request  beforeClientExecutionrequestreturn executeGetStackPolicyrequest
public void removeKeywords() {remove1stProperty(PropertyIDMap.PID_KEYWORDS);},public void removeKeywords remove1stPropertyPropertyIDMapPIDKEYWORDS
public boolean follows(TextFragment fragment){return textStartPos == fragment.textEndPos;},public boolean followsTextFragment fragmentreturn textStartPos  fragmenttextEndPos
public DescribeHyperParameterTuningJobResult describeHyperParameterTuningJob(DescribeHyperParameterTuningJobRequest request) {request = beforeClientExecution(request);return executeDescribeHyperParameterTuningJob(request);},public DescribeHyperParameterTuningJobResult describeHyperParameterTuningJobDescribeHyperParameterTuningJobRequest request request  beforeClientExecutionrequestreturn executeDescribeHyperParameterTuningJobrequest
"public CharSequence toQueryString(EscapeQuerySyntax escapeSyntaxParser) {if (getChildren() == null || getChildren().size() == 0)return """";StringBuilder sb = new StringBuilder();String filler = """";for (QueryNode child : getChildren()) {sb.append(filler).append(child.toQueryString(escapeSyntaxParser));filler = "" AND "";}if ((getParent() != null && getParent() instanceof GroupQueryNode)|| isRoot())return sb.toString();else return ""( "" + sb.toString() + "" )"";}",public CharSequence toQueryStringEscapeQuerySyntax escapeSyntaxParser if getChildren  null  getChildrensize  0return StringBuilder sb  new StringBuilderString filler  for QueryNode child  getChildren sbappendfillerappendchildtoQueryStringescapeSyntaxParserfiller   AND if getParent  null  getParent instanceof GroupQueryNode isRootreturn sbtoStringelse return    sbtoString   
"public String toString() {return ""State [entries="" + entries + "", hosts="" + hosts + ""]"";}",public String toString return State entries  entries   hosts  hosts  
public DataFormatRecord(RecordInputStream in) {field_1_pointNumber = in.readShort();field_2_seriesIndex = in.readShort();field_3_seriesNumber = in.readShort();field_4_formatFlags = in.readShort();},public DataFormatRecordRecordInputStream in field1pointNumber  inreadShortfield2seriesIndex  inreadShortfield3seriesNumber  inreadShortfield4formatFlags  inreadShort
public ModifyVpcEndpointServiceConfigurationResult modifyVpcEndpointServiceConfiguration(ModifyVpcEndpointServiceConfigurationRequest request) {request = beforeClientExecution(request);return executeModifyVpcEndpointServiceConfiguration(request);},public ModifyVpcEndpointServiceConfigurationResult modifyVpcEndpointServiceConfigurationModifyVpcEndpointServiceConfigurationRequest request request  beforeClientExecutionrequestreturn executeModifyVpcEndpointServiceConfigurationrequest
public void serialize(LittleEndianOutput out) {out.writeShort(_encodedTokenLen);out.write(_byteEncoding);},public void serializeLittleEndianOutput out outwriteShortencodedTokenLenoutwritebyteEncoding
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {AreaEval aeRange;try {aeRange = convertRangeArg(arg0);} catch (EvaluationException e) {return e.getErrorEval();}return eval(srcRowIndex, srcColumnIndex, arg1, aeRange, aeRange);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1 AreaEval aeRangetry aeRange  convertRangeArgarg0 catch EvaluationException e return egetErrorEvalreturn evalsrcRowIndex srcColumnIndex arg1 aeRange aeRange
"public RecognizeLabelRequest() {super(""visionai-poc"", ""2020-04-08"", ""RecognizeLabel"");setMethod(MethodType.POST);}",public RecognizeLabelRequest supervisionaipoc 20200408 RecognizeLabelsetMethodMethodTypePOST
public ListStackSetsResult listStackSets(ListStackSetsRequest request) {request = beforeClientExecution(request);return executeListStackSets(request);},public ListStackSetsResult listStackSetsListStackSetsRequest request request  beforeClientExecutionrequestreturn executeListStackSetsrequest
public ModifyNetworkInterfaceAttributeResult modifyNetworkInterfaceAttribute(ModifyNetworkInterfaceAttributeRequest request) {request = beforeClientExecution(request);return executeModifyNetworkInterfaceAttribute(request);},public ModifyNetworkInterfaceAttributeResult modifyNetworkInterfaceAttributeModifyNetworkInterfaceAttributeRequest request request  beforeClientExecutionrequestreturn executeModifyNetworkInterfaceAttributerequest
public static RevFilter create(RevFilter a) {return new NotRevFilter(a);},public static RevFilter createRevFilter a return new NotRevFiltera
"public String toString() {String up = parent!=null ? parent.toString() : """";if ( up.length()==0 ) {if ( returnState == EMPTY_RETURN_STATE ) {return ""$"";}return String.valueOf(returnState);}return String.valueOf(returnState)+"" ""+up;}",public String toString String up  parentnull  parenttoString  if  uplength0  if  returnState  EMPTYRETURNSTATE  return return StringvalueOfreturnStatereturn StringvalueOfreturnState up
"public ToParentBlockJoinQuery(Query childQuery, BitSetProducer parentsFilter, ScoreMode scoreMode) {super();this.childQuery = childQuery;this.parentsFilter = parentsFilter;this.scoreMode = scoreMode;}",public ToParentBlockJoinQueryQuery childQuery BitSetProducer parentsFilter ScoreMode scoreMode superthischildQuery  childQuerythisparentsFilter  parentsFilterthisscoreMode  scoreMode
public int previousIndex() {int previous = iterator.previousIndex();if (previous >= start) {return previous - start;}return -1;},public int previousIndex int previous  iteratorpreviousIndexif previous  start return previous  startreturn 1
public String getSourcePath(int idx) {return sourcePaths[idx];},public String getSourcePathint idx return sourcePathsidx
"public DoubleBuffer slice() {return new ReadWriteDoubleArrayBuffer(remaining(), backingArray, offset + position);}",public DoubleBuffer slice return new ReadWriteDoubleArrayBufferremaining backingArray offset  position
public DescribeEvaluationsResult describeEvaluations(DescribeEvaluationsRequest request) {request = beforeClientExecution(request);return executeDescribeEvaluations(request);},public DescribeEvaluationsResult describeEvaluationsDescribeEvaluationsRequest request request  beforeClientExecutionrequestreturn executeDescribeEvaluationsrequest
public int getBigBlockSize() {return bigBlockSize;},public int getBigBlockSize return bigBlockSize
"public static ValueVector createRowVector(TwoDEval tableArray, int relativeRowIndex) {return new RowVector(tableArray, relativeRowIndex);}",public static ValueVector createRowVectorTwoDEval tableArray int relativeRowIndex return new RowVectortableArray relativeRowIndex
"public void setDbcell(int cell, int value){field_5_dbcells.set(cell, value);}",public void setDbcellint cell int valuefield5dbcellssetcell value
public int compareTo(MutableValue other) {Class<? extends MutableValue> c1 = this.getClass();Class<? extends MutableValue> c2 = other.getClass();if (c1 != c2) {int c = c1.hashCode() - c2.hashCode();if (c == 0) {c = c1.getCanonicalName().compareTo(c2.getCanonicalName());}return c;}return compareSameType(other);},public int compareToMutableValue other Class extends MutableValue c1  thisgetClassClass extends MutableValue c2  othergetClassif c1  c2 int c  c1hashCode  c2hashCodeif c  0 c  c1getCanonicalNamecompareToc2getCanonicalNamereturn creturn compareSameTypeother
public StartSpeechSynthesisTaskResult startSpeechSynthesisTask(StartSpeechSynthesisTaskRequest request) {request = beforeClientExecution(request);return executeStartSpeechSynthesisTask(request);},public StartSpeechSynthesisTaskResult startSpeechSynthesisTaskStartSpeechSynthesisTaskRequest request request  beforeClientExecutionrequestreturn executeStartSpeechSynthesisTaskrequest
public void removeParseListeners() {_parseListeners = null;},public void removeParseListeners parseListeners  null
public ListIdentityPoolsResult listIdentityPools(ListIdentityPoolsRequest request) {request = beforeClientExecution(request);return executeListIdentityPools(request);},public ListIdentityPoolsResult listIdentityPoolsListIdentityPoolsRequest request request  beforeClientExecutionrequestreturn executeListIdentityPoolsrequest
"public String toString(){return text + '(' + startOffset + ',' + endOffset + ',' + position + ')';}",public String toStringreturn text    startOffset    endOffset    position  
public void setWrapIfNotCachingTokenFilter(boolean wrap) {this.wrapToCaching = wrap;},public void setWrapIfNotCachingTokenFilterboolean wrap thiswrapToCaching  wrap
public void onChange(boolean selfChange) {mCursor.requery();},public void onChangeboolean selfChange mCursorrequery
public DeleteRuleResult deleteRule(DeleteRuleRequest request) {request = beforeClientExecution(request);return executeDeleteRule(request);},public DeleteRuleResult deleteRuleDeleteRuleRequest request request  beforeClientExecutionrequestreturn executeDeleteRulerequest
public void serialize(LittleEndianOutput out) {out.writeByte(getAddMenuCount());out.writeByte(getDelMenuCount());},public void serializeLittleEndianOutput out outwriteBytegetAddMenuCountoutwriteBytegetDelMenuCount
public String getPattern() {return pattern;},public String getPattern return pattern
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append( ""[BottomMargin]\n"" );buffer.append( ""    .margin               = "" ).append( "" ("" ).append( getMargin() ).append( "" )\n"" );buffer.append( ""[/BottomMargin]\n"" );return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappend BottomMarginn bufferappend     margin                 append   append getMargin append  n bufferappend BottomMarginn return buffertoString
"public final void getText(CharTermAttribute t) {t.copyBuffer(zzBuffer, zzStartRead, zzMarkedPos-zzStartRead);}",public final void getTextCharTermAttribute t tcopyBufferzzBuffer zzStartRead zzMarkedPoszzStartRead
"public LinkedList() {voidLink = new Link<E>(null, null, null);voidLink.previous = voidLink;voidLink.next = voidLink;}",public LinkedList voidLink  new LinkEnull null nullvoidLinkprevious  voidLinkvoidLinknext  voidLink
public SnapshotCopyGrant createSnapshotCopyGrant(CreateSnapshotCopyGrantRequest request) {request = beforeClientExecution(request);return executeCreateSnapshotCopyGrant(request);},public SnapshotCopyGrant createSnapshotCopyGrantCreateSnapshotCopyGrantRequest request request  beforeClientExecutionrequestreturn executeCreateSnapshotCopyGrantrequest
public static int getSingleViableAlt(Collection<BitSet> altsets) {BitSet viableAlts = new BitSet();for (BitSet alts : altsets) {int minAlt = alts.nextSetBit(0);viableAlts.set(minAlt);if ( viableAlts.cardinality()>1 ) { return ATN.INVALID_ALT_NUMBER;}}return viableAlts.nextSetBit(0);},public static int getSingleViableAltCollectionBitSet altsets BitSet viableAlts  new BitSetfor BitSet alts  altsets int minAlt  altsnextSetBit0viableAltssetminAltif  viableAltscardinality1   return ATNINVALIDALTNUMBERreturn viableAltsnextSetBit0
public Builder() {this.similarity = new BM25Similarity();},public Builder thissimilarity  new BM25Similarity
public List<Ref> getRevertedRefs() {return revertedRefs;},public ListRef getRevertedRefs return revertedRefs
public DetachPolicyResult detachPolicy(DetachPolicyRequest request) {request = beforeClientExecution(request);return executeDetachPolicy(request);},public DetachPolicyResult detachPolicyDetachPolicyRequest request request  beforeClientExecutionrequestreturn executeDetachPolicyrequest
public final void writeUTF(String str) throws IOException {write(ModifiedUtf8.encode(str));},public final void writeUTFString str throws IOException writeModifiedUtf8encodestr
public DeleteBusinessReportScheduleResult deleteBusinessReportSchedule(DeleteBusinessReportScheduleRequest request) {request = beforeClientExecution(request);return executeDeleteBusinessReportSchedule(request);},public DeleteBusinessReportScheduleResult deleteBusinessReportScheduleDeleteBusinessReportScheduleRequest request request  beforeClientExecutionrequestreturn executeDeleteBusinessReportSchedulerequest
"public JapanesePartOfSpeechStopFilterFactory(Map<String,String> args) {super(args);stopTagFiles = get(args, ""tags"");if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public JapanesePartOfSpeechStopFilterFactoryMapStringString args superargsstopTagFiles  getargs tagsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public SetVaultNotificationsResult setVaultNotifications(SetVaultNotificationsRequest request) {request = beforeClientExecution(request);return executeSetVaultNotifications(request);},public SetVaultNotificationsResult setVaultNotificationsSetVaultNotificationsRequest request request  beforeClientExecutionrequestreturn executeSetVaultNotificationsrequest
"public void writeBytes(byte[] b, int offset, int length) {assert pos + length <= limit;System.arraycopy(b, offset, bytes, pos, length);pos += length;}",public void writeBytesbyte b int offset int length assert pos  length  limitSystemarraycopyb offset bytes pos lengthpos  length
public UpdateLedgerResult updateLedger(UpdateLedgerRequest request) {request = beforeClientExecution(request);return executeUpdateLedger(request);},public UpdateLedgerResult updateLedgerUpdateLedgerRequest request request  beforeClientExecutionrequestreturn executeUpdateLedgerrequest
public BatchDetectDominantLanguageResult batchDetectDominantLanguage(BatchDetectDominantLanguageRequest request) {request = beforeClientExecution(request);return executeBatchDetectDominantLanguage(request);},public BatchDetectDominantLanguageResult batchDetectDominantLanguageBatchDetectDominantLanguageRequest request request  beforeClientExecutionrequestreturn executeBatchDetectDominantLanguagerequest
public void pollForUpdates() {assert isMainThread();doUpdates();},public void pollForUpdates assert isMainThreaddoUpdates
public int getAltNumber() { return ATN.INVALID_ALT_NUMBER; },public int getAltNumber  return ATNINVALIDALTNUMBER 
"public String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getName()).append("" ["");sb.append(""]"");return sb.toString();}",public String toString StringBuilder sb  new StringBuilder64sbappendgetClassgetNameappend sbappendreturn sbtoString
public int getTimeout() {return timeout;},public int getTimeout return timeout
public boolean canReuse(IndexInput in) {return in == inStart;},public boolean canReuseIndexInput in return in  inStart
public DescribeMetricFiltersRequest(String logGroupName) {setLogGroupName(logGroupName);},public DescribeMetricFiltersRequestString logGroupName setLogGroupNamelogGroupName
"public final void write(char[] b) {write(b,0,b.length);}",public final void writechar b writeb0blength
"public void trimToSize() {if (count < value.length) {char[] newValue = new char[count];System.arraycopy(value, 0, newValue, 0, count);value = newValue;shared = false;}}",public void trimToSize if count  valuelength char newValue  new charcountSystemarraycopyvalue 0 newValue 0 countvalue  newValueshared  false
public ListTransformJobsResult listTransformJobs(ListTransformJobsRequest request) {request = beforeClientExecution(request);return executeListTransformJobs(request);},public ListTransformJobsResult listTransformJobsListTransformJobsRequest request request  beforeClientExecutionrequestreturn executeListTransformJobsrequest
"public EvaluationName getName(NamePtg namePtg) {int ix = namePtg.getIndex();return new Name(_iBook.getNameRecord(ix), ix);}",public EvaluationName getNameNamePtg namePtg int ix  namePtggetIndexreturn new NameiBookgetNameRecordix ix
public StashCreateCommand setIndexMessage(String message) {indexMessage = message;return this;},public StashCreateCommand setIndexMessageString message indexMessage  messagereturn this
public HSSFPalette getCustomPalette(){return new HSSFPalette(workbook.getCustomPalette());},public HSSFPalette getCustomPalettereturn new HSSFPaletteworkbookgetCustomPalette
public DeregisterTaskDefinitionResult deregisterTaskDefinition(DeregisterTaskDefinitionRequest request) {request = beforeClientExecution(request);return executeDeregisterTaskDefinition(request);},public DeregisterTaskDefinitionResult deregisterTaskDefinitionDeregisterTaskDefinitionRequest request request  beforeClientExecutionrequestreturn executeDeregisterTaskDefinitionrequest
public String pattern() {return pattern;},public String pattern return pattern
public void setThreads(int threads) {this.threads = threads;},public void setThreadsint threads thisthreads  threads
"public void execute(ReceivePack rp) {try {String expTarget = getOldSymref();boolean detach = getNewSymref() != null|| (type == Type.DELETE && expTarget != null);RefUpdate ru = rp.getRepository().updateRef(getRefName(), detach);if (expTarget != null) {if (!ru.getRef().isSymbolic() || !ru.getRef().getTarget().getName().equals(expTarget)) {setResult(Result.LOCK_FAILURE);return;}}ru.setRefLogIdent(rp.getRefLogIdent());ru.setRefLogMessage(refLogMessage, refLogIncludeResult);switch (getType()) {case DELETE:if (!ObjectId.zeroId().equals(getOldId())) {ru.setExpectedOldObjectId(getOldId());}ru.setForceUpdate(true);setResult(ru.delete(rp.getRevWalk()));break;case CREATE:case UPDATE:case UPDATE_NONFASTFORWARD:ru.setForceUpdate(rp.isAllowNonFastForwards());ru.setExpectedOldObjectId(getOldId());ru.setRefLogMessage(""push"", true); if (getNewSymref() != null) {setResult(ru.link(getNewSymref()));} else {ru.setNewObjectId(getNewId());setResult(ru.update(rp.getRevWalk()));}break;}} catch (IOException err) {reject(err);}}",public void executeReceivePack rp try String expTarget  getOldSymrefboolean detach  getNewSymref  null type  TypeDELETE  expTarget  nullRefUpdate ru  rpgetRepositoryupdateRefgetRefName detachif expTarget  null if rugetRefisSymbolic  rugetRefgetTargetgetNameequalsexpTarget setResultResultLOCKFAILUREreturnrusetRefLogIdentrpgetRefLogIdentrusetRefLogMessagerefLogMessage refLogIncludeResultswitch getType case DELETEif ObjectIdzeroIdequalsgetOldId rusetExpectedOldObjectIdgetOldIdrusetForceUpdatetruesetResultrudeleterpgetRevWalkbreakcase CREATEcase UPDATEcase UPDATENONFASTFORWARDrusetForceUpdaterpisAllowNonFastForwardsrusetExpectedOldObjectIdgetOldIdrusetRefLogMessagepush true if getNewSymref  null setResultrulinkgetNewSymref else rusetNewObjectIdgetNewIdsetResultruupdaterpgetRevWalkbreak catch IOException err rejecterr
public GetEbsDefaultKmsKeyIdResult getEbsDefaultKmsKeyId(GetEbsDefaultKmsKeyIdRequest request) {request = beforeClientExecution(request);return executeGetEbsDefaultKmsKeyId(request);},public GetEbsDefaultKmsKeyIdResult getEbsDefaultKmsKeyIdGetEbsDefaultKmsKeyIdRequest request request  beforeClientExecutionrequestreturn executeGetEbsDefaultKmsKeyIdrequest
"public String toString() {return ""MultiDocsAndPositionsEnum("" + Arrays.toString(getSubs()) + "")"";}",public String toString return MultiDocsAndPositionsEnum  ArraystoStringgetSubs  
public DeleteCacheParameterGroupRequest(String cacheParameterGroupName) {setCacheParameterGroupName(cacheParameterGroupName);},public DeleteCacheParameterGroupRequestString cacheParameterGroupName setCacheParameterGroupNamecacheParameterGroupName
"public NavigableMap<K, V> headMap(K to, boolean inclusive) {Bound toBound = inclusive ? INCLUSIVE : EXCLUSIVE;return subMap(null, NO_BOUND, to, toBound);}",public NavigableMapK V headMapK to boolean inclusive Bound toBound  inclusive  INCLUSIVE  EXCLUSIVEreturn subMapnull NOBOUND to toBound
public OutputStream getOutputStream() {return rawOut;},public OutputStream getOutputStream return rawOut
public Boolean booleanValue(String key) {String value = responseMap.get(key);if (null == value || 0 == value.length()) {return null;}return Boolean.valueOf(responseMap.get(key));},public Boolean booleanValueString key String value  responseMapgetkeyif null  value  0  valuelength return nullreturn BooleanvalueOfresponseMapgetkey
"public ATN getATNWithBypassAlts() {String serializedAtn = getSerializedATN();if (serializedAtn == null) {throw new UnsupportedOperationException(""The current parser does not support an ATN with bypass alternatives."");}synchronized (bypassAltsAtnCache) {ATN result = bypassAltsAtnCache.get(serializedAtn);if (result == null) {ATNDeserializationOptions deserializationOptions = new ATNDeserializationOptions();deserializationOptions.setGenerateRuleBypassTransitions(true);result = new ATNDeserializer(deserializationOptions).deserialize(serializedAtn.toCharArray());bypassAltsAtnCache.put(serializedAtn, result);}return result;}}",public ATN getATNWithBypassAlts String serializedAtn  getSerializedATNif serializedAtn  null throw new UnsupportedOperationExceptionThe current parser does not support an ATN with bypass alternativessynchronized bypassAltsAtnCache ATN result  bypassAltsAtnCachegetserializedAtnif result  null ATNDeserializationOptions deserializationOptions  new ATNDeserializationOptionsdeserializationOptionssetGenerateRuleBypassTransitionstrueresult  new ATNDeserializerdeserializationOptionsdeserializeserializedAtntoCharArraybypassAltsAtnCacheputserializedAtn resultreturn result
"public GetDownloadUrlRequest() {super(""CloudPhoto"", ""2017-07-11"", ""GetDownloadUrl"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public GetDownloadUrlRequest superCloudPhoto 20170711 GetDownloadUrl cloudphotosetProtocolProtocolTypeHTTPS
public int getCRC() {return crc;},public int getCRC return crc
public boolean addEscherRecord(EscherRecord element){return escherRecords.add( element );},public boolean addEscherRecordEscherRecord elementreturn escherRecordsadd element 
"public CharBuffer put(String src, int start, int end) {throw new ReadOnlyBufferException();}",public CharBuffer putString src int start int end throw new ReadOnlyBufferException
public ModifyWorkspaceStateResult modifyWorkspaceState(ModifyWorkspaceStateRequest request) {request = beforeClientExecution(request);return executeModifyWorkspaceState(request);},public ModifyWorkspaceStateResult modifyWorkspaceStateModifyWorkspaceStateRequest request request  beforeClientExecutionrequestreturn executeModifyWorkspaceStaterequest
"public ICUTransformFilter(TokenStream input, Transliterator transform) {super(input);this.transform = transform;if (transform.getFilter() == null && transform instanceof com.ibm.icu.text.RuleBasedTransliterator) {final UnicodeSet sourceSet = transform.getSourceSet();if (sourceSet != null && !sourceSet.isEmpty())transform.setFilter(sourceSet);}}",public ICUTransformFilterTokenStream input Transliterator transform superinputthistransform  transformif transformgetFilter  null  transform instanceof comibmicutextRuleBasedTransliterator final UnicodeSet sourceSet  transformgetSourceSetif sourceSet  null  sourceSetisEmptytransformsetFiltersourceSet
public StopGameSessionPlacementResult stopGameSessionPlacement(StopGameSessionPlacementRequest request) {request = beforeClientExecution(request);return executeStopGameSessionPlacement(request);},public StopGameSessionPlacementResult stopGameSessionPlacementStopGameSessionPlacementRequest request request  beforeClientExecutionrequestreturn executeStopGameSessionPlacementrequest
public ObjectId getDeltaBase() {return null;},public ObjectId getDeltaBase return null
public RefModeRecord clone() {return copy();},public RefModeRecord clone return copy
public boolean addURI(URIish toAdd) {if (uris.contains(toAdd))return false;return uris.add(toAdd);},public boolean addURIURIish toAdd if uriscontainstoAddreturn falsereturn urisaddtoAdd
public FileMode getOldMode() {return getOldMode(0);},public FileMode getOldMode return getOldMode0
public Collection<RemoteRefUpdate> getRemoteUpdates() {return Collections.unmodifiableCollection(remoteUpdates.values());},public CollectionRemoteRefUpdate getRemoteUpdates return CollectionsunmodifiableCollectionremoteUpdatesvalues
"public String toString() {StringBuilder sb = new StringBuilder();sb.append(getClass().getName());sb.append("" ["");String ws = String.valueOf(_wholePart);sb.append(ws.charAt(0));sb.append('.');sb.append(ws.substring(1));sb.append(' ');sb.append(getFractionalDigits());sb.append(""E"");sb.append(getDecimalExponent());sb.append(""]"");return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappendgetClassgetNamesbappend String ws  StringvalueOfwholePartsbappendwscharAt0sbappendsbappendwssubstring1sbappend sbappendgetFractionalDigitssbappendEsbappendgetDecimalExponentsbappendreturn sbtoString
public CreateCollectionResult createCollection(CreateCollectionRequest request) {request = beforeClientExecution(request);return executeCreateCollection(request);},public CreateCollectionResult createCollectionCreateCollectionRequest request request  beforeClientExecutionrequestreturn executeCreateCollectionrequest
public ChangeMessageVisibilityBatchResult changeMessageVisibilityBatch(ChangeMessageVisibilityBatchRequest request) {request = beforeClientExecution(request);return executeChangeMessageVisibilityBatch(request);},public ChangeMessageVisibilityBatchResult changeMessageVisibilityBatchChangeMessageVisibilityBatchRequest request request  beforeClientExecutionrequestreturn executeChangeMessageVisibilityBatchrequest
"public static int[] copyOfRange(int[] original, int start, int end) {if (start > end) {throw new IllegalArgumentException();}int originalLength = original.length;if (start < 0 || start > originalLength) {throw new ArrayIndexOutOfBoundsException();}int resultLength = end - start;int copyLength = Math.min(resultLength, originalLength - start);int[] result = new int[resultLength];System.arraycopy(original, start, result, 0, copyLength);return result;}",public static int copyOfRangeint original int start int end if start  end throw new IllegalArgumentExceptionint originalLength  originallengthif start  0  start  originalLength throw new ArrayIndexOutOfBoundsExceptionint resultLength  end  startint copyLength  MathminresultLength originalLength  startint result  new intresultLengthSystemarraycopyoriginal start result 0 copyLengthreturn result
public static void setInstance(SshSessionFactory newFactory) {if (newFactory != null) {INSTANCE = newFactory;} else {INSTANCE = loadSshSessionFactory();}},public static void setInstanceSshSessionFactory newFactory if newFactory  null INSTANCE  newFactory else INSTANCE  loadSshSessionFactory
"public GetRepoSyncTaskListRequest() {super(""cr"", ""2016-06-07"", ""GetRepoSyncTaskList"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/syncTasks"");setMethod(MethodType.GET);}",public GetRepoSyncTaskListRequest supercr 20160607 GetRepoSyncTaskList crsetUriPatternreposRepoNamespaceRepoNamesyncTaskssetMethodMethodTypeGET
"public RunInstancesRequest(String imageId, Integer minCount, Integer maxCount) {setImageId(imageId);setMinCount(minCount);setMaxCount(maxCount);}",public RunInstancesRequestString imageId Integer minCount Integer maxCount setImageIdimageIdsetMinCountminCountsetMaxCountmaxCount
public DeleteCodeRepositoryResult deleteCodeRepository(DeleteCodeRepositoryRequest request) {request = beforeClientExecution(request);return executeDeleteCodeRepository(request);},public DeleteCodeRepositoryResult deleteCodeRepositoryDeleteCodeRepositoryRequest request request  beforeClientExecutionrequestreturn executeDeleteCodeRepositoryrequest
"public void fill(int fromIndex, int toIndex, long val) {assert fromIndex >= 0;assert fromIndex <= toIndex;assert PackedInts.unsignedBitsRequired(val) <= bitsPerValue;final int valuesPerBlock = 64 / bitsPerValue;if (toIndex - fromIndex <= valuesPerBlock << 1) {super.fill(fromIndex, toIndex, val);return;}int fromOffsetInBlock = fromIndex % valuesPerBlock;if (fromOffsetInBlock != 0) {for (int i = fromOffsetInBlock; i < valuesPerBlock; ++i) {set(fromIndex++, val);}assert fromIndex % valuesPerBlock == 0;}final int fromBlock = fromIndex / valuesPerBlock;final int toBlock = toIndex / valuesPerBlock;assert fromBlock * valuesPerBlock == fromIndex;long blockValue = 0L;for (int i = 0; i < valuesPerBlock; ++i) {blockValue = blockValue | (val << (i * bitsPerValue));}Arrays.fill(blocks, fromBlock, toBlock, blockValue);for (int i = valuesPerBlock * toBlock; i < toIndex; ++i) {set(i, val);}}",public void fillint fromIndex int toIndex long val assert fromIndex  0assert fromIndex  toIndexassert PackedIntsunsignedBitsRequiredval  bitsPerValuefinal int valuesPerBlock  64  bitsPerValueif toIndex  fromIndex  valuesPerBlock  1 superfillfromIndex toIndex valreturnint fromOffsetInBlock  fromIndex  valuesPerBlockif fromOffsetInBlock  0 for int i  fromOffsetInBlock i  valuesPerBlock i setfromIndex valassert fromIndex  valuesPerBlock  0final int fromBlock  fromIndex  valuesPerBlockfinal int toBlock  toIndex  valuesPerBlockassert fromBlock  valuesPerBlock  fromIndexlong blockValue  0Lfor int i  0 i  valuesPerBlock i blockValue  blockValue  val  i  bitsPerValueArraysfillblocks fromBlock toBlock blockValuefor int i  valuesPerBlock  toBlock i  toIndex i seti val
public void close() {str = null;},public void close str  null
public ListDomainNamesResult listDomainNames() {return listDomainNames(new ListDomainNamesRequest());},public ListDomainNamesResult listDomainNames return listDomainNamesnew ListDomainNamesRequest
"public AbortMultipartUploadRequest(String accountId, String vaultName, String uploadId) {setAccountId(accountId);setVaultName(vaultName);setUploadId(uploadId);}",public AbortMultipartUploadRequestString accountId String vaultName String uploadId setAccountIdaccountIdsetVaultNamevaultNamesetUploadIduploadId
public RevCommit getNewHead() {return newHead;},public RevCommit getNewHead return newHead
public long get(int index) {final int o = index >>> 5;final int b = index & 31;final int shift = b << 1;return (blocks[o] >>> shift) & 3L;},public long getint index final int o  index  5final int b  index  31final int shift  b  1return blockso  shift  3L
public UpdateContainerInstancesStateResult updateContainerInstancesState(UpdateContainerInstancesStateRequest request) {request = beforeClientExecution(request);return executeUpdateContainerInstancesState(request);},public UpdateContainerInstancesStateResult updateContainerInstancesStateUpdateContainerInstancesStateRequest request request  beforeClientExecutionrequestreturn executeUpdateContainerInstancesStaterequest
public GetExternalModelsResult getExternalModels(GetExternalModelsRequest request) {request = beforeClientExecution(request);return executeGetExternalModels(request);},public GetExternalModelsResult getExternalModelsGetExternalModelsRequest request request  beforeClientExecutionrequestreturn executeGetExternalModelsrequest
public GetFaceDetectionResult getFaceDetection(GetFaceDetectionRequest request) {request = beforeClientExecution(request);return executeGetFaceDetection(request);},public GetFaceDetectionResult getFaceDetectionGetFaceDetectionRequest request request  beforeClientExecutionrequestreturn executeGetFaceDetectionrequest
public void delete() {synchronized (SnapshotDeletionPolicy.this) {if (!refCounts.containsKey(cp.getGeneration())) {cp.delete();}}},public void delete synchronized SnapshotDeletionPolicythis if refCountscontainsKeycpgetGeneration cpdelete
"public void decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = blocks[blocksOffset++];for (int shift = 56; shift >= 0; shift -= 8) {values[valuesOffset++] = (int) ((block >>> shift) & 255);}}}",public void decodelong blocks int blocksOffset int values int valuesOffset int iterations for int i  0 i  iterations i final long block  blocksblocksOffsetfor int shift  56 shift  0 shift  8 valuesvaluesOffset  int block  shift  255
public Iterator<E> descendingIterator() {return new ReverseLinkIterator<E>(this);},public IteratorE descendingIterator return new ReverseLinkIteratorEthis
public CredentialsBackupCompatibilityAdaptor(AlibabaCloudCredentialsProvider provider) {this.provider = provider;},public CredentialsBackupCompatibilityAdaptorAlibabaCloudCredentialsProvider provider thisprovider  provider
public DescribeDBClusterSnapshotsResult describeDBClusterSnapshots(DescribeDBClusterSnapshotsRequest request) {request = beforeClientExecution(request);return executeDescribeDBClusterSnapshots(request);},public DescribeDBClusterSnapshotsResult describeDBClusterSnapshotsDescribeDBClusterSnapshotsRequest request request  beforeClientExecutionrequestreturn executeDescribeDBClusterSnapshotsrequest
"public FontRecord getFontRecordAt(int idx) {int index = idx;if (index > 4) {index -= 1;   }if (index > (numfonts - 1)) {throw new ArrayIndexOutOfBoundsException(""There are only "" + numfonts + "" font records, but you asked for index "" + idx);}return ( FontRecord ) records.get((records.getFontpos() - (numfonts - 1)) + index);}",public FontRecord getFontRecordAtint idx int index  idxif index  4 index  1   if index  numfonts  1 throw new ArrayIndexOutOfBoundsExceptionThere are only   numfonts   font records but you asked for index   idxreturn  FontRecord  recordsgetrecordsgetFontpos  numfonts  1  index
"public final ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {if (args.length != 2) {return ErrorEval.VALUE_INVALID;}return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1]);}",public final ValueEval evaluateValueEval args int srcRowIndex int srcColumnIndex if argslength  2 return ErrorEvalVALUEINVALIDreturn evaluatesrcRowIndex srcColumnIndex args0 args1
public DescribeCustomerGatewaysResult describeCustomerGateways() {return describeCustomerGateways(new DescribeCustomerGatewaysRequest());},public DescribeCustomerGatewaysResult describeCustomerGateways return describeCustomerGatewaysnew DescribeCustomerGatewaysRequest
"public CreateSubnetRequest(String vpcId, String cidrBlock) {setVpcId(vpcId);setCidrBlock(cidrBlock);}",public CreateSubnetRequestString vpcId String cidrBlock setVpcIdvpcIdsetCidrBlockcidrBlock
public StempelStemmer(Trie stemmer) {this.stemmer = stemmer;},public StempelStemmerTrie stemmer thisstemmer  stemmer
public NLPNERTaggerOp(TokenNameFinderModel model) {this.nameFinder = new NameFinderME(model);},public NLPNERTaggerOpTokenNameFinderModel model thisnameFinder  new NameFinderMEmodel
"public TreeFilter clone() {return new FollowFilter(path.clone(), cfg);}",public TreeFilter clone return new FollowFilterpathclone cfg
"public QueryAddUserInfoRequest() {super(""LinkFace"", ""2018-07-20"", ""QueryAddUserInfo"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public QueryAddUserInfoRequest superLinkFace 20180720 QueryAddUserInfosetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
"public boolean include(TreeWalk walker) {DirCacheIterator i = walker.getTree(treeIdx, DirCacheIterator.class);if (i == null)return true;DirCacheEntry e = i.getDirCacheEntry();return e == null || !e.isSkipWorkTree();}",public boolean includeTreeWalk walker DirCacheIterator i  walkergetTreetreeIdx DirCacheIteratorclassif i  nullreturn trueDirCacheEntry e  igetDirCacheEntryreturn e  null  eisSkipWorkTree
"public final CompareResult compareTo(ValueEval other) {if (other == null) {throw new RuntimeException(""compare to value cannot be null"");}if (_targetClass != other.getClass()) {return CompareResult.TYPE_MISMATCH;}return compareSameType(other);}",public final CompareResult compareToValueEval other if other  null throw new RuntimeExceptioncompare to value cannot be nullif targetClass  othergetClass return CompareResultTYPEMISMATCHreturn compareSameTypeother
"public SegmentReadState(SegmentReadState other,String newSegmentSuffix) {this.directory = other.directory;this.segmentInfo = other.segmentInfo;this.fieldInfos = other.fieldInfos;this.context = other.context;this.segmentSuffix = newSegmentSuffix;}",public SegmentReadStateSegmentReadState otherString newSegmentSuffix thisdirectory  otherdirectorythissegmentInfo  othersegmentInfothisfieldInfos  otherfieldInfosthiscontext  othercontextthissegmentSuffix  newSegmentSuffix
public void println(Object obj) {println(String.valueOf(obj));},public void printlnObject obj printlnStringvalueOfobj
public DeleteModelResult deleteModel(DeleteModelRequest request) {request = beforeClientExecution(request);return executeDeleteModel(request);},public DeleteModelResult deleteModelDeleteModelRequest request request  beforeClientExecutionrequestreturn executeDeleteModelrequest
public void setFiles(Collection<String> files) {setFiles = new HashSet<>();addFiles(files);},public void setFilesCollectionString files setFiles  new HashSetaddFilesfiles
public void release() {lItr.release();},public void release lItrrelease
public FloatBuffer asReadOnlyBuffer() {return duplicate();},public FloatBuffer asReadOnlyBuffer return duplicate
"public int get(int key, int valueIfKeyNotFound) {int i = binarySearch(mKeys, 0, mSize, key);if (i < 0) {return valueIfKeyNotFound;} else {return mValues[i];}}",public int getint key int valueIfKeyNotFound int i  binarySearchmKeys 0 mSize keyif i  0 return valueIfKeyNotFound else return mValuesi
"public CharBuffer get(char[] dst) {return get(dst, 0, dst.length);}",public CharBuffer getchar dst return getdst 0 dstlength
"public static String toHex(String value) {return (value == null || value.length() == 0)? ""[]"": toHex(value.getBytes(LocaleUtil.CHARSET_1252));}",public static String toHexString value return value  null  valuelength  0  toHexvaluegetBytesLocaleUtilCHARSET1252
"public String resolveNameXText(NameXPtg n) {return _iBook.resolveNameXText(n.getSheetRefIndex(), n.getNameIndex());}",public String resolveNameXTextNameXPtg n return iBookresolveNameXTextngetSheetRefIndex ngetNameIndex
"public String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getName());sb.append("" ["").append(_representation).append(""]"");return sb.toString();}",public String toString StringBuilder sb  new StringBuilder64sbappendgetClassgetNamesbappend appendrepresentationappendreturn sbtoString
public PutEmailIdentityMailFromAttributesResult putEmailIdentityMailFromAttributes(PutEmailIdentityMailFromAttributesRequest request) {request = beforeClientExecution(request);return executePutEmailIdentityMailFromAttributes(request);},public PutEmailIdentityMailFromAttributesResult putEmailIdentityMailFromAttributesPutEmailIdentityMailFromAttributesRequest request request  beforeClientExecutionrequestreturn executePutEmailIdentityMailFromAttributesrequest
"public RemoveAlbumPhotosRequest() {super(""CloudPhoto"", ""2017-07-11"", ""RemoveAlbumPhotos"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public RemoveAlbumPhotosRequest superCloudPhoto 20170711 RemoveAlbumPhotos cloudphotosetProtocolProtocolTypeHTTPS
public DeleteAttributesResult deleteAttributes(DeleteAttributesRequest request) {request = beforeClientExecution(request);return executeDeleteAttributes(request);},public DeleteAttributesResult deleteAttributesDeleteAttributesRequest request request  beforeClientExecutionrequestreturn executeDeleteAttributesrequest
"public void disableRefLog() {destination.setRefLogMessage("""", false); }",public void disableRefLog destinationsetRefLogMessage false 
public TokenStream create(TokenStream input) {return new GermanLightStemFilter(input);},public TokenStream createTokenStream input return new GermanLightStemFilterinput
public E removeLast() {return removeLastImpl();},public E removeLast return removeLastImpl
public UpdateDomainMetadataResult updateDomainMetadata(UpdateDomainMetadataRequest request) {request = beforeClientExecution(request);return executeUpdateDomainMetadata(request);},public UpdateDomainMetadataResult updateDomainMetadataUpdateDomainMetadataRequest request request  beforeClientExecutionrequestreturn executeUpdateDomainMetadatarequest
public short findNewDrawingGroupId() {return dgg.findNewDrawingGroupId();},public short findNewDrawingGroupId return dggfindNewDrawingGroupId
"public String toString() {return ""FacetEntry{"" +""value="" + value.utf8ToString() +"", count="" + count +'}';}",public String toString return FacetEntry value  valueutf8ToString  count  count 
"public SharedFormulaRecord linkSharedFormulaRecord(CellReference firstCell, FormulaRecordAggregate agg) {SharedFormulaGroup result = findFormulaGroupForCell(firstCell);if(null == result) {throw new RuntimeException(""Failed to find a matching shared formula record"");}result.add(agg);return result.getSFR();}",public SharedFormulaRecord linkSharedFormulaRecordCellReference firstCell FormulaRecordAggregate agg SharedFormulaGroup result  findFormulaGroupForCellfirstCellifnull  result throw new RuntimeExceptionFailed to find a matching shared formula recordresultaddaggreturn resultgetSFR
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeShort(field_1_label_index);out.writeShort(field_2_zero);},public void writeLittleEndianOutput out outwriteBytesid  getPtgClassoutwriteShortfield1labelindexoutwriteShortfield2zero
public Appendable append(char c) {write(c);return this;},public Appendable appendchar c writecreturn this
"public static BigInteger factorial(int n) {if (n == 0 || n < 0) {return BigInteger.ONE;}if (cache.containsKey(n))  {return cache.get(n);}BigInteger result = BigInteger.valueOf(n).multiply(factorial(n - 2));cache.put(n, result);return result;}",public static BigInteger factorialint n if n  0  n  0 return BigIntegerONEif cachecontainsKeyn  return cachegetnBigInteger result  BigIntegervalueOfnmultiplyfactorialn  2cacheputn resultreturn result
"public DelimitedPayloadTokenFilter create(TokenStream input) {return new DelimitedPayloadTokenFilter(input, delimiter, encoder);}",public DelimitedPayloadTokenFilter createTokenStream input return new DelimitedPayloadTokenFilterinput delimiter encoder
"public String toString() {return ""NONE""; }",public String toString return NONE 
public GetAlarmsResult getAlarms(GetAlarmsRequest request) {request = beforeClientExecution(request);return executeGetAlarms(request);},public GetAlarmsResult getAlarmsGetAlarmsRequest request request  beforeClientExecutionrequestreturn executeGetAlarmsrequest
public DeleteDetectorVersionResult deleteDetectorVersion(DeleteDetectorVersionRequest request) {request = beforeClientExecution(request);return executeDeleteDetectorVersion(request);},public DeleteDetectorVersionResult deleteDetectorVersionDeleteDetectorVersionRequest request request  beforeClientExecutionrequestreturn executeDeleteDetectorVersionrequest
"public ExpandedDouble createExpandedDouble() {return new ExpandedDouble(_significand, _binaryExponent);}",public ExpandedDouble createExpandedDouble return new ExpandedDoublesignificand binaryExponent
public CharBuffer duplicate() {ByteBuffer bb = byteBuffer.duplicate().order(byteBuffer.order());CharToByteBufferAdapter buf = new CharToByteBufferAdapter(bb);buf.limit = limit;buf.position = position;buf.mark = mark;return buf;},public CharBuffer duplicate ByteBuffer bb  byteBufferduplicateorderbyteBufferorderCharToByteBufferAdapter buf  new CharToByteBufferAdapterbbbuflimit  limitbufposition  positionbufmark  markreturn buf
public int size() {return Hashtable.this.size();},public int size return Hashtablethissize
"public ResetInstanceAttributeRequest(String instanceId, InstanceAttributeName attribute) {setInstanceId(instanceId);setAttribute(attribute.toString());}",public ResetInstanceAttributeRequestString instanceId InstanceAttributeName attribute setInstanceIdinstanceIdsetAttributeattributetoString
"public final List<FooterLine> getFooterLines() {final byte[] raw = buffer;int ptr = raw.length - 1;while (raw[ptr] == '\n') ptr--;final int msgB = RawParseUtils.commitMessage(raw, 0);final ArrayList<FooterLine> r = new ArrayList<>(4);final Charset enc = guessEncoding();for (;;) {ptr = RawParseUtils.prevLF(raw, ptr);if (ptr <= msgB)break; final int keyStart = ptr + 2;if (raw[keyStart] == '\n')break; final int keyEnd = RawParseUtils.endOfFooterLineKey(raw, keyStart);if (keyEnd < 0)continue; int valStart = keyEnd + 1;while (valStart < raw.length && raw[valStart] == ' ')valStart++;int valEnd = RawParseUtils.nextLF(raw, valStart);if (raw[valEnd - 1] == '\n')valEnd--;r.add(new FooterLine(raw, enc, keyStart, keyEnd, valStart, valEnd));}Collections.reverse(r);return r;}",public final ListFooterLine getFooterLines final byte raw  bufferint ptr  rawlength  1while rawptr  n ptrfinal int msgB  RawParseUtilscommitMessageraw 0final ArrayListFooterLine r  new ArrayList4final Charset enc  guessEncodingfor  ptr  RawParseUtilsprevLFraw ptrif ptr  msgBbreak final int keyStart  ptr  2if rawkeyStart  nbreak final int keyEnd  RawParseUtilsendOfFooterLineKeyraw keyStartif keyEnd  0continue int valStart  keyEnd  1while valStart  rawlength  rawvalStart   valStartint valEnd  RawParseUtilsnextLFraw valStartif rawvalEnd  1  nvalEndraddnew FooterLineraw enc keyStart keyEnd valStart valEndCollectionsreverserreturn r
public SupBookRecord getExternalBookRecord() {return _externalBookRecord;},public SupBookRecord getExternalBookRecord return externalBookRecord
public Builder() {this(false);},public Builder thisfalse
public ApplySecurityGroupsToLoadBalancerResult applySecurityGroupsToLoadBalancer(ApplySecurityGroupsToLoadBalancerRequest request) {request = beforeClientExecution(request);return executeApplySecurityGroupsToLoadBalancer(request);},public ApplySecurityGroupsToLoadBalancerResult applySecurityGroupsToLoadBalancerApplySecurityGroupsToLoadBalancerRequest request request  beforeClientExecutionrequestreturn executeApplySecurityGroupsToLoadBalancerrequest
public DeleteDedicatedIpPoolResult deleteDedicatedIpPool(DeleteDedicatedIpPoolRequest request) {request = beforeClientExecution(request);return executeDeleteDedicatedIpPool(request);},public DeleteDedicatedIpPoolResult deleteDedicatedIpPoolDeleteDedicatedIpPoolRequest request request  beforeClientExecutionrequestreturn executeDeleteDedicatedIpPoolrequest
public DescribeStackInstanceResult describeStackInstance(DescribeStackInstanceRequest request) {request = beforeClientExecution(request);return executeDescribeStackInstance(request);},public DescribeStackInstanceResult describeStackInstanceDescribeStackInstanceRequest request request  beforeClientExecutionrequestreturn executeDescribeStackInstancerequest
public HSSFChildAnchor(EscherChildAnchorRecord escherChildAnchorRecord) {this._escherChildAnchor = escherChildAnchorRecord;},public HSSFChildAnchorEscherChildAnchorRecord escherChildAnchorRecord thisescherChildAnchor  escherChildAnchorRecord
"public SynonymQuery build() {Collections.sort(terms, Comparator.comparing(a -> a.term));return new SynonymQuery(terms.toArray(new TermAndBoost[0]), field);}",public SynonymQuery build Collectionssortterms Comparatorcomparinga  atermreturn new SynonymQuerytermstoArraynew TermAndBoost0 field
"public void addCell(int rowIndex, int columnIndex) {if (rowIndex > _lastDefinedRow) return;if (_currentRowIndex == -1) {_currentRowIndex = rowIndex;_firstColumnIndex = columnIndex;_lastColumnIndex = columnIndex;} else {if (_currentRowIndex == rowIndex && _lastColumnIndex+1 == columnIndex) {_lastColumnIndex = columnIndex;} else {if (_currentRectangleGroup == null) {_currentRectangleGroup = new BlankCellRectangleGroup(_currentRowIndex, _firstColumnIndex, _lastColumnIndex);} else {if (!_currentRectangleGroup.acceptRow(_currentRowIndex, _firstColumnIndex, _lastColumnIndex)) {_rectangleGroups.add(_currentRectangleGroup);_currentRectangleGroup = new BlankCellRectangleGroup(_currentRowIndex, _firstColumnIndex, _lastColumnIndex);}}_currentRowIndex = rowIndex;_firstColumnIndex = columnIndex;_lastColumnIndex = columnIndex;}}}",public void addCellint rowIndex int columnIndex if rowIndex  lastDefinedRow returnif currentRowIndex  1 currentRowIndex  rowIndexfirstColumnIndex  columnIndexlastColumnIndex  columnIndex else if currentRowIndex  rowIndex  lastColumnIndex1  columnIndex lastColumnIndex  columnIndex else if currentRectangleGroup  null currentRectangleGroup  new BlankCellRectangleGroupcurrentRowIndex firstColumnIndex lastColumnIndex else if currentRectangleGroupacceptRowcurrentRowIndex firstColumnIndex lastColumnIndex rectangleGroupsaddcurrentRectangleGroupcurrentRectangleGroup  new BlankCellRectangleGroupcurrentRowIndex firstColumnIndex lastColumnIndexcurrentRowIndex  rowIndexfirstColumnIndex  columnIndexlastColumnIndex  columnIndex
"public String toString() {return ""BLOCK: prefix="" + brToString(prefix);}",public String toString return BLOCK prefix  brToStringprefix
"public void set(int index, long value) {final int o = index / 21;final int b = index % 21;final int shift = b * 3;blocks[o] = (blocks[o] & ~(7L << shift)) | (value << shift);}",public void setint index long value final int o  index  21final int b  index  21final int shift  b  3blockso  blockso  7L  shift  value  shift
"@Override public boolean contains(Object o) {if (!(o instanceof Entry)) {return false;}Entry<?, ?> e = (Entry<?, ?>) o;Object key = e.getKey();if (key == null) {return false;}V v = Impl.this.get(key);return v != null && strategy.equalValues(v, e.getValue());}",Override public boolean containsObject o if o instanceof Entry return falseEntry  e  Entry  oObject key  egetKeyif key  null return falseV v  Implthisgetkeyreturn v  null  strategyequalValuesv egetValue
"public void clear() {if (value != null) {Arrays.fill(value, (char) 0);value = null;}}",public void clear if value  null Arraysfillvalue char 0value  null
public DescribeDirectConnectGatewayAssociationsResult describeDirectConnectGatewayAssociations(DescribeDirectConnectGatewayAssociationsRequest request) {request = beforeClientExecution(request);return executeDescribeDirectConnectGatewayAssociations(request);},public DescribeDirectConnectGatewayAssociationsResult describeDirectConnectGatewayAssociationsDescribeDirectConnectGatewayAssociationsRequest request request  beforeClientExecutionrequestreturn executeDescribeDirectConnectGatewayAssociationsrequest
public GetRestApiResult getRestApi(GetRestApiRequest request) {request = beforeClientExecution(request);return executeGetRestApi(request);},public GetRestApiResult getRestApiGetRestApiRequest request request  beforeClientExecutionrequestreturn executeGetRestApirequest
public CreateLaunchTemplateVersionResult createLaunchTemplateVersion(CreateLaunchTemplateVersionRequest request) {request = beforeClientExecution(request);return executeCreateLaunchTemplateVersion(request);},public CreateLaunchTemplateVersionResult createLaunchTemplateVersionCreateLaunchTemplateVersionRequest request request  beforeClientExecutionrequestreturn executeCreateLaunchTemplateVersionrequest
public SetLoadBalancerPoliciesOfListenerResult setLoadBalancerPoliciesOfListener(SetLoadBalancerPoliciesOfListenerRequest request) {request = beforeClientExecution(request);return executeSetLoadBalancerPoliciesOfListener(request);},public SetLoadBalancerPoliciesOfListenerResult setLoadBalancerPoliciesOfListenerSetLoadBalancerPoliciesOfListenerRequest request request  beforeClientExecutionrequestreturn executeSetLoadBalancerPoliciesOfListenerrequest
public SoraniNormalizationFilter(TokenStream input) {super(input);},public SoraniNormalizationFilterTokenStream input superinput
public UpdateTerminationProtectionResult updateTerminationProtection(UpdateTerminationProtectionRequest request) {request = beforeClientExecution(request);return executeUpdateTerminationProtection(request);},public UpdateTerminationProtectionResult updateTerminationProtectionUpdateTerminationProtectionRequest request request  beforeClientExecutionrequestreturn executeUpdateTerminationProtectionrequest
public void addChildRecord(EscherRecord record) {_childRecords.add(record);},public void addChildRecordEscherRecord record childRecordsaddrecord
public SetIdentityMailFromDomainResult setIdentityMailFromDomain(SetIdentityMailFromDomainRequest request) {request = beforeClientExecution(request);return executeSetIdentityMailFromDomain(request);},public SetIdentityMailFromDomainResult setIdentityMailFromDomainSetIdentityMailFromDomainRequest request request  beforeClientExecutionrequestreturn executeSetIdentityMailFromDomainrequest
public E remove(int location) {if (location >= 0 && location < size) {Link<E> link = voidLink;if (location < (size / 2)) {for (int i = 0; i <= location; i++) {link = link.next;}} else {for (int i = size; i > location; i--) {link = link.previous;}}Link<E> previous = link.previous;Link<E> next = link.next;previous.next = next;next.previous = previous;size--;modCount++;return link.data;}throw new IndexOutOfBoundsException();},public E removeint location if location  0  location  size LinkE link  voidLinkif location  size  2 for int i  0 i  location i link  linknext else for int i  size i  location i link  linkpreviousLinkE previous  linkpreviousLinkE next  linknextpreviousnext  nextnextprevious  previoussizemodCountreturn linkdatathrow new IndexOutOfBoundsException
public UpdateJobResult updateJob(UpdateJobRequest request) {request = beforeClientExecution(request);return executeUpdateJob(request);},public UpdateJobResult updateJobUpdateJobRequest request request  beforeClientExecutionrequestreturn executeUpdateJobrequest
public AddNoteCommand setNotesRef(String notesRef) {checkCallable();this.notesRef = notesRef;return this;},public AddNoteCommand setNotesRefString notesRef checkCallablethisnotesRef  notesRefreturn this
public ListInvitationsResult listInvitations(ListInvitationsRequest request) {request = beforeClientExecution(request);return executeListInvitations(request);},public ListInvitationsResult listInvitationsListInvitationsRequest request request  beforeClientExecutionrequestreturn executeListInvitationsrequest
public boolean equals(Object obj) {if(! (obj instanceof ExtRst)) {return false;}ExtRst other = (ExtRst)obj;return (compareTo(other) == 0);},public boolean equalsObject obj if obj instanceof ExtRst return falseExtRst other  ExtRstobjreturn compareToother  0
public synchronized void close() throws IOException {buffer = null;isClosed = true;notifyAll();},public synchronized void close throws IOException buffer  nullisClosed  truenotifyAll
public ListTrialsResult listTrials(ListTrialsRequest request) {request = beforeClientExecution(request);return executeListTrials(request);},public ListTrialsResult listTrialsListTrialsRequest request request  beforeClientExecutionrequestreturn executeListTrialsrequest
public CreateDocumentClassifierResult createDocumentClassifier(CreateDocumentClassifierRequest request) {request = beforeClientExecution(request);return executeCreateDocumentClassifier(request);},public CreateDocumentClassifierResult createDocumentClassifierCreateDocumentClassifierRequest request request  beforeClientExecutionrequestreturn executeCreateDocumentClassifierrequest
public GetPasswordDataResult getPasswordData(GetPasswordDataRequest request) {request = beforeClientExecution(request);return executeGetPasswordData(request);},public GetPasswordDataResult getPasswordDataGetPasswordDataRequest request request  beforeClientExecutionrequestreturn executeGetPasswordDatarequest
public final String text() {return toString(bytes);},public final String text return toStringbytes
"public HSSFPicture( HSSFShape parent, HSSFAnchor anchor ){super( parent, anchor );super.setShapeType(OBJECT_TYPE_PICTURE);CommonObjectDataSubRecord cod = (CommonObjectDataSubRecord) getObjRecord().getSubRecords().get(0);cod.setObjectType(CommonObjectDataSubRecord.OBJECT_TYPE_PICTURE);}",public HSSFPicture HSSFShape parent HSSFAnchor anchor super parent anchor supersetShapeTypeOBJECTTYPEPICTURECommonObjectDataSubRecord cod  CommonObjectDataSubRecord getObjRecordgetSubRecordsget0codsetObjectTypeCommonObjectDataSubRecordOBJECTTYPEPICTURE
"public CharSequence subSequence(int start, int end) {return new RawCharSequence(buffer, startPtr + start, startPtr + end);}",public CharSequence subSequenceint start int end return new RawCharSequencebuffer startPtr  start startPtr  end
public DeleteAccessPointResult deleteAccessPoint(DeleteAccessPointRequest request) {request = beforeClientExecution(request);return executeDeleteAccessPoint(request);},public DeleteAccessPointResult deleteAccessPointDeleteAccessPointRequest request request  beforeClientExecutionrequestreturn executeDeleteAccessPointrequest
public DescribeSubnetsResult describeSubnets() {return describeSubnets(new DescribeSubnetsRequest());},public DescribeSubnetsResult describeSubnets return describeSubnetsnew DescribeSubnetsRequest
public AddTagsToOnPremisesInstancesResult addTagsToOnPremisesInstances(AddTagsToOnPremisesInstancesRequest request) {request = beforeClientExecution(request);return executeAddTagsToOnPremisesInstances(request);},public AddTagsToOnPremisesInstancesResult addTagsToOnPremisesInstancesAddTagsToOnPremisesInstancesRequest request request  beforeClientExecutionrequestreturn executeAddTagsToOnPremisesInstancesrequest
"public static String coerceValueToString(ValueEval ve) {if (ve instanceof StringValueEval) {StringValueEval sve = (StringValueEval) ve;return sve.getStringValue();}if (ve == BlankEval.instance) {return """";}}",public static String coerceValueToStringValueEval ve if ve instanceof StringValueEval StringValueEval sve  StringValueEval vereturn svegetStringValueif ve  BlankEvalinstance return 
public CreateVpcLinkResult createVpcLink(CreateVpcLinkRequest request) {request = beforeClientExecution(request);return executeCreateVpcLink(request);},public CreateVpcLinkResult createVpcLinkCreateVpcLinkRequest request request  beforeClientExecutionrequestreturn executeCreateVpcLinkrequest
public DescribeTrafficMirrorTargetsResult describeTrafficMirrorTargets(DescribeTrafficMirrorTargetsRequest request) {request = beforeClientExecution(request);return executeDescribeTrafficMirrorTargets(request);},public DescribeTrafficMirrorTargetsResult describeTrafficMirrorTargetsDescribeTrafficMirrorTargetsRequest request request  beforeClientExecutionrequestreturn executeDescribeTrafficMirrorTargetsrequest
public SetRepositoryPolicyResult setRepositoryPolicy(SetRepositoryPolicyRequest request) {request = beforeClientExecution(request);return executeSetRepositoryPolicy(request);},public SetRepositoryPolicyResult setRepositoryPolicySetRepositoryPolicyRequest request request  beforeClientExecutionrequestreturn executeSetRepositoryPolicyrequest
"public String toFormulaString() {return ""UNKNOWN"";}",public String toFormulaString return UNKNOWN
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {try {double d0 = NumericFunction.singleOperandEvaluate(arg0, srcRowIndex, srcColumnIndex);double d1 = NumericFunction.singleOperandEvaluate(arg1, srcRowIndex, srcColumnIndex);return new NumberEval(evaluate(d0, d1, false));} catch (EvaluationException e) {return e.getErrorEval();}}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1 try double d0  NumericFunctionsingleOperandEvaluatearg0 srcRowIndex srcColumnIndexdouble d1  NumericFunctionsingleOperandEvaluatearg1 srcRowIndex srcColumnIndexreturn new NumberEvalevaluated0 d1 false catch EvaluationException e return egetErrorEval
"public void set(int index, long value) {final int o = index / 5;final int b = index % 5;final int shift = b * 12;blocks[o] = (blocks[o] & ~(4095L << shift)) | (value << shift);}",public void setint index long value final int o  index  5final int b  index  5final int shift  b  12blockso  blockso  4095L  shift  value  shift
public ProtectionRev4Record(boolean protect) {this(0);setProtect(protect);},public ProtectionRev4Recordboolean protect this0setProtectprotect
public UpdateAuditStreamConfigurationResult updateAuditStreamConfiguration(UpdateAuditStreamConfigurationRequest request) {request = beforeClientExecution(request);return executeUpdateAuditStreamConfiguration(request);},public UpdateAuditStreamConfigurationResult updateAuditStreamConfigurationUpdateAuditStreamConfigurationRequest request request  beforeClientExecutionrequestreturn executeUpdateAuditStreamConfigurationrequest
"public Sheet build() {Sheet sheet = (sheetName == null) ? workbook.createSheet() : workbook.createSheet(sheetName);Row currentRow;Cell currentCell;for (int rowIndex = 0; rowIndex < cells.length; ++rowIndex) {Object[] rowArray = cells[rowIndex];currentRow = sheet.createRow(rowIndex);for (int cellIndex = 0; cellIndex < rowArray.length; ++cellIndex) {Object cellValue = rowArray[cellIndex];if (cellValue != null || shouldCreateEmptyCells) {currentCell = currentRow.createCell(cellIndex);setCellValue(currentCell, cellValue);}}}return sheet;}",public Sheet build Sheet sheet  sheetName  null  workbookcreateSheet  workbookcreateSheetsheetNameRow currentRowCell currentCellfor int rowIndex  0 rowIndex  cellslength rowIndex Object rowArray  cellsrowIndexcurrentRow  sheetcreateRowrowIndexfor int cellIndex  0 cellIndex  rowArraylength cellIndex Object cellValue  rowArraycellIndexif cellValue  null  shouldCreateEmptyCells currentCell  currentRowcreateCellcellIndexsetCellValuecurrentCell cellValuereturn sheet
"public CharArrayWriter(int initialSize) {if (initialSize < 0) {throw new IllegalArgumentException(""size < 0"");}buf = new char[initialSize];lock = buf;}",public CharArrayWriterint initialSize if initialSize  0 throw new IllegalArgumentExceptionsize  0buf  new charinitialSizelock  buf
public AtomicReference(V initialValue) {value = initialValue;},public AtomicReferenceV initialValue value  initialValue
public static ISignatureComposer getComposer() {if (null == composer) {composer = new RpcSignatureComposer();}return composer;},public static ISignatureComposer getComposer if null  composer composer  new RpcSignatureComposerreturn composer
public ListHITsForQualificationTypeResult listHITsForQualificationType(ListHITsForQualificationTypeRequest request) {request = beforeClientExecution(request);return executeListHITsForQualificationType(request);},public ListHITsForQualificationTypeResult listHITsForQualificationTypeListHITsForQualificationTypeRequest request request  beforeClientExecutionrequestreturn executeListHITsForQualificationTyperequest
public AddTagsToStreamResult addTagsToStream(AddTagsToStreamRequest request) {request = beforeClientExecution(request);return executeAddTagsToStream(request);},public AddTagsToStreamResult addTagsToStreamAddTagsToStreamRequest request request  beforeClientExecutionrequestreturn executeAddTagsToStreamrequest
"public String toString(){StringBuilder buffer = new StringBuilder();final String nl = System.getProperty(""line.separator"");buffer.append('[' + getRecordName() + ']' + nl);if (escherRecords.size() == 0)buffer.append(""No Escher Records Decoded"" + nl);for (EscherRecord r : escherRecords) {buffer.append(r);}buffer.append(""[/"" + getRecordName() + ']' + nl);return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderfinal String nl  SystemgetPropertylineseparatorbufferappend  getRecordName    nlif escherRecordssize  0bufferappendNo Escher Records Decoded  nlfor EscherRecord r  escherRecords bufferappendrbufferappend  getRecordName    nlreturn buffertoString
public WSBoolRecord(RecordInputStream in) {byte[] data = in.readRemainder();field_1_wsbool =data[ 1 ];   field_2_wsbool =data[ 0 ];   },public WSBoolRecordRecordInputStream in byte data  inreadRemainderfield1wsbool data 1    field2wsbool data 0    
public BrazilianStemFilter create(TokenStream in) {return new BrazilianStemFilter(in);},public BrazilianStemFilter createTokenStream in return new BrazilianStemFilterin
public ResetCommand setRef(String ref) {this.ref = ref;return this;},public ResetCommand setRefString ref thisref  refreturn this
public EnableOrganizationAdminAccountResult enableOrganizationAdminAccount(EnableOrganizationAdminAccountRequest request) {request = beforeClientExecution(request);return executeEnableOrganizationAdminAccount(request);},public EnableOrganizationAdminAccountResult enableOrganizationAdminAccountEnableOrganizationAdminAccountRequest request request  beforeClientExecutionrequestreturn executeEnableOrganizationAdminAccountrequest
"public ValueEval getInnerValueEval(int sheetIndex) {return _evaluator.getEvalForCell(sheetIndex, getRow(), getColumn());}",public ValueEval getInnerValueEvalint sheetIndex return evaluatorgetEvalForCellsheetIndex getRow getColumn
public DeleteRecommenderConfigurationResult deleteRecommenderConfiguration(DeleteRecommenderConfigurationRequest request) {request = beforeClientExecution(request);return executeDeleteRecommenderConfiguration(request);},public DeleteRecommenderConfigurationResult deleteRecommenderConfigurationDeleteRecommenderConfigurationRequest request request  beforeClientExecutionrequestreturn executeDeleteRecommenderConfigurationrequest
public UpdateIntegrationResponseResult updateIntegrationResponse(UpdateIntegrationResponseRequest request) {request = beforeClientExecution(request);return executeUpdateIntegrationResponse(request);},public UpdateIntegrationResponseResult updateIntegrationResponseUpdateIntegrationResponseRequest request request  beforeClientExecutionrequestreturn executeUpdateIntegrationResponserequest
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[INTERFACEHDR]\n"");buffer.append(""    .codepage = "").append(HexDump.shortToHex(_codepage)).append(""\n"");buffer.append(""[/INTERFACEHDR]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendINTERFACEHDRnbufferappend    codepage  appendHexDumpshortToHexcodepageappendnbufferappendINTERFACEHDRnreturn buffertoString
public String outputToString(BytesRef output) {return output.toString();},public String outputToStringBytesRef output return outputtoString
"public String toString() {StringBuilder sb = new StringBuilder();sb.append(""dim="");sb.append(dim);sb.append("" path="");sb.append(Arrays.toString(path));sb.append("" value="");sb.append(value);sb.append("" childCount="");sb.append(childCount);sb.append('\n');for(LabelAndValue labelValue : labelValues) {sb.append(""  "").append(labelValue).append(""\n"");}return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappenddimsbappenddimsbappend pathsbappendArraystoStringpathsbappend valuesbappendvaluesbappend childCountsbappendchildCountsbappendnforLabelAndValue labelValue  labelValues sbappend  appendlabelValueappendnreturn sbtoString
public AcceptVpcEndpointConnectionsResult acceptVpcEndpointConnections(AcceptVpcEndpointConnectionsRequest request) {request = beforeClientExecution(request);return executeAcceptVpcEndpointConnections(request);},public AcceptVpcEndpointConnectionsResult acceptVpcEndpointConnectionsAcceptVpcEndpointConnectionsRequest request request  beforeClientExecutionrequestreturn executeAcceptVpcEndpointConnectionsrequest
public DescribeIdentityProviderConfigurationResult describeIdentityProviderConfiguration(DescribeIdentityProviderConfigurationRequest request) {request = beforeClientExecution(request);return executeDescribeIdentityProviderConfiguration(request);},public DescribeIdentityProviderConfigurationResult describeIdentityProviderConfigurationDescribeIdentityProviderConfigurationRequest request request  beforeClientExecutionrequestreturn executeDescribeIdentityProviderConfigurationrequest
public void clear() {head = null;free.clear();},public void clear head  nullfreeclear
"public String toString() {return getClass().getSimpleName() + ""["" + getFile().getPath() + ""]"";}",public String toString return getClassgetSimpleName    getFilegetPath  
public GetRelationalDatabaseBlueprintsResult getRelationalDatabaseBlueprints(GetRelationalDatabaseBlueprintsRequest request) {request = beforeClientExecution(request);return executeGetRelationalDatabaseBlueprints(request);},public GetRelationalDatabaseBlueprintsResult getRelationalDatabaseBlueprintsGetRelationalDatabaseBlueprintsRequest request request  beforeClientExecutionrequestreturn executeGetRelationalDatabaseBlueprintsrequest
"public void concatenate(byte[] array) {if (array == null) {throw new IllegalArgumentException(""array cannot be null"");}arrays.add(array);}",public void concatenatebyte array if array  null throw new IllegalArgumentExceptionarray cannot be nullarraysaddarray
"public final ByteBuffer get(byte[] dst, int dstOffset, int byteCount) {checkGetBounds(1, dst.length, dstOffset, byteCount);System.arraycopy(backingArray, offset + position, dst, dstOffset, byteCount);position += byteCount;return this;}",public final ByteBuffer getbyte dst int dstOffset int byteCount checkGetBounds1 dstlength dstOffset byteCountSystemarraycopybackingArray offset  position dst dstOffset byteCountposition  byteCountreturn this
public DescribeAutoScalingNotificationTypesResult describeAutoScalingNotificationTypes() {return describeAutoScalingNotificationTypes(new DescribeAutoScalingNotificationTypesRequest());},public DescribeAutoScalingNotificationTypesResult describeAutoScalingNotificationTypes return describeAutoScalingNotificationTypesnew DescribeAutoScalingNotificationTypesRequest
"public int compareTo(LookupResult o) {return CHARSEQUENCE_COMPARATOR.compare(key, o.key);}",public int compareToLookupResult o return CHARSEQUENCECOMPARATORcomparekey okey
public UpdateVariableResult updateVariable(UpdateVariableRequest request) {request = beforeClientExecution(request);return executeUpdateVariable(request);},public UpdateVariableResult updateVariableUpdateVariableRequest request request  beforeClientExecutionrequestreturn executeUpdateVariablerequest
"public TranslateTextRequest() {super(""hiknoengine"", ""2019-06-25"", ""TranslateText"", ""hiknoengine"");setMethod(MethodType.POST);}",public TranslateTextRequest superhiknoengine 20190625 TranslateText hiknoenginesetMethodMethodTypePOST
"public E set(int location, E object) {E result = a[location];a[location] = object;return result;}",public E setint location E object E result  alocationalocation  objectreturn result
"public static Document loadXML(Reader is) {DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();DocumentBuilder db = null;try {db = dbf.newDocumentBuilder();}catch (Exception se) {throw new RuntimeException(""Parser configuration error"", se);}org.w3c.dom.Document doc = null;try {doc = db.parse(new InputSource(is));}catch (Exception se) {throw new RuntimeException(""Error parsing file:"" + se, se);}return doc;}",public static Document loadXMLReader is DocumentBuilderFactory dbf  DocumentBuilderFactorynewInstanceDocumentBuilder db  nulltry db  dbfnewDocumentBuildercatch Exception se throw new RuntimeExceptionParser configuration error seorgw3cdomDocument doc  nulltry doc  dbparsenew InputSourceiscatch Exception se throw new RuntimeExceptionError parsing file  se sereturn doc
"public void setTokenStream(TokenStream tokenStream) {if (type.indexOptions() == IndexOptions.NONE || !type.tokenized()) {throw new IllegalArgumentException(""TokenStream fields must be indexed and tokenized"");}this.tokenStream = tokenStream;}",public void setTokenStreamTokenStream tokenStream if typeindexOptions  IndexOptionsNONE  typetokenized throw new IllegalArgumentExceptionTokenStream fields must be indexed and tokenizedthistokenStream  tokenStream
"public ValueEval getArea3DEval(Area3DPtg aptg) {SheetRangeEvaluator sre = createExternSheetRefEvaluator(aptg.getExternSheetIndex());return new LazyAreaEval(aptg.getFirstRow(), aptg.getFirstColumn(),aptg.getLastRow(), aptg.getLastColumn(), sre);}",public ValueEval getArea3DEvalArea3DPtg aptg SheetRangeEvaluator sre  createExternSheetRefEvaluatoraptggetExternSheetIndexreturn new LazyAreaEvalaptggetFirstRow aptggetFirstColumnaptggetLastRow aptggetLastColumn sre
"public MulBlankRecord(int row, int firstCol, short[] xfs) {_row = row;_firstCol = firstCol;_xfs = xfs;_lastCol = firstCol + xfs.length - 1;}",public MulBlankRecordint row int firstCol short xfs row  rowfirstCol  firstColxfs  xfslastCol  firstCol  xfslength  1
public EngineDefaults describeEngineDefaultParameters(DescribeEngineDefaultParametersRequest request) {request = beforeClientExecution(request);return executeDescribeEngineDefaultParameters(request);},public EngineDefaults describeEngineDefaultParametersDescribeEngineDefaultParametersRequest request request  beforeClientExecutionrequestreturn executeDescribeEngineDefaultParametersrequest
public AttachVolumeResult attachVolume(AttachVolumeRequest request) {request = beforeClientExecution(request);return executeAttachVolume(request);},public AttachVolumeResult attachVolumeAttachVolumeRequest request request  beforeClientExecutionrequestreturn executeAttachVolumerequest
public long ramBytesUsed() {return ((termOffsets!=null)? termOffsets.ramBytesUsed() : 0) +((termsDictOffsets!=null)? termsDictOffsets.ramBytesUsed() : 0);},public long ramBytesUsed return termOffsetsnull termOffsetsramBytesUsed  0 termsDictOffsetsnull termsDictOffsetsramBytesUsed  0
public DeleteWorkerBlockResult deleteWorkerBlock(DeleteWorkerBlockRequest request) {request = beforeClientExecution(request);return executeDeleteWorkerBlock(request);},public DeleteWorkerBlockResult deleteWorkerBlockDeleteWorkerBlockRequest request request  beforeClientExecutionrequestreturn executeDeleteWorkerBlockrequest
public static void unregister(TransportProtocol proto) {for (WeakReference<TransportProtocol> ref : protocols) {TransportProtocol refProto = ref.get();if (refProto == null || refProto == proto)protocols.remove(ref);}},public static void unregisterTransportProtocol proto for WeakReferenceTransportProtocol ref  protocols TransportProtocol refProto  refgetif refProto  null  refProto  protoprotocolsremoveref
public CreateNetworkInterfacePermissionResult createNetworkInterfacePermission(CreateNetworkInterfacePermissionRequest request) {request = beforeClientExecution(request);return executeCreateNetworkInterfacePermission(request);},public CreateNetworkInterfacePermissionResult createNetworkInterfacePermissionCreateNetworkInterfacePermissionRequest request request  beforeClientExecutionrequestreturn executeCreateNetworkInterfacePermissionrequest
"public void parseLine(DocData docData, String line) {String[] parts = line.split(""\\t"", 7);docData.setID(Integer.parseInt(parts[0]));docData.setName(parts[1]);String latitude = parts[4];String longitude = parts[5];docData.setBody(""POINT(""+longitude+"" ""+latitude+"")"");}",public void parseLineDocData docData String line String parts  linesplitt 7docDatasetIDIntegerparseIntparts0docDatasetNameparts1String latitude  parts4String longitude  parts5docDatasetBodyPOINTlongitude latitude
"public DeleteArchiveRequest(String accountId, String vaultName, String archiveId) {setAccountId(accountId);setVaultName(vaultName);setArchiveId(archiveId);}",public DeleteArchiveRequestString accountId String vaultName String archiveId setAccountIdaccountIdsetVaultNamevaultNamesetArchiveIdarchiveId
"public static void close(@NonNull Repository db) {if (db.getDirectory() != null) {FileKey key = FileKey.exact(db.getDirectory(), db.getFS());cache.unregisterAndCloseRepository(key);}}",public static void closeNonNull Repository db if dbgetDirectory  null FileKey key  FileKeyexactdbgetDirectory dbgetFScacheunregisterAndCloseRepositorykey
"public OrQueryNode(List<QueryNode> clauses) {super(clauses);if ((clauses == null) || (clauses.size() == 0)) {throw new IllegalArgumentException(""OR query must have at least one clause"");}}",public OrQueryNodeListQueryNode clauses superclausesif clauses  null  clausessize  0 throw new IllegalArgumentExceptionOR query must have at least one clause
public ReplicationGroup createReplicationGroup(CreateReplicationGroupRequest request) {request = beforeClientExecution(request);return executeCreateReplicationGroup(request);},public ReplicationGroup createReplicationGroupCreateReplicationGroupRequest request request  beforeClientExecutionrequestreturn executeCreateReplicationGrouprequest
public ListCollectionsResult listCollections(ListCollectionsRequest request) {request = beforeClientExecution(request);return executeListCollections(request);},public ListCollectionsResult listCollectionsListCollectionsRequest request request  beforeClientExecutionrequestreturn executeListCollectionsrequest
"public void setParentIds(AnyObjectId parent1, AnyObjectId parent2) {parentIds = new ObjectId[] { parent1.copy(), parent2.copy() };}",public void setParentIdsAnyObjectId parent1 AnyObjectId parent2 parentIds  new ObjectId  parent1copy parent2copy 
public TokenOffsetPayloadTokenFilter create(TokenStream input) {return new TokenOffsetPayloadTokenFilter(input);},public TokenOffsetPayloadTokenFilter createTokenStream input return new TokenOffsetPayloadTokenFilterinput
public CreateDataSourceResult createDataSource(CreateDataSourceRequest request) {request = beforeClientExecution(request);return executeCreateDataSource(request);},public CreateDataSourceResult createDataSourceCreateDataSourceRequest request request  beforeClientExecutionrequestreturn executeCreateDataSourcerequest
public DeleteBranchCommand setBranchNames(String... branchnames) {checkCallable();this.branchNames.clear();this.branchNames.addAll(Arrays.asList(branchnames));return this;},public DeleteBranchCommand setBranchNamesString branchnames checkCallablethisbranchNamesclearthisbranchNamesaddAllArraysasListbranchnamesreturn this
"public void setCoordinates(int x1, int y1, int x2, int y2) {_spgrRecord.setRectX1(x1);_spgrRecord.setRectX2(x2);_spgrRecord.setRectY1(y1);_spgrRecord.setRectY2(y2);}",public void setCoordinatesint x1 int y1 int x2 int y2 spgrRecordsetRectX1x1spgrRecordsetRectX2x2spgrRecordsetRectY1y1spgrRecordsetRectY2y2
public DescribeNotificationConfigurationsResult describeNotificationConfigurations() {return describeNotificationConfigurations(new DescribeNotificationConfigurationsRequest());},public DescribeNotificationConfigurationsResult describeNotificationConfigurations return describeNotificationConfigurationsnew DescribeNotificationConfigurationsRequest
public GetStatusResult getStatus(GetStatusRequest request) {request = beforeClientExecution(request);return executeGetStatus(request);},public GetStatusResult getStatusGetStatusRequest request request  beforeClientExecutionrequestreturn executeGetStatusrequest
"public final ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {switch (args.length) {case 1:return evaluate(srcRowIndex, srcColumnIndex, args[0]);case 2:return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1]);}return ErrorEval.VALUE_INVALID;}",public final ValueEval evaluateValueEval args int srcRowIndex int srcColumnIndex switch argslength case 1return evaluatesrcRowIndex srcColumnIndex args0case 2return evaluatesrcRowIndex srcColumnIndex args0 args1return ErrorEvalVALUEINVALID
"public ExternalSheet getExternalSheet(int externSheetIndex) {String[] extNames = linkTable.getExternalBookAndSheetName(externSheetIndex);if (extNames == null) {return null;}if (extNames.length == 2) {return new ExternalSheet(extNames[0], extNames[1]);} else {return new ExternalSheetRange(extNames[0], extNames[1], extNames[2]);}}",public ExternalSheet getExternalSheetint externSheetIndex String extNames  linkTablegetExternalBookAndSheetNameexternSheetIndexif extNames  null return nullif extNameslength  2 return new ExternalSheetextNames0 extNames1 else return new ExternalSheetRangeextNames0 extNames1 extNames2
"public static int delete(char s[], int pos, int len) {assert pos < len;if (pos < len - 1) { System.arraycopy(s, pos + 1, s, pos, len - pos - 1);}return len - 1;}",public static int deletechar s int pos int len assert pos  lenif pos  len  1  Systemarraycopys pos  1 s pos len  pos  1return len  1
"public HSSFConditionalFormatting getConditionalFormattingAt(int index) {CFRecordsAggregate cf = _conditionalFormattingTable.get(index);if (cf == null) {return null;}return new HSSFConditionalFormatting(_sheet, cf);}",public HSSFConditionalFormatting getConditionalFormattingAtint index CFRecordsAggregate cf  conditionalFormattingTablegetindexif cf  null return nullreturn new HSSFConditionalFormattingsheet cf
"public static Cell createCell(Row row, int column, String value, CellStyle style) {Cell cell = getCell(row, column);cell.setCellValue(cell.getRow().getSheet().getWorkbook().getCreationHelper().createRichTextString(value));if (style != null) {cell.setCellStyle(style);}return cell;}",public static Cell createCellRow row int column String value CellStyle style Cell cell  getCellrow columncellsetCellValuecellgetRowgetSheetgetWorkbookgetCreationHelpercreateRichTextStringvalueif style  null cellsetCellStylestylereturn cell
"public void setFillColor(int red, int green, int blue) {int fillColor = ((blue) << 16) | ((green) << 8) | red;setPropertyValue(new EscherRGBProperty(EscherPropertyTypes.FILL__FILLCOLOR, fillColor));}",public void setFillColorint red int green int blue int fillColor  blue  16  green  8  redsetPropertyValuenew EscherRGBPropertyEscherPropertyTypesFILLFILLCOLOR fillColor
public ErrorResponseBody error() {return this.error;},public ErrorResponseBody error return thiserror
public void write(int b) throws IOException {try {beginWrite();dst.write(b);} catch (InterruptedIOException e) {throw writeTimedOut(e);} finally {endWrite();}},public void writeint b throws IOException try beginWritedstwriteb catch InterruptedIOException e throw writeTimedOute finally endWrite
"public void add(String key, ParserExtension extension) {this.extensions.put(key, extension);}",public void addString key ParserExtension extension thisextensionsputkey extension
public SignOutUserResult signOutUser(SignOutUserRequest request) {request = beforeClientExecution(request);return executeSignOutUser(request);},public SignOutUserResult signOutUserSignOutUserRequest request request  beforeClientExecutionrequestreturn executeSignOutUserrequest
public PutImageTagMutabilityResult putImageTagMutability(PutImageTagMutabilityRequest request) {request = beforeClientExecution(request);return executePutImageTagMutability(request);},public PutImageTagMutabilityResult putImageTagMutabilityPutImageTagMutabilityRequest request request  beforeClientExecutionrequestreturn executePutImageTagMutabilityrequest
public CreateIAMPolicyAssignmentResult createIAMPolicyAssignment(CreateIAMPolicyAssignmentRequest request) {request = beforeClientExecution(request);return executeCreateIAMPolicyAssignment(request);},public CreateIAMPolicyAssignmentResult createIAMPolicyAssignmentCreateIAMPolicyAssignmentRequest request request  beforeClientExecutionrequestreturn executeCreateIAMPolicyAssignmentrequest
public GetRoomResult getRoom(GetRoomRequest request) {request = beforeClientExecution(request);return executeGetRoom(request);},public GetRoomResult getRoomGetRoomRequest request request  beforeClientExecutionrequestreturn executeGetRoomrequest
public DescribeLaunchConfigurationsResult describeLaunchConfigurations() {return describeLaunchConfigurations(new DescribeLaunchConfigurationsRequest());},public DescribeLaunchConfigurationsResult describeLaunchConfigurations return describeLaunchConfigurationsnew DescribeLaunchConfigurationsRequest
public UpdateTaskSetResult updateTaskSet(UpdateTaskSetRequest request) {request = beforeClientExecution(request);return executeUpdateTaskSet(request);},public UpdateTaskSetResult updateTaskSetUpdateTaskSetRequest request request  beforeClientExecutionrequestreturn executeUpdateTaskSetrequest
"public boolean equals(Object other_) {if (other_ == this) {return true;} else if (!(other_ instanceof FSTTermOutputs.TermData)) {return false;}TermData other = (TermData) other_;return statsEqual(this, other) &&bytesEqual(this, other);}",public boolean equalsObject other if other  this return true else if other instanceof FSTTermOutputsTermData return falseTermData other  TermData otherreturn statsEqualthis other bytesEqualthis other
public int getSequenceIndex() {return sequenceIndex;},public int getSequenceIndex return sequenceIndex
public DeleteAutoScalingGroupResult deleteAutoScalingGroup(DeleteAutoScalingGroupRequest request) {request = beforeClientExecution(request);return executeDeleteAutoScalingGroup(request);},public DeleteAutoScalingGroupResult deleteAutoScalingGroupDeleteAutoScalingGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteAutoScalingGrouprequest
"public int nextDoc() {while (true) {if (queue.size() == 0) {doc = NO_MORE_DOCS;break;}int newDoc = queue.top().docID();if (newDoc != doc) {assert newDoc > doc: ""doc="" + doc + "" newDoc="" + newDoc;doc = newDoc;break;}if (queue.top().nextDoc() == NO_MORE_DOCS) {queue.pop();} else {queue.updateTop();}}return doc;}",public int nextDoc while true if queuesize  0 doc  NOMOREDOCSbreakint newDoc  queuetopdocIDif newDoc  doc assert newDoc  doc doc  doc   newDoc  newDocdoc  newDocbreakif queuetopnextDoc  NOMOREDOCS queuepop else queueupdateTopreturn doc
"public Collection<ChildScorable> getChildren() {return Collections.singleton(new ChildScorable(parentScorer, ""BLOCK_JOIN""));}",public CollectionChildScorable getChildren return Collectionssingletonnew ChildScorableparentScorer BLOCKJOIN
public void endTask() {if (!isMainThread())throw new IllegalStateException();pm.endTask();},public void endTask if isMainThreadthrow new IllegalStateExceptionpmendTask
public UpdateConfigurationSetEventDestinationResult updateConfigurationSetEventDestination(UpdateConfigurationSetEventDestinationRequest request) {request = beforeClientExecution(request);return executeUpdateConfigurationSetEventDestination(request);},public UpdateConfigurationSetEventDestinationResult updateConfigurationSetEventDestinationUpdateConfigurationSetEventDestinationRequest request request  beforeClientExecutionrequestreturn executeUpdateConfigurationSetEventDestinationrequest
public void serialize(LittleEndianOutput out) {out.writeShort(getBackup());},public void serializeLittleEndianOutput out outwriteShortgetBackup
public DescribeBundleTasksResult describeBundleTasks(DescribeBundleTasksRequest request) {request = beforeClientExecution(request);return executeDescribeBundleTasks(request);},public DescribeBundleTasksResult describeBundleTasksDescribeBundleTasksRequest request request  beforeClientExecutionrequestreturn executeDescribeBundleTasksrequest
"public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats) {final long df = termStats.docFreq();final long docCount = collectionStats.docCount();final float idf = idf(df, docCount);return Explanation.match(idf, ""idf, computed as log(1 + (N - n + 0.5) / (n + 0.5)) from:"",Explanation.match(df, ""n, number of documents containing term""),Explanation.match(docCount, ""N, total number of documents with field""));}",public Explanation idfExplainCollectionStatistics collectionStats TermStatistics termStats final long df  termStatsdocFreqfinal long docCount  collectionStatsdocCountfinal float idf  idfdf docCountreturn Explanationmatchidf idf computed as log1  N  n  05  n  05 fromExplanationmatchdf n number of documents containing termExplanationmatchdocCount N total number of documents with field
public DescribeFleetEventsResult describeFleetEvents(DescribeFleetEventsRequest request) {request = beforeClientExecution(request);return executeDescribeFleetEvents(request);},public DescribeFleetEventsResult describeFleetEventsDescribeFleetEventsRequest request request  beforeClientExecutionrequestreturn executeDescribeFleetEventsrequest
"public BasicCredentials(String accessKeyId, String accessKeySecret) {if (accessKeyId == null) {throw new IllegalArgumentException(""Access key ID cannot be null."");}if (accessKeySecret == null) {throw new IllegalArgumentException(""Access key secret cannot be null."");}this.accessKeyId = accessKeyId;this.accessKeySecret = accessKeySecret;}",public BasicCredentialsString accessKeyId String accessKeySecret if accessKeyId  null throw new IllegalArgumentExceptionAccess key ID cannot be nullif accessKeySecret  null throw new IllegalArgumentExceptionAccess key secret cannot be nullthisaccessKeyId  accessKeyIdthisaccessKeySecret  accessKeySecret
public String getOldPath() {return oldPath;},public String getOldPath return oldPath
public int nextIndex() {return iterator.nextIndex() - start;},public int nextIndex return iteratornextIndex  start
public Snapshot deleteClusterSnapshot(DeleteClusterSnapshotRequest request) {request = beforeClientExecution(request);return executeDeleteClusterSnapshot(request);},public Snapshot deleteClusterSnapshotDeleteClusterSnapshotRequest request request  beforeClientExecutionrequestreturn executeDeleteClusterSnapshotrequest
"public String getColsNamesForValsByRound() {if (colForValByRound.size() == 0) {return """";}StringBuilder sb = new StringBuilder();for (final String colName : colForValByRound.values()) {sb.append(' ').append(colName);}return sb.toString();}",public String getColsNamesForValsByRound if colForValByRoundsize  0 return StringBuilder sb  new StringBuilderfor final String colName  colForValByRoundvalues sbappend appendcolNamereturn sbtoString
public void deprecateActivityType(DeprecateActivityTypeRequest request) {request = beforeClientExecution(request);executeDeprecateActivityType(request);},public void deprecateActivityTypeDeprecateActivityTypeRequest request request  beforeClientExecutionrequestexecuteDeprecateActivityTyperequest
"public PartETag(int partNumber, String eTag) {this.partNumber = partNumber;this.eTag = eTag;}",public PartETagint partNumber String eTag thispartNumber  partNumberthiseTag  eTag
"@Override public boolean remove(Object object) {if (object instanceof Multiset.Entry) {Multiset.Entry<?> entry = (Multiset.Entry<?>) object;Object element = entry.getElement();int entryCount = entry.getCount();return countMap.remove(element, entryCount);}return false;}",Override public boolean removeObject object if object instanceof MultisetEntry MultisetEntry entry  MultisetEntry objectObject element  entrygetElementint entryCount  entrygetCountreturn countMapremoveelement entryCountreturn false
public ListAccessControlRulesResult listAccessControlRules(ListAccessControlRulesRequest request) {request = beforeClientExecution(request);return executeListAccessControlRules(request);},public ListAccessControlRulesResult listAccessControlRulesListAccessControlRulesRequest request request  beforeClientExecutionrequestreturn executeListAccessControlRulesrequest
"public final CharBuffer get(char[] dst, int srcOffset, int charCount) {if (charCount > remaining()) {throw new BufferUnderflowException();}System.arraycopy(backingArray, offset + position, dst, srcOffset, charCount);position += charCount;return this;}",public final CharBuffer getchar dst int srcOffset int charCount if charCount  remaining throw new BufferUnderflowExceptionSystemarraycopybackingArray offset  position dst srcOffset charCountposition  charCountreturn this
public DescribeDBClusterBacktracksResult describeDBClusterBacktracks(DescribeDBClusterBacktracksRequest request) {request = beforeClientExecution(request);return executeDescribeDBClusterBacktracks(request);},public DescribeDBClusterBacktracksResult describeDBClusterBacktracksDescribeDBClusterBacktracksRequest request request  beforeClientExecutionrequestreturn executeDescribeDBClusterBacktracksrequest
public boolean equals(ATNConfig other) {if (this == other) {return true;}else if (other == null) {return false;}return this.state.stateNumber==other.state.stateNumber&& this.alt==other.alt&& (this.context==other.context || (this.context != null && this.context.equals(other.context)))&& this.semanticContext.equals(other.semanticContext)&& this.isPrecedenceFilterSuppressed() == other.isPrecedenceFilterSuppressed();},public boolean equalsATNConfig other if this  other return trueelse if other  null return falsereturn thisstatestateNumberotherstatestateNumber thisaltotheralt thiscontextothercontext  thiscontext  null  thiscontextequalsothercontext thissemanticContextequalsothersemanticContext thisisPrecedenceFilterSuppressed  otherisPrecedenceFilterSuppressed
public AbbreviatedObjectId getId(Side side) {return side == Side.OLD ? getOldId() : getNewId();},public AbbreviatedObjectId getIdSide side return side  SideOLD  getOldId  getNewId
public CatLabRecord(RecordInputStream in) {rt = in.readShort();grbitFrt = in.readShort();wOffset = in.readShort();at = in.readShort();grbit = in.readShort();if(in.available() == 0) {unused = null;} else {unused = in.readShort();}},public CatLabRecordRecordInputStream in rt  inreadShortgrbitFrt  inreadShortwOffset  inreadShortat  inreadShortgrbit  inreadShortifinavailable  0 unused  null else unused  inreadShort
"public String substring(int start, int end) {if (start >= 0 && start <= end && end <= count) {if (start == end) {return """";}return new String(value, start, end - start);}throw startEndAndLength(start, end);}",public String substringint start int end if start  0  start  end  end  count if start  end return return new Stringvalue start end  startthrow startEndAndLengthstart end
"public int remove(final int index){if (index >= _limit){throw new IndexOutOfBoundsException();}int rval = _array[ index ];System.arraycopy(_array, index + 1, _array, index, _limit - index);_limit--;return rval;}",public int removefinal int indexif index  limitthrow new IndexOutOfBoundsExceptionint rval  array index Systemarraycopyarray index  1 array index limit  indexlimitreturn rval
public K getKey() {return super.get();},public K getKey return superget
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeInt(unused1);out.writeInt(unused2);},public void writeLittleEndianOutput out outwriteBytesid  getPtgClassoutwriteIntunused1outwriteIntunused2
public void setDeltaCacheLimit(int size) {deltaCacheLimit = size;},public void setDeltaCacheLimitint size deltaCacheLimit  size
"public String toString() {return ""L"";}",public String toString return L
"public Map<String, String> read(String response, String endpoint) {return read(new StringCharacterIterator(response), endpoint, FIRST_POSITION);}",public MapString String readString response String endpoint return readnew StringCharacterIteratorresponse endpoint FIRSTPOSITION
public DeleteMessageResult deleteMessage(DeleteMessageRequest request) {request = beforeClientExecution(request);return executeDeleteMessage(request);},public DeleteMessageResult deleteMessageDeleteMessageRequest request request  beforeClientExecutionrequestreturn executeDeleteMessagerequest
public SearchFind(boolean isCaseSensitive) {_isCaseSensitive = isCaseSensitive;},public SearchFindboolean isCaseSensitive isCaseSensitive  isCaseSensitive
"public void setRoleName(String roleName) {if (null == roleName) {throw new NullPointerException(""You must specifiy a valid role name."");}this.roleName = roleName;setCredentialUrl();}",public void setRoleNameString roleName if null  roleName throw new NullPointerExceptionYou must specifiy a valid role namethisroleName  roleNamesetCredentialUrl
public AllocatePublicVirtualInterfaceResult allocatePublicVirtualInterface(AllocatePublicVirtualInterfaceRequest request) {request = beforeClientExecution(request);return executeAllocatePublicVirtualInterface(request);},public AllocatePublicVirtualInterfaceResult allocatePublicVirtualInterfaceAllocatePublicVirtualInterfaceRequest request request  beforeClientExecutionrequestreturn executeAllocatePublicVirtualInterfacerequest
"public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long byte0 = blocks[blocksOffset++] & 0xFF;final long byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 2) | (byte1 >>> 6);final long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 63) << 4) | (byte2 >>> 4);final long byte3 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte2 & 15) << 6) | (byte3 >>> 2);final long byte4 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte3 & 3) << 8) | byte4;}}",public void decodebyte blocks int blocksOffset long values int valuesOffset int iterations for int i  0 i  iterations i final long byte0  blocksblocksOffset  0xFFfinal long byte1  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  2  byte1  6final long byte2  blocksblocksOffset  0xFFvaluesvaluesOffset  byte1  63  4  byte2  4final long byte3  blocksblocksOffset  0xFFvaluesvaluesOffset  byte2  15  6  byte3  2final long byte4  blocksblocksOffset  0xFFvaluesvaluesOffset  byte3  3  8  byte4
public DeleteLoadBalancerRequest(String loadBalancerName) {setLoadBalancerName(loadBalancerName);},public DeleteLoadBalancerRequestString loadBalancerName setLoadBalancerNameloadBalancerName
public PutDeliverabilityDashboardOptionResult putDeliverabilityDashboardOption(PutDeliverabilityDashboardOptionRequest request) {request = beforeClientExecution(request);return executePutDeliverabilityDashboardOption(request);},public PutDeliverabilityDashboardOptionResult putDeliverabilityDashboardOptionPutDeliverabilityDashboardOptionRequest request request  beforeClientExecutionrequestreturn executePutDeliverabilityDashboardOptionrequest
"public XPathRuleElement(String ruleName, int ruleIndex) {super(ruleName);this.ruleIndex = ruleIndex;}",public XPathRuleElementString ruleName int ruleIndex superruleNamethisruleIndex  ruleIndex
public PullCommand setProgressMonitor(ProgressMonitor monitor) {if (monitor == null) {monitor = NullProgressMonitor.INSTANCE;}this.monitor = monitor;return this;},public PullCommand setProgressMonitorProgressMonitor monitor if monitor  null monitor  NullProgressMonitorINSTANCEthismonitor  monitorreturn this
public static final RevFilter after(long ts) {return new After(ts);},public static final RevFilter afterlong ts return new Afterts
"public final String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getName()).append("" [len="");sb.append(field_2_subex_len);sb.append(""]"");return sb.toString();}",public final String toString StringBuilder sb  new StringBuilder64sbappendgetClassgetNameappend lensbappendfield2subexlensbappendreturn sbtoString
public DeleteRoomResult deleteRoom(DeleteRoomRequest request) {request = beforeClientExecution(request);return executeDeleteRoom(request);},public DeleteRoomResult deleteRoomDeleteRoomRequest request request  beforeClientExecutionrequestreturn executeDeleteRoomrequest
public ScandinavianNormalizationFilter create(TokenStream input) {return new ScandinavianNormalizationFilter(input);},public ScandinavianNormalizationFilter createTokenStream input return new ScandinavianNormalizationFilterinput
public ValidateTemplateResult validateTemplate(ValidateTemplateRequest request) {request = beforeClientExecution(request);return executeValidateTemplate(request);},public ValidateTemplateResult validateTemplateValidateTemplateRequest request request  beforeClientExecutionrequestreturn executeValidateTemplaterequest
public ListBranchCommand branchList() {return new ListBranchCommand(repo);},public ListBranchCommand branchList return new ListBranchCommandrepo
"public String toString() {return getClass().getSimpleName() + ""["" + getEntryPathString() + ""]""; }",public String toString return getClassgetSimpleName    getEntryPathString   
"public final Edit before(Edit cut) {return new Edit(beginA, cut.beginA, beginB, cut.beginB);}",public final Edit beforeEdit cut return new EditbeginA cutbeginA beginB cutbeginB
"public String toString() {if ( symbol.getType() == Token.EOF ) return ""<EOF>"";return symbol.getText();}",public String toString if  symbolgetType  TokenEOF  return EOFreturn symbolgetText
public DeleteDeploymentStrategyResult deleteDeploymentStrategy(DeleteDeploymentStrategyRequest request) {request = beforeClientExecution(request);return executeDeleteDeploymentStrategy(request);},public DeleteDeploymentStrategyResult deleteDeploymentStrategyDeleteDeploymentStrategyRequest request request  beforeClientExecutionrequestreturn executeDeleteDeploymentStrategyrequest
public GetModelResult getModel(GetModelRequest request) {request = beforeClientExecution(request);return executeGetModel(request);},public GetModelResult getModelGetModelRequest request request  beforeClientExecutionrequestreturn executeGetModelrequest
public DescribeUserResult describeUser(DescribeUserRequest request) {request = beforeClientExecution(request);return executeDescribeUser(request);},public DescribeUserResult describeUserDescribeUserRequest request request  beforeClientExecutionrequestreturn executeDescribeUserrequest
public ListSnapshotBlocksResult listSnapshotBlocks(ListSnapshotBlocksRequest request) {request = beforeClientExecution(request);return executeListSnapshotBlocks(request);},public ListSnapshotBlocksResult listSnapshotBlocksListSnapshotBlocksRequest request request  beforeClientExecutionrequestreturn executeListSnapshotBlocksrequest
"public ByteBuffer putShort(int index, short value) {checkIndex(index, SizeOf.SHORT);Memory.pokeShort(backingArray, offset + index, value, order);return this;}",public ByteBuffer putShortint index short value checkIndexindex SizeOfSHORTMemorypokeShortbackingArray offset  index value orderreturn this
public ResetCommand reset() {return new ResetCommand(repo);},public ResetCommand reset return new ResetCommandrepo
public Snapshot createClusterSnapshot(CreateClusterSnapshotRequest request) {request = beforeClientExecution(request);return executeCreateClusterSnapshot(request);},public Snapshot createClusterSnapshotCreateClusterSnapshotRequest request request  beforeClientExecutionrequestreturn executeCreateClusterSnapshotrequest
public void setCachedResultTypeEmptyString() {specialCachedValue = FormulaSpecialCachedValue.createCachedEmptyValue();},public void setCachedResultTypeEmptyString specialCachedValue  FormulaSpecialCachedValuecreateCachedEmptyValue
public DeleteIdentityPolicyResult deleteIdentityPolicy(DeleteIdentityPolicyRequest request) {request = beforeClientExecution(request);return executeDeleteIdentityPolicy(request);},public DeleteIdentityPolicyResult deleteIdentityPolicyDeleteIdentityPolicyRequest request request  beforeClientExecutionrequestreturn executeDeleteIdentityPolicyrequest
"public int IncRef() {if (!initDone) {initDone = true;} else {assert count > 0: Thread.currentThread().getName() + "": RefCount is 0 pre-increment for file \"""" + fileName + ""\"""";}return ++count;}",public int IncRef if initDone initDone  true else assert count  0 ThreadcurrentThreadgetName   RefCount is 0 preincrement for file   fileName  return count
"public void fromRaw(byte[] bs) {fromRaw(bs, 0);}",public void fromRawbyte bs fromRawbs 0
public LeftMarginRecord clone() {return copy();},public LeftMarginRecord clone return copy
"public FailedPredicateException(Parser recognizer,String predicate,String message){super(formatMessage(predicate, message), recognizer, recognizer.getInputStream(), recognizer._ctx);ATNState s = recognizer.getInterpreter().atn.states.get(recognizer.getState());AbstractPredicateTransition trans = (AbstractPredicateTransition)s.transition(0);if (trans instanceof PredicateTransition) {this.ruleIndex = ((PredicateTransition)trans).ruleIndex;this.predicateIndex = ((PredicateTransition)trans).predIndex;}else {this.ruleIndex = 0;this.predicateIndex = 0;}this.predicate = predicate;this.setOffendingToken(recognizer.getCurrentToken());}",public FailedPredicateExceptionParser recognizerString predicateString messagesuperformatMessagepredicate message recognizer recognizergetInputStream recognizerctxATNState s  recognizergetInterpreteratnstatesgetrecognizergetStateAbstractPredicateTransition trans  AbstractPredicateTransitionstransition0if trans instanceof PredicateTransition thisruleIndex  PredicateTransitiontransruleIndexthispredicateIndex  PredicateTransitiontranspredIndexelse thisruleIndex  0thispredicateIndex  0thispredicate  predicatethissetOffendingTokenrecognizergetCurrentToken
"public int normalize(char s[], int len) {for (int i = 0; i < len; i++) {switch (s[i]) {case ALEF_MADDA:case ALEF_HAMZA_ABOVE:case ALEF_HAMZA_BELOW:s[i] = ALEF;break;case DOTLESS_YEH:s[i] = YEH;break;case TEH_MARBUTA:s[i] = HEH;break;case TATWEEL:case KASRATAN:case DAMMATAN:case FATHATAN:case FATHA:case DAMMA:case KASRA:case SHADDA:case SUKUN:len = delete(s, i, len);i--;break;default:break;}}return len;}",public int normalizechar s int len for int i  0 i  len i switch si case ALEFMADDAcase ALEFHAMZAABOVEcase ALEFHAMZABELOWsi  ALEFbreakcase DOTLESSYEHsi  YEHbreakcase TEHMARBUTAsi  HEHbreakcase TATWEELcase KASRATANcase DAMMATANcase FATHATANcase FATHAcase DAMMAcase KASRAcase SHADDAcase SUKUNlen  deletes i lenibreakdefaultbreakreturn len
public static int idealCharArraySize(int need) {return idealByteArraySize(need * 2) / 2;},public static int idealCharArraySizeint need return idealByteArraySizeneed  2  2
"public void setObjectId(AnyObjectId obj, int objType) {object = obj.copy();type = objType;}",public void setObjectIdAnyObjectId obj int objType object  objcopytype  objType
"public ValueEval getItem(int index) {if (index != 0) {throw new RuntimeException(""Invalid index (""+ index + "") only zero is allowed"");}return _value;}",public ValueEval getItemint index if index  0 throw new RuntimeExceptionInvalid index  index   only zero is allowedreturn value
"public AND(SemanticContext a, SemanticContext b) {Set<SemanticContext> operands = new HashSet<SemanticContext>();if ( a instanceof AND ) operands.addAll(Arrays.asList(((AND)a).opnds));else operands.add(a);if ( b instanceof AND ) operands.addAll(Arrays.asList(((AND)b).opnds));else operands.add(b);List<PrecedencePredicate> precedencePredicates = filterPrecedencePredicates(operands);if (!precedencePredicates.isEmpty()) {PrecedencePredicate reduced = Collections.min(precedencePredicates);operands.add(reduced);}opnds = operands.toArray(new SemanticContext[operands.size()]);}",public ANDSemanticContext a SemanticContext b SetSemanticContext operands  new HashSetSemanticContextif  a instanceof AND  operandsaddAllArraysasListANDaopndselse operandsaddaif  b instanceof AND  operandsaddAllArraysasListANDbopndselse operandsaddbListPrecedencePredicate precedencePredicates  filterPrecedencePredicatesoperandsif precedencePredicatesisEmpty PrecedencePredicate reduced  CollectionsminprecedencePredicatesoperandsaddreducedopnds  operandstoArraynew SemanticContextoperandssize
public GetCampaignVersionResult getCampaignVersion(GetCampaignVersionRequest request) {request = beforeClientExecution(request);return executeGetCampaignVersion(request);},public GetCampaignVersionResult getCampaignVersionGetCampaignVersionRequest request request  beforeClientExecutionrequestreturn executeGetCampaignVersionrequest
public SeriesTextRecord(RecordInputStream in) {field_1_id = in.readUShort();int field_2_textLength = in.readUByte();is16bit = (in.readUByte() & 0x01) != 0;if (is16bit) {field_4_text = in.readUnicodeLEString(field_2_textLength);} else {field_4_text = in.readCompressedUnicode(field_2_textLength);}},public SeriesTextRecordRecordInputStream in field1id  inreadUShortint field2textLength  inreadUByteis16bit  inreadUByte  0x01  0if is16bit field4text  inreadUnicodeLEStringfield2textLength else field4text  inreadCompressedUnicodefield2textLength
public void writeUTF(String value) throws IOException {checkWritePrimitiveTypes();primitiveTypes.writeUTF(value);},public void writeUTFString value throws IOException checkWritePrimitiveTypesprimitiveTypeswriteUTFvalue
public DeleteCacheSubnetGroupResult deleteCacheSubnetGroup(DeleteCacheSubnetGroupRequest request) {request = beforeClientExecution(request);return executeDeleteCacheSubnetGroup(request);},public DeleteCacheSubnetGroupResult deleteCacheSubnetGroupDeleteCacheSubnetGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteCacheSubnetGrouprequest
public Tab getItem(int position) {return mTabs.get(position);},public Tab getItemint position return mTabsgetposition
"public int createFormat(String formatString) {maxformatid = maxformatid >= 0xa4 ? maxformatid + 1 : 0xa4; FormatRecord rec = new FormatRecord(maxformatid, formatString);int pos = 0;while ( pos < records.size() && records.get( pos ).getSid() != FormatRecord.sid ) {pos++;}pos += formats.size();formats.add( rec );records.add( pos, rec );return maxformatid;}",public int createFormatString formatString maxformatid  maxformatid  0xa4  maxformatid  1  0xa4 FormatRecord rec  new FormatRecordmaxformatid formatStringint pos  0while  pos  recordssize  recordsget pos getSid  FormatRecordsid  pospos  formatssizeformatsadd rec recordsadd pos rec return maxformatid
public ListDeploymentStrategiesResult listDeploymentStrategies(ListDeploymentStrategiesRequest request) {request = beforeClientExecution(request);return executeListDeploymentStrategies(request);},public ListDeploymentStrategiesResult listDeploymentStrategiesListDeploymentStrategiesRequest request request  beforeClientExecutionrequestreturn executeListDeploymentStrategiesrequest
"public CreateLoginProfileRequest(String userName, String password) {setUserName(userName);setPassword(password);}",public CreateLoginProfileRequestString userName String password setUserNameuserNamesetPasswordpassword
"public String getMetadata() throws ClientException {HttpRequest request = new HttpRequest(credentialUrl.toString());request.setSysMethod(MethodType.GET);request.setSysConnectTimeout(connectionTimeoutInMilliseconds);request.setSysReadTimeout(connectionTimeoutInMilliseconds);HttpResponse response;try {response = CompatibleUrlConnClient.compatibleGetResponse(request);} catch (Exception e) {throw new ClientException(""Failed to connect ECS Metadata Service: "" + e.toString());}if (response.getStatus() != HttpURLConnection.HTTP_OK) {throw new ClientException(ECS_METADAT_FETCH_ERROR_MSG + "" HttpCode="" + response.getStatus());}return new String(response.getHttpContent());}",public String getMetadata throws ClientException HttpRequest request  new HttpRequestcredentialUrltoStringrequestsetSysMethodMethodTypeGETrequestsetSysConnectTimeoutconnectionTimeoutInMillisecondsrequestsetSysReadTimeoutconnectionTimeoutInMillisecondsHttpResponse responsetry response  CompatibleUrlConnClientcompatibleGetResponserequest catch Exception e throw new ClientExceptionFailed to connect ECS Metadata Service   etoStringif responsegetStatus  HttpURLConnectionHTTPOK throw new ClientExceptionECSMETADATFETCHERRORMSG   HttpCode  responsegetStatusreturn new StringresponsegetHttpContent
public void setAbbreviationLength(int count) {if (count < 0)throw new IllegalArgumentException(JGitText.get().abbreviationLengthMustBeNonNegative);abbreviationLength = count;},public void setAbbreviationLengthint count if count  0throw new IllegalArgumentExceptionJGitTextgetabbreviationLengthMustBeNonNegativeabbreviationLength  count
public SearchFacesByImageResult searchFacesByImage(SearchFacesByImageRequest request) {request = beforeClientExecution(request);return executeSearchFacesByImage(request);},public SearchFacesByImageResult searchFacesByImageSearchFacesByImageRequest request request  beforeClientExecutionrequestreturn executeSearchFacesByImagerequest
public ListMonitoringSchedulesResult listMonitoringSchedules(ListMonitoringSchedulesRequest request) {request = beforeClientExecution(request);return executeListMonitoringSchedules(request);},public ListMonitoringSchedulesResult listMonitoringSchedulesListMonitoringSchedulesRequest request request  beforeClientExecutionrequestreturn executeListMonitoringSchedulesrequest
"public static double[] grow(double[] array) {return grow(array, 1 + array.length);}",public static double growdouble array return growarray 1  arraylength
public E next() {if (index < to) {return (E) snapshot[index++];} else {throw new NoSuchElementException();}},public E next if index  to return E snapshotindex else throw new NoSuchElementException
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval inumberVE) {ValueEval veText1;try {veText1 = OperandResolver.getSingleValue(inumberVE, srcRowIndex, srcColumnIndex);} catch (EvaluationException e) {return e.getErrorEval();}String iNumber = OperandResolver.coerceValueToString(veText1);Matcher m = Imaginary.COMPLEX_NUMBER_PATTERN.matcher(iNumber);boolean result = m.matches();String real = """";if (result) {String realGroup = m.group(2);boolean hasRealPart = realGroup.length() != 0;if (realGroup.length() == 0) {return new StringEval(String.valueOf(0));}if (hasRealPart) {String sign = """";String realSign = m.group(Imaginary.GROUP1_REAL_SIGN);if (realSign.length() != 0 && !(realSign.equals(""+""))) {sign = realSign;}String groupRealNumber = m.group(Imaginary.GROUP2_IMAGINARY_INTEGER_OR_DOUBLE);if (groupRealNumber.length() != 0) {real = sign + groupRealNumber;} else {real = sign + ""1"";}}} else {return ErrorEval.NUM_ERROR;}return new StringEval(real);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval inumberVE ValueEval veText1try veText1  OperandResolvergetSingleValueinumberVE srcRowIndex srcColumnIndex catch EvaluationException e return egetErrorEvalString iNumber  OperandResolvercoerceValueToStringveText1Matcher m  ImaginaryCOMPLEXNUMBERPATTERNmatcheriNumberboolean result  mmatchesString real  if result String realGroup  mgroup2boolean hasRealPart  realGrouplength  0if realGrouplength  0 return new StringEvalStringvalueOf0if hasRealPart String sign  String realSign  mgroupImaginaryGROUP1REALSIGNif realSignlength  0  realSignequals sign  realSignString groupRealNumber  mgroupImaginaryGROUP2IMAGINARYINTEGERORDOUBLEif groupRealNumberlength  0 real  sign  groupRealNumber else real  sign  1 else return ErrorEvalNUMERRORreturn new StringEvalreal
public PlacementType(String availabilityZone) {setAvailabilityZone(availabilityZone);},public PlacementTypeString availabilityZone setAvailabilityZoneavailabilityZone
public UpdateDomainResult updateDomain(UpdateDomainRequest request) {request = beforeClientExecution(request);return executeUpdateDomain(request);},public UpdateDomainResult updateDomainUpdateDomainRequest request request  beforeClientExecutionrequestreturn executeUpdateDomainrequest
"public byte[] serialize(){byte[] retval = new byte[getRecordSize()];serialize( 0, retval );return retval;}",public byte serializebyte retval  new bytegetRecordSizeserialize 0 retval return retval
public GetLoadBalancerResult getLoadBalancer(GetLoadBalancerRequest request) {request = beforeClientExecution(request);return executeGetLoadBalancer(request);},public GetLoadBalancerResult getLoadBalancerGetLoadBalancerRequest request request  beforeClientExecutionrequestreturn executeGetLoadBalancerrequest
public ModifyTrafficMirrorFilterRuleResult modifyTrafficMirrorFilterRule(ModifyTrafficMirrorFilterRuleRequest request) {request = beforeClientExecution(request);return executeModifyTrafficMirrorFilterRule(request);},public ModifyTrafficMirrorFilterRuleResult modifyTrafficMirrorFilterRuleModifyTrafficMirrorFilterRuleRequest request request  beforeClientExecutionrequestreturn executeModifyTrafficMirrorFilterRulerequest
"public void resize(double scaleX, double scaleY) {HSSFClientAnchor anchor = getClientAnchor();anchor.setAnchorType(AnchorType.MOVE_DONT_RESIZE);HSSFClientAnchor pref = getPreferredSize(scaleX,scaleY);int row2 = anchor.getRow1() + (pref.getRow2() - pref.getRow1());int col2 = anchor.getCol1() + (pref.getCol2() - pref.getCol1());anchor.setCol2((short)col2);anchor.setDx2(pref.getDx2());anchor.setRow2(row2);anchor.setDy2(pref.getDy2());}",public void resizedouble scaleX double scaleY HSSFClientAnchor anchor  getClientAnchoranchorsetAnchorTypeAnchorTypeMOVEDONTRESIZEHSSFClientAnchor pref  getPreferredSizescaleXscaleYint row2  anchorgetRow1  prefgetRow2  prefgetRow1int col2  anchorgetCol1  prefgetCol2  prefgetCol1anchorsetCol2shortcol2anchorsetDx2prefgetDx2anchorsetRow2row2anchorsetDy2prefgetDy2
"public void reset() throws IOException {throw new IOException(""mark/reset not supported"");}",public void reset throws IOException throw new IOExceptionmarkreset not supported
public Body(Content text) {setText(text);},public BodyContent text setTexttext
"public StaticCredentialsProvider(IClientProfile clientProfile) {IClientProfile clientProfile1 = clientProfile;Credential legacyCredential = clientProfile1.getCredential();if (null != legacyCredential.getSecurityToken()) {this.credentials = new BasicSessionCredentials(legacyCredential.getAccessKeyId(), legacyCredential.getAccessSecret(), legacyCredential.getSecurityToken());} else {this.credentials = new LegacyCredentials(legacyCredential);}}",public StaticCredentialsProviderIClientProfile clientProfile IClientProfile clientProfile1  clientProfileCredential legacyCredential  clientProfile1getCredentialif null  legacyCredentialgetSecurityToken thiscredentials  new BasicSessionCredentialslegacyCredentialgetAccessKeyId legacyCredentialgetAccessSecret legacyCredentialgetSecurityToken else thiscredentials  new LegacyCredentialslegacyCredential
"public synchronized V get(Object key) {int hash = key.hashCode();hash ^= (hash >>> 20) ^ (hash >>> 12);hash ^= (hash >>> 7) ^ (hash >>> 4);HashtableEntry<K, V>[] tab = table;for (HashtableEntry<K, V> e = tab[hash & (tab.length - 1)];e != null; e = e.next) {K eKey = e.key;if (eKey == key || (e.hash == hash && key.equals(eKey))) {return e.value;}}return null;}",public synchronized V getObject key int hash  keyhashCodehash  hash  20  hash  12hash  hash  7  hash  4HashtableEntryK V tab  tablefor HashtableEntryK V e  tabhash  tablength  1e  null e  enext K eKey  ekeyif eKey  key  ehash  hash  keyequalseKey return evaluereturn null
"public void keep(int pos, int cnt) {beforeAdd(cache.getEntry(pos));fastKeep(pos, cnt);}",public void keepint pos int cnt beforeAddcachegetEntryposfastKeeppos cnt
public TableStylesRecord(RecordInputStream in) {rt = in.readUShort();grbitFrt = in.readUShort();in.readFully(unused);cts = in.readInt();int cchDefListStyle = in.readUShort();int cchDefPivotStyle = in.readUShort();rgchDefListStyle = in.readUnicodeLEString(cchDefListStyle);rgchDefPivotStyle = in.readUnicodeLEString(cchDefPivotStyle);},public TableStylesRecordRecordInputStream in rt  inreadUShortgrbitFrt  inreadUShortinreadFullyunusedcts  inreadIntint cchDefListStyle  inreadUShortint cchDefPivotStyle  inreadUShortrgchDefListStyle  inreadUnicodeLEStringcchDefListStylergchDefPivotStyle  inreadUnicodeLEStringcchDefPivotStyle
public AddAttributesToFindingsResult addAttributesToFindings(AddAttributesToFindingsRequest request) {request = beforeClientExecution(request);return executeAddAttributesToFindings(request);},public AddAttributesToFindingsResult addAttributesToFindingsAddAttributesToFindingsRequest request request  beforeClientExecutionrequestreturn executeAddAttributesToFindingsrequest
"public CellElapsedFormatter(String pattern) {super(pattern);specs = new ArrayList<>();StringBuffer desc = CellFormatPart.parseFormat(pattern,CellFormatType.ELAPSED, new ElapsedPartHandler());ListIterator<TimeSpec> it = specs.listIterator(specs.size());while (it.hasPrevious()) {TimeSpec spec = it.previous();desc.replace(spec.pos, spec.pos + spec.len, ""%0"" + spec.len + ""d"");if (spec.type != topmost.type) {spec.modBy = modFor(spec.type, spec.len);}}printfFmt = desc.toString();}",public CellElapsedFormatterString pattern superpatternspecs  new ArrayListStringBuffer desc  CellFormatPartparseFormatpatternCellFormatTypeELAPSED new ElapsedPartHandlerListIteratorTimeSpec it  specslistIteratorspecssizewhile ithasPrevious TimeSpec spec  itpreviousdescreplacespecpos specpos  speclen 0  speclen  dif spectype  topmosttype specmodBy  modForspectype speclenprintfFmt  desctoString
public final int capacity() {return capacity;},public final int capacity return capacity
public final boolean matches(char c) {return Character.isWhitespace(c);},public final boolean matcheschar c return CharacterisWhitespacec
"public BytesRef get(int bytesID, BytesRef ref) {assert bytesStart != null : ""bytesStart is null - not initialized"";assert bytesID < bytesStart.length: ""bytesID exceeds byteStart len: "" + bytesStart.length;pool.setBytesRef(ref, bytesStart[bytesID]);return ref;}",public BytesRef getint bytesID BytesRef ref assert bytesStart  null  bytesStart is null  not initializedassert bytesID  bytesStartlength bytesID exceeds byteStart len   bytesStartlengthpoolsetBytesRefref bytesStartbytesIDreturn ref
public void Run() {display = true;},public void Run display  true
public UpdateMatchmakingConfigurationResult updateMatchmakingConfiguration(UpdateMatchmakingConfigurationRequest request) {request = beforeClientExecution(request);return executeUpdateMatchmakingConfiguration(request);},public UpdateMatchmakingConfigurationResult updateMatchmakingConfigurationUpdateMatchmakingConfigurationRequest request request  beforeClientExecutionrequestreturn executeUpdateMatchmakingConfigurationrequest
public boolean isGroup(char c) {return groupMap[characterCategoryMap[c]];},public boolean isGroupchar c return groupMapcharacterCategoryMapc
public void setTraverseEmptyCells(boolean traverseEmptyCells) {this.traverseEmptyCells = traverseEmptyCells;},public void setTraverseEmptyCellsboolean traverseEmptyCells thistraverseEmptyCells  traverseEmptyCells
public ListPresetsResult listPresets(ListPresetsRequest request) {request = beforeClientExecution(request);return executeListPresets(request);},public ListPresetsResult listPresetsListPresetsRequest request request  beforeClientExecutionrequestreturn executeListPresetsrequest
@Override public Set<K> keySet() {Set<K> ks = keySet;return (ks != null) ? ks : (keySet = new KeySet());},Override public SetK keySet SetK ks  keySetreturn ks  null  ks  keySet  new KeySet
"public void include(Ref r) {include(r.getName(), r.getObjectId());if (r.getPeeledObjectId() != null)tagTargets.add(r.getPeeledObjectId());else if (r.getObjectId() != null&& r.getName().startsWith(Constants.R_HEADS))tagTargets.add(r.getObjectId());}",public void includeRef r includergetName rgetObjectIdif rgetPeeledObjectId  nulltagTargetsaddrgetPeeledObjectIdelse if rgetObjectId  null rgetNamestartsWithConstantsRHEADStagTargetsaddrgetObjectId
"public CharBuffer get(char[] dst, int dstOffset, int charCount) {byteBuffer.limit(limit * SizeOf.CHAR);byteBuffer.position(position * SizeOf.CHAR);if (byteBuffer instanceof DirectByteBuffer) {((DirectByteBuffer) byteBuffer).get(dst, dstOffset, charCount);} else {((HeapByteBuffer) byteBuffer).get(dst, dstOffset, charCount);}this.position += charCount;return this;}",public CharBuffer getchar dst int dstOffset int charCount byteBufferlimitlimit  SizeOfCHARbyteBufferpositionposition  SizeOfCHARif byteBuffer instanceof DirectByteBuffer DirectByteBuffer byteBuffergetdst dstOffset charCount else HeapByteBuffer byteBuffergetdst dstOffset charCountthisposition  charCountreturn this
"public BytesRef subtract(BytesRef output, BytesRef inc) {assert output != null;assert inc != null;if (inc == NO_OUTPUT) {return output;} else {assert StringHelper.startsWith(output, inc);if (inc.length == output.length) {return NO_OUTPUT;} else {assert inc.length < output.length: ""inc.length="" + inc.length + "" vs output.length="" + output.length;assert inc.length > 0;return new BytesRef(output.bytes, output.offset + inc.length, output.length-inc.length);}}}",public BytesRef subtractBytesRef output BytesRef inc assert output  nullassert inc  nullif inc  NOOUTPUT return output else assert StringHelperstartsWithoutput incif inclength  outputlength return NOOUTPUT else assert inclength  outputlength inclength  inclength   vs outputlength  outputlengthassert inclength  0return new BytesRefoutputbytes outputoffset  inclength outputlengthinclength
public boolean isKanji(char c) {final byte characterClass = characterCategoryMap[c];return characterClass == KANJI || characterClass == KANJINUMERIC;},public boolean isKanjichar c final byte characterClass  characterCategoryMapcreturn characterClass  KANJI  characterClass  KANJINUMERIC
public int getType() {return type;},public int getType return type
"public ValueEval getItem(int index) {if(index > _size) {throw new ArrayIndexOutOfBoundsException(""Specified index ("" + index+ "") is outside the allowed range (0.."" + (_size-1) + "")"");}return _tableArray.getValue(index, _columnIndex);}",public ValueEval getItemint index ifindex  size throw new ArrayIndexOutOfBoundsExceptionSpecified index   index  is outside the allowed range 0  size1  return tableArraygetValueindex columnIndex
public void writeDouble(double v) {writeContinueIfRequired(8);_ulrOutput.writeDouble(v);},public void writeDoubledouble v writeContinueIfRequired8ulrOutputwriteDoublev
"final public QueryNode ConjQuery(CharSequence field) throws ParseException {QueryNode first, c;Vector<QueryNode> clauses = null;first = ModClause(field);label_3:while (true) {switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {case AND:;break;default:jj_la1[4] = jj_gen;break label_3;}jj_consume_token(AND);c = ModClause(field);if (clauses == null) {clauses = new Vector<QueryNode>();clauses.addElement(first);}clauses.addElement(c);}if (clauses != null) {{if (true) return new AndQueryNode(clauses);}} else {{if (true) return first;}}throw new Error(""Missing return statement in function"");}",final public QueryNode ConjQueryCharSequence field throws ParseException QueryNode first cVectorQueryNode clauses  nullfirst  ModClausefieldlabel3while true switch jjntk1jjntkjjntk case ANDbreakdefaultjjla14  jjgenbreak label3jjconsumetokenANDc  ModClausefieldif clauses  null clauses  new VectorQueryNodeclausesaddElementfirstclausesaddElementcif clauses  null if true return new AndQueryNodeclauses else if true return firstthrow new ErrorMissing return statement in function
public void setRevFilter(RevFilter newFilter) {assertNotStarted();filter = newFilter != null ? newFilter : RevFilter.ALL;},public void setRevFilterRevFilter newFilter assertNotStartedfilter  newFilter  null  newFilter  RevFilterALL
"public void setText(final char array[], int start, int length) {this.array = array;this.start = start;this.index = start;this.length = length;this.limit = start + length;}",public void setTextfinal char array int start int length thisarray  arraythisstart  startthisindex  startthislength  lengththislimit  start  length
public GetVoiceChannelResult getVoiceChannel(GetVoiceChannelRequest request) {request = beforeClientExecution(request);return executeGetVoiceChannel(request);},public GetVoiceChannelResult getVoiceChannelGetVoiceChannelRequest request request  beforeClientExecutionrequestreturn executeGetVoiceChannelrequest
public RevokeSecurityGroupIngressResult revokeSecurityGroupIngress(RevokeSecurityGroupIngressRequest request) {request = beforeClientExecution(request);return executeRevokeSecurityGroupIngress(request);},public RevokeSecurityGroupIngressResult revokeSecurityGroupIngressRevokeSecurityGroupIngressRequest request request  beforeClientExecutionrequestreturn executeRevokeSecurityGroupIngressrequest
public DoubleBuffer slice() {byteBuffer.limit(limit * SizeOf.DOUBLE);byteBuffer.position(position * SizeOf.DOUBLE);ByteBuffer bb = byteBuffer.slice().order(byteBuffer.order());DoubleBuffer result = new DoubleToByteBufferAdapter(bb);byteBuffer.clear();return result;},public DoubleBuffer slice byteBufferlimitlimit  SizeOfDOUBLEbyteBufferpositionposition  SizeOfDOUBLEByteBuffer bb  byteBuffersliceorderbyteBufferorderDoubleBuffer result  new DoubleToByteBufferAdapterbbbyteBufferclearreturn result
"public DoubleValuesSource makeDistanceValueSource(Point queryPoint, double multiplier) {return new DistanceValueSource(this, queryPoint, multiplier);}",public DoubleValuesSource makeDistanceValueSourcePoint queryPoint double multiplier return new DistanceValueSourcethis queryPoint multiplier
"public String toString() {final StringBuilder r = new StringBuilder();final SimpleDateFormat dtfmt;dtfmt = new SimpleDateFormat(""EEE MMM d HH:mm:ss yyyy Z"", Locale.US);dtfmt.setTimeZone(getTimeZone());r.append(""PersonIdent["");r.append(getName());r.append("", "");r.append(getEmailAddress());r.append("", "");r.append(dtfmt.format(Long.valueOf(when)));r.append(""]"");return r.toString();}",public String toString final StringBuilder r  new StringBuilderfinal SimpleDateFormat dtfmtdtfmt  new SimpleDateFormatEEE MMM d HHmmss yyyy Z LocaleUSdtfmtsetTimeZonegetTimeZonerappendPersonIdentrappendgetNamerappend rappendgetEmailAddressrappend rappenddtfmtformatLongvalueOfwhenrappendreturn rtoString
"public ArabicStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public ArabicStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public int getIndex() {return offset;},public int getIndex return offset
public ListVoiceConnectorsResult listVoiceConnectors(ListVoiceConnectorsRequest request) {request = beforeClientExecution(request);return executeListVoiceConnectors(request);},public ListVoiceConnectorsResult listVoiceConnectorsListVoiceConnectorsRequest request request  beforeClientExecutionrequestreturn executeListVoiceConnectorsrequest
public GetOperationResult getOperation(GetOperationRequest request) {request = beforeClientExecution(request);return executeGetOperation(request);},public GetOperationResult getOperationGetOperationRequest request request  beforeClientExecutionrequestreturn executeGetOperationrequest
"public Item(String name, java.util.List<Attribute> attributes) {setName(name);setAttributes(attributes);}",public ItemString name javautilListAttribute attributes setNamenamesetAttributesattributes
public SetIdentityHeadersInNotificationsEnabledResult setIdentityHeadersInNotificationsEnabled(SetIdentityHeadersInNotificationsEnabledRequest request) {request = beforeClientExecution(request);return executeSetIdentityHeadersInNotificationsEnabled(request);},public SetIdentityHeadersInNotificationsEnabledResult setIdentityHeadersInNotificationsEnabledSetIdentityHeadersInNotificationsEnabledRequest request request  beforeClientExecutionrequestreturn executeSetIdentityHeadersInNotificationsEnabledrequest
public void setSensitiveInputCells(CellCacheEntry[] sensitiveInputCells) {if (sensitiveInputCells == null) {_sensitiveInputCells = null;changeConsumingCells(CellCacheEntry.EMPTY_ARRAY);} else {_sensitiveInputCells = sensitiveInputCells.clone();changeConsumingCells(_sensitiveInputCells);}},public void setSensitiveInputCellsCellCacheEntry sensitiveInputCells if sensitiveInputCells  null sensitiveInputCells  nullchangeConsumingCellsCellCacheEntryEMPTYARRAY else sensitiveInputCells  sensitiveInputCellsclonechangeConsumingCellssensitiveInputCells
"public synchronized boolean add(E e) {Object[] newElements = new Object[elements.length + 1];System.arraycopy(elements, 0, newElements, 0, elements.length);newElements[elements.length] = e;elements = newElements;return true;}",public synchronized boolean addE e Object newElements  new Objectelementslength  1Systemarraycopyelements 0 newElements 0 elementslengthnewElementselementslength  eelements  newElementsreturn true
"public StringBuilder append(long l) {IntegralToString.appendLong(this, l);return this;}",public StringBuilder appendlong l IntegralToStringappendLongthis lreturn this
public DeleteHsmClientCertificateResult deleteHsmClientCertificate(DeleteHsmClientCertificateRequest request) {request = beforeClientExecution(request);return executeDeleteHsmClientCertificate(request);},public DeleteHsmClientCertificateResult deleteHsmClientCertificateDeleteHsmClientCertificateRequest request request  beforeClientExecutionrequestreturn executeDeleteHsmClientCertificaterequest
public CreateAssessmentTargetResult createAssessmentTarget(CreateAssessmentTargetRequest request) {request = beforeClientExecution(request);return executeCreateAssessmentTarget(request);},public CreateAssessmentTargetResult createAssessmentTargetCreateAssessmentTargetRequest request request  beforeClientExecutionrequestreturn executeCreateAssessmentTargetrequest
public DescribeGlobalReplicationGroupsResult describeGlobalReplicationGroups(DescribeGlobalReplicationGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeGlobalReplicationGroups(request);},public DescribeGlobalReplicationGroupsResult describeGlobalReplicationGroupsDescribeGlobalReplicationGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeGlobalReplicationGroupsrequest
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeShort(_sheetRefIndex);out.writeShort(_nameNumber);out.writeShort(_reserved);},public void writeLittleEndianOutput out outwriteBytesid  getPtgClassoutwriteShortsheetRefIndexoutwriteShortnameNumberoutwriteShortreserved
"public static String parseSegmentName(String filename) {int idx = indexOfSegmentName(filename);if (idx != -1) {filename = filename.substring(0, idx);}return filename;}",public static String parseSegmentNameString filename int idx  indexOfSegmentNamefilenameif idx  1 filename  filenamesubstring0 idxreturn filename
public String getRefLogMessage() {return refLogMessage;},public String getRefLogMessage return refLogMessage
public ObjectId getObjectId() {return missing;},public ObjectId getObjectId return missing
public void setPackedGitLimit(long newLimit) {packedGitLimit = newLimit;},public void setPackedGitLimitlong newLimit packedGitLimit  newLimit
"public String toString() {return """";}",public String toString return 
public void clear() {if (size > 0) {size = 0;voidLink.next = voidLink;voidLink.previous = voidLink;modCount++;}},public void clear if size  0 size  0voidLinknext  voidLinkvoidLinkprevious  voidLinkmodCount
"public List<Note> call() throws GitAPIException {checkCallable();List<Note> notes = new ArrayList<>();NoteMap map = NoteMap.newEmptyMap();try (RevWalk walk = new RevWalk(repo)) {Ref ref = repo.findRef(notesRef);if (ref != null) {RevCommit notesCommit = walk.parseCommit(ref.getObjectId());map = NoteMap.read(walk.getObjectReader(), notesCommit);}Iterator<Note> i = map.iterator();while (i.hasNext())notes.add(i.next());} catch (IOException e) {throw new JGitInternalException(e.getMessage(), e);}return notes;}",public ListNote call throws GitAPIException checkCallableListNote notes  new ArrayListNoteMap map  NoteMapnewEmptyMaptry RevWalk walk  new RevWalkrepo Ref ref  repofindRefnotesRefif ref  null RevCommit notesCommit  walkparseCommitrefgetObjectIdmap  NoteMapreadwalkgetObjectReader notesCommitIteratorNote i  mapiteratorwhile ihasNextnotesaddinext catch IOException e throw new JGitInternalExceptionegetMessage ereturn notes
public ListOrganizationsResult listOrganizations(ListOrganizationsRequest request) {request = beforeClientExecution(request);return executeListOrganizations(request);},public ListOrganizationsResult listOrganizationsListOrganizationsRequest request request  beforeClientExecutionrequestreturn executeListOrganizationsrequest
"public ParseTreeMatch match(ParseTree tree, String pattern, int patternRuleIndex) {ParseTreePattern p = compile(pattern, patternRuleIndex);return match(tree, p);}",public ParseTreeMatch matchParseTree tree String pattern int patternRuleIndex ParseTreePattern p  compilepattern patternRuleIndexreturn matchtree p
public GridsetRecord(RecordInputStream in) {field_1_gridset_flag = in.readShort();},public GridsetRecordRecordInputStream in field1gridsetflag  inreadShort
public PagedBytesDataInput clone() {PagedBytesDataInput clone = getDataInput();clone.setPosition(getPosition());return clone;},public PagedBytesDataInput clone PagedBytesDataInput clone  getDataInputclonesetPositiongetPositionreturn clone
"public MissingObjectException(AbbreviatedObjectId id, int type) {super(MessageFormat.format(JGitText.get().missingObject, Constants.typeString(type), id.name()));missing = null;}",public MissingObjectExceptionAbbreviatedObjectId id int type superMessageFormatformatJGitTextgetmissingObject ConstantstypeStringtype idnamemissing  null
"public void getName(byte[] buffer, int offset) {System.arraycopy(path, pathOffset, buffer, offset, pathLen - pathOffset);}",public void getNamebyte buffer int offset Systemarraycopypath pathOffset buffer offset pathLen  pathOffset
public List<? extends CombinedHunkHeader> getHunks() {return (List<CombinedHunkHeader>) super.getHunks();},public List extends CombinedHunkHeader getHunks return ListCombinedHunkHeader supergetHunks
public long getPointer() {if (currentBlock == null) {return 0;} else {return (numBlocks * ((long) blockSize)) + upto;}},public long getPointer if currentBlock  null return 0 else return numBlocks  long blockSize  upto
public PendingTaskCount countPendingDecisionTasks(CountPendingDecisionTasksRequest request) {request = beforeClientExecution(request);return executeCountPendingDecisionTasks(request);},public PendingTaskCount countPendingDecisionTasksCountPendingDecisionTasksRequest request request  beforeClientExecutionrequestreturn executeCountPendingDecisionTasksrequest
public ListStackResourcesResult listStackResources(ListStackResourcesRequest request) {request = beforeClientExecution(request);return executeListStackResources(request);},public ListStackResourcesResult listStackResourcesListStackResourcesRequest request request  beforeClientExecutionrequestreturn executeListStackResourcesrequest
"public Credential(String keyId, String secret, String securityToken, int expiredHours) {this.accessKeyId = keyId;this.accessSecret = secret;this.securityToken = securityToken;this.refreshDate = new Date();setExpiredDate(expiredHours);}",public CredentialString keyId String secret String securityToken int expiredHours thisaccessKeyId  keyIdthisaccessSecret  secretthissecurityToken  securityTokenthisrefreshDate  new DatesetExpiredDateexpiredHours
public void writeFields() throws IOException {if (currentPutField == null) {throw new NotActiveException();}writeFieldValues(currentPutField);},public void writeFields throws IOException if currentPutField  null throw new NotActiveExceptionwriteFieldValuescurrentPutField
public Result getResult() {return status;},public Result getResult return status
public AssignIpv6AddressesResult assignIpv6Addresses(AssignIpv6AddressesRequest request) {request = beforeClientExecution(request);return executeAssignIpv6Addresses(request);},public AssignIpv6AddressesResult assignIpv6AddressesAssignIpv6AddressesRequest request request  beforeClientExecutionrequestreturn executeAssignIpv6Addressesrequest
public DBInstance modifyDBInstance(ModifyDBInstanceRequest request) {request = beforeClientExecution(request);return executeModifyDBInstance(request);},public DBInstance modifyDBInstanceModifyDBInstanceRequest request request  beforeClientExecutionrequestreturn executeModifyDBInstancerequest
public RemoveAttributesFromFindingsResult removeAttributesFromFindings(RemoveAttributesFromFindingsRequest request) {request = beforeClientExecution(request);return executeRemoveAttributesFromFindings(request);},public RemoveAttributesFromFindingsResult removeAttributesFromFindingsRemoveAttributesFromFindingsRequest request request  beforeClientExecutionrequestreturn executeRemoveAttributesFromFindingsrequest
"public JoinDocFreqValueSource(String field, String qfield) {super(field);this.qfield = qfield;}",public JoinDocFreqValueSourceString field String qfield superfieldthisqfield  qfield
public double readDouble() {return Double.longBitsToDouble(readLong());},public double readDouble return DoublelongBitsToDoublereadLong
public DescribeDirectoryConfigsResult describeDirectoryConfigs(DescribeDirectoryConfigsRequest request) {request = beforeClientExecution(request);return executeDescribeDirectoryConfigs(request);},public DescribeDirectoryConfigsResult describeDirectoryConfigsDescribeDirectoryConfigsRequest request request  beforeClientExecutionrequestreturn executeDescribeDirectoryConfigsrequest
public GetAccountResult getAccount(GetAccountRequest request) {request = beforeClientExecution(request);return executeGetAccount(request);},public GetAccountResult getAccountGetAccountRequest request request  beforeClientExecutionrequestreturn executeGetAccountrequest
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[BOUNDSHEET]\n"");buffer.append(""    .bof        = "").append(HexDump.intToHex(getPositionOfBof())).append(""\n"");buffer.append(""    .visibility = "").append(HexDump.shortToHex(field_2_visibility)).append(""\n"");buffer.append(""    .type       = "").append(HexDump.byteToHex(field_3_type)).append(""\n"");buffer.append(""    .sheetname  = "").append(getSheetname()).append(""\n"");buffer.append(""[/BOUNDSHEET]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendBOUNDSHEETnbufferappend    bof         appendHexDumpintToHexgetPositionOfBofappendnbufferappend    visibility  appendHexDumpshortToHexfield2visibilityappendnbufferappend    type        appendHexDumpbyteToHexfield3typeappendnbufferappend    sheetname   appendgetSheetnameappendnbufferappendBOUNDSHEETnreturn buffertoString
public short getShortRawValue(final short holder){return ( short ) getRawValue(holder);},public short getShortRawValuefinal short holderreturn  short  getRawValueholder
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1,ValueEval arg2) {double result;try {double d0 = NumericFunction.singleOperandEvaluate(arg0, srcRowIndex, srcColumnIndex);double d1 = NumericFunction.singleOperandEvaluate(arg1, srcRowIndex, srcColumnIndex);double d2 = NumericFunction.singleOperandEvaluate(arg2, srcRowIndex, srcColumnIndex);result = evaluate(getYear(d0), (int) (d1 - 1), (int) d2);NumericFunction.checkValue(result);} catch (EvaluationException e) {return e.getErrorEval();}return new NumberEval(result);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1ValueEval arg2 double resulttry double d0  NumericFunctionsingleOperandEvaluatearg0 srcRowIndex srcColumnIndexdouble d1  NumericFunctionsingleOperandEvaluatearg1 srcRowIndex srcColumnIndexdouble d2  NumericFunctionsingleOperandEvaluatearg2 srcRowIndex srcColumnIndexresult  evaluategetYeard0 int d1  1 int d2NumericFunctioncheckValueresult catch EvaluationException e return egetErrorEvalreturn new NumberEvalresult
public GetPublicKeyConfigResult getPublicKeyConfig(GetPublicKeyConfigRequest request) {request = beforeClientExecution(request);return executeGetPublicKeyConfig(request);},public GetPublicKeyConfigResult getPublicKeyConfigGetPublicKeyConfigRequest request request  beforeClientExecutionrequestreturn executeGetPublicKeyConfigrequest
public URIish setUser(String n) {final URIish r = new URIish(this);r.user = n;return r;},public URIish setUserString n final URIish r  new URIishthisruser  nreturn r
"public EscherArrayProperty(short id, int complexSize) {super(id, complexSize);emptyComplexPart = (complexSize == 0);}",public EscherArrayPropertyshort id int complexSize superid complexSizeemptyComplexPart  complexSize  0
"public String toASCIIString() {return format(false, true);}",public String toASCIIString return formatfalse true
"public void decode(long[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = blocks[blocksOffset++];for (int shift = 56; shift >= 0; shift -= 8) {values[valuesOffset++] = (block >>> shift) & 255;}}}",public void decodelong blocks int blocksOffset long values int valuesOffset int iterations for int i  0 i  iterations i final long block  blocksblocksOffsetfor int shift  56 shift  0 shift  8 valuesvaluesOffset  block  shift  255
public GetContactResult getContact(GetContactRequest request) {request = beforeClientExecution(request);return executeGetContact(request);},public GetContactResult getContactGetContactRequest request request  beforeClientExecutionrequestreturn executeGetContactrequest
public void removeHiddenCount() {remove1stProperty(PropertyIDMap.PID_HIDDENCOUNT);},public void removeHiddenCount remove1stPropertyPropertyIDMapPIDHIDDENCOUNT
public GetRestApisResult getRestApis(GetRestApisRequest request) {request = beforeClientExecution(request);return executeGetRestApis(request);},public GetRestApisResult getRestApisGetRestApisRequest request request  beforeClientExecutionrequestreturn executeGetRestApisrequest
"public ArrayPredictionContext(PredictionContext[] parents, int[] returnStates) {super(calculateHashCode(parents, returnStates));assert parents!=null && parents.length>0;assert returnStates!=null && returnStates.length>0;this.parents = parents;this.returnStates = returnStates;}",public ArrayPredictionContextPredictionContext parents int returnStates supercalculateHashCodeparents returnStatesassert parentsnull  parentslength0assert returnStatesnull  returnStateslength0thisparents  parentsthisreturnStates  returnStates
"public CharBuffer compact() {System.arraycopy(backingArray, position + offset, backingArray, offset, remaining());position = limit - position;limit = capacity;mark = UNSET_MARK;return this;}",public CharBuffer compact SystemarraycopybackingArray position  offset backingArray offset remainingposition  limit  positionlimit  capacitymark  UNSETMARKreturn this
public DeleteStageResult deleteStage(DeleteStageRequest request) {request = beforeClientExecution(request);return executeDeleteStage(request);},public DeleteStageResult deleteStageDeleteStageRequest request request  beforeClientExecutionrequestreturn executeDeleteStagerequest
public Object[] toArray() {return elements.clone();},public Object toArray return elementsclone
"public synchronized void mark(int ignoredReadlimit) {_marked_offset = _current_offset;_marked_offset_count = Math.max(0, _current_block_count - 1);}",public synchronized void markint ignoredReadlimit markedoffset  currentoffsetmarkedoffsetcount  Mathmax0 currentblockcount  1
"public String toString() {return ""NOT "" + a.toString(); }",public String toString return NOT   atoString 
public void setExpectDataAfterPackFooter(boolean e) {expectDataAfterPackFooter = e;},public void setExpectDataAfterPackFooterboolean e expectDataAfterPackFooter  e
"public Request<DeletePublicAccessBlockRequest> marshall(DeletePublicAccessBlockRequest deletePublicAccessBlockRequest) {if (deletePublicAccessBlockRequest == null) {throw new SdkClientException(""Invalid argument passed to marshall(...)"");}Request<DeletePublicAccessBlockRequest> request = new DefaultRequest<DeletePublicAccessBlockRequest>(deletePublicAccessBlockRequest, ""AWSS3Control"");request.setHttpMethod(HttpMethodName.DELETE);if (deletePublicAccessBlockRequest.getAccountId() != null) {request.addHeader(""x-amz-account-id"", StringUtils.fromString(deletePublicAccessBlockRequest.getAccountId()));}String uriResourcePath = ""/v20180820/configuration/publicAccessBlock"";request.setResourcePath(uriResourcePath);return request;}",public RequestDeletePublicAccessBlockRequest marshallDeletePublicAccessBlockRequest deletePublicAccessBlockRequest if deletePublicAccessBlockRequest  null throw new SdkClientExceptionInvalid argument passed to marshallRequestDeletePublicAccessBlockRequest request  new DefaultRequestDeletePublicAccessBlockRequestdeletePublicAccessBlockRequest AWSS3ControlrequestsetHttpMethodHttpMethodNameDELETEif deletePublicAccessBlockRequestgetAccountId  null requestaddHeaderxamzaccountid StringUtilsfromStringdeletePublicAccessBlockRequestgetAccountIdString uriResourcePath  v20180820configurationpublicAccessBlockrequestsetResourcePathuriResourcePathreturn request
public FetchResult getFetchResult() {return this.fetchResult;},public FetchResult getFetchResult return thisfetchResult
public GetJourneyExecutionMetricsResult getJourneyExecutionMetrics(GetJourneyExecutionMetricsRequest request) {request = beforeClientExecution(request);return executeGetJourneyExecutionMetrics(request);},public GetJourneyExecutionMetricsResult getJourneyExecutionMetricsGetJourneyExecutionMetricsRequest request request  beforeClientExecutionrequestreturn executeGetJourneyExecutionMetricsrequest
"public static long[] grow(long[] array) {return grow(array, 1 + array.length);}",public static long growlong array return growarray 1  arraylength
"@Override public String toString() {StringBuilder buf = new StringBuilder();buf.append(getClass().getName());buf.append("", status: capacity="");buf.append(capacity);buf.append("" position="");buf.append(position);buf.append("" limit="");buf.append(limit);return buf.toString();}",Override public String toString StringBuilder buf  new StringBuilderbufappendgetClassgetNamebufappend status capacitybufappendcapacitybufappend positionbufappendpositionbufappend limitbufappendlimitreturn buftoString
public UpdateStreamingDistributionResult updateStreamingDistribution(UpdateStreamingDistributionRequest request) {request = beforeClientExecution(request);return executeUpdateStreamingDistribution(request);},public UpdateStreamingDistributionResult updateStreamingDistributionUpdateStreamingDistributionRequest request request  beforeClientExecutionrequestreturn executeUpdateStreamingDistributionrequest
public DeleteVaultNotificationsRequest(String vaultName) {setVaultName(vaultName);},public DeleteVaultNotificationsRequestString vaultName setVaultNamevaultName
public AttachNetworkInterfaceResult attachNetworkInterface(AttachNetworkInterfaceRequest request) {request = beforeClientExecution(request);return executeAttachNetworkInterface(request);},public AttachNetworkInterfaceResult attachNetworkInterfaceAttachNetworkInterfaceRequest request request  beforeClientExecutionrequestreturn executeAttachNetworkInterfacerequest
public boolean equals( Object o ) {return o instanceof HungarianStemmer;},public boolean equals Object o  return o instanceof HungarianStemmer
public DescribeDatasetResult describeDataset(DescribeDatasetRequest request) {request = beforeClientExecution(request);return executeDescribeDataset(request);},public DescribeDatasetResult describeDatasetDescribeDatasetRequest request request  beforeClientExecutionrequestreturn executeDescribeDatasetrequest
public UpdateShardCountResult updateShardCount(UpdateShardCountRequest request) {request = beforeClientExecution(request);return executeUpdateShardCount(request);},public UpdateShardCountResult updateShardCountUpdateShardCountRequest request request  beforeClientExecutionrequestreturn executeUpdateShardCountrequest
"public String getText() {return getText(Interval.of(0,size()-1));}",public String getText return getTextIntervalof0size1
public BoundSheetRecord[] getBoundSheetRecords() {return boundSheetRecords.toArray(new BoundSheetRecord[0]);},public BoundSheetRecord getBoundSheetRecords return boundSheetRecordstoArraynew BoundSheetRecord0
public boolean matches(FooterKey key) {final byte[] kRaw = key.raw;final int len = kRaw.length;int bPtr = keyStart;if (keyEnd - bPtr != len)return false;for (int kPtr = 0; kPtr < len;) {byte b = buffer[bPtr++];if ('A' <= b && b <= 'Z')b += (byte) ('a' - 'A');if (b != kRaw[kPtr++])return false;}return true;},public boolean matchesFooterKey key final byte kRaw  keyrawfinal int len  kRawlengthint bPtr  keyStartif keyEnd  bPtr  lenreturn falsefor int kPtr  0 kPtr  len byte b  bufferbPtrif A  b  b  Zb  byte a  Aif b  kRawkPtrreturn falsereturn true
public CreateUserResult createUser(CreateUserRequest request) {request = beforeClientExecution(request);return executeCreateUser(request);},public CreateUserResult createUserCreateUserRequest request request  beforeClientExecutionrequestreturn executeCreateUserrequest
"public S3Origin(String domainName, String originAccessIdentity) {setDomainName(domainName);setOriginAccessIdentity(originAccessIdentity);}",public S3OriginString domainName String originAccessIdentity setDomainNamedomainNamesetOriginAccessIdentityoriginAccessIdentity
public StartTopicsDetectionJobResult startTopicsDetectionJob(StartTopicsDetectionJobRequest request) {request = beforeClientExecution(request);return executeStartTopicsDetectionJob(request);},public StartTopicsDetectionJobResult startTopicsDetectionJobStartTopicsDetectionJobRequest request request  beforeClientExecutionrequestreturn executeStartTopicsDetectionJobrequest
public ClusterSecurityGroup revokeClusterSecurityGroupIngress(RevokeClusterSecurityGroupIngressRequest request) {request = beforeClientExecution(request);return executeRevokeClusterSecurityGroupIngress(request);},public ClusterSecurityGroup revokeClusterSecurityGroupIngressRevokeClusterSecurityGroupIngressRequest request request  beforeClientExecutionrequestreturn executeRevokeClusterSecurityGroupIngressrequest
"public void enterRule(ParserRuleContext localctx, int state, int ruleIndex) {setState(state);_ctx = localctx;_ctx.start = _input.LT(1);if (_buildParseTrees) addContextToParseTree();if ( _parseListeners != null) triggerEnterRuleEvent();}",public void enterRuleParserRuleContext localctx int state int ruleIndex setStatestatectx  localctxctxstart  inputLT1if buildParseTrees addContextToParseTreeif  parseListeners  null triggerEnterRuleEvent
public ObjectReader newReader() {return new WindowCursor(db);},public ObjectReader newReader return new WindowCursordb
@Override public int size() {return backingMap.size();},Override public int size return backingMapsize
"public static String pathToString(String[] path, int length) {if (length == 0) {return """";}StringBuilder sb = new StringBuilder();for(int i=0;i<length;i++) {String s = path[i];if (s.length() == 0) {throw new IllegalArgumentException(""each path component must have length > 0 (got: \""\"")"");}int numChars = s.length();for(int j=0;j<numChars;j++) {char ch = s.charAt(j);if (ch == DELIM_CHAR || ch == ESCAPE_CHAR) {sb.append(ESCAPE_CHAR);}sb.append(ch);}sb.append(DELIM_CHAR);}sb.setLength(sb.length()-1);return sb.toString();}",public static String pathToStringString path int length if length  0 return StringBuilder sb  new StringBuilderforint i0ilengthi String s  pathiif slength  0 throw new IllegalArgumentExceptioneach path component must have length  0 got int numChars  slengthforint j0jnumCharsj char ch  scharAtjif ch  DELIMCHAR  ch  ESCAPECHAR sbappendESCAPECHARsbappendchsbappendDELIMCHARsbsetLengthsblength1return sbtoString
public CancelSpotInstanceRequestsRequest(java.util.List<String> spotInstanceRequestIds) {setSpotInstanceRequestIds(spotInstanceRequestIds);},public CancelSpotInstanceRequestsRequestjavautilListString spotInstanceRequestIds setSpotInstanceRequestIdsspotInstanceRequestIds
"public String toString() {StringBuilder sb = new StringBuilder();sb.append('[');for (byte[] b : table) {if (b == null)continue;if (sb.length() > 1)sb.append("" , ""); sb.append('""');sb.append(RawParseUtils.decode(b));sb.append('""');sb.append('(');sb.append(chainlength(b));sb.append(')');}sb.append(']');return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappendfor byte b  table if b  nullcontinueif sblength  1sbappend   sbappendsbappendRawParseUtilsdecodebsbappendsbappendsbappendchainlengthbsbappendsbappendreturn sbtoString
public GetConnectionResult getConnection(GetConnectionRequest request) {request = beforeClientExecution(request);return executeGetConnection(request);},public GetConnectionResult getConnectionGetConnectionRequest request request  beforeClientExecutionrequestreturn executeGetConnectionrequest
"public String toString() {return a+""..""+b;}",public String toString return ab
public AddNoteCommand notesAdd() {return new AddNoteCommand(repo);},public AddNoteCommand notesAdd return new AddNoteCommandrepo
"public static void fill(short[] array, int start, int end, short value) {Arrays.checkStartAndEnd(array.length, start, end);for (int i = start; i < end; i++) {array[i] = value;}}",public static void fillshort array int start int end short value ArrayscheckStartAndEndarraylength start endfor int i  start i  end i arrayi  value
public boolean equals(Object obj) {if (obj == this) {return true;}else if (!(obj instanceof LexerIndexedCustomAction)) {return false;}LexerIndexedCustomAction other = (LexerIndexedCustomAction)obj;return offset == other.offset&& action.equals(other.action);},public boolean equalsObject obj if obj  this return trueelse if obj instanceof LexerIndexedCustomAction return falseLexerIndexedCustomAction other  LexerIndexedCustomActionobjreturn offset  otheroffset actionequalsotheraction
"public DeleteNamespaceAuthorizationRequest() {super(""cr"", ""2016-06-07"", ""DeleteNamespaceAuthorization"", ""cr"");setUriPattern(""/namespace/[Namespace]/authorizations/[AuthorizeId]"");setMethod(MethodType.DELETE);}",public DeleteNamespaceAuthorizationRequest supercr 20160607 DeleteNamespaceAuthorization crsetUriPatternnamespaceNamespaceauthorizationsAuthorizeIdsetMethodMethodTypeDELETE
"public static final int author(byte[] b, int ptr) {final int sz = b.length;if (ptr == 0)ptr += 46; while (ptr < sz && b[ptr] == 'p')ptr += 48; return match(b, ptr, author);}",public static final int authorbyte b int ptr final int sz  blengthif ptr  0ptr  46 while ptr  sz  bptr  pptr  48 return matchb ptr author
public DescribeHostsResult describeHosts(DescribeHostsRequest request) {request = beforeClientExecution(request);return executeDescribeHosts(request);},public DescribeHostsResult describeHostsDescribeHostsRequest request request  beforeClientExecutionrequestreturn executeDescribeHostsrequest
"public void reset(byte[] bytes) {reset(bytes, 0, bytes.length);}",public void resetbyte bytes resetbytes 0 byteslength
"public OpenNLPChunkerFilterFactory(Map<String,String> args) {super(args);chunkerModelFile = get(args, CHUNKER_MODEL);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public OpenNLPChunkerFilterFactoryMapStringString args superargschunkerModelFile  getargs CHUNKERMODELif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public String toString() {StringBuilder r = new StringBuilder();r.append(""Ref[""); r.append(getName());r.append('=');r.append(ObjectId.toString(getObjectId()));r.append('(');r.append(updateIndex); r.append("")]""); return r.toString();}",public String toString StringBuilder r  new StringBuilderrappendRef rappendgetNamerappendrappendObjectIdtoStringgetObjectIdrappendrappendupdateIndex rappend return rtoString
public StartStreamEncryptionResult startStreamEncryption(StartStreamEncryptionRequest request) {request = beforeClientExecution(request);return executeStartStreamEncryption(request);},public StartStreamEncryptionResult startStreamEncryptionStartStreamEncryptionRequest request request  beforeClientExecutionrequestreturn executeStartStreamEncryptionrequest
"public DeleteCloudFrontOriginAccessIdentityRequest(String id, String ifMatch) {setId(id);setIfMatch(ifMatch);}",public DeleteCloudFrontOriginAccessIdentityRequestString id String ifMatch setIdidsetIfMatchifMatch
public int getWidth() {return mImage.getWidth();},public int getWidth return mImagegetWidth
public List<String> getUntrackedFolders() {LinkedList<String> ret = new LinkedList<>(untrackedFolders);if (!untrackedParentFolders.isEmpty()) {String toBeAdded = untrackedParentFolders.getLast();while (!ret.isEmpty() && ret.getLast().startsWith(toBeAdded))ret.removeLast();ret.addLast(toBeAdded);}return ret;},public ListString getUntrackedFolders LinkedListString ret  new LinkedListuntrackedFoldersif untrackedParentFoldersisEmpty String toBeAdded  untrackedParentFoldersgetLastwhile retisEmpty  retgetLaststartsWithtoBeAddedretremoveLastretaddLasttoBeAddedreturn ret
"public CredentialsProviderUserInfo(Session session,CredentialsProvider credentialsProvider) {this.uri = createURI(session);this.provider = credentialsProvider;}",public CredentialsProviderUserInfoSession sessionCredentialsProvider credentialsProvider thisuri  createURIsessionthisprovider  credentialsProvider
"public String toString() {return ""[SELECTION]\n"" +""    .pane            = "" + HexDump.byteToHex(getPane()) + ""\n"" +""    .activecellrow   = "" + HexDump.shortToHex(getActiveCellRow()) + ""\n"" +""    .activecellcol   = "" + HexDump.shortToHex(getActiveCellCol()) + ""\n"" +""    .activecellref   = "" + HexDump.shortToHex(getActiveCellRef()) + ""\n"" +""    .numrefs         = "" + HexDump.shortToHex(field_6_refs.length) + ""\n"" +""[/SELECTION]\n"";}",public String toString return SELECTIONn     pane               HexDumpbyteToHexgetPane  n     activecellrow      HexDumpshortToHexgetActiveCellRow  n     activecellcol      HexDumpshortToHexgetActiveCellCol  n     activecellref      HexDumpshortToHexgetActiveCellRef  n     numrefs            HexDumpshortToHexfield6refslength  n SELECTIONn
public static boolean isCellInternalDateFormatted(Cell cell) {if (cell == null) {return false;}boolean bDate = false;double d = cell.getNumericCellValue();if ( DateUtil.isValidExcelDate(d) ) {CellStyle style = cell.getCellStyle();int i = style.getDataFormat();bDate = isInternalDateFormat(i);}return bDate;},public static boolean isCellInternalDateFormattedCell cell if cell  null return falseboolean bDate  falsedouble d  cellgetNumericCellValueif  DateUtilisValidExcelDated  CellStyle style  cellgetCellStyleint i  stylegetDataFormatbDate  isInternalDateFormatireturn bDate
"public static String getSegmentsFile(List<String> files, boolean allowEmpty) {if (files.isEmpty()) {if (allowEmpty) {return null;} else {throw new IllegalStateException(""empty list of files not allowed"");}}String segmentsFile = files.remove(files.size() - 1);if (!segmentsFile.startsWith(IndexFileNames.SEGMENTS)) {throw new IllegalStateException(""last file to copy+sync must be segments_N but got "" + segmentsFile+ ""; check your Revision implementation!"");}return segmentsFile;}",public static String getSegmentsFileListString files boolean allowEmpty if filesisEmpty if allowEmpty return null else throw new IllegalStateExceptionempty list of files not allowedString segmentsFile  filesremovefilessize  1if segmentsFilestartsWithIndexFileNamesSEGMENTS throw new IllegalStateExceptionlast file to copysync must be segmentsN but got   segmentsFile  check your Revision implementationreturn segmentsFile
public static boolean hasMultibyte(String value) {if (value == null) {return false;}for (char c : value.toCharArray()) {if (c > 0xFF) {return true;}}return false;},public static boolean hasMultibyteString value if value  null return falsefor char c  valuetoCharArray if c  0xFF return truereturn false
"public static ObjectId fromString(String str) {if (str.length() != Constants.OBJECT_ID_STRING_LENGTH) {throw new InvalidObjectIdException(str);}return fromHexString(Constants.encodeASCII(str), 0);}",public static ObjectId fromStringString str if strlength  ConstantsOBJECTIDSTRINGLENGTH throw new InvalidObjectIdExceptionstrreturn fromHexStringConstantsencodeASCIIstr 0
public void reset() throws IOException {throw new IOException();},public void reset throws IOException throw new IOException
public GetReservedInstancesExchangeQuoteResult getReservedInstancesExchangeQuote(GetReservedInstancesExchangeQuoteRequest request) {request = beforeClientExecution(request);return executeGetReservedInstancesExchangeQuote(request);},public GetReservedInstancesExchangeQuoteResult getReservedInstancesExchangeQuoteGetReservedInstancesExchangeQuoteRequest request request  beforeClientExecutionrequestreturn executeGetReservedInstancesExchangeQuoterequest
public IntBuffer put(int c) {throw new ReadOnlyBufferException();},public IntBuffer putint c throw new ReadOnlyBufferException
public GetFolderPathResult getFolderPath(GetFolderPathRequest request) {request = beforeClientExecution(request);return executeGetFolderPath(request);},public GetFolderPathResult getFolderPathGetFolderPathRequest request request  beforeClientExecutionrequestreturn executeGetFolderPathrequest
public DeleteDirectConnectGatewayAssociationResult deleteDirectConnectGatewayAssociation(DeleteDirectConnectGatewayAssociationRequest request) {request = beforeClientExecution(request);return executeDeleteDirectConnectGatewayAssociation(request);},public DeleteDirectConnectGatewayAssociationResult deleteDirectConnectGatewayAssociationDeleteDirectConnectGatewayAssociationRequest request request  beforeClientExecutionrequestreturn executeDeleteDirectConnectGatewayAssociationrequest
public ByteBuffer putDouble(double value) {return putLong(Double.doubleToRawLongBits(value));},public ByteBuffer putDoubledouble value return putLongDoubledoubleToRawLongBitsvalue
public SearchContactsResult searchContacts(SearchContactsRequest request) {request = beforeClientExecution(request);return executeSearchContacts(request);},public SearchContactsResult searchContactsSearchContactsRequest request request  beforeClientExecutionrequestreturn executeSearchContactsrequest
@Override public boolean isEmpty() {return size == 0;},Override public boolean isEmpty return size  0
public CreatePartnerEventSourceResult createPartnerEventSource(CreatePartnerEventSourceRequest request) {request = beforeClientExecution(request);return executeCreatePartnerEventSource(request);},public CreatePartnerEventSourceResult createPartnerEventSourceCreatePartnerEventSourceRequest request request  beforeClientExecutionrequestreturn executeCreatePartnerEventSourcerequest
"public CreateNamespaceAuthorizationRequest() {super(""cr"", ""2016-06-07"", ""CreateNamespaceAuthorization"", ""cr"");setUriPattern(""/namespace/[Namespace]/authorizations"");setMethod(MethodType.PUT);}",public CreateNamespaceAuthorizationRequest supercr 20160607 CreateNamespaceAuthorization crsetUriPatternnamespaceNamespaceauthorizationssetMethodMethodTypePUT
public URIish setPass(String n) {final URIish r = new URIish(this);r.pass = n;return r;},public URIish setPassString n final URIish r  new URIishthisrpass  nreturn r
public void execute(Lexer lexer) {lexer.pushMode(mode);},public void executeLexer lexer lexerpushModemode
public CreateModelVersionResult createModelVersion(CreateModelVersionRequest request) {request = beforeClientExecution(request);return executeCreateModelVersion(request);},public CreateModelVersionResult createModelVersionCreateModelVersionRequest request request  beforeClientExecutionrequestreturn executeCreateModelVersionrequest
public UpdateServicePrimaryTaskSetResult updateServicePrimaryTaskSet(UpdateServicePrimaryTaskSetRequest request) {request = beforeClientExecution(request);return executeUpdateServicePrimaryTaskSet(request);},public UpdateServicePrimaryTaskSetResult updateServicePrimaryTaskSetUpdateServicePrimaryTaskSetRequest request request  beforeClientExecutionrequestreturn executeUpdateServicePrimaryTaskSetrequest
public LinearRegressionFunction(FUNCTION function) {this.function = function;},public LinearRegressionFunctionFUNCTION function thisfunction  function
public ATNConfig(ATNConfig old) { this.state = old.state;this.alt = old.alt;this.context = old.context;this.semanticContext = old.semanticContext;this.reachesIntoOuterContext = old.reachesIntoOuterContext;},public ATNConfigATNConfig old  thisstate  oldstatethisalt  oldaltthiscontext  oldcontextthissemanticContext  oldsemanticContextthisreachesIntoOuterContext  oldreachesIntoOuterContext
public DescribeEntitiesDetectionJobResult describeEntitiesDetectionJob(DescribeEntitiesDetectionJobRequest request) {request = beforeClientExecution(request);return executeDescribeEntitiesDetectionJob(request);},public DescribeEntitiesDetectionJobResult describeEntitiesDetectionJobDescribeEntitiesDetectionJobRequest request request  beforeClientExecutionrequestreturn executeDescribeEntitiesDetectionJobrequest
public AssociateDhcpOptionsRequest(String vpcId) {setVpcId(vpcId);},public AssociateDhcpOptionsRequestString vpcId setVpcIdvpcId
public ListChangedBlocksResult listChangedBlocks(ListChangedBlocksRequest request) {request = beforeClientExecution(request);return executeListChangedBlocks(request);},public ListChangedBlocksResult listChangedBlocksListChangedBlocksRequest request request  beforeClientExecutionrequestreturn executeListChangedBlocksrequest
public boolean removeFirstOccurrence(Object o) {return removeFirstOccurrenceImpl(o);},public boolean removeFirstOccurrenceObject o return removeFirstOccurrenceImplo
"public ArrayList<PerfTask> extractTasks() {ArrayList<PerfTask> res = new ArrayList<>();extractTasks(res, sequence);return res;}",public ArrayListPerfTask extractTasks ArrayListPerfTask res  new ArrayListextractTasksres sequencereturn res
public FacetsCollector(boolean keepScores) {this.keepScores = keepScores;},public FacetsCollectorboolean keepScores thiskeepScores  keepScores
public UpdateNodegroupVersionResult updateNodegroupVersion(UpdateNodegroupVersionRequest request) {request = beforeClientExecution(request);return executeUpdateNodegroupVersion(request);},public UpdateNodegroupVersionResult updateNodegroupVersionUpdateNodegroupVersionRequest request request  beforeClientExecutionrequestreturn executeUpdateNodegroupVersionrequest
"public DeleteAttributesRequest(String domainName, String itemName) {setDomainName(domainName);setItemName(itemName);}",public DeleteAttributesRequestString domainName String itemName setDomainNamedomainNamesetItemNameitemName
"public void clearDFA() {throw new UnsupportedOperationException(""This ATN simulator does not support clearing the DFA."");}",public void clearDFA throw new UnsupportedOperationExceptionThis ATN simulator does not support clearing the DFA
"public Field[] createIndexableFields(Shape shape) {if (shape instanceof Point)return createIndexableFields((Point) shape);throw new UnsupportedOperationException(""Can only index Point, not "" + shape);}",public Field createIndexableFieldsShape shape if shape instanceof Pointreturn createIndexableFieldsPoint shapethrow new UnsupportedOperationExceptionCan only index Point not   shape
public void untagResource(UntagResourceRequest request) {request = beforeClientExecution(request);executeUntagResource(request);},public void untagResourceUntagResourceRequest request request  beforeClientExecutionrequestexecuteUntagResourcerequest
public DBSecurityGroup createDBSecurityGroup(CreateDBSecurityGroupRequest request) {request = beforeClientExecution(request);return executeCreateDBSecurityGroup(request);},public DBSecurityGroup createDBSecurityGroupCreateDBSecurityGroupRequest request request  beforeClientExecutionrequestreturn executeCreateDBSecurityGrouprequest
"public boolean equals(Object obj) {if (this == obj) {return true;}if (obj == null) {return false;}if (getClass() != obj.getClass()) {return false;}ExpressionValueSource other = (ExpressionValueSource) obj;if (expression == null) {if (other.expression != null) {return false;}} else if (!expression.sourceText.equals(other.expression.sourceText)) {return false;}if (needsScores != other.needsScores) {return false;}if (!Arrays.equals(variables, other.variables)) {return false;}return true;}",public boolean equalsObject obj if this  obj return trueif obj  null return falseif getClass  objgetClass return falseExpressionValueSource other  ExpressionValueSource objif expression  null if otherexpression  null return false else if expressionsourceTextequalsotherexpressionsourceText return falseif needsScores  otherneedsScores return falseif Arraysequalsvariables othervariables return falsereturn true
public static String getPreferredEncoding() {return ISO_8859_1.name();},public static String getPreferredEncoding return ISO88591name
public synchronized IndexSearcher getIndexSearcher() {if (indexReader != null) {indexReader.incRef();}return indexSearcher;},public synchronized IndexSearcher getIndexSearcher if indexReader  null indexReaderincRefreturn indexSearcher
public boolean equals( Object o ) {return o instanceof German2Stemmer;},public boolean equals Object o  return o instanceof German2Stemmer
public FacetLabel(final String... components) {this.components = components;length = components.length;checkComponents();},public FacetLabelfinal String components thiscomponents  componentslength  componentslengthcheckComponents
public void visitContainedRecords(RecordVisitor rv) {if (_recs.isEmpty()) {return;}rv.visitRecord(_begin);for (int i = 0; i < _recs.size(); i++) {RecordBase rb = _recs.get(i);if (rb instanceof RecordAggregate) {((RecordAggregate) rb).visitContainedRecords(rv);} else {rv.visitRecord((org.apache.poi.hssf.record.Record) rb);}}rv.visitRecord(_end);},public void visitContainedRecordsRecordVisitor rv if recsisEmpty returnrvvisitRecordbeginfor int i  0 i  recssize i RecordBase rb  recsgetiif rb instanceof RecordAggregate RecordAggregate rbvisitContainedRecordsrv else rvvisitRecordorgapachepoihssfrecordRecord rbrvvisitRecordend
public void setDirCache(DirCache dc) {this.dircache = dc;implicitDirCache = false;},public void setDirCacheDirCache dc thisdircache  dcimplicitDirCache  false
"public long seek(BytesRef target) {long lo = 0;          long hi = fieldIndex.numIndexTerms - 1;while (hi >= lo) {long mid = (lo + hi) >>> 1;final long offset = fieldIndex.termOffsets.get(mid);final int length = (int) (fieldIndex.termOffsets.get(1+mid) - offset);termBytesReader.fillSlice(term, fieldIndex.termBytesStart + offset, length);int delta = target.compareTo(term);if (delta < 0) {hi = mid - 1;} else if (delta > 0) {lo = mid + 1;} else {assert mid >= 0;ord = mid*indexInterval;return fieldIndex.termsStart + fieldIndex.termsDictOffsets.get(mid);}}if (hi < 0) {assert hi == -1;hi = 0;}final long offset = fieldIndex.termOffsets.get(hi);final int length = (int) (fieldIndex.termOffsets.get(1+hi) - offset);termBytesReader.fillSlice(term, fieldIndex.termBytesStart + offset, length);ord = hi*indexInterval;return fieldIndex.termsStart + fieldIndex.termsDictOffsets.get(hi);}",public long seekBytesRef target long lo  0          long hi  fieldIndexnumIndexTerms  1while hi  lo long mid  lo  hi  1final long offset  fieldIndextermOffsetsgetmidfinal int length  int fieldIndextermOffsetsget1mid  offsettermBytesReaderfillSliceterm fieldIndextermBytesStart  offset lengthint delta  targetcompareTotermif delta  0 hi  mid  1 else if delta  0 lo  mid  1 else assert mid  0ord  midindexIntervalreturn fieldIndextermsStart  fieldIndextermsDictOffsetsgetmidif hi  0 assert hi  1hi  0final long offset  fieldIndextermOffsetsgethifinal int length  int fieldIndextermOffsetsget1hi  offsettermBytesReaderfillSliceterm fieldIndextermBytesStart  offset lengthord  hiindexIntervalreturn fieldIndextermsStart  fieldIndextermsDictOffsetsgethi
"public void write(byte[] b, int offset, int len) {int i=0;while(true) {int nWritableChars = Math.min(len - i, _ulrOutput.getAvailableSpace() / 1);for ( ; nWritableChars > 0; nWritableChars--) {_ulrOutput.writeByte(b[offset + i++]);}if (i >= len) {break;}writeContinue();}}",public void writebyte b int offset int len int i0whiletrue int nWritableChars  Mathminlen  i ulrOutputgetAvailableSpace  1for   nWritableChars  0 nWritableChars ulrOutputwriteByteboffset  iif i  len breakwriteContinue
"public FormatFlagsConversionMismatchException(String f, char c) {if (f == null) {throw new NullPointerException();}this.f = f;this.c = c;}",public FormatFlagsConversionMismatchExceptionString f char c if f  null throw new NullPointerExceptionthisf  fthisc  c
public List<Head> getNextHeads(char c) {return FileNameMatcher.EMPTY_HEAD_LIST;},public ListHead getNextHeadschar c return FileNameMatcherEMPTYHEADLIST
"public void addQueryBuilder(String nodeName, QueryBuilder builder) {queryFactory.addBuilder(nodeName, builder);}",public void addQueryBuilderString nodeName QueryBuilder builder queryFactoryaddBuildernodeName builder
public int defineDecisionState(DecisionState s) {decisionToState.add(s);s.decision = decisionToState.size()-1;return s.decision;},public int defineDecisionStateDecisionState s decisionToStateaddssdecision  decisionToStatesize1return sdecision
public void afterRefresh(boolean didRefresh) {refreshDone();},public void afterRefreshboolean didRefresh refreshDone
"public static final int prevLF(byte[] b, int ptr, char chrA) {if (ptr == b.length)--ptr;while (ptr >= 0) {final byte c = b[ptr--];if (c == chrA || c == '\n')return ptr;}return ptr;}",public static final int prevLFbyte b int ptr char chrA if ptr  blengthptrwhile ptr  0 final byte c  bptrif c  chrA  c  nreturn ptrreturn ptr
public ConsumeContentSourceTask(PerfRunData runData) {super(runData);source = runData.getContentSource();},public ConsumeContentSourceTaskPerfRunData runData superrunDatasource  runDatagetContentSource
public DescribeInstanceTypeOfferingsResult describeInstanceTypeOfferings(DescribeInstanceTypeOfferingsRequest request) {request = beforeClientExecution(request);return executeDescribeInstanceTypeOfferings(request);},public DescribeInstanceTypeOfferingsResult describeInstanceTypeOfferingsDescribeInstanceTypeOfferingsRequest request request  beforeClientExecutionrequestreturn executeDescribeInstanceTypeOfferingsrequest
public void clearDrawingGroups() {drawingGroups.clear();},public void clearDrawingGroups drawingGroupsclear
"public String formatDate(PersonIdent ident) {switch (format) {case RAW:int offset = ident.getTimeZoneOffset();String sign = offset < 0 ? ""-"" : ""+""; int offset2;if (offset < 0)offset2 = -offset;elseoffset2 = offset;int hours = offset2 / 60;int minutes = offset2 % 60;return String.format(""%d %s%02d%02d"", ident.getWhen().getTime() / 1000, sign, hours, minutes);case RELATIVE:return RelativeDateFormatter.format(ident.getWhen());case LOCALELOCAL:case LOCAL:dateTimeInstance.setTimeZone(SystemReader.getInstance().getTimeZone());return dateTimeInstance.format(ident.getWhen());case LOCALE:TimeZone tz = ident.getTimeZone();if (tz == null)tz = SystemReader.getInstance().getTimeZone();dateTimeInstance.setTimeZone(tz);dateTimeInstance2.setTimeZone(tz);return dateTimeInstance.format(ident.getWhen()) + "" "" + dateTimeInstance2.format(ident.getWhen());default:tz = ident.getTimeZone();if (tz == null)tz = SystemReader.getInstance().getTimeZone();dateTimeInstance.setTimeZone(ident.getTimeZone());return dateTimeInstance.format(ident.getWhen());}}",public String formatDatePersonIdent ident switch format case RAWint offset  identgetTimeZoneOffsetString sign  offset  0     int offset2if offset  0offset2  offsetelseoffset2  offsetint hours  offset2  60int minutes  offset2  60return Stringformatd s02d02d identgetWhengetTime  1000 sign hours minutescase RELATIVEreturn RelativeDateFormatterformatidentgetWhencase LOCALELOCALcase LOCALdateTimeInstancesetTimeZoneSystemReadergetInstancegetTimeZonereturn dateTimeInstanceformatidentgetWhencase LOCALETimeZone tz  identgetTimeZoneif tz  nulltz  SystemReadergetInstancegetTimeZonedateTimeInstancesetTimeZonetzdateTimeInstance2setTimeZonetzreturn dateTimeInstanceformatidentgetWhen     dateTimeInstance2formatidentgetWhendefaulttz  identgetTimeZoneif tz  nulltz  SystemReadergetInstancegetTimeZonedateTimeInstancesetTimeZoneidentgetTimeZonereturn dateTimeInstanceformatidentgetWhen
public DeregisterStreamConsumerResult deregisterStreamConsumer(DeregisterStreamConsumerRequest request) {request = beforeClientExecution(request);return executeDeregisterStreamConsumer(request);},public DeregisterStreamConsumerResult deregisterStreamConsumerDeregisterStreamConsumerRequest request request  beforeClientExecutionrequestreturn executeDeregisterStreamConsumerrequest
public boolean equals(Object obj) {if (this == obj)return true;if (obj == null)return false;if (getClass() != obj.getClass())return false;return true;},public boolean equalsObject obj if this  objreturn trueif obj  nullreturn falseif getClass  objgetClassreturn falsereturn true
"public ByteBuffer asReadOnlyBuffer() {return ReadOnlyHeapByteBuffer.copy(this, mark);}",public ByteBuffer asReadOnlyBuffer return ReadOnlyHeapByteBuffercopythis mark
public long ramBytesUsed() {long sizeInBytes = 0;for(FieldIndexData entry : fields.values()) {sizeInBytes += entry.ramBytesUsed();}return sizeInBytes;},public long ramBytesUsed long sizeInBytes  0forFieldIndexData entry  fieldsvalues sizeInBytes  entryramBytesUsedreturn sizeInBytes
public CreateTransitGatewayRouteTableResult createTransitGatewayRouteTable(CreateTransitGatewayRouteTableRequest request) {request = beforeClientExecution(request);return executeCreateTransitGatewayRouteTable(request);},public CreateTransitGatewayRouteTableResult createTransitGatewayRouteTableCreateTransitGatewayRouteTableRequest request request  beforeClientExecutionrequestreturn executeCreateTransitGatewayRouteTablerequest
"public int fillFields(byte[] data, int offset, EscherRecordFactory recordFactory) {int bytesRemaining = readHeader( data, offset );int pos            = offset + 8;int size           = 0;field_1_color1 =  LittleEndian.getInt( data, pos + size );size+=4;field_2_color2 =  LittleEndian.getInt( data, pos + size );size+=4;field_3_color3 =  LittleEndian.getInt( data, pos + size );size+=4;field_4_color4 =  LittleEndian.getInt( data, pos + size );size+=4;bytesRemaining -= size;if (bytesRemaining != 0) {throw new RecordFormatException(""Expecting no remaining data but got "" + bytesRemaining + "" byte(s)."");}return 8 + size + bytesRemaining;}",public int fillFieldsbyte data int offset EscherRecordFactory recordFactory int bytesRemaining  readHeader data offset int pos             offset  8int size            0field1color1   LittleEndiangetInt data pos  size size4field2color2   LittleEndiangetInt data pos  size size4field3color3   LittleEndiangetInt data pos  size size4field4color4   LittleEndiangetInt data pos  size size4bytesRemaining  sizeif bytesRemaining  0 throw new RecordFormatExceptionExpecting no remaining data but got   bytesRemaining   bytesreturn 8  size  bytesRemaining
public CharSequence[] getMultiFields() {return getQueryConfigHandler().get(ConfigurationKeys.MULTI_FIELDS);},public CharSequence getMultiFields return getQueryConfigHandlergetConfigurationKeysMULTIFIELDS
public boolean hasNext() {return returnedNumber < getObjectCount();},public boolean hasNext return returnedNumber  getObjectCount
public String toString() {return SpatialArgsParser.writeSpatialArgs(this);},public String toString return SpatialArgsParserwriteSpatialArgsthis
public static RowRecord createRow(int rowNumber) {return new RowRecord(rowNumber);},public static RowRecord createRowint rowNumber return new RowRecordrowNumber
"public void serialize(LittleEndianOutput out) {out.writeByte(field_1_last_column_index);out.writeByte(field_2_first_column_index);out.writeShort(field_3_row_index);ConstantValueParser.encode(out, field_4_constant_values);}",public void serializeLittleEndianOutput out outwriteBytefield1lastcolumnindexoutwriteBytefield2firstcolumnindexoutwriteShortfield3rowindexConstantValueParserencodeout field4constantvalues
public DescribeHostReservationOfferingsResult describeHostReservationOfferings(DescribeHostReservationOfferingsRequest request) {request = beforeClientExecution(request);return executeDescribeHostReservationOfferings(request);},public DescribeHostReservationOfferingsResult describeHostReservationOfferingsDescribeHostReservationOfferingsRequest request request  beforeClientExecutionrequestreturn executeDescribeHostReservationOfferingsrequest
public void setEmpty() {field_2_first_col = 0;field_3_last_col = 0;},public void setEmpty field2firstcol  0field3lastcol  0
public CancelBundleTaskResult cancelBundleTask(CancelBundleTaskRequest request) {request = beforeClientExecution(request);return executeCancelBundleTask(request);},public CancelBundleTaskResult cancelBundleTaskCancelBundleTaskRequest request request  beforeClientExecutionrequestreturn executeCancelBundleTaskrequest
"public ShingleFilter(TokenStream input, String tokenType) {this(input, DEFAULT_MIN_SHINGLE_SIZE, DEFAULT_MAX_SHINGLE_SIZE);setTokenType(tokenType);}",public ShingleFilterTokenStream input String tokenType thisinput DEFAULTMINSHINGLESIZE DEFAULTMAXSHINGLESIZEsetTokenTypetokenType
"public MergeException(String message, Directory dir) {super(message);this.dir = dir;}",public MergeExceptionString message Directory dir supermessagethisdir  dir
public TestDNSAnswerResult testDNSAnswer(TestDNSAnswerRequest request) {request = beforeClientExecution(request);return executeTestDNSAnswer(request);},public TestDNSAnswerResult testDNSAnswerTestDNSAnswerRequest request request  beforeClientExecutionrequestreturn executeTestDNSAnswerrequest
public String getFieldAsString() {return field.toString();},public String getFieldAsString return fieldtoString
public GetMasterAccountResult getMasterAccount(GetMasterAccountRequest request) {request = beforeClientExecution(request);return executeGetMasterAccount(request);},public GetMasterAccountResult getMasterAccountGetMasterAccountRequest request request  beforeClientExecutionrequestreturn executeGetMasterAccountrequest
public int getIndexVersion() {return indexVersion;},public int getIndexVersion return indexVersion
public GetAdmChannelResult getAdmChannel(GetAdmChannelRequest request) {request = beforeClientExecution(request);return executeGetAdmChannel(request);},public GetAdmChannelResult getAdmChannelGetAdmChannelRequest request request  beforeClientExecutionrequestreturn executeGetAdmChannelrequest
public boolean equals(Object obj) {if (! (obj instanceof BasicQueryFactory))return false;BasicQueryFactory other = (BasicQueryFactory) obj;return atMax() == other.atMax();},public boolean equalsObject obj if  obj instanceof BasicQueryFactoryreturn falseBasicQueryFactory other  BasicQueryFactory objreturn atMax  otheratMax
public byte readByte() {return (byte)readUByte();},public byte readByte return bytereadUByte
public DeletePolicyResult deletePolicy(DeletePolicyRequest request) {request = beforeClientExecution(request);return executeDeletePolicy(request);},public DeletePolicyResult deletePolicyDeletePolicyRequest request request  beforeClientExecutionrequestreturn executeDeletePolicyrequest
public String get(Object key) {return idMap.get(key);},public String getObject key return idMapgetkey
public void setNonLocalizedMessage(Message message) {this.message = message;},public void setNonLocalizedMessageMessage message thismessage  message
public DescribeClusterVersionsResult describeClusterVersions() {return describeClusterVersions(new DescribeClusterVersionsRequest());},public DescribeClusterVersionsResult describeClusterVersions return describeClusterVersionsnew DescribeClusterVersionsRequest
"public void onPostReceive(ReceivePack rp,Collection<ReceiveCommand> commands) {for (int i = 0; i < count; i++)hooks[i].onPostReceive(rp, commands);}",public void onPostReceiveReceivePack rpCollectionReceiveCommand commands for int i  0 i  count ihooksionPostReceiverp commands
"public String toFormulaString(String[] operands) {StringBuilder buffer = new StringBuilder();buffer.append(operands[ 0 ]);buffer.append(""^"");buffer.append(operands[ 1 ]);return buffer.toString();}",public String toFormulaStringString operands StringBuilder buffer  new StringBuilderbufferappendoperands 0 bufferappendbufferappendoperands 1 return buffertoString
"public int stem(char s[], int len) {if (len < 6)return len;if (s[len-1] == 'x') {if (s[len-3] == 'a' && s[len-2] == 'u')s[len-2] = 'l';return len - 1;}if (s[len-1] == 's') len--;if (s[len-1] == 'r') len--;if (s[len-1] == 'e') len--;if (s[len-1] == 'é') len--;if (s[len-1] == s[len-2] && Character.isLetter(s[len-1])) len--;return len;}",public int stemchar s int len if len  6return lenif slen1  x if slen3  a  slen2  uslen2  lreturn len  1if slen1  s lenif slen1  r lenif slen1  e lenif slen1  é lenif slen1  slen2  CharacterisLetterslen1 lenreturn len
public static RkRec[] parseRKs(RecordInputStream in) {int nItems = (in.remaining()-2) / ENCODED_SIZE;RkRec[] retval = new RkRec[nItems];for (int i=0; i<nItems; i++) {retval[i] = new RkRec(in);}return retval;},public static RkRec parseRKsRecordInputStream in int nItems  inremaining2  ENCODEDSIZERkRec retval  new RkRecnItemsfor int i0 inItems i retvali  new RkRecinreturn retval
public boolean deliverSelfNotifications() {return true;},public boolean deliverSelfNotifications return true
public CreateWorkteamResult createWorkteam(CreateWorkteamRequest request) {request = beforeClientExecution(request);return executeCreateWorkteam(request);},public CreateWorkteamResult createWorkteamCreateWorkteamRequest request request  beforeClientExecutionrequestreturn executeCreateWorkteamrequest
"public ProfilingATNSimulator(Parser parser) {super(parser,parser.getInterpreter().atn,parser.getInterpreter().decisionToDFA,parser.getInterpreter().sharedContextCache);numDecisions = atn.decisionToState.size();decisions = new DecisionInfo[numDecisions];for (int i=0; i<numDecisions; i++) {decisions[i] = new DecisionInfo(i);}}",public ProfilingATNSimulatorParser parser superparserparsergetInterpreteratnparsergetInterpreterdecisionToDFAparsergetInterpretersharedContextCachenumDecisions  atndecisionToStatesizedecisions  new DecisionInfonumDecisionsfor int i0 inumDecisions i decisionsi  new DecisionInfoi
public DescribeDeliveryStreamResult describeDeliveryStream(DescribeDeliveryStreamRequest request) {request = beforeClientExecution(request);return executeDescribeDeliveryStream(request);},public DescribeDeliveryStreamResult describeDeliveryStreamDescribeDeliveryStreamRequest request request  beforeClientExecutionrequestreturn executeDescribeDeliveryStreamrequest
public boolean hasNext() {return link.next != list.voidLink;},public boolean hasNext return linknext  listvoidLink
public static double product(double[] values) {double product = 0;if (values!=null && values.length > 0) {product = 1;for (double value : values) {product *= value;}}return product;},public static double productdouble values double product  0if valuesnull  valueslength  0 product  1for double value  values product  valuereturn product
"public RebaseCommand setUpstream(String upstream)throws RefNotFoundException {try {ObjectId upstreamId = repo.resolve(upstream);if (upstreamId == null)throw new RefNotFoundException(MessageFormat.format(JGitText.get().refNotResolved, upstream));upstreamCommit = walk.parseCommit(repo.resolve(upstream));upstreamCommitName = upstream;return this;} catch (IOException ioe) {throw new JGitInternalException(ioe.getMessage(), ioe);}}",public RebaseCommand setUpstreamString upstreamthrows RefNotFoundException try ObjectId upstreamId  reporesolveupstreamif upstreamId  nullthrow new RefNotFoundExceptionMessageFormatformatJGitTextgetrefNotResolved upstreamupstreamCommit  walkparseCommitreporesolveupstreamupstreamCommitName  upstreamreturn this catch IOException ioe throw new JGitInternalExceptionioegetMessage ioe
"public ATN(ATNType grammarType, int maxTokenType) {this.grammarType = grammarType;this.maxTokenType = maxTokenType;}",public ATNATNType grammarType int maxTokenType thisgrammarType  grammarTypethismaxTokenType  maxTokenType
"public HyphenatedWordsFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public HyphenatedWordsFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public GetBlueprintsResult getBlueprints(GetBlueprintsRequest request) {request = beforeClientExecution(request);return executeGetBlueprints(request);},public GetBlueprintsResult getBlueprintsGetBlueprintsRequest request request  beforeClientExecutionrequestreturn executeGetBlueprintsrequest
"public synchronized StringBuffer append(StringBuffer sb) {if (sb == null) {appendNull();} else {synchronized (sb) {append0(sb.getValue(), 0, sb.length());}}return this;}",public synchronized StringBuffer appendStringBuffer sb if sb  null appendNull else synchronized sb append0sbgetValue 0 sblengthreturn this
public EngineDefaults describeEngineDefaultClusterParameters(DescribeEngineDefaultClusterParametersRequest request) {request = beforeClientExecution(request);return executeDescribeEngineDefaultClusterParameters(request);},public EngineDefaults describeEngineDefaultClusterParametersDescribeEngineDefaultClusterParametersRequest request request  beforeClientExecutionrequestreturn executeDescribeEngineDefaultClusterParametersrequest
public DeleteLaunchTemplateResult deleteLaunchTemplate(DeleteLaunchTemplateRequest request) {request = beforeClientExecution(request);return executeDeleteLaunchTemplate(request);},public DeleteLaunchTemplateResult deleteLaunchTemplateDeleteLaunchTemplateRequest request request  beforeClientExecutionrequestreturn executeDeleteLaunchTemplaterequest
public Object toObject() {assert exists || (false == value);return exists ? value : null;},public Object toObject assert exists  false  valuereturn exists  value  null
public ObjectReader newObjectReader() {return getObjectDatabase().newReader();},public ObjectReader newObjectReader return getObjectDatabasenewReader
"public String toString() {String nl = System.getProperty(""line.separtor"");StringBuilder result = new StringBuilder();result.append('[').append(getRecordName()).append(']').append(nl);for (EscherRecord escherRecord : getEscherRecords()) {result.append(escherRecord);}result.append(""[/"").append(getRecordName()).append(']').append(nl);return result.toString();}",public String toString String nl  SystemgetPropertylinesepartorStringBuilder result  new StringBuilderresultappendappendgetRecordNameappendappendnlfor EscherRecord escherRecord  getEscherRecords resultappendescherRecordresultappendappendgetRecordNameappendappendnlreturn resulttoString
public GetSnapshotBlockResult getSnapshotBlock(GetSnapshotBlockRequest request) {request = beforeClientExecution(request);return executeGetSnapshotBlock(request);},public GetSnapshotBlockResult getSnapshotBlockGetSnapshotBlockRequest request request  beforeClientExecutionrequestreturn executeGetSnapshotBlockrequest
"public HSSFComment createComment(HSSFAnchor anchor) {HSSFComment shape = new HSSFComment(null, anchor);addShape(shape);onCreate(shape);return shape;}",public HSSFComment createCommentHSSFAnchor anchor HSSFComment shape  new HSSFCommentnull anchoraddShapeshapeonCreateshapereturn shape
public CopySnapshotResult copySnapshot(CopySnapshotRequest request) {request = beforeClientExecution(request);return executeCopySnapshot(request);},public CopySnapshotResult copySnapshotCopySnapshotRequest request request  beforeClientExecutionrequestreturn executeCopySnapshotrequest
"public String toString() {return ""<quotedfield start='"" + this.begin + ""' end='"" + this.end+ ""' field='"" + this.field + ""' term='"" + this.text + ""'/>"";}",public String toString return quotedfield start  thisbegin   end  thisend  field  thisfield   term  thistext  
public void write(int b) throws IOException {throw new IllegalStateException(JGitText.get().writingNotPermitted);},public void writeint b throws IOException throw new IllegalStateExceptionJGitTextgetwritingNotPermitted
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {try {String needle = TextFunction.evaluateStringArg(arg0, srcRowIndex, srcColumnIndex);String haystack = TextFunction.evaluateStringArg(arg1, srcRowIndex, srcColumnIndex);return eval(haystack, needle, 0);} catch (EvaluationException e) {return e.getErrorEval();}}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1 try String needle  TextFunctionevaluateStringArgarg0 srcRowIndex srcColumnIndexString haystack  TextFunctionevaluateStringArgarg1 srcRowIndex srcColumnIndexreturn evalhaystack needle 0 catch EvaluationException e return egetErrorEval
"public NumberMatcher(double value, CmpOp operator) {super(operator);_value = value;}",public NumberMatcherdouble value CmpOp operator superoperatorvalue  value
"public GroupingSearch setCachingInMB(double maxCacheRAMMB, boolean cacheScores) {this.maxCacheRAMMB = maxCacheRAMMB;this.maxDocsToCache = null;this.cacheScores = cacheScores;return this;}",public GroupingSearch setCachingInMBdouble maxCacheRAMMB boolean cacheScores thismaxCacheRAMMB  maxCacheRAMMBthismaxDocsToCache  nullthiscacheScores  cacheScoresreturn this
public DescribeRegionsResult describeRegions(DescribeRegionsRequest request) {request = beforeClientExecution(request);return executeDescribeRegions(request);},public DescribeRegionsResult describeRegionsDescribeRegionsRequest request request  beforeClientExecutionrequestreturn executeDescribeRegionsrequest
public ListApplicationRevisionsResult listApplicationRevisions(ListApplicationRevisionsRequest request) {request = beforeClientExecution(request);return executeListApplicationRevisions(request);},public ListApplicationRevisionsResult listApplicationRevisionsListApplicationRevisionsRequest request request  beforeClientExecutionrequestreturn executeListApplicationRevisionsrequest
"public int set(int index, long[] arr, int off, int len) {long max = 0;for (int i = off, end = off + len; i < end; ++i) {max |= arr[i];}ensureCapacity(max);return current.set(index, arr, off, len);}",public int setint index long arr int off int len long max  0for int i  off end  off  len i  end i max  arriensureCapacitymaxreturn currentsetindex arr off len
public MutableValue duplicate() {MutableValueDate v = new MutableValueDate();v.value = this.value;v.exists = this.exists;return v;},public MutableValue duplicate MutableValueDate v  new MutableValueDatevvalue  thisvaluevexists  thisexistsreturn v
public DeleteUserResult deleteUser(DeleteUserRequest request) {request = beforeClientExecution(request);return executeDeleteUser(request);},public DeleteUserResult deleteUserDeleteUserRequest request request  beforeClientExecutionrequestreturn executeDeleteUserrequest
public String getPath() {return path;},public String getPath return path
public ListVerifiedEmailAddressesResult listVerifiedEmailAddresses() {return listVerifiedEmailAddresses(new ListVerifiedEmailAddressesRequest());},public ListVerifiedEmailAddressesResult listVerifiedEmailAddresses return listVerifiedEmailAddressesnew ListVerifiedEmailAddressesRequest
public DescribeStackResourceResult describeStackResource(DescribeStackResourceRequest request) {request = beforeClientExecution(request);return executeDescribeStackResource(request);},public DescribeStackResourceResult describeStackResourceDescribeStackResourceRequest request request  beforeClientExecutionrequestreturn executeDescribeStackResourcerequest
public MetricsTagPredicate(Tag tag) {this.tag = tag;},public MetricsTagPredicateTag tag thistag  tag
public void remove() {if (last == null) {throw new IllegalStateException();}removeInternal(last);expectedModCount = modCount;last = null;},public void remove if last  null throw new IllegalStateExceptionremoveInternallastexpectedModCount  modCountlast  null
public void setExecutor(Executor executor) {this.executor = executor;},public void setExecutorExecutor executor thisexecutor  executor
public boolean hasDirectoryEntry() {EmbeddedObjectRefSubRecord subRecord = findObjectRecord();Integer streamId = subRecord.getStreamId();return streamId != null && streamId.intValue() != 0;},public boolean hasDirectoryEntry EmbeddedObjectRefSubRecord subRecord  findObjectRecordInteger streamId  subRecordgetStreamIdreturn streamId  null  streamIdintValue  0
"public K higherKey(K key) {Entry<K, V> entry = findBounded(key, HIGHER);return entry != null ? entry.getKey() : null;}",public K higherKeyK key EntryK V entry  findBoundedkey HIGHERreturn entry  null  entrygetKey  null
public void exitRule() {if ( matchedEOF ) {_ctx.stop = _input.LT(1); }else {_ctx.stop = _input.LT(-1); }if ( _parseListeners != null) triggerExitRuleEvent();setState(_ctx.invokingState);_ctx = (ParserRuleContext)_ctx.parent;},public void exitRule if  matchedEOF  ctxstop  inputLT1 else ctxstop  inputLT1 if  parseListeners  null triggerExitRuleEventsetStatectxinvokingStatectx  ParserRuleContextctxparent
public DeleteTrafficPolicyInstanceResult deleteTrafficPolicyInstance(DeleteTrafficPolicyInstanceRequest request) {request = beforeClientExecution(request);return executeDeleteTrafficPolicyInstance(request);},public DeleteTrafficPolicyInstanceResult deleteTrafficPolicyInstanceDeleteTrafficPolicyInstanceRequest request request  beforeClientExecutionrequestreturn executeDeleteTrafficPolicyInstancerequest
"public boolean check(final int level) {int currentLevel;try {currentLevel = Integer.parseInt(System.getProperty(""poi.log.level"", WARN + """"));} catch (SecurityException e) {currentLevel = POILogger.DEBUG;}return level >= currentLevel;}",public boolean checkfinal int level int currentLeveltry currentLevel  IntegerparseIntSystemgetPropertypoiloglevel WARN   catch SecurityException e currentLevel  POILoggerDEBUGreturn level  currentLevel
public ShortBuffer put(short c) {if (position == limit) {throw new BufferOverflowException();}backingArray[offset + position++] = c;return this;},public ShortBuffer putshort c if position  limit throw new BufferOverflowExceptionbackingArrayoffset  position  creturn this
public DeletePublicKeyResult deletePublicKey(DeletePublicKeyRequest request) {request = beforeClientExecution(request);return executeDeletePublicKey(request);},public DeletePublicKeyResult deletePublicKeyDeletePublicKeyRequest request request  beforeClientExecutionrequestreturn executeDeletePublicKeyrequest
"public ObjectId idFor(int type, byte[] data) {return delegate().idFor(type, data);}",public ObjectId idForint type byte data return delegateidFortype data
public DeleteDBProxyResult deleteDBProxy(DeleteDBProxyRequest request) {request = beforeClientExecution(request);return executeDeleteDBProxy(request);},public DeleteDBProxyResult deleteDBProxyDeleteDBProxyRequest request request  beforeClientExecutionrequestreturn executeDeleteDBProxyrequest
public void add(int n) {if (count == entries.length)grow();entries[count++] = n;},public void addint n if count  entrieslengthgrowentriescount  n
"public PortugueseStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public PortugueseStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public DisconnectParticipantResult disconnectParticipant(DisconnectParticipantRequest request) {request = beforeClientExecution(request);return executeDisconnectParticipant(request);},public DisconnectParticipantResult disconnectParticipantDisconnectParticipantRequest request request  beforeClientExecutionrequestreturn executeDisconnectParticipantrequest
public ObjectId getPeeledObjectId() {return null;},public ObjectId getPeeledObjectId return null
public DeleteParameterGroupResult deleteParameterGroup(DeleteParameterGroupRequest request) {request = beforeClientExecution(request);return executeDeleteParameterGroup(request);},public DeleteParameterGroupResult deleteParameterGroupDeleteParameterGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteParameterGrouprequest
public TextRecord(RecordInputStream in) {field_1_horizontalAlignment = in.readByte();field_2_verticalAlignment   = in.readByte();field_3_displayMode         = in.readShort();field_4_rgbColor            = in.readInt();field_5_x                   = in.readInt();field_6_y                   = in.readInt();field_7_width               = in.readInt();field_8_height              = in.readInt();field_9_options1            = in.readShort();field_10_indexOfColorValue  = in.readShort();field_11_options2           = in.readShort();field_12_textRotation       = in.readShort();},public TextRecordRecordInputStream in field1horizontalAlignment  inreadBytefield2verticalAlignment    inreadBytefield3displayMode          inreadShortfield4rgbColor             inreadIntfield5x                    inreadIntfield6y                    inreadIntfield7width                inreadIntfield8height               inreadIntfield9options1             inreadShortfield10indexOfColorValue   inreadShortfield11options2            inreadShortfield12textRotation        inreadShort
public ReflogCommand setRef(String ref) {checkCallable();this.ref = ref;return this;},public ReflogCommand setRefString ref checkCallablethisref  refreturn this
@Override public boolean contains(Object object) {Object[] a = array;int s = size;if (object != null) {for (int i = 0; i < s; i++) {if (object.equals(a[i])) {return true;}}} else {for (int i = 0; i < s; i++) {if (a[i] == null) {return true;}}}return false;},Override public boolean containsObject object Object a  arrayint s  sizeif object  null for int i  0 i  s i if objectequalsai return true else for int i  0 i  s i if ai  null return truereturn false
public CreateFpgaImageResult createFpgaImage(CreateFpgaImageRequest request) {request = beforeClientExecution(request);return executeCreateFpgaImage(request);},public CreateFpgaImageResult createFpgaImageCreateFpgaImageRequest request request  beforeClientExecutionrequestreturn executeCreateFpgaImagerequest
public DescribeAggregateIdFormatResult describeAggregateIdFormat(DescribeAggregateIdFormatRequest request) {request = beforeClientExecution(request);return executeDescribeAggregateIdFormat(request);},public DescribeAggregateIdFormatResult describeAggregateIdFormatDescribeAggregateIdFormatRequest request request  beforeClientExecutionrequestreturn executeDescribeAggregateIdFormatrequest
public ListMultipartUploadsRequest(String vaultName) {setVaultName(vaultName);},public ListMultipartUploadsRequestString vaultName setVaultNamevaultName
"public DeleteRepoRequest() {super(""cr"", ""2016-06-07"", ""DeleteRepo"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]"");setMethod(MethodType.DELETE);}",public DeleteRepoRequest supercr 20160607 DeleteRepo crsetUriPatternreposRepoNamespaceRepoNamesetMethodMethodTypeDELETE
public static BOFRecord createSheetBOF() {return new BOFRecord(TYPE_WORKSHEET);},public static BOFRecord createSheetBOF return new BOFRecordTYPEWORKSHEET
"public FloatBuffer put(float[] src, int srcOffset, int floatCount) {byteBuffer.limit(limit * SizeOf.FLOAT);byteBuffer.position(position * SizeOf.FLOAT);if (byteBuffer instanceof ReadWriteDirectByteBuffer) {((ReadWriteDirectByteBuffer) byteBuffer).put(src, srcOffset, floatCount);} else {((ReadWriteHeapByteBuffer) byteBuffer).put(src, srcOffset, floatCount);}this.position += floatCount;return this;}",public FloatBuffer putfloat src int srcOffset int floatCount byteBufferlimitlimit  SizeOfFLOATbyteBufferpositionposition  SizeOfFLOATif byteBuffer instanceof ReadWriteDirectByteBuffer ReadWriteDirectByteBuffer byteBufferputsrc srcOffset floatCount else ReadWriteHeapByteBuffer byteBufferputsrc srcOffset floatCountthisposition  floatCountreturn this
public void execute(Lexer lexer) {lexer.popMode();},public void executeLexer lexer lexerpopMode
"public DeleteImageRequest() {super(""cr"", ""2016-06-07"", ""DeleteImage"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/tags/[Tag]"");setMethod(MethodType.DELETE);}",public DeleteImageRequest supercr 20160607 DeleteImage crsetUriPatternreposRepoNamespaceRepoNametagsTagsetMethodMethodTypeDELETE
public CreateImageBuilderResult createImageBuilder(CreateImageBuilderRequest request) {request = beforeClientExecution(request);return executeCreateImageBuilder(request);},public CreateImageBuilderResult createImageBuilderCreateImageBuilderRequest request request  beforeClientExecutionrequestreturn executeCreateImageBuilderrequest
public void serialize(LittleEndianOutput out) {out.writeShort(getRow());out.writeShort(getColumn());out.writeShort(getXFIndex());},public void serializeLittleEndianOutput out outwriteShortgetRowoutwriteShortgetColumnoutwriteShortgetXFIndex
public UpdateSegmentResult updateSegment(UpdateSegmentRequest request) {request = beforeClientExecution(request);return executeUpdateSegment(request);},public UpdateSegmentResult updateSegmentUpdateSegmentRequest request request  beforeClientExecutionrequestreturn executeUpdateSegmentrequest
public DescribeSnapshotsResult describeSnapshots() {return describeSnapshots(new DescribeSnapshotsRequest());},public DescribeSnapshotsResult describeSnapshots return describeSnapshotsnew DescribeSnapshotsRequest
public AddNoteCommand setObjectId(RevObject id) {checkCallable();this.id = id;return this;},public AddNoteCommand setObjectIdRevObject id checkCallablethisid  idreturn this
public String toString() {return path;},public String toString return path
public GetMetricStatisticsResult getMetricStatistics(GetMetricStatisticsRequest request) {request = beforeClientExecution(request);return executeGetMetricStatistics(request);},public GetMetricStatisticsResult getMetricStatisticsGetMetricStatisticsRequest request request  beforeClientExecutionrequestreturn executeGetMetricStatisticsrequest
public DescribeAutoScalingInstancesResult describeAutoScalingInstances(DescribeAutoScalingInstancesRequest request) {request = beforeClientExecution(request);return executeDescribeAutoScalingInstances(request);},public DescribeAutoScalingInstancesResult describeAutoScalingInstancesDescribeAutoScalingInstancesRequest request request  beforeClientExecutionrequestreturn executeDescribeAutoScalingInstancesrequest
public TokenFilter create(TokenStream input) {return new KStemFilter(input);},public TokenFilter createTokenStream input return new KStemFilterinput
"public CreateEnvironmentRequest(String applicationName, String environmentName) {setApplicationName(applicationName);setEnvironmentName(environmentName);}",public CreateEnvironmentRequestString applicationName String environmentName setApplicationNameapplicationNamesetEnvironmentNameenvironmentName
public static LongBuffer allocate(int capacity) {if (capacity < 0) {throw new IllegalArgumentException();}return new ReadWriteLongArrayBuffer(capacity);},public static LongBuffer allocateint capacity if capacity  0 throw new IllegalArgumentExceptionreturn new ReadWriteLongArrayBuffercapacity
public GetIdentityMailFromDomainAttributesResult getIdentityMailFromDomainAttributes(GetIdentityMailFromDomainAttributesRequest request) {request = beforeClientExecution(request);return executeGetIdentityMailFromDomainAttributes(request);},public GetIdentityMailFromDomainAttributesResult getIdentityMailFromDomainAttributesGetIdentityMailFromDomainAttributesRequest request request  beforeClientExecutionrequestreturn executeGetIdentityMailFromDomainAttributesrequest
public boolean isForce() {return force;},public boolean isForce return force
public DescribeImageScanFindingsResult describeImageScanFindings(DescribeImageScanFindingsRequest request) {request = beforeClientExecution(request);return executeDescribeImageScanFindings(request);},public DescribeImageScanFindingsResult describeImageScanFindingsDescribeImageScanFindingsRequest request request  beforeClientExecutionrequestreturn executeDescribeImageScanFindingsrequest
public SendContactMethodVerificationResult sendContactMethodVerification(SendContactMethodVerificationRequest request) {request = beforeClientExecution(request);return executeSendContactMethodVerification(request);},public SendContactMethodVerificationResult sendContactMethodVerificationSendContactMethodVerificationRequest request request  beforeClientExecutionrequestreturn executeSendContactMethodVerificationrequest
public DeleteReceiptFilterResult deleteReceiptFilter(DeleteReceiptFilterRequest request) {request = beforeClientExecution(request);return executeDeleteReceiptFilter(request);},public DeleteReceiptFilterResult deleteReceiptFilterDeleteReceiptFilterRequest request request  beforeClientExecutionrequestreturn executeDeleteReceiptFilterrequest
"public void updateFormulaResult(ValueEval result, CellCacheEntry[] sensitiveInputCells, FormulaUsedBlankCellSet usedBlankAreas) {updateValue(result);setSensitiveInputCells(sensitiveInputCells);_usedBlankCellGroup = usedBlankAreas;}",public void updateFormulaResultValueEval result CellCacheEntry sensitiveInputCells FormulaUsedBlankCellSet usedBlankAreas updateValueresultsetSensitiveInputCellssensitiveInputCellsusedBlankCellGroup  usedBlankAreas
"public String toString() {final StringBuilder r = new StringBuilder();r.append(""(""); for (int i = 0; i < subfilters.length; i++) {if (i > 0)r.append("" OR ""); r.append(subfilters[i].toString());}r.append("")""); return r.toString();}",public String toString final StringBuilder r  new StringBuilderrappend for int i  0 i  subfilterslength i if i  0rappend OR  rappendsubfiltersitoStringrappend return rtoString
public boolean equals( Object o ) {return o instanceof FrenchStemmer;},public boolean equals Object o  return o instanceof FrenchStemmer
public MergedCellsTable() {_mergedRegions = new ArrayList<>();},public MergedCellsTable mergedRegions  new ArrayList
"public PrecedencePredicateTransition(ATNState target, int precedence) {super(target);this.precedence = precedence;}",public PrecedencePredicateTransitionATNState target int precedence supertargetthisprecedence  precedence
"public String toFormulaString() {throw new RuntimeException(""Coding Error: Expected ExpPtg to be converted from Shared to Non-Shared Formula by ValueRecordsAggregate, but it wasn't"");}",public String toFormulaString throw new RuntimeExceptionCoding Error Expected ExpPtg to be converted from Shared to NonShared Formula by ValueRecordsAggregate but it wasnt
public ParseTree getChild(int i) {return children!=null && i>=0 && i<children.size() ? children.get(i) : null;},public ParseTree getChildint i return childrennull  i0  ichildrensize  childrengeti  null
public ListIterator<E> listIterator(int index) {return delegate().listIterator(index); },public ListIteratorE listIteratorint index return delegatelistIteratorindex 
public StringBuffer getBuffer() {return buf;},public StringBuffer getBuffer return buf
"public BytesRefHash(ByteBlockPool pool, int capacity, BytesStartArray bytesStartArray) {hashSize = capacity;hashHalfSize = hashSize >> 1;hashMask = hashSize - 1;this.pool = pool;ids = new int[hashSize];Arrays.fill(ids, -1);this.bytesStartArray = bytesStartArray;bytesStart = bytesStartArray.init();bytesUsed = bytesStartArray.bytesUsed() == null? Counter.newCounter() : bytesStartArray.bytesUsed();bytesUsed.addAndGet(hashSize * Integer.BYTES);}",public BytesRefHashByteBlockPool pool int capacity BytesStartArray bytesStartArray hashSize  capacityhashHalfSize  hashSize  1hashMask  hashSize  1thispool  poolids  new inthashSizeArraysfillids 1thisbytesStartArray  bytesStartArraybytesStart  bytesStartArrayinitbytesUsed  bytesStartArraybytesUsed  null CounternewCounter  bytesStartArraybytesUsedbytesUsedaddAndGethashSize  IntegerBYTES
public GetIdentityDkimAttributesResult getIdentityDkimAttributes(GetIdentityDkimAttributesRequest request) {request = beforeClientExecution(request);return executeGetIdentityDkimAttributes(request);},public GetIdentityDkimAttributesResult getIdentityDkimAttributesGetIdentityDkimAttributesRequest request request  beforeClientExecutionrequestreturn executeGetIdentityDkimAttributesrequest
public DescribeSubnetsResult describeSubnets(DescribeSubnetsRequest request) {request = beforeClientExecution(request);return executeDescribeSubnets(request);},public DescribeSubnetsResult describeSubnetsDescribeSubnetsRequest request request  beforeClientExecutionrequestreturn executeDescribeSubnetsrequest
"public final void serialize(LittleEndianOutput out) {if (getTextLength() > 0) {out.writeShort(getTextLength());out.writeByte(field_2_hasMultibyte ? 0x01 : 0x00);if (field_2_hasMultibyte) {StringUtil.putUnicodeLE(field_3_text, out);} else {StringUtil.putCompressedUnicode(field_3_text, out);}}}",public final void serializeLittleEndianOutput out if getTextLength  0 outwriteShortgetTextLengthoutwriteBytefield2hasMultibyte  0x01  0x00if field2hasMultibyte StringUtilputUnicodeLEfield3text out else StringUtilputCompressedUnicodefield3text out
"public DeleteMessageRequest(String queueUrl, String receiptHandle) {setQueueUrl(queueUrl);setReceiptHandle(receiptHandle);}",public DeleteMessageRequestString queueUrl String receiptHandle setQueueUrlqueueUrlsetReceiptHandlereceiptHandle
"public int find(char[] key, int start) {int d;char p = root;int i = start;char c;while (p != 0) {if (sc[p] == 0xFFFF) {if (strcmp(key, i, kv.getArray(), lo[p]) == 0) {return eq[p];} else {return -1;}}c = key[i];d = c - sc[p];if (d == 0) {if (c == 0) {return eq[p];}i++;p = eq[p];} else if (d < 0) {p = lo[p];} else {p = hi[p];}}return -1;}",public int findchar key int start int dchar p  rootint i  startchar cwhile p  0 if scp  0xFFFF if strcmpkey i kvgetArray lop  0 return eqp else return 1c  keyid  c  scpif d  0 if c  0 return eqpip  eqp else if d  0 p  lop else p  hipreturn 1
public DescribeIdFormatResult describeIdFormat(DescribeIdFormatRequest request) {request = beforeClientExecution(request);return executeDescribeIdFormat(request);},public DescribeIdFormatResult describeIdFormatDescribeIdFormatRequest request request  beforeClientExecutionrequestreturn executeDescribeIdFormatrequest
"public void setCharAt(int index, char ch) {if (index < 0 || index >= count) {throw indexAndLength(index);}if (shared) {value = value.clone();shared = false;}value[index] = ch;}",public void setCharAtint index char ch if index  0  index  count throw indexAndLengthindexif shared value  valuecloneshared  falsevalueindex  ch
"public FieldFragList createFieldFragList(FieldPhraseList fieldPhraseList,int fragCharSize) {FieldFragList ffl = new SimpleFieldFragList( fragCharSize );List<WeightedPhraseInfo> wpil = new ArrayList<>();Iterator<WeightedPhraseInfo> ite = fieldPhraseList.phraseList.iterator();WeightedPhraseInfo phraseInfo = null;while( true ){if( !ite.hasNext() ) break;phraseInfo = ite.next();if( phraseInfo == null ) break;wpil.add( phraseInfo );}if( wpil.size() > 0 )ffl.add( 0, Integer.MAX_VALUE, wpil );return ffl;}",public FieldFragList createFieldFragListFieldPhraseList fieldPhraseListint fragCharSize FieldFragList ffl  new SimpleFieldFragList fragCharSize ListWeightedPhraseInfo wpil  new ArrayListIteratorWeightedPhraseInfo ite  fieldPhraseListphraseListiteratorWeightedPhraseInfo phraseInfo  nullwhile true if itehasNext  breakphraseInfo  itenextif phraseInfo  null  breakwpiladd phraseInfo if wpilsize  0 ffladd 0 IntegerMAXVALUE wpil return ffl
public List<String> getModifiedList() {return modifiedList;},public ListString getModifiedList return modifiedList
public synchronized int capacity() {return elementData.length;},public synchronized int capacity return elementDatalength
"public GermanLightStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public GermanLightStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public void setAnchor(short col1, int row1, int x1, int y1, short col2, int row2, int x2, int y2) {checkRange(getDx1(), 0, 1023, ""dx1"");checkRange(getDx2(), 0, 1023, ""dx2"");checkRange(getDy1(), 0, 255, ""dy1"");checkRange(getDy2(), 0, 255, ""dy2"");checkRange(getCol1(), 0, MAX_COL, ""col1"");checkRange(getCol2(), 0, MAX_COL, ""col2"");checkRange(getRow1(), 0, MAX_ROW, ""row1"");checkRange(getRow2(), 0, MAX_ROW, ""row2"");setCol1(col1);setRow1(row1);setDx1(x1);setDy1(y1);setCol2(col2);setRow2(row2);setDx2(x2);setDy2(y2);}",public void setAnchorshort col1 int row1 int x1 int y1 short col2 int row2 int x2 int y2 checkRangegetDx1 0 1023 dx1checkRangegetDx2 0 1023 dx2checkRangegetDy1 0 255 dy1checkRangegetDy2 0 255 dy2checkRangegetCol1 0 MAXCOL col1checkRangegetCol2 0 MAXCOL col2checkRangegetRow1 0 MAXROW row1checkRangegetRow2 0 MAXROW row2setCol1col1setRow1row1setDx1x1setDy1y1setCol2col2setRow2row2setDx2x2setDy2y2
"public static ErrorEval valueOf(int errorCode) {FormulaError error = FormulaError.forInt(errorCode);ErrorEval eval = evals.get(error);if (eval != null) {return eval;} else {throw new RuntimeException(""Unhandled error type for code "" + errorCode);}}",public static ErrorEval valueOfint errorCode FormulaError error  FormulaErrorforInterrorCodeErrorEval eval  evalsgeterrorif eval  null return eval else throw new RuntimeExceptionUnhandled error type for code   errorCode
"public static long calculateChecksum(byte[] data) {Checksum sum = new CRC32();sum.update(data, 0, data.length);return sum.getValue();}",public static long calculateChecksumbyte data Checksum sum  new CRC32sumupdatedata 0 datalengthreturn sumgetValue
public RevCommit lookupCommit(AnyObjectId id) {RevCommit c = (RevCommit) objects.get(id);if (c == null) {c = createCommit(id);objects.add(c);}return c;},public RevCommit lookupCommitAnyObjectId id RevCommit c  RevCommit objectsgetidif c  null c  createCommitidobjectsaddcreturn c
"public String toString() {QueryText text = this.values.get(0);return ""<path start='"" + text.begin + ""' end='"" + text.end + ""' path='""+ getPathString() + ""'/>"";}",public String toString QueryText text  thisvaluesget0return path start  textbegin   end  textend   path getPathString  
"public TokenStream create(TokenStream input) {StopFilter stopFilter = new StopFilter(input,stopWords);return stopFilter;}",public TokenStream createTokenStream input StopFilter stopFilter  new StopFilterinputstopWordsreturn stopFilter
public DeleteStreamProcessorResult deleteStreamProcessor(DeleteStreamProcessorRequest request) {request = beforeClientExecution(request);return executeDeleteStreamProcessor(request);},public DeleteStreamProcessorResult deleteStreamProcessorDeleteStreamProcessorRequest request request  beforeClientExecutionrequestreturn executeDeleteStreamProcessorrequest
"public RuleWithSetExceptions(String suffix, int min, String replacement,String[] exceptions) {super(suffix, min, replacement);for (int i = 0; i < exceptions.length; i++) {if (!exceptions[i].endsWith(suffix))throw new RuntimeException(""useless exception '"" + exceptions[i] + ""' does not end with '"" + suffix + ""'"");}this.exceptions = new CharArraySet(Arrays.asList(exceptions), false);}",public RuleWithSetExceptionsString suffix int min String replacementString exceptions supersuffix min replacementfor int i  0 i  exceptionslength i if exceptionsiendsWithsuffixthrow new RuntimeExceptionuseless exception   exceptionsi   does not end with   suffix  thisexceptions  new CharArraySetArraysasListexceptions false
public CreateClientVpnRouteResult createClientVpnRoute(CreateClientVpnRouteRequest request) {request = beforeClientExecution(request);return executeCreateClientVpnRoute(request);},public CreateClientVpnRouteResult createClientVpnRouteCreateClientVpnRouteRequest request request  beforeClientExecutionrequestreturn executeCreateClientVpnRouterequest
"public RangeTransition(ATNState target, int from, int to) {super(target);this.from = from;this.to = to;}",public RangeTransitionATNState target int from int to supertargetthisfrom  fromthisto  to
"public TypeAsPayloadTokenFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public TypeAsPayloadTokenFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public void fromRaw(int[] ints, int p) {w1 = ints[p];w2 = ints[p + 1];w3 = ints[p + 2];w4 = ints[p + 3];w5 = ints[p + 4];}",public void fromRawint ints int p w1  intspw2  intsp  1w3  intsp  2w4  intsp  3w5  intsp  4
"public ICUNormalizer2Filter(TokenStream input, Normalizer2 normalizer) {super(input);this.normalizer = normalizer;}",public ICUNormalizer2FilterTokenStream input Normalizer2 normalizer superinputthisnormalizer  normalizer
public static TreeFilter create(TreeFilter a) {return new NotTreeFilter(a);},public static TreeFilter createTreeFilter a return new NotTreeFiltera
public boolean isMalformed() {return this.type == TYPE_MALFORMED_INPUT;},public boolean isMalformed return thistype  TYPEMALFORMEDINPUT
"public void enterRecursionRule(ParserRuleContext localctx, int state, int ruleIndex, int precedence) {Pair<ParserRuleContext, Integer> pair = new Pair<ParserRuleContext, Integer>(_ctx, localctx.invokingState);_parentContextStack.push(pair);super.enterRecursionRule(localctx, state, ruleIndex, precedence);}",public void enterRecursionRuleParserRuleContext localctx int state int ruleIndex int precedence PairParserRuleContext Integer pair  new PairParserRuleContext Integerctx localctxinvokingStateparentContextStackpushpairsuperenterRecursionRulelocalctx state ruleIndex precedence
public DescribeAddressesResult describeAddresses(DescribeAddressesRequest request) {request = beforeClientExecution(request);return executeDescribeAddresses(request);},public DescribeAddressesResult describeAddressesDescribeAddressesRequest request request  beforeClientExecutionrequestreturn executeDescribeAddressesrequest
"public int getEstimatedUniqueValues(){return getEstimatedNumberUniqueValuesAllowingForCollisions(bloomSize, filter.cardinality());}",public int getEstimatedUniqueValuesreturn getEstimatedNumberUniqueValuesAllowingForCollisionsbloomSize filtercardinality
public DescribeTransformJobResult describeTransformJob(DescribeTransformJobRequest request) {request = beforeClientExecution(request);return executeDescribeTransformJob(request);},public DescribeTransformJobResult describeTransformJobDescribeTransformJobRequest request request  beforeClientExecutionrequestreturn executeDescribeTransformJobrequest
public HeaderFooterRecord clone() {return copy();},public HeaderFooterRecord clone return copy
"public void decode(long[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block0 = blocks[blocksOffset++];values[valuesOffset++] = block0 >>> 40;values[valuesOffset++] = (block0 >>> 16) & 16777215L;final long block1 = blocks[blocksOffset++];values[valuesOffset++] = ((block0 & 65535L) << 8) | (block1 >>> 56);values[valuesOffset++] = (block1 >>> 32) & 16777215L;values[valuesOffset++] = (block1 >>> 8) & 16777215L;final long block2 = blocks[blocksOffset++];values[valuesOffset++] = ((block1 & 255L) << 16) | (block2 >>> 48);values[valuesOffset++] = (block2 >>> 24) & 16777215L;values[valuesOffset++] = block2 & 16777215L;}}",public void decodelong blocks int blocksOffset long values int valuesOffset int iterations for int i  0 i  iterations i final long block0  blocksblocksOffsetvaluesvaluesOffset  block0  40valuesvaluesOffset  block0  16  16777215Lfinal long block1  blocksblocksOffsetvaluesvaluesOffset  block0  65535L  8  block1  56valuesvaluesOffset  block1  32  16777215LvaluesvaluesOffset  block1  8  16777215Lfinal long block2  blocksblocksOffsetvaluesvaluesOffset  block1  255L  16  block2  48valuesvaluesOffset  block2  24  16777215LvaluesvaluesOffset  block2  16777215L
"public FieldInfo fieldInfo(int fieldNumber) {if (fieldNumber < 0) {throw new IllegalArgumentException(""Illegal field number: "" + fieldNumber);}if (fieldNumber >= byNumber.length) {return null;}return byNumber[fieldNumber];}",public FieldInfo fieldInfoint fieldNumber if fieldNumber  0 throw new IllegalArgumentExceptionIllegal field number   fieldNumberif fieldNumber  byNumberlength return nullreturn byNumberfieldNumber
public DescribeIdentityPoolResult describeIdentityPool(DescribeIdentityPoolRequest request) {request = beforeClientExecution(request);return executeDescribeIdentityPool(request);},public DescribeIdentityPoolResult describeIdentityPoolDescribeIdentityPoolRequest request request  beforeClientExecutionrequestreturn executeDescribeIdentityPoolrequest
"public static String getText(Node e) {StringBuilder sb = new StringBuilder();getTextBuffer(e, sb);return sb.toString();}",public static String getTextNode e StringBuilder sb  new StringBuildergetTextBuffere sbreturn sbtoString
"public void delete(int key) {int i = binarySearch(mKeys, 0, mSize, key);if (i >= 0) {removeAt(i);}}",public void deleteint key int i  binarySearchmKeys 0 mSize keyif i  0 removeAti
public GetCurrentMetricDataResult getCurrentMetricData(GetCurrentMetricDataRequest request) {request = beforeClientExecution(request);return executeGetCurrentMetricData(request);},public GetCurrentMetricDataResult getCurrentMetricDataGetCurrentMetricDataRequest request request  beforeClientExecutionrequestreturn executeGetCurrentMetricDatarequest
"public void append(String name, FileMode mode, AnyObjectId id) {append(encode(name), mode, id);}",public void appendString name FileMode mode AnyObjectId id appendencodename mode id
public final String replacement() {return replacementChars;},public final String replacement return replacementChars
public WindowProtectRecord(boolean protect) {this(0);setProtect(protect);},public WindowProtectRecordboolean protect this0setProtectprotect
"public static boolean equals(long[] array1, long[] array2) {if (array1 == array2) {return true;}if (array1 == null || array2 == null || array1.length != array2.length) {return false;}for (int i = 0; i < array1.length; i++) {if (array1[i] != array2[i]) {return false;}}return true;}",public static boolean equalslong array1 long array2 if array1  array2 return trueif array1  null  array2  null  array1length  array2length return falsefor int i  0 i  array1length i if array1i  array2i return falsereturn true
public PredictionContext getParent(int index) {assert index == 0;return parent;},public PredictionContext getParentint index assert index  0return parent
"public CharSequence toQueryString(EscapeQuerySyntax escapeSyntaxParser) {return ""*:*"";}",public CharSequence toQueryStringEscapeQuerySyntax escapeSyntaxParser return 
"public SeekStatus seekCeil(BytesRef term) throws IOException {throw new UnsupportedOperationException(getClass().getName()+"" does not support seeking"");}",public SeekStatus seekCeilBytesRef term throws IOException throw new UnsupportedOperationExceptiongetClassgetName does not support seeking
"public BindInstance2VpcRequest() {super(""Ots"", ""2016-06-20"", ""BindInstance2Vpc"", ""ots"");setMethod(MethodType.POST);}",public BindInstance2VpcRequest superOts 20160620 BindInstance2Vpc otssetMethodMethodTypePOST
"public UpdateTableResult updateTable(String tableName, ProvisionedThroughput provisionedThroughput) {return updateTable(new UpdateTableRequest().withTableName(tableName).withProvisionedThroughput(provisionedThroughput));}",public UpdateTableResult updateTableString tableName ProvisionedThroughput provisionedThroughput return updateTablenew UpdateTableRequestwithTableNametableNamewithProvisionedThroughputprovisionedThroughput
public boolean get(int index) {return in.get(docMap.newToOld(index));},public boolean getint index return ingetdocMapnewToOldindex
public GetQueueAttributesResult getQueueAttributes(GetQueueAttributesRequest request) {request = beforeClientExecution(request);return executeGetQueueAttributes(request);},public GetQueueAttributesResult getQueueAttributesGetQueueAttributesRequest request request  beforeClientExecutionrequestreturn executeGetQueueAttributesrequest
public UpdateUserRoutingProfileResult updateUserRoutingProfile(UpdateUserRoutingProfileRequest request) {request = beforeClientExecution(request);return executeUpdateUserRoutingProfile(request);},public UpdateUserRoutingProfileResult updateUserRoutingProfileUpdateUserRoutingProfileRequest request request  beforeClientExecutionrequestreturn executeUpdateUserRoutingProfilerequest
public int getMidIx() {int ixDiff = _highIx - _lowIx;if(ixDiff < 2) {return -1;}return _lowIx + (ixDiff / 2);},public int getMidIx int ixDiff  highIx  lowIxifixDiff  2 return 1return lowIx  ixDiff  2
public MergeResult getMergeResult() {return this.mergeResult;},public MergeResult getMergeResult return thismergeResult
public void setAsActiveCell(){int row=_record.getRow();short col=_record.getColumn();_sheet.getSheet().setActiveCellRow(row);_sheet.getSheet().setActiveCellCol(col);},public void setAsActiveCellint rowrecordgetRowshort colrecordgetColumnsheetgetSheetsetActiveCellRowrowsheetgetSheetsetActiveCellColcol
public InviteMembersResult inviteMembers(InviteMembersRequest request) {request = beforeClientExecution(request);return executeInviteMembers(request);},public InviteMembersResult inviteMembersInviteMembersRequest request request  beforeClientExecutionrequestreturn executeInviteMembersrequest
"public FormatTrackingHSSFListener(HSSFListener childListener) {this(childListener, LocaleUtil.getUserLocale());}",public FormatTrackingHSSFListenerHSSFListener childListener thischildListener LocaleUtilgetUserLocale
"public UpdateDistributionRequest(DistributionConfig distributionConfig, String id, String ifMatch) {setDistributionConfig(distributionConfig);setId(id);setIfMatch(ifMatch);}",public UpdateDistributionRequestDistributionConfig distributionConfig String id String ifMatch setDistributionConfigdistributionConfigsetIdidsetIfMatchifMatch
"public GetLogEventsRequest(String logGroupName, String logStreamName) {setLogGroupName(logGroupName);setLogStreamName(logStreamName);}",public GetLogEventsRequestString logGroupName String logStreamName setLogGroupNamelogGroupNamesetLogStreamNamelogStreamName
"public String toString() {return ""FlushInfo [numDocs="" + numDocs + "", estimatedSegmentSize=""+ estimatedSegmentSize + ""]"";}",public String toString return FlushInfo numDocs  numDocs   estimatedSegmentSize estimatedSegmentSize  
"public GrowableWriter resize(int newSize) {GrowableWriter next = new GrowableWriter(getBitsPerValue(), newSize, acceptableOverheadRatio);final int limit = Math.min(size(), newSize);PackedInts.copy(current, 0, next, 0, limit, PackedInts.DEFAULT_BUFFER_SIZE);return next;}",public GrowableWriter resizeint newSize GrowableWriter next  new GrowableWritergetBitsPerValue newSize acceptableOverheadRatiofinal int limit  Mathminsize newSizePackedIntscopycurrent 0 next 0 limit PackedIntsDEFAULTBUFFERSIZEreturn next
public Analyzer(ReuseStrategy reuseStrategy) {this.reuseStrategy = reuseStrategy;},public AnalyzerReuseStrategy reuseStrategy thisreuseStrategy  reuseStrategy
public void reset() {prevAccept.reset();startIndex = -1;line = 1;charPositionInLine = 0;mode = Lexer.DEFAULT_MODE;},public void reset prevAcceptresetstartIndex  1line  1charPositionInLine  0mode  LexerDEFAULTMODE
"public EmbeddedObjectRefSubRecord() {field_2_unknownFormulaData = new byte[] { 0x02, 0x6C, 0x6A, 0x16, 0x01, }; field_6_unknown = EMPTY_BYTE_ARRAY;field_4_ole_classname = null;}",public EmbeddedObjectRefSubRecord field2unknownFormulaData  new byte  0x02 0x6C 0x6A 0x16 0x01  field6unknown  EMPTYBYTEARRAYfield4oleclassname  null
"public String toString() {return ""doc="" + doc + "" score="" + score + "" shardIndex="" + shardIndex;}",public String toString return doc  doc   score  score   shardIndex  shardIndex
"public static double kthLargest(double[] v, int k) {double r = Double.NaN;int index = k-1; if (v!=null && v.length > index && index >= 0) {Arrays.sort(v);r = v[v.length-index-1];}return r;}",public static double kthLargestdouble v int k double r  DoubleNaNint index  k1 if vnull  vlength  index  index  0 Arrayssortvr  vvlengthindex1return r
"public int get(int forwardId, int backwardId) {int offset = (backwardId * forwardSize + forwardId) * 2;return buffer.getShort(offset);}",public int getint forwardId int backwardId int offset  backwardId  forwardSize  forwardId  2return buffergetShortoffset
"public void sort() {Arrays.sort(entries, 0, count);}",public void sort Arrayssortentries 0 count
"public BM25FQuery build() {int size = fieldAndWeights.size() * termsSet.size();if (size > IndexSearcher.getMaxClauseCount()) {throw new IndexSearcher.TooManyClauses();}BytesRef[] terms = termsSet.toArray(new BytesRef[0]);return new BM25FQuery(similarity, new TreeMap<>(fieldAndWeights), terms);}",public BM25FQuery build int size  fieldAndWeightssize  termsSetsizeif size  IndexSearchergetMaxClauseCount throw new IndexSearcherTooManyClausesBytesRef terms  termsSettoArraynew BytesRef0return new BM25FQuerysimilarity new TreeMapfieldAndWeights terms
"public LexerCustomAction(int ruleIndex, int actionIndex) {this.ruleIndex = ruleIndex;this.actionIndex = actionIndex;}",public LexerCustomActionint ruleIndex int actionIndex thisruleIndex  ruleIndexthisactionIndex  actionIndex
public DescribeDevicePolicyConfigurationResult describeDevicePolicyConfiguration(DescribeDevicePolicyConfigurationRequest request) {request = beforeClientExecution(request);return executeDescribeDevicePolicyConfiguration(request);},public DescribeDevicePolicyConfigurationResult describeDevicePolicyConfigurationDescribeDevicePolicyConfigurationRequest request request  beforeClientExecutionrequestreturn executeDescribeDevicePolicyConfigurationrequest
"public CreateLBCookieStickinessPolicyRequest(String loadBalancerName, String policyName) {setLoadBalancerName(loadBalancerName);setPolicyName(policyName);}",public CreateLBCookieStickinessPolicyRequestString loadBalancerName String policyName setLoadBalancerNameloadBalancerNamesetPolicyNamepolicyName
"public static short[] grow(short[] array) {return grow(array, 1 + array.length);}",public static short growshort array return growarray 1  arraylength
"public static AttrPtg createSpace(int type, int count) {int data = type & 0x00FF | (count << 8) & 0x00FFFF;return new AttrPtg(space.set(0), data, null, -1);}",public static AttrPtg createSpaceint type int count int data  type  0x00FF  count  8  0x00FFFFreturn new AttrPtgspaceset0 data null 1
public boolean equals(Object o) {return (o instanceof FontRecord) && sameProperties((FontRecord) o);},public boolean equalsObject o return o instanceof FontRecord  samePropertiesFontRecord o
public void setDSTSavings(int milliseconds) {if (milliseconds > 0) {dstSavings = milliseconds;} else {throw new IllegalArgumentException();}},public void setDSTSavingsint milliseconds if milliseconds  0 dstSavings  milliseconds else throw new IllegalArgumentException
public DescribeAccountResult describeAccount(DescribeAccountRequest request) {request = beforeClientExecution(request);return executeDescribeAccount(request);},public DescribeAccountResult describeAccountDescribeAccountRequest request request  beforeClientExecutionrequestreturn executeDescribeAccountrequest
public int getCellsVal() {int size = 0;for (Row row : rows)size += row.getCellsVal();return size;},public int getCellsVal int size  0for Row row  rowssize  rowgetCellsValreturn size
public boolean equalsSameType(Object other) {assert exists || (false == value);MutableValueBool b = (MutableValueBool)other;return value == b.value && exists == b.exists;},public boolean equalsSameTypeObject other assert exists  false  valueMutableValueBool b  MutableValueBoolotherreturn value  bvalue  exists  bexists
"public K next() {Node<K,V> n = next;advance();return n.key;}",public K next NodeKV n  nextadvancereturn nkey
public DBCluster createDBCluster(CreateDBClusterRequest request) {request = beforeClientExecution(request);return executeCreateDBCluster(request);},public DBCluster createDBClusterCreateDBClusterRequest request request  beforeClientExecutionrequestreturn executeCreateDBClusterrequest
public boolean equals(Object o) {if (!(o instanceof FormatRun)) {return false;}FormatRun other = (FormatRun) o;return _character == other._character && _fontIndex == other._fontIndex;},public boolean equalsObject o if o instanceof FormatRun return falseFormatRun other  FormatRun oreturn character  othercharacter  fontIndex  otherfontIndex
"public static ValueEval getSingleValue(ValueEval arg, int srcCellRow, int srcCellCol)throws EvaluationException {final ValueEval result;if (arg instanceof RefEval) {result = chooseSingleElementFromRef((RefEval) arg);} else if (arg instanceof AreaEval) {result = chooseSingleElementFromArea((AreaEval) arg, srcCellRow, srcCellCol);} else {result = arg;}if (result instanceof ErrorEval) {throw new EvaluationException((ErrorEval) result);}return result;}",public static ValueEval getSingleValueValueEval arg int srcCellRow int srcCellColthrows EvaluationException final ValueEval resultif arg instanceof RefEval result  chooseSingleElementFromRefRefEval arg else if arg instanceof AreaEval result  chooseSingleElementFromAreaAreaEval arg srcCellRow srcCellCol else result  argif result instanceof ErrorEval throw new EvaluationExceptionErrorEval resultreturn result
"public GermanStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public GermanStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public ClusterSubnetGroup modifyClusterSubnetGroup(ModifyClusterSubnetGroupRequest request) {request = beforeClientExecution(request);return executeModifyClusterSubnetGroup(request);},public ClusterSubnetGroup modifyClusterSubnetGroupModifyClusterSubnetGroupRequest request request  beforeClientExecutionrequestreturn executeModifyClusterSubnetGrouprequest
"public FacetLabel subpath(final int length) {if (length >= this.length || length < 0) {return this;} else {return new FacetLabel(this, length);}}",public FacetLabel subpathfinal int length if length  thislength  length  0 return this else return new FacetLabelthis length
"public DataValidationConstraint createDecimalConstraint(int operatorType, String formula1, String formula2) {return DVConstraint.createNumericConstraint(ValidationType.DECIMAL, operatorType, formula1, formula2);}",public DataValidationConstraint createDecimalConstraintint operatorType String formula1 String formula2 return DVConstraintcreateNumericConstraintValidationTypeDECIMAL operatorType formula1 formula2
public ByteBuffer put(byte b) {if (position == limit) {throw new BufferOverflowException();}backingArray[offset + position++] = b;return this;},public ByteBuffer putbyte b if position  limit throw new BufferOverflowExceptionbackingArrayoffset  position  breturn this
public DescribeUserProfileResult describeUserProfile(DescribeUserProfileRequest request) {request = beforeClientExecution(request);return executeDescribeUserProfile(request);},public DescribeUserProfileResult describeUserProfileDescribeUserProfileRequest request request  beforeClientExecutionrequestreturn executeDescribeUserProfilerequest
"public K firstKey() {Entry<K, V> entry = endpoint(true);if (entry == null) {throw new NoSuchElementException();}return entry.getKey();}",public K firstKey EntryK V entry  endpointtrueif entry  null throw new NoSuchElementExceptionreturn entrygetKey
public DescribeAutoScalingGroupsResult describeAutoScalingGroups(DescribeAutoScalingGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeAutoScalingGroups(request);},public DescribeAutoScalingGroupsResult describeAutoScalingGroupsDescribeAutoScalingGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeAutoScalingGroupsrequest
public Class<RefsChangedListener> getListenerType() {return RefsChangedListener.class;},public ClassRefsChangedListener getListenerType return RefsChangedListenerclass
public int getWordCost(int wordId) {return WORD_COST;},public int getWordCostint wordId return WORDCOST
public void serialize(LittleEndianOutput out) {out.writeByte(field_1_horizontalAlignment);out.writeByte(field_2_verticalAlignment);out.writeShort(field_3_displayMode);out.writeInt(field_4_rgbColor);out.writeInt(field_5_x);out.writeInt(field_6_y);out.writeInt(field_7_width);out.writeInt(field_8_height);out.writeShort(field_9_options1);out.writeShort(field_10_indexOfColorValue);out.writeShort(field_11_options2);out.writeShort(field_12_textRotation);},public void serializeLittleEndianOutput out outwriteBytefield1horizontalAlignmentoutwriteBytefield2verticalAlignmentoutwriteShortfield3displayModeoutwriteIntfield4rgbColoroutwriteIntfield5xoutwriteIntfield6youtwriteIntfield7widthoutwriteIntfield8heightoutwriteShortfield9options1outwriteShortfield10indexOfColorValueoutwriteShortfield11options2outwriteShortfield12textRotation
public LinkedDataRecord getDataCategoryLabels(){return dataCategoryLabels;},public LinkedDataRecord getDataCategoryLabelsreturn dataCategoryLabels
"public void setStringValue(String value) {collator.getRawCollationKey(value, key);bytes.bytes = key.bytes;bytes.offset = 0;bytes.length = key.size;}",public void setStringValueString value collatorgetRawCollationKeyvalue keybytesbytes  keybytesbytesoffset  0byteslength  keysize
"public String toString() {return ""FacetField(dim="" + dim + "" path="" + Arrays.toString(path) + "")"";}",public String toString return FacetFielddim  dim   path  ArraystoStringpath  
"public static long gcd(long a, long b) {a = Math.abs(a);b = Math.abs(b);if (a == 0) {return b;} else if (b == 0) {return a;}final int commonTrailingZeros = Long.numberOfTrailingZeros(a | b);a >>>= Long.numberOfTrailingZeros(a);while (true) {b >>>= Long.numberOfTrailingZeros(b);if (a == b) {break;} else if (a > b || a == Long.MIN_VALUE) { final long tmp = a;a = b;b = tmp;}if (a == 1) {break;}b -= a;}return a << commonTrailingZeros;}",public static long gcdlong a long b a  Mathabsab  Mathabsbif a  0 return b else if b  0 return afinal int commonTrailingZeros  LongnumberOfTrailingZerosa  ba  LongnumberOfTrailingZerosawhile true b  LongnumberOfTrailingZerosbif a  b break else if a  b  a  LongMINVALUE  final long tmp  aa  bb  tmpif a  1 breakb  areturn a  commonTrailingZeros
public BatchRefUpdate disableRefLog() {refLogMessage = null;refLogIncludeResult = false;return this;},public BatchRefUpdate disableRefLog refLogMessage  nullrefLogIncludeResult  falsereturn this
"public static int compareTo(Ref o1, String o2) {return o1.getName().compareTo(o2);}",public static int compareToRef o1 String o2 return o1getNamecompareToo2
public CreateLoadBalancerTlsCertificateResult createLoadBalancerTlsCertificate(CreateLoadBalancerTlsCertificateRequest request) {request = beforeClientExecution(request);return executeCreateLoadBalancerTlsCertificate(request);},public CreateLoadBalancerTlsCertificateResult createLoadBalancerTlsCertificateCreateLoadBalancerTlsCertificateRequest request request  beforeClientExecutionrequestreturn executeCreateLoadBalancerTlsCertificaterequest
public GetDocumentationPartsResult getDocumentationParts(GetDocumentationPartsRequest request) {request = beforeClientExecution(request);return executeGetDocumentationParts(request);},public GetDocumentationPartsResult getDocumentationPartsGetDocumentationPartsRequest request request  beforeClientExecutionrequestreturn executeGetDocumentationPartsrequest
public Iterator<RevFlag> iterator() {final Iterator<RevFlag> i = active.iterator();return new Iterator<RevFlag>();},public IteratorRevFlag iterator final IteratorRevFlag i  activeiteratorreturn new IteratorRevFlag
"public boolean equals(Object o) {if (this == o) return true;if (!(o instanceof Sort)) return false;final Sort other = (Sort)o;return Arrays.equals(this.fields, other.fields);}",public boolean equalsObject o if this  o return trueif o instanceof Sort return falsefinal Sort other  Sortoreturn Arraysequalsthisfields otherfields
public boolean equals(final Object o){boolean rval = false;if ((o != null) && (o.getClass() == this.getClass())){if (this == o){rval = true;}else{POIFSDocumentPath path = ( POIFSDocumentPath ) o;if (path.components.length == this.components.length){rval = true;for (int j = 0; j < this.components.length; j++){if (!path.components[ j ].equals(this.components[ j ])){rval = false;break;}}}}}return rval;},public boolean equalsfinal Object oboolean rval  falseif o  null  ogetClass  thisgetClassif this  orval  trueelsePOIFSDocumentPath path   POIFSDocumentPath  oif pathcomponentslength  thiscomponentslengthrval  truefor int j  0 j  thiscomponentslength jif pathcomponents j equalsthiscomponents j rval  falsebreakreturn rval
"public SearchImageRequest() {super(""ImageSearch"", ""2019-03-25"", ""SearchImage"", ""imagesearch"");setUriPattern(""/v2/image/search"");setMethod(MethodType.POST);}",public SearchImageRequest superImageSearch 20190325 SearchImage imagesearchsetUriPatternv2imagesearchsetMethodMethodTypePOST
public RevFlagSet() {active = new ArrayList<>();},public RevFlagSet active  new ArrayList
public BatchDisassociateUserStackResult batchDisassociateUserStack(BatchDisassociateUserStackRequest request) {request = beforeClientExecution(request);return executeBatchDisassociateUserStack(request);},public BatchDisassociateUserStackResult batchDisassociateUserStackBatchDisassociateUserStackRequest request request  beforeClientExecutionrequestreturn executeBatchDisassociateUserStackrequest
"public FloatBuffer get(float[] dst) {return get(dst, 0, dst.length);}",public FloatBuffer getfloat dst return getdst 0 dstlength
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[ftEnd]\n"");buffer.append(""[/ftEnd]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendftEndnbufferappendftEndnreturn buffertoString
public InputStreamDataInput(InputStream is) {this.is = is;},public InputStreamDataInputInputStream is thisis  is
"public static char[] grow(char[] array) {return grow(array, 1 + array.length);}",public static char growchar array return growarray 1  arraylength
"public void showMessage(String msg) {provider.get(uri, new CredentialItem.InformationalMessage(msg));}",public void showMessageString msg providergeturi new CredentialItemInformationalMessagemsg
public DeregisterTypeResult deregisterType(DeregisterTypeRequest request) {request = beforeClientExecution(request);return executeDeregisterType(request);},public DeregisterTypeResult deregisterTypeDeregisterTypeRequest request request  beforeClientExecutionrequestreturn executeDeregisterTyperequest
public final void add(RevFlagSet set) {flags |= set.mask;},public final void addRevFlagSet set flags  setmask
"public IntList(final IntList list){this(list._array.length);System.arraycopy(list._array, 0, _array, 0, _array.length);_limit = list._limit;}",public IntListfinal IntList listthislistarraylengthSystemarraycopylistarray 0 array 0 arraylengthlimit  listlimit
public int convertFromExternSheetIndex(int externSheetIndex) {return _iBook.getFirstSheetIndexFromExternSheetIndex(externSheetIndex);},public int convertFromExternSheetIndexint externSheetIndex return iBookgetFirstSheetIndexFromExternSheetIndexexternSheetIndex
"public ExternalSheet getExternalSheet(String firstSheetName, String lastSheetName, int externalWorkbookNumber) {throw new IllegalStateException(""XSSF-style external references are not supported for HSSF"");}",public ExternalSheet getExternalSheetString firstSheetName String lastSheetName int externalWorkbookNumber throw new IllegalStateExceptionXSSFstyle external references are not supported for HSSF
"public CellRangeAddress8Bit copy() {return new CellRangeAddress8Bit(getFirstRow(), getLastRow(), getFirstColumn(), getLastColumn());}",public CellRangeAddress8Bit copy return new CellRangeAddress8BitgetFirstRow getLastRow getFirstColumn getLastColumn
public boolean equals(Object obj) {if (this == obj)return true;if (obj == null)return false;if (obj instanceof Document == false)return false;Document other = (Document) obj;if (other.getBytes() == null ^ this.getBytes() == null)return false;if (other.getBytes() != null && other.getBytes().equals(this.getBytes()) == false)return false;if (other.getS3Object() == null ^ this.getS3Object() == null)return false;if (other.getS3Object() != null && other.getS3Object().equals(this.getS3Object()) == false)return false;return true;},public boolean equalsObject obj if this  objreturn trueif obj  nullreturn falseif obj instanceof Document  falsereturn falseDocument other  Document objif othergetBytes  null  thisgetBytes  nullreturn falseif othergetBytes  null  othergetBytesequalsthisgetBytes  falsereturn falseif othergetS3Object  null  thisgetS3Object  nullreturn falseif othergetS3Object  null  othergetS3ObjectequalsthisgetS3Object  falsereturn falsereturn true
public ListMembersResult listMembers(ListMembersRequest request) {request = beforeClientExecution(request);return executeListMembers(request);},public ListMembersResult listMembersListMembersRequest request request  beforeClientExecutionrequestreturn executeListMembersrequest
"public String toString() {final StringBuilder s = new StringBuilder();for (Block q = head; q != null; q = q.next) {for (int i = q.headIndex; i < q.tailIndex; i++)describe(s, q.commits[i]);}return s.toString();}",public String toString final StringBuilder s  new StringBuilderfor Block q  head q  null q  qnext for int i  qheadIndex i  qtailIndex idescribes qcommitsireturn stoString
public void delete() {if (!deleted) {deleted = true;commitsToDelete.add(this);}},public void delete if deleted deleted  truecommitsToDeleteaddthis
public final boolean isWritten() {return 1 < getOffset(); },public final boolean isWritten return 1  getOffset 
"public static Cell translateUnicodeValues(Cell cell) {String s = cell.getRichStringCellValue().getString();boolean foundUnicode = false;String lowerCaseStr = s.toLowerCase(Locale.ROOT);for (UnicodeMapping entry : unicodeMappings) {String key = entry.entityName;if (lowerCaseStr.contains(key)) {s = s.replaceAll(key, entry.resolvedValue);foundUnicode = true;}}if (foundUnicode) {cell.setCellValue(cell.getRow().getSheet().getWorkbook().getCreationHelper().createRichTextString(s));}return cell;}",public static Cell translateUnicodeValuesCell cell String s  cellgetRichStringCellValuegetStringboolean foundUnicode  falseString lowerCaseStr  stoLowerCaseLocaleROOTfor UnicodeMapping entry  unicodeMappings String key  entryentityNameif lowerCaseStrcontainskey s  sreplaceAllkey entryresolvedValuefoundUnicode  trueif foundUnicode cellsetCellValuecellgetRowgetSheetgetWorkbookgetCreationHelpercreateRichTextStringsreturn cell
public DeleteCampaignResult deleteCampaign(DeleteCampaignRequest request) {request = beforeClientExecution(request);return executeDeleteCampaign(request);},public DeleteCampaignResult deleteCampaignDeleteCampaignRequest request request  beforeClientExecutionrequestreturn executeDeleteCampaignrequest
public String toFormulaString() {return formatReferenceAsString();},public String toFormulaString return formatReferenceAsString
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1,ValueEval arg2) {TwoDEval reference = convertFirstArg(arg0);try {int columnIx = resolveIndexArg(arg2, srcRowIndex, srcColumnIndex);int rowIx = resolveIndexArg(arg1, srcRowIndex, srcColumnIndex);return getValueFromArea(reference, rowIx, columnIx);} catch (EvaluationException e) {return e.getErrorEval();}}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1ValueEval arg2 TwoDEval reference  convertFirstArgarg0try int columnIx  resolveIndexArgarg2 srcRowIndex srcColumnIndexint rowIx  resolveIndexArgarg1 srcRowIndex srcColumnIndexreturn getValueFromAreareference rowIx columnIx catch EvaluationException e return egetErrorEval
"public URISyntaxException(String input, String reason) {super(reason);if (input == null || reason == null) {throw new NullPointerException();}this.input = input;index = -1;}",public URISyntaxExceptionString input String reason superreasonif input  null  reason  null throw new NullPointerExceptionthisinput  inputindex  1
"public int append(BytesRef bytes) {if (lastElement >= offsets.length) {int oldLen = offsets.length;offsets = ArrayUtil.grow(offsets, offsets.length + 1);bytesUsed.addAndGet((offsets.length - oldLen) * Integer.BYTES);}pool.append(bytes);offsets[lastElement++] = currentOffset;currentOffset += bytes.length;return lastElement-1;}",public int appendBytesRef bytes if lastElement  offsetslength int oldLen  offsetslengthoffsets  ArrayUtilgrowoffsets offsetslength  1bytesUsedaddAndGetoffsetslength  oldLen  IntegerBYTESpoolappendbytesoffsetslastElement  currentOffsetcurrentOffset  byteslengthreturn lastElement1
public EscherAggregate(boolean createDefaultTree) {if (createDefaultTree){buildBaseTree();}},public EscherAggregateboolean createDefaultTree if createDefaultTreebuildBaseTree
"public NumericDocValuesField(String name, Long value) {super(name, TYPE);fieldsData = value;}",public NumericDocValuesFieldString name Long value supername TYPEfieldsData  value
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_index);},public void serializeLittleEndianOutput out outwriteShortfield1index
public AssociateDeviceWithNetworkProfileResult associateDeviceWithNetworkProfile(AssociateDeviceWithNetworkProfileRequest request) {request = beforeClientExecution(request);return executeAssociateDeviceWithNetworkProfile(request);},public AssociateDeviceWithNetworkProfileResult associateDeviceWithNetworkProfileAssociateDeviceWithNetworkProfileRequest request request  beforeClientExecutionrequestreturn executeAssociateDeviceWithNetworkProfilerequest
"public void add(DirCacheEntry newEntry) {if (newEntry.getRawMode() == 0)throw new IllegalArgumentException(MessageFormat.format(JGitText.get().fileModeNotSetForPath,newEntry.getPathString()));beforeAdd(newEntry);fastAdd(newEntry);}",public void addDirCacheEntry newEntry if newEntrygetRawMode  0throw new IllegalArgumentExceptionMessageFormatformatJGitTextgetfileModeNotSetForPathnewEntrygetPathStringbeforeAddnewEntryfastAddnewEntry
"public ValueEval getEvalForCell(int rowIndex, int columnIndex) {return _bookEvaluator.evaluateReference(getSheet(), _sheetIndex, rowIndex, columnIndex, _tracker);}",public ValueEval getEvalForCellint rowIndex int columnIndex return bookEvaluatorevaluateReferencegetSheet sheetIndex rowIndex columnIndex tracker
public static RevFilter create(String pattern) {if (pattern.length() == 0)throw new IllegalArgumentException(JGitText.get().cannotMatchOnEmptyString);if (SubStringRevFilter.safe(pattern))return new SubStringSearch(pattern);return new PatternSearch(pattern);},public static RevFilter createString pattern if patternlength  0throw new IllegalArgumentExceptionJGitTextgetcannotMatchOnEmptyStringif SubStringRevFiltersafepatternreturn new SubStringSearchpatternreturn new PatternSearchpattern
public ObjectId getResultTreeId() {return sourceTrees[treeIndex];},public ObjectId getResultTreeId return sourceTreestreeIndex
"public MoPenQueryCanvasRequest() {super(""MoPen"", ""2018-02-11"", ""MoPenQueryCanvas"", ""mopen"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public MoPenQueryCanvasRequest superMoPen 20180211 MoPenQueryCanvas mopensetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public DescribeTrialResult describeTrial(DescribeTrialRequest request) {request = beforeClientExecution(request);return executeDescribeTrial(request);},public DescribeTrialResult describeTrialDescribeTrialRequest request request  beforeClientExecutionrequestreturn executeDescribeTrialrequest
public DeleteCommentResult deleteComment(DeleteCommentRequest request) {request = beforeClientExecution(request);return executeDeleteComment(request);},public DeleteCommentResult deleteCommentDeleteCommentRequest request request  beforeClientExecutionrequestreturn executeDeleteCommentrequest
public DeleteCacheSecurityGroupRequest(String cacheSecurityGroupName) {setCacheSecurityGroupName(cacheSecurityGroupName);},public DeleteCacheSecurityGroupRequestString cacheSecurityGroupName setCacheSecurityGroupNamecacheSecurityGroupName
"public ParseTreePattern(ParseTreePatternMatcher matcher,String pattern, int patternRuleIndex, ParseTree patternTree){this.matcher = matcher;this.patternRuleIndex = patternRuleIndex;this.pattern = pattern;this.patternTree = patternTree;}",public ParseTreePatternParseTreePatternMatcher matcherString pattern int patternRuleIndex ParseTree patternTreethismatcher  matcherthispatternRuleIndex  patternRuleIndexthispattern  patternthispatternTree  patternTree
public String toFormulaString(String[] operands) {StringBuilder buffer = new StringBuilder();buffer.append(operands[ 0 ]);buffer.append(PERCENT);return buffer.toString();},public String toFormulaStringString operands StringBuilder buffer  new StringBuilderbufferappendoperands 0 bufferappendPERCENTreturn buffertoString
public GetVaultLockResult getVaultLock(GetVaultLockRequest request) {request = beforeClientExecution(request);return executeGetVaultLock(request);},public GetVaultLockResult getVaultLockGetVaultLockRequest request request  beforeClientExecutionrequestreturn executeGetVaultLockrequest
public DecreaseStreamRetentionPeriodResult decreaseStreamRetentionPeriod(DecreaseStreamRetentionPeriodRequest request) {request = beforeClientExecution(request);return executeDecreaseStreamRetentionPeriod(request);},public DecreaseStreamRetentionPeriodResult decreaseStreamRetentionPeriodDecreaseStreamRetentionPeriodRequest request request  beforeClientExecutionrequestreturn executeDecreaseStreamRetentionPeriodrequest
"public void append(String name, RevTree tree) {append(name, TREE, tree);}",public void appendString name RevTree tree appendname TREE tree
public String getSessionToken() {return sessionToken;},public String getSessionToken return sessionToken
"public ListIterator<E> listIterator(int index) {Object[] snapshot = elements;if (index < 0 || index > snapshot.length) {throw new IndexOutOfBoundsException(""index="" + index + "", length="" + snapshot.length);}CowIterator<E> result = new CowIterator<E>(snapshot, 0, snapshot.length);result.index = index;return result;}",public ListIteratorE listIteratorint index Object snapshot  elementsif index  0  index  snapshotlength throw new IndexOutOfBoundsExceptionindex  index   length  snapshotlengthCowIteratorE result  new CowIteratorEsnapshot 0 snapshotlengthresultindex  indexreturn result
"public synchronized Span[] getTerms(String sentence) {if (tokenizer == null) {Span[] span1 = new Span[1];span1[0] = new Span(0, sentence.length());return span1;}return tokenizer.tokenizePos(sentence);}",public synchronized Span getTermsString sentence if tokenizer  null Span span1  new Span1span10  new Span0 sentencelengthreturn span1return tokenizertokenizePossentence
public DeleteRelationalDatabaseSnapshotResult deleteRelationalDatabaseSnapshot(DeleteRelationalDatabaseSnapshotRequest request) {request = beforeClientExecution(request);return executeDeleteRelationalDatabaseSnapshot(request);},public DeleteRelationalDatabaseSnapshotResult deleteRelationalDatabaseSnapshotDeleteRelationalDatabaseSnapshotRequest request request  beforeClientExecutionrequestreturn executeDeleteRelationalDatabaseSnapshotrequest
public CheckDomainAvailabilityResult checkDomainAvailability(CheckDomainAvailabilityRequest request) {request = beforeClientExecution(request);return executeCheckDomainAvailability(request);},public CheckDomainAvailabilityResult checkDomainAvailabilityCheckDomainAvailabilityRequest request request  beforeClientExecutionrequestreturn executeCheckDomainAvailabilityrequest
public DeleteVaultRequest(String vaultName) {setVaultName(vaultName);},public DeleteVaultRequestString vaultName setVaultNamevaultName
public InputStream getInputStream() {return rawIn;},public InputStream getInputStream return rawIn
"public final byte[] getBytes(int sizeLimit) throws LargeObjectException,MissingObjectException, IOException {byte[] cached = getCachedBytes(sizeLimit);try {return cloneArray(cached);} catch (OutOfMemoryError tooBig) {throw new LargeObjectException.OutOfMemory(tooBig);}}",public final byte getBytesint sizeLimit throws LargeObjectExceptionMissingObjectException IOException byte cached  getCachedBytessizeLimittry return cloneArraycached catch OutOfMemoryError tooBig throw new LargeObjectExceptionOutOfMemorytooBig
"public HSSFSimpleShape createSimpleShape(HSSFClientAnchor anchor) {HSSFSimpleShape shape = new HSSFSimpleShape(null, anchor);addShape(shape);onCreate(shape);return shape;}",public HSSFSimpleShape createSimpleShapeHSSFClientAnchor anchor HSSFSimpleShape shape  new HSSFSimpleShapenull anchoraddShapeshapeonCreateshapereturn shape
"public synchronized V remove(Object key) {int hash = secondaryHash(key.hashCode());HashtableEntry<K, V>[] tab = table;int index = hash & (tab.length - 1);for (HashtableEntry<K, V> e = tab[index], prev = null;e != null; prev = e, e = e.next) {if (e.hash == hash && key.equals(e.key)) {if (prev == null) {tab[index] = e.next;} else {prev.next = e.next;}modCount++;size--;return e.value;}}return null;}",public synchronized V removeObject key int hash  secondaryHashkeyhashCodeHashtableEntryK V tab  tableint index  hash  tablength  1for HashtableEntryK V e  tabindex prev  nulle  null prev  e e  enext if ehash  hash  keyequalsekey if prev  null tabindex  enext else prevnext  enextmodCountsizereturn evaluereturn null
"public final ValueEval getValue(int sheetIndex, int row, int col) {return getRelativeValue(sheetIndex, row, col);}",public final ValueEval getValueint sheetIndex int row int col return getRelativeValuesheetIndex row col
public SetIdentityNotificationTopicResult setIdentityNotificationTopic(SetIdentityNotificationTopicRequest request) {request = beforeClientExecution(request);return executeSetIdentityNotificationTopic(request);},public SetIdentityNotificationTopicResult setIdentityNotificationTopicSetIdentityNotificationTopicRequest request request  beforeClientExecutionrequestreturn executeSetIdentityNotificationTopicrequest
public void serialize(LittleEndianOutput out) {out.write(_rawData);},public void serializeLittleEndianOutput out outwriterawData
"public BlockJoinWeight(Query joinQuery, Weight childWeight, BitSetProducer parentsFilter, ScoreMode scoreMode) {super(joinQuery, childWeight);this.parentsFilter = parentsFilter;this.scoreMode = scoreMode;}",public BlockJoinWeightQuery joinQuery Weight childWeight BitSetProducer parentsFilter ScoreMode scoreMode superjoinQuery childWeightthisparentsFilter  parentsFilterthisscoreMode  scoreMode
public Builder() {this.field = null;this.termArrays = new ArrayList<>();this.positions = new ArrayList<>();this.slop = 0;},public Builder thisfield  nullthistermArrays  new ArrayListthispositions  new ArrayListthisslop  0
public CreateGameSessionQueueResult createGameSessionQueue(CreateGameSessionQueueRequest request) {request = beforeClientExecution(request);return executeCreateGameSessionQueue(request);},public CreateGameSessionQueueResult createGameSessionQueueCreateGameSessionQueueRequest request request  beforeClientExecutionrequestreturn executeCreateGameSessionQueuerequest
public DescribeMetricCollectionTypesResult describeMetricCollectionTypes() {return describeMetricCollectionTypes(new DescribeMetricCollectionTypesRequest());},public DescribeMetricCollectionTypesResult describeMetricCollectionTypes return describeMetricCollectionTypesnew DescribeMetricCollectionTypesRequest
@Override public boolean contains(Object o) {if (o instanceof Entry) {Entry<?> entry = (Entry<?>) o;int count = count(entry.getElement());return (count == entry.getCount()) && (count > 0);}return false;},Override public boolean containsObject o if o instanceof Entry Entry entry  Entry oint count  countentrygetElementreturn count  entrygetCount  count  0return false
public synchronized int get(FacetLabel categoryPath) {Integer res = cache.get(categoryPath);if (res == null) {return -1;}return res.intValue();},public synchronized int getFacetLabel categoryPath Integer res  cachegetcategoryPathif res  null return 1return resintValue
"@Override public boolean containsKey(Object key) {if (key == null) {return entryForNullKey != null;}int hash = key.hashCode();hash ^= (hash >>> 20) ^ (hash >>> 12);hash ^= (hash >>> 7) ^ (hash >>> 4);HashMapEntry<K, V>[] tab = table;for (HashMapEntry<K, V> e = tab[hash & (tab.length - 1)];e != null; e = e.next) {K eKey = e.key;if (eKey == key || (e.hash == hash && key.equals(eKey))) {return true;}}return false;}",Override public boolean containsKeyObject key if key  null return entryForNullKey  nullint hash  keyhashCodehash  hash  20  hash  12hash  hash  7  hash  4HashMapEntryK V tab  tablefor HashMapEntryK V e  tabhash  tablength  1e  null e  enext K eKey  ekeyif eKey  key  ehash  hash  keyequalseKey return truereturn false
public boolean equals(Object obj) {if (obj instanceof Point) {Point that = (Point) obj;return this.x == that.x && this.y == that.y;}return false;},public boolean equalsObject obj if obj instanceof Point Point that  Point objreturn thisx  thatx  thisy  thatyreturn false
"public void message(String component, String message) {assert false: ""message() should not be called when isEnabled returns false"";}",public void messageString component String message assert false message should not be called when isEnabled returns false
public ListWorkerBlocksResult listWorkerBlocks(ListWorkerBlocksRequest request) {request = beforeClientExecution(request);return executeListWorkerBlocks(request);},public ListWorkerBlocksResult listWorkerBlocksListWorkerBlocksRequest request request  beforeClientExecutionrequestreturn executeListWorkerBlocksrequest
public ListProvisionedCapacityResult listProvisionedCapacity(ListProvisionedCapacityRequest request) {request = beforeClientExecution(request);return executeListProvisionedCapacity(request);},public ListProvisionedCapacityResult listProvisionedCapacityListProvisionedCapacityRequest request request  beforeClientExecutionrequestreturn executeListProvisionedCapacityrequest
@Override public boolean contains(Object value) {return containsValue(value);},Override public boolean containsObject value return containsValuevalue
public void exitEveryRule(ParserRuleContext ctx) {if (ctx.children instanceof ArrayList) {((ArrayList<?>)ctx.children).trimToSize();}},public void exitEveryRuleParserRuleContext ctx if ctxchildren instanceof ArrayList ArrayListctxchildrentrimToSize
"public int lookup(char[] text, int offset, int len) {if(!characterDefinition.isGroup(text[offset])) {return 1;}byte characterIdOfFirstCharacter = characterDefinition.getCharacterClass(text[offset]);int length = 1;for (int i = 1; i < len; i++) {if (characterIdOfFirstCharacter == characterDefinition.getCharacterClass(text[offset+i])){length++;} else {break;}}return length;}",public int lookupchar text int offset int len ifcharacterDefinitionisGrouptextoffset return 1byte characterIdOfFirstCharacter  characterDefinitiongetCharacterClasstextoffsetint length  1for int i  1 i  len i if characterIdOfFirstCharacter  characterDefinitiongetCharacterClasstextoffsetilength else breakreturn length
public GetJobOutputResult getJobOutput(GetJobOutputRequest request) {request = beforeClientExecution(request);return executeGetJobOutput(request);},public GetJobOutputResult getJobOutputGetJobOutputRequest request request  beforeClientExecutionrequestreturn executeGetJobOutputrequest
"public void write(char b[], int off, int len) {reserve(len);unsafeWrite(b, off, len);}",public void writechar b int off int len reservelenunsafeWriteb off len
"public String toString() {return ""weight("" + TermQuery.this + "")"";}",public String toString return weight  TermQuerythis  
public int[] grow() {ParallelPostingsArray postingsArray = perField.postingsArray;final int oldSize = perField.postingsArray.size;postingsArray = perField.postingsArray = postingsArray.grow();perField.newPostingsArray();bytesUsed.addAndGet((postingsArray.bytesPerPosting() * (postingsArray.size - oldSize)));return postingsArray.textStarts;},public int grow ParallelPostingsArray postingsArray  perFieldpostingsArrayfinal int oldSize  perFieldpostingsArraysizepostingsArray  perFieldpostingsArray  postingsArraygrowperFieldnewPostingsArraybytesUsedaddAndGetpostingsArraybytesPerPosting  postingsArraysize  oldSizereturn postingsArraytextStarts
"public String toString() {return ""'""+text+""'"";}",public String toString return text
public boolean isMatch() {if (heads.isEmpty())return false;final ListIterator<Head> headIterator = heads.listIterator(heads.size());while (headIterator.hasPrevious()) {final Head head = headIterator.previous();if (head == LastHead.INSTANCE) {return true;}}return false;},public boolean isMatch if headsisEmptyreturn falsefinal ListIteratorHead headIterator  headslistIteratorheadssizewhile headIteratorhasPrevious final Head head  headIteratorpreviousif head  LastHeadINSTANCE return truereturn false
public CRNRecord[] getCrns() {return _crns.clone();},public CRNRecord getCrns return crnsclone
"public String toString() {return ""slot:"" + slot + "" "" + super.toString();}",public String toString return slot  slot     supertoString
"public int apply(char s[], int len) {if (len < min)return len;if (suffixes != null) {boolean found = false;for (int i = 0; i < suffixes.length; i++)if (endsWith(s, len, suffixes[i])) {found = true;break;}if (!found) return len;}for (int i = 0; i < rules.length; i++) {if (rules[i].matches(s, len))return rules[i].replace(s, len);}return len;}",public int applychar s int len if len  minreturn lenif suffixes  null boolean found  falsefor int i  0 i  suffixeslength iif endsWiths len suffixesi found  truebreakif found return lenfor int i  0 i  ruleslength i if rulesimatchess lenreturn rulesireplaces lenreturn len
"public ModifyInstanceAttributeRequest(String instanceId, InstanceAttributeName attribute) {setInstanceId(instanceId);setAttribute(attribute.toString());}",public ModifyInstanceAttributeRequestString instanceId InstanceAttributeName attribute setInstanceIdinstanceIdsetAttributeattributetoString
public ListEventTrackersResult listEventTrackers(ListEventTrackersRequest request) {request = beforeClientExecution(request);return executeListEventTrackers(request);},public ListEventTrackersResult listEventTrackersListEventTrackersRequest request request  beforeClientExecutionrequestreturn executeListEventTrackersrequest
public boolean isNewFragment() {boolean isNewFrag = offsetAtt.endOffset() >= (fragmentSize * currentNumFrags);if (isNewFrag) {currentNumFrags++;}return isNewFrag;},public boolean isNewFragment boolean isNewFrag  offsetAttendOffset  fragmentSize  currentNumFragsif isNewFrag currentNumFragsreturn isNewFrag
public BatchGetQueryExecutionResult batchGetQueryExecution(BatchGetQueryExecutionRequest request) {request = beforeClientExecution(request);return executeBatchGetQueryExecution(request);},public BatchGetQueryExecutionResult batchGetQueryExecutionBatchGetQueryExecutionRequest request request  beforeClientExecutionrequestreturn executeBatchGetQueryExecutionrequest
public static double cos(double a) {if (a < 0.0) {a = -a;}if (a > SIN_COS_MAX_VALUE_FOR_INT_MODULO) {return Math.cos(a);}int index = (int)(a * SIN_COS_INDEXER + 0.5);double delta = (a - index * SIN_COS_DELTA_HI) - index * SIN_COS_DELTA_LO;index &= (SIN_COS_TABS_SIZE-2); double indexCos = cosTab[index];double indexSin = sinTab[index];return indexCos + delta * (-indexSin + delta * (-indexCos * ONE_DIV_F2 + delta * (indexSin * ONE_DIV_F3 + delta * indexCos * ONE_DIV_F4)));},public static double cosdouble a if a  00 a  aif a  SINCOSMAXVALUEFORINTMODULO return Mathcosaint index  inta  SINCOSINDEXER  05double delta  a  index  SINCOSDELTAHI  index  SINCOSDELTALOindex  SINCOSTABSSIZE2 double indexCos  cosTabindexdouble indexSin  sinTabindexreturn indexCos  delta  indexSin  delta  indexCos  ONEDIVF2  delta  indexSin  ONEDIVF3  delta  indexCos  ONEDIVF4
public ByteBuffer putLong(long value) {throw new ReadOnlyBufferException();},public ByteBuffer putLonglong value throw new ReadOnlyBufferException
"public String toString() {StringBuilder sb = new StringBuilder();sb.append(getClass().getName());sb.append("" ["");sb.append(""sheetIx="").append(getExternSheetIndex());sb.append("" ! "");sb.append(formatReferenceAsString());sb.append(""]"");return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappendgetClassgetNamesbappend sbappendsheetIxappendgetExternSheetIndexsbappend  sbappendformatReferenceAsStringsbappendreturn sbtoString
"public STSAssumeRoleSessionCredentialsProvider(AlibabaCloudCredentials longLivedCredentials,String roleArn, IClientProfile clientProfile) {this(new StaticCredentialsProvider(longLivedCredentials), roleArn, clientProfile);}",public STSAssumeRoleSessionCredentialsProviderAlibabaCloudCredentials longLivedCredentialsString roleArn IClientProfile clientProfile thisnew StaticCredentialsProviderlongLivedCredentials roleArn clientProfile
"public SessionToken(String id, Revision revision) {this.id = id;this.version = revision.getVersion();this.sourceFiles = revision.getSourceFiles();}",public SessionTokenString id Revision revision thisid  idthisversion  revisiongetVersionthissourceFiles  revisiongetSourceFiles
"public Collection<String> call() throws GitAPIException {checkCallable();try (SubmoduleWalk generator = SubmoduleWalk.forIndex(repo)) {if (!paths.isEmpty())generator.setFilter(PathFilterGroup.createFromStrings(paths));StoredConfig config = repo.getConfig();List<String> initialized = new ArrayList<>();while (generator.next()) {if (generator.getConfigUrl() != null)continue;String path = generator.getPath();String name = generator.getModuleName();String url = generator.getRemoteUrl();String update = generator.getModulesUpdate();if (url != null)config.setString(ConfigConstants.CONFIG_SUBMODULE_SECTION,name, ConfigConstants.CONFIG_KEY_URL, url);if (update != null)config.setString(ConfigConstants.CONFIG_SUBMODULE_SECTION,name, ConfigConstants.CONFIG_KEY_UPDATE, update);if (url != null || update != null)initialized.add(path);}if (!initialized.isEmpty())config.save();return initialized;} catch (IOException | ConfigInvalidException e) {throw new JGitInternalException(e.getMessage(), e);}}",public CollectionString call throws GitAPIException checkCallabletry SubmoduleWalk generator  SubmoduleWalkforIndexrepo if pathsisEmptygeneratorsetFilterPathFilterGroupcreateFromStringspathsStoredConfig config  repogetConfigListString initialized  new ArrayListwhile generatornext if generatorgetConfigUrl  nullcontinueString path  generatorgetPathString name  generatorgetModuleNameString url  generatorgetRemoteUrlString update  generatorgetModulesUpdateif url  nullconfigsetStringConfigConstantsCONFIGSUBMODULESECTIONname ConfigConstantsCONFIGKEYURL urlif update  nullconfigsetStringConfigConstantsCONFIGSUBMODULESECTIONname ConfigConstantsCONFIGKEYUPDATE updateif url  null  update  nullinitializedaddpathif initializedisEmptyconfigsavereturn initialized catch IOException  ConfigInvalidException e throw new JGitInternalExceptionegetMessage e
"public CreateVaultRequest(String accountId, String vaultName) {setAccountId(accountId);setVaultName(vaultName);}",public CreateVaultRequestString accountId String vaultName setAccountIdaccountIdsetVaultNamevaultName
public BooleanQueryNode(List<QueryNode> clauses) {setLeaf(false);allocate();set(clauses);},public BooleanQueryNodeListQueryNode clauses setLeaffalseallocatesetclauses
public DVALRecord() {field_cbo_id = 0xFFFFFFFF;field_5_dv_no = 0x00000000;},public DVALRecord fieldcboid  0xFFFFFFFFfield5dvno  0x00000000
public ListConfigurationsResult listConfigurations(ListConfigurationsRequest request) {request = beforeClientExecution(request);return executeListConfigurations(request);},public ListConfigurationsResult listConfigurationsListConfigurationsRequest request request  beforeClientExecutionrequestreturn executeListConfigurationsrequest
"public String toFormulaString() {throw new RuntimeException(""3D references need a workbook to determine formula text"");}",public String toFormulaString throw new RuntimeException3D references need a workbook to determine formula text
public int LA(int i) { return LT(i).getType(); },public int LAint i  return LTigetType 
"public void setCellValue(boolean value) {int row=_record.getRow();short col=_record.getColumn();short styleIndex=_record.getXFIndex();switch (_cellType) {default:setCellType(CellType.BOOLEAN, false, row, col, styleIndex);case BOOLEAN:(( BoolErrRecord ) _record).setValue(value);break;case FORMULA:((FormulaRecordAggregate)_record).setCachedBooleanResult(value);break;}}",public void setCellValueboolean value int rowrecordgetRowshort colrecordgetColumnshort styleIndexrecordgetXFIndexswitch cellType defaultsetCellTypeCellTypeBOOLEAN false row col styleIndexcase BOOLEAN BoolErrRecord  recordsetValuevaluebreakcase FORMULAFormulaRecordAggregaterecordsetCachedBooleanResultvaluebreak
public UntagDeliveryStreamResult untagDeliveryStream(UntagDeliveryStreamRequest request) {request = beforeClientExecution(request);return executeUntagDeliveryStream(request);},public UntagDeliveryStreamResult untagDeliveryStreamUntagDeliveryStreamRequest request request  beforeClientExecutionrequestreturn executeUntagDeliveryStreamrequest
"public CJKBigramFilterFactory(Map<String,String> args) {super(args);int flags = 0;if (getBoolean(args, ""han"", true)) {flags |= CJKBigramFilter.HAN;}if (getBoolean(args, ""hiragana"", true)) {flags |= CJKBigramFilter.HIRAGANA;}if (getBoolean(args, ""katakana"", true)) {flags |= CJKBigramFilter.KATAKANA;}if (getBoolean(args, ""hangul"", true)) {flags |= CJKBigramFilter.HANGUL;}this.flags = flags;this.outputUnigrams = getBoolean(args, ""outputUnigrams"", false);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public CJKBigramFilterFactoryMapStringString args superargsint flags  0if getBooleanargs han true flags  CJKBigramFilterHANif getBooleanargs hiragana true flags  CJKBigramFilterHIRAGANAif getBooleanargs katakana true flags  CJKBigramFilterKATAKANAif getBooleanargs hangul true flags  CJKBigramFilterHANGULthisflags  flagsthisoutputUnigrams  getBooleanargs outputUnigrams falseif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public static int toChars(int[] src, int srcOff, int srcLen, char[] dest, int destOff) {if (srcLen < 0) {throw new IllegalArgumentException(""srcLen must be >= 0"");}int written = 0;for (int i = 0; i < srcLen; ++i) {written += Character.toChars(src[srcOff + i], dest, destOff + written);}return written;}",public static int toCharsint src int srcOff int srcLen char dest int destOff if srcLen  0 throw new IllegalArgumentExceptionsrcLen must be  0int written  0for int i  0 i  srcLen i written  CharactertoCharssrcsrcOff  i dest destOff  writtenreturn written
"public StoredField(String name, long value) {super(name, TYPE);fieldsData = value;}",public StoredFieldString name long value supername TYPEfieldsData  value
"public static CFRuleRecord create(HSSFSheet sheet, byte comparisonOperation,String formulaText1, String formulaText2) {Ptg[] formula1 = parseFormula(formulaText1, sheet);Ptg[] formula2 = parseFormula(formulaText2, sheet);return new CFRuleRecord(CONDITION_TYPE_CELL_VALUE_IS, comparisonOperation, formula1, formula2);}",public static CFRuleRecord createHSSFSheet sheet byte comparisonOperationString formulaText1 String formulaText2 Ptg formula1  parseFormulaformulaText1 sheetPtg formula2  parseFormulaformulaText2 sheetreturn new CFRuleRecordCONDITIONTYPECELLVALUEIS comparisonOperation formula1 formula2
public int newSlice(final int size) {if (byteUpto > BYTE_BLOCK_SIZE-size)nextBuffer();final int upto = byteUpto;byteUpto += size;buffer[byteUpto-1] = 16;return upto;},public int newSlicefinal int size if byteUpto  BYTEBLOCKSIZEsizenextBufferfinal int upto  byteUptobyteUpto  sizebufferbyteUpto1  16return upto
public DescribeWorkspaceDirectoriesResult describeWorkspaceDirectories() {return describeWorkspaceDirectories(new DescribeWorkspaceDirectoriesRequest());},public DescribeWorkspaceDirectoriesResult describeWorkspaceDirectories return describeWorkspaceDirectoriesnew DescribeWorkspaceDirectoriesRequest
"public String toString() {return getClass().getName() + "" ["" +_functionName +""]"";}",public String toString return getClassgetName    functionName 
"public void writeBytes(int stream, byte[] b, int offset, int len) {final int end = offset + len;for(int i=offset;i<end;i++)writeByte(stream, b[i]);}",public void writeBytesint stream byte b int offset int len final int end  offset  lenforint ioffsetiendiwriteBytestream bi
public GetExportSnapshotRecordsResult getExportSnapshotRecords(GetExportSnapshotRecordsRequest request) {request = beforeClientExecution(request);return executeGetExportSnapshotRecords(request);},public GetExportSnapshotRecordsResult getExportSnapshotRecordsGetExportSnapshotRecordsRequest request request  beforeClientExecutionrequestreturn executeGetExportSnapshotRecordsrequest
"public DeleteMessageResult deleteMessage(String queueUrl, String receiptHandle) {return deleteMessage(new DeleteMessageRequest().withQueueUrl(queueUrl).withReceiptHandle(receiptHandle));}",public DeleteMessageResult deleteMessageString queueUrl String receiptHandle return deleteMessagenew DeleteMessageRequestwithQueueUrlqueueUrlwithReceiptHandlereceiptHandle
public ModifyInstanceAttributeResult modifyInstanceAttribute(ModifyInstanceAttributeRequest request) {request = beforeClientExecution(request);return executeModifyInstanceAttribute(request);},public ModifyInstanceAttributeResult modifyInstanceAttributeModifyInstanceAttributeRequest request request  beforeClientExecutionrequestreturn executeModifyInstanceAttributerequest
"public static float[] copyOfRange(float[] original, int start, int end) {if (start > end) {throw new IllegalArgumentException();}int originalLength = original.length;if (start < 0 || start > originalLength) {throw new ArrayIndexOutOfBoundsException();}int resultLength = end - start;int copyLength = Math.min(resultLength, originalLength - start);float[] result = new float[resultLength];System.arraycopy(original, start, result, 0, copyLength);return result;}",public static float copyOfRangefloat original int start int end if start  end throw new IllegalArgumentExceptionint originalLength  originallengthif start  0  start  originalLength throw new ArrayIndexOutOfBoundsExceptionint resultLength  end  startint copyLength  MathminresultLength originalLength  startfloat result  new floatresultLengthSystemarraycopyoriginal start result 0 copyLengthreturn result
public TokenFilter create(TokenStream input) {SnowballStemmer program;try {program = stemClass.getConstructor().newInstance();} catch (Exception e) {}},public TokenFilter createTokenStream input SnowballStemmer programtry program  stemClassgetConstructornewInstance catch Exception e 
"public GetPhotosByMd5sRequest() {super(""CloudPhoto"", ""2017-07-11"", ""GetPhotosByMd5s"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public GetPhotosByMd5sRequest superCloudPhoto 20170711 GetPhotosByMd5s cloudphotosetProtocolProtocolTypeHTTPS
public StartOutboundVoiceContactResult startOutboundVoiceContact(StartOutboundVoiceContactRequest request) {request = beforeClientExecution(request);return executeStartOutboundVoiceContact(request);},public StartOutboundVoiceContactResult startOutboundVoiceContactStartOutboundVoiceContactRequest request request  beforeClientExecutionrequestreturn executeStartOutboundVoiceContactrequest
public void serialize(LittleEndianOutput out) {out.writeInt(field_1_x);out.writeInt(field_2_y);out.writeInt(field_3_width);out.writeInt(field_4_height);},public void serializeLittleEndianOutput out outwriteIntfield1xoutwriteIntfield2youtwriteIntfield3widthoutwriteIntfield4height
public String getEmailAddress() {return emailAddress;},public String getEmailAddress return emailAddress
"public ValueEval getRelativeValue(int sheetIndex, int relativeRowIndex, int relativeColumnIndex) {int rowIx = (relativeRowIndex + getFirstRow() ) ;int colIx = (relativeColumnIndex + getFirstColumn() ) ;return _evaluator.getEvalForCell(sheetIndex, rowIx, colIx);}",public ValueEval getRelativeValueint sheetIndex int relativeRowIndex int relativeColumnIndex int rowIx  relativeRowIndex  getFirstRow  int colIx  relativeColumnIndex  getFirstColumn  return evaluatorgetEvalForCellsheetIndex rowIx colIx
"public String toString() {StringBuilder sb = new StringBuilder();sb.append('[');for (byte[] b : table) {if (b == null)continue;if (sb.length() > 1)sb.append("" , ""); sb.append('""');sb.append(RawParseUtils.decode(b));sb.append('""');sb.append('(');sb.append(chainlength(b));sb.append(')');}sb.append(']');return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappendfor byte b  table if b  nullcontinueif sblength  1sbappend   sbappendsbappendRawParseUtilsdecodebsbappendsbappendsbappendchainlengthbsbappendsbappendreturn sbtoString
public void stopNow() {super.stopNow();if (runningParallelTasks != null) {for(ParallelTask t : runningParallelTasks) {if (t != null) {t.task.stopNow();}}}},public void stopNow superstopNowif runningParallelTasks  null forParallelTask t  runningParallelTasks if t  null ttaskstopNow
public UpdateLogPatternResult updateLogPattern(UpdateLogPatternRequest request) {request = beforeClientExecution(request);return executeUpdateLogPattern(request);},public UpdateLogPatternResult updateLogPatternUpdateLogPatternRequest request request  beforeClientExecutionrequestreturn executeUpdateLogPatternrequest
public FileMode getMode() {return mode;},public FileMode getMode return mode
"public ValueEval getEvalForCell(int sheetIndex, int rowIndex, int columnIndex) {return getSheetEvaluator(sheetIndex).getEvalForCell(rowIndex, columnIndex);}",public ValueEval getEvalForCellint sheetIndex int rowIndex int columnIndex return getSheetEvaluatorsheetIndexgetEvalForCellrowIndex columnIndex
"public String toString() {final StringBuilder buffer = new StringBuilder();for (Class<?> clazz = getClass(); clazz != null; clazz = clazz.getSuperclass()) {if (!clazz.isAnonymousClass()) {buffer.append(clazz.getSimpleName());break;}}buffer.append('(');final List<? extends IndexReader> subReaders = getSequentialSubReaders();assert subReaders != null;if (!subReaders.isEmpty()) {buffer.append(subReaders.get(0));for (int i = 1, c = subReaders.size(); i < c; ++i) {buffer.append("" "").append(subReaders.get(i));}}buffer.append(')');return buffer.toString();}",public String toString final StringBuilder buffer  new StringBuilderfor Class clazz  getClass clazz  null clazz  clazzgetSuperclass if clazzisAnonymousClass bufferappendclazzgetSimpleNamebreakbufferappendfinal List extends IndexReader subReaders  getSequentialSubReadersassert subReaders  nullif subReadersisEmpty bufferappendsubReadersget0for int i  1 c  subReaderssize i  c i bufferappend appendsubReadersgetibufferappendreturn buffertoString
public CreateTypedLinkFacetResult createTypedLinkFacet(CreateTypedLinkFacetRequest request) {request = beforeClientExecution(request);return executeCreateTypedLinkFacet(request);},public CreateTypedLinkFacetResult createTypedLinkFacetCreateTypedLinkFacetRequest request request  beforeClientExecutionrequestreturn executeCreateTypedLinkFacetrequest
public PutResolverRulePolicyResult putResolverRulePolicy(PutResolverRulePolicyRequest request) {request = beforeClientExecution(request);return executePutResolverRulePolicy(request);},public PutResolverRulePolicyResult putResolverRulePolicyPutResolverRulePolicyRequest request request  beforeClientExecutionrequestreturn executePutResolverRulePolicyrequest
public ConfirmPublicVirtualInterfaceResult confirmPublicVirtualInterface(ConfirmPublicVirtualInterfaceRequest request) {request = beforeClientExecution(request);return executeConfirmPublicVirtualInterface(request);},public ConfirmPublicVirtualInterfaceResult confirmPublicVirtualInterfaceConfirmPublicVirtualInterfaceRequest request request  beforeClientExecutionrequestreturn executeConfirmPublicVirtualInterfacerequest
"public FieldInfo add(FieldInfo fi) {return add(fi, -1);}",public FieldInfo addFieldInfo fi return addfi 1
public AssociateFleetResult associateFleet(AssociateFleetRequest request) {request = beforeClientExecution(request);return executeAssociateFleet(request);},public AssociateFleetResult associateFleetAssociateFleetRequest request request  beforeClientExecutionrequestreturn executeAssociateFleetrequest
public void close() {ctx.close();},public void close ctxclose
"public InclusiveRange(long start, long end) {assert end >= start;this.start = start;this.end = end;}",public InclusiveRangelong start long end assert end  startthisstart  startthisend  end
public UpdateProfilingGroupResult updateProfilingGroup(UpdateProfilingGroupRequest request) {request = beforeClientExecution(request);return executeUpdateProfilingGroup(request);},public UpdateProfilingGroupResult updateProfilingGroupUpdateProfilingGroupRequest request request  beforeClientExecutionrequestreturn executeUpdateProfilingGrouprequest
"public void seekExact(long ord) throws IOException {throw new UnsupportedOperationException(getClass().getName()+"" does not support seeking"");}",public void seekExactlong ord throws IOException throw new UnsupportedOperationExceptiongetClassgetName does not support seeking
public DetectStackSetDriftResult detectStackSetDrift(DetectStackSetDriftRequest request) {request = beforeClientExecution(request);return executeDetectStackSetDrift(request);},public DetectStackSetDriftResult detectStackSetDriftDetectStackSetDriftRequest request request  beforeClientExecutionrequestreturn executeDetectStackSetDriftrequest
public ListConfigurationProfilesResult listConfigurationProfiles(ListConfigurationProfilesRequest request) {request = beforeClientExecution(request);return executeListConfigurationProfiles(request);},public ListConfigurationProfilesResult listConfigurationProfilesListConfigurationProfilesRequest request request  beforeClientExecutionrequestreturn executeListConfigurationProfilesrequest
public int getFormat() {return FORMAT_OTHER;},public int getFormat return FORMATOTHER
"public K lastKey() {Entry<K, V> entry = endpoint(false);if (entry == null) {throw new NoSuchElementException();}return entry.getKey();}",public K lastKey EntryK V entry  endpointfalseif entry  null throw new NoSuchElementExceptionreturn entrygetKey
"public final void writeChars(String str) throws IOException {write(str.getBytes(""UTF-16BE""));}",public final void writeCharsString str throws IOException writestrgetBytesUTF16BE
public UpdateFleetPortSettingsResult updateFleetPortSettings(UpdateFleetPortSettingsRequest request) {request = beforeClientExecution(request);return executeUpdateFleetPortSettings(request);},public UpdateFleetPortSettingsResult updateFleetPortSettingsUpdateFleetPortSettingsRequest request request  beforeClientExecutionrequestreturn executeUpdateFleetPortSettingsrequest
"public RuleTransition(RuleStartState ruleStart,int ruleIndex,int precedence,ATNState followState){super(ruleStart);this.ruleIndex = ruleIndex;this.precedence = precedence;this.followState = followState;}",public RuleTransitionRuleStartState ruleStartint ruleIndexint precedenceATNState followStatesuperruleStartthisruleIndex  ruleIndexthisprecedence  precedencethisfollowState  followState
public GetConferenceProviderResult getConferenceProvider(GetConferenceProviderRequest request) {request = beforeClientExecution(request);return executeGetConferenceProvider(request);},public GetConferenceProviderResult getConferenceProviderGetConferenceProviderRequest request request  beforeClientExecutionrequestreturn executeGetConferenceProviderrequest
"public void decode(byte[] blocks, int blocksOffset, long[] values,int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = readLong(blocks, blocksOffset);blocksOffset += 8;valuesOffset = decode(block, values, valuesOffset);}}",public void decodebyte blocks int blocksOffset long valuesint valuesOffset int iterations for int i  0 i  iterations i final long block  readLongblocks blocksOffsetblocksOffset  8valuesOffset  decodeblock values valuesOffset
public void serialize(LittleEndianOutput out) {out.write(_data);},public void serializeLittleEndianOutput out outwritedata
"public void upgrade() throws IOException {if (!DirectoryReader.indexExists(dir)) {throw new IndexNotFoundException(dir.toString());}if (!deletePriorCommits) {final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);if (commits.size() > 1) {throw new IllegalArgumentException(""This tool was invoked to not delete prior commit points, but the following commits were found: "" + commits);}}iwc.setMergePolicy(new UpgradeIndexMergePolicy(iwc.getMergePolicy()));iwc.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());try (final IndexWriter w = new IndexWriter(dir, iwc)) {InfoStream infoStream = iwc.getInfoStream();if (infoStream.isEnabled(LOG_PREFIX)) {infoStream.message(LOG_PREFIX, ""Upgrading all pre-"" + Version.LATEST + "" segments of index directory '"" + dir + ""' to version "" + Version.LATEST + ""..."");}w.forceMerge(1);if (infoStream.isEnabled(LOG_PREFIX)) {infoStream.message(LOG_PREFIX, ""All segments upgraded to version "" + Version.LATEST);infoStream.message(LOG_PREFIX, ""Enforcing commit to rewrite all index metadata..."");}w.setLiveCommitData(w.getLiveCommitData()); assert w.hasUncommittedChanges();w.commit();if (infoStream.isEnabled(LOG_PREFIX)) {infoStream.message(LOG_PREFIX, ""Committed upgraded metadata to index."");}}}",public void upgrade throws IOException if DirectoryReaderindexExistsdir throw new IndexNotFoundExceptiondirtoStringif deletePriorCommits final CollectionIndexCommit commits  DirectoryReaderlistCommitsdirif commitssize  1 throw new IllegalArgumentExceptionThis tool was invoked to not delete prior commit points but the following commits were found   commitsiwcsetMergePolicynew UpgradeIndexMergePolicyiwcgetMergePolicyiwcsetIndexDeletionPolicynew KeepOnlyLastCommitDeletionPolicytry final IndexWriter w  new IndexWriterdir iwc InfoStream infoStream  iwcgetInfoStreamif infoStreamisEnabledLOGPREFIX infoStreammessageLOGPREFIX Upgrading all pre  VersionLATEST   segments of index directory   dir   to version   VersionLATEST  wforceMerge1if infoStreamisEnabledLOGPREFIX infoStreammessageLOGPREFIX All segments upgraded to version   VersionLATESTinfoStreammessageLOGPREFIX Enforcing commit to rewrite all index metadatawsetLiveCommitDatawgetLiveCommitData assert whasUncommittedChangeswcommitif infoStreamisEnabledLOGPREFIX infoStreammessageLOGPREFIX Committed upgraded metadata to index
"public byte[] getThumbnailAsWMF() throws HPSFException{if (!(getClipboardFormatTag() == CFTAG_WINDOWS))throw new HPSFException(""Clipboard Format Tag of Thumbnail must "" +""be CFTAG_WINDOWS."");if (!(getClipboardFormat() == CF_METAFILEPICT)) {throw new HPSFException(""Clipboard Format of Thumbnail must "" +""be CF_METAFILEPICT."");}byte[] thumbnail = getThumbnail();int wmfImageLength = thumbnail.length - OFFSET_WMFDATA;byte[] wmfImage = new byte[wmfImageLength];System.arraycopy(thumbnail,OFFSET_WMFDATA,wmfImage,0,wmfImageLength);return wmfImage;}",public byte getThumbnailAsWMF throws HPSFExceptionif getClipboardFormatTag  CFTAGWINDOWSthrow new HPSFExceptionClipboard Format Tag of Thumbnail must  be CFTAGWINDOWSif getClipboardFormat  CFMETAFILEPICT throw new HPSFExceptionClipboard Format of Thumbnail must  be CFMETAFILEPICTbyte thumbnail  getThumbnailint wmfImageLength  thumbnaillength  OFFSETWMFDATAbyte wmfImage  new bytewmfImageLengthSystemarraycopythumbnailOFFSETWMFDATAwmfImage0wmfImageLengthreturn wmfImage
public DescribeKeyPhrasesDetectionJobResult describeKeyPhrasesDetectionJob(DescribeKeyPhrasesDetectionJobRequest request) {request = beforeClientExecution(request);return executeDescribeKeyPhrasesDetectionJob(request);},public DescribeKeyPhrasesDetectionJobResult describeKeyPhrasesDetectionJobDescribeKeyPhrasesDetectionJobRequest request request  beforeClientExecutionrequestreturn executeDescribeKeyPhrasesDetectionJobrequest
"public LabelAndValue(String label, Number value) {this.label = label;this.value = value;}",public LabelAndValueString label Number value thislabel  labelthisvalue  value
"public RebaseCommand setUpstreamName(String upstreamName) {if (upstreamCommit == null) {throw new IllegalStateException(""setUpstreamName must be called after setUpstream.""); }this.upstreamCommitName = upstreamName;return this;}",public RebaseCommand setUpstreamNameString upstreamName if upstreamCommit  null throw new IllegalStateExceptionsetUpstreamName must be called after setUpstream thisupstreamCommitName  upstreamNamereturn this
public SearchDashboardsResult searchDashboards(SearchDashboardsRequest request) {request = beforeClientExecution(request);return executeSearchDashboards(request);},public SearchDashboardsResult searchDashboardsSearchDashboardsRequest request request  beforeClientExecutionrequestreturn executeSearchDashboardsrequest
public ClusterSubnetGroup createClusterSubnetGroup(CreateClusterSubnetGroupRequest request) {request = beforeClientExecution(request);return executeCreateClusterSubnetGroup(request);},public ClusterSubnetGroup createClusterSubnetGroupCreateClusterSubnetGroupRequest request request  beforeClientExecutionrequestreturn executeCreateClusterSubnetGrouprequest
"public static int endOfFooterLineKey(byte[] raw, int ptr) {try {for (;;) {final byte c = raw[ptr];if (footerLineKeyChars[c] == 0) {if (c == ':')return ptr;return -1;}ptr++;}} catch (ArrayIndexOutOfBoundsException e) {return -1;}}",public static int endOfFooterLineKeybyte raw int ptr try for  final byte c  rawptrif footerLineKeyCharsc  0 if c  return ptrreturn 1ptr catch ArrayIndexOutOfBoundsException e return 1
"public final char[] GetSuffix(int len) {char[] value = new char[len];System.arraycopy(buffer, bufferPosition - len, value, 0, len);return value;}",public final char GetSuffixint len char value  new charlenSystemarraycopybuffer bufferPosition  len value 0 lenreturn value
public boolean containsValue(Object value) {if(value instanceof CustomProperty) {return props.containsValue(value);}for(CustomProperty cp : props.values()) {if(cp.getValue() == value) {return true;}}return false;},public boolean containsValueObject value ifvalue instanceof CustomProperty return propscontainsValuevalueforCustomProperty cp  propsvalues ifcpgetValue  value return truereturn false
"public RecordInputStream createDecryptingStream(InputStream original) {String userPassword = Biff8EncryptionKey.getCurrentUserPassword();if (userPassword == null) {userPassword = Decryptor.DEFAULT_PASSWORD;}EncryptionInfo info = _filePassRec.getEncryptionInfo();try {if (!info.getDecryptor().verifyPassword(userPassword)) {throw new EncryptedDocumentException((Decryptor.DEFAULT_PASSWORD.equals(userPassword) ? ""Default"" : ""Supplied"")+ "" password is invalid for salt/verifier/verifierHash"");}} catch (GeneralSecurityException e) {throw new EncryptedDocumentException(e);}return new RecordInputStream(original, info, _initialRecordsSize);}",public RecordInputStream createDecryptingStreamInputStream original String userPassword  Biff8EncryptionKeygetCurrentUserPasswordif userPassword  null userPassword  DecryptorDEFAULTPASSWORDEncryptionInfo info  filePassRecgetEncryptionInfotry if infogetDecryptorverifyPassworduserPassword throw new EncryptedDocumentExceptionDecryptorDEFAULTPASSWORDequalsuserPassword  Default  Supplied  password is invalid for saltverifierverifierHash catch GeneralSecurityException e throw new EncryptedDocumentExceptionereturn new RecordInputStreamoriginal info initialRecordsSize
public UpdateComponentConfigurationResult updateComponentConfiguration(UpdateComponentConfigurationRequest request) {request = beforeClientExecution(request);return executeUpdateComponentConfiguration(request);},public UpdateComponentConfigurationResult updateComponentConfigurationUpdateComponentConfigurationRequest request request  beforeClientExecutionrequestreturn executeUpdateComponentConfigurationrequest
"public String toString() {CellReference crA = new CellReference(getFirstRow(), getFirstColumn());CellReference crB = new CellReference(getLastRow(), getLastColumn());return getClass().getName() + ""["" +_evaluator.getSheetNameRange() +'!' +crA.formatAsString() +':' +crB.formatAsString() +""]"";}",public String toString CellReference crA  new CellReferencegetFirstRow getFirstColumnCellReference crB  new CellReferencegetLastRow getLastColumnreturn getClassgetName   evaluatorgetSheetNameRange  crAformatAsString  crBformatAsString 
public SetDesiredCapacityResult setDesiredCapacity(SetDesiredCapacityRequest request) {request = beforeClientExecution(request);return executeSetDesiredCapacity(request);},public SetDesiredCapacityResult setDesiredCapacitySetDesiredCapacityRequest request request  beforeClientExecutionrequestreturn executeSetDesiredCapacityrequest
public long getTotalLLATNLookaheadOps() {DecisionInfo[] decisions = atnSimulator.getDecisionInfo();long k = 0;for (int i = 0; i < decisions.length; i++) {k += decisions[i].LL_ATNTransitions;}return k;},public long getTotalLLATNLookaheadOps DecisionInfo decisions  atnSimulatorgetDecisionInfolong k  0for int i  0 i  decisionslength i k  decisionsiLLATNTransitionsreturn k
public ListQueuesResult listQueues(ListQueuesRequest request) {request = beforeClientExecution(request);return executeListQueues(request);},public ListQueuesResult listQueuesListQueuesRequest request request  beforeClientExecutionrequestreturn executeListQueuesrequest
"public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long byte0 = blocks[blocksOffset++] & 0xFF;final long byte1 = blocks[blocksOffset++] & 0xFF;final long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 12) | (byte1 << 4) | (byte2 >>> 4);final long byte3 = blocks[blocksOffset++] & 0xFF;final long byte4 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte2 & 15) << 16) | (byte3 << 8) | byte4;}}",public void decodebyte blocks int blocksOffset long values int valuesOffset int iterations for int i  0 i  iterations i final long byte0  blocksblocksOffset  0xFFfinal long byte1  blocksblocksOffset  0xFFfinal long byte2  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  12  byte1  4  byte2  4final long byte3  blocksblocksOffset  0xFFfinal long byte4  blocksblocksOffset  0xFFvaluesvaluesOffset  byte2  15  16  byte3  8  byte4
public EnableVolumeIOResult enableVolumeIO(EnableVolumeIORequest request) {request = beforeClientExecution(request);return executeEnableVolumeIO(request);},public EnableVolumeIOResult enableVolumeIOEnableVolumeIORequest request request  beforeClientExecutionrequestreturn executeEnableVolumeIOrequest
public long seek(BytesRef target) throws IOException {current = fstEnum.seekFloor(target);return current.output;},public long seekBytesRef target throws IOException current  fstEnumseekFloortargetreturn currentoutput
public GetStreamingDistributionConfigRequest(String id) {setId(id);},public GetStreamingDistributionConfigRequestString id setIdid
"public WordnetSynonymParser(boolean dedup, boolean expand, Analyzer analyzer) {super(dedup, analyzer);this.expand = expand;}",public WordnetSynonymParserboolean dedup boolean expand Analyzer analyzer superdedup analyzerthisexpand  expand
public DescribeProblemResult describeProblem(DescribeProblemRequest request) {request = beforeClientExecution(request);return executeDescribeProblem(request);},public DescribeProblemResult describeProblemDescribeProblemRequest request request  beforeClientExecutionrequestreturn executeDescribeProblemrequest
public E floor(E e) {return backingMap.floorKey(e);},public E floorE e return backingMapfloorKeye
"public IrishLowerCaseFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public IrishLowerCaseFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public EnableAvailabilityZonesForLoadBalancerRequest(String loadBalancerName, java.util.List<String> availabilityZones) {setLoadBalancerName(loadBalancerName);setAvailabilityZones(availabilityZones);}",public EnableAvailabilityZonesForLoadBalancerRequestString loadBalancerName javautilListString availabilityZones setLoadBalancerNameloadBalancerNamesetAvailabilityZonesavailabilityZones
public DescribeLoadBalancerTargetGroupsResult describeLoadBalancerTargetGroups(DescribeLoadBalancerTargetGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeLoadBalancerTargetGroups(request);},public DescribeLoadBalancerTargetGroupsResult describeLoadBalancerTargetGroupsDescribeLoadBalancerTargetGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeLoadBalancerTargetGroupsrequest
public Snapshot copySnapshot(CopySnapshotRequest request) {request = beforeClientExecution(request);return executeCopySnapshot(request);},public Snapshot copySnapshotCopySnapshotRequest request request  beforeClientExecutionrequestreturn executeCopySnapshotrequest
"public Map<String, String> readForHideArrayItem(String response, String endpoint) {return readForHideItem(new StringCharacterIterator(response), endpoint, FIRST_POSITION);}",public MapString String readForHideArrayItemString response String endpoint return readForHideItemnew StringCharacterIteratorresponse endpoint FIRSTPOSITION
public LbsDropData(LittleEndianInput in) {_wStyle = in.readUShort();_cLine = in.readUShort();_dxMin = in.readUShort();_str = StringUtil.readUnicodeString(in);if(StringUtil.getEncodedSize(_str) % 2 != 0){_unused = in.readByte();}},public LbsDropDataLittleEndianInput in wStyle  inreadUShortcLine  inreadUShortdxMin  inreadUShortstr  StringUtilreadUnicodeStringinifStringUtilgetEncodedSizestr  2  0unused  inreadByte
"public void decode(long[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = blocks[blocksOffset++];for (int shift = 60; shift >= 0; shift -= 4) {values[valuesOffset++] = (block >>> shift) & 15;}}}",public void decodelong blocks int blocksOffset long values int valuesOffset int iterations for int i  0 i  iterations i final long block  blocksblocksOffsetfor int shift  60 shift  0 shift  4 valuesvaluesOffset  block  shift  15
"public int doLogic() throws Exception {final String docID = doc.get(DocMaker.ID_FIELD);if (docID == null) {throw new IllegalStateException(""document must define the docid field"");}final IndexWriter iw = getRunData().getIndexWriter();iw.updateDocument(new Term(DocMaker.ID_FIELD, docID), doc);return 1;}",public int doLogic throws Exception final String docID  docgetDocMakerIDFIELDif docID  null throw new IllegalStateExceptiondocument must define the docid fieldfinal IndexWriter iw  getRunDatagetIndexWriteriwupdateDocumentnew TermDocMakerIDFIELD docID docreturn 1
public ListInstanceFleetsResult listInstanceFleets(ListInstanceFleetsRequest request) {request = beforeClientExecution(request);return executeListInstanceFleets(request);},public ListInstanceFleetsResult listInstanceFleetsListInstanceFleetsRequest request request  beforeClientExecutionrequestreturn executeListInstanceFleetsrequest
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex,ValueEval arg0, ValueEval arg1) {return func.evaluate(srcRowIndex, srcColumnIndex, arg0, arg1);}",public ValueEval evaluateint srcRowIndex int srcColumnIndexValueEval arg0 ValueEval arg1 return funcevaluatesrcRowIndex srcColumnIndex arg0 arg1
public DescribeDBParametersResult describeDBParameters(DescribeDBParametersRequest request) {request = beforeClientExecution(request);return executeDescribeDBParameters(request);},public DescribeDBParametersResult describeDBParametersDescribeDBParametersRequest request request  beforeClientExecutionrequestreturn executeDescribeDBParametersrequest
public CreateFargateProfileResult createFargateProfile(CreateFargateProfileRequest request) {request = beforeClientExecution(request);return executeCreateFargateProfile(request);},public CreateFargateProfileResult createFargateProfileCreateFargateProfileRequest request request  beforeClientExecutionrequestreturn executeCreateFargateProfilerequest
public char previous() {if (offset == start) {return DONE;}return string.charAt(--offset);},public char previous if offset  start return DONEreturn stringcharAtoffset
"public List<String> call() throws GitAPIException {checkCallable();List<String> result = new ArrayList<>();if (tags.isEmpty())return result;try {setCallable(false);for (String tagName : tags) {if (tagName == null)continue;Ref currentRef = repo.findRef(tagName);if (currentRef == null)continue;String fullName = currentRef.getName();RefUpdate update = repo.updateRef(fullName);update.setForceUpdate(true);Result deleteResult = update.delete();boolean ok = true;switch (deleteResult) {case IO_FAILURE: case LOCK_FAILURE: case REJECTED: ok = false;break;default:break;}if (ok) {result.add(fullName);} else throw new JGitInternalException(MessageFormat.format(JGitText.get().deleteTagUnexpectedResult,deleteResult.name()));}return result;} catch (IOException ioe) {throw new JGitInternalException(ioe.getMessage(), ioe);}}",public ListString call throws GitAPIException checkCallableListString result  new ArrayListif tagsisEmptyreturn resulttry setCallablefalsefor String tagName  tags if tagName  nullcontinueRef currentRef  repofindReftagNameif currentRef  nullcontinueString fullName  currentRefgetNameRefUpdate update  repoupdateReffullNameupdatesetForceUpdatetrueResult deleteResult  updatedeleteboolean ok  trueswitch deleteResult case IOFAILURE case LOCKFAILURE case REJECTED ok  falsebreakdefaultbreakif ok resultaddfullName else throw new JGitInternalExceptionMessageFormatformatJGitTextgetdeleteTagUnexpectedResultdeleteResultnamereturn result catch IOException ioe throw new JGitInternalExceptionioegetMessage ioe
"public static void fill(byte[] array, byte value) {for (int i = 0; i < array.length; i++) {array[i] = value;}}",public static void fillbyte array byte value for int i  0 i  arraylength i arrayi  value
public CreateSampleFindingsResult createSampleFindings(CreateSampleFindingsRequest request) {request = beforeClientExecution(request);return executeCreateSampleFindings(request);},public CreateSampleFindingsResult createSampleFindingsCreateSampleFindingsRequest request request  beforeClientExecutionrequestreturn executeCreateSampleFindingsrequest
public Builder() {slop = 0;terms = new ArrayList<>();positions = new ArrayList<>();},public Builder slop  0terms  new ArrayListpositions  new ArrayList
"public boolean Run(char[] s, int offset, int length) {int p = 0;int l = offset + length;for (int i = offset, cp = 0; i < l; i += Character.charCount(cp)) {p = step(p, cp = Character.codePointAt(s, i, l));if (p == -1) return false;}return accept.get(p);}",public boolean Runchar s int offset int length int p  0int l  offset  lengthfor int i  offset cp  0 i  l i  CharactercharCountcp p  stepp cp  CharactercodePointAts i lif p  1 return falsereturn acceptgetp
"public String toFormulaString() {return ""ERR#"";}",public String toFormulaString return ERR
public void close() {synchronized (lock) {if (out != null) {try {out.close();} catch (IOException e) {setError();}out = null;}}},public void close synchronized lock if out  null try outclose catch IOException e setErrorout  null
"public int fillFields( byte[] data, int offset,EscherRecordFactory recordFactory ){int bytesRemaining = readHeader( data, offset );short propertiesCount = readInstance( data, offset );int pos = offset + 8;EscherPropertyFactory f = new EscherPropertyFactory();properties.clear();properties.addAll( f.createProperties( data, pos, propertiesCount ) );return bytesRemaining + 8;}",public int fillFields byte data int offsetEscherRecordFactory recordFactory int bytesRemaining  readHeader data offset short propertiesCount  readInstance data offset int pos  offset  8EscherPropertyFactory f  new EscherPropertyFactorypropertiesclearpropertiesaddAll fcreateProperties data pos propertiesCount  return bytesRemaining  8
"public EveryNOrDocFreqTermSelector(int docFreqThresh, int interval) {this.interval = interval;this.docFreqThresh = docFreqThresh;count = interval;}",public EveryNOrDocFreqTermSelectorint docFreqThresh int interval thisinterval  intervalthisdocFreqThresh  docFreqThreshcount  interval
public UpdateAvailabilityOptionsResult updateAvailabilityOptions(UpdateAvailabilityOptionsRequest request) {request = beforeClientExecution(request);return executeUpdateAvailabilityOptions(request);},public UpdateAvailabilityOptionsResult updateAvailabilityOptionsUpdateAvailabilityOptionsRequest request request  beforeClientExecutionrequestreturn executeUpdateAvailabilityOptionsrequest
public AddInstanceFleetResult addInstanceFleet(AddInstanceFleetRequest request) {request = beforeClientExecution(request);return executeAddInstanceFleet(request);},public AddInstanceFleetResult addInstanceFleetAddInstanceFleetRequest request request  beforeClientExecutionrequestreturn executeAddInstanceFleetrequest
"public synchronized void setMax(int max) {super.setMax(max);if ((mKeyProgressIncrement == 0) || (getMax() / mKeyProgressIncrement > 20)) {setKeyProgressIncrement(Math.max(1, Math.round((float) getMax() / 20)));}}",public synchronized void setMaxint max supersetMaxmaxif mKeyProgressIncrement  0  getMax  mKeyProgressIncrement  20 setKeyProgressIncrementMathmax1 Mathroundfloat getMax  20
"public LazyAreaEval getRow(int rowIndex) {if (rowIndex >= getHeight()) {throw new IllegalArgumentException(""Invalid rowIndex "" + rowIndex+ "".  Allowable range is (0.."" + getHeight() + "")."");}int absRowIx = getFirstRow() + rowIndex;return new LazyAreaEval(absRowIx, getFirstColumn(), absRowIx, getLastColumn(), _evaluator);}",public LazyAreaEval getRowint rowIndex if rowIndex  getHeight throw new IllegalArgumentExceptionInvalid rowIndex   rowIndex   Allowable range is 0  getHeight  int absRowIx  getFirstRow  rowIndexreturn new LazyAreaEvalabsRowIx getFirstColumn absRowIx getLastColumn evaluator
"public IntervalSet getExpectedTokens(int stateNumber, RuleContext context) {if (stateNumber < 0 || stateNumber >= states.size()) {throw new IllegalArgumentException(""Invalid state number."");}RuleContext ctx = context;ATNState s = states.get(stateNumber);IntervalSet following = nextTokens(s);if (!following.contains(Token.EPSILON)) {return following;}IntervalSet expected = new IntervalSet();expected.addAll(following);expected.remove(Token.EPSILON);while (ctx != null && ctx.invokingState >= 0 && following.contains(Token.EPSILON)) {ATNState invokingState = states.get(ctx.invokingState);RuleTransition rt = (RuleTransition)invokingState.transition(0);following = nextTokens(rt.followState);expected.addAll(following);expected.remove(Token.EPSILON);ctx = ctx.parent;}if (following.contains(Token.EPSILON)) {expected.add(Token.EOF);}return expected;}",public IntervalSet getExpectedTokensint stateNumber RuleContext context if stateNumber  0  stateNumber  statessize throw new IllegalArgumentExceptionInvalid state numberRuleContext ctx  contextATNState s  statesgetstateNumberIntervalSet following  nextTokenssif followingcontainsTokenEPSILON return followingIntervalSet expected  new IntervalSetexpectedaddAllfollowingexpectedremoveTokenEPSILONwhile ctx  null  ctxinvokingState  0  followingcontainsTokenEPSILON ATNState invokingState  statesgetctxinvokingStateRuleTransition rt  RuleTransitioninvokingStatetransition0following  nextTokensrtfollowStateexpectedaddAllfollowingexpectedremoveTokenEPSILONctx  ctxparentif followingcontainsTokenEPSILON expectedaddTokenEOFreturn expected
public UntagResourceResult untagResource(UntagResourceRequest request) {request = beforeClientExecution(request);return executeUntagResource(request);},public UntagResourceResult untagResourceUntagResourceRequest request request  beforeClientExecutionrequestreturn executeUntagResourcerequest
public String getInflectionForm(int wordId) {return null;},public String getInflectionFormint wordId return null
"public Ref3DPxg(int externalWorkbookNumber, SheetIdentifier sheetName, CellReference c) {super(c);this.externalWorkbookNumber = externalWorkbookNumber;this.firstSheetName = sheetName.getSheetIdentifier().getName();if (sheetName instanceof SheetRangeIdentifier) {this.lastSheetName = ((SheetRangeIdentifier)sheetName).getLastSheetIdentifier().getName();} else {this.lastSheetName = null;}}",public Ref3DPxgint externalWorkbookNumber SheetIdentifier sheetName CellReference c supercthisexternalWorkbookNumber  externalWorkbookNumberthisfirstSheetName  sheetNamegetSheetIdentifiergetNameif sheetName instanceof SheetRangeIdentifier thislastSheetName  SheetRangeIdentifiersheetNamegetLastSheetIdentifiergetName else thislastSheetName  null
"public ModifyJumpserverPasswordRequest() {super(""HPC"", ""2016-06-03"", ""ModifyJumpserverPassword"", ""hpc"");setMethod(MethodType.POST);}",public ModifyJumpserverPasswordRequest superHPC 20160603 ModifyJumpserverPassword hpcsetMethodMethodTypePOST
public SearchLocalGatewayRoutesResult searchLocalGatewayRoutes(SearchLocalGatewayRoutesRequest request) {request = beforeClientExecution(request);return executeSearchLocalGatewayRoutes(request);},public SearchLocalGatewayRoutesResult searchLocalGatewayRoutesSearchLocalGatewayRoutesRequest request request  beforeClientExecutionrequestreturn executeSearchLocalGatewayRoutesrequest
"public void write(byte[] buffer) throws IOException {write(buffer, 0, buffer.length);}",public void writebyte buffer throws IOException writebuffer 0 bufferlength
"public ExtendedPivotTableViewFieldsRecord(RecordInputStream in) {_grbit1 = in.readInt();_grbit2 = in.readUByte();_citmShow = in.readUByte();_isxdiSort = in.readUShort();_isxdiShow = in.readUShort();switch (in.remaining()) {case 0:_reserved1 = 0;_reserved2 = 0;_subtotalName = null;return;case 10:break;default:throw new RecordFormatException(""Unexpected remaining size ("" + in.remaining() + "")"");}int cchSubName = in.readUShort();_reserved1 = in.readInt();_reserved2 = in.readInt();if (cchSubName != STRING_NOT_PRESENT_LEN) {_subtotalName = in.readUnicodeLEString(cchSubName);}}",public ExtendedPivotTableViewFieldsRecordRecordInputStream in grbit1  inreadIntgrbit2  inreadUBytecitmShow  inreadUByteisxdiSort  inreadUShortisxdiShow  inreadUShortswitch inremaining case 0reserved1  0reserved2  0subtotalName  nullreturncase 10breakdefaultthrow new RecordFormatExceptionUnexpected remaining size   inremaining  int cchSubName  inreadUShortreserved1  inreadIntreserved2  inreadIntif cchSubName  STRINGNOTPRESENTLEN subtotalName  inreadUnicodeLEStringcchSubName
"public static double cosh(double d) {double ePowX = Math.pow(Math.E, d);double ePowNegX = Math.pow(Math.E, -d);return (ePowX + ePowNegX) / 2;}",public static double coshdouble d double ePowX  MathpowMathE ddouble ePowNegX  MathpowMathE dreturn ePowX  ePowNegX  2
public List<String> getDFAStrings() {synchronized (_interp.decisionToDFA) {List<String> s = new ArrayList<String>();for (int d = 0; d < _interp.decisionToDFA.length; d++) {DFA dfa = _interp.decisionToDFA[d];s.add( dfa.toString(getVocabulary()) );}return s;}},public ListString getDFAStrings synchronized interpdecisionToDFA ListString s  new ArrayListStringfor int d  0 d  interpdecisionToDFAlength d DFA dfa  interpdecisionToDFAdsadd dfatoStringgetVocabulary return s
public LexerChannelAction(int channel) {this.channel = channel;},public LexerChannelActionint channel thischannel  channel
"public MappingCharFilter(NormalizeCharMap normMap, Reader in) {super(in);buffer.reset(in);map = normMap.map;cachedRootArcs = normMap.cachedRootArcs;if (map != null) {fstReader = map.getBytesReader();} else {fstReader = null;}}",public MappingCharFilterNormalizeCharMap normMap Reader in superinbufferresetinmap  normMapmapcachedRootArcs  normMapcachedRootArcsif map  null fstReader  mapgetBytesReader else fstReader  null
"public String toString() {String newline = System.getProperty(""line.separator"");StringBuilder sb = new StringBuilder();sb.append(sequence.toString());sb.append(newline);return sb.toString();}",public String toString String newline  SystemgetPropertylineseparatorStringBuilder sb  new StringBuildersbappendsequencetoStringsbappendnewlinereturn sbtoString
public void visitContainedRecords(RecordVisitor rv) {for (CFRecordsAggregate subAgg : _cfHeaders) {subAgg.visitContainedRecords(rv);}},public void visitContainedRecordsRecordVisitor rv for CFRecordsAggregate subAgg  cfHeaders subAggvisitContainedRecordsrv
"public static boolean equals(short[] array1, short[] array2) {if (array1 == array2) {return true;}if (array1 == null || array2 == null || array1.length != array2.length) {return false;}for (int i = 0; i < array1.length; i++) {if (array1[i] != array2[i]) {return false;}}return true;}",public static boolean equalsshort array1 short array2 if array1  array2 return trueif array1  null  array2  null  array1length  array2length return falsefor int i  0 i  array1length i if array1i  array2i return falsereturn true
"public String getString(){return getString(field_2_bytes, codepage);}",public String getStringreturn getStringfield2bytes codepage
public SimpleDate(Calendar cal) {year = cal.get(Calendar.YEAR);month = cal.get(Calendar.MONTH) + 1;day = cal.get(Calendar.DAY_OF_MONTH);tsMilliseconds = cal.getTimeInMillis();},public SimpleDateCalendar cal year  calgetCalendarYEARmonth  calgetCalendarMONTH  1day  calgetCalendarDAYOFMONTHtsMilliseconds  calgetTimeInMillis
"public TreeFilter clone() {throw new IllegalStateException(""Do not clone this kind of filter: "" + getClass().getName());}",public TreeFilter clone throw new IllegalStateExceptionDo not clone this kind of filter   getClassgetName
"public String getText(Interval interval) {int start = interval.a;int stop = interval.b;if ( start<0 || stop<0 ) return """";fill();if ( stop>=tokens.size() ) stop = tokens.size()-1;StringBuilder buf = new StringBuilder();for (int i = start; i <= stop; i++) {Token t = tokens.get(i);if ( t.getType()==Token.EOF ) break;buf.append(t.getText());}return buf.toString();}",public String getTextInterval interval int start  intervalaint stop  intervalbif  start0  stop0  return fillif  stoptokenssize  stop  tokenssize1StringBuilder buf  new StringBuilderfor int i  start i  stop i Token t  tokensgetiif  tgetTypeTokenEOF  breakbufappendtgetTextreturn buftoString
public CancelStepsResult cancelSteps(CancelStepsRequest request) {request = beforeClientExecution(request);return executeCancelSteps(request);},public CancelStepsResult cancelStepsCancelStepsRequest request request  beforeClientExecutionrequestreturn executeCancelStepsrequest
public long ramBytesUsed() {return 0;},public long ramBytesUsed return 0
public boolean contains(Object o) {return containsValue(o);},public boolean containsObject o return containsValueo
public synchronized int codePointBefore(int index) {return super.codePointBefore(index);},public synchronized int codePointBeforeint index return supercodePointBeforeindex
public DeleteApplicationRequest(String applicationName) {setApplicationName(applicationName);},public DeleteApplicationRequestString applicationName setApplicationNameapplicationName
"public LazyDocument(IndexReader Reader, int docID) {this.Reader = Reader;this.docID = docID;}",public LazyDocumentIndexReader Reader int docID thisReader  ReaderthisdocID  docID
"public static int trimLeadingWhitespace(byte[] raw, int start, int end) {while (start < end && isWhitespace(raw[start]))start++;return start;}",public static int trimLeadingWhitespacebyte raw int start int end while start  end  isWhitespacerawstartstartreturn start
public int[] getMap() {return map;},public int getMap return map
public void set(E object) {iterator.set(object);},public void setE object iteratorsetobject
public ModifyCurrentDBClusterCapacityResult modifyCurrentDBClusterCapacity(ModifyCurrentDBClusterCapacityRequest request) {request = beforeClientExecution(request);return executeModifyCurrentDBClusterCapacity(request);},public ModifyCurrentDBClusterCapacityResult modifyCurrentDBClusterCapacityModifyCurrentDBClusterCapacityRequest request request  beforeClientExecutionrequestreturn executeModifyCurrentDBClusterCapacityrequest
"public CancelRepoBuildRequest() {super(""cr"", ""2016-06-07"", ""CancelRepoBuild"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/build/[BuildId]/cancel"");setMethod(MethodType.POST);}",public CancelRepoBuildRequest supercr 20160607 CancelRepoBuild crsetUriPatternreposRepoNamespaceRepoNamebuildBuildIdcancelsetMethodMethodTypePOST
"public LongBuffer get(long[] dst, int dstOffset, int longCount) {Arrays.checkOffsetAndCount(dst.length, dstOffset, longCount);if (longCount > remaining()) {throw new BufferUnderflowException();}for (int i = dstOffset; i < dstOffset + longCount; ++i) {dst[i] = get();}return this;}",public LongBuffer getlong dst int dstOffset int longCount ArrayscheckOffsetAndCountdstlength dstOffset longCountif longCount  remaining throw new BufferUnderflowExceptionfor int i  dstOffset i  dstOffset  longCount i dsti  getreturn this
public SpreadsheetVersion getSpreadsheetVersion(){return SpreadsheetVersion.EXCEL97;},public SpreadsheetVersion getSpreadsheetVersionreturn SpreadsheetVersionEXCEL97
public boolean equals(Object obj) {if (obj instanceof Point) {Point rhs = (Point) obj;return this.x == rhs.x && this.y == rhs.y;}return false;},public boolean equalsObject obj if obj instanceof Point Point rhs  Point objreturn thisx  rhsx  thisy  rhsyreturn false
public int numNodes() {return numNodes(rootNode);},public int numNodes return numNodesrootNode
public String toString() {return super.toString() + flags;},public String toString return supertoString  flags
"public EnglishPossessiveFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public EnglishPossessiveFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public static double atanh(double d) {return Math.log((1 + d)/(1 - d)) / 2;},public static double atanhdouble d return Mathlog1  d1  d  2
public WindowsIndexInput clone() {WindowsIndexInput clone = (WindowsIndexInput)super.clone();clone.isClone = true;return clone;},public WindowsIndexInput clone WindowsIndexInput clone  WindowsIndexInputsuperclonecloneisClone  truereturn clone
"public ParseException(Token currentTokenVal,int[][] expectedTokenSequencesVal,String[] tokenImageVal){super(initialise(currentTokenVal, expectedTokenSequencesVal, tokenImageVal));currentToken = currentTokenVal;expectedTokenSequences = expectedTokenSequencesVal;tokenImage = tokenImageVal;}",public ParseExceptionToken currentTokenValint expectedTokenSequencesValString tokenImageValsuperinitialisecurrentTokenVal expectedTokenSequencesVal tokenImageValcurrentToken  currentTokenValexpectedTokenSequences  expectedTokenSequencesValtokenImage  tokenImageVal
public long getTotalATNLookaheadOps() {DecisionInfo[] decisions = atnSimulator.getDecisionInfo();long k = 0;for (int i = 0; i < decisions.length; i++) {k += decisions[i].SLL_ATNTransitions;k += decisions[i].LL_ATNTransitions;}return k;},public long getTotalATNLookaheadOps DecisionInfo decisions  atnSimulatorgetDecisionInfolong k  0for int i  0 i  decisionslength i k  decisionsiSLLATNTransitionsk  decisionsiLLATNTransitionsreturn k
public synchronized StringBuffer reverse() {reverse0();return this;},public synchronized StringBuffer reverse reverse0return this
public DescribeLoadBalancersRequest(java.util.List<String> loadBalancerNames) {setLoadBalancerNames(loadBalancerNames);},public DescribeLoadBalancersRequestjavautilListString loadBalancerNames setLoadBalancerNamesloadBalancerNames
public String toString() {return '~'+super.toString();},public String toString return supertoString
public static ISignatureComposer getComposer() {if (null == composer) {composer = new RoaSignatureComposer();}return composer;},public static ISignatureComposer getComposer if null  composer composer  new RoaSignatureComposerreturn composer
"public boolean ready() throws IOException {synchronized (lock) {if (buf == null) {throw new IOException(""Reader is closed"");}return (buf.length - pos > 0 || in.ready());}}",public boolean ready throws IOException synchronized lock if buf  null throw new IOExceptionReader is closedreturn buflength  pos  0  inready
public GetClientCertificatesResult getClientCertificates(GetClientCertificatesRequest request) {request = beforeClientExecution(request);return executeGetClientCertificates(request);},public GetClientCertificatesResult getClientCertificatesGetClientCertificatesRequest request request  beforeClientExecutionrequestreturn executeGetClientCertificatesrequest
"public static final int tagger(byte[] b, int ptr) {final int sz = b.length;if (ptr == 0)ptr += 48; while (ptr < sz) {if (b[ptr] == '\n')return -1;final int m = match(b, ptr, tagger);if (m >= 0)return m;ptr = nextLF(b, ptr);}return -1;}",public static final int taggerbyte b int ptr final int sz  blengthif ptr  0ptr  48 while ptr  sz if bptr  nreturn 1final int m  matchb ptr taggerif m  0return mptr  nextLFb ptrreturn 1
public GetInstanceStateResult getInstanceState(GetInstanceStateRequest request) {request = beforeClientExecution(request);return executeGetInstanceState(request);},public GetInstanceStateResult getInstanceStateGetInstanceStateRequest request request  beforeClientExecutionrequestreturn executeGetInstanceStaterequest
public boolean isEmpty() {synchronized (mutex) {return delegate().isEmpty();}},public boolean isEmpty synchronized mutex return delegateisEmpty
public long getCount() {return cnt;},public long getCount return cnt
public DeleteConfigurationSetEventDestinationResult deleteConfigurationSetEventDestination(DeleteConfigurationSetEventDestinationRequest request) {request = beforeClientExecution(request);return executeDeleteConfigurationSetEventDestination(request);},public DeleteConfigurationSetEventDestinationResult deleteConfigurationSetEventDestinationDeleteConfigurationSetEventDestinationRequest request request  beforeClientExecutionrequestreturn executeDeleteConfigurationSetEventDestinationrequest
public DeleteNetworkInterfacePermissionResult deleteNetworkInterfacePermission(DeleteNetworkInterfacePermissionRequest request) {request = beforeClientExecution(request);return executeDeleteNetworkInterfacePermission(request);},public DeleteNetworkInterfacePermissionResult deleteNetworkInterfacePermissionDeleteNetworkInterfacePermissionRequest request request  beforeClientExecutionrequestreturn executeDeleteNetworkInterfacePermissionrequest
"public Tag(String key, String value) {this.key = key;this.value = value;}",public TagString key String value thiskey  keythisvalue  value
public CreateTrafficMirrorTargetResult createTrafficMirrorTarget(CreateTrafficMirrorTargetRequest request) {request = beforeClientExecution(request);return executeCreateTrafficMirrorTarget(request);},public CreateTrafficMirrorTargetResult createTrafficMirrorTargetCreateTrafficMirrorTargetRequest request request  beforeClientExecutionrequestreturn executeCreateTrafficMirrorTargetrequest
"public GetGroupPolicyRequest(String groupName, String policyName) {setGroupName(groupName);setPolicyName(policyName);}",public GetGroupPolicyRequestString groupName String policyName setGroupNamegroupNamesetPolicyNamepolicyName
public DeleteVoiceChannelResult deleteVoiceChannel(DeleteVoiceChannelRequest request) {request = beforeClientExecution(request);return executeDeleteVoiceChannel(request);},public DeleteVoiceChannelResult deleteVoiceChannelDeleteVoiceChannelRequest request request  beforeClientExecutionrequestreturn executeDeleteVoiceChannelrequest
public DBClusterSnapshotAttributesResult modifyDBClusterSnapshotAttribute(ModifyDBClusterSnapshotAttributeRequest request) {request = beforeClientExecution(request);return executeModifyDBClusterSnapshotAttribute(request);},public DBClusterSnapshotAttributesResult modifyDBClusterSnapshotAttributeModifyDBClusterSnapshotAttributeRequest request request  beforeClientExecutionrequestreturn executeModifyDBClusterSnapshotAttributerequest
public RegisterAVSDeviceResult registerAVSDevice(RegisterAVSDeviceRequest request) {request = beforeClientExecution(request);return executeRegisterAVSDevice(request);},public RegisterAVSDeviceResult registerAVSDeviceRegisterAVSDeviceRequest request request  beforeClientExecutionrequestreturn executeRegisterAVSDevicerequest
"public void setValue(char[] newValue) {clear();if (newValue != null) {value = new char[newValue.length];System.arraycopy(newValue, 0, value, 0, newValue.length);}}",public void setValuechar newValue clearif newValue  null value  new charnewValuelengthSystemarraycopynewValue 0 value 0 newValuelength
"public int compareSameType(Object other) {assert exists || 0.0D == value;MutableValueDouble b = (MutableValueDouble)other;int c = Double.compare(value, b.value);if (c != 0) return c;if (exists == b.exists) return 0;return exists ? 1 : -1;}",public int compareSameTypeObject other assert exists  00D  valueMutableValueDouble b  MutableValueDoubleotherint c  Doublecomparevalue bvalueif c  0 return cif exists  bexists return 0return exists  1  1
public UpdateCodeRepositoryResult updateCodeRepository(UpdateCodeRepositoryRequest request) {request = beforeClientExecution(request);return executeUpdateCodeRepository(request);},public UpdateCodeRepositoryResult updateCodeRepositoryUpdateCodeRepositoryRequest request request  beforeClientExecutionrequestreturn executeUpdateCodeRepositoryrequest
"public static FormulaError forString(String code) throws IllegalArgumentException {FormulaError err = smap.get(code);if(err == null) throw new IllegalArgumentException(""Unknown error code: "" + code);return err;}",public static FormulaError forStringString code throws IllegalArgumentException FormulaError err  smapgetcodeiferr  null throw new IllegalArgumentExceptionUnknown error code   codereturn err
public UnmonitorInstancesResult unmonitorInstances(UnmonitorInstancesRequest request) {request = beforeClientExecution(request);return executeUnmonitorInstances(request);},public UnmonitorInstancesResult unmonitorInstancesUnmonitorInstancesRequest request request  beforeClientExecutionrequestreturn executeUnmonitorInstancesrequest
public boolean isInteractive() {return false;},public boolean isInteractive return false
"public void setColor(short byteIndex, byte red, byte green, byte blue){int i = byteIndex - FIRST_COLOR_INDEX;if (i < 0 || i >= STANDARD_PALETTE_SIZE){return;}while (_colors.size() <= i) {_colors.add(new PColor(0, 0, 0));}PColor custColor = new PColor(red, green, blue);_colors.set(i, custColor);}",public void setColorshort byteIndex byte red byte green byte blueint i  byteIndex  FIRSTCOLORINDEXif i  0  i  STANDARDPALETTESIZEreturnwhile colorssize  i colorsaddnew PColor0 0 0PColor custColor  new PColorred green bluecolorsseti custColor
public boolean isUser() {return type == Type.USER;},public boolean isUser return type  TypeUSER
public DeleteMeetingResult deleteMeeting(DeleteMeetingRequest request) {request = beforeClientExecution(request);return executeDeleteMeeting(request);},public DeleteMeetingResult deleteMeetingDeleteMeetingRequest request request  beforeClientExecutionrequestreturn executeDeleteMeetingrequest
"public void serializeTokens(LittleEndianOutput out) {out.write(_byteEncoding, 0, _encodedTokenLen);}",public void serializeTokensLittleEndianOutput out outwritebyteEncoding 0 encodedTokenLen
"final public QueryNode Query(CharSequence field) throws ParseException {Vector<QueryNode> clauses = null;QueryNode c, first=null;first = DisjQuery(field);label_1:while (true) {switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {case NOT:case PLUS:case MINUS:case LPAREN:case QUOTED:case TERM:case REGEXPTERM:case RANGEIN_START:case RANGEEX_START:case NUMBER:;break;default:jj_la1[2] = jj_gen;break label_1;}c = DisjQuery(field);if (clauses == null) {clauses = new Vector<QueryNode>();clauses.addElement(first);}clauses.addElement(c);}if (clauses != null) {{if (true) return new BooleanQueryNode(clauses);}} else {if (first instanceof ModifierQueryNode) {ModifierQueryNode m = (ModifierQueryNode) first;if (m.getModifier() == ModifierQueryNode.Modifier.MOD_NOT) {{if (true) return new BooleanQueryNode(Arrays.<QueryNode> asList(m));}}}{if (true) return first;}}throw new Error(""Missing return statement in function"");}",final public QueryNode QueryCharSequence field throws ParseException VectorQueryNode clauses  nullQueryNode c firstnullfirst  DisjQueryfieldlabel1while true switch jjntk1jjntkjjntk case NOTcase PLUScase MINUScase LPARENcase QUOTEDcase TERMcase REGEXPTERMcase RANGEINSTARTcase RANGEEXSTARTcase NUMBERbreakdefaultjjla12  jjgenbreak label1c  DisjQueryfieldif clauses  null clauses  new VectorQueryNodeclausesaddElementfirstclausesaddElementcif clauses  null if true return new BooleanQueryNodeclauses else if first instanceof ModifierQueryNode ModifierQueryNode m  ModifierQueryNode firstif mgetModifier  ModifierQueryNodeModifierMODNOT if true return new BooleanQueryNodeArraysQueryNode asListmif true return firstthrow new ErrorMissing return statement in function
public DBInstance rebootDBInstance(RebootDBInstanceRequest request) {request = beforeClientExecution(request);return executeRebootDBInstance(request);},public DBInstance rebootDBInstanceRebootDBInstanceRequest request request  beforeClientExecutionrequestreturn executeRebootDBInstancerequest
"public SortedSet<E> tailSet(E start) {return tailSet(start, true);}",public SortedSetE tailSetE start return tailSetstart true
"public static boolean equals(byte[] array1, byte[] array2, int length) {if (array1 == array2) {return true;}if (array1 == null || array2 == null || array1.length < length || array2.length < length) {return false;}for (int i = 0; i < length; i++) {if (array1[i] != array2[i]) {return false;}}return true;}",public static boolean equalsbyte array1 byte array2 int length if array1  array2 return trueif array1  null  array2  null  array1length  length  array2length  length return falsefor int i  0 i  length i if array1i  array2i return falsereturn true
public boolean contains(Object o) {synchronized (mutex) {return delegate().contains(o);}},public boolean containsObject o synchronized mutex return delegatecontainso
public RestoreDomainAccessResult restoreDomainAccess(RestoreDomainAccessRequest request) {request = beforeClientExecution(request);return executeRestoreDomainAccess(request);},public RestoreDomainAccessResult restoreDomainAccessRestoreDomainAccessRequest request request  beforeClientExecutionrequestreturn executeRestoreDomainAccessrequest
"static final public boolean wasEscaped(CharSequence text, int index) {if (text instanceof UnescapedCharSequence)return ((UnescapedCharSequence)text).wasEscaped[index];else return false;}",static final public boolean wasEscapedCharSequence text int index if text instanceof UnescapedCharSequencereturn UnescapedCharSequencetextwasEscapedindexelse return false
"public void setCmd(Character way, int cmd) {Cell c = at(way);if (c == null) {c = new Cell();c.cmd = cmd;cells.put(way, c);} else {c.cmd = cmd;}c.cnt = (cmd >= 0) ? 1 : 0;}",public void setCmdCharacter way int cmd Cell c  atwayif c  null c  new Cellccmd  cmdcellsputway c else ccmd  cmdccnt  cmd  0  1  0
public ValueRangeRecord(RecordInputStream in) {field_1_minimumAxisValue  = in.readDouble();field_2_maximumAxisValue  = in.readDouble();field_3_majorIncrement    = in.readDouble();field_4_minorIncrement    = in.readDouble();field_5_categoryAxisCross = in.readDouble();field_6_options           = in.readShort();},public ValueRangeRecordRecordInputStream in field1minimumAxisValue   inreadDoublefield2maximumAxisValue   inreadDoublefield3majorIncrement     inreadDoublefield4minorIncrement     inreadDoublefield5categoryAxisCross  inreadDoublefield6options            inreadShort
public void addFiles(Collection<String> files) {checkFileNames(files);for (String f : files) {setFiles.add(namedForThisSegment(f));}},public void addFilesCollectionString files checkFileNamesfilesfor String f  files setFilesaddnamedForThisSegmentf
public CreateClientVpnEndpointResult createClientVpnEndpoint(CreateClientVpnEndpointRequest request) {request = beforeClientExecution(request);return executeCreateClientVpnEndpoint(request);},public CreateClientVpnEndpointResult createClientVpnEndpointCreateClientVpnEndpointRequest request request  beforeClientExecutionrequestreturn executeCreateClientVpnEndpointrequest
public static IntBuffer allocate(int capacity) {if (capacity < 0) {throw new IllegalArgumentException();}return new ReadWriteIntArrayBuffer(capacity);},public static IntBuffer allocateint capacity if capacity  0 throw new IllegalArgumentExceptionreturn new ReadWriteIntArrayBuffercapacity
public File getFile() {return attributes.getFile();},public File getFile return attributesgetFile
"public static CFRecordsAggregate createCFAggregate(RecordStream rs) {Record rec = rs.getNext();if (rec.getSid() != CFHeaderRecord.sid &&rec.getSid() != CFHeader12Record.sid) {throw new IllegalStateException(""next record sid was "" + rec.getSid()+ "" instead of "" + CFHeaderRecord.sid + "" or "" +CFHeader12Record.sid + "" as expected"");}CFHeaderBase header = (CFHeaderBase)rec;int nRules = header.getNumberOfConditionalFormats();CFRuleBase[] rules = new CFRuleBase[nRules];for (int i = 0; i < rules.length; i++) {rules[i] = (CFRuleBase) rs.getNext();}return new CFRecordsAggregate(header, rules);}",public static CFRecordsAggregate createCFAggregateRecordStream rs Record rec  rsgetNextif recgetSid  CFHeaderRecordsid recgetSid  CFHeader12Recordsid throw new IllegalStateExceptionnext record sid was   recgetSid  instead of   CFHeaderRecordsid   or  CFHeader12Recordsid   as expectedCFHeaderBase header  CFHeaderBaserecint nRules  headergetNumberOfConditionalFormatsCFRuleBase rules  new CFRuleBasenRulesfor int i  0 i  ruleslength i rulesi  CFRuleBase rsgetNextreturn new CFRecordsAggregateheader rules
"public void save() throws IOException {final byte[] out;final String text = toText();if (utf8Bom) {final ByteArrayOutputStream bos = new ByteArrayOutputStream();bos.write(0xEF);bos.write(0xBB);bos.write(0xBF);bos.write(text.getBytes(UTF_8));out = bos.toByteArray();} else {out = Constants.encode(text);}final LockFile lf = new LockFile(getFile());if (!lf.lock())throw new LockFailedException(getFile());try {lf.setNeedSnapshot(true);lf.write(out);if (!lf.commit())throw new IOException(MessageFormat.format(JGitText.get().cannotCommitWriteTo, getFile()));} finally {lf.unlock();}snapshot = lf.getCommitSnapshot();hash = hash(out);fireConfigChangedEvent();}",public void save throws IOException final byte outfinal String text  toTextif utf8Bom final ByteArrayOutputStream bos  new ByteArrayOutputStreamboswrite0xEFboswrite0xBBboswrite0xBFboswritetextgetBytesUTF8out  bostoByteArray else out  Constantsencodetextfinal LockFile lf  new LockFilegetFileif lflockthrow new LockFailedExceptiongetFiletry lfsetNeedSnapshottruelfwriteoutif lfcommitthrow new IOExceptionMessageFormatformatJGitTextgetcannotCommitWriteTo getFile finally lfunlocksnapshot  lfgetCommitSnapshothash  hashoutfireConfigChangedEvent
public DeleteTopicRequest(String topicArn) {setTopicArn(topicArn);},public DeleteTopicRequestString topicArn setTopicArntopicArn
"public static boolean contains(CellRangeAddress crA, CellRangeAddress crB){return le(crA.getFirstRow(), crB.getFirstRow()) &&ge(crA.getLastRow(), crB.getLastRow()) &&le(crA.getFirstColumn(), crB.getFirstColumn()) &&ge(crA.getLastColumn(), crB.getLastColumn());}",public static boolean containsCellRangeAddress crA CellRangeAddress crBreturn lecrAgetFirstRow crBgetFirstRow gecrAgetLastRow crBgetLastRow lecrAgetFirstColumn crBgetFirstColumn gecrAgetLastColumn crBgetLastColumn
"@Override public void clear() {if (size != 0) {Arrays.fill(array, 0, size, null);size = 0;modCount++;}}",Override public void clear if size  0 Arraysfillarray 0 size nullsize  0modCount
public String toString(){return this.getClass().toString();},public String toStringreturn thisgetClasstoString
public CherryPickCommand include(Ref commit) {checkCallable();commits.add(commit);return this;},public CherryPickCommand includeRef commit checkCallablecommitsaddcommitreturn this
"public String toString() {return ""NO_MERGES""; }",public String toString return NOMERGES 
public FileMode getOldMode(int nthParent) {return oldModes[nthParent];},public FileMode getOldModeint nthParent return oldModesnthParent
public void reset(Reader Reader) {this.Reader = Reader;nextPos = 0;nextWrite = 0;count = 0;end = false;},public void resetReader Reader thisReader  ReadernextPos  0nextWrite  0count  0end  false
"public void serialize(LittleEndianOutput out) {String formatString = getFormatString();out.writeShort(getIndexCode());out.writeShort(formatString.length());out.writeByte(field_3_hasMultibyte ? 0x01 : 0x00);if ( field_3_hasMultibyte ) {StringUtil.putUnicodeLE( formatString, out);}  else {StringUtil.putCompressedUnicode( formatString, out);}}",public void serializeLittleEndianOutput out String formatString  getFormatStringoutwriteShortgetIndexCodeoutwriteShortformatStringlengthoutwriteBytefield3hasMultibyte  0x01  0x00if  field3hasMultibyte  StringUtilputUnicodeLE formatString out  else StringUtilputCompressedUnicode formatString out
public DescribePendingMaintenanceActionsResult describePendingMaintenanceActions(DescribePendingMaintenanceActionsRequest request) {request = beforeClientExecution(request);return executeDescribePendingMaintenanceActions(request);},public DescribePendingMaintenanceActionsResult describePendingMaintenanceActionsDescribePendingMaintenanceActionsRequest request request  beforeClientExecutionrequestreturn executeDescribePendingMaintenanceActionsrequest
public DescribeServicesResult describeServices(DescribeServicesRequest request) {request = beforeClientExecution(request);return executeDescribeServices(request);},public DescribeServicesResult describeServicesDescribeServicesRequest request request  beforeClientExecutionrequestreturn executeDescribeServicesrequest
public int getCachedResultType() {if (specialCachedValue == null) {return CellType.NUMERIC.getCode();}return specialCachedValue.getValueType();},public int getCachedResultType if specialCachedValue  null return CellTypeNUMERICgetCodereturn specialCachedValuegetValueType
public boolean stem() {int v_1 = cursor;r_mark_regions();cursor = v_1;limit_backward = cursor;cursor = limit;int v_2 = limit - cursor;r_main_suffix();cursor = limit - v_2;int v_3 = limit - cursor;r_consonant_pair();cursor = limit - v_3;int v_4 = limit - cursor;r_other_suffix();cursor = limit - v_4;int v_5 = limit - cursor;r_undouble();cursor = limit - v_5;cursor = limit_backward;return true;},public boolean stem int v1  cursorrmarkregionscursor  v1limitbackward  cursorcursor  limitint v2  limit  cursorrmainsuffixcursor  limit  v2int v3  limit  cursorrconsonantpaircursor  limit  v3int v4  limit  cursorrothersuffixcursor  limit  v4int v5  limit  cursorrundoublecursor  limit  v5cursor  limitbackwardreturn true
public void setCachedResultErrorCode(int errorCode) {specialCachedValue = FormulaSpecialCachedValue.createCachedErrorCode(errorCode);},public void setCachedResultErrorCodeint errorCode specialCachedValue  FormulaSpecialCachedValuecreateCachedErrorCodeerrorCode
"public void setMinShingleSize(int minShingleSize) {if (minShingleSize < 2) {throw new IllegalArgumentException(""Min shingle size must be >= 2"");}if (minShingleSize > maxShingleSize) {throw new IllegalArgumentException(""Min shingle size must be <= max shingle size"");}this.minShingleSize = minShingleSize;gramSize = new CircularSequence();}",public void setMinShingleSizeint minShingleSize if minShingleSize  2 throw new IllegalArgumentExceptionMin shingle size must be  2if minShingleSize  maxShingleSize throw new IllegalArgumentExceptionMin shingle size must be  max shingle sizethisminShingleSize  minShingleSizegramSize  new CircularSequence
public void write(int value) throws IOException {checkWritePrimitiveTypes();primitiveTypes.write(value);},public void writeint value throws IOException checkWritePrimitiveTypesprimitiveTypeswritevalue
"public int serializeSimplePart(byte[] data, int pos) {LittleEndian.putShort(data, pos, getId());LittleEndian.putInt(data, pos + 2, complexData.length);return 6;}",public int serializeSimplePartbyte data int pos LittleEndianputShortdata pos getIdLittleEndianputIntdata pos  2 complexDatalengthreturn 6
"public InputMismatchException(Parser recognizer) {super(recognizer, recognizer.getInputStream(), recognizer._ctx);this.setOffendingToken(recognizer.getCurrentToken());}",public InputMismatchExceptionParser recognizer superrecognizer recognizergetInputStream recognizerctxthissetOffendingTokenrecognizergetCurrentToken
public long ramBytesUsed() {long mem = RamUsageEstimator.shallowSizeOf(this) + RamUsageEstimator.sizeOf(offsets);if (offsets != ordinals) {mem += RamUsageEstimator.sizeOf(ordinals);}return mem;},public long ramBytesUsed long mem  RamUsageEstimatorshallowSizeOfthis  RamUsageEstimatorsizeOfoffsetsif offsets  ordinals mem  RamUsageEstimatorsizeOfordinalsreturn mem
public Trec1MQReader(String name) {super();this.name = name;},public Trec1MQReaderString name superthisname  name
"public String toString() {return ""MergeInfo [totalMaxDoc="" + totalMaxDoc+ "", estimatedMergeBytes="" + estimatedMergeBytes + "", isExternal=""+ isExternal + "", mergeMaxNumSegments="" + mergeMaxNumSegments + ""]"";}",public String toString return MergeInfo totalMaxDoc  totalMaxDoc  estimatedMergeBytes  estimatedMergeBytes   isExternal isExternal   mergeMaxNumSegments  mergeMaxNumSegments  
public GetVaultNotificationsRequest(String vaultName) {setVaultName(vaultName);},public GetVaultNotificationsRequestString vaultName setVaultNamevaultName
public DisassociatePhoneNumbersFromVoiceConnectorGroupResult disassociatePhoneNumbersFromVoiceConnectorGroup(DisassociatePhoneNumbersFromVoiceConnectorGroupRequest request) {request = beforeClientExecution(request);return executeDisassociatePhoneNumbersFromVoiceConnectorGroup(request);},public DisassociatePhoneNumbersFromVoiceConnectorGroupResult disassociatePhoneNumbersFromVoiceConnectorGroupDisassociatePhoneNumbersFromVoiceConnectorGroupRequest request request  beforeClientExecutionrequestreturn executeDisassociatePhoneNumbersFromVoiceConnectorGrouprequest
public int size() {return ConcurrentHashMap.this.size();},public int size return ConcurrentHashMapthissize
"public void addPattern(String pattern, String ivalue) {int k = ivalues.find(ivalue);if (k <= 0) {k = packValues(ivalue);ivalues.insert(ivalue, (char) k);}insert(pattern, (char) k);}",public void addPatternString pattern String ivalue int k  ivaluesfindivalueif k  0 k  packValuesivalueivaluesinsertivalue char kinsertpattern char k
public boolean isSheetHidden(int sheetnum) {return getBoundSheetRec(sheetnum).isHidden();},public boolean isSheetHiddenint sheetnum return getBoundSheetRecsheetnumisHidden
"public AddUserToGroupRequest(String groupName, String userName) {setGroupName(groupName);setUserName(userName);}",public AddUserToGroupRequestString groupName String userName setGroupNamegroupNamesetUserNameuserName
public static double sumsq(double[] values) {double sumsq = 0;for (double value : values) {sumsq += value * value;}return sumsq;},public static double sumsqdouble values double sumsq  0for double value  values sumsq  value  valuereturn sumsq
public DeleteHostedZoneRequest(String id) {setId(id);},public DeleteHostedZoneRequestString id setIdid
public UserSViewEnd(RecordInputStream in) {_rawData = in.readRemainder();},public UserSViewEndRecordInputStream in rawData  inreadRemainder
public BatchPutScheduledUpdateGroupActionResult batchPutScheduledUpdateGroupAction(BatchPutScheduledUpdateGroupActionRequest request) {request = beforeClientExecution(request);return executeBatchPutScheduledUpdateGroupAction(request);},public BatchPutScheduledUpdateGroupActionResult batchPutScheduledUpdateGroupActionBatchPutScheduledUpdateGroupActionRequest request request  beforeClientExecutionrequestreturn executeBatchPutScheduledUpdateGroupActionrequest
public static EvaluationException numberError() {return new EvaluationException(ErrorEval.NUM_ERROR);},public static EvaluationException numberError return new EvaluationExceptionErrorEvalNUMERROR
public String displayName() {return this.displayName;},public String displayName return thisdisplayName
public final boolean equals(Object o) {if (o instanceof AnyObjectId) {return equals((AnyObjectId) o);}return false;},public final boolean equalsObject o if o instanceof AnyObjectId return equalsAnyObjectId oreturn false
public DescribeSpotFleetRequestHistoryResult describeSpotFleetRequestHistory(DescribeSpotFleetRequestHistoryRequest request) {request = beforeClientExecution(request);return executeDescribeSpotFleetRequestHistory(request);},public DescribeSpotFleetRequestHistoryResult describeSpotFleetRequestHistoryDescribeSpotFleetRequestHistoryRequest request request  beforeClientExecutionrequestreturn executeDescribeSpotFleetRequestHistoryrequest
public InventoryPrefixPredicate(String prefix) {this.prefix = prefix;},public InventoryPrefixPredicateString prefix thisprefix  prefix
public static synchronized MergeStrategy[] get() {final MergeStrategy[] r = new MergeStrategy[STRATEGIES.size()];STRATEGIES.values().toArray(r);return r;},public static synchronized MergeStrategy get final MergeStrategy r  new MergeStrategySTRATEGIESsizeSTRATEGIESvaluestoArrayrreturn r
public DeleteVoiceConnectorTerminationCredentialsResult deleteVoiceConnectorTerminationCredentials(DeleteVoiceConnectorTerminationCredentialsRequest request) {request = beforeClientExecution(request);return executeDeleteVoiceConnectorTerminationCredentials(request);},public DeleteVoiceConnectorTerminationCredentialsResult deleteVoiceConnectorTerminationCredentialsDeleteVoiceConnectorTerminationCredentialsRequest request request  beforeClientExecutionrequestreturn executeDeleteVoiceConnectorTerminationCredentialsrequest
public int mark() {if (numMarkers == 0) {lastCharBufferStart = lastChar;}int mark = -numMarkers - 1;numMarkers++;return mark;},public int mark if numMarkers  0 lastCharBufferStart  lastCharint mark  numMarkers  1numMarkersreturn mark
public ScoreCachingWrappingScorer(Scorable scorer) {this.in = scorer;},public ScoreCachingWrappingScorerScorable scorer thisin  scorer
"public void skip(long count) throws IOException {assert count >= 0;if (ord + count > valueCount || ord + count < 0) {throw new EOFException();}final int skipBuffer = (int) Math.min(count, blockSize - off);off += skipBuffer;ord += skipBuffer;count -= skipBuffer;if (count == 0L) {return;}assert off == blockSize;while (count >= blockSize) {final int token = in.readByte() & 0xFF;final int bitsPerValue = token >>> BPV_SHIFT;if (bitsPerValue > 64) {throw new IOException(""Corrupted"");}if ((token & MIN_VALUE_EQUALS_0) == 0) {readVLong(in);}final long blockBytes = PackedInts.Format.PACKED.byteCount(packedIntsVersion, blockSize, bitsPerValue);skipBytes(blockBytes);ord += blockSize;count -= blockSize;}if (count == 0L) {return;}assert count < blockSize;refill();ord += count;off += count;}",public void skiplong count throws IOException assert count  0if ord  count  valueCount  ord  count  0 throw new EOFExceptionfinal int skipBuffer  int Mathmincount blockSize  offoff  skipBufferord  skipBuffercount  skipBufferif count  0L returnassert off  blockSizewhile count  blockSize final int token  inreadByte  0xFFfinal int bitsPerValue  token  BPVSHIFTif bitsPerValue  64 throw new IOExceptionCorruptedif token  MINVALUEEQUALS0  0 readVLonginfinal long blockBytes  PackedIntsFormatPACKEDbyteCountpackedIntsVersion blockSize bitsPerValueskipBytesblockBytesord  blockSizecount  blockSizeif count  0L returnassert count  blockSizerefillord  countoff  count
"public GetDownloadUrlsRequest() {super(""CloudPhoto"", ""2017-07-11"", ""GetDownloadUrls"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public GetDownloadUrlsRequest superCloudPhoto 20170711 GetDownloadUrls cloudphotosetProtocolProtocolTypeHTTPS
public ListSecurityProfilesResult listSecurityProfiles(ListSecurityProfilesRequest request) {request = beforeClientExecution(request);return executeListSecurityProfiles(request);},public ListSecurityProfilesResult listSecurityProfilesListSecurityProfilesRequest request request  beforeClientExecutionrequestreturn executeListSecurityProfilesrequest
@Override public boolean contains(Object o) {return containsKey(o);},Override public boolean containsObject o return containsKeyo
"public TerminalNode getToken(int ttype, int i) {if ( children==null || i < 0 || i >= children.size() ) {return null;}int j = -1; for (ParseTree o : children) {if ( o instanceof TerminalNode ) {TerminalNode tnode = (TerminalNode)o;Token symbol = tnode.getSymbol();if ( symbol.getType()==ttype ) {j++;if ( j == i ) {return tnode;}}}}return null;}",public TerminalNode getTokenint ttype int i if  childrennull  i  0  i  childrensize  return nullint j  1 for ParseTree o  children if  o instanceof TerminalNode  TerminalNode tnode  TerminalNodeoToken symbol  tnodegetSymbolif  symbolgetTypettype  jif  j  i  return tnodereturn null
public void serialize(LittleEndianOutput out) {out.writeShort(_offset);out.writeShort(_fontIndex);},public void serializeLittleEndianOutput out outwriteShortoffsetoutwriteShortfontIndex
public void incrementOpen() {useCnt.incrementAndGet();},public void incrementOpen useCntincrementAndGet
"public OneMerge(List<SegmentCommitInfo> segments) {if (0 == segments.size()) {throw new RuntimeException(""segments must include at least one segment"");}this.segments = new ArrayList<>(segments);int count = 0;for(SegmentCommitInfo info : segments) {count += info.info.maxDoc();}totalMaxDoc = count;mergeProgress = new OneMergeProgress();}",public OneMergeListSegmentCommitInfo segments if 0  segmentssize throw new RuntimeExceptionsegments must include at least one segmentthissegments  new ArrayListsegmentsint count  0forSegmentCommitInfo info  segments count  infoinfomaxDoctotalMaxDoc  countmergeProgress  new OneMergeProgress
public final byte get() {if (position == limit) {throw new BufferUnderflowException();}return backingArray[offset + position++];},public final byte get if position  limit throw new BufferUnderflowExceptionreturn backingArrayoffset  position
"public String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getName());sb.append("" ["");if (_isQuoted) {sb.append(""'"").append(_name).append(""'"");} else {sb.append(_name);}sb.append(""]"");return sb.toString();}",public String toString StringBuilder sb  new StringBuilder64sbappendgetClassgetNamesbappend if isQuoted sbappendappendnameappend else sbappendnamesbappendreturn sbtoString
public AssociateWebsiteCertificateAuthorityResult associateWebsiteCertificateAuthority(AssociateWebsiteCertificateAuthorityRequest request) {request = beforeClientExecution(request);return executeAssociateWebsiteCertificateAuthority(request);},public AssociateWebsiteCertificateAuthorityResult associateWebsiteCertificateAuthorityAssociateWebsiteCertificateAuthorityRequest request request  beforeClientExecutionrequestreturn executeAssociateWebsiteCertificateAuthorityrequest
public RevFilter clone() {return new PatternSearch(pattern());},public RevFilter clone return new PatternSearchpattern
public PredictionContext getParent(int index) {return null;},public PredictionContext getParentint index return null
"public AttachVpnGatewayRequest(String vpnGatewayId, String vpcId) {setVpnGatewayId(vpnGatewayId);setVpcId(vpcId);}",public AttachVpnGatewayRequestString vpnGatewayId String vpcId setVpnGatewayIdvpnGatewayIdsetVpcIdvpcId
"public void onUpdate(DocumentsWriterFlushControl control, ThreadState state) {onInsert(control, state);onDelete(control, state);}",public void onUpdateDocumentsWriterFlushControl control ThreadState state onInsertcontrol stateonDeletecontrol state
public UpdateComponentResult updateComponent(UpdateComponentRequest request) {request = beforeClientExecution(request);return executeUpdateComponent(request);},public UpdateComponentResult updateComponentUpdateComponentRequest request request  beforeClientExecutionrequestreturn executeUpdateComponentrequest
public DeleteDashboardResult deleteDashboard(DeleteDashboardRequest request) {request = beforeClientExecution(request);return executeDeleteDashboard(request);},public DeleteDashboardResult deleteDashboardDeleteDashboardRequest request request  beforeClientExecutionrequestreturn executeDeleteDashboardrequest
public byte[] getByteBlock() {if (freeBlocks == 0) {bytesUsed.addAndGet(blockSize);return new byte[blockSize];}final byte[] b = freeByteBlocks[--freeBlocks];freeByteBlocks[freeBlocks] = null;return b;},public byte getByteBlock if freeBlocks  0 bytesUsedaddAndGetblockSizereturn new byteblockSizefinal byte b  freeByteBlocksfreeBlocksfreeByteBlocksfreeBlocks  nullreturn b
public DisableLoggingResult disableLogging(DisableLoggingRequest request) {request = beforeClientExecution(request);return executeDisableLogging(request);},public DisableLoggingResult disableLoggingDisableLoggingRequest request request  beforeClientExecutionrequestreturn executeDisableLoggingrequest
public TokenStream create(TokenStream input) {return new CJKWidthFilter(input);},public TokenStream createTokenStream input return new CJKWidthFilterinput
"public void reset(int startOffset, int endOffset) {bufferUpto = startOffset / INT_BLOCK_SIZE;bufferOffset = bufferUpto * INT_BLOCK_SIZE;this.end = endOffset;upto = startOffset;level = 1;buffer = pool.buffers[bufferUpto];upto = startOffset & INT_BLOCK_MASK;final int firstSize = IntBlockPool.LEVEL_SIZE_ARRAY[0];if (startOffset+firstSize >= endOffset) {limit = endOffset & INT_BLOCK_MASK;} else {limit = upto+firstSize-1;}}",public void resetint startOffset int endOffset bufferUpto  startOffset  INTBLOCKSIZEbufferOffset  bufferUpto  INTBLOCKSIZEthisend  endOffsetupto  startOffsetlevel  1buffer  poolbuffersbufferUptoupto  startOffset  INTBLOCKMASKfinal int firstSize  IntBlockPoolLEVELSIZEARRAY0if startOffsetfirstSize  endOffset limit  endOffset  INTBLOCKMASK else limit  uptofirstSize1
public long ramBytesUsed() {return values.ramBytesUsed()+ super.ramBytesUsed()+ Long.BYTES+ RamUsageEstimator.NUM_BYTES_OBJECT_REF;},public long ramBytesUsed return valuesramBytesUsed superramBytesUsed LongBYTES RamUsageEstimatorNUMBYTESOBJECTREF
public PutItemOutcome putItem(Item item) {return putItemDelegate.putItem(item);},public PutItemOutcome putItemItem item return putItemDelegateputItemitem
"public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long byte0 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = byte0 >>> 2;final long byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte0 & 3) << 4) | (byte1 >>> 4);final long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 2) | (byte2 >>> 6);values[valuesOffset++] = byte2 & 63;}}",public void decodebyte blocks int blocksOffset long values int valuesOffset int iterations for int i  0 i  iterations i final long byte0  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  2final long byte1  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  3  4  byte1  4final long byte2  blocksblocksOffset  0xFFvaluesvaluesOffset  byte1  15  2  byte2  6valuesvaluesOffset  byte2  63
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[DELTA]\n"");buffer.append(""    .maxchange = "").append(getMaxChange()).append(""\n"");buffer.append(""[/DELTA]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendDELTAnbufferappend    maxchange  appendgetMaxChangeappendnbufferappendDELTAnreturn buffertoString
public StartFaceDetectionResult startFaceDetection(StartFaceDetectionRequest request) {request = beforeClientExecution(request);return executeStartFaceDetection(request);},public StartFaceDetectionResult startFaceDetectionStartFaceDetectionRequest request request  beforeClientExecutionrequestreturn executeStartFaceDetectionrequest
"public DataValidation createValidation(DataValidationConstraint constraint, CellRangeAddressList cellRangeAddressList) {return new HSSFDataValidation(cellRangeAddressList, constraint);}",public DataValidation createValidationDataValidationConstraint constraint CellRangeAddressList cellRangeAddressList return new HSSFDataValidationcellRangeAddressList constraint
public DocumentStoredFieldVisitor(Set<String> fieldsToAdd) {this.fieldsToAdd = fieldsToAdd;},public DocumentStoredFieldVisitorSetString fieldsToAdd thisfieldsToAdd  fieldsToAdd
"public TokenStream create(TokenStream tokenStream) {return new HunspellStemFilter(tokenStream, dictionary, true, longestOnly);}",public TokenStream createTokenStream tokenStream return new HunspellStemFiltertokenStream dictionary true longestOnly
public Repository getRepository() {return repository;},public Repository getRepository return repository
public DeleteMLModelResult deleteMLModel(DeleteMLModelRequest request) {request = beforeClientExecution(request);return executeDeleteMLModel(request);},public DeleteMLModelResult deleteMLModelDeleteMLModelRequest request request  beforeClientExecutionrequestreturn executeDeleteMLModelrequest
public GetAccountLimitResult getAccountLimit(GetAccountLimitRequest request) {request = beforeClientExecution(request);return executeGetAccountLimit(request);},public GetAccountLimitResult getAccountLimitGetAccountLimitRequest request request  beforeClientExecutionrequestreturn executeGetAccountLimitrequest
"public final char[] GetSuffix(int len) {char[] value = new char[len];System.arraycopy(buffer, bufferPosition - len, value, 0, len);return value;}",public final char GetSuffixint len char value  new charlenSystemarraycopybuffer bufferPosition  len value 0 lenreturn value
public ModifyClientVpnEndpointResult modifyClientVpnEndpoint(ModifyClientVpnEndpointRequest request) {request = beforeClientExecution(request);return executeModifyClientVpnEndpoint(request);},public ModifyClientVpnEndpointResult modifyClientVpnEndpointModifyClientVpnEndpointRequest request request  beforeClientExecutionrequestreturn executeModifyClientVpnEndpointrequest
public final boolean containsRow(int row) {return _firstRow <= row && _lastRow >= row;},public final boolean containsRowint row return firstRow  row  lastRow  row
public int available() {return remainingBytes();},public int available return remainingBytes
public RequestEnvironmentInfoRequest(EnvironmentInfoType infoType) {setInfoType(infoType.toString());},public RequestEnvironmentInfoRequestEnvironmentInfoType infoType setInfoTypeinfoTypetoString
"public void write(byte[] buf) throws IOException {write(buf, 0, buf.length);}",public void writebyte buf throws IOException writebuf 0 buflength
public ResetDBClusterParameterGroupResult resetDBClusterParameterGroup(ResetDBClusterParameterGroupRequest request) {request = beforeClientExecution(request);return executeResetDBClusterParameterGroup(request);},public ResetDBClusterParameterGroupResult resetDBClusterParameterGroupResetDBClusterParameterGroupRequest request request  beforeClientExecutionrequestreturn executeResetDBClusterParameterGrouprequest
public void unwriteProtectWorkbook() {this.workbook.unwriteProtectWorkbook();},public void unwriteProtectWorkbook thisworkbookunwriteProtectWorkbook
public ANTLRInputStream(String input) {this.data = input.toCharArray();this.n = input.length();},public ANTLRInputStreamString input thisdata  inputtoCharArraythisn  inputlength
public ByteBuffer putShort(short value) {throw new ReadOnlyBufferException();},public ByteBuffer putShortshort value throw new ReadOnlyBufferException
public ReplaceIamInstanceProfileAssociationResult replaceIamInstanceProfileAssociation(ReplaceIamInstanceProfileAssociationRequest request) {request = beforeClientExecution(request);return executeReplaceIamInstanceProfileAssociation(request);},public ReplaceIamInstanceProfileAssociationResult replaceIamInstanceProfileAssociationReplaceIamInstanceProfileAssociationRequest request request  beforeClientExecutionrequestreturn executeReplaceIamInstanceProfileAssociationrequest
"public void add(String name, Expression expression) {map.put(name, expression);}",public void addString name Expression expression mapputname expression
"public Ref3DPtg(CellReference c, int externIdx) {super(c);setExternSheetIndex(externIdx);}",public Ref3DPtgCellReference c int externIdx supercsetExternSheetIndexexternIdx
"public int readUShort() {byte[] buf = new byte[LittleEndianConsts.SHORT_SIZE];try {checkEOF(read(buf), LittleEndianConsts.SHORT_SIZE);} catch (IOException e) {throw new RuntimeException(e);}return LittleEndian.getUShort(buf);}",public int readUShort byte buf  new byteLittleEndianConstsSHORTSIZEtry checkEOFreadbuf LittleEndianConstsSHORTSIZE catch IOException e throw new RuntimeExceptionereturn LittleEndiangetUShortbuf
"public int stem(char s[], int len) {len = removeCase(s, len);len = removePossessives(s, len);if (len > 0) {len = normalize(s, len);}return len;}",public int stemchar s int len len  removeCases lenlen  removePossessivess lenif len  0 len  normalizes lenreturn len
public static int getNearestSetSize(int maxNumberOfBits){int result=usableBitSetSizes[0];for (int i = 0; i < usableBitSetSizes.length; i++) {if(usableBitSetSizes[i]<=maxNumberOfBits){result=usableBitSetSizes[i];}}return result;},public static int getNearestSetSizeint maxNumberOfBitsint resultusableBitSetSizes0for int i  0 i  usableBitSetSizeslength i ifusableBitSetSizesimaxNumberOfBitsresultusableBitSetSizesireturn result
"public String toString() {return ""AbbreviatedObjectId["" + name() + ""]""; }",public String toString return AbbreviatedObjectId  name   
"public ListFacesRequest() {super(""CloudPhoto"", ""2017-07-11"", ""ListFaces"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public ListFacesRequest superCloudPhoto 20170711 ListFaces cloudphotosetProtocolProtocolTypeHTTPS
public BytesRef(int capacity) {this.bytes = new byte[capacity];},public BytesRefint capacity thisbytes  new bytecapacity
public DescribeFargateProfileResult describeFargateProfile(DescribeFargateProfileRequest request) {request = beforeClientExecution(request);return executeDescribeFargateProfile(request);},public DescribeFargateProfileResult describeFargateProfileDescribeFargateProfileRequest request request  beforeClientExecutionrequestreturn executeDescribeFargateProfilerequest
public GetOpenIdTokenForDeveloperIdentityResult getOpenIdTokenForDeveloperIdentity(GetOpenIdTokenForDeveloperIdentityRequest request) {request = beforeClientExecution(request);return executeGetOpenIdTokenForDeveloperIdentity(request);},public GetOpenIdTokenForDeveloperIdentityResult getOpenIdTokenForDeveloperIdentityGetOpenIdTokenForDeveloperIdentityRequest request request  beforeClientExecutionrequestreturn executeGetOpenIdTokenForDeveloperIdentityrequest
public int countBytesWritten() {return _countBytesWritten;},public int countBytesWritten return countBytesWritten
public boolean containsAll(final IntList c){boolean rval = true;if (this != c){for (int j = 0; rval && (j < c._limit); j++){if (!contains(c._array[ j ])){rval = false;}}}return rval;},public boolean containsAllfinal IntList cboolean rval  trueif this  cfor int j  0 rval  j  climit jif containscarray j rval  falsereturn rval
public void setTreeFilter(TreeFilter newFilter) {assertNotStarted();treeFilter = newFilter != null ? newFilter : TreeFilter.ALL;},public void setTreeFilterTreeFilter newFilter assertNotStartedtreeFilter  newFilter  null  newFilter  TreeFilterALL
public DBInstance promoteReadReplica(PromoteReadReplicaRequest request) {request = beforeClientExecution(request);return executePromoteReadReplica(request);},public DBInstance promoteReadReplicaPromoteReadReplicaRequest request request  beforeClientExecutionrequestreturn executePromoteReadReplicarequest
"public final short getShort() {int newPosition = position + SizeOf.SHORT;if (newPosition > limit) {throw new BufferUnderflowException();}short result = Memory.peekShort(backingArray, offset + position, order);position = newPosition;return result;}",public final short getShort int newPosition  position  SizeOfSHORTif newPosition  limit throw new BufferUnderflowExceptionshort result  MemorypeekShortbackingArray offset  position orderposition  newPositionreturn result
public AttachClassicLinkVpcResult attachClassicLinkVpc(AttachClassicLinkVpcRequest request) {request = beforeClientExecution(request);return executeAttachClassicLinkVpc(request);},public AttachClassicLinkVpcResult attachClassicLinkVpcAttachClassicLinkVpcRequest request request  beforeClientExecutionrequestreturn executeAttachClassicLinkVpcrequest
"public static <T> T[] grow(T[] array, int minSize) {assert minSize >= 0 : ""size must be positive (got "" + minSize + ""): likely integer overflow?"";if (array.length < minSize) {final int newLength = oversize(minSize, RamUsageEstimator.NUM_BYTES_OBJECT_REF);return growExact(array, newLength);} else return array;}",public static T T growT array int minSize assert minSize  0  size must be positive got   minSize   likely integer overflowif arraylength  minSize final int newLength  oversizeminSize RamUsageEstimatorNUMBYTESOBJECTREFreturn growExactarray newLength else return array
public ByteArrayDataOutput() {reset(BytesRef.EMPTY_BYTES);},public ByteArrayDataOutput resetBytesRefEMPTYBYTES
"public void balance() {int i = 0, n = length;String[] k = new String[n];char[] v = new char[n];Iterator iter = new Iterator();while (iter.hasMoreElements()) {v[i] = iter.getValue();k[i++] = iter.nextElement();}init();insertBalanced(k, v, 0, n);}",public void balance int i  0 n  lengthString k  new Stringnchar v  new charnIterator iter  new Iteratorwhile iterhasMoreElements vi  itergetValueki  iternextElementinitinsertBalancedk v 0 n
public MultiPhraseQueryNode() {setLeaf(false);allocate();},public MultiPhraseQueryNode setLeaffalseallocate
"public PublishRequest(String topicArn, String message, String subject) {setTopicArn(topicArn);setMessage(message);setSubject(subject);}",public PublishRequestString topicArn String message String subject setTopicArntopicArnsetMessagemessagesetSubjectsubject
public SendCommandResult sendCommand(SendCommandRequest request) {request = beforeClientExecution(request);return executeSendCommand(request);},public SendCommandResult sendCommandSendCommandRequest request request  beforeClientExecutionrequestreturn executeSendCommandrequest
public ListDeploymentInstancesResult listDeploymentInstances(ListDeploymentInstancesRequest request) {request = beforeClientExecution(request);return executeListDeploymentInstances(request);},public ListDeploymentInstancesResult listDeploymentInstancesListDeploymentInstancesRequest request request  beforeClientExecutionrequestreturn executeListDeploymentInstancesrequest
public Iterator<E> iterator() {return delegate().iterator(); },public IteratorE iterator return delegateiterator 
"public ProvisionedThroughput(Long readCapacityUnits, Long writeCapacityUnits) {setReadCapacityUnits(readCapacityUnits);setWriteCapacityUnits(writeCapacityUnits);}",public ProvisionedThroughputLong readCapacityUnits Long writeCapacityUnits setReadCapacityUnitsreadCapacityUnitssetWriteCapacityUnitswriteCapacityUnits
public DescribeTagsResult describeTags() {return describeTags(new DescribeTagsRequest());},public DescribeTagsResult describeTags return describeTagsnew DescribeTagsRequest
public DeprovisionByoipCidrResult deprovisionByoipCidr(DeprovisionByoipCidrRequest request) {request = beforeClientExecution(request);return executeDeprovisionByoipCidr(request);},public DeprovisionByoipCidrResult deprovisionByoipCidrDeprovisionByoipCidrRequest request request  beforeClientExecutionrequestreturn executeDeprovisionByoipCidrrequest
public boolean isDone(TreeWalk walker) {return pathRaw.length == walker.getPathLength();},public boolean isDoneTreeWalk walker return pathRawlength  walkergetPathLength
"public String buildExtensionField(String extensionKey, String field) {StringBuilder builder = new StringBuilder(field);builder.append(this.extensionFieldDelimiter);builder.append(extensionKey);return escapeExtensionField(builder.toString());}",public String buildExtensionFieldString extensionKey String field StringBuilder builder  new StringBuilderfieldbuilderappendthisextensionFieldDelimiterbuilderappendextensionKeyreturn escapeExtensionFieldbuildertoString
"public void reset(byte[] bytes, int offset, int len) {this.bytes = bytes;pos = offset;limit = offset + len;}",public void resetbyte bytes int offset int len thisbytes  bytespos  offsetlimit  offset  len
public boolean equals(Object obj) {if (!(obj instanceof Loc)) {return false;}Loc other = (Loc) obj;return _bookSheetColumn == other._bookSheetColumn && _rowIndex == other._rowIndex;},public boolean equalsObject obj if obj instanceof Loc return falseLoc other  Loc objreturn bookSheetColumn  otherbookSheetColumn  rowIndex  otherrowIndex
public DeleteDeploymentConfigResult deleteDeploymentConfig(DeleteDeploymentConfigRequest request) {request = beforeClientExecution(request);return executeDeleteDeploymentConfig(request);},public DeleteDeploymentConfigResult deleteDeploymentConfigDeleteDeploymentConfigRequest request request  beforeClientExecutionrequestreturn executeDeleteDeploymentConfigrequest
public StartQueryExecutionResult startQueryExecution(StartQueryExecutionRequest request) {request = beforeClientExecution(request);return executeStartQueryExecution(request);},public StartQueryExecutionResult startQueryExecutionStartQueryExecutionRequest request request  beforeClientExecutionrequestreturn executeStartQueryExecutionrequest
"public GetRepoListRequest() {super(""cr"", ""2016-06-07"", ""GetRepoList"", ""cr"");setUriPattern(""/repos"");setMethod(MethodType.GET);}",public GetRepoListRequest supercr 20160607 GetRepoList crsetUriPatternrepossetMethodMethodTypeGET
public CreateDistributionResult createDistribution(CreateDistributionRequest request) {request = beforeClientExecution(request);return executeCreateDistribution(request);},public CreateDistributionResult createDistributionCreateDistributionRequest request request  beforeClientExecutionrequestreturn executeCreateDistributionrequest
"public LongField(final int offset)throws ArrayIndexOutOfBoundsException{if (offset < 0){throw new ArrayIndexOutOfBoundsException(""Illegal offset: ""+ offset);}_offset = offset;}",public LongFieldfinal int offsetthrows ArrayIndexOutOfBoundsExceptionif offset  0throw new ArrayIndexOutOfBoundsExceptionIllegal offset  offsetoffset  offset
"public String toString() {StringBuilder b = new StringBuilder();b.append("" target="").append(target());b.append("" label=0x"").append(Integer.toHexString(label()));if (flag(BIT_FINAL_ARC)) {b.append("" final"");}if (flag(BIT_LAST_ARC)) {b.append("" last"");}if (flag(BIT_TARGET_NEXT)) {b.append("" targetNext"");}if (flag(BIT_STOP_NODE)) {b.append("" stop"");}if (flag(BIT_ARC_HAS_OUTPUT)) {b.append("" output="").append(output());}if (flag(BIT_ARC_HAS_FINAL_OUTPUT)) {b.append("" nextFinalOutput="").append(nextFinalOutput());}if (bytesPerArc() != 0) {b.append("" arcArray(idx="").append(arcIdx()).append("" of "").append(numArcs()).append("")"");}return b.toString();}",public String toString StringBuilder b  new StringBuilderbappend targetappendtargetbappend label0xappendIntegertoHexStringlabelif flagBITFINALARC bappend finalif flagBITLASTARC bappend lastif flagBITTARGETNEXT bappend targetNextif flagBITSTOPNODE bappend stopif flagBITARCHASOUTPUT bappend outputappendoutputif flagBITARCHASFINALOUTPUT bappend nextFinalOutputappendnextFinalOutputif bytesPerArc  0 bappend arcArrayidxappendarcIdxappend of appendnumArcsappendreturn btoString
public final int getRefCount() {return refCount.get();},public final int getRefCount return refCountget
"public int readInt() {byte[] buf = new byte[LittleEndianConsts.INT_SIZE];try {checkEOF(read(buf), buf.length);} catch (IOException e) {throw new RuntimeException(e);}return LittleEndian.getInt(buf);}",public int readInt byte buf  new byteLittleEndianConstsINTSIZEtry checkEOFreadbuf buflength catch IOException e throw new RuntimeExceptionereturn LittleEndiangetIntbuf
public BatchCreateAttendeeResult batchCreateAttendee(BatchCreateAttendeeRequest request) {request = beforeClientExecution(request);return executeBatchCreateAttendee(request);},public BatchCreateAttendeeResult batchCreateAttendeeBatchCreateAttendeeRequest request request  beforeClientExecutionrequestreturn executeBatchCreateAttendeerequest
public DetachInstancesFromLoadBalancerResult detachInstancesFromLoadBalancer(DetachInstancesFromLoadBalancerRequest request) {request = beforeClientExecution(request);return executeDetachInstancesFromLoadBalancer(request);},public DetachInstancesFromLoadBalancerResult detachInstancesFromLoadBalancerDetachInstancesFromLoadBalancerRequest request request  beforeClientExecutionrequestreturn executeDetachInstancesFromLoadBalancerrequest
public int getSourceStart() {return outRegion.sourceStart;},public int getSourceStart return outRegionsourceStart
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[FORMAT]\n"");buffer.append(""    .indexcode       = "").append(HexDump.shortToHex(getIndexCode())).append(""\n"");buffer.append(""    .isUnicode       = "").append(field_3_hasMultibyte ).append(""\n"");buffer.append(""    .formatstring    = "").append(getFormatString()).append(""\n"");buffer.append(""[/FORMAT]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendFORMATnbufferappend    indexcode        appendHexDumpshortToHexgetIndexCodeappendnbufferappend    isUnicode        appendfield3hasMultibyte appendnbufferappend    formatstring     appendgetFormatStringappendnbufferappendFORMATnreturn buffertoString
public void remove() {if (lastReturned == null) {throw new IllegalStateException();}Impl.this.remove(lastReturned.getKey());lastReturned = null;},public void remove if lastReturned  null throw new IllegalStateExceptionImplthisremovelastReturnedgetKeylastReturned  null
"public String toString() {if (getChildren() == null || getChildren().size() == 0)return ""<boolean operation='or'/>"";StringBuilder sb = new StringBuilder();sb.append(""<boolean operation='or'>"");for (QueryNode child : getChildren()) {sb.append(""\n"");sb.append(child.toString());}sb.append(""\n</boolean>"");return sb.toString();}",public String toString if getChildren  null  getChildrensize  0return boolean operationorStringBuilder sb  new StringBuildersbappendboolean operationorfor QueryNode child  getChildren sbappendnsbappendchildtoStringsbappendnbooleanreturn sbtoString
"public String getPartOfSpeech(int wordId) {return getFeature(wordId, 1);}",public String getPartOfSpeechint wordId return getFeaturewordId 1
public BatchWriteResult batchWrite(BatchWriteRequest request) {request = beforeClientExecution(request);return executeBatchWrite(request);},public BatchWriteResult batchWriteBatchWriteRequest request request  beforeClientExecutionrequestreturn executeBatchWriterequest
"public ObjectId idFor(int type, byte[] data) {return delegate().idFor(type, data);}",public ObjectId idForint type byte data return delegateidFortype data
public ConfirmTransitVirtualInterfaceResult confirmTransitVirtualInterface(ConfirmTransitVirtualInterfaceRequest request) {request = beforeClientExecution(request);return executeConfirmTransitVirtualInterface(request);},public ConfirmTransitVirtualInterfaceResult confirmTransitVirtualInterfaceConfirmTransitVirtualInterfaceRequest request request  beforeClientExecutionrequestreturn executeConfirmTransitVirtualInterfacerequest
public GetFileUploadURLResult getFileUploadURL(GetFileUploadURLRequest request) {request = beforeClientExecution(request);return executeGetFileUploadURL(request);},public GetFileUploadURLResult getFileUploadURLGetFileUploadURLRequest request request  beforeClientExecutionrequestreturn executeGetFileUploadURLrequest
public TokenStream create(TokenStream input) {return new KeywordRepeatFilter(input);},public TokenStream createTokenStream input return new KeywordRepeatFilterinput
public StartWorkspacesResult startWorkspaces(StartWorkspacesRequest request) {request = beforeClientExecution(request);return executeStartWorkspaces(request);},public StartWorkspacesResult startWorkspacesStartWorkspacesRequest request request  beforeClientExecutionrequestreturn executeStartWorkspacesrequest
public int getDeltaCacheLimit() {return deltaCacheLimit;},public int getDeltaCacheLimit return deltaCacheLimit
"public RebootJumpserverRequest() {super(""HPC"", ""2016-06-03"", ""RebootJumpserver"", ""hpc"");setMethod(MethodType.POST);}",public RebootJumpserverRequest superHPC 20160603 RebootJumpserver hpcsetMethodMethodTypePOST
public int getResultEnd() {Region r = outRegion;return r.resultStart + r.length;},public int getResultEnd Region r  outRegionreturn rresultStart  rlength
public CreateLagResult createLag(CreateLagRequest request) {request = beforeClientExecution(request);return executeCreateLag(request);},public CreateLagResult createLagCreateLagRequest request request  beforeClientExecutionrequestreturn executeCreateLagrequest
public ConflictState getConflictState() {return conflictState;},public ConflictState getConflictState return conflictState
public final void writeByte(int val) throws IOException {write(val & 0xFF);},public final void writeByteint val throws IOException writeval  0xFF
public UpdateRelationalDatabaseResult updateRelationalDatabase(UpdateRelationalDatabaseRequest request) {request = beforeClientExecution(request);return executeUpdateRelationalDatabase(request);},public UpdateRelationalDatabaseResult updateRelationalDatabaseUpdateRelationalDatabaseRequest request request  beforeClientExecutionrequestreturn executeUpdateRelationalDatabaserequest
"public Entry<K, V> lowerEntry(K key) {return immutableCopy(findBounded(key, LOWER));}",public EntryK V lowerEntryK key return immutableCopyfindBoundedkey LOWER
public ExternalNameRecord() {field_2_ixals = 0;},public ExternalNameRecord field2ixals  0
"public int stem(char s[], int len) {len = stemPrefix(s, len);len = stemSuffix(s, len);return len;}",public int stemchar s int len len  stemPrefixs lenlen  stemSuffixs lenreturn len
public final void remove(RevFlagSet set) {flags &= ~set.mask;},public final void removeRevFlagSet set flags  setmask
public IllegalFormatFlagsException(String flags) {if (flags == null) {throw new NullPointerException();}this.flags = flags;},public IllegalFormatFlagsExceptionString flags if flags  null throw new NullPointerExceptionthisflags  flags
public boolean shouldBeRecursive() {return false;},public boolean shouldBeRecursive return false
"public CapitalizationFilter create(TokenStream input) {return new CapitalizationFilter(input, onlyFirstWord, keep,forceFirstLetter, okPrefix, minWordLength, maxWordCount, maxTokenLength);}",public CapitalizationFilter createTokenStream input return new CapitalizationFilterinput onlyFirstWord keepforceFirstLetter okPrefix minWordLength maxWordCount maxTokenLength
public GetAppliedSchemaVersionResult getAppliedSchemaVersion(GetAppliedSchemaVersionRequest request) {request = beforeClientExecution(request);return executeGetAppliedSchemaVersion(request);},public GetAppliedSchemaVersionResult getAppliedSchemaVersionGetAppliedSchemaVersionRequest request request  beforeClientExecutionrequestreturn executeGetAppliedSchemaVersionrequest
public DescribeLabelingJobResult describeLabelingJob(DescribeLabelingJobRequest request) {request = beforeClientExecution(request);return executeDescribeLabelingJob(request);},public DescribeLabelingJobResult describeLabelingJobDescribeLabelingJobRequest request request  beforeClientExecutionrequestreturn executeDescribeLabelingJobrequest
public DeleteAttendeeResult deleteAttendee(DeleteAttendeeRequest request) {request = beforeClientExecution(request);return executeDeleteAttendee(request);},public DeleteAttendeeResult deleteAttendeeDeleteAttendeeRequest request request  beforeClientExecutionrequestreturn executeDeleteAttendeerequest
"public final String toString(List<String> ruleNames) {return toString(ruleNames, null);}",public final String toStringListString ruleNames return toStringruleNames null
public RejectAssignmentResult rejectAssignment(RejectAssignmentRequest request) {request = beforeClientExecution(request);return executeRejectAssignment(request);},public RejectAssignmentResult rejectAssignmentRejectAssignmentRequest request request  beforeClientExecutionrequestreturn executeRejectAssignmentrequest
"public CharVector(char[] a, int capacity) {if (capacity > 0) {blockSize = capacity;} else {blockSize = DEFAULT_BLOCK_SIZE;}array = a;n = a.length;}",public CharVectorchar a int capacity if capacity  0 blockSize  capacity else blockSize  DEFAULTBLOCKSIZEarray  an  alength
public UnsubscribeFromEventResult unsubscribeFromEvent(UnsubscribeFromEventRequest request) {request = beforeClientExecution(request);return executeUnsubscribeFromEvent(request);},public UnsubscribeFromEventResult unsubscribeFromEventUnsubscribeFromEventRequest request request  beforeClientExecutionrequestreturn executeUnsubscribeFromEventrequest
"public String getNextToken() {if( pos >= format.length() ) {return null;}int subStart = pos;final char curChar = format.charAt(pos);++pos;if( curChar == '\'' ) {while( ( pos < format.length() ) && ( format.charAt(pos) != '\'' ) ) {++pos;}if( pos < format.length() ) {++pos;}} else {while( ( pos < format.length() ) && ( format.charAt(pos) == curChar ) ) {++pos;}}return format.substring(subStart,pos);}",public String getNextToken if pos  formatlength  return nullint subStart  posfinal char curChar  formatcharAtposposif curChar    while  pos  formatlength    formatcharAtpos     posif pos  formatlength  pos else while  pos  formatlength    formatcharAtpos  curChar   posreturn formatsubstringsubStartpos
public Policy withId(String id) {setId(id);return this;},public Policy withIdString id setIdidreturn this
"public void setStringValue(String value) {if (!(fieldsData instanceof String)) {throw new IllegalArgumentException(""cannot change value type from "" + fieldsData.getClass().getSimpleName() + "" to String"");}if (value == null) {throw new IllegalArgumentException(""value must not be null"");}fieldsData = value;}",public void setStringValueString value if fieldsData instanceof String throw new IllegalArgumentExceptioncannot change value type from   fieldsDatagetClassgetSimpleName   to Stringif value  null throw new IllegalArgumentExceptionvalue must not be nullfieldsData  value
"public Area3DPtg(String arearef, int externIdx) {super(new AreaReference(arearef, SpreadsheetVersion.EXCEL97));setExternSheetIndex(externIdx);}",public Area3DPtgString arearef int externIdx supernew AreaReferencearearef SpreadsheetVersionEXCEL97setExternSheetIndexexternIdx
public boolean empty() {return isEmpty();},public boolean empty return isEmpty
public DeleteMemberResult deleteMember(DeleteMemberRequest request) {request = beforeClientExecution(request);return executeDeleteMember(request);},public DeleteMemberResult deleteMemberDeleteMemberRequest request request  beforeClientExecutionrequestreturn executeDeleteMemberrequest
public DeleteRepositoryResult deleteRepository(DeleteRepositoryRequest request) {request = beforeClientExecution(request);return executeDeleteRepository(request);},public DeleteRepositoryResult deleteRepositoryDeleteRepositoryRequest request request  beforeClientExecutionrequestreturn executeDeleteRepositoryrequest
public GetChangeResult getChange(GetChangeRequest request) {request = beforeClientExecution(request);return executeGetChange(request);},public GetChangeResult getChangeGetChangeRequest request request  beforeClientExecutionrequestreturn executeGetChangerequest
"public PrefixCodedTerms finish() {return new PrefixCodedTerms(output.toBufferList(), size);}",public PrefixCodedTerms finish return new PrefixCodedTermsoutputtoBufferList size
@Override public synchronized void clear() {elements = EmptyArray.OBJECT;},Override public synchronized void clear elements  EmptyArrayOBJECT
public LongBuffer duplicate() {ByteBuffer bb = byteBuffer.duplicate().order(byteBuffer.order());LongToByteBufferAdapter buf = new LongToByteBufferAdapter(bb);buf.limit = limit;buf.position = position;buf.mark = mark;return buf;},public LongBuffer duplicate ByteBuffer bb  byteBufferduplicateorderbyteBufferorderLongToByteBufferAdapter buf  new LongToByteBufferAdapterbbbuflimit  limitbufposition  positionbufmark  markreturn buf
public StyleRecord() {field_1_xf_index = isBuiltinFlag.set(0);},public StyleRecord field1xfindex  isBuiltinFlagset0
public boolean equals(Object o) {if (o instanceof AbbreviatedObjectId) {final AbbreviatedObjectId b = (AbbreviatedObjectId) o;return nibbles == b.nibbles && w1 == b.w1 && w2 == b.w2&& w3 == b.w3 && w4 == b.w4 && w5 == b.w5;}return false;},public boolean equalsObject o if o instanceof AbbreviatedObjectId final AbbreviatedObjectId b  AbbreviatedObjectId oreturn nibbles  bnibbles  w1  bw1  w2  bw2 w3  bw3  w4  bw4  w5  bw5return false
public void ReInit(QueryParserTokenManager tm) {token_source = tm;token = new Token();jj_ntk = -1;jj_gen = 0;for (int i = 0; i < 10; i++) jj_la1[i] = -1;for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();},public void ReInitQueryParserTokenManager tm tokensource  tmtoken  new Tokenjjntk  1jjgen  0for int i  0 i  10 i jjla1i  1for int i  0 i  jj2rtnslength i jj2rtnsi  new JJCalls
public ExtendedFormatRecord getExFormatAt(int index) {int xfptr = records.getXfpos() - (numxfs - 1);xfptr += index;return ( ExtendedFormatRecord ) records.get(xfptr);},public ExtendedFormatRecord getExFormatAtint index int xfptr  recordsgetXfpos  numxfs  1xfptr  indexreturn  ExtendedFormatRecord  recordsgetxfptr
public Resource(String resource) {this.resource = resource;},public ResourceString resource thisresource  resource
"public NorwegianLightStemFilterFactory(Map<String,String> args) {super(args);String variant = get(args, ""variant"");if (variant == null || ""nb"".equals(variant)) {flags = BOKMAAL;} else if (""nn"".equals(variant)) {flags = NYNORSK;} else if (""no"".equals(variant)) {flags = BOKMAAL | NYNORSK;} else {throw new IllegalArgumentException(""invalid variant: "" + variant);}if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public NorwegianLightStemFilterFactoryMapStringString args superargsString variant  getargs variantif variant  null  nbequalsvariant flags  BOKMAAL else if nnequalsvariant flags  NYNORSK else if noequalsvariant flags  BOKMAAL  NYNORSK else throw new IllegalArgumentExceptioninvalid variant   variantif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public UpdateTypedLinkFacetResult updateTypedLinkFacet(UpdateTypedLinkFacetRequest request) {request = beforeClientExecution(request);return executeUpdateTypedLinkFacet(request);},public UpdateTypedLinkFacetResult updateTypedLinkFacetUpdateTypedLinkFacetRequest request request  beforeClientExecutionrequestreturn executeUpdateTypedLinkFacetrequest
public E higher(E e) {return backingMap.higherKey(e);},public E higherE e return backingMaphigherKeye
public ListReceiptFiltersResult listReceiptFilters(ListReceiptFiltersRequest request) {request = beforeClientExecution(request);return executeListReceiptFilters(request);},public ListReceiptFiltersResult listReceiptFiltersListReceiptFiltersRequest request request  beforeClientExecutionrequestreturn executeListReceiptFiltersrequest
public int size() {synchronized (lock) {return count;}},public int size synchronized lock return count
public CreateVaultRequest(String vaultName) {setVaultName(vaultName);},public CreateVaultRequestString vaultName setVaultNamevaultName
public PendingOutputs() {outputs = new CharsRefBuilder[1];endOffsets = new int[1];posLengths = new int[1];},public PendingOutputs outputs  new CharsRefBuilder1endOffsets  new int1posLengths  new int1
"public static double getExcelDate(Date date, boolean use1904windowing) {Calendar calStart = LocaleUtil.getLocaleCalendar();calStart.setTime(date);int year = calStart.get(Calendar.YEAR);int dayOfYear = calStart.get(Calendar.DAY_OF_YEAR);int hour = calStart.get(Calendar.HOUR_OF_DAY);int minute = calStart.get(Calendar.MINUTE);int second = calStart.get(Calendar.SECOND);int milliSecond = calStart.get(Calendar.MILLISECOND);return internalGetExcelDate(year, dayOfYear, hour, minute, second, milliSecond, use1904windowing);}",public static double getExcelDateDate date boolean use1904windowing Calendar calStart  LocaleUtilgetLocaleCalendarcalStartsetTimedateint year  calStartgetCalendarYEARint dayOfYear  calStartgetCalendarDAYOFYEARint hour  calStartgetCalendarHOUROFDAYint minute  calStartgetCalendarMINUTEint second  calStartgetCalendarSECONDint milliSecond  calStartgetCalendarMILLISECONDreturn internalGetExcelDateyear dayOfYear hour minute second milliSecond use1904windowing
"public ValueEval evaluate(ValueEval[] args, OperationEvaluationContext ec) {int nIncomingArgs = args.length;if(nIncomingArgs < 1) {throw new RuntimeException(""function name argument missing"");}ValueEval nameArg = args[0];String functionName;if (nameArg instanceof FunctionNameEval) {functionName = ((FunctionNameEval) nameArg).getFunctionName();} else {throw new RuntimeException(""First argument should be a NameEval, but got (""+ nameArg.getClass().getName() + "")"");}FreeRefFunction targetFunc = ec.findUserDefinedFunction(functionName);if (targetFunc == null) {throw new NotImplementedFunctionException(functionName);}int nOutGoingArgs = nIncomingArgs -1;ValueEval[] outGoingArgs = new ValueEval[nOutGoingArgs];System.arraycopy(args, 1, outGoingArgs, 0, nOutGoingArgs);return targetFunc.evaluate(outGoingArgs, ec);}",public ValueEval evaluateValueEval args OperationEvaluationContext ec int nIncomingArgs  argslengthifnIncomingArgs  1 throw new RuntimeExceptionfunction name argument missingValueEval nameArg  args0String functionNameif nameArg instanceof FunctionNameEval functionName  FunctionNameEval nameArggetFunctionName else throw new RuntimeExceptionFirst argument should be a NameEval but got  nameArggetClassgetName  FreeRefFunction targetFunc  ecfindUserDefinedFunctionfunctionNameif targetFunc  null throw new NotImplementedFunctionExceptionfunctionNameint nOutGoingArgs  nIncomingArgs 1ValueEval outGoingArgs  new ValueEvalnOutGoingArgsSystemarraycopyargs 1 outGoingArgs 0 nOutGoingArgsreturn targetFuncevaluateoutGoingArgs ec
public int indexOf(Object object) {int pos = 0;Link<E> link = voidLink.next;if (object != null) {while (link != voidLink) {if (object.equals(link.data)) {return pos;}link = link.next;pos++;}} else {while (link != voidLink) {if (link.data == null) {return pos;}link = link.next;pos++;}}return -1;},public int indexOfObject object int pos  0LinkE link  voidLinknextif object  null while link  voidLink if objectequalslinkdata return poslink  linknextpos else while link  voidLink if linkdata  null return poslink  linknextposreturn 1
public DescribeVpcClassicLinkResult describeVpcClassicLink(DescribeVpcClassicLinkRequest request) {request = beforeClientExecution(request);return executeDescribeVpcClassicLink(request);},public DescribeVpcClassicLinkResult describeVpcClassicLinkDescribeVpcClassicLinkRequest request request  beforeClientExecutionrequestreturn executeDescribeVpcClassicLinkrequest
"public void sort(RevSort s, boolean use) {if (s == RevSort.TOPO && !use)throw new IllegalArgumentException(JGitText.get().topologicalSortRequired);super.sort(s, use);}",public void sortRevSort s boolean use if s  RevSortTOPO  usethrow new IllegalArgumentExceptionJGitTextgettopologicalSortRequiredsupersorts use
"public synchronized StringBuffer delete(int start, int end) {delete0(start, end);return this;}",public synchronized StringBuffer deleteint start int end delete0start endreturn this
public void write(int b) throws IOException {throw new UnsupportedOperationException();},public void writeint b throws IOException throw new UnsupportedOperationException
public boolean isModeDifferent(int rawMode) {int modeDiff = getEntryRawMode() ^ rawMode;if (modeDiff == 0)return false;if (getOptions().getSymLinks() == SymLinks.FALSE)if (FileMode.SYMLINK.equals(rawMode))return false;if (!state.options.isFileMode())modeDiff &= ~FileMode.EXECUTABLE_FILE.getBits();return modeDiff != 0;},public boolean isModeDifferentint rawMode int modeDiff  getEntryRawMode  rawModeif modeDiff  0return falseif getOptionsgetSymLinks  SymLinksFALSEif FileModeSYMLINKequalsrawModereturn falseif stateoptionsisFileModemodeDiff  FileModeEXECUTABLEFILEgetBitsreturn modeDiff  0
public DescribeReservedInstancesModificationsResult describeReservedInstancesModifications(DescribeReservedInstancesModificationsRequest request) {request = beforeClientExecution(request);return executeDescribeReservedInstancesModifications(request);},public DescribeReservedInstancesModificationsResult describeReservedInstancesModificationsDescribeReservedInstancesModificationsRequest request request  beforeClientExecutionrequestreturn executeDescribeReservedInstancesModificationsrequest
public EventSubscription addSourceIdentifierToSubscription(AddSourceIdentifierToSubscriptionRequest request) {request = beforeClientExecution(request);return executeAddSourceIdentifierToSubscription(request);},public EventSubscription addSourceIdentifierToSubscriptionAddSourceIdentifierToSubscriptionRequest request request  beforeClientExecutionrequestreturn executeAddSourceIdentifierToSubscriptionrequest
@Override public boolean equals(Object o) {if (o == this) {return true;}synchronized (mutex) {return delegate().equals(o);}},Override public boolean equalsObject o if o  this return truesynchronized mutex return delegateequalso
"public PagedBytesDataOutput getDataOutput() {if (frozen) {throw new IllegalStateException(""cannot get DataOutput after freeze()"");}return new PagedBytesDataOutput();}",public PagedBytesDataOutput getDataOutput if frozen throw new IllegalStateExceptioncannot get DataOutput after freezereturn new PagedBytesDataOutput
"public static short[] copyOfRange(short[] original, int start, int end) {if (start > end) {throw new IllegalArgumentException();}int originalLength = original.length;if (start < 0 || start > originalLength) {throw new ArrayIndexOutOfBoundsException();}int resultLength = end - start;int copyLength = Math.min(resultLength, originalLength - start);short[] result = new short[resultLength];System.arraycopy(original, start, result, 0, copyLength);return result;}",public static short copyOfRangeshort original int start int end if start  end throw new IllegalArgumentExceptionint originalLength  originallengthif start  0  start  originalLength throw new ArrayIndexOutOfBoundsExceptionint resultLength  end  startint copyLength  MathminresultLength originalLength  startshort result  new shortresultLengthSystemarraycopyoriginal start result 0 copyLengthreturn result
public boolean removeURI(URIish toRemove) {return uris.remove(toRemove);},public boolean removeURIURIish toRemove return urisremovetoRemove
public DescribeGameServerResult describeGameServer(DescribeGameServerRequest request) {request = beforeClientExecution(request);return executeDescribeGameServer(request);},public DescribeGameServerResult describeGameServerDescribeGameServerRequest request request  beforeClientExecutionrequestreturn executeDescribeGameServerrequest
public boolean hasNext() {return pos < keys.length;},public boolean hasNext return pos  keyslength
"public IntervalSet subtract(IntSet a) {if (a == null || a.isNil()) {return new IntervalSet(this);}if (a instanceof IntervalSet) {return subtract(this, (IntervalSet)a);}IntervalSet other = new IntervalSet();other.addAll(a);return subtract(this, other);}",public IntervalSet subtractIntSet a if a  null  aisNil return new IntervalSetthisif a instanceof IntervalSet return subtractthis IntervalSetaIntervalSet other  new IntervalSetotheraddAllareturn subtractthis other
public String displayName() {return this.canonicalName;},public String displayName return thiscanonicalName
"public final ValueEval getValue(int row, int col) {return getRelativeValue(row, col);}",public final ValueEval getValueint row int col return getRelativeValuerow col
public AttrPtg(LittleEndianInput in) {_options = in.readByte();_data    = in.readShort();if (isOptimizedChoose()) {int[] jumpTable = new int[(int) _data];for (int i = 0; i < jumpTable.length; i++) {jumpTable[i] = in.readUShort();}_jumpTable = jumpTable;_chooseFuncOffset = in.readUShort();} else {_jumpTable = null;_chooseFuncOffset = -1;}},public AttrPtgLittleEndianInput in options  inreadBytedata     inreadShortif isOptimizedChoose int jumpTable  new intint datafor int i  0 i  jumpTablelength i jumpTablei  inreadUShortjumpTable  jumpTablechooseFuncOffset  inreadUShort else jumpTable  nullchooseFuncOffset  1
public DescribeTrafficMirrorFiltersResult describeTrafficMirrorFilters(DescribeTrafficMirrorFiltersRequest request) {request = beforeClientExecution(request);return executeDescribeTrafficMirrorFilters(request);},public DescribeTrafficMirrorFiltersResult describeTrafficMirrorFiltersDescribeTrafficMirrorFiltersRequest request request  beforeClientExecutionrequestreturn executeDescribeTrafficMirrorFiltersrequest
"public final ShortBuffer put(short[] src) {return put(src, 0, src.length);}",public final ShortBuffer putshort src return putsrc 0 srclength
public DescribeReservedNodeOfferingsResult describeReservedNodeOfferings() {return describeReservedNodeOfferings(new DescribeReservedNodeOfferingsRequest());},public DescribeReservedNodeOfferingsResult describeReservedNodeOfferings return describeReservedNodeOfferingsnew DescribeReservedNodeOfferingsRequest
"public CreateLogStreamRequest(String logGroupName, String logStreamName) {setLogGroupName(logGroupName);setLogStreamName(logStreamName);}",public CreateLogStreamRequestString logGroupName String logStreamName setLogGroupNamelogGroupNamesetLogStreamNamelogStreamName
public DetachStaticIpResult detachStaticIp(DetachStaticIpRequest request) {request = beforeClientExecution(request);return executeDetachStaticIp(request);},public DetachStaticIpResult detachStaticIpDetachStaticIpRequest request request  beforeClientExecutionrequestreturn executeDetachStaticIprequest
"public static CharArraySet unmodifiableSet(CharArraySet set) {if (set == null)throw new NullPointerException(""Given set is null"");if (set == EMPTY_SET)return EMPTY_SET;if (set.map instanceof CharArrayMap.UnmodifiableCharArrayMap)return set;return new CharArraySet(CharArrayMap.unmodifiableMap(set.map));}",public static CharArraySet unmodifiableSetCharArraySet set if set  nullthrow new NullPointerExceptionGiven set is nullif set  EMPTYSETreturn EMPTYSETif setmap instanceof CharArrayMapUnmodifiableCharArrayMapreturn setreturn new CharArraySetCharArrayMapunmodifiableMapsetmap
public BatchDetectKeyPhrasesResult batchDetectKeyPhrases(BatchDetectKeyPhrasesRequest request) {request = beforeClientExecution(request);return executeBatchDetectKeyPhrases(request);},public BatchDetectKeyPhrasesResult batchDetectKeyPhrasesBatchDetectKeyPhrasesRequest request request  beforeClientExecutionrequestreturn executeBatchDetectKeyPhrasesrequest
"public final ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {if (args.length != 1) {return ErrorEval.VALUE_INVALID;}return evaluate(srcRowIndex, srcColumnIndex, args[0]);}",public final ValueEval evaluateValueEval args int srcRowIndex int srcColumnIndex if argslength  1 return ErrorEvalVALUEINVALIDreturn evaluatesrcRowIndex srcColumnIndex args0
public void removeWordCount() {remove1stProperty(PropertyIDMap.PID_WORDCOUNT);},public void removeWordCount remove1stPropertyPropertyIDMapPIDWORDCOUNT
public boolean equals(Object o) {if (this == o) {return true;}else if ( !(o instanceof SingletonPredictionContext) ) {return false;}if ( this.hashCode() != o.hashCode() ) {return false; }SingletonPredictionContext s = (SingletonPredictionContext)o;return returnState == s.returnState &&(parent!=null && parent.equals(s.parent));},public boolean equalsObject o if this  o return trueelse if  o instanceof SingletonPredictionContext  return falseif  thishashCode  ohashCode  return false SingletonPredictionContext s  SingletonPredictionContextoreturn returnState  sreturnState parentnull  parentequalssparent
public ResourceBundle resourceBundle() {return resourceBundle;},public ResourceBundle resourceBundle return resourceBundle
"public TokenStream create(TokenStream stream) {if (stopTags != null) {final TokenStream filter = new JapanesePartOfSpeechStopFilter(stream, stopTags);return filter;} else {return stream;}}",public TokenStream createTokenStream stream if stopTags  null final TokenStream filter  new JapanesePartOfSpeechStopFilterstream stopTagsreturn filter else return stream
public final int[] getBreaks() {int count = getNumBreaks();if (count < 1) {return EMPTY_INT_ARRAY;}int[] result = new int[count];for (int i=0; i<count; i++) {Break breakItem = _breaks.get(i);result[i] = breakItem.Main;}return result;},public final int getBreaks int count  getNumBreaksif count  1 return EMPTYINTARRAYint result  new intcountfor int i0 icount i Break breakItem  breaksgetiresulti  breakItemMainreturn result
public EventSubscription createEventSubscription(CreateEventSubscriptionRequest request) {request = beforeClientExecution(request);return executeCreateEventSubscription(request);},public EventSubscription createEventSubscriptionCreateEventSubscriptionRequest request request  beforeClientExecutionrequestreturn executeCreateEventSubscriptionrequest
@Override public V get(Object key) {return isInBounds(key) ? TreeMap.this.get(key) : null;},Override public V getObject key return isInBoundskey  TreeMapthisgetkey  null
"public void setAnchor(int dx1, int dy1, int dx2, int dy2) {setDx1(Math.min(dx1, dx2));setDy1(Math.min(dy1, dy2));setDx2(Math.max(dx1, dx2));setDy2(Math.max(dy1, dy2));}",public void setAnchorint dx1 int dy1 int dx2 int dy2 setDx1Mathmindx1 dx2setDy1Mathmindy1 dy2setDx2Mathmaxdx1 dx2setDy2Mathmaxdy1 dy2
public int next() {if (current == end) {return DONE;} else {return last();}},public int next if current  end return DONE else return last
public UpdateGcmChannelResult updateGcmChannel(UpdateGcmChannelRequest request) {request = beforeClientExecution(request);return executeUpdateGcmChannel(request);},public UpdateGcmChannelResult updateGcmChannelUpdateGcmChannelRequest request request  beforeClientExecutionrequestreturn executeUpdateGcmChannelrequest
"public void write(LittleEndianOutput out) {throw new IllegalStateException(""XSSF-only Ptg, should not be serialised"");}",public void writeLittleEndianOutput out throw new IllegalStateExceptionXSSFonly Ptg should not be serialised
public PlacementGroup(String groupName) {setGroupName(groupName);},public PlacementGroupString groupName setGroupNamegroupName
public SendCustomVerificationEmailResult sendCustomVerificationEmail(SendCustomVerificationEmailRequest request) {request = beforeClientExecution(request);return executeSendCustomVerificationEmail(request);},public SendCustomVerificationEmailResult sendCustomVerificationEmailSendCustomVerificationEmailRequest request request  beforeClientExecutionrequestreturn executeSendCustomVerificationEmailrequest
"public CreateCollectionRequest() {super(""cr"", ""2016-06-07"", ""CreateCollection"", ""cr"");setUriPattern(""/collections"");setMethod(MethodType.PUT);}",public CreateCollectionRequest supercr 20160607 CreateCollection crsetUriPatterncollectionssetMethodMethodTypePUT
public synchronized boolean remove(Object o) {int index = indexOf(o);if (index == -1) {return false;}remove(index);return true;},public synchronized boolean removeObject o int index  indexOfoif index  1 return falseremoveindexreturn true
public final boolean matches(char c) {return Character.isDigit(c);},public final boolean matcheschar c return CharacterisDigitc
public void serialize(LittleEndianOutput out) {out.writeByte(getWSBool2());out.writeByte(getWSBool1());},public void serializeLittleEndianOutput out outwriteBytegetWSBool2outwriteBytegetWSBool1
"public SubmitGenerateTaskRequest() {super(""lubancloud"", ""2018-05-09"", ""SubmitGenerateTask"", ""luban"");setMethod(MethodType.POST);}",public SubmitGenerateTaskRequest superlubancloud 20180509 SubmitGenerateTask lubansetMethodMethodTypePOST
public E ceiling(E e) {return backingMap.ceilingKey(e);},public E ceilingE e return backingMapceilingKeye
public BatchApplyUpdateActionResult batchApplyUpdateAction(BatchApplyUpdateActionRequest request) {request = beforeClientExecution(request);return executeBatchApplyUpdateAction(request);},public BatchApplyUpdateActionResult batchApplyUpdateActionBatchApplyUpdateActionRequest request request  beforeClientExecutionrequestreturn executeBatchApplyUpdateActionrequest
public Break(RecordInputStream in) {Main = in.readUShort() - 1;subFrom = in.readUShort();subTo = in.readUShort();},public BreakRecordInputStream in Main  inreadUShort  1subFrom  inreadUShortsubTo  inreadUShort
public FileNameMatcher createMatcherForSuffix() {final List<Head> copyOfHeads = new ArrayList<>(heads.size());copyOfHeads.addAll(heads);return new FileNameMatcher(copyOfHeads);},public FileNameMatcher createMatcherForSuffix final ListHead copyOfHeads  new ArrayListheadssizecopyOfHeadsaddAllheadsreturn new FileNameMatchercopyOfHeads
public static boolean isEmptyOrNull(String stringValue) {return stringValue == null || stringValue.length() == 0;},public static boolean isEmptyOrNullString stringValue return stringValue  null  stringValuelength  0
"public static char[] grow(char[] array) {return grow(array, 1 + array.length);}",public static char growchar array return growarray 1  arraylength
public ModifySubnetAttributeResult modifySubnetAttribute(ModifySubnetAttributeRequest request) {request = beforeClientExecution(request);return executeModifySubnetAttribute(request);},public ModifySubnetAttributeResult modifySubnetAttributeModifySubnetAttributeRequest request request  beforeClientExecutionrequestreturn executeModifySubnetAttributerequest
public GetProxySessionResult getProxySession(GetProxySessionRequest request) {request = beforeClientExecution(request);return executeGetProxySession(request);},public GetProxySessionResult getProxySessionGetProxySessionRequest request request  beforeClientExecutionrequestreturn executeGetProxySessionrequest
"public String toString() {return ""TermStats{"" +""decodedTermText='"" + decodedTermText + '\'' +"", field='"" + field + '\'' +"", docFreq="" + docFreq +'}';}",public String toString return TermStats decodedTermText  decodedTermText    field  field    docFreq  docFreq 
"public String getSignificantDecimalDigitsLastDigitRounded() {long wp = _wholePart + 5; StringBuilder sb = new StringBuilder(24);sb.append(wp);sb.setCharAt(sb.length()-1, '0');return sb.toString();}",public String getSignificantDecimalDigitsLastDigitRounded long wp  wholePart  5 StringBuilder sb  new StringBuilder24sbappendwpsbsetCharAtsblength1 0return sbtoString
"public boolean canReuse(IndexInput docIn, FieldInfo fieldInfo) {return docIn == startDocIn &&indexHasFreq == (fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0) &&indexHasPos == (fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0) &&indexHasPayloads == fieldInfo.hasPayloads();}",public boolean canReuseIndexInput docIn FieldInfo fieldInfo return docIn  startDocIn indexHasFreq  fieldInfogetIndexOptionscompareToIndexOptionsDOCSANDFREQS  0 indexHasPos  fieldInfogetIndexOptionscompareToIndexOptionsDOCSANDFREQSANDPOSITIONS  0 indexHasPayloads  fieldInfohasPayloads
public Sort(SortField field) {setSort(field);},public SortSortField field setSortfield
"public static byte[] encodeASCII(String s) {final byte[] r = new byte[s.length()];for (int k = r.length - 1; k >= 0; k--) {final char c = s.charAt(k);if (c > 127)throw new IllegalArgumentException(MessageFormat.format(JGitText.get().notASCIIString, s));r[k] = (byte) c;}return r;}",public static byte encodeASCIIString s final byte r  new byteslengthfor int k  rlength  1 k  0 k final char c  scharAtkif c  127throw new IllegalArgumentExceptionMessageFormatformatJGitTextgetnotASCIIString srk  byte creturn r
public PurgeQueueResult purgeQueue(PurgeQueueRequest request) {request = beforeClientExecution(request);return executePurgeQueue(request);},public PurgeQueueResult purgeQueuePurgeQueueRequest request request  beforeClientExecutionrequestreturn executePurgeQueuerequest
"public boolean sempred(RuleContext _localctx, int ruleIndex, int actionIndex) {return true;}",public boolean sempredRuleContext localctx int ruleIndex int actionIndex return true
public ListStreamsResult listStreams() {return listStreams(new ListStreamsRequest());},public ListStreamsResult listStreams return listStreamsnew ListStreamsRequest
"public String getSurfaceFormString() {return new String(surfaceForm, offset, length);}",public String getSurfaceFormString return new StringsurfaceForm offset length
public GetVaultNotificationsResult getVaultNotifications(GetVaultNotificationsRequest request) {request = beforeClientExecution(request);return executeGetVaultNotifications(request);},public GetVaultNotificationsResult getVaultNotificationsGetVaultNotificationsRequest request request  beforeClientExecutionrequestreturn executeGetVaultNotificationsrequest
public DeleteTypedLinkFacetResult deleteTypedLinkFacet(DeleteTypedLinkFacetRequest request) {request = beforeClientExecution(request);return executeDeleteTypedLinkFacet(request);},public DeleteTypedLinkFacetResult deleteTypedLinkFacetDeleteTypedLinkFacetRequest request request  beforeClientExecutionrequestreturn executeDeleteTypedLinkFacetrequest
public int previousIndex() {return pos;},public int previousIndex return pos
public long ramBytesUsed() {return super.ramBytesUsed()+ offsets.ramBytesUsed()+ lengths.ramBytesUsed()+ RamUsageEstimator.NUM_BYTES_OBJECT_HEADER+ 2 * Integer.BYTES+ 3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF+ values.bytes().length;},public long ramBytesUsed return superramBytesUsed offsetsramBytesUsed lengthsramBytesUsed RamUsageEstimatorNUMBYTESOBJECTHEADER 2  IntegerBYTES 3  RamUsageEstimatorNUMBYTESOBJECTREF valuesbyteslength
public PushCommand push() {return new PushCommand(repo);},public PushCommand push return new PushCommandrepo
public SelectResult select(SelectRequest request) {request = beforeClientExecution(request);return executeSelect(request);},public SelectResult selectSelectRequest request request  beforeClientExecutionrequestreturn executeSelectrequest
public ByteArrayDataOutput(byte[] bytes) {reset(bytes);},public ByteArrayDataOutputbyte bytes resetbytes
public boolean renameTo(String newName) {return directory.renameTo(newName);},public boolean renameToString newName return directoryrenameTonewName
"public boolean canReuse(IndexInput docIn, FieldInfo fieldInfo) {return docIn == startDocIn &&indexHasOffsets == (fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0) &&indexHasPayloads == fieldInfo.hasPayloads();}",public boolean canReuseIndexInput docIn FieldInfo fieldInfo return docIn  startDocIn indexHasOffsets  fieldInfogetIndexOptionscompareToIndexOptionsDOCSANDFREQSANDPOSITIONSANDOFFSETS  0 indexHasPayloads  fieldInfohasPayloads
public boolean equals( Object o ) {return o instanceof DanishStemmer;},public boolean equals Object o  return o instanceof DanishStemmer
"public BooleanQuery build(QueryNode queryNode) throws QueryNodeException {BooleanQueryNode booleanNode = (BooleanQueryNode) queryNode;BooleanQuery.Builder bQuery = new BooleanQuery.Builder();List<QueryNode> children = booleanNode.getChildren();if (children != null) {for (QueryNode child : children) {Object obj = child.getTag(QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID);if (obj != null) {Query query = (Query) obj;try {bQuery.add(query, getModifierValue(child));} catch (TooManyClauses ex) {throw new QueryNodeException(new MessageImpl(QueryParserMessages.TOO_MANY_BOOLEAN_CLAUSES, IndexSearcher.getMaxClauseCount(), queryNode.toQueryString(new EscapeQuerySyntaxImpl())), ex);}}}}return bQuery.build();}",public BooleanQuery buildQueryNode queryNode throws QueryNodeException BooleanQueryNode booleanNode  BooleanQueryNode queryNodeBooleanQueryBuilder bQuery  new BooleanQueryBuilderListQueryNode children  booleanNodegetChildrenif children  null for QueryNode child  children Object obj  childgetTagQueryTreeBuilderQUERYTREEBUILDERTAGIDif obj  null Query query  Query objtry bQueryaddquery getModifierValuechild catch TooManyClauses ex throw new QueryNodeExceptionnew MessageImplQueryParserMessagesTOOMANYBOOLEANCLAUSES IndexSearchergetMaxClauseCount queryNodetoQueryStringnew EscapeQuerySyntaxImpl exreturn bQuerybuild
public String getName() {return name;},public String getName return name
public List<TerminalNode> getTokens(int ttype) {if ( children==null ) {return Collections.emptyList();}List<TerminalNode> tokens = null;for (ParseTree o : children) {if ( o instanceof TerminalNode ) {TerminalNode tnode = (TerminalNode)o;Token symbol = tnode.getSymbol();if ( symbol.getType()==ttype ) {if ( tokens==null ) {tokens = new ArrayList<TerminalNode>();}tokens.add(tnode);}}}if ( tokens==null ) {return Collections.emptyList();}return tokens;},public ListTerminalNode getTokensint ttype if  childrennull  return CollectionsemptyListListTerminalNode tokens  nullfor ParseTree o  children if  o instanceof TerminalNode  TerminalNode tnode  TerminalNodeoToken symbol  tnodegetSymbolif  symbolgetTypettype  if  tokensnull  tokens  new ArrayListTerminalNodetokensaddtnodeif  tokensnull  return CollectionsemptyListreturn tokens
public UpdateApnsChannelResult updateApnsChannel(UpdateApnsChannelRequest request) {request = beforeClientExecution(request);return executeUpdateApnsChannel(request);},public UpdateApnsChannelResult updateApnsChannelUpdateApnsChannelRequest request request  beforeClientExecutionrequestreturn executeUpdateApnsChannelrequest
public String getInput() {return input;},public String getInput return input
"public int serialize( int offset, byte[] data, EscherSerializationListener listener ) {listener.beforeRecordSerialize(offset, getRecordId(), this);LittleEndian.putShort( data, offset, getOptions() );LittleEndian.putShort( data, offset + 2, getRecordId() );LittleEndian.putInt( data, offset + 4, getRecordSize() - HEADER_SIZE );int pos = offset + HEADER_SIZE;System.arraycopy( field_1_UID, 0, data, pos, 16 );data[pos + 16] = field_2_marker;byte[] pd = getPicturedata();System.arraycopy( pd, 0, data, pos + 17, pd.length );listener.afterRecordSerialize(offset + getRecordSize(), getRecordId(), getRecordSize(), this);return HEADER_SIZE + 16 + 1 + pd.length;}",public int serialize int offset byte data EscherSerializationListener listener  listenerbeforeRecordSerializeoffset getRecordId thisLittleEndianputShort data offset getOptions LittleEndianputShort data offset  2 getRecordId LittleEndianputInt data offset  4 getRecordSize  HEADERSIZE int pos  offset  HEADERSIZESystemarraycopy field1UID 0 data pos 16 datapos  16  field2markerbyte pd  getPicturedataSystemarraycopy pd 0 data pos  17 pdlength listenerafterRecordSerializeoffset  getRecordSize getRecordId getRecordSize thisreturn HEADERSIZE  16  1  pdlength
public DescribeFolderContentsResult describeFolderContents(DescribeFolderContentsRequest request) {request = beforeClientExecution(request);return executeDescribeFolderContents(request);},public DescribeFolderContentsResult describeFolderContentsDescribeFolderContentsRequest request request  beforeClientExecutionrequestreturn executeDescribeFolderContentsrequest
"public CreateDBInstanceReadReplicaRequest(String dBInstanceIdentifier, String sourceDBInstanceIdentifier) {setDBInstanceIdentifier(dBInstanceIdentifier);setSourceDBInstanceIdentifier(sourceDBInstanceIdentifier);}",public CreateDBInstanceReadReplicaRequestString dBInstanceIdentifier String sourceDBInstanceIdentifier setDBInstanceIdentifierdBInstanceIdentifiersetSourceDBInstanceIdentifiersourceDBInstanceIdentifier
public DVRecord clone() {return copy();},public DVRecord clone return copy
public CreateDefaultSubnetResult createDefaultSubnet(CreateDefaultSubnetRequest request) {request = beforeClientExecution(request);return executeCreateDefaultSubnet(request);},public CreateDefaultSubnetResult createDefaultSubnetCreateDefaultSubnetRequest request request  beforeClientExecutionrequestreturn executeCreateDefaultSubnetrequest
public AbbreviatedObjectId getNewId() {return newId;},public AbbreviatedObjectId getNewId return newId
public final V setValue(V value) {V oldValue = this.value;this.value = value;return oldValue;},public final V setValueV value V oldValue  thisvaluethisvalue  valuereturn oldValue
"public int get(String name, int dflt) {int vals[] = (int[]) valByRound.get(name);if (vals != null) {return vals[roundNumber % vals.length];}String sval = props.getProperty(name, """" + dflt);if (sval.indexOf("":"") < 0) {return Integer.parseInt(sval);}int k = sval.indexOf("":"");String colName = sval.substring(0, k);sval = sval.substring(k + 1);colForValByRound.put(name, colName);vals = propToIntArray(sval);valByRound.put(name, vals);return vals[roundNumber % vals.length];}",public int getString name int dflt int vals  int valByRoundgetnameif vals  null return valsroundNumber  valslengthString sval  propsgetPropertyname   dfltif svalindexOf  0 return IntegerparseIntsvalint k  svalindexOfString colName  svalsubstring0 ksval  svalsubstringk  1colForValByRoundputname colNamevals  propToIntArraysvalvalByRoundputname valsreturn valsroundNumber  valslength
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""extBook="").append(_extBookIndex);buffer.append("" firstSheet="").append(_firstSheetIndex);buffer.append("" lastSheet="").append(_lastSheetIndex);return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendextBookappendextBookIndexbufferappend firstSheetappendfirstSheetIndexbufferappend lastSheetappendlastSheetIndexreturn buffertoString
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeInt(field_1_reserved);out.writeShort(field_2_subex_len);},public void writeLittleEndianOutput out outwriteBytesid  getPtgClassoutwriteIntfield1reservedoutwriteShortfield2subexlen
public final Buffer rewind() {position = 0;mark = UNSET_MARK;return this;},public final Buffer rewind position  0mark  UNSETMARKreturn this
public short getHideObj(){return field_1_hide_obj;},public short getHideObjreturn field1hideobj
public PrintGridlinesRecord(RecordInputStream in) {field_1_print_gridlines = in.readShort();},public PrintGridlinesRecordRecordInputStream in field1printgridlines  inreadShort
public CreateEventTrackerResult createEventTracker(CreateEventTrackerRequest request) {request = beforeClientExecution(request);return executeCreateEventTracker(request);},public CreateEventTrackerResult createEventTrackerCreateEventTrackerRequest request request  beforeClientExecutionrequestreturn executeCreateEventTrackerrequest
public boolean hasNext() {return index < to;},public boolean hasNext return index  to
public void removeExFormatRecord(ExtendedFormatRecord rec) {records.remove(rec); numxfs--;},public void removeExFormatRecordExtendedFormatRecord rec recordsremoverec numxfs
"public synchronized void publish(Revision revision) throws IOException {ensureOpen();if (currentRevision != null) {int compare = revision.compareTo(currentRevision.revision);if (compare == 0) {revision.release();return;}if (compare < 0) {revision.release();throw new IllegalArgumentException(""Cannot publish an older revision: rev="" + revision + "" current=""+ currentRevision);}}final RefCountedRevision oldRevision = currentRevision;currentRevision = new RefCountedRevision(revision);if (oldRevision != null) {oldRevision.decRef();}checkExpiredSessions();}",public synchronized void publishRevision revision throws IOException ensureOpenif currentRevision  null int compare  revisioncompareTocurrentRevisionrevisionif compare  0 revisionreleasereturnif compare  0 revisionreleasethrow new IllegalArgumentExceptionCannot publish an older revision rev  revision   current currentRevisionfinal RefCountedRevision oldRevision  currentRevisioncurrentRevision  new RefCountedRevisionrevisionif oldRevision  null oldRevisiondecRefcheckExpiredSessions
"public final boolean equals(AnyObjectId other) {return other != null ? isEqual(this, other) : false;}",public final boolean equalsAnyObjectId other return other  null  isEqualthis other  false
public DeleteBGPPeerResult deleteBGPPeer(DeleteBGPPeerRequest request) {request = beforeClientExecution(request);return executeDeleteBGPPeer(request);},public DeleteBGPPeerResult deleteBGPPeerDeleteBGPPeerRequest request request  beforeClientExecutionrequestreturn executeDeleteBGPPeerrequest
"public String toString() {return ""I(n)"";}",public String toString return In
public DeleteVpcPeeringConnectionResult deleteVpcPeeringConnection(DeleteVpcPeeringConnectionRequest request) {request = beforeClientExecution(request);return executeDeleteVpcPeeringConnection(request);},public DeleteVpcPeeringConnectionResult deleteVpcPeeringConnectionDeleteVpcPeeringConnectionRequest request request  beforeClientExecutionrequestreturn executeDeleteVpcPeeringConnectionrequest
public UpdateIdentityPoolResult updateIdentityPool(UpdateIdentityPoolRequest request) {request = beforeClientExecution(request);return executeUpdateIdentityPool(request);},public UpdateIdentityPoolResult updateIdentityPoolUpdateIdentityPoolRequest request request  beforeClientExecutionrequestreturn executeUpdateIdentityPoolrequest
"public String signString(String stringToSign, AlibabaCloudCredentials credentials) {return signString(stringToSign, credentials.getAccessKeySecret());}",public String signStringString stringToSign AlibabaCloudCredentials credentials return signStringstringToSign credentialsgetAccessKeySecret
public GetDeviceResult getDevice(GetDeviceRequest request) {request = beforeClientExecution(request);return executeGetDevice(request);},public GetDeviceResult getDeviceGetDeviceRequest request request  beforeClientExecutionrequestreturn executeGetDevicerequest
public void writeInt(int v) {writeContinueIfRequired(4);_ulrOutput.writeInt(v);},public void writeIntint v writeContinueIfRequired4ulrOutputwriteIntv
public boolean isSuccess() {return 200 <= this.status && this.status < 300;},public boolean isSuccess return 200  thisstatus  thisstatus  300
public static CredentialsProvider getDefault() {return defaultProvider;},public static CredentialsProvider getDefault return defaultProvider
public boolean equals(Object obj) {if (obj == this) {return true;}else if (!(obj instanceof LexerPushModeAction)) {return false;}return mode == ((LexerPushModeAction)obj).mode;},public boolean equalsObject obj if obj  this return trueelse if obj instanceof LexerPushModeAction return falsereturn mode  LexerPushModeActionobjmode
"public void dumpDFA() {synchronized (_interp.decisionToDFA) {boolean seenOne = false;for (int d = 0; d < _interp.decisionToDFA.length; d++) {DFA dfa = _interp.decisionToDFA[d];if ( !dfa.states.isEmpty() ) {if ( seenOne ) System.out.println();System.out.println(""Decision "" + dfa.decision + "":"");System.out.print(dfa.toString(getVocabulary()));seenOne = true;}}}}",public void dumpDFA synchronized interpdecisionToDFA boolean seenOne  falsefor int d  0 d  interpdecisionToDFAlength d DFA dfa  interpdecisionToDFAdif  dfastatesisEmpty  if  seenOne  SystemoutprintlnSystemoutprintlnDecision   dfadecision  SystemoutprintdfatoStringgetVocabularyseenOne  true
"public FloatBuffer put(int index, float c) {throw new ReadOnlyBufferException();}",public FloatBuffer putint index float c throw new ReadOnlyBufferException
public CancelClusterResult cancelCluster(CancelClusterRequest request) {request = beforeClientExecution(request);return executeCancelCluster(request);},public CancelClusterResult cancelClusterCancelClusterRequest request request  beforeClientExecutionrequestreturn executeCancelClusterrequest
public DeleteSnapshotResult deleteSnapshot(DeleteSnapshotRequest request) {request = beforeClientExecution(request);return executeDeleteSnapshot(request);},public DeleteSnapshotResult deleteSnapshotDeleteSnapshotRequest request request  beforeClientExecutionrequestreturn executeDeleteSnapshotrequest
public DeletePhoneNumberResult deletePhoneNumber(DeletePhoneNumberRequest request) {request = beforeClientExecution(request);return executeDeletePhoneNumber(request);},public DeletePhoneNumberResult deletePhoneNumberDeletePhoneNumberRequest request request  beforeClientExecutionrequestreturn executeDeletePhoneNumberrequest
public boolean addPushURI(URIish toAdd) {if (pushURIs.contains(toAdd))return false;return pushURIs.add(toAdd);},public boolean addPushURIURIish toAdd if pushURIscontainstoAddreturn falsereturn pushURIsaddtoAdd
public BytesRef next() throws IOException {boolean success = false;try {scratch = Reader.next();if (scratch == null) {Reader.close();}success = true;return scratch;} finally {if (!success) {IOUtils.closeWhileHandlingException(Reader);}}},public BytesRef next throws IOException boolean success  falsetry scratch  Readernextif scratch  null Readerclosesuccess  truereturn scratch finally if success IOUtilscloseWhileHandlingExceptionReader
public void removeCreateDateTime() {remove1stProperty(PropertyIDMap.PID_CREATE_DTM);},public void removeCreateDateTime remove1stPropertyPropertyIDMapPIDCREATEDTM
public CreateHealthCheckResult createHealthCheck(CreateHealthCheckRequest request) {request = beforeClientExecution(request);return executeCreateHealthCheck(request);},public CreateHealthCheckResult createHealthCheckCreateHealthCheckRequest request request  beforeClientExecutionrequestreturn executeCreateHealthCheckrequest
public EnableVgwRoutePropagationResult enableVgwRoutePropagation(EnableVgwRoutePropagationRequest request) {request = beforeClientExecution(request);return executeEnableVgwRoutePropagation(request);},public EnableVgwRoutePropagationResult enableVgwRoutePropagationEnableVgwRoutePropagationRequest request request  beforeClientExecutionrequestreturn executeEnableVgwRoutePropagationrequest
public void removeByteCount() {remove1stProperty(PropertyIDMap.PID_BYTECOUNT);},public void removeByteCount remove1stPropertyPropertyIDMapPIDBYTECOUNT
public UpdateAutoScalingGroupResult updateAutoScalingGroup(UpdateAutoScalingGroupRequest request) {request = beforeClientExecution(request);return executeUpdateAutoScalingGroup(request);},public UpdateAutoScalingGroupResult updateAutoScalingGroupUpdateAutoScalingGroupRequest request request  beforeClientExecutionrequestreturn executeUpdateAutoScalingGrouprequest
public CreateNotebookInstanceResult createNotebookInstance(CreateNotebookInstanceRequest request) {request = beforeClientExecution(request);return executeCreateNotebookInstance(request);},public CreateNotebookInstanceResult createNotebookInstanceCreateNotebookInstanceRequest request request  beforeClientExecutionrequestreturn executeCreateNotebookInstancerequest
public AllocateAddressResult allocateAddress() {return allocateAddress(new AllocateAddressRequest());},public AllocateAddressResult allocateAddress return allocateAddressnew AllocateAddressRequest
public CreateMLModelResult createMLModel(CreateMLModelRequest request) {request = beforeClientExecution(request);return executeCreateMLModel(request);},public CreateMLModelResult createMLModelCreateMLModelRequest request request  beforeClientExecutionrequestreturn executeCreateMLModelrequest
public ContinueRecord(byte[] data) {_data = data.clone();},public ContinueRecordbyte data data  dataclone
public Parser getParser() {return parser;},public Parser getParser return parser
public DeleteSolutionResult deleteSolution(DeleteSolutionRequest request) {request = beforeClientExecution(request);return executeDeleteSolution(request);},public DeleteSolutionResult deleteSolutionDeleteSolutionRequest request request  beforeClientExecutionrequestreturn executeDeleteSolutionrequest
public boolean isDelete() {return ObjectId.zeroId().equals(newObjectId);},public boolean isDelete return ObjectIdzeroIdequalsnewObjectId
public int getNextPos() {return nextPos;},public int getNextPos return nextPos
public DescribeSpotFleetInstancesResult describeSpotFleetInstances(DescribeSpotFleetInstancesRequest request) {request = beforeClientExecution(request);return executeDescribeSpotFleetInstances(request);},public DescribeSpotFleetInstancesResult describeSpotFleetInstancesDescribeSpotFleetInstancesRequest request request  beforeClientExecutionrequestreturn executeDescribeSpotFleetInstancesrequest
public ResetPasswordResult resetPassword(ResetPasswordRequest request) {request = beforeClientExecution(request);return executeResetPassword(request);},public ResetPasswordResult resetPasswordResetPasswordRequest request request  beforeClientExecutionrequestreturn executeResetPasswordrequest
"public String toString() {return ""DrawingRecord[""+recordData.length+""]"";}",public String toString return DrawingRecordrecordDatalength
"public Status call() throws GitAPIException, NoWorkTreeException {if (workingTreeIt == null)workingTreeIt = new FileTreeIterator(repo);try {IndexDiff diff = new IndexDiff(repo, Constants.HEAD, workingTreeIt);if (ignoreSubmoduleMode != null)diff.setIgnoreSubmoduleMode(ignoreSubmoduleMode);if (paths != null)diff.setFilter(PathFilterGroup.createFromStrings(paths));if (progressMonitor == null)diff.diff();elsediff.diff(progressMonitor, ProgressMonitor.UNKNOWN,ProgressMonitor.UNKNOWN, """"); return new Status(diff);} catch (IOException e) {throw new JGitInternalException(e.getMessage(), e);}}",public Status call throws GitAPIException NoWorkTreeException if workingTreeIt  nullworkingTreeIt  new FileTreeIteratorrepotry IndexDiff diff  new IndexDiffrepo ConstantsHEAD workingTreeItif ignoreSubmoduleMode  nulldiffsetIgnoreSubmoduleModeignoreSubmoduleModeif paths  nulldiffsetFilterPathFilterGroupcreateFromStringspathsif progressMonitor  nulldiffdiffelsediffdiffprogressMonitor ProgressMonitorUNKNOWNProgressMonitorUNKNOWN  return new Statusdiff catch IOException e throw new JGitInternalExceptionegetMessage e
"public PathHierarchyTokenizerFactory(Map<String,String> args) {super(args);delimiter = getChar(args, ""delimiter"", PathHierarchyTokenizer.DEFAULT_DELIMITER);replacement = getChar(args, ""replace"", delimiter);reverse = getBoolean(args, ""reverse"", false);skip = getInt(args, ""skip"", PathHierarchyTokenizer.DEFAULT_SKIP);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public PathHierarchyTokenizerFactoryMapStringString args superargsdelimiter  getCharargs delimiter PathHierarchyTokenizerDEFAULTDELIMITERreplacement  getCharargs replace delimiterreverse  getBooleanargs reverse falseskip  getIntargs skip PathHierarchyTokenizerDEFAULTSKIPif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public String toString() {return super.toString() + "": "" + lockName;}",public String toString return supertoString     lockName
public CreateFieldLevelEncryptionConfigResult createFieldLevelEncryptionConfig(CreateFieldLevelEncryptionConfigRequest request) {request = beforeClientExecution(request);return executeCreateFieldLevelEncryptionConfig(request);},public CreateFieldLevelEncryptionConfigResult createFieldLevelEncryptionConfigCreateFieldLevelEncryptionConfigRequest request request  beforeClientExecutionrequestreturn executeCreateFieldLevelEncryptionConfigrequest
public Reader Reader() {return Reader;},public Reader Reader return Reader
public DeleteHealthCheckResult deleteHealthCheck(DeleteHealthCheckRequest request) {request = beforeClientExecution(request);return executeDeleteHealthCheck(request);},public DeleteHealthCheckResult deleteHealthCheckDeleteHealthCheckRequest request request  beforeClientExecutionrequestreturn executeDeleteHealthCheckrequest
public long get() {return count;},public long get return count
"public int setArrayData(byte[] data, int offset) {if (emptyComplexPart) {resizeComplexData(0);} else {short numElements = LittleEndian.getShort(data, offset);short sizeOfElements = LittleEndian.getShort(data, offset + 4);int cdLen = getComplexData().length;int arraySize = getActualSizeOfElements(sizeOfElements) * numElements;if (arraySize == cdLen) {resizeComplexData(arraySize + 6, 0);sizeIncludesHeaderSize = false;}setComplexData(data, offset);}return getComplexData().length;}",public int setArrayDatabyte data int offset if emptyComplexPart resizeComplexData0 else short numElements  LittleEndiangetShortdata offsetshort sizeOfElements  LittleEndiangetShortdata offset  4int cdLen  getComplexDatalengthint arraySize  getActualSizeOfElementssizeOfElements  numElementsif arraySize  cdLen resizeComplexDataarraySize  6 0sizeIncludesHeaderSize  falsesetComplexDatadata offsetreturn getComplexDatalength
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {TwoDEval reference = convertFirstArg(arg0);int columnIx = 0;try {int rowIx = resolveIndexArg(arg1, srcRowIndex, srcColumnIndex);if (!reference.isColumn()) {if (!reference.isRow()) {return ErrorEval.REF_INVALID;}columnIx = rowIx;rowIx = 0;}return getValueFromArea(reference, rowIx, columnIx);} catch (EvaluationException e) {return e.getErrorEval();}}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1 TwoDEval reference  convertFirstArgarg0int columnIx  0try int rowIx  resolveIndexArgarg1 srcRowIndex srcColumnIndexif referenceisColumn if referenceisRow return ErrorEvalREFINVALIDcolumnIx  rowIxrowIx  0return getValueFromAreareference rowIx columnIx catch EvaluationException e return egetErrorEval
"public boolean seekExact(BytesRef term) throws IOException {throw new UnsupportedOperationException(getClass().getName()+"" does not support seeking"");}",public boolean seekExactBytesRef term throws IOException throw new UnsupportedOperationExceptiongetClassgetName does not support seeking
public GetSmsTemplateResult getSmsTemplate(GetSmsTemplateRequest request) {request = beforeClientExecution(request);return executeGetSmsTemplate(request);},public GetSmsTemplateResult getSmsTemplateGetSmsTemplateRequest request request  beforeClientExecutionrequestreturn executeGetSmsTemplaterequest
public String getFieldAsString() {if (this.field == null)return null;else return this.field.toString();},public String getFieldAsString if thisfield  nullreturn nullelse return thisfieldtoString
"@Override public int read(byte[] buffer, int byteOffset, int byteCount) throws IOException {return IoBridge.read(fd, buffer, byteOffset, byteCount);}",Override public int readbyte buffer int byteOffset int byteCount throws IOException return IoBridgereadfd buffer byteOffset byteCount
public HSSFHyperlink createHyperlink(HyperlinkType type) {return new HSSFHyperlink(type);},public HSSFHyperlink createHyperlinkHyperlinkType type return new HSSFHyperlinktype
public UpdateGlobalSettingsResult updateGlobalSettings(UpdateGlobalSettingsRequest request) {request = beforeClientExecution(request);return executeUpdateGlobalSettings(request);},public UpdateGlobalSettingsResult updateGlobalSettingsUpdateGlobalSettingsRequest request request  beforeClientExecutionrequestreturn executeUpdateGlobalSettingsrequest
"public static String segmentFileName(String segmentName, String segmentSuffix, String ext) {if (ext.length() > 0 || segmentSuffix.length() > 0) {assert !ext.startsWith(""."");StringBuilder sb = new StringBuilder(segmentName.length() + 2 + segmentSuffix.length() + ext.length());sb.append(segmentName);if (segmentSuffix.length() > 0) {sb.append('_').append(segmentSuffix);}if (ext.length() > 0) {sb.append('.').append(ext);}return sb.toString();} else {return segmentName;}}",public static String segmentFileNameString segmentName String segmentSuffix String ext if extlength  0  segmentSuffixlength  0 assert extstartsWithStringBuilder sb  new StringBuildersegmentNamelength  2  segmentSuffixlength  extlengthsbappendsegmentNameif segmentSuffixlength  0 sbappendappendsegmentSuffixif extlength  0 sbappendappendextreturn sbtoString else return segmentName
public static JGitText get() {return NLS.getBundleFor(JGitText.class);},public static JGitText get return NLSgetBundleForJGitTextclass
"public void insert(String key, char val) {int len = key.length() + 1; if (freenode + len > eq.length) {redimNodeArrays(eq.length + BLOCK_SIZE);}char strkey[] = new char[len--];key.getChars(0, len, strkey, 0);strkey[len] = 0;root = insert(root, strkey, 0, val);}",public void insertString key char val int len  keylength  1 if freenode  len  eqlength redimNodeArrayseqlength  BLOCKSIZEchar strkey  new charlenkeygetChars0 len strkey 0strkeylen  0root  insertroot strkey 0 val
"public NameRecord createBuiltInName(byte builtInName, int sheetNumber) {if (sheetNumber < 0 || sheetNumber+1 > Short.MAX_VALUE) {throw new IllegalArgumentException(""Sheet number [""+sheetNumber+""]is not valid "");}NameRecord name = new NameRecord(builtInName, sheetNumber);if(linkTable.nameAlreadyExists(name)) {throw new RuntimeException(""Builtin ("" + builtInName+ "") already exists for sheet ("" + sheetNumber + "")"");}addName(name);return name;}",public NameRecord createBuiltInNamebyte builtInName int sheetNumber if sheetNumber  0  sheetNumber1  ShortMAXVALUE throw new IllegalArgumentExceptionSheet number sheetNumberis not valid NameRecord name  new NameRecordbuiltInName sheetNumberiflinkTablenameAlreadyExistsname throw new RuntimeExceptionBuiltin   builtInName  already exists for sheet   sheetNumber  addNamenamereturn name
"public static int compareArray(char[] larray, int lstartIndex, char[] rarray,int rstartIndex) {if (larray == null) {if (rarray == null || rstartIndex >= rarray.length)return 0;else return -1;} else {if (rarray == null) {if (lstartIndex >= larray.length)return 0;else return 1;}}int li = lstartIndex, ri = rstartIndex;while (li < larray.length && ri < rarray.length && larray[li] == rarray[ri]) {li++;ri++;}if (li == larray.length) {if (ri == rarray.length) {return 0;} else {return -1;}} else {if (ri == rarray.length) {return 1;} else {if (larray[li] > rarray[ri])return 1;else return -1;}}}",public static int compareArraychar larray int lstartIndex char rarrayint rstartIndex if larray  null if rarray  null  rstartIndex  rarraylengthreturn 0else return 1 else if rarray  null if lstartIndex  larraylengthreturn 0else return 1int li  lstartIndex ri  rstartIndexwhile li  larraylength  ri  rarraylength  larrayli  rarrayri liriif li  larraylength if ri  rarraylength return 0 else return 1 else if ri  rarraylength return 1 else if larrayli  rarrayrireturn 1else return 1
public GetVoiceConnectorResult getVoiceConnector(GetVoiceConnectorRequest request) {request = beforeClientExecution(request);return executeGetVoiceConnector(request);},public GetVoiceConnectorResult getVoiceConnectorGetVoiceConnectorRequest request request  beforeClientExecutionrequestreturn executeGetVoiceConnectorrequest
"public void setValueAt(int relativeOffset, int value) {int oldValue = _values[relativeOffset];_values[relativeOffset] = value;if(value == POIFSConstants.UNUSED_BLOCK) {_has_free_sectors = true;return;}if(oldValue == POIFSConstants.UNUSED_BLOCK) {recomputeFree();}}",public void setValueAtint relativeOffset int value int oldValue  valuesrelativeOffsetvaluesrelativeOffset  valueifvalue  POIFSConstantsUNUSEDBLOCK hasfreesectors  truereturnifoldValue  POIFSConstantsUNUSEDBLOCK recomputeFree
"public static boolean isBinary(byte[] raw) {return isBinary(raw, raw.length);}",public static boolean isBinarybyte raw return isBinaryraw rawlength
"public void build(InputIterator iterator) throws IOException {if (iterator.hasPayloads()) {throw new IllegalArgumentException(""this suggester doesn't support payloads"");}if (iterator.hasContexts()) {throw new IllegalArgumentException(""this suggester doesn't support contexts"");}count = 0;trie = new JaspellTernarySearchTrie();trie.setMatchAlmostDiff(editDistance);BytesRef spare;final CharsRefBuilder charsSpare = new CharsRefBuilder();while ((spare = iterator.next()) != null) {final long weight = iterator.weight();if (spare.length == 0) {continue;}charsSpare.copyUTF8Bytes(spare);trie.put(charsSpare.toString(), Long.valueOf(weight));count++;}}",public void buildInputIterator iterator throws IOException if iteratorhasPayloads throw new IllegalArgumentExceptionthis suggester doesnt support payloadsif iteratorhasContexts throw new IllegalArgumentExceptionthis suggester doesnt support contextscount  0trie  new JaspellTernarySearchTrietriesetMatchAlmostDiffeditDistanceBytesRef sparefinal CharsRefBuilder charsSpare  new CharsRefBuilderwhile spare  iteratornext  null final long weight  iteratorweightif sparelength  0 continuecharsSparecopyUTF8BytessparetrieputcharsSparetoString LongvalueOfweightcount
public boolean isVerticalBorder(){return verticalBorder.isSet(field_1_options);},public boolean isVerticalBorderreturn verticalBorderisSetfield1options
"public CreateDBInstanceRequest(String dBInstanceIdentifier, Integer allocatedStorage, String dBInstanceClass, String engine, String masterUsername,String masterUserPassword) {setDBInstanceIdentifier(dBInstanceIdentifier);setAllocatedStorage(allocatedStorage);setDBInstanceClass(dBInstanceClass);setEngine(engine);setMasterUsername(masterUsername);setMasterUserPassword(masterUserPassword);}",public CreateDBInstanceRequestString dBInstanceIdentifier Integer allocatedStorage String dBInstanceClass String engine String masterUsernameString masterUserPassword setDBInstanceIdentifierdBInstanceIdentifiersetAllocatedStorageallocatedStoragesetDBInstanceClassdBInstanceClasssetEngineenginesetMasterUsernamemasterUsernamesetMasterUserPasswordmasterUserPassword
public DescribeCapacityProvidersResult describeCapacityProviders(DescribeCapacityProvidersRequest request) {request = beforeClientExecution(request);return executeDescribeCapacityProviders(request);},public DescribeCapacityProvidersResult describeCapacityProvidersDescribeCapacityProvidersRequest request request  beforeClientExecutionrequestreturn executeDescribeCapacityProvidersrequest
public CreateQualificationTypeResult createQualificationType(CreateQualificationTypeRequest request) {request = beforeClientExecution(request);return executeCreateQualificationType(request);},public CreateQualificationTypeResult createQualificationTypeCreateQualificationTypeRequest request request  beforeClientExecutionrequestreturn executeCreateQualificationTyperequest
public void addLast(E object) {addLastImpl(object);},public void addLastE object addLastImplobject
public Patch() {files = new ArrayList<>();errors = new ArrayList<>(0);},public Patch files  new ArrayListerrors  new ArrayList0
public GetSdkTypesResult getSdkTypes(GetSdkTypesRequest request) {request = beforeClientExecution(request);return executeGetSdkTypes(request);},public GetSdkTypesResult getSdkTypesGetSdkTypesRequest request request  beforeClientExecutionrequestreturn executeGetSdkTypesrequest
"public String toFormulaString() {throw new RuntimeException(""3D references need a workbook to determine formula text"");}",public String toFormulaString throw new RuntimeException3D references need a workbook to determine formula text
"public ListPhotoFacesRequest() {super(""CloudPhoto"", ""2017-07-11"", ""ListPhotoFaces"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public ListPhotoFacesRequest superCloudPhoto 20170711 ListPhotoFaces cloudphotosetProtocolProtocolTypeHTTPS
public boolean isBatchMode() {return batchMode != null && batchMode.booleanValue();},public boolean isBatchMode return batchMode  null  batchModebooleanValue
@Override public boolean isEmpty() {return endpoint(true) == null;},Override public boolean isEmpty return endpointtrue  null
"@Override public Set<Entry<K, V>> entrySet() {BoundedEntrySet result = entrySet;return result != null ? result : (entrySet = new BoundedEntrySet());}",Override public SetEntryK V entrySet BoundedEntrySet result  entrySetreturn result  null  result  entrySet  new BoundedEntrySet
"public static CFRuleRecord create(HSSFSheet sheet, String formulaText) {Ptg[] formula1 = parseFormula(formulaText, sheet);return new CFRuleRecord(CONDITION_TYPE_FORMULA, ComparisonOperator.NO_COMPARISON,formula1, null);}",public static CFRuleRecord createHSSFSheet sheet String formulaText Ptg formula1  parseFormulaformulaText sheetreturn new CFRuleRecordCONDITIONTYPEFORMULA ComparisonOperatorNOCOMPARISONformula1 null
"public DeleteAlbumsRequest() {super(""CloudPhoto"", ""2017-07-11"", ""DeleteAlbums"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public DeleteAlbumsRequest superCloudPhoto 20170711 DeleteAlbums cloudphotosetProtocolProtocolTypeHTTPS
public MissingFormatArgumentException(String s) {if (s == null) {throw new NullPointerException();}this.s = s;},public MissingFormatArgumentExceptionString s if s  null throw new NullPointerExceptionthiss  s
public DeleteApplicationOutputResult deleteApplicationOutput(DeleteApplicationOutputRequest request) {request = beforeClientExecution(request);return executeDeleteApplicationOutput(request);},public DeleteApplicationOutputResult deleteApplicationOutputDeleteApplicationOutputRequest request request  beforeClientExecutionrequestreturn executeDeleteApplicationOutputrequest
public PredictionContextCache getSharedContextCache() {return sharedContextCache;},public PredictionContextCache getSharedContextCache return sharedContextCache
"public String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getName()).append("" ["");sb.append(getText());sb.append(""]"");return sb.toString();}",public String toString StringBuilder sb  new StringBuilder64sbappendgetClassgetNameappend sbappendgetTextsbappendreturn sbtoString
public DecisionState getDecisionState(int decision) {if ( !decisionToState.isEmpty() ) {return decisionToState.get(decision);}return null;},public DecisionState getDecisionStateint decision if  decisionToStateisEmpty  return decisionToStategetdecisionreturn null
public void removeSheet(int sheetIdx) {_externSheetRecord.removeSheet(sheetIdx);},public void removeSheetint sheetIdx externSheetRecordremoveSheetsheetIdx
public HSSFRequest() {_records = new HashMap<>(50); },public HSSFRequest records  new HashMap50 
"final public QueryNode TopLevelQuery(CharSequence field) throws ParseException {QueryNode q;q = Query(field);jj_consume_token(0);{if (true) return q;}throw new Error(""Missing return statement in function"");}",final public QueryNode TopLevelQueryCharSequence field throws ParseException QueryNode qq  Queryfieldjjconsumetoken0if true return qthrow new ErrorMissing return statement in function
public DescribeUpdateResult describeUpdate(DescribeUpdateRequest request) {request = beforeClientExecution(request);return executeDescribeUpdate(request);},public DescribeUpdateResult describeUpdateDescribeUpdateRequest request request  beforeClientExecutionrequestreturn executeDescribeUpdaterequest
public boolean getValue() {return value;},public boolean getValue return value
public final int getType() {return (flags >> TYPE_SHIFT) & 0x7;},public final int getType return flags  TYPESHIFT  0x7
"public DoubleBuffer put(double c) {if (position == limit) {throw new BufferOverflowException();}byteBuffer.putDouble(position++ * SizeOf.DOUBLE, c);return this;}",public DoubleBuffer putdouble c if position  limit throw new BufferOverflowExceptionbyteBufferputDoubleposition  SizeOfDOUBLE creturn this
"public void endEvaluate(CellCacheEntry cce) {int nFrames = _evaluationFrames.size();if (nFrames < 1) {throw new IllegalStateException(""Call to endEvaluate without matching call to startEvaluate"");}nFrames--;CellEvaluationFrame frame = _evaluationFrames.get(nFrames);if (cce != frame.getCCE()) {throw new IllegalStateException(""Wrong cell specified. "");}_evaluationFrames.remove(nFrames);_currentlyEvaluatingCells.remove(cce);}",public void endEvaluateCellCacheEntry cce int nFrames  evaluationFramessizeif nFrames  1 throw new IllegalStateExceptionCall to endEvaluate without matching call to startEvaluatenFramesCellEvaluationFrame frame  evaluationFramesgetnFramesif cce  framegetCCE throw new IllegalStateExceptionWrong cell specified evaluationFramesremovenFramescurrentlyEvaluatingCellsremovecce
public NumberPtg(double value) {field_1_value = value;},public NumberPtgdouble value field1value  value
public GroupingSearch setGroupSort(Sort groupSort) {this.groupSort = groupSort;return this;},public GroupingSearch setGroupSortSort groupSort thisgroupSort  groupSortreturn this
public HSSFBorderFormatting createBorderFormatting() {return getBorderFormatting(true);},public HSSFBorderFormatting createBorderFormatting return getBorderFormattingtrue
"public HSSFSimpleShape createShape(HSSFChildAnchor anchor) {HSSFSimpleShape shape = new HSSFSimpleShape(this, anchor);shape.setParent(this);shape.setAnchor(anchor);shapes.add(shape);onCreate(shape);EscherSpRecord sp = shape.getEscherContainer().getChildById(EscherSpRecord.RECORD_ID);if (shape.getAnchor().isHorizontallyFlipped()){sp.setFlags(sp.getFlags() | EscherSpRecord.FLAG_FLIPHORIZ);}if (shape.getAnchor().isVerticallyFlipped()){sp.setFlags(sp.getFlags() | EscherSpRecord.FLAG_FLIPVERT);}return shape;}",public HSSFSimpleShape createShapeHSSFChildAnchor anchor HSSFSimpleShape shape  new HSSFSimpleShapethis anchorshapesetParentthisshapesetAnchoranchorshapesaddshapeonCreateshapeEscherSpRecord sp  shapegetEscherContainergetChildByIdEscherSpRecordRECORDIDif shapegetAnchorisHorizontallyFlippedspsetFlagsspgetFlags  EscherSpRecordFLAGFLIPHORIZif shapegetAnchorisVerticallyFlippedspsetFlagsspgetFlags  EscherSpRecordFLAGFLIPVERTreturn shape
public GetLifecyclePolicyResult getLifecyclePolicy(GetLifecyclePolicyRequest request) {request = beforeClientExecution(request);return executeGetLifecyclePolicy(request);},public GetLifecyclePolicyResult getLifecyclePolicyGetLifecyclePolicyRequest request request  beforeClientExecutionrequestreturn executeGetLifecyclePolicyrequest
public Integer integerValue(String key) {String value = responseMap.get(key);if (null == value || 0 == value.length()) {return null;}return Integer.valueOf(value);},public Integer integerValueString key String value  responseMapgetkeyif null  value  0  valuelength return nullreturn IntegervalueOfvalue
public int size() {return backingMap.size();},public int size return backingMapsize
"public Map.Entry<K, V> next() {if (!valueIterator.hasNext()) {findValueIteratorAndKey();}return Maps.immutableEntry(key, valueIterator.next());}",public MapEntryK V next if valueIteratorhasNext findValueIteratorAndKeyreturn MapsimmutableEntrykey valueIteratornext
public boolean shouldBeRecursive() {return a.shouldBeRecursive();},public boolean shouldBeRecursive return ashouldBeRecursive
"public GetRepoAuthorizationListRequest() {super(""cr"", ""2016-06-07"", ""GetRepoAuthorizationList"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/authorizations"");setMethod(MethodType.GET);}",public GetRepoAuthorizationListRequest supercr 20160607 GetRepoAuthorizationList crsetUriPatternreposRepoNamespaceRepoNameauthorizationssetMethodMethodTypeGET
"public int checkExternSheet(int sheetIndex) {return checkExternSheet(sheetIndex, sheetIndex);}",public int checkExternSheetint sheetIndex return checkExternSheetsheetIndex sheetIndex
"public LexerATNConfig(LexerATNConfig c, ATNState state) {super(c, state, c.context, c.semanticContext);this.lexerActionExecutor = c.lexerActionExecutor;this.passedThroughNonGreedyDecision = checkNonGreedyDecision(c, state);}",public LexerATNConfigLexerATNConfig c ATNState state superc state ccontext csemanticContextthislexerActionExecutor  clexerActionExecutorthispassedThroughNonGreedyDecision  checkNonGreedyDecisionc state
"public QueryNodeProcessor set(int index, QueryNodeProcessor processor) {QueryNodeProcessor oldProcessor = this.processors.set(index, processor);if (oldProcessor != processor) {processor.setQueryConfigHandler(this.queryConfig);}return oldProcessor;}",public QueryNodeProcessor setint index QueryNodeProcessor processor QueryNodeProcessor oldProcessor  thisprocessorssetindex processorif oldProcessor  processor processorsetQueryConfigHandlerthisqueryConfigreturn oldProcessor
"public String getRuleName(int index) {if ( parser!=null && index>=0 ) return parser.getRuleNames()[index];return ""<rule ""+index+"">"";}",public String getRuleNameint index if  parsernull  index0  return parsergetRuleNamesindexreturn rule index
"public ByteBuffer compact() {System.arraycopy(backingArray, position + offset, backingArray, offset, remaining());position = limit - position;limit = capacity;mark = UNSET_MARK;return this;}",public ByteBuffer compact SystemarraycopybackingArray position  offset backingArray offset remainingposition  limit  positionlimit  capacitymark  UNSETMARKreturn this
"public DirCache call() throws GitAPIException,NoFilepatternException {if (filepatterns.isEmpty())throw new NoFilepatternException(JGitText.get().atLeastOnePatternIsRequired);checkCallable();DirCache dc = null;List<String> actuallyDeletedFiles = new ArrayList<>();try (TreeWalk tw = new TreeWalk(repo)) {dc = repo.lockDirCache();DirCacheBuilder builder = dc.builder();tw.reset(); tw.setRecursive(true);tw.setFilter(PathFilterGroup.createFromStrings(filepatterns));tw.addTree(new DirCacheBuildIterator(builder));while (tw.next()) {if (!cached) {final FileMode mode = tw.getFileMode(0);if (mode.getObjectType() == Constants.OBJ_BLOB) {String relativePath = tw.getPathString();final File path = new File(repo.getWorkTree(),relativePath);if (delete(path)) {actuallyDeletedFiles.add(relativePath);}}}}builder.commit();setCallable(false);} catch (IOException e) {throw new JGitInternalException(JGitText.get().exceptionCaughtDuringExecutionOfRmCommand, e);} finally {try {if (dc != null) {dc.unlock();}} finally {if (!actuallyDeletedFiles.isEmpty()) {repo.fireEvent(new WorkingTreeModifiedEvent(null,actuallyDeletedFiles));}}}return dc;}",public DirCache call throws GitAPIExceptionNoFilepatternException if filepatternsisEmptythrow new NoFilepatternExceptionJGitTextgetatLeastOnePatternIsRequiredcheckCallableDirCache dc  nullListString actuallyDeletedFiles  new ArrayListtry TreeWalk tw  new TreeWalkrepo dc  repolockDirCacheDirCacheBuilder builder  dcbuildertwreset twsetRecursivetruetwsetFilterPathFilterGroupcreateFromStringsfilepatternstwaddTreenew DirCacheBuildIteratorbuilderwhile twnext if cached final FileMode mode  twgetFileMode0if modegetObjectType  ConstantsOBJBLOB String relativePath  twgetPathStringfinal File path  new FilerepogetWorkTreerelativePathif deletepath actuallyDeletedFilesaddrelativePathbuildercommitsetCallablefalse catch IOException e throw new JGitInternalExceptionJGitTextgetexceptionCaughtDuringExecutionOfRmCommand e finally try if dc  null dcunlock finally if actuallyDeletedFilesisEmpty repofireEventnew WorkingTreeModifiedEventnullactuallyDeletedFilesreturn dc
public DeleteGatewayResponseResult deleteGatewayResponse(DeleteGatewayResponseRequest request) {request = beforeClientExecution(request);return executeDeleteGatewayResponse(request);},public DeleteGatewayResponseResult deleteGatewayResponseDeleteGatewayResponseRequest request request  beforeClientExecutionrequestreturn executeDeleteGatewayResponserequest
"public TokenStream create(TokenStream input) {return new NorwegianLightStemFilter(input, flags);}",public TokenStream createTokenStream input return new NorwegianLightStemFilterinput flags
"public GetUserSourceRepoListRequest() {super(""cr"", ""2016-06-07"", ""GetUserSourceRepoList"", ""cr"");setUriPattern(""/users/sourceAccount/[SourceAccountId]/repos"");setMethod(MethodType.GET);}",public GetUserSourceRepoListRequest supercr 20160607 GetUserSourceRepoList crsetUriPatternuserssourceAccountSourceAccountIdrepossetMethodMethodTypeGET
public DescribeEventBusResult describeEventBus(DescribeEventBusRequest request) {request = beforeClientExecution(request);return executeDescribeEventBus(request);},public DescribeEventBusResult describeEventBusDescribeEventBusRequest request request  beforeClientExecutionrequestreturn executeDescribeEventBusrequest
"public DefaultAcsClient(IClientProfile profile, AlibabaCloudCredentialsProvider credentialsProvider) {this.clientProfile = profile;this.credentialsProvider = credentialsProvider;this.clientProfile.setCredentialsProvider(this.credentialsProvider);this.httpClient = HttpClientFactory.buildClient(this.clientProfile);this.endpointResolver = new DefaultEndpointResolver(this, profile);this.appendUserAgent(""HTTPClient"", this.httpClient.getClass().getSimpleName());}",public DefaultAcsClientIClientProfile profile AlibabaCloudCredentialsProvider credentialsProvider thisclientProfile  profilethiscredentialsProvider  credentialsProviderthisclientProfilesetCredentialsProviderthiscredentialsProviderthishttpClient  HttpClientFactorybuildClientthisclientProfilethisendpointResolver  new DefaultEndpointResolverthis profilethisappendUserAgentHTTPClient thishttpClientgetClassgetSimpleName
public String toString() {StringBuilder result = new StringBuilder(limit - position);for (int i = position; i < limit; i++) {result.append(get(i));}return result.toString();},public String toString StringBuilder result  new StringBuilderlimit  positionfor int i  position i  limit i resultappendgetireturn resulttoString
public final byte[] replacement() {return replacementBytes;},public final byte replacement return replacementBytes
public SeriesToChartGroupRecord clone() {return copy();},public SeriesToChartGroupRecord clone return copy
public AttributeValue(java.util.List<String> sS) {setSS(sS);},public AttributeValuejavautilListString sS setSSsS
"public HSSFComment(EscherContainerRecord spContainer, ObjRecord objRecord, TextObjectRecord textObjectRecord, NoteRecord note) {super(spContainer, objRecord, textObjectRecord);_note = note;}",public HSSFCommentEscherContainerRecord spContainer ObjRecord objRecord TextObjectRecord textObjectRecord NoteRecord note superspContainer objRecord textObjectRecordnote  note
"public FilteredDocIdSetIterator(DocIdSetIterator innerIter) {if (innerIter == null) {throw new IllegalArgumentException(""null iterator"");}_innerIter = innerIter;doc = -1;}",public FilteredDocIdSetIteratorDocIdSetIterator innerIter if innerIter  null throw new IllegalArgumentExceptionnull iteratorinnerIter  innerIterdoc  1
public DeleteDBClusterParameterGroupResult deleteDBClusterParameterGroup(DeleteDBClusterParameterGroupRequest request) {request = beforeClientExecution(request);return executeDeleteDBClusterParameterGroup(request);},public DeleteDBClusterParameterGroupResult deleteDBClusterParameterGroupDeleteDBClusterParameterGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteDBClusterParameterGrouprequest
"public LongsRef next(int count) throws IOException {assert nextValues.length >= 0;assert count > 0;assert nextValues.offset + nextValues.length <= nextValues.longs.length;nextValues.offset += nextValues.length;final int remaining = valueCount - position - 1;if (remaining <= 0) {throw new EOFException();}count = Math.min(remaining, count);if (nextValues.offset == nextValues.longs.length) {final long remainingBlocks = format.byteCount(packedIntsVersion, remaining, bitsPerValue);final int blocksToRead = (int) Math.min(remainingBlocks, nextBlocks.length);in.readBytes(nextBlocks, 0, blocksToRead);if (blocksToRead < nextBlocks.length) {Arrays.fill(nextBlocks, blocksToRead, nextBlocks.length, (byte) 0);}bulkOperation.decode(nextBlocks, 0, nextValues.longs, 0, iterations);nextValues.offset = 0;}nextValues.length = Math.min(nextValues.longs.length - nextValues.offset, count);position += nextValues.length;return nextValues;}",public LongsRef nextint count throws IOException assert nextValueslength  0assert count  0assert nextValuesoffset  nextValueslength  nextValueslongslengthnextValuesoffset  nextValueslengthfinal int remaining  valueCount  position  1if remaining  0 throw new EOFExceptioncount  Mathminremaining countif nextValuesoffset  nextValueslongslength final long remainingBlocks  formatbyteCountpackedIntsVersion remaining bitsPerValuefinal int blocksToRead  int MathminremainingBlocks nextBlockslengthinreadBytesnextBlocks 0 blocksToReadif blocksToRead  nextBlockslength ArraysfillnextBlocks blocksToRead nextBlockslength byte 0bulkOperationdecodenextBlocks 0 nextValueslongs 0 iterationsnextValuesoffset  0nextValueslength  MathminnextValueslongslength  nextValuesoffset countposition  nextValueslengthreturn nextValues
public UpdateServiceAccessPoliciesResult updateServiceAccessPolicies(UpdateServiceAccessPoliciesRequest request) {request = beforeClientExecution(request);return executeUpdateServiceAccessPolicies(request);},public UpdateServiceAccessPoliciesResult updateServiceAccessPoliciesUpdateServiceAccessPoliciesRequest request request  beforeClientExecutionrequestreturn executeUpdateServiceAccessPoliciesrequest
public void serialize(LittleEndianOutput out) {out.writeShort(sid);out.writeShort(ENCODED_SIZE);},public void serializeLittleEndianOutput out outwriteShortsidoutwriteShortENCODEDSIZE
public GetApplicationSettingsResult getApplicationSettings(GetApplicationSettingsRequest request) {request = beforeClientExecution(request);return executeGetApplicationSettings(request);},public GetApplicationSettingsResult getApplicationSettingsGetApplicationSettingsRequest request request  beforeClientExecutionrequestreturn executeGetApplicationSettingsrequest
public void serialize(LittleEndianOutput out) {out.writeShort(getCodepage());},public void serializeLittleEndianOutput out outwriteShortgetCodepage
"public SharedFormulaRecord(RecordInputStream in) {super(in);field_5_reserved        = in.readShort();int field_6_expression_len = in.readShort();int nAvailableBytes = in.available();field_7_parsed_expr = Formula.read(field_6_expression_len, in, nAvailableBytes);}",public SharedFormulaRecordRecordInputStream in superinfield5reserved         inreadShortint field6expressionlen  inreadShortint nAvailableBytes  inavailablefield7parsedexpr  Formulareadfield6expressionlen in nAvailableBytes
public void remove() {if (this.lastPosition == -1) {throw new IllegalStateException();}if (expectedModCount != modCount) {throw new ConcurrentModificationException();}try {AbstractList.this.remove(lastPosition);} catch (IndexOutOfBoundsException e) {throw new ConcurrentModificationException();}expectedModCount = modCount;if (pos == lastPosition) {pos--;}lastPosition = -1;},public void remove if thislastPosition  1 throw new IllegalStateExceptionif expectedModCount  modCount throw new ConcurrentModificationExceptiontry AbstractListthisremovelastPosition catch IndexOutOfBoundsException e throw new ConcurrentModificationExceptionexpectedModCount  modCountif pos  lastPosition poslastPosition  1
public int getRef(Character way) {Cell c = at(way);return (c == null) ? -1 : c.ref;},public int getRefCharacter way Cell c  atwayreturn c  null  1  cref
"public K ceilingKey(K key) {Entry<K, V> entry = findBounded(key, CEILING);return entry != null ? entry.getKey() : null;}",public K ceilingKeyK key EntryK V entry  findBoundedkey CEILINGreturn entry  null  entrygetKey  null
public CreateApplicationRequest(String applicationName) {setApplicationName(applicationName);},public CreateApplicationRequestString applicationName setApplicationNameapplicationName
"public int pathCompare(byte[] buf, int pos, int end, int pathMode) {return pathCompare(buf, pos, end, pathMode, 0);}",public int pathComparebyte buf int pos int end int pathMode return pathComparebuf pos end pathMode 0
public DescribeContainerInstancesResult describeContainerInstances(DescribeContainerInstancesRequest request) {request = beforeClientExecution(request);return executeDescribeContainerInstances(request);},public DescribeContainerInstancesResult describeContainerInstancesDescribeContainerInstancesRequest request request  beforeClientExecutionrequestreturn executeDescribeContainerInstancesrequest
public void serialize(LittleEndianOutput out) {for (short tabid : _tabids) {out.writeShort(tabid);}},public void serializeLittleEndianOutput out for short tabid  tabids outwriteShorttabid
public ListIAMPolicyAssignmentsForUserResult listIAMPolicyAssignmentsForUser(ListIAMPolicyAssignmentsForUserRequest request) {request = beforeClientExecution(request);return executeListIAMPolicyAssignmentsForUser(request);},public ListIAMPolicyAssignmentsForUserResult listIAMPolicyAssignmentsForUserListIAMPolicyAssignmentsForUserRequest request request  beforeClientExecutionrequestreturn executeListIAMPolicyAssignmentsForUserrequest
"public boolean equals(Object obj) {if (obj instanceof Map.Entry) {final Object key = ((Map.Entry) obj).getKey();final Object val = ((Map.Entry) obj).getValue();if (key instanceof String && val instanceof Ref) {final Ref r = (Ref) val;if (r.getName().equals(ref.getName())) {final ObjectId a = r.getObjectId();final ObjectId b = ref.getObjectId();if (a != null && b != null&& AnyObjectId.isEqual(a, b)) {return true;}}}}return false;}",public boolean equalsObject obj if obj instanceof MapEntry final Object key  MapEntry objgetKeyfinal Object val  MapEntry objgetValueif key instanceof String  val instanceof Ref final Ref r  Ref valif rgetNameequalsrefgetName final ObjectId a  rgetObjectIdfinal ObjectId b  refgetObjectIdif a  null  b  null AnyObjectIdisEquala b return truereturn false
public RemoveFacetFromObjectResult removeFacetFromObject(RemoveFacetFromObjectRequest request) {request = beforeClientExecution(request);return executeRemoveFacetFromObject(request);},public RemoveFacetFromObjectResult removeFacetFromObjectRemoveFacetFromObjectRequest request request  beforeClientExecutionrequestreturn executeRemoveFacetFromObjectrequest
"public static boolean equals(char[] array1, char[] array2) {if (array1 == array2) {return true;}if (array1 == null || array2 == null || array1.length != array2.length) {return false;}for (int i = 0; i < array1.length; i++) {if (array1[i] != array2[i]) {return false;}}return true;}",public static boolean equalschar array1 char array2 if array1  array2 return trueif array1  null  array2  null  array1length  array2length return falsefor int i  0 i  array1length i if array1i  array2i return falsereturn true
public AssociateRouteTableResult associateRouteTable(AssociateRouteTableRequest request) {request = beforeClientExecution(request);return executeAssociateRouteTable(request);},public AssociateRouteTableResult associateRouteTableAssociateRouteTableRequest request request  beforeClientExecutionrequestreturn executeAssociateRouteTablerequest
public void createInformationProperties() {if (!initialized) {readProperties();}if (sInf == null) {sInf = PropertySetFactory.newSummaryInformation();}if (dsInf == null) {dsInf = newDocumentSummaryInformation();}},public void createInformationProperties if initialized readPropertiesif sInf  null sInf  PropertySetFactorynewSummaryInformationif dsInf  null dsInf  newDocumentSummaryInformation
public DescribeCommentsResult describeComments(DescribeCommentsRequest request) {request = beforeClientExecution(request);return executeDescribeComments(request);},public DescribeCommentsResult describeCommentsDescribeCommentsRequest request request  beforeClientExecutionrequestreturn executeDescribeCommentsrequest
"public MoPenCreateDeviceRequest() {super(""MoPen"", ""2018-02-11"", ""MoPenCreateDevice"", ""mopen"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public MoPenCreateDeviceRequest superMoPen 20180211 MoPenCreateDevice mopensetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public ApplySchemaResult applySchema(ApplySchemaRequest request) {request = beforeClientExecution(request);return executeApplySchema(request);},public ApplySchemaResult applySchemaApplySchemaRequest request request  beforeClientExecutionrequestreturn executeApplySchemarequest
public MMSRecord(RecordInputStream in) {if (in.remaining()==0) {return;}field_1_addMenuCount = in.readByte();field_2_delMenuCount = in.readByte();},public MMSRecordRecordInputStream in if inremaining0 returnfield1addMenuCount  inreadBytefield2delMenuCount  inreadByte
public UserInputQueryBuilder(QueryParser parser) {this.unSafeParser = parser;},public UserInputQueryBuilderQueryParser parser thisunSafeParser  parser
public Object get(CharSequence key) {TSTNode node = getNode(key);if (node == null) {return null;}return node.data;},public Object getCharSequence key TSTNode node  getNodekeyif node  null return nullreturn nodedata
public MergedGroup(T groupValue) {this.groupValue = groupValue;},public MergedGroupT groupValue thisgroupValue  groupValue
"public StoredField(String name, int value) {super(name, TYPE);fieldsData = value;}",public StoredFieldString name int value supername TYPEfieldsData  value
public RebaseCommand setProgressMonitor(ProgressMonitor monitor) {if (monitor == null) {monitor = NullProgressMonitor.INSTANCE;}this.monitor = monitor;return this;},public RebaseCommand setProgressMonitorProgressMonitor monitor if monitor  null monitor  NullProgressMonitorINSTANCEthismonitor  monitorreturn this
public UnknownSubRecord clone() {return copy();},public UnknownSubRecord clone return copy
"public Query getQuery(Element e) throws ParserException {String fieldName = DOMUtils.getAttributeWithInheritanceOrFail(e, ""fieldName"");String text = DOMUtils.getNonBlankTextOrFail(e);BooleanQuery.Builder bq = new BooleanQuery.Builder();bq.setMinimumNumberShouldMatch(DOMUtils.getAttribute(e, ""minimumNumberShouldMatch"", 0));try (TokenStream ts = analyzer.tokenStream(fieldName, text)) {TermToBytesRefAttribute termAtt = ts.addAttribute(TermToBytesRefAttribute.class);Term term = null;ts.reset();while (ts.incrementToken()) {term = new Term(fieldName, BytesRef.deepCopyOf(termAtt.getBytesRef()));bq.add(new BooleanClause(new TermQuery(term), BooleanClause.Occur.SHOULD));}ts.end();}catch (IOException ioe) {throw new RuntimeException(""Error constructing terms from index:"" + ioe);}Query q = bq.build();float boost = DOMUtils.getAttribute(e, ""boost"", 1.0f);return new BoostQuery(q, boost);}",public Query getQueryElement e throws ParserException String fieldName  DOMUtilsgetAttributeWithInheritanceOrFaile fieldNameString text  DOMUtilsgetNonBlankTextOrFaileBooleanQueryBuilder bq  new BooleanQueryBuilderbqsetMinimumNumberShouldMatchDOMUtilsgetAttributee minimumNumberShouldMatch 0try TokenStream ts  analyzertokenStreamfieldName text TermToBytesRefAttribute termAtt  tsaddAttributeTermToBytesRefAttributeclassTerm term  nulltsresetwhile tsincrementToken term  new TermfieldName BytesRefdeepCopyOftermAttgetBytesRefbqaddnew BooleanClausenew TermQueryterm BooleanClauseOccurSHOULDtsendcatch IOException ioe throw new RuntimeExceptionError constructing terms from index  ioeQuery q  bqbuildfloat boost  DOMUtilsgetAttributee boost 10freturn new BoostQueryq boost
public UpdateMailboxQuotaResult updateMailboxQuota(UpdateMailboxQuotaRequest request) {request = beforeClientExecution(request);return executeUpdateMailboxQuota(request);},public UpdateMailboxQuotaResult updateMailboxQuotaUpdateMailboxQuotaRequest request request  beforeClientExecutionrequestreturn executeUpdateMailboxQuotarequest
"public String toString(){StringBuilder buffer = new StringBuilder(40 * (path.length() + 1));for (int j = 0; j < path.length(); j++){buffer.append(path.getComponent(j)).append(""/"");}buffer.append(name);return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilder40  pathlength  1for int j  0 j  pathlength jbufferappendpathgetComponentjappendbufferappendnamereturn buffertoString
public void removeApplicationName() {remove1stProperty(PropertyIDMap.PID_APPNAME);},public void removeApplicationName remove1stPropertyPropertyIDMapPIDAPPNAME
"public String toString(){StringBuilder sb = new StringBuilder();sb.append(getClass().getName());sb.append("" ["");if (externalWorkbookNumber >= 0) {sb.append("" ["");sb.append(""workbook="").append(getExternalWorkbookNumber());sb.append(""] "");}sb.append(""sheet="").append(getSheetName());sb.append("" ! "");sb.append(""name="");sb.append(nameName);sb.append(""]"");return sb.toString();}",public String toStringStringBuilder sb  new StringBuildersbappendgetClassgetNamesbappend if externalWorkbookNumber  0 sbappend sbappendworkbookappendgetExternalWorkbookNumbersbappend sbappendsheetappendgetSheetNamesbappend  sbappendnamesbappendnameNamesbappendreturn sbtoString
public GetRecommenderConfigurationResult getRecommenderConfiguration(GetRecommenderConfigurationRequest request) {request = beforeClientExecution(request);return executeGetRecommenderConfiguration(request);},public GetRecommenderConfigurationResult getRecommenderConfigurationGetRecommenderConfigurationRequest request request  beforeClientExecutionrequestreturn executeGetRecommenderConfigurationrequest
public int previous() {if (text.getIndex() == text.getBeginIndex()) {return DONE;} else {if (0 == sentenceStarts.length) {text.setIndex(text.getBeginIndex());return DONE;}if (text.getIndex() == text.getEndIndex()) {text.setIndex(sentenceStarts[currentSentence]);} else {text.setIndex(sentenceStarts[--currentSentence]);}return current();}},public int previous if textgetIndex  textgetBeginIndex return DONE else if 0  sentenceStartslength textsetIndextextgetBeginIndexreturn DONEif textgetIndex  textgetEndIndex textsetIndexsentenceStartscurrentSentence else textsetIndexsentenceStartscurrentSentencereturn current
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[STARTOBJECT]\n"");buffer.append(""    .rt              ="").append(HexDump.shortToHex(rt)).append('\n');buffer.append(""    .grbitFrt        ="").append(HexDump.shortToHex(grbitFrt)).append('\n');buffer.append(""    .iObjectKind     ="").append(HexDump.shortToHex(iObjectKind)).append('\n');buffer.append(""    .iObjectContext  ="").append(HexDump.shortToHex(iObjectContext)).append('\n');buffer.append(""    .iObjectInstance1="").append(HexDump.shortToHex(iObjectInstance1)).append('\n');buffer.append(""    .iObjectInstance2="").append(HexDump.shortToHex(iObjectInstance2)).append('\n');buffer.append(""[/STARTOBJECT]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendSTARTOBJECTnbufferappend    rt              appendHexDumpshortToHexrtappendnbufferappend    grbitFrt        appendHexDumpshortToHexgrbitFrtappendnbufferappend    iObjectKind     appendHexDumpshortToHexiObjectKindappendnbufferappend    iObjectContext  appendHexDumpshortToHexiObjectContextappendnbufferappend    iObjectInstance1appendHexDumpshortToHexiObjectInstance1appendnbufferappend    iObjectInstance2appendHexDumpshortToHexiObjectInstance2appendnbufferappendSTARTOBJECTnreturn buffertoString
public static double average(double[] values) {double ave = 0;double sum = 0;for (double value : values) {sum += value;}ave = sum / values.length;return ave;},public static double averagedouble values double ave  0double sum  0for double value  values sum  valueave  sum  valueslengthreturn ave
public GetCheckerIpRangesResult getCheckerIpRanges(GetCheckerIpRangesRequest request) {request = beforeClientExecution(request);return executeGetCheckerIpRanges(request);},public GetCheckerIpRangesResult getCheckerIpRangesGetCheckerIpRangesRequest request request  beforeClientExecutionrequestreturn executeGetCheckerIpRangesrequest
public int getRegionLength() {return outRegion.length;},public int getRegionLength return outRegionlength
"@Override public Iterator<Multiset.Entry<E>> iterator() {final Iterator<Map.Entry<E, Integer>> backingIterator= countMap.entrySet().iterator();return new Iterator<Multiset.Entry<E>>();}",Override public IteratorMultisetEntryE iterator final IteratorMapEntryE Integer backingIterator countMapentrySetiteratorreturn new IteratorMultisetEntryE
"public WeightedSpanTerm(float weight, String term, boolean positionSensitive) {super(weight, term);this.positionSensitive = positionSensitive;}",public WeightedSpanTermfloat weight String term boolean positionSensitive superweight termthispositionSensitive  positionSensitive
public synchronized StringBuffer append(char[] chars) {append0(chars);return this;},public synchronized StringBuffer appendchar chars append0charsreturn this
"public UploadServerCertificateRequest(String serverCertificateName, String certificateBody, String privateKey) {setServerCertificateName(serverCertificateName);setCertificateBody(certificateBody);setPrivateKey(privateKey);}",public UploadServerCertificateRequestString serverCertificateName String certificateBody String privateKey setServerCertificateNameserverCertificateNamesetCertificateBodycertificateBodysetPrivateKeyprivateKey
"public List<String> getRuleInvocationStack(RuleContext p) {String[] ruleNames = getRuleNames();List<String> stack = new ArrayList<String>();while ( p!=null ) {int ruleIndex = p.getRuleIndex();if ( ruleIndex<0 ) stack.add(""n/a"");else stack.add(ruleNames[ruleIndex]);p = p.parent;}return stack;}",public ListString getRuleInvocationStackRuleContext p String ruleNames  getRuleNamesListString stack  new ArrayListStringwhile  pnull  int ruleIndex  pgetRuleIndexif  ruleIndex0  stackaddnaelse stackaddruleNamesruleIndexp  pparentreturn stack
"static public double ipmt(double r, int per, int nper, double pv, double fv) {return ipmt(r, per, nper, pv, fv, 0);}",static public double ipmtdouble r int per int nper double pv double fv return ipmtr per nper pv fv 0
public int countRanges() {return _list.size();},public int countRanges return listsize
public int compareTo(FormatRun r) {if (_character == r._character && _fontIndex == r._fontIndex) {return 0;}if (_character == r._character) {return _fontIndex - r._fontIndex;}return _character - r._character;},public int compareToFormatRun r if character  rcharacter  fontIndex  rfontIndex return 0if character  rcharacter return fontIndex  rfontIndexreturn character  rcharacter
"public final void readFully(byte[] dst) throws IOException {readFully(dst, 0, dst.length);}",public final void readFullybyte dst throws IOException readFullydst 0 dstlength
public synchronized int size() {return size;},public synchronized int size return size
public String group() {return group(0);},public String group return group0
"public int getExternalSheetIndex(String workbookName, String firstSheetName, String lastSheetName) {return getOrCreateLinkTable().getExternalSheetIndex(workbookName, firstSheetName, lastSheetName);}",public int getExternalSheetIndexString workbookName String firstSheetName String lastSheetName return getOrCreateLinkTablegetExternalSheetIndexworkbookName firstSheetName lastSheetName
public GetDeliverabilityTestReportResult getDeliverabilityTestReport(GetDeliverabilityTestReportRequest request) {request = beforeClientExecution(request);return executeGetDeliverabilityTestReport(request);},public GetDeliverabilityTestReportResult getDeliverabilityTestReportGetDeliverabilityTestReportRequest request request  beforeClientExecutionrequestreturn executeGetDeliverabilityTestReportrequest
public boolean isPeeled() {return getLeaf().isPeeled();},public boolean isPeeled return getLeafisPeeled
public RenameCallback getRenameCallback() {return renameCallback;},public RenameCallback getRenameCallback return renameCallback
"public String toString() {return ""EditList"" + super.toString(); }",public String toString return EditList  supertoString 
public PutVoiceConnectorTerminationCredentialsResult putVoiceConnectorTerminationCredentials(PutVoiceConnectorTerminationCredentialsRequest request) {request = beforeClientExecution(request);return executePutVoiceConnectorTerminationCredentials(request);},public PutVoiceConnectorTerminationCredentialsResult putVoiceConnectorTerminationCredentialsPutVoiceConnectorTerminationCredentialsRequest request request  beforeClientExecutionrequestreturn executePutVoiceConnectorTerminationCredentialsrequest
public CreateGroupResult createGroup(CreateGroupRequest request) {request = beforeClientExecution(request);return executeCreateGroup(request);},public CreateGroupResult createGroupCreateGroupRequest request request  beforeClientExecutionrequestreturn executeCreateGrouprequest
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_units);},public void serializeLittleEndianOutput out outwriteShortfield1units
"public ObjectLoader open(AnyObjectId objectId, int typeHint)throws MissingObjectException, IncorrectObjectTypeException,IOException {final ObjectLoader ldr = db.openObject(this, objectId);if (ldr == null) {if (typeHint == OBJ_ANY)throw new MissingObjectException(objectId.copy(),JGitText.get().unknownObjectType2);throw new MissingObjectException(objectId.copy(), typeHint);}if (typeHint != OBJ_ANY && ldr.getType() != typeHint)throw new IncorrectObjectTypeException(objectId.copy(), typeHint);return ldr;}",public ObjectLoader openAnyObjectId objectId int typeHintthrows MissingObjectException IncorrectObjectTypeExceptionIOException final ObjectLoader ldr  dbopenObjectthis objectIdif ldr  null if typeHint  OBJANYthrow new MissingObjectExceptionobjectIdcopyJGitTextgetunknownObjectType2throw new MissingObjectExceptionobjectIdcopy typeHintif typeHint  OBJANY  ldrgetType  typeHintthrow new IncorrectObjectTypeExceptionobjectIdcopy typeHintreturn ldr
"public ParameterNameValue(String parameterName, String parameterValue) {setParameterName(parameterName);setParameterValue(parameterValue);}",public ParameterNameValueString parameterName String parameterValue setParameterNameparameterNamesetParameterValueparameterValue
public AssociateIamInstanceProfileResult associateIamInstanceProfile(AssociateIamInstanceProfileRequest request) {request = beforeClientExecution(request);return executeAssociateIamInstanceProfile(request);},public AssociateIamInstanceProfileResult associateIamInstanceProfileAssociateIamInstanceProfileRequest request request  beforeClientExecutionrequestreturn executeAssociateIamInstanceProfilerequest
"public CreateHostedZoneRequest(String name, String callerReference) {setName(name);setCallerReference(callerReference);}",public CreateHostedZoneRequestString name String callerReference setNamenamesetCallerReferencecallerReference
"public String getPronunciation() {return dictionary.getPronunciation(wordId, surfaceForm, offset, length);}",public String getPronunciation return dictionarygetPronunciationwordId surfaceForm offset length
public boolean knows(String key) {return (find(key) >= 0);},public boolean knowsString key return findkey  0
"public ServerException(String errorCode, String errorMessage) {super(errorCode, errorMessage);this.setErrorType(ErrorType.Server);}",public ServerExceptionString errorCode String errorMessage supererrorCode errorMessagethissetErrorTypeErrorTypeServer
"public String toString() {return ""3("" + mu + "")"";}",public String toString return 3  mu  
public CreateDiskResult createDisk(CreateDiskRequest request) {request = beforeClientExecution(request);return executeCreateDisk(request);},public CreateDiskResult createDiskCreateDiskRequest request request  beforeClientExecutionrequestreturn executeCreateDiskrequest
"public boolean add(char[] text) {return map.put(text, PLACEHOLDER) == null;}",public boolean addchar text return mapputtext PLACEHOLDER  null
"public QueryLicensesRequest() {super(""LinkFace"", ""2018-07-20"", ""QueryLicenses"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public QueryLicensesRequest superLinkFace 20180720 QueryLicensessetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public ExpectedAttributeValue(AttributeValue value) {setValue(value);},public ExpectedAttributeValueAttributeValue value setValuevalue
public long getSize() {return getCachedBytes().length;},public long getSize return getCachedByteslength
"public DescribeImageAttributeRequest(String imageId, ImageAttributeName attribute) {setImageId(imageId);setAttribute(attribute.toString());}",public DescribeImageAttributeRequestString imageId ImageAttributeName attribute setImageIdimageIdsetAttributeattributetoString
public HSSFAnchor() {createEscherAnchor();},public HSSFAnchor createEscherAnchor
public V setValue(V object) {V result = value;value = object;return result;},public V setValueV object V result  valuevalue  objectreturn result
"public void readFully(byte[] buffer, int off, int len) {checkPosition(len);read(buffer, off, len);}",public void readFullybyte buffer int off int len checkPositionlenreadbuffer off len
public CancelDomainTransferToAnotherAwsAccountResult cancelDomainTransferToAnotherAwsAccount(CancelDomainTransferToAnotherAwsAccountRequest request) {request = beforeClientExecution(request);return executeCancelDomainTransferToAnotherAwsAccount(request);},public CancelDomainTransferToAnotherAwsAccountResult cancelDomainTransferToAnotherAwsAccountCancelDomainTransferToAnotherAwsAccountRequest request request  beforeClientExecutionrequestreturn executeCancelDomainTransferToAnotherAwsAccountrequest
public RecognizeCelebritiesResult recognizeCelebrities(RecognizeCelebritiesRequest request) {request = beforeClientExecution(request);return executeRecognizeCelebrities(request);},public RecognizeCelebritiesResult recognizeCelebritiesRecognizeCelebritiesRequest request request  beforeClientExecutionrequestreturn executeRecognizeCelebritiesrequest
"public SideBandOutputStream(int chan, int sz, OutputStream os) {if (chan <= 0 || chan > 255)throw new IllegalArgumentException(MessageFormat.format(JGitText.get().channelMustBeInRange1_255,Integer.valueOf(chan)));if (sz <= HDR_SIZE)throw new IllegalArgumentException(MessageFormat.format(JGitText.get().packetSizeMustBeAtLeast,Integer.valueOf(sz), Integer.valueOf(HDR_SIZE)));else if (MAX_BUF < sz)throw new IllegalArgumentException(MessageFormat.format(JGitText.get().packetSizeMustBeAtMost, Integer.valueOf(sz),Integer.valueOf(MAX_BUF)));out = os;buffer = new byte[sz];buffer[4] = (byte) chan;cnt = HDR_SIZE;}",public SideBandOutputStreamint chan int sz OutputStream os if chan  0  chan  255throw new IllegalArgumentExceptionMessageFormatformatJGitTextgetchannelMustBeInRange1255IntegervalueOfchanif sz  HDRSIZEthrow new IllegalArgumentExceptionMessageFormatformatJGitTextgetpacketSizeMustBeAtLeastIntegervalueOfsz IntegervalueOfHDRSIZEelse if MAXBUF  szthrow new IllegalArgumentExceptionMessageFormatformatJGitTextgetpacketSizeMustBeAtMost IntegervalueOfszIntegervalueOfMAXBUFout  osbuffer  new byteszbuffer4  byte chancnt  HDRSIZE
"public LexerATNConfig(ATNState state,int alt,PredictionContext context,LexerActionExecutor lexerActionExecutor){super(state, alt, context, SemanticContext.NONE);this.lexerActionExecutor = lexerActionExecutor;this.passedThroughNonGreedyDecision = false;}",public LexerATNConfigATNState stateint altPredictionContext contextLexerActionExecutor lexerActionExecutorsuperstate alt context SemanticContextNONEthislexerActionExecutor  lexerActionExecutorthispassedThroughNonGreedyDecision  false
"public String format(List<RevCommit> squashedCommits, Ref target) {StringBuilder sb = new StringBuilder();sb.append(""Squashed commit of the following:\n""); for (RevCommit c : squashedCommits) {sb.append(""\ncommit ""); sb.append(c.getName());sb.append(""\n""); sb.append(toString(c.getAuthorIdent()));sb.append(""\n\t""); sb.append(c.getShortMessage());sb.append(""\n""); }return sb.toString();}",public String formatListRevCommit squashedCommits Ref target StringBuilder sb  new StringBuildersbappendSquashed commit of the followingn for RevCommit c  squashedCommits sbappendncommit  sbappendcgetNamesbappendn sbappendtoStringcgetAuthorIdentsbappendnt sbappendcgetShortMessagesbappendn return sbtoString
"public int stem(char s[], int len) {if (len < 3 || s[len-1] != 's')return len;switch(s[len-2]) {case 'u':case 's': return len;case 'e':if (len > 3 && s[len-3] == 'i' && s[len-4] != 'a' && s[len-4] != 'e') {s[len - 3] = 'y';return len - 2;}if (s[len-3] == 'i' || s[len-3] == 'a' || s[len-3] == 'o' || s[len-3] == 'e')return len; default: return len - 1;}}",public int stemchar s int len if len  3  slen1  sreturn lenswitchslen2 case ucase s return lencase eif len  3  slen3  i  slen4  a  slen4  e slen  3  yreturn len  2if slen3  i  slen3  a  slen3  o  slen3  ereturn len default return len  1
public TermsQueryBuilder(Analyzer analyzer) {this.analyzer = analyzer;},public TermsQueryBuilderAnalyzer analyzer thisanalyzer  analyzer
public CreateDomainRequest(String domainName) {setDomainName(domainName);},public CreateDomainRequestString domainName setDomainNamedomainName
"public Trie optimize(Trie orig) {List<CharSequence> cmds = orig.cmds;List<Row> rows = new ArrayList<>();List<Row> orows = orig.rows;int remap[] = new int[orows.size()];for (int j = orows.size() - 1; j >= 0; j--) {Row now = new Remap(orows.get(j), remap);boolean merged = false;for (int i = 0; i < rows.size(); i++) {Row q = merge(now, rows.get(i));if (q != null) {rows.set(i, q);merged = true;remap[j] = i;break;}}if (merged == false) {remap[j] = rows.size();rows.add(now);}}int root = remap[orig.root];Arrays.fill(remap, -1);rows = removeGaps(root, rows, new ArrayList<Row>(), remap);return new Trie(orig.forward, remap[root], cmds, rows);}",public Trie optimizeTrie orig ListCharSequence cmds  origcmdsListRow rows  new ArrayListListRow orows  origrowsint remap  new intorowssizefor int j  orowssize  1 j  0 j Row now  new Remaporowsgetj remapboolean merged  falsefor int i  0 i  rowssize i Row q  mergenow rowsgetiif q  null rowsseti qmerged  trueremapj  ibreakif merged  false remapj  rowssizerowsaddnowint root  remaporigrootArraysfillremap 1rows  removeGapsroot rows new ArrayListRow remapreturn new Trieorigforward remaproot cmds rows
"public final boolean isFirstCell(int rowIx, int colIx) {CellRangeAddress8Bit r = getRange();return r.getFirstRow() == rowIx && r.getFirstColumn() == colIx;}",public final boolean isFirstCellint rowIx int colIx CellRangeAddress8Bit r  getRangereturn rgetFirstRow  rowIx  rgetFirstColumn  colIx
public CompleteLayerUploadResult completeLayerUpload(CompleteLayerUploadRequest request) {request = beforeClientExecution(request);return executeCompleteLayerUpload(request);},public CompleteLayerUploadResult completeLayerUploadCompleteLayerUploadRequest request request  beforeClientExecutionrequestreturn executeCompleteLayerUploadrequest
public StopHumanLoopResult stopHumanLoop(StopHumanLoopRequest request) {request = beforeClientExecution(request);return executeStopHumanLoop(request);},public StopHumanLoopResult stopHumanLoopStopHumanLoopRequest request request  beforeClientExecutionrequestreturn executeStopHumanLooprequest
public RevCommit getSourceCommit() {return outCandidate.sourceCommit;},public RevCommit getSourceCommit return outCandidatesourceCommit
public synchronized Object getPerfObject(String key) {return perfObjects.get(key);},public synchronized Object getPerfObjectString key return perfObjectsgetkey
public TokenStream create(TokenStream input) {return new HindiStemFilter(input);},public TokenStream createTokenStream input return new HindiStemFilterinput
public static BreakIterator getWordInstance() {return getWordInstance(Locale.getDefault());},public static BreakIterator getWordInstance return getWordInstanceLocalegetDefault
public UpdatePublicKeyResult updatePublicKey(UpdatePublicKeyRequest request) {request = beforeClientExecution(request);return executeUpdatePublicKey(request);},public UpdatePublicKeyResult updatePublicKeyUpdatePublicKeyRequest request request  beforeClientExecutionrequestreturn executeUpdatePublicKeyrequest
"public boolean include(RevWalk walker, RevCommit c) {return c.getParentCount() < 2;}",public boolean includeRevWalk walker RevCommit c return cgetParentCount  2
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[COUNTRY]\n"");buffer.append(""    .defaultcountry  = "").append(Integer.toHexString(getDefaultCountry())).append(""\n"");buffer.append(""    .currentcountry  = "").append(Integer.toHexString(getCurrentCountry())).append(""\n"");buffer.append(""[/COUNTRY]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendCOUNTRYnbufferappend    defaultcountry   appendIntegertoHexStringgetDefaultCountryappendnbufferappend    currentcountry   appendIntegertoHexStringgetCurrentCountryappendnbufferappendCOUNTRYnreturn buffertoString
public DefaultColWidthRecord clone() {return copy();},public DefaultColWidthRecord clone return copy
"public Matcher useAnchoringBounds(boolean value) {anchoringBounds = value;useAnchoringBoundsImpl(address, value);return this;}",public Matcher useAnchoringBoundsboolean value anchoringBounds  valueuseAnchoringBoundsImpladdress valuereturn this
public PostingsEnum reset(int[] postings) {this.postings = postings;upto = -2;return this;},public PostingsEnum resetint postings thispostings  postingsupto  2return this
"public void SwitchTo(int lexState){if (lexState >= 2 || lexState < 0)throw new TokenMgrError(""Error: Ignoring invalid lexical state : "" + lexState + "". State unchanged."", TokenMgrError.INVALID_LEXICAL_STATE);elsecurLexState = lexState;}",public void SwitchToint lexStateif lexState  2  lexState  0throw new TokenMgrErrorError Ignoring invalid lexical state    lexState   State unchanged TokenMgrErrorINVALIDLEXICALSTATEelsecurLexState  lexState
public boolean add(final int value){if (_limit == _array.length){growArray(_limit * 2);}_array[ _limit++ ] = value;return true;},public boolean addfinal int valueif limit  arraylengthgrowArraylimit  2array limit   valuereturn true
"public final int computeIterations(int valueCount, int ramBudget) {final int iterations = ramBudget / (byteBlockCount() + 8 * byteValueCount());if (iterations == 0) {return 1;} else if ((iterations - 1) * byteValueCount() >= valueCount) {return (int) Math.ceil((double) valueCount / byteValueCount());} else {return iterations;}}",public final int computeIterationsint valueCount int ramBudget final int iterations  ramBudget  byteBlockCount  8  byteValueCountif iterations  0 return 1 else if iterations  1  byteValueCount  valueCount return int Mathceildouble valueCount  byteValueCount else return iterations
public NameRecord getNameRecord(int nameIndex) {return getWorkbook().getNameRecord(nameIndex);},public NameRecord getNameRecordint nameIndex return getWorkbookgetNameRecordnameIndex
public DescribeJobResult describeJob(DescribeJobRequest request) {request = beforeClientExecution(request);return executeDescribeJob(request);},public DescribeJobResult describeJobDescribeJobRequest request request  beforeClientExecutionrequestreturn executeDescribeJobrequest
"public EscherPropertyMetaData( String description, byte type ){this.description = description;this.type = type;}",public EscherPropertyMetaData String description byte type thisdescription  descriptionthistype  type
"public HSSFColor findSimilarColor(int red, int green, int blue) {HSSFColor result = null;int minColorDistance = Integer.MAX_VALUE;byte[] b = _palette.getColor(PaletteRecord.FIRST_COLOR_INDEX);for (short i = PaletteRecord.FIRST_COLOR_INDEX; b != null;b = _palette.getColor(++i)){int colorDistance = Math.abs(red - unsignedInt(b[0])) +Math.abs(green - unsignedInt(b[1])) +Math.abs(blue - unsignedInt(b[2]));if (colorDistance < minColorDistance){minColorDistance = colorDistance;result = getColor(i);}}return result;}",public HSSFColor findSimilarColorint red int green int blue HSSFColor result  nullint minColorDistance  IntegerMAXVALUEbyte b  palettegetColorPaletteRecordFIRSTCOLORINDEXfor short i  PaletteRecordFIRSTCOLORINDEX b  nullb  palettegetColoriint colorDistance  Mathabsred  unsignedIntb0 Mathabsgreen  unsignedIntb1 Mathabsblue  unsignedIntb2if colorDistance  minColorDistanceminColorDistance  colorDistanceresult  getColorireturn result
public synchronized StringBuffer deleteCharAt(int location) {deleteCharAt0(location);return this;},public synchronized StringBuffer deleteCharAtint location deleteCharAt0locationreturn this
public PathFilter clone() {return this;},public PathFilter clone return this
"public String toString() {if (isEmpty()) {return ""[]"";}StringBuilder buffer = new StringBuilder(size() * 16);buffer.append('[');Iterator<?> it = iterator();while (it.hasNext()) {Object next = it.next();if (next != this) {buffer.append(next);} else {buffer.append(""(this Collection)"");}if (it.hasNext()) {buffer.append("", "");}}buffer.append(']');return buffer.toString();}",public String toString if isEmpty return StringBuilder buffer  new StringBuildersize  16bufferappendIterator it  iteratorwhile ithasNext Object next  itnextif next  this bufferappendnext else bufferappendthis Collectionif ithasNext bufferappend bufferappendreturn buffertoString
public synchronized void close() throws IOException {buffer = null;notifyAll();},public synchronized void close throws IOException buffer  nullnotifyAll
"public String toString() {return ""ShardIter(shard="" + shardIndex + "")"";}",public String toString return ShardItershard  shardIndex  
"public JobParameters(String format, String type, String archiveId, String description) {setFormat(format);setType(type);setArchiveId(archiveId);setDescription(description);}",public JobParametersString format String type String archiveId String description setFormatformatsetTypetypesetArchiveIdarchiveIdsetDescriptiondescription
"public IntBuffer get(int[] dst) {return get(dst, 0, dst.length);}",public IntBuffer getint dst return getdst 0 dstlength
"public SupBookRecord(String url, String[] sheetNames) {field_1_number_of_sheets = (short) sheetNames.length;field_2_encoded_url = url;field_3_sheet_names = sheetNames;_isAddInFunctions = false;}",public SupBookRecordString url String sheetNames field1numberofsheets  short sheetNameslengthfield2encodedurl  urlfield3sheetnames  sheetNamesisAddInFunctions  false
public SeriesLabelsRecord(RecordInputStream in) {field_1_formatFlags = in.readShort();},public SeriesLabelsRecordRecordInputStream in field1formatFlags  inreadShort
public DescribeAssessmentRunsResult describeAssessmentRuns(DescribeAssessmentRunsRequest request) {request = beforeClientExecution(request);return executeDescribeAssessmentRuns(request);},public DescribeAssessmentRunsResult describeAssessmentRunsDescribeAssessmentRunsRequest request request  beforeClientExecutionrequestreturn executeDescribeAssessmentRunsrequest
public DescribeClassicLinkInstancesResult describeClassicLinkInstances(DescribeClassicLinkInstancesRequest request) {request = beforeClientExecution(request);return executeDescribeClassicLinkInstances(request);},public DescribeClassicLinkInstancesResult describeClassicLinkInstancesDescribeClassicLinkInstancesRequest request request  beforeClientExecutionrequestreturn executeDescribeClassicLinkInstancesrequest
public byte[] getByteBlock() {return new byte[blockSize];},public byte getByteBlock return new byteblockSize
public SeriesIndexRecord clone() {return copy();},public SeriesIndexRecord clone return copy
public RegisterToWorkMailResult registerToWorkMail(RegisterToWorkMailRequest request) {request = beforeClientExecution(request);return executeRegisterToWorkMail(request);},public RegisterToWorkMailResult registerToWorkMailRegisterToWorkMailRequest request request  beforeClientExecutionrequestreturn executeRegisterToWorkMailrequest
"public DeleteCollectionRequest() {super(""cr"", ""2016-06-07"", ""DeleteCollection"", ""cr"");setUriPattern(""/collections/[CollectionId]"");setMethod(MethodType.DELETE);}",public DeleteCollectionRequest supercr 20160607 DeleteCollection crsetUriPatterncollectionsCollectionIdsetMethodMethodTypeDELETE
public Cluster deleteCluster(DeleteClusterRequest request) {request = beforeClientExecution(request);return executeDeleteCluster(request);},public Cluster deleteClusterDeleteClusterRequest request request  beforeClientExecutionrequestreturn executeDeleteClusterrequest
"public static double tanh(double d) {double ePowX = Math.pow(Math.E, d);double ePowNegX = Math.pow(Math.E, -d);return (ePowX - ePowNegX) / (ePowX + ePowNegX);}",public static double tanhdouble d double ePowX  MathpowMathE ddouble ePowNegX  MathpowMathE dreturn ePowX  ePowNegX  ePowX  ePowNegX
"public CharsRef common(CharsRef output1, CharsRef output2) {assert output1 != null;assert output2 != null;int pos1 = output1.offset;int pos2 = output2.offset;int stopAt1 = pos1 + Math.min(output1.length, output2.length);while(pos1 < stopAt1) {if (output1.chars[pos1] != output2.chars[pos2]) {break;}pos1++;pos2++;}if (pos1 == output1.offset) {return NO_OUTPUT;} else if (pos1 == output1.offset + output1.length) {return output1;} else if (pos2 == output2.offset + output2.length) {return output2;} else {return new CharsRef(output1.chars, output1.offset, pos1-output1.offset);}}",public CharsRef commonCharsRef output1 CharsRef output2 assert output1  nullassert output2  nullint pos1  output1offsetint pos2  output2offsetint stopAt1  pos1  Mathminoutput1length output2lengthwhilepos1  stopAt1 if output1charspos1  output2charspos2 breakpos1pos2if pos1  output1offset return NOOUTPUT else if pos1  output1offset  output1length return output1 else if pos2  output2offset  output2length return output2 else return new CharsRefoutput1chars output1offset pos1output1offset
public GetExclusionsPreviewResult getExclusionsPreview(GetExclusionsPreviewRequest request) {request = beforeClientExecution(request);return executeGetExclusionsPreview(request);},public GetExclusionsPreviewResult getExclusionsPreviewGetExclusionsPreviewRequest request request  beforeClientExecutionrequestreturn executeGetExclusionsPreviewrequest
"public KeepWordFilterFactory(Map<String,String> args) {super(args);wordFiles = get(args, ""words"");ignoreCase = getBoolean(args, ""ignoreCase"", false);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public KeepWordFilterFactoryMapStringString args superargswordFiles  getargs wordsignoreCase  getBooleanargs ignoreCase falseif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public int uniformCmd(boolean eqSkip) {Iterator<Cell> i = cells.values().iterator();int ret = -1;uniformCnt = 1;uniformSkip = 0;for (; i.hasNext();) {Cell c = i.next();if (c.ref >= 0) {return -1;}if (c.cmd >= 0) {if (ret < 0) {ret = c.cmd;uniformSkip = c.skip;} else if (ret == c.cmd) {if (eqSkip) {if (uniformSkip == c.skip) {uniformCnt++;} else {return -1;}} else {uniformCnt++;}} else {return -1;}}}return ret;},public int uniformCmdboolean eqSkip IteratorCell i  cellsvaluesiteratorint ret  1uniformCnt  1uniformSkip  0for  ihasNext Cell c  inextif cref  0 return 1if ccmd  0 if ret  0 ret  ccmduniformSkip  cskip else if ret  ccmd if eqSkip if uniformSkip  cskip uniformCnt else return 1 else uniformCnt else return 1return ret
public ListTypedLinkFacetNamesResult listTypedLinkFacetNames(ListTypedLinkFacetNamesRequest request) {request = beforeClientExecution(request);return executeListTypedLinkFacetNames(request);},public ListTypedLinkFacetNamesResult listTypedLinkFacetNamesListTypedLinkFacetNamesRequest request request  beforeClientExecutionrequestreturn executeListTypedLinkFacetNamesrequest
"public T remove(int index) {if (index == size - 1) {T[] blockRef = directory[toDirectoryIndex(index)];int blockIdx = toBlockIndex(index);T old = blockRef[blockIdx];blockRef[blockIdx] = null;size--;if (0 < tailBlkIdx)tailBlkIdx--;elseresetTailBlock();return old;} else if (index < 0 || size <= index) {throw new IndexOutOfBoundsException(String.valueOf(index));} else {T old = get(index);for (; index < size - 1; index++)set(index, get(index + 1));set(size - 1, null);size--;resetTailBlock();return old;}}",public T removeint index if index  size  1 T blockRef  directorytoDirectoryIndexindexint blockIdx  toBlockIndexindexT old  blockRefblockIdxblockRefblockIdx  nullsizeif 0  tailBlkIdxtailBlkIdxelseresetTailBlockreturn old else if index  0  size  index throw new IndexOutOfBoundsExceptionStringvalueOfindex else T old  getindexfor  index  size  1 indexsetindex getindex  1setsize  1 nullsizeresetTailBlockreturn old
public boolean willSoonExpire() {long now = System.currentTimeMillis();return this.roleSessionDurationSeconds * (1 - expireFact) > (expiration - now) / 1000;},public boolean willSoonExpire long now  SystemcurrentTimeMillisreturn thisroleSessionDurationSeconds  1  expireFact  expiration  now  1000
public GroupingSearch setSortWithinGroup(Sort sortWithinGroup) {this.sortWithinGroup = sortWithinGroup;return this;},public GroupingSearch setSortWithinGroupSort sortWithinGroup thissortWithinGroup  sortWithinGroupreturn this
public long ramBytesUsed() {return BASE_RAM_BYTES_USED +((postings!=null) ? RamUsageEstimator.sizeOf(postings) : 0) +((payloads!=null) ? RamUsageEstimator.sizeOf(payloads) : 0);},public long ramBytesUsed return BASERAMBYTESUSED postingsnull  RamUsageEstimatorsizeOfpostings  0 payloadsnull  RamUsageEstimatorsizeOfpayloads  0
"public void seek(long pos) throws IOException {final long curFP = getFilePointer();final long skip = pos - curFP;if (skip < 0) {throw new IllegalStateException(getClass() + "" cannot seek backwards (pos="" + pos + "" getFilePointer()="" + curFP + "")"");}skipBytes(skip);}",public void seeklong pos throws IOException final long curFP  getFilePointerfinal long skip  pos  curFPif skip  0 throw new IllegalStateExceptiongetClass   cannot seek backwards pos  pos   getFilePointer  curFP  skipBytesskip
"public ExternalName getExternalName(int externSheetIndex, int externNameIndex) {return _iBook.getExternalName(externSheetIndex, externNameIndex);}",public ExternalName getExternalNameint externSheetIndex int externNameIndex return iBookgetExternalNameexternSheetIndex externNameIndex
public StrDocValues(ValueSource vs) {this.vs = vs;},public StrDocValuesValueSource vs thisvs  vs
public int getFunctionIndex(String name) {return name.hashCode();},public int getFunctionIndexString name return namehashCode
public int hash2(char c) {int hash = 5381;hash = ((hash << 5) + hash) + c & 0x00FF;hash = ((hash << 5) + hash) + c >> 8;return hash;},public int hash2char c int hash  5381hash  hash  5  hash  c  0x00FFhash  hash  5  hash  c  8return hash
"public void create(String id, String title, String time, String body) throws IOException {Path d = directory(count++, null);Files.createDirectories(d);Path f = d.resolve(id + "".txt"");StringBuilder contents = new StringBuilder();contents.append(time);contents.append(""\n\n"");contents.append(title);contents.append(""\n\n"");contents.append(body);contents.append(""\n"");try (Writer writer = Files.newBufferedWriter(f, StandardCharsets.UTF_8)) {writer.write(contents.toString());}}",public void createString id String title String time String body throws IOException Path d  directorycount nullFilescreateDirectoriesdPath f  dresolveid  txtStringBuilder contents  new StringBuildercontentsappendtimecontentsappendnncontentsappendtitlecontentsappendnncontentsappendbodycontentsappendntry Writer writer  FilesnewBufferedWriterf StandardCharsetsUTF8 writerwritecontentstoString
"public CharArrayWriter append(CharSequence csq) {if (csq == null) {csq = ""null"";}append(csq, 0, csq.length());return this;}",public CharArrayWriter appendCharSequence csq if csq  null csq  nullappendcsq 0 csqlengthreturn this
public PutAccountDedicatedIpWarmupAttributesResult putAccountDedicatedIpWarmupAttributes(PutAccountDedicatedIpWarmupAttributesRequest request) {request = beforeClientExecution(request);return executePutAccountDedicatedIpWarmupAttributes(request);},public PutAccountDedicatedIpWarmupAttributesResult putAccountDedicatedIpWarmupAttributesPutAccountDedicatedIpWarmupAttributesRequest request request  beforeClientExecutionrequestreturn executePutAccountDedicatedIpWarmupAttributesrequest
"public static boolean equal(Object a, Object b) {return a == b || (a != null && a.equals(b));}",public static boolean equalObject a Object b return a  b  a  null  aequalsb
public RevFlag getUnshallowFlag() {return UNSHALLOW;},public RevFlag getUnshallowFlag return UNSHALLOW
public DescribeSolutionVersionResult describeSolutionVersion(DescribeSolutionVersionRequest request) {request = beforeClientExecution(request);return executeDescribeSolutionVersion(request);},public DescribeSolutionVersionResult describeSolutionVersionDescribeSolutionVersionRequest request request  beforeClientExecutionrequestreturn executeDescribeSolutionVersionrequest
public byte[] getBuffer() {return file.buf;},public byte getBuffer return filebuf
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[WRITEACCESS]\n"");buffer.append(""    .name = "").append(field_1_username).append(""\n"");buffer.append(""[/WRITEACCESS]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendWRITEACCESSnbufferappend    name  appendfield1usernameappendnbufferappendWRITEACCESSnreturn buffertoString
public ModifyFpgaImageAttributeResult modifyFpgaImageAttribute(ModifyFpgaImageAttributeRequest request) {request = beforeClientExecution(request);return executeModifyFpgaImageAttribute(request);},public ModifyFpgaImageAttributeResult modifyFpgaImageAttributeModifyFpgaImageAttributeRequest request request  beforeClientExecutionrequestreturn executeModifyFpgaImageAttributerequest
public SubmoduleUpdateCommand(Repository repo) {super(repo);paths = new ArrayList<>();},public SubmoduleUpdateCommandRepository repo superrepopaths  new ArrayList
public boolean isKnown() {return type == Type.KNOWN;},public boolean isKnown return type  TypeKNOWN
public long get(int index) {final int o = index / 10;final int b = index % 10;final int shift = b * 6;return (blocks[o] >>> shift) & 63L;},public long getint index final int o  index  10final int b  index  10final int shift  b  6return blockso  shift  63L
public void setValue(byte value) {setValue(FormulaError.forInt(value));},public void setValuebyte value setValueFormulaErrorforIntvalue
public int getCodePoint() {return c;},public int getCodePoint return c
public GetDocumentationVersionsResult getDocumentationVersions(GetDocumentationVersionsRequest request) {request = beforeClientExecution(request);return executeGetDocumentationVersions(request);},public GetDocumentationVersionsResult getDocumentationVersionsGetDocumentationVersionsRequest request request  beforeClientExecutionrequestreturn executeGetDocumentationVersionsrequest
"public int indexOfKey(int key) {if (mGarbage) {gc();}return binarySearch(mKeys, 0, mSize, key);}",public int indexOfKeyint key if mGarbage gcreturn binarySearchmKeys 0 mSize key
"public void reportError(Parser recognizer,RecognitionException e){if (inErrorRecoveryMode(recognizer)) {return; }beginErrorCondition(recognizer);if ( e instanceof NoViableAltException ) {reportNoViableAlternative(recognizer, (NoViableAltException) e);}else if ( e instanceof InputMismatchException ) {reportInputMismatch(recognizer, (InputMismatchException)e);}else if ( e instanceof FailedPredicateException ) {reportFailedPredicate(recognizer, (FailedPredicateException)e);}else {System.err.println(""unknown recognition error type: ""+e.getClass().getName());recognizer.notifyErrorListeners(e.getOffendingToken(), e.getMessage(), e);}}",public void reportErrorParser recognizerRecognitionException eif inErrorRecoveryModerecognizer return beginErrorConditionrecognizerif  e instanceof NoViableAltException  reportNoViableAlternativerecognizer NoViableAltException eelse if  e instanceof InputMismatchException  reportInputMismatchrecognizer InputMismatchExceptioneelse if  e instanceof FailedPredicateException  reportFailedPredicaterecognizer FailedPredicateExceptioneelse Systemerrprintlnunknown recognition error type egetClassgetNamerecognizernotifyErrorListenersegetOffendingToken egetMessage e
public ConstantStringFormat(String s) {str = s;},public ConstantStringFormatString s str  s
"public DoubleBuffer asReadOnlyBuffer() {return ReadOnlyDoubleArrayBuffer.copy(this, mark);}",public DoubleBuffer asReadOnlyBuffer return ReadOnlyDoubleArrayBuffercopythis mark
public CacheCluster deleteCacheCluster(DeleteCacheClusterRequest request) {request = beforeClientExecution(request);return executeDeleteCacheCluster(request);},public CacheCluster deleteCacheClusterDeleteCacheClusterRequest request request  beforeClientExecutionrequestreturn executeDeleteCacheClusterrequest
public ModifyClusterSnapshotScheduleResult modifyClusterSnapshotSchedule(ModifyClusterSnapshotScheduleRequest request) {request = beforeClientExecution(request);return executeModifyClusterSnapshotSchedule(request);},public ModifyClusterSnapshotScheduleResult modifyClusterSnapshotScheduleModifyClusterSnapshotScheduleRequest request request  beforeClientExecutionrequestreturn executeModifyClusterSnapshotSchedulerequest
"public InitCommand setBare(boolean bare) {validateDirs(directory, gitDir, bare);this.bare = bare;return this;}",public InitCommand setBareboolean bare validateDirsdirectory gitDir barethisbare  barereturn this
"public TermsEnumWithSlice(int index, ReaderSlice subSlice) {this.subSlice = subSlice;this.index = index;assert subSlice.length >= 0: ""length="" + subSlice.length;}",public TermsEnumWithSliceint index ReaderSlice subSlice thissubSlice  subSlicethisindex  indexassert subSlicelength  0 length  subSlicelength
public UserSViewEnd(byte[] data) {_rawData = data;},public UserSViewEndbyte data rawData  data
public SetIdentityPoolRolesResult setIdentityPoolRoles(SetIdentityPoolRolesRequest request) {request = beforeClientExecution(request);return executeSetIdentityPoolRoles(request);},public SetIdentityPoolRolesResult setIdentityPoolRolesSetIdentityPoolRolesRequest request request  beforeClientExecutionrequestreturn executeSetIdentityPoolRolesrequest
public Vector( short type ) {this._type = type;},public Vector short type  thistype  type
public GetEndpointResult getEndpoint(GetEndpointRequest request) {request = beforeClientExecution(request);return executeGetEndpoint(request);},public GetEndpointResult getEndpointGetEndpointRequest request request  beforeClientExecutionrequestreturn executeGetEndpointrequest
"public Builder add(int docId) {if (docId <= lastDocId) {throw new IllegalArgumentException(""Doc ids must be added in-order, got "" + docId + "" which is <= lastDocID="" + lastDocId);}final int block = docId >>> 16;if (block != currentBlock) {flush();currentBlock = block;}if (currentBlockCardinality < MAX_ARRAY_LENGTH) {buffer[currentBlockCardinality] = (short) docId;} else {if (denseBuffer == null) {final int numBits = Math.min(1 << 16, maxDoc - (block << 16));denseBuffer = new FixedBitSet(numBits);for (short doc : buffer) {denseBuffer.set(doc & 0xFFFF);}}denseBuffer.set(docId & 0xFFFF);}lastDocId = docId;currentBlockCardinality += 1;return this;}",public Builder addint docId if docId  lastDocId throw new IllegalArgumentExceptionDoc ids must be added inorder got   docId   which is  lastDocID  lastDocIdfinal int block  docId  16if block  currentBlock flushcurrentBlock  blockif currentBlockCardinality  MAXARRAYLENGTH buffercurrentBlockCardinality  short docId else if denseBuffer  null final int numBits  Mathmin1  16 maxDoc  block  16denseBuffer  new FixedBitSetnumBitsfor short doc  buffer denseBuffersetdoc  0xFFFFdenseBuffersetdocId  0xFFFFlastDocId  docIdcurrentBlockCardinality  1return this
"public boolean matches(int symbol, int minVocabSymbol, int maxVocabSymbol) {return false;}",public boolean matchesint symbol int minVocabSymbol int maxVocabSymbol return false
public DescribeClustersResult describeClusters(DescribeClustersRequest request) {request = beforeClientExecution(request);return executeDescribeClusters(request);},public DescribeClustersResult describeClustersDescribeClustersRequest request request  beforeClientExecutionrequestreturn executeDescribeClustersrequest
public Trie reduce(Reduce by) {List<Trie> h = new ArrayList<>();for (Trie trie : tries)h.add(trie.reduce(by));MultiTrie2 m = new MultiTrie2(forward);m.tries = h;return m;},public Trie reduceReduce by ListTrie h  new ArrayListfor Trie trie  trieshaddtriereducebyMultiTrie2 m  new MultiTrie2forwardmtries  hreturn m
public CellRangeAddressBase getCategoryLabelsCellRange() {return getCellRange(dataCategoryLabels);},public CellRangeAddressBase getCategoryLabelsCellRange return getCellRangedataCategoryLabels
public String getPass() {return pass;},public String getPass return pass
"public synchronized Set<Entry<K, V>> entrySet() {Set<Entry<K, V>> es = entrySet;return (es != null) ? es : (entrySet = new EntrySet());}",public synchronized SetEntryK V entrySet SetEntryK V es  entrySetreturn es  null  es  entrySet  new EntrySet
"public static String toFormulaString(HSSFWorkbook book, Ptg[] ptgs) {return FormulaRenderer.toFormulaString(HSSFEvaluationWorkbook.create(book), ptgs);}",public static String toFormulaStringHSSFWorkbook book Ptg ptgs return FormulaRenderertoFormulaStringHSSFEvaluationWorkbookcreatebook ptgs
"public CharBuffer slice() {return new CharSequenceAdapter(sequence.subSequence(position, limit));}",public CharBuffer slice return new CharSequenceAdaptersequencesubSequenceposition limit
public UpdateBusinessReportScheduleResult updateBusinessReportSchedule(UpdateBusinessReportScheduleRequest request) {request = beforeClientExecution(request);return executeUpdateBusinessReportSchedule(request);},public UpdateBusinessReportScheduleResult updateBusinessReportScheduleUpdateBusinessReportScheduleRequest request request  beforeClientExecutionrequestreturn executeUpdateBusinessReportSchedulerequest
"public void append(byte[] nameBuf, int namePos, int nameLen, FileMode mode,byte[] idBuf, int idPos) {if (fmtBuf(nameBuf, namePos, nameLen, mode)) {System.arraycopy(idBuf, idPos, buf, ptr, OBJECT_ID_LENGTH);ptr += OBJECT_ID_LENGTH;} else {try {fmtOverflowBuffer(nameBuf, namePos, nameLen, mode);overflowBuffer.write(idBuf, idPos, OBJECT_ID_LENGTH);} catch (IOException badBuffer) {throw new RuntimeException(badBuffer);}}}",public void appendbyte nameBuf int namePos int nameLen FileMode modebyte idBuf int idPos if fmtBufnameBuf namePos nameLen mode SystemarraycopyidBuf idPos buf ptr OBJECTIDLENGTHptr  OBJECTIDLENGTH else try fmtOverflowBuffernameBuf namePos nameLen modeoverflowBufferwriteidBuf idPos OBJECTIDLENGTH catch IOException badBuffer throw new RuntimeExceptionbadBuffer
public CreateSpotDatafeedSubscriptionResult createSpotDatafeedSubscription(CreateSpotDatafeedSubscriptionRequest request) {request = beforeClientExecution(request);return executeCreateSpotDatafeedSubscription(request);},public CreateSpotDatafeedSubscriptionResult createSpotDatafeedSubscriptionCreateSpotDatafeedSubscriptionRequest request request  beforeClientExecutionrequestreturn executeCreateSpotDatafeedSubscriptionrequest
public final long length() {return count;},public final long length return count
public CreateSkillGroupResult createSkillGroup(CreateSkillGroupRequest request) {request = beforeClientExecution(request);return executeCreateSkillGroup(request);},public CreateSkillGroupResult createSkillGroupCreateSkillGroupRequest request request  beforeClientExecutionrequestreturn executeCreateSkillGrouprequest
public int getRightId(int wordId) {return RIGHT_ID;},public int getRightIdint wordId return RIGHTID
public void setRetainBody(boolean retain) {retainBody = retain;},public void setRetainBodyboolean retain retainBody  retain
public final void reset() {len =0;},public final void reset len 0
"public StringBuilder insert(int offset, boolean b) {insert0(offset, b ? ""true"" : ""false"");return this;}",public StringBuilder insertint offset boolean b insert0offset b  true  falsereturn this
public static boolean isWhitespace(byte c) {return WHITESPACE[c & 0xff];},public static boolean isWhitespacebyte c return WHITESPACEc  0xff
public DescribeSessionsResult describeSessions(DescribeSessionsRequest request) {request = beforeClientExecution(request);return executeDescribeSessions(request);},public DescribeSessionsResult describeSessionsDescribeSessionsRequest request request  beforeClientExecutionrequestreturn executeDescribeSessionsrequest
public DescribeLocalGatewayVirtualInterfaceGroupsResult describeLocalGatewayVirtualInterfaceGroups(DescribeLocalGatewayVirtualInterfaceGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeLocalGatewayVirtualInterfaceGroups(request);},public DescribeLocalGatewayVirtualInterfaceGroupsResult describeLocalGatewayVirtualInterfaceGroupsDescribeLocalGatewayVirtualInterfaceGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeLocalGatewayVirtualInterfaceGroupsrequest
"public static String pathToString(String dim, String[] path) {String[] fullPath = new String[1+path.length];fullPath[0] = dim;System.arraycopy(path, 0, fullPath, 1, path.length);return pathToString(fullPath, fullPath.length);}",public static String pathToStringString dim String path String fullPath  new String1pathlengthfullPath0  dimSystemarraycopypath 0 fullPath 1 pathlengthreturn pathToStringfullPath fullPathlength
"public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {final byte block = blocks[blocksOffset++];values[valuesOffset++] = (block >>> 6) & 3;values[valuesOffset++] = (block >>> 4) & 3;values[valuesOffset++] = (block >>> 2) & 3;values[valuesOffset++] = block & 3;}}",public void decodebyte blocks int blocksOffset long values int valuesOffset int iterations for int j  0 j  iterations j final byte block  blocksblocksOffsetvaluesvaluesOffset  block  6  3valuesvaluesOffset  block  4  3valuesvaluesOffset  block  2  3valuesvaluesOffset  block  3
public SignalResourceResult signalResource(SignalResourceRequest request) {request = beforeClientExecution(request);return executeSignalResource(request);},public SignalResourceResult signalResourceSignalResourceRequest request request  beforeClientExecutionrequestreturn executeSignalResourcerequest
public int getPasswordVerifier() {return passwordVerifier;},public int getPasswordVerifier return passwordVerifier
public void copy(MutableValue source) {MutableValueDouble s = (MutableValueDouble) source;value = s.value;exists = s.exists;},public void copyMutableValue source MutableValueDouble s  MutableValueDouble sourcevalue  svalueexists  sexists
"public int read(byte[] buffer, int offset, int length) throws IOException {Arrays.checkOffsetAndCount(buffer.length, offset, length);for (int i = 0; i < length; i++) {int c;try {if ((c = read()) == -1) {return i == 0 ? -1 : i;}} catch (IOException e) {if (i != 0) {return i;}throw e;}buffer[offset + i] = (byte) c;}return length;}",public int readbyte buffer int offset int length throws IOException ArrayscheckOffsetAndCountbufferlength offset lengthfor int i  0 i  length i int ctry if c  read  1 return i  0  1  i catch IOException e if i  0 return ithrow ebufferoffset  i  byte creturn length
public TreeFilter getPathFilter() {return pathFilter;},public TreeFilter getPathFilter return pathFilter
public CalcCountRecord(RecordInputStream in) {field_1_iterations = in.readShort();},public CalcCountRecordRecordInputStream in field1iterations  inreadShort
public DescribeVaultRequest(String vaultName) {setVaultName(vaultName);},public DescribeVaultRequestString vaultName setVaultNamevaultName
public final double get() {if (position == limit) {throw new BufferUnderflowException();}return backingArray[offset + position++];},public final double get if position  limit throw new BufferUnderflowExceptionreturn backingArrayoffset  position
"public final void write(char[] b) {write(b,0,b.length);}",public final void writechar b writeb0blength
public DeleteTagsForDomainResult deleteTagsForDomain(DeleteTagsForDomainRequest request) {request = beforeClientExecution(request);return executeDeleteTagsForDomain(request);},public DeleteTagsForDomainResult deleteTagsForDomainDeleteTagsForDomainRequest request request  beforeClientExecutionrequestreturn executeDeleteTagsForDomainrequest
"public SetMeRequest() {super(""CloudPhoto"", ""2017-07-11"", ""SetMe"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public SetMeRequest superCloudPhoto 20170711 SetMe cloudphotosetProtocolProtocolTypeHTTPS
"public LongBuffer put(long c) {if (position == limit) {throw new BufferOverflowException();}byteBuffer.putLong(position++ * SizeOf.LONG, c);return this;}",public LongBuffer putlong c if position  limit throw new BufferOverflowExceptionbyteBufferputLongposition  SizeOfLONG creturn this
public DisassociateFleetResult disassociateFleet(DisassociateFleetRequest request) {request = beforeClientExecution(request);return executeDisassociateFleet(request);},public DisassociateFleetResult disassociateFleetDisassociateFleetRequest request request  beforeClientExecutionrequestreturn executeDisassociateFleetrequest
"public String toString() {return getClass().getSimpleName() + ""("" + in.toString() + "")"";}",public String toString return getClassgetSimpleName    intoString  
public static String fromLong(Long value) {return Long.toString(value);},public static String fromLongLong value return LongtoStringvalue
public BytesRefArray(Counter bytesUsed) {this.pool = new ByteBlockPool(new ByteBlockPool.DirectTrackingAllocator(bytesUsed));pool.nextBuffer();bytesUsed.addAndGet(RamUsageEstimator.NUM_BYTES_ARRAY_HEADER * Integer.BYTES);this.bytesUsed = bytesUsed;},public BytesRefArrayCounter bytesUsed thispool  new ByteBlockPoolnew ByteBlockPoolDirectTrackingAllocatorbytesUsedpoolnextBufferbytesUsedaddAndGetRamUsageEstimatorNUMBYTESARRAYHEADER  IntegerBYTESthisbytesUsed  bytesUsed
"public FloatBuffer put(float[] src, int srcOffset, int floatCount) {if (floatCount > remaining()) {throw new BufferOverflowException();}System.arraycopy(src, srcOffset, backingArray, offset + position, floatCount);position += floatCount;return this;}",public FloatBuffer putfloat src int srcOffset int floatCount if floatCount  remaining throw new BufferOverflowExceptionSystemarraycopysrc srcOffset backingArray offset  position floatCountposition  floatCountreturn this
"public void skipBytes(final long numBytes) throws IOException {if (numBytes < 0) {throw new IllegalArgumentException(""numBytes must be >= 0, got "" + numBytes);}if (skipBuffer == null) {skipBuffer = new byte[SKIP_BUFFER_SIZE];}assert skipBuffer.length == SKIP_BUFFER_SIZE;for (long skipped = 0; skipped < numBytes; ) {final int step = (int) Math.min(SKIP_BUFFER_SIZE, numBytes - skipped);readBytes(skipBuffer, 0, step, false);skipped += step;}}",public void skipBytesfinal long numBytes throws IOException if numBytes  0 throw new IllegalArgumentExceptionnumBytes must be  0 got   numBytesif skipBuffer  null skipBuffer  new byteSKIPBUFFERSIZEassert skipBufferlength  SKIPBUFFERSIZEfor long skipped  0 skipped  numBytes  final int step  int MathminSKIPBUFFERSIZE numBytes  skippedreadBytesskipBuffer 0 step falseskipped  step
public final char get() {if (position == limit) {throw new BufferUnderflowException();}return backingArray[offset + position++];},public final char get if position  limit throw new BufferUnderflowExceptionreturn backingArrayoffset  position
@Override public E remove(int location) {synchronized (mutex) {return list.remove(location);}},Override public E removeint location synchronized mutex return listremovelocation
public ExpPtg(LittleEndianInput in) {field_1_first_row = in.readShort();field_2_first_col = in.readShort();},public ExpPtgLittleEndianInput in field1firstrow  inreadShortfield2firstcol  inreadShort
"public TokenStream create(TokenStream input) {return new CJKBigramFilter(input, flags, outputUnigrams);}",public TokenStream createTokenStream input return new CJKBigramFilterinput flags outputUnigrams
"public FuzzySet getSetForField(SegmentWriteState state,FieldInfo info) {return FuzzySet.createSetBasedOnQuality(state.segmentInfo.maxDoc(), 0.10f);}",public FuzzySet getSetForFieldSegmentWriteState stateFieldInfo info return FuzzySetcreateSetBasedOnQualitystatesegmentInfomaxDoc 010f
"public static int[] grow(int[] array) {return grow(array, 1 + array.length);}",public static int growint array return growarray 1  arraylength
"public void setLength(int length) {if (length < 0) {throw new StringIndexOutOfBoundsException(""length < 0: "" + length);}if (length > value.length) {enlargeBuffer(length);} else {if (shared) {char[] newData = new char[value.length];System.arraycopy(value, 0, newData, 0, count);value = newData;shared = false;} else {if (count < length) {Arrays.fill(value, count, length, (char) 0);}}}count = length;}",public void setLengthint length if length  0 throw new StringIndexOutOfBoundsExceptionlength  0   lengthif length  valuelength enlargeBufferlength else if shared char newData  new charvaluelengthSystemarraycopyvalue 0 newData 0 countvalue  newDatashared  false else if count  length Arraysfillvalue count length char 0count  length
public void sync() {boolean interrupted = false;try {while (true) {MergeThread toSync = null;synchronized (this) {for (MergeThread t : mergeThreads) {if (t.isAlive() && t != Thread.currentThread()) {toSync = t;break;}}}if (toSync != null) {try {toSync.join();} catch (InterruptedException ie) {interrupted = true;}} else {break;}}} finally {if (interrupted) Thread.currentThread().interrupt();}},public void sync boolean interrupted  falsetry while true MergeThread toSync  nullsynchronized this for MergeThread t  mergeThreads if tisAlive  t  ThreadcurrentThread toSync  tbreakif toSync  null try toSyncjoin catch InterruptedException ie interrupted  true else break finally if interrupted ThreadcurrentThreadinterrupt
public DescribeIdentityPoolUsageResult describeIdentityPoolUsage(DescribeIdentityPoolUsageRequest request) {request = beforeClientExecution(request);return executeDescribeIdentityPoolUsage(request);},public DescribeIdentityPoolUsageResult describeIdentityPoolUsageDescribeIdentityPoolUsageRequest request request  beforeClientExecutionrequestreturn executeDescribeIdentityPoolUsagerequest
public ClusterSecurityGroup createClusterSecurityGroup(CreateClusterSecurityGroupRequest request) {request = beforeClientExecution(request);return executeCreateClusterSecurityGroup(request);},public ClusterSecurityGroup createClusterSecurityGroupCreateClusterSecurityGroupRequest request request  beforeClientExecutionrequestreturn executeCreateClusterSecurityGrouprequest
public K nextElement() { return nextEntryNotFailFast().key; },public K nextElement  return nextEntryNotFailFastkey 
"public HSSFShapeGroup(EscherContainerRecord spgrContainer, ObjRecord objRecord) {super(spgrContainer, objRecord);EscherContainerRecord spContainer = spgrContainer.getChildContainers().get(0);_spgrRecord = (EscherSpgrRecord) spContainer.getChild(0);for (EscherRecord ch : spContainer.getChildRecords()) {switch (EscherRecordTypes.forTypeID(ch.getRecordId())) {case SPGR:break;case CLIENT_ANCHOR:anchor = new HSSFClientAnchor((EscherClientAnchorRecord) ch);break;case CHILD_ANCHOR:anchor = new HSSFChildAnchor((EscherChildAnchorRecord) ch);break;default:break;}}}",public HSSFShapeGroupEscherContainerRecord spgrContainer ObjRecord objRecord superspgrContainer objRecordEscherContainerRecord spContainer  spgrContainergetChildContainersget0spgrRecord  EscherSpgrRecord spContainergetChild0for EscherRecord ch  spContainergetChildRecords switch EscherRecordTypesforTypeIDchgetRecordId case SPGRbreakcase CLIENTANCHORanchor  new HSSFClientAnchorEscherClientAnchorRecord chbreakcase CHILDANCHORanchor  new HSSFChildAnchorEscherChildAnchorRecord chbreakdefaultbreak
"public SoraniStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public SoraniStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public SetAlbumCoverRequest() {super(""CloudPhoto"", ""2017-07-11"", ""SetAlbumCover"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public SetAlbumCoverRequest superCloudPhoto 20170711 SetAlbumCover cloudphotosetProtocolProtocolTypeHTTPS
public boolean equals(final Object o){boolean rval = false;if ((o != null) && (o.getClass() == this.getClass())){if (this == o){rval = true;}else{DocumentDescriptor descriptor = ( DocumentDescriptor ) o;rval = this.path.equals(descriptor.path)&& this.name.equals(descriptor.name);}}return rval;},public boolean equalsfinal Object oboolean rval  falseif o  null  ogetClass  thisgetClassif this  orval  trueelseDocumentDescriptor descriptor   DocumentDescriptor  orval  thispathequalsdescriptorpath thisnameequalsdescriptornamereturn rval
public void finish() {if (!sorted)resort();replace();},public void finish if sortedresortreplace
"public void map(K key, V value) {List<V> elementsForKey = get(key);if ( elementsForKey==null ) {elementsForKey = new ArrayList<V>();super.put(key, elementsForKey);}elementsForKey.add(value);}",public void mapK key V value ListV elementsForKey  getkeyif  elementsForKeynull  elementsForKey  new ArrayListVsuperputkey elementsForKeyelementsForKeyaddvalue
public DescribeImportSnapshotTasksResult describeImportSnapshotTasks(DescribeImportSnapshotTasksRequest request) {request = beforeClientExecution(request);return executeDescribeImportSnapshotTasks(request);},public DescribeImportSnapshotTasksResult describeImportSnapshotTasksDescribeImportSnapshotTasksRequest request request  beforeClientExecutionrequestreturn executeDescribeImportSnapshotTasksrequest
public ListEventSourcesResult listEventSources(ListEventSourcesRequest request) {request = beforeClientExecution(request);return executeListEventSources(request);},public ListEventSourcesResult listEventSourcesListEventSourcesRequest request request  beforeClientExecutionrequestreturn executeListEventSourcesrequest
"public static double getExcelDate(Calendar date, boolean use1904windowing) {int year = date.get(Calendar.YEAR);int dayOfYear = date.get(Calendar.DAY_OF_YEAR);int hour = date.get(Calendar.HOUR_OF_DAY);int minute = date.get(Calendar.MINUTE);int second = date.get(Calendar.SECOND);int milliSecond = date.get(Calendar.MILLISECOND);return internalGetExcelDate(year, dayOfYear, hour, minute, second, milliSecond, use1904windowing);}",public static double getExcelDateCalendar date boolean use1904windowing int year  dategetCalendarYEARint dayOfYear  dategetCalendarDAYOFYEARint hour  dategetCalendarHOUROFDAYint minute  dategetCalendarMINUTEint second  dategetCalendarSECONDint milliSecond  dategetCalendarMILLISECONDreturn internalGetExcelDateyear dayOfYear hour minute second milliSecond use1904windowing
"public TimeSpec(char type, int pos, int len, double factor) {this.type = type;this.pos = pos;this.len = len;this.factor = factor;modBy = 0;}",public TimeSpecchar type int pos int len double factor thistype  typethispos  posthislen  lenthisfactor  factormodBy  0
public DeleteApiMappingResult deleteApiMapping(DeleteApiMappingRequest request) {request = beforeClientExecution(request);return executeDeleteApiMapping(request);},public DeleteApiMappingResult deleteApiMappingDeleteApiMappingRequest request request  beforeClientExecutionrequestreturn executeDeleteApiMappingrequest
"public static String typeString(int typeCode) {switch (typeCode) {case OBJ_COMMIT:return TYPE_COMMIT;case OBJ_TREE:return TYPE_TREE;case OBJ_BLOB:return TYPE_BLOB;case OBJ_TAG:return TYPE_TAG;default:throw new IllegalArgumentException(MessageFormat.format(JGitText.get().badObjectType, Integer.valueOf(typeCode)));}}",public static String typeStringint typeCode switch typeCode case OBJCOMMITreturn TYPECOMMITcase OBJTREEreturn TYPETREEcase OBJBLOBreturn TYPEBLOBcase OBJTAGreturn TYPETAGdefaultthrow new IllegalArgumentExceptionMessageFormatformatJGitTextgetbadObjectType IntegervalueOftypeCode
public long addAndGet(long delta) {return count.addAndGet(delta);},public long addAndGetlong delta return countaddAndGetdelta
"public String toString() {StringBuilder sb = new StringBuilder(super.toString());sb.append("" fields="");sb.append(Arrays.toString(fields));return sb.toString();}",public String toString StringBuilder sb  new StringBuildersupertoStringsbappend fieldssbappendArraystoStringfieldsreturn sbtoString
public UpdateTemplateActiveVersionResult updateTemplateActiveVersion(UpdateTemplateActiveVersionRequest request) {request = beforeClientExecution(request);return executeUpdateTemplateActiveVersion(request);},public UpdateTemplateActiveVersionResult updateTemplateActiveVersionUpdateTemplateActiveVersionRequest request request  beforeClientExecutionrequestreturn executeUpdateTemplateActiveVersionrequest
"public int compareTo(FacetLabel other) {final int len = length < other.length ? length : other.length;for (int i = 0, j = 0; i < len; i++, j++) {int cmp = components[i].compareTo(other.components[j]);if (cmp < 0) {return -1; }if (cmp > 0) {return 1; }}return length - other.length;}",public int compareToFacetLabel other final int len  length  otherlength  length  otherlengthfor int i  0 j  0 i  len i j int cmp  componentsicompareToothercomponentsjif cmp  0 return 1 if cmp  0 return 1 return length  otherlength
"public int find(String key) {int len = key.length();char strkey[] = new char[len + 1];key.getChars(0, len, strkey, 0);strkey[len] = 0;return find(strkey, 0);}",public int findString key int len  keylengthchar strkey  new charlen  1keygetChars0 len strkey 0strkeylen  0return findstrkey 0
"public final CharBuffer put(char[] src, int srcOffset, int charCount) {throw new ReadOnlyBufferException();}",public final CharBuffer putchar src int srcOffset int charCount throw new ReadOnlyBufferException
public ListNodesResult listNodes(ListNodesRequest request) {request = beforeClientExecution(request);return executeListNodes(request);},public ListNodesResult listNodesListNodesRequest request request  beforeClientExecutionrequestreturn executeListNodesrequest
public DeleteVoiceConnectorStreamingConfigurationResult deleteVoiceConnectorStreamingConfiguration(DeleteVoiceConnectorStreamingConfigurationRequest request) {request = beforeClientExecution(request);return executeDeleteVoiceConnectorStreamingConfiguration(request);},public DeleteVoiceConnectorStreamingConfigurationResult deleteVoiceConnectorStreamingConfigurationDeleteVoiceConnectorStreamingConfigurationRequest request request  beforeClientExecutionrequestreturn executeDeleteVoiceConnectorStreamingConfigurationrequest
public TokenStream create(TokenStream input) {return new SoraniNormalizationFilter(input);},public TokenStream createTokenStream input return new SoraniNormalizationFilterinput
"public int following(int pos) {if (pos < start || pos > end) {throw new IllegalArgumentException(""offset out of bounds"");} else if (pos == end) {current = end;return DONE;} else {return last();}}",public int followingint pos if pos  start  pos  end throw new IllegalArgumentExceptionoffset out of bounds else if pos  end current  endreturn DONE else return last
public SshSessionFactory getSshSessionFactory() {return sch;},public SshSessionFactory getSshSessionFactory return sch
@Override public boolean contains(Object o) {if (!(o instanceof Multiset.Entry)) {return false;}Multiset.Entry<?> entry = (Multiset.Entry<?>) o;Collection<V> collection = map.get(entry.getElement());return (collection != null) &&(collection.size() == entry.getCount());},Override public boolean containsObject o if o instanceof MultisetEntry return falseMultisetEntry entry  MultisetEntry oCollectionV collection  mapgetentrygetElementreturn collection  null collectionsize  entrygetCount
"public TokenFilter create(TokenStream input) {CommonGramsFilter commonGrams = new CommonGramsFilter(input, commonWords);return commonGrams;}",public TokenFilter createTokenStream input CommonGramsFilter commonGrams  new CommonGramsFilterinput commonWordsreturn commonGrams
public DescribeWorkspaceImagesResult describeWorkspaceImages(DescribeWorkspaceImagesRequest request) {request = beforeClientExecution(request);return executeDescribeWorkspaceImages(request);},public DescribeWorkspaceImagesResult describeWorkspaceImagesDescribeWorkspaceImagesRequest request request  beforeClientExecutionrequestreturn executeDescribeWorkspaceImagesrequest
"public ValueEval getItem(int index) {if (index < 0 || index > _size) {throw new IllegalArgumentException(""Specified index "" + index+ "" is outside range (0.."" + (_size - 1) + "")"");}return getItemInternal(index);}",public ValueEval getItemint index if index  0  index  size throw new IllegalArgumentExceptionSpecified index   index  is outside range 0  size  1  return getItemInternalindex
public ListEventBusesResult listEventBuses(ListEventBusesRequest request) {request = beforeClientExecution(request);return executeListEventBuses(request);},public ListEventBusesResult listEventBusesListEventBusesRequest request request  beforeClientExecutionrequestreturn executeListEventBusesrequest
"public QualityStats(double maxGoodPoints, long searchTime) {this.maxGoodPoints = maxGoodPoints;this.searchTime = searchTime;this.recallPoints = new ArrayList<>();pAt = new double[MAX_POINTS+1]; }",public QualityStatsdouble maxGoodPoints long searchTime thismaxGoodPoints  maxGoodPointsthissearchTime  searchTimethisrecallPoints  new ArrayListpAt  new doubleMAXPOINTS1 
"public GetInvalidationRequest(String distributionId, String id) {setDistributionId(distributionId);setId(id);}",public GetInvalidationRequestString distributionId String id setDistributionIddistributionIdsetIdid
"public int compareTo(ScoreTerm other) {if (this.boost == other.boost)return other.bytes.get().compareTo(this.bytes.get());else return Float.compare(this.boost, other.boost);}",public int compareToScoreTerm other if thisboost  otherboostreturn otherbytesgetcompareTothisbytesgetelse return Floatcomparethisboost otherboost
public RegenerateSecurityTokenResult regenerateSecurityToken(RegenerateSecurityTokenRequest request) {request = beforeClientExecution(request);return executeRegenerateSecurityToken(request);},public RegenerateSecurityTokenResult regenerateSecurityTokenRegenerateSecurityTokenRequest request request  beforeClientExecutionrequestreturn executeRegenerateSecurityTokenrequest
public DescribeRootFoldersResult describeRootFolders(DescribeRootFoldersRequest request) {request = beforeClientExecution(request);return executeDescribeRootFolders(request);},public DescribeRootFoldersResult describeRootFoldersDescribeRootFoldersRequest request request  beforeClientExecutionrequestreturn executeDescribeRootFoldersrequest
public DeactivateUserResult deactivateUser(DeactivateUserRequest request) {request = beforeClientExecution(request);return executeDeactivateUser(request);},public DeactivateUserResult deactivateUserDeactivateUserRequest request request  beforeClientExecutionrequestreturn executeDeactivateUserrequest
public boolean contains(int el) {int n = intervals.size();int l = 0;int r = n - 1;while (l <= r) {int m = (l + r) / 2;Interval I = intervals.get(m);int a = I.a;int b = I.b;if ( b<el ) {l = m + 1;} else if ( a>el ) {r = m - 1;} else { return true;}}return false;},public boolean containsint el int n  intervalssizeint l  0int r  n  1while l  r int m  l  r  2Interval I  intervalsgetmint a  Iaint b  Ibif  bel  l  m  1 else if  ael  r  m  1 else  return truereturn false
public ListJobsResult listJobs(ListJobsRequest request) {request = beforeClientExecution(request);return executeListJobs(request);},public ListJobsResult listJobsListJobsRequest request request  beforeClientExecutionrequestreturn executeListJobsrequest
"public RussianLightStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public RussianLightStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public SearchSkillGroupsResult searchSkillGroups(SearchSkillGroupsRequest request) {request = beforeClientExecution(request);return executeSearchSkillGroups(request);},public SearchSkillGroupsResult searchSkillGroupsSearchSkillGroupsRequest request request  beforeClientExecutionrequestreturn executeSearchSkillGroupsrequest
"public SortField getSortField(Bindings bindings, boolean reverse) {return getDoubleValuesSource(bindings).getSortField(reverse);}",public SortField getSortFieldBindings bindings boolean reverse return getDoubleValuesSourcebindingsgetSortFieldreverse
public ModifyHostsResult modifyHosts(ModifyHostsRequest request) {request = beforeClientExecution(request);return executeModifyHosts(request);},public ModifyHostsResult modifyHostsModifyHostsRequest request request  beforeClientExecutionrequestreturn executeModifyHostsrequest
public void setDate(String date) {this.date = date;},public void setDateString date thisdate  date
"public ValueEval getAreaEval(int firstRowIndex, int firstColumnIndex,int lastRowIndex, int lastColumnIndex) {SheetRangeEvaluator sre = getRefEvaluatorForCurrentSheet();return new LazyAreaEval(firstRowIndex, firstColumnIndex, lastRowIndex, lastColumnIndex, sre);}",public ValueEval getAreaEvalint firstRowIndex int firstColumnIndexint lastRowIndex int lastColumnIndex SheetRangeEvaluator sre  getRefEvaluatorForCurrentSheetreturn new LazyAreaEvalfirstRowIndex firstColumnIndex lastRowIndex lastColumnIndex sre
public CreateContactMethodResult createContactMethod(CreateContactMethodRequest request) {request = beforeClientExecution(request);return executeCreateContactMethod(request);},public CreateContactMethodResult createContactMethodCreateContactMethodRequest request request  beforeClientExecutionrequestreturn executeCreateContactMethodrequest
public static final RevFilter before(Date ts) {return before(ts.getTime());},public static final RevFilter beforeDate ts return beforetsgetTime
public String toString() { return toString(VocabularyImpl.EMPTY_VOCABULARY); },public String toString  return toStringVocabularyImplEMPTYVOCABULARY 
"public void updateFormulasAfterCellShift(FormulaShifter shifter, int externSheetIndex) {for (int i = 0; i < _cfHeaders.size(); i++) {CFRecordsAggregate subAgg = _cfHeaders.get(i);boolean shouldKeep = subAgg.updateFormulasAfterCellShift(shifter, externSheetIndex);if (!shouldKeep) {_cfHeaders.remove(i);i--;}}}",public void updateFormulasAfterCellShiftFormulaShifter shifter int externSheetIndex for int i  0 i  cfHeaderssize i CFRecordsAggregate subAgg  cfHeadersgetiboolean shouldKeep  subAggupdateFormulasAfterCellShiftshifter externSheetIndexif shouldKeep cfHeadersremoveii
public void insertCell(CellValueRecordInterface cvRec) {_valuesAgg.insertCell(cvRec);},public void insertCellCellValueRecordInterface cvRec valuesAgginsertCellcvRec
"public ShingleFilter create(TokenStream input) {ShingleFilter r = new ShingleFilter(input, minShingleSize, maxShingleSize);r.setOutputUnigrams(outputUnigrams);r.setOutputUnigramsIfNoShingles(outputUnigramsIfNoShingles);r.setTokenSeparator(tokenSeparator);r.setFillerToken(fillerToken);return r;}",public ShingleFilter createTokenStream input ShingleFilter r  new ShingleFilterinput minShingleSize maxShingleSizersetOutputUnigramsoutputUnigramsrsetOutputUnigramsIfNoShinglesoutputUnigramsIfNoShinglesrsetTokenSeparatortokenSeparatorrsetFillerTokenfillerTokenreturn r
"public SlopQueryNode(QueryNode query, int value) {if (query == null) {throw new QueryNodeError(new MessageImpl(QueryParserMessages.NODE_ACTION_NOT_SUPPORTED, ""query"", ""null""));}this.value = value;setLeaf(false);allocate();add(query);}",public SlopQueryNodeQueryNode query int value if query  null throw new QueryNodeErrornew MessageImplQueryParserMessagesNODEACTIONNOTSUPPORTED query nullthisvalue  valuesetLeaffalseallocateaddquery
public ReplaceRouteTableAssociationResult replaceRouteTableAssociation(ReplaceRouteTableAssociationRequest request) {request = beforeClientExecution(request);return executeReplaceRouteTableAssociation(request);},public ReplaceRouteTableAssociationResult replaceRouteTableAssociationReplaceRouteTableAssociationRequest request request  beforeClientExecutionrequestreturn executeReplaceRouteTableAssociationrequest
"public void setObjectIdFromRaw(byte[] bs, int p) {final int n = Constants.OBJECT_ID_LENGTH;System.arraycopy(bs, p, idBuffer(), idOffset(), n);}",public void setObjectIdFromRawbyte bs int p final int n  ConstantsOBJECTIDLENGTHSystemarraycopybs p idBuffer idOffset n
public ListTablesResult listTables(Integer limit) {return listTables(new ListTablesRequest().withLimit(limit));},public ListTablesResult listTablesInteger limit return listTablesnew ListTablesRequestwithLimitlimit
"public DeleteDeviceGroupRequest() {super(""LinkFace"", ""2018-07-20"", ""DeleteDeviceGroup"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public DeleteDeviceGroupRequest superLinkFace 20180720 DeleteDeviceGroupsetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public void addRecords(RecordStream rs) {while (true) {if (!readARecord(rs)) {break;}}},public void addRecordsRecordStream rs while true if readARecordrs break
"public static Collection<String> getSupportedFunctionNames() {Collection<String> lst = new TreeSet<>();for (int i = 0; i < functions.length; i++) {Function func = functions[i];FunctionMetadata metaData = FunctionMetadataRegistry.getFunctionByIndex(i);if (func != null && !(func instanceof NotImplementedFunction)) {lst.add(metaData.getName());}}lst.add(""INDIRECT""); return Collections.unmodifiableCollection(lst);}",public static CollectionString getSupportedFunctionNames CollectionString lst  new TreeSetfor int i  0 i  functionslength i Function func  functionsiFunctionMetadata metaData  FunctionMetadataRegistrygetFunctionByIndexiif func  null  func instanceof NotImplementedFunction lstaddmetaDatagetNamelstaddINDIRECT return CollectionsunmodifiableCollectionlst
public PendingTaskCount countPendingActivityTasks(CountPendingActivityTasksRequest request) {request = beforeClientExecution(request);return executeCountPendingActivityTasks(request);},public PendingTaskCount countPendingActivityTasksCountPendingActivityTasksRequest request request  beforeClientExecutionrequestreturn executeCountPendingActivityTasksrequest
public List<SegToken> process(String sentence) {SegGraph segGraph = createSegGraph(sentence);BiSegGraph biSegGraph = new BiSegGraph(segGraph);List<SegToken> shortPath = biSegGraph.getShortPath();return shortPath;},public ListSegToken processString sentence SegGraph segGraph  createSegGraphsentenceBiSegGraph biSegGraph  new BiSegGraphsegGraphListSegToken shortPath  biSegGraphgetShortPathreturn shortPath
"public Area3DPtg(AreaReference arearef, int externIdx) {super(arearef);setExternSheetIndex(externIdx);}",public Area3DPtgAreaReference arearef int externIdx superarearefsetExternSheetIndexexternIdx
public EnableRuleResult enableRule(EnableRuleRequest request) {request = beforeClientExecution(request);return executeEnableRule(request);},public EnableRuleResult enableRuleEnableRuleRequest request request  beforeClientExecutionrequestreturn executeEnableRulerequest
"public static boolean equals(byte[] array1, byte[] array2) {if (array1 == array2) {return true;}if (array1 == null || array2 == null || array1.length != array2.length) {return false;}for (int i = 0; i < array1.length; i++) {if (array1[i] != array2[i]) {return false;}}return true;}",public static boolean equalsbyte array1 byte array2 if array1  array2 return trueif array1  null  array2  null  array1length  array2length return falsefor int i  0 i  array1length i if array1i  array2i return falsereturn true
public boolean isExpectDataAfterPackFooter() {return expectDataAfterPackFooter;},public boolean isExpectDataAfterPackFooter return expectDataAfterPackFooter
public ListIncomingTypedLinksResult listIncomingTypedLinks(ListIncomingTypedLinksRequest request) {request = beforeClientExecution(request);return executeListIncomingTypedLinks(request);},public ListIncomingTypedLinksResult listIncomingTypedLinksListIncomingTypedLinksRequest request request  beforeClientExecutionrequestreturn executeListIncomingTypedLinksrequest
public void removeRevNumber() {remove1stProperty(PropertyIDMap.PID_REVNUMBER);},public void removeRevNumber remove1stPropertyPropertyIDMapPIDREVNUMBER
public DeleteMonitoringScheduleResult deleteMonitoringSchedule(DeleteMonitoringScheduleRequest request) {request = beforeClientExecution(request);return executeDeleteMonitoringSchedule(request);},public DeleteMonitoringScheduleResult deleteMonitoringScheduleDeleteMonitoringScheduleRequest request request  beforeClientExecutionrequestreturn executeDeleteMonitoringSchedulerequest
"public synchronized boolean put(FacetLabel categoryPath, int ordinal) {boolean ret = cache.put(categoryPath, ordinal);if (ret) {cache.makeRoomLRU();}return ret;}",public synchronized boolean putFacetLabel categoryPath int ordinal boolean ret  cacheputcategoryPath ordinalif ret cachemakeRoomLRUreturn ret
"public void pushNewRecursionContext(ParserRuleContext localctx, int state, int ruleIndex) {ParserRuleContext previous = _ctx;previous.parent = localctx;previous.invokingState = state;previous.stop = _input.LT(-1);_ctx = localctx;_ctx.start = previous.start;if (_buildParseTrees) {_ctx.addChild(previous);}if ( _parseListeners != null ) {triggerEnterRuleEvent(); }}",public void pushNewRecursionContextParserRuleContext localctx int state int ruleIndex ParserRuleContext previous  ctxpreviousparent  localctxpreviousinvokingState  statepreviousstop  inputLT1ctx  localctxctxstart  previousstartif buildParseTrees ctxaddChildpreviousif  parseListeners  null  triggerEnterRuleEvent 
public Writer() {output = new ByteArrayOutputStream();},public Writer output  new ByteArrayOutputStream
public String getSignerType() {return null;},public String getSignerType return null
"public void add(Ptg token) {if (token == null) {throw new IllegalArgumentException(""token must not be null"");}_ptgs[_offset] = token;_offset++;}",public void addPtg token if token  null throw new IllegalArgumentExceptiontoken must not be nullptgsoffset  tokenoffset
public Repository build() throws IOException {FileRepository repo = new FileRepository(setup());if (isMustExist() && !repo.getObjectDatabase().exists())throw new RepositoryNotFoundException(getGitDir());return repo;},public Repository build throws IOException FileRepository repo  new FileRepositorysetupif isMustExist  repogetObjectDatabaseexiststhrow new RepositoryNotFoundExceptiongetGitDirreturn repo
"public List<WeightedFragInfo> getWeightedFragInfoList( List<WeightedFragInfo> src ) {Collections.sort( src, new ScoreComparator() );return src;}",public ListWeightedFragInfo getWeightedFragInfoList ListWeightedFragInfo src  Collectionssort src new ScoreComparator return src
"public String toString() {return ""epsilon"";}",public String toString return epsilon
public DescribeDBLogFilesResult describeDBLogFiles(DescribeDBLogFilesRequest request) {request = beforeClientExecution(request);return executeDescribeDBLogFiles(request);},public DescribeDBLogFilesResult describeDBLogFilesDescribeDBLogFilesRequest request request  beforeClientExecutionrequestreturn executeDescribeDBLogFilesrequest
"public NoteRecord(RecordInputStream in) {field_1_row = in.readUShort();field_2_col = in.readShort();field_3_flags = in.readShort();field_4_shapeid = in.readUShort();int length = in.readShort();field_5_hasMultibyte = in.readByte() != 0x00;if (field_5_hasMultibyte) {field_6_author = StringUtil.readUnicodeLE(in, length);} else {field_6_author = StringUtil.readCompressedUnicode(in, length);}if (in.available() == 1) {field_7_padding = Byte.valueOf(in.readByte());} else if (in.available() == 2 && length == 0) {field_7_padding = Byte.valueOf(in.readByte());in.readByte();}}",public NoteRecordRecordInputStream in field1row  inreadUShortfield2col  inreadShortfield3flags  inreadShortfield4shapeid  inreadUShortint length  inreadShortfield5hasMultibyte  inreadByte  0x00if field5hasMultibyte field6author  StringUtilreadUnicodeLEin length else field6author  StringUtilreadCompressedUnicodein lengthif inavailable  1 field7padding  BytevalueOfinreadByte else if inavailable  2  length  0 field7padding  BytevalueOfinreadByteinreadByte
public CherryPickCommand setOurCommitName(String ourCommitName) {this.ourCommitName = ourCommitName;return this;},public CherryPickCommand setOurCommitNameString ourCommitName thisourCommitName  ourCommitNamereturn this
public GetCloudFormationStackRecordsResult getCloudFormationStackRecords(GetCloudFormationStackRecordsRequest request) {request = beforeClientExecution(request);return executeGetCloudFormationStackRecords(request);},public GetCloudFormationStackRecordsResult getCloudFormationStackRecordsGetCloudFormationStackRecordsRequest request request  beforeClientExecutionrequestreturn executeGetCloudFormationStackRecordsrequest
"public XPathTokenAnywhereElement(String tokenName, int tokenType) {super(tokenName);this.tokenType = tokenType;}",public XPathTokenAnywhereElementString tokenName int tokenType supertokenNamethistokenType  tokenType
public boolean isExpired() {long now = System.currentTimeMillis();return now >= expiration - refreshIntervalInMillSeconds;},public boolean isExpired long now  SystemcurrentTimeMillisreturn now  expiration  refreshIntervalInMillSeconds
public ListDetectorsResult listDetectors(ListDetectorsRequest request) {request = beforeClientExecution(request);return executeListDetectors(request);},public ListDetectorsResult listDetectorsListDetectorsRequest request request  beforeClientExecutionrequestreturn executeListDetectorsrequest
"public void add(int index, T element) {if (index == size) {add(element);} else if (index < 0 || size < index) {throw new IndexOutOfBoundsException(String.valueOf(index));} else {add(null); for (int oldIdx = size - 2; index <= oldIdx; oldIdx--)set(oldIdx + 1, get(oldIdx));set(index, element);}}",public void addint index T element if index  size addelement else if index  0  size  index throw new IndexOutOfBoundsExceptionStringvalueOfindex else addnull for int oldIdx  size  2 index  oldIdx oldIdxsetoldIdx  1 getoldIdxsetindex element
"public static int intersect(CellRangeAddress crA, CellRangeAddress crB ){int firstRow = crB.getFirstRow();int lastRow  = crB.getLastRow();int firstCol = crB.getFirstColumn();int lastCol  = crB.getLastColumn();if (gt(crA.getFirstRow(),    lastRow) || lt(crA.getLastRow(),    firstRow) ||gt(crA.getFirstColumn(), lastCol) || lt(crA.getLastColumn(), firstCol)){return NO_INTERSECTION;}else if( contains(crA, crB) ){return INSIDE;}else if( contains(crB, crA)){return ENCLOSES;}else{return OVERLAP;}}",public static int intersectCellRangeAddress crA CellRangeAddress crB int firstRow  crBgetFirstRowint lastRow   crBgetLastRowint firstCol  crBgetFirstColumnint lastCol   crBgetLastColumnif gtcrAgetFirstRow    lastRow  ltcrAgetLastRow    firstRow gtcrAgetFirstColumn lastCol  ltcrAgetLastColumn firstColreturn NOINTERSECTIONelse if containscrA crB return INSIDEelse if containscrB crAreturn ENCLOSESelsereturn OVERLAP
public short getXFAt(int coffset) {return _xfs[coffset];},public short getXFAtint coffset return xfscoffset
public static final boolean isId(@Nullable String id) {if (id == null) {return false;}if (id.length() != Constants.OBJECT_ID_STRING_LENGTH)return false;try {for (int i = 0; i < Constants.OBJECT_ID_STRING_LENGTH; i++) {RawParseUtils.parseHexInt4((byte) id.charAt(i));}return true;} catch (ArrayIndexOutOfBoundsException e) {return false;}},public static final boolean isIdNullable String id if id  null return falseif idlength  ConstantsOBJECTIDSTRINGLENGTHreturn falsetry for int i  0 i  ConstantsOBJECTIDSTRINGLENGTH i RawParseUtilsparseHexInt4byte idcharAtireturn true catch ArrayIndexOutOfBoundsException e return false
@Override public boolean isEmpty() {return countMap.isEmpty();},Override public boolean isEmpty return countMapisEmpty
"public ByteVector(byte[] a, int capacity) {if (capacity > 0) {blockSize = capacity;} else {blockSize = DEFAULT_BLOCK_SIZE;}array = a;n = 0;}",public ByteVectorbyte a int capacity if capacity  0 blockSize  capacity else blockSize  DEFAULTBLOCKSIZEarray  an  0
"public void write(int oneByte) throws IOException {write(new byte[] { (byte) oneByte }, 0, 1);}",public void writeint oneByte throws IOException writenew byte  byte oneByte  0 1
public SegmentCommitInfo info(int i) {return segments.get(i);},public SegmentCommitInfo infoint i return segmentsgeti
public ListDistributionsByWebACLIdResult listDistributionsByWebACLId(ListDistributionsByWebACLIdRequest request) {request = beforeClientExecution(request);return executeListDistributionsByWebACLId(request);},public ListDistributionsByWebACLIdResult listDistributionsByWebACLIdListDistributionsByWebACLIdRequest request request  beforeClientExecutionrequestreturn executeListDistributionsByWebACLIdrequest
public void serialize(LittleEndianOutput out) {out.writeShort(rt);out.writeShort(grbitFrt);out.writeShort(iObjectKind);out.writeShort(iObjectContext);out.writeShort(iObjectInstance1);out.writeShort(iObjectInstance2);},public void serializeLittleEndianOutput out outwriteShortrtoutwriteShortgrbitFrtoutwriteShortiObjectKindoutwriteShortiObjectContextoutwriteShortiObjectInstance1outwriteShortiObjectInstance2
public CreateDeliveryStreamResult createDeliveryStream(CreateDeliveryStreamRequest request) {request = beforeClientExecution(request);return executeCreateDeliveryStream(request);},public CreateDeliveryStreamResult createDeliveryStreamCreateDeliveryStreamRequest request request  beforeClientExecutionrequestreturn executeCreateDeliveryStreamrequest
public ResetDBParameterGroupResult resetDBParameterGroup(ResetDBParameterGroupRequest request) {request = beforeClientExecution(request);return executeResetDBParameterGroup(request);},public ResetDBParameterGroupResult resetDBParameterGroupResetDBParameterGroupRequest request request  beforeClientExecutionrequestreturn executeResetDBParameterGrouprequest
public DescribeDocumentClassificationJobResult describeDocumentClassificationJob(DescribeDocumentClassificationJobRequest request) {request = beforeClientExecution(request);return executeDescribeDocumentClassificationJob(request);},public DescribeDocumentClassificationJobResult describeDocumentClassificationJobDescribeDocumentClassificationJobRequest request request  beforeClientExecutionrequestreturn executeDescribeDocumentClassificationJobrequest
public DescribeSecurityGroupsResult describeSecurityGroups(DescribeSecurityGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeSecurityGroups(request);},public DescribeSecurityGroupsResult describeSecurityGroupsDescribeSecurityGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeSecurityGroupsrequest
public UpdateTrafficPolicyInstanceResult updateTrafficPolicyInstance(UpdateTrafficPolicyInstanceRequest request) {request = beforeClientExecution(request);return executeUpdateTrafficPolicyInstance(request);},public UpdateTrafficPolicyInstanceResult updateTrafficPolicyInstanceUpdateTrafficPolicyInstanceRequest request request  beforeClientExecutionrequestreturn executeUpdateTrafficPolicyInstancerequest
public BinaryHunk getForwardBinaryHunk() {return forwardBinaryHunk;},public BinaryHunk getForwardBinaryHunk return forwardBinaryHunk
public static ByteBuffer allocateDirect(int capacity) {if (capacity < 0) {throw new IllegalArgumentException();}return new ReadWriteDirectByteBuffer(capacity);},public static ByteBuffer allocateDirectint capacity if capacity  0 throw new IllegalArgumentExceptionreturn new ReadWriteDirectByteBuffercapacity
"public void drawString(String str, int x, int y){if (str == null || str.isEmpty())return;Font excelFont = font;if ( font.getName().equals( ""SansSerif"" ) ){excelFont = new Font( ""Arial"", font.getStyle(), (int) ( font.getSize() / verticalPixelsPerPoint ) );}else{excelFont = new Font( font.getName(), font.getStyle(), (int) ( font.getSize() / verticalPixelsPerPoint ));}FontDetails d = StaticFontMetrics.getFontDetails( excelFont );int width = d.getStringWidth( str ) * 8  + 12;int height = (int) ( ( font.getSize() / verticalPixelsPerPoint ) + 6 ) * 2;y -= ( font.getSize() / verticalPixelsPerPoint ) + 2 * verticalPixelsPerPoint;    HSSFTextbox textbox = escherGroup.createTextbox( new HSSFChildAnchor( x, y, x + width, y + height ) );textbox.setNoFill( true );textbox.setLineStyle( HSSFShape.LINESTYLE_NONE );HSSFRichTextString s = new HSSFRichTextString( str );HSSFFont hssfFont = matchFont( excelFont );s.applyFont( hssfFont );textbox.setString( s );}",public void drawStringString str int x int yif str  null  strisEmptyreturnFont excelFont  fontif  fontgetNameequals SansSerif  excelFont  new Font Arial fontgetStyle int  fontgetSize  verticalPixelsPerPoint  elseexcelFont  new Font fontgetName fontgetStyle int  fontgetSize  verticalPixelsPerPoint FontDetails d  StaticFontMetricsgetFontDetails excelFont int width  dgetStringWidth str   8   12int height  int   fontgetSize  verticalPixelsPerPoint   6   2y   fontgetSize  verticalPixelsPerPoint   2  verticalPixelsPerPoint    HSSFTextbox textbox  escherGroupcreateTextbox new HSSFChildAnchor x y x  width y  height  textboxsetNoFill true textboxsetLineStyle HSSFShapeLINESTYLENONE HSSFRichTextString s  new HSSFRichTextString str HSSFFont hssfFont  matchFont excelFont sapplyFont hssfFont textboxsetString s 
"public Query makeLuceneQueryFieldNoBoost(String fieldName, BasicQueryFactory qf) {List<Query> luceneSubQueries = makeLuceneSubQueriesField(fieldName, qf);BooleanQuery.Builder bq = new BooleanQuery.Builder();bq.add( luceneSubQueries.get(0), BooleanClause.Occur.MUST);SrndBooleanQuery.addQueriesToBoolean(bq,luceneSubQueries.subList(1, luceneSubQueries.size()),BooleanClause.Occur.MUST_NOT);return bq.build();}",public Query makeLuceneQueryFieldNoBoostString fieldName BasicQueryFactory qf ListQuery luceneSubQueries  makeLuceneSubQueriesFieldfieldName qfBooleanQueryBuilder bq  new BooleanQueryBuilderbqadd luceneSubQueriesget0 BooleanClauseOccurMUSTSrndBooleanQueryaddQueriesToBooleanbqluceneSubQueriessubList1 luceneSubQueriessizeBooleanClauseOccurMUSTNOTreturn bqbuild
public void reset(byte[] treeData) {attributesNode = null;raw = treeData;prevPtr = -1;currPtr = 0;if (eof())nextPtr = 0;elseparseEntry();},public void resetbyte treeData attributesNode  nullraw  treeDataprevPtr  1currPtr  0if eofnextPtr  0elseparseEntry
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_save_link_values);},public void serializeLittleEndianOutput out outwriteShortfield1savelinkvalues
"public static Boolean toBooleanOrNull(String stringValue) {if (stringValue == null)return null;if (equalsIgnoreCase(""yes"", stringValue) || equalsIgnoreCase(""true"", stringValue) || equalsIgnoreCase(""1"", stringValue) || equalsIgnoreCase(""on"", stringValue)) return Boolean.TRUE;else if (equalsIgnoreCase(""no"", stringValue) || equalsIgnoreCase(""false"", stringValue) || equalsIgnoreCase(""0"", stringValue) || equalsIgnoreCase(""off"", stringValue)) return Boolean.FALSE;else return null;}",public static Boolean toBooleanOrNullString stringValue if stringValue  nullreturn nullif equalsIgnoreCaseyes stringValue  equalsIgnoreCasetrue stringValue  equalsIgnoreCase1 stringValue  equalsIgnoreCaseon stringValue return BooleanTRUEelse if equalsIgnoreCaseno stringValue  equalsIgnoreCasefalse stringValue  equalsIgnoreCase0 stringValue  equalsIgnoreCaseoff stringValue return BooleanFALSEelse return null
public RevObject lookupOrNull(AnyObjectId id) {return objects.get(id);},public RevObject lookupOrNullAnyObjectId id return objectsgetid
public void cloneStyleFrom(FontRecord source) {field_1_font_height         = source.field_1_font_height;field_2_attributes          = source.field_2_attributes;field_3_color_palette_index = source.field_3_color_palette_index;field_4_bold_weight         = source.field_4_bold_weight;field_5_super_sub_script    = source.field_5_super_sub_script;field_6_underline           = source.field_6_underline;field_7_family              = source.field_7_family;field_8_charset             = source.field_8_charset;field_9_zero                = source.field_9_zero;field_11_font_name          = source.field_11_font_name;},public void cloneStyleFromFontRecord source field1fontheight          sourcefield1fontheightfield2attributes           sourcefield2attributesfield3colorpaletteindex  sourcefield3colorpaletteindexfield4boldweight          sourcefield4boldweightfield5supersubscript     sourcefield5supersubscriptfield6underline            sourcefield6underlinefield7family               sourcefield7familyfield8charset              sourcefield8charsetfield9zero                 sourcefield9zerofield11fontname           sourcefield11fontname
"public BrazilianStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public BrazilianStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public static byte lookupCharacterClass(String characterClassName) {return (byte) CharacterClass.valueOf(characterClassName).ordinal();},public static byte lookupCharacterClassString characterClassName return byte CharacterClassvalueOfcharacterClassNameordinal
public ArrayList(int capacity) {if (capacity < 0) {throw new IllegalArgumentException();}array = (capacity == 0 ? EmptyArray.OBJECT : new Object[capacity]);},public ArrayListint capacity if capacity  0 throw new IllegalArgumentExceptionarray  capacity  0  EmptyArrayOBJECT  new Objectcapacity
public CreateHumanTaskUiResult createHumanTaskUi(CreateHumanTaskUiRequest request) {request = beforeClientExecution(request);return executeCreateHumanTaskUi(request);},public CreateHumanTaskUiResult createHumanTaskUiCreateHumanTaskUiRequest request request  beforeClientExecutionrequestreturn executeCreateHumanTaskUirequest
public GetSoftwareUpdatesResult getSoftwareUpdates(GetSoftwareUpdatesRequest request) {request = beforeClientExecution(request);return executeGetSoftwareUpdates(request);},public GetSoftwareUpdatesResult getSoftwareUpdatesGetSoftwareUpdatesRequest request request  beforeClientExecutionrequestreturn executeGetSoftwareUpdatesrequest
public NamePtg createPtg() {return new NamePtg(_index);},public NamePtg createPtg return new NamePtgindex
public ListFlowDefinitionsResult listFlowDefinitions(ListFlowDefinitionsRequest request) {request = beforeClientExecution(request);return executeListFlowDefinitions(request);},public ListFlowDefinitionsResult listFlowDefinitionsListFlowDefinitionsRequest request request  beforeClientExecutionrequestreturn executeListFlowDefinitionsrequest
"public LittleEndianOutput createDelayedOutput(int size) {checkPosition(size);LittleEndianOutput result = new LittleEndianByteArrayOutputStream(_buf, _writeIndex, size);_writeIndex += size;return result;}",public LittleEndianOutput createDelayedOutputint size checkPositionsizeLittleEndianOutput result  new LittleEndianByteArrayOutputStreambuf writeIndex sizewriteIndex  sizereturn result
public long get(int index) {return current.get(index);},public long getint index return currentgetindex
"public StemmerOverrideFilterFactory(Map<String,String> args) {super(args);dictionaryFiles = get(args, ""dictionary"");ignoreCase = getBoolean(args, ""ignoreCase"", false);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public StemmerOverrideFilterFactoryMapStringString args superargsdictionaryFiles  getargs dictionaryignoreCase  getBooleanargs ignoreCase falseif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public long get(int index) {final int o = index / 12;final int b = index % 12;final int shift = b * 5;return (blocks[o] >>> shift) & 31L;},public long getint index final int o  index  12final int b  index  12final int shift  b  5return blockso  shift  31L
public DeleteDeploymentGroupResult deleteDeploymentGroup(DeleteDeploymentGroupRequest request) {request = beforeClientExecution(request);return executeDeleteDeploymentGroup(request);},public DeleteDeploymentGroupResult deleteDeploymentGroupDeleteDeploymentGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteDeploymentGrouprequest
"public void setNamespaceAware(boolean awareness) {features.put (XmlPullParser.FEATURE_PROCESS_NAMESPACES, awareness);}",public void setNamespaceAwareboolean awareness featuresput XmlPullParserFEATUREPROCESSNAMESPACES awareness
public static List<String> getBuiltinFormats() {return Arrays.asList(_builtinFormats);},public static ListString getBuiltinFormats return ArraysasListbuiltinFormats
public Snapshot authorizeSnapshotAccess(AuthorizeSnapshotAccessRequest request) {request = beforeClientExecution(request);return executeAuthorizeSnapshotAccess(request);},public Snapshot authorizeSnapshotAccessAuthorizeSnapshotAccessRequest request request  beforeClientExecutionrequestreturn executeAuthorizeSnapshotAccessrequest
"public void split() throws IOException {boolean success = false;DirectoryReader Reader = DirectoryReader.open(input);try {createIndex(config1, dir1, Reader, docsInFirstIndex, false);createIndex(config2, dir2, Reader, docsInFirstIndex, true);success = true;} finally {if (success) {IOUtils.close(Reader);} else {IOUtils.closeWhileHandlingException(Reader);}}}",public void split throws IOException boolean success  falseDirectoryReader Reader  DirectoryReaderopeninputtry createIndexconfig1 dir1 Reader docsInFirstIndex falsecreateIndexconfig2 dir2 Reader docsInFirstIndex truesuccess  true finally if success IOUtilscloseReader else IOUtilscloseWhileHandlingExceptionReader
@Override public boolean equals(Object object) {return mapEntry.equals(object);},Override public boolean equalsObject object return mapEntryequalsobject
public synchronized E pop() {if (elementCount == 0) {throw new EmptyStackException();}final int index = --elementCount;final E obj = (E) elementData[index];elementData[index] = null;modCount++;return obj;},public synchronized E pop if elementCount  0 throw new EmptyStackExceptionfinal int index  elementCountfinal E obj  E elementDataindexelementDataindex  nullmodCountreturn obj
public ListHealthChecksResult listHealthChecks() {return listHealthChecks(new ListHealthChecksRequest());},public ListHealthChecksResult listHealthChecks return listHealthChecksnew ListHealthChecksRequest
public boolean equals(Object obj) {if (!(obj instanceof File)) {return false;}return path.equals(((File) obj).getPath());},public boolean equalsObject obj if obj instanceof File return falsereturn pathequalsFile objgetPath
"public ListPhotoStoresRequest() {super(""CloudPhoto"", ""2017-07-11"", ""ListPhotoStores"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public ListPhotoStoresRequest superCloudPhoto 20170711 ListPhotoStores cloudphotosetProtocolProtocolTypeHTTPS
public PutAccessControlRuleResult putAccessControlRule(PutAccessControlRuleRequest request) {request = beforeClientExecution(request);return executePutAccessControlRule(request);},public PutAccessControlRuleResult putAccessControlRulePutAccessControlRuleRequest request request  beforeClientExecutionrequestreturn executePutAccessControlRulerequest
public StopTrainingEntityRecognizerResult stopTrainingEntityRecognizer(StopTrainingEntityRecognizerRequest request) {request = beforeClientExecution(request);return executeStopTrainingEntityRecognizer(request);},public StopTrainingEntityRecognizerResult stopTrainingEntityRecognizerStopTrainingEntityRecognizerRequest request request  beforeClientExecutionrequestreturn executeStopTrainingEntityRecognizerrequest
public GetRevisionResult getRevision(GetRevisionRequest request) {request = beforeClientExecution(request);return executeGetRevision(request);},public GetRevisionResult getRevisionGetRevisionRequest request request  beforeClientExecutionrequestreturn executeGetRevisionrequest
"public HSSFPicture createPicture(HSSFChildAnchor anchor, int pictureIndex) {HSSFPicture shape = new HSSFPicture(this, anchor);shape.setParent(this);shape.setAnchor(anchor);shape.setPictureIndex(pictureIndex);shapes.add(shape);onCreate(shape);EscherSpRecord sp = shape.getEscherContainer().getChildById(EscherSpRecord.RECORD_ID);if (shape.getAnchor().isHorizontallyFlipped()){sp.setFlags(sp.getFlags() | EscherSpRecord.FLAG_FLIPHORIZ);}if (shape.getAnchor().isVerticallyFlipped()){sp.setFlags(sp.getFlags() | EscherSpRecord.FLAG_FLIPVERT);}return shape;}",public HSSFPicture createPictureHSSFChildAnchor anchor int pictureIndex HSSFPicture shape  new HSSFPicturethis anchorshapesetParentthisshapesetAnchoranchorshapesetPictureIndexpictureIndexshapesaddshapeonCreateshapeEscherSpRecord sp  shapegetEscherContainergetChildByIdEscherSpRecordRECORDIDif shapegetAnchorisHorizontallyFlippedspsetFlagsspgetFlags  EscherSpRecordFLAGFLIPHORIZif shapegetAnchorisVerticallyFlippedspsetFlagsspgetFlags  EscherSpRecordFLAGFLIPVERTreturn shape
public RecordSizingVisitor() {_totalSize = 0;},public RecordSizingVisitor totalSize  0
public UpdateApplicationSettingsResult updateApplicationSettings(UpdateApplicationSettingsRequest request) {request = beforeClientExecution(request);return executeUpdateApplicationSettings(request);},public UpdateApplicationSettingsResult updateApplicationSettingsUpdateApplicationSettingsRequest request request  beforeClientExecutionrequestreturn executeUpdateApplicationSettingsrequest
public LogCommand addPath(String path) {checkCallable();pathFilters.add(PathFilter.create(path));return this;},public LogCommand addPathString path checkCallablepathFiltersaddPathFiltercreatepathreturn this
public GetRelationalDatabaseLogStreamsResult getRelationalDatabaseLogStreams(GetRelationalDatabaseLogStreamsRequest request) {request = beforeClientExecution(request);return executeGetRelationalDatabaseLogStreams(request);},public GetRelationalDatabaseLogStreamsResult getRelationalDatabaseLogStreamsGetRelationalDatabaseLogStreamsRequest request request  beforeClientExecutionrequestreturn executeGetRelationalDatabaseLogStreamsrequest
public FloatBuffer compact() {if (byteBuffer.isReadOnly()) {throw new ReadOnlyBufferException();}byteBuffer.limit(limit * SizeOf.FLOAT);byteBuffer.position(position * SizeOf.FLOAT);byteBuffer.compact();byteBuffer.clear();position = limit - position;limit = capacity;mark = UNSET_MARK;return this;},public FloatBuffer compact if byteBufferisReadOnly throw new ReadOnlyBufferExceptionbyteBufferlimitlimit  SizeOfFLOATbyteBufferpositionposition  SizeOfFLOATbyteBuffercompactbyteBufferclearposition  limit  positionlimit  capacitymark  UNSETMARKreturn this
public void serialize(LittleEndianOutput out) {out.writeInt(field_1_lineColor);out.writeShort(field_2_linePattern);out.writeShort(field_3_weight);out.writeShort(field_4_format);out.writeShort(field_5_colourPaletteIndex);},public void serializeLittleEndianOutput out outwriteIntfield1lineColoroutwriteShortfield2linePatternoutwriteShortfield3weightoutwriteShortfield4formatoutwriteShortfield5colourPaletteIndex
public DBInstanceAutomatedBackup deleteDBInstanceAutomatedBackup(DeleteDBInstanceAutomatedBackupRequest request) {request = beforeClientExecution(request);return executeDeleteDBInstanceAutomatedBackup(request);},public DBInstanceAutomatedBackup deleteDBInstanceAutomatedBackupDeleteDBInstanceAutomatedBackupRequest request request  beforeClientExecutionrequestreturn executeDeleteDBInstanceAutomatedBackuprequest
public MultiSimilarity(Similarity sims[]) {this.sims = sims;},public MultiSimilaritySimilarity sims thissims  sims
"public final Explanation explain(BasicStats stats, double tfn) {return Explanation.match((float) (scoreTimes1pTfn(stats) / (1 + tfn)),getClass().getSimpleName()+ "", computed as (F + 1) / (n * (tfn + 1)) from:"",Explanation.match((float) tfn, ""tfn, normalized term frequency""),Explanation.match(stats.getTotalTermFreq(),""F, total number of occurrences of term across all documents + 1""),Explanation.match(stats.getDocFreq(),""n, number of documents containing term + 1""),Explanation.match((float) tfn, ""tfn, normalized term frequency""));}",public final Explanation explainBasicStats stats double tfn return Explanationmatchfloat scoreTimes1pTfnstats  1  tfngetClassgetSimpleName  computed as F  1  n  tfn  1 fromExplanationmatchfloat tfn tfn normalized term frequencyExplanationmatchstatsgetTotalTermFreqF total number of occurrences of term across all documents  1ExplanationmatchstatsgetDocFreqn number of documents containing term  1Explanationmatchfloat tfn tfn normalized term frequency
public GetNodeResult getNode(GetNodeRequest request) {request = beforeClientExecution(request);return executeGetNode(request);},public GetNodeResult getNodeGetNodeRequest request request  beforeClientExecutionrequestreturn executeGetNoderequest
public CreateCapacityProviderResult createCapacityProvider(CreateCapacityProviderRequest request) {request = beforeClientExecution(request);return executeCreateCapacityProvider(request);},public CreateCapacityProviderResult createCapacityProviderCreateCapacityProviderRequest request request  beforeClientExecutionrequestreturn executeCreateCapacityProviderrequest
public String[] listAll() throws IOException {List<String> files = new ArrayList<>();NoSuchFileException exc = null;try {for(String f : primaryDir.listAll()) {String ext = getExtension(f);if (primaryExtensions.contains(ext)) {files.add(f);}}} catch (NoSuchFileException e) {exc = e;}try {for(String f : secondaryDir.listAll()) {String ext = getExtension(f);if (primaryExtensions.contains(ext) == false) {files.add(f);}}} catch (NoSuchFileException e) {if (exc != null) {throw exc;}if (files.isEmpty()) {throw e;}}if (exc != null && files.isEmpty()) {throw exc;}String[] result = files.toArray(new String[files.size()]);Arrays.sort(result);return result;},public String listAll throws IOException ListString files  new ArrayListNoSuchFileException exc  nulltry forString f  primaryDirlistAll String ext  getExtensionfif primaryExtensionscontainsext filesaddf catch NoSuchFileException e exc  etry forString f  secondaryDirlistAll String ext  getExtensionfif primaryExtensionscontainsext  false filesaddf catch NoSuchFileException e if exc  null throw excif filesisEmpty throw eif exc  null  filesisEmpty throw excString result  filestoArraynew StringfilessizeArrayssortresultreturn result
public int readUByte() {return readByte() & 0xFF;},public int readUByte return readByte  0xFF
public NumberEval(double value) {_value = value;},public NumberEvaldouble value value  value
@Override public Iterator<E> iterator() {synchronized (mutex) {return c.iterator();}},Override public IteratorE iterator synchronized mutex return citerator
public String getInflectionType(int wordId) {return null;},public String getInflectionTypeint wordId return null
public GetDeliverabilityDashboardOptionsResult getDeliverabilityDashboardOptions(GetDeliverabilityDashboardOptionsRequest request) {request = beforeClientExecution(request);return executeGetDeliverabilityDashboardOptions(request);},public GetDeliverabilityDashboardOptionsResult getDeliverabilityDashboardOptionsGetDeliverabilityDashboardOptionsRequest request request  beforeClientExecutionrequestreturn executeGetDeliverabilityDashboardOptionsrequest
"public static double getExcelDate(LocalDateTime date) {return getExcelDate(date, false);}",public static double getExcelDateLocalDateTime date return getExcelDatedate false
"public String getBaseForm(int wordId, char surface[], int off, int len) {return null; }",public String getBaseFormint wordId char surface int off int len return null 
public DescribeDhcpOptionsResult describeDhcpOptions() {return describeDhcpOptions(new DescribeDhcpOptionsRequest());},public DescribeDhcpOptionsResult describeDhcpOptions return describeDhcpOptionsnew DescribeDhcpOptionsRequest
"public FormatRecord(int indexCode, String fs) {field_1_index_code = indexCode;field_4_formatstring = fs;field_3_hasMultibyte = StringUtil.hasMultibyte(fs);}",public FormatRecordint indexCode String fs field1indexcode  indexCodefield4formatstring  fsfield3hasMultibyte  StringUtilhasMultibytefs
"public String getPrintArea(int sheetIndex) {NameRecord name = workbook.getSpecificBuiltinRecord(NameRecord.BUILTIN_PRINT_AREA, sheetIndex+1);if (name == null) {return null;}return HSSFFormulaParser.toFormulaString(this, name.getNameDefinition());}",public String getPrintAreaint sheetIndex NameRecord name  workbookgetSpecificBuiltinRecordNameRecordBUILTINPRINTAREA sheetIndex1if name  null return nullreturn HSSFFormulaParsertoFormulaStringthis namegetNameDefinition
public CreateLoadBalancerResult createLoadBalancer(CreateLoadBalancerRequest request) {request = beforeClientExecution(request);return executeCreateLoadBalancer(request);},public CreateLoadBalancerResult createLoadBalancerCreateLoadBalancerRequest request request  beforeClientExecutionrequestreturn executeCreateLoadBalancerrequest
public GetVoiceConnectorTerminationHealthResult getVoiceConnectorTerminationHealth(GetVoiceConnectorTerminationHealthRequest request) {request = beforeClientExecution(request);return executeGetVoiceConnectorTerminationHealth(request);},public GetVoiceConnectorTerminationHealthResult getVoiceConnectorTerminationHealthGetVoiceConnectorTerminationHealthRequest request request  beforeClientExecutionrequestreturn executeGetVoiceConnectorTerminationHealthrequest
public CRNCountRecord(RecordInputStream in) {field_1_number_crn_records = in.readShort();if(field_1_number_crn_records < 0) {field_1_number_crn_records = (short)-field_1_number_crn_records;}field_2_sheet_table_index = in.readShort();},public CRNCountRecordRecordInputStream in field1numbercrnrecords  inreadShortiffield1numbercrnrecords  0 field1numbercrnrecords  shortfield1numbercrnrecordsfield2sheettableindex  inreadShort
public BOFRecord(RecordInputStream in) {field_1_version  = in.readShort();field_2_type     = in.readShort();if (in.remaining() >= 2) {field_3_build = in.readShort();}if (in.remaining() >= 2) {field_4_year = in.readShort();}if (in.remaining() >= 4) {field_5_history  = in.readInt();}if (in.remaining() >= 4) {field_6_rversion = in.readInt();}},public BOFRecordRecordInputStream in field1version   inreadShortfield2type      inreadShortif inremaining  2 field3build  inreadShortif inremaining  2 field4year  inreadShortif inremaining  4 field5history   inreadIntif inremaining  4 field6rversion  inreadInt
"public AcsRequest buildRequest() {if (uriPattern != null) {CommonRoaRequest request = new CommonRoaRequest(product);request.setSysUriPattern(uriPattern);for (String pathParamKey : pathParameters.keySet()) {request.putPathParameter(pathParamKey, pathParameters.get(pathParamKey));}fillParams(request);return request;} else {CommonRpcRequest request = new CommonRpcRequest(product);fillParams(request);return request;}}",public AcsRequest buildRequest if uriPattern  null CommonRoaRequest request  new CommonRoaRequestproductrequestsetSysUriPatternuriPatternfor String pathParamKey  pathParameterskeySet requestputPathParameterpathParamKey pathParametersgetpathParamKeyfillParamsrequestreturn request else CommonRpcRequest request  new CommonRpcRequestproductfillParamsrequestreturn request
public void undeleteAll()  {for (FakeDeleteLeafIndexReader r : getSequentialSubReaders()) {r.undeleteAll();}},public void undeleteAll  for FakeDeleteLeafIndexReader r  getSequentialSubReaders rundeleteAll
"public final String GetImage() {return new String(buffer, tokenStart, bufferPosition - tokenStart);}",public final String GetImage return new Stringbuffer tokenStart bufferPosition  tokenStart
public DescribeComponentResult describeComponent(DescribeComponentRequest request) {request = beforeClientExecution(request);return executeDescribeComponent(request);},public DescribeComponentResult describeComponentDescribeComponentRequest request request  beforeClientExecutionrequestreturn executeDescribeComponentrequest
"public RoaringDocIdSet build() {flush();return new RoaringDocIdSet(sets, cardinality);}",public RoaringDocIdSet build flushreturn new RoaringDocIdSetsets cardinality
public TokenStream create(TokenStream input) {return new GermanNormalizationFilter(input);},public TokenStream createTokenStream input return new GermanNormalizationFilterinput
"public DrillSideways(IndexSearcher searcher, FacetsConfig config, TaxonomyReader taxoReader,SortedSetDocValuesReaderState state) {this(searcher, config, taxoReader, state, null);}",public DrillSidewaysIndexSearcher searcher FacetsConfig config TaxonomyReader taxoReaderSortedSetDocValuesReaderState state thissearcher config taxoReader state null
public DescribeAnalysisSchemesResult describeAnalysisSchemes(DescribeAnalysisSchemesRequest request) {request = beforeClientExecution(request);return executeDescribeAnalysisSchemes(request);},public DescribeAnalysisSchemesResult describeAnalysisSchemesDescribeAnalysisSchemesRequest request request  beforeClientExecutionrequestreturn executeDescribeAnalysisSchemesrequest
public PutTargetsResult putTargets(PutTargetsRequest request) {request = beforeClientExecution(request);return executePutTargets(request);},public PutTargetsResult putTargetsPutTargetsRequest request request  beforeClientExecutionrequestreturn executePutTargetsrequest
public RevokeIpRulesResult revokeIpRules(RevokeIpRulesRequest request) {request = beforeClientExecution(request);return executeRevokeIpRules(request);},public RevokeIpRulesResult revokeIpRulesRevokeIpRulesRequest request request  beforeClientExecutionrequestreturn executeRevokeIpRulesrequest
public RegisterGameServerResult registerGameServer(RegisterGameServerRequest request) {request = beforeClientExecution(request);return executeRegisterGameServer(request);},public RegisterGameServerResult registerGameServerRegisterGameServerRequest request request  beforeClientExecutionrequestreturn executeRegisterGameServerrequest
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeByte(_options);out.writeShort(_data);int[] jt = _jumpTable;if (jt != null) {for (int i = 0; i < jt.length; i++) {out.writeShort(jt[i]);}out.writeShort(_chooseFuncOffset);}},public void writeLittleEndianOutput out outwriteBytesid  getPtgClassoutwriteByteoptionsoutwriteShortdataint jt  jumpTableif jt  null for int i  0 i  jtlength i outwriteShortjtioutwriteShortchooseFuncOffset
public int getCellsPnt() {Iterator<Character> i = cells.keySet().iterator();int size = 0;for (; i.hasNext();) {Character c = i.next();Cell e = at(c);if (e.ref >= 0) {size++;}}return size;},public int getCellsPnt IteratorCharacter i  cellskeySetiteratorint size  0for  ihasNext Character c  inextCell e  atcif eref  0 sizereturn size
public E removeFirst() {return removeFirstImpl();},public E removeFirst return removeFirstImpl
"public String toString() {if (getChildren() == null || getChildren().size() == 0)return ""<boolean operation='default'/>"";StringBuilder sb = new StringBuilder();sb.append(""<boolean operation='default'>"");for (QueryNode child : getChildren()) {sb.append(""\n"");sb.append(child.toString());}sb.append(""\n</boolean>"");return sb.toString();}",public String toString if getChildren  null  getChildrensize  0return boolean operationdefaultStringBuilder sb  new StringBuildersbappendboolean operationdefaultfor QueryNode child  getChildren sbappendnsbappendchildtoStringsbappendnbooleanreturn sbtoString
"public TokenStream create(TokenStream input) {return new TruncateTokenFilter(input, prefixLength);}",public TokenStream createTokenStream input return new TruncateTokenFilterinput prefixLength
"public String getErrorDisplay(int c) {String s = String.valueOf((char)c);switch ( c ) {case Token.EOF :s = ""<EOF>"";break;case '\n' :s = ""\\n"";break;case '\t' :s = ""\\t"";break;case '\r' :s = ""\\r"";break;}return s;}",public String getErrorDisplayint c String s  StringvalueOfcharcswitch  c  case TokenEOF s  EOFbreakcase n s  nbreakcase t s  tbreakcase r s  rbreakreturn s
public CreateContactResult createContact(CreateContactRequest request) {request = beforeClientExecution(request);return executeCreateContact(request);},public CreateContactResult createContactCreateContactRequest request request  beforeClientExecutionrequestreturn executeCreateContactrequest
"public Transition[][] getSortedTransitions() {int numStates = getNumStates();Transition[][] transitions = new Transition[numStates][];for(int s=0;s<numStates;s++) {int numTransitions = getNumTransitions(s);transitions[s] = new Transition[numTransitions];for(int t=0;t<numTransitions;t++) {Transition transition = new Transition();getTransition(s, t, transition);transitions[s][t] = transition;}}return transitions;}",public Transition getSortedTransitions int numStates  getNumStatesTransition transitions  new TransitionnumStatesforint s0snumStatess int numTransitions  getNumTransitionsstransitionss  new TransitionnumTransitionsforint t0tnumTransitionst Transition transition  new TransitiongetTransitions t transitiontransitionsst  transitionreturn transitions
public DescribeAccountModificationsResult describeAccountModifications(DescribeAccountModificationsRequest request) {request = beforeClientExecution(request);return executeDescribeAccountModifications(request);},public DescribeAccountModificationsResult describeAccountModificationsDescribeAccountModificationsRequest request request  beforeClientExecutionrequestreturn executeDescribeAccountModificationsrequest
public ListSolutionVersionsResult listSolutionVersions(ListSolutionVersionsRequest request) {request = beforeClientExecution(request);return executeListSolutionVersions(request);},public ListSolutionVersionsResult listSolutionVersionsListSolutionVersionsRequest request request  beforeClientExecutionrequestreturn executeListSolutionVersionsrequest
"public void finish(FieldInfos fis, int numDocs) throws IOException {if (numDocsWritten != numDocs) {throw new RuntimeException(""mergeFields produced an invalid result: docCount is "" + numDocs+ "" but only saw "" + numDocsWritten + "" file="" + out.toString() + ""; now aborting this merge to prevent index corruption"");}write(END);newLine();SimpleTextUtil.writeChecksum(out, scratch);}",public void finishFieldInfos fis int numDocs throws IOException if numDocsWritten  numDocs throw new RuntimeExceptionmergeFields produced an invalid result docCount is   numDocs  but only saw   numDocsWritten   file  outtoString   now aborting this merge to prevent index corruptionwriteENDnewLineSimpleTextUtilwriteChecksumout scratch
"public SetVaultNotificationsRequest(String vaultName, VaultNotificationConfig vaultNotificationConfig) {setVaultName(vaultName);setVaultNotificationConfig(vaultNotificationConfig);}",public SetVaultNotificationsRequestString vaultName VaultNotificationConfig vaultNotificationConfig setVaultNamevaultNamesetVaultNotificationConfigvaultNotificationConfig
public Trie reduce(Reduce by) {List<Trie> h = new ArrayList<>();for (Trie trie : tries)h.add(trie.reduce(by));MultiTrie m = new MultiTrie(forward);m.tries = h;return m;},public Trie reduceReduce by ListTrie h  new ArrayListfor Trie trie  trieshaddtriereducebyMultiTrie m  new MultiTrieforwardmtries  hreturn m
public void println() {synchronized (lock) {print(System.lineSeparator());if (autoFlush) {flush();}}},public void println synchronized lock printSystemlineSeparatorif autoFlush flush
public final void writeChar(int val) throws IOException {writeShort(val);},public final void writeCharint val throws IOException writeShortval
public String toFormulaString(String[] operands){StringBuilder buffer = new StringBuilder();buffer.append(operands[ 0 ]);buffer.append(GREATERTHAN);buffer.append(operands[ 1 ]);return buffer.toString();},public String toFormulaStringString operandsStringBuilder buffer  new StringBuilderbufferappendoperands 0 bufferappendGREATERTHANbufferappendoperands 1 return buffertoString
public UpdateDeploymentResult updateDeployment(UpdateDeploymentRequest request) {request = beforeClientExecution(request);return executeUpdateDeployment(request);},public UpdateDeploymentResult updateDeploymentUpdateDeploymentRequest request request  beforeClientExecutionrequestreturn executeUpdateDeploymentrequest
public ListRoutingProfilesResult listRoutingProfiles(ListRoutingProfilesRequest request) {request = beforeClientExecution(request);return executeListRoutingProfiles(request);},public ListRoutingProfilesResult listRoutingProfilesListRoutingProfilesRequest request request  beforeClientExecutionrequestreturn executeListRoutingProfilesrequest
public boolean isFormulaSame(SharedFormulaRecord other) {return field_7_parsed_expr.isSame(other.field_7_parsed_expr);},public boolean isFormulaSameSharedFormulaRecord other return field7parsedexprisSameotherfield7parsedexpr
public static byte getType(int ch) {switch (Character.getType(ch)) {case Character.UPPERCASE_LETTER: return UPPER;case Character.LOWERCASE_LETTER: return LOWER;case Character.TITLECASE_LETTER:case Character.MODIFIER_LETTER:case Character.OTHER_LETTER:case Character.NON_SPACING_MARK:case Character.ENCLOSING_MARK:  case Character.COMBINING_SPACING_MARK:return ALPHA;case Character.DECIMAL_DIGIT_NUMBER:case Character.LETTER_NUMBER:case Character.OTHER_NUMBER:return DIGIT;case Character.SURROGATE:  return ALPHA|DIGIT;default: return SUBWORD_DELIM;}},public static byte getTypeint ch switch CharactergetTypech case CharacterUPPERCASELETTER return UPPERcase CharacterLOWERCASELETTER return LOWERcase CharacterTITLECASELETTERcase CharacterMODIFIERLETTERcase CharacterOTHERLETTERcase CharacterNONSPACINGMARKcase CharacterENCLOSINGMARK  case CharacterCOMBININGSPACINGMARKreturn ALPHAcase CharacterDECIMALDIGITNUMBERcase CharacterLETTERNUMBERcase CharacterOTHERNUMBERreturn DIGITcase CharacterSURROGATE  return ALPHADIGITdefault return SUBWORDDELIM
public CreateImageResult createImage(CreateImageRequest request) {request = beforeClientExecution(request);return executeCreateImage(request);},public CreateImageResult createImageCreateImageRequest request request  beforeClientExecutionrequestreturn executeCreateImagerequest
public void assume(RevCommit c) {if (c != null)assume.add(c);},public void assumeRevCommit c if c  nullassumeaddc
public DeleteTagsResult deleteTags(DeleteTagsRequest request) {request = beforeClientExecution(request);return executeDeleteTags(request);},public DeleteTagsResult deleteTagsDeleteTagsRequest request request  beforeClientExecutionrequestreturn executeDeleteTagsrequest
public ListTemplateVersionsResult listTemplateVersions(ListTemplateVersionsRequest request) {request = beforeClientExecution(request);return executeListTemplateVersions(request);},public ListTemplateVersionsResult listTemplateVersionsListTemplateVersionsRequest request request  beforeClientExecutionrequestreturn executeListTemplateVersionsrequest
"public String toString() {return ""("" + x + "", "" + y + "")""; }",public String toString return   x     y   
public DisjunctionMaxQueryBuilder(QueryBuilder factory) {this.factory = factory;},public DisjunctionMaxQueryBuilderQueryBuilder factory thisfactory  factory
public PutNotificationConfigurationResult putNotificationConfiguration(PutNotificationConfigurationRequest request) {request = beforeClientExecution(request);return executePutNotificationConfiguration(request);},public PutNotificationConfigurationResult putNotificationConfigurationPutNotificationConfigurationRequest request request  beforeClientExecutionrequestreturn executePutNotificationConfigurationrequest
"public RecognizeFlowerRequest() {super(""visionai-poc"", ""2020-04-08"", ""RecognizeFlower"");setMethod(MethodType.POST);}",public RecognizeFlowerRequest supervisionaipoc 20200408 RecognizeFlowersetMethodMethodTypePOST
"public IndexFormatTooOldException(String resourceDescription, int version, int minVersion, int maxVersion) {super(""Format version is not supported (resource "" + resourceDescription + ""): "" +version + "" (needs to be between "" + minVersion + "" and "" + maxVersion +""). This version of Lucene only supports indexes created with release 8.0 and later."");this.resourceDescription = resourceDescription;this.version = version;this.minVersion = minVersion;this.maxVersion = maxVersion;this.reason = null;}",public IndexFormatTooOldExceptionString resourceDescription int version int minVersion int maxVersion superFormat version is not supported resource   resourceDescription    version   needs to be between   minVersion   and   maxVersion  This version of Lucene only supports indexes created with release 80 and laterthisresourceDescription  resourceDescriptionthisversion  versionthisminVersion  minVersionthismaxVersion  maxVersionthisreason  null
"public void add(int el) {if ( readonly ) throw new IllegalStateException(""can't alter readonly IntervalSet"");add(el,el);}",public void addint el if  readonly  throw new IllegalStateExceptioncant alter readonly IntervalSetaddelel
@Override public final int read(byte[] buffer) throws IOException {return super.read(buffer);},Override public final int readbyte buffer throws IOException return superreadbuffer
@Override public boolean remove(Object key) {if (!contains(key)) {return false;}removeFromBothMaps(key);return true;},Override public boolean removeObject key if containskey return falseremoveFromBothMapskeyreturn true
public DescribeClusterSecurityGroupsResult describeClusterSecurityGroups(DescribeClusterSecurityGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeClusterSecurityGroups(request);},public DescribeClusterSecurityGroupsResult describeClusterSecurityGroupsDescribeClusterSecurityGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeClusterSecurityGroupsrequest
public TokenStream create(TokenStream input) {return new ScandinavianFoldingFilter(input);},public TokenStream createTokenStream input return new ScandinavianFoldingFilterinput
public DeleteNotebookInstanceLifecycleConfigResult deleteNotebookInstanceLifecycleConfig(DeleteNotebookInstanceLifecycleConfigRequest request) {request = beforeClientExecution(request);return executeDeleteNotebookInstanceLifecycleConfig(request);},public DeleteNotebookInstanceLifecycleConfigResult deleteNotebookInstanceLifecycleConfigDeleteNotebookInstanceLifecycleConfigRequest request request  beforeClientExecutionrequestreturn executeDeleteNotebookInstanceLifecycleConfigrequest
public DescribeComponentConfigurationRecommendationResult describeComponentConfigurationRecommendation(DescribeComponentConfigurationRecommendationRequest request) {request = beforeClientExecution(request);return executeDescribeComponentConfigurationRecommendation(request);},public DescribeComponentConfigurationRecommendationResult describeComponentConfigurationRecommendationDescribeComponentConfigurationRecommendationRequest request request  beforeClientExecutionrequestreturn executeDescribeComponentConfigurationRecommendationrequest
public SimpleMergedSegmentWarmer(InfoStream infoStream) {this.infoStream = infoStream;},public SimpleMergedSegmentWarmerInfoStream infoStream thisinfoStream  infoStream
public int nextIndex() {return pos + 1;},public int nextIndex return pos  1
"public ThaiTokenizerFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public ThaiTokenizerFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public int doLogic() throws Exception {if (name==null || value==null) {throw new Exception(getName()+"" - undefined name or value: name=""+name+"" value=""+value);}getRunData().getConfig().set(name,value);return 0;}",public int doLogic throws Exception if namenull  valuenull throw new ExceptiongetName  undefined name or value namename valuevaluegetRunDatagetConfigsetnamevaluereturn 0
"public void setPrintArea(int sheetIndex, String reference){NameRecord name = workbook.getSpecificBuiltinRecord(NameRecord.BUILTIN_PRINT_AREA, sheetIndex+1);if (name == null) {name = workbook.createBuiltInName(NameRecord.BUILTIN_PRINT_AREA, sheetIndex+1);}String[] parts = COMMA_PATTERN.split(reference);StringBuilder sb = new StringBuilder(32);for (int i = 0; i < parts.length; i++) {if(i>0) {sb.append("","");}SheetNameFormatter.appendFormat(sb, getSheetName(sheetIndex));sb.append(""!"");sb.append(parts[i]);}name.setNameDefinition(HSSFFormulaParser.parse(sb.toString(), this, FormulaType.NAMEDRANGE, sheetIndex));}",public void setPrintAreaint sheetIndex String referenceNameRecord name  workbookgetSpecificBuiltinRecordNameRecordBUILTINPRINTAREA sheetIndex1if name  null name  workbookcreateBuiltInNameNameRecordBUILTINPRINTAREA sheetIndex1String parts  COMMAPATTERNsplitreferenceStringBuilder sb  new StringBuilder32for int i  0 i  partslength i ifi0 sbappendSheetNameFormatterappendFormatsb getSheetNamesheetIndexsbappendsbappendpartsinamesetNameDefinitionHSSFFormulaParserparsesbtoString this FormulaTypeNAMEDRANGE sheetIndex
public String getPartOfSpeech() {return dictionary.getPartOfSpeech(wordId);},public String getPartOfSpeech return dictionarygetPartOfSpeechwordId
public synchronized static DefaultProfile getProfile(String regionId) {return new DefaultProfile(regionId);},public synchronized static DefaultProfile getProfileString regionId return new DefaultProfileregionId
"public TurkishLowerCaseFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public TurkishLowerCaseFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public static boolean equals(double[] array1, double[] array2) {if (array1 == array2) {return true;}if (array1 == null || array2 == null || array1.length != array2.length) {return false;}for (int i = 0; i < array1.length; i++) {if (Double.doubleToLongBits(array1[i]) != Double.doubleToLongBits(array2[i])) {return false;}}return true;}",public static boolean equalsdouble array1 double array2 if array1  array2 return trueif array1  null  array2  null  array1length  array2length return falsefor int i  0 i  array1length i if DoubledoubleToLongBitsarray1i  DoubledoubleToLongBitsarray2i return falsereturn true
"public ShortField(final int offset)throws ArrayIndexOutOfBoundsException{if (offset < 0){throw new ArrayIndexOutOfBoundsException(""Illegal offset: ""+ offset);}_offset = offset;}",public ShortFieldfinal int offsetthrows ArrayIndexOutOfBoundsExceptionif offset  0throw new ArrayIndexOutOfBoundsExceptionIllegal offset  offsetoffset  offset
"public int getEffectivePort() {return getEffectivePort(scheme, port);}",public int getEffectivePort return getEffectivePortscheme port
public GetDiskSnapshotsResult getDiskSnapshots(GetDiskSnapshotsRequest request) {request = beforeClientExecution(request);return executeGetDiskSnapshots(request);},public GetDiskSnapshotsResult getDiskSnapshotsGetDiskSnapshotsRequest request request  beforeClientExecutionrequestreturn executeGetDiskSnapshotsrequest
"public ParseTreePatternMatcher(Lexer lexer, Parser parser) {this.lexer = lexer;this.parser = parser;}",public ParseTreePatternMatcherLexer lexer Parser parser thislexer  lexerthisparser  parser
"public PassageScorer(float k1, float b, float pivot) {this.k1 = k1;this.b = b;this.pivot = pivot;}",public PassageScorerfloat k1 float b float pivot thisk1  k1thisb  bthispivot  pivot
"public CreateTicketRequest() {super(""Ccs"", ""2017-10-01"", ""CreateTicket"", ""ccs"");setMethod(MethodType.POST);}",public CreateTicketRequest superCcs 20171001 CreateTicket ccssetMethodMethodTypePOST
public RejectTransitGatewayVpcAttachmentResult rejectTransitGatewayVpcAttachment(RejectTransitGatewayVpcAttachmentRequest request) {request = beforeClientExecution(request);return executeRejectTransitGatewayVpcAttachment(request);},public RejectTransitGatewayVpcAttachmentResult rejectTransitGatewayVpcAttachmentRejectTransitGatewayVpcAttachmentRequest request request  beforeClientExecutionrequestreturn executeRejectTransitGatewayVpcAttachmentrequest
public DeleteApnsChannelResult deleteApnsChannel(DeleteApnsChannelRequest request) {request = beforeClientExecution(request);return executeDeleteApnsChannel(request);},public DeleteApnsChannelResult deleteApnsChannelDeleteApnsChannelRequest request request  beforeClientExecutionrequestreturn executeDeleteApnsChannelrequest
"public Entry getEntry(final String name) throws FileNotFoundException {Entry rval = null;if (name != null) {rval = _byname.get(name);}if (rval == null) {if(_byname.containsKey(""Workbook"")) {throw new IllegalArgumentException(""The document is really a XLS file"");} else if(_byname.containsKey(""PowerPoint Document"")) {throw new IllegalArgumentException(""The document is really a PPT file"");} else if(_byname.containsKey(""VisioDocument"")) {throw new IllegalArgumentException(""The document is really a VSD file"");}throw new FileNotFoundException(""no such entry: \"""" + name+ ""\"", had: "" + _byname.keySet());}return rval;}",public Entry getEntryfinal String name throws FileNotFoundException Entry rval  nullif name  null rval  bynamegetnameif rval  null ifbynamecontainsKeyWorkbook throw new IllegalArgumentExceptionThe document is really a XLS file else ifbynamecontainsKeyPowerPoint Document throw new IllegalArgumentExceptionThe document is really a PPT file else ifbynamecontainsKeyVisioDocument throw new IllegalArgumentExceptionThe document is really a VSD filethrow new FileNotFoundExceptionno such entry   name  had   bynamekeySetreturn rval
public TokenStream create(TokenStream input) {return new FrenchMinimalStemFilter(input);},public TokenStream createTokenStream input return new FrenchMinimalStemFilterinput
public int getDecimalExponent() {return _relativeDecimalExponent+EXPONENT_OFFSET;},public int getDecimalExponent return relativeDecimalExponentEXPONENTOFFSET
public DescribeInstanceCreditSpecificationsResult describeInstanceCreditSpecifications(DescribeInstanceCreditSpecificationsRequest request) {request = beforeClientExecution(request);return executeDescribeInstanceCreditSpecifications(request);},public DescribeInstanceCreditSpecificationsResult describeInstanceCreditSpecificationsDescribeInstanceCreditSpecificationsRequest request request  beforeClientExecutionrequestreturn executeDescribeInstanceCreditSpecificationsrequest
public GetSendQuotaResult getSendQuota() {return getSendQuota(new GetSendQuotaRequest());},public GetSendQuotaResult getSendQuota return getSendQuotanew GetSendQuotaRequest
"public String toString() {return ""TERM: "" + brToString(termBytes);}",public String toString return TERM   brToStringtermBytes
public ListFacetNamesResult listFacetNames(ListFacetNamesRequest request) {request = beforeClientExecution(request);return executeListFacetNames(request);},public ListFacetNamesResult listFacetNamesListFacetNamesRequest request request  beforeClientExecutionrequestreturn executeListFacetNamesrequest
public PlainValueCellCacheEntry(ValueEval value) {updateValue(value);},public PlainValueCellCacheEntryValueEval value updateValuevalue
public PutEmailIdentityFeedbackAttributesResult putEmailIdentityFeedbackAttributes(PutEmailIdentityFeedbackAttributesRequest request) {request = beforeClientExecution(request);return executePutEmailIdentityFeedbackAttributes(request);},public PutEmailIdentityFeedbackAttributesResult putEmailIdentityFeedbackAttributesPutEmailIdentityFeedbackAttributesRequest request request  beforeClientExecutionrequestreturn executePutEmailIdentityFeedbackAttributesrequest
"public AbortMultipartUploadRequest(String vaultName, String uploadId) {setVaultName(vaultName);setUploadId(uploadId);}",public AbortMultipartUploadRequestString vaultName String uploadId setVaultNamevaultNamesetUploadIduploadId
public ResetDBParameterGroupRequest(String dBParameterGroupName) {setDBParameterGroupName(dBParameterGroupName);},public ResetDBParameterGroupRequestString dBParameterGroupName setDBParameterGroupNamedBParameterGroupName
"public HSSFClientAnchor createAnchor(int dx1, int dy1, int dx2, int dy2, int col1, int row1, int col2, int row2) {return new HSSFClientAnchor(dx1, dy1, dx2, dy2, (short) col1, row1, (short) col2, row2);}",public HSSFClientAnchor createAnchorint dx1 int dy1 int dx2 int dy2 int col1 int row1 int col2 int row2 return new HSSFClientAnchordx1 dy1 dx2 dy2 short col1 row1 short col2 row2
"public void updateCacheResult(ValueEval result) {int nFrames = _evaluationFrames.size();if (nFrames < 1) {throw new IllegalStateException(""Call to endEvaluate without matching call to startEvaluate"");}CellEvaluationFrame frame = _evaluationFrames.get(nFrames-1);if (result == ErrorEval.CIRCULAR_REF_ERROR && nFrames > 1) {return;}frame.updateFormulaResult(result);}",public void updateCacheResultValueEval result int nFrames  evaluationFramessizeif nFrames  1 throw new IllegalStateExceptionCall to endEvaluate without matching call to startEvaluateCellEvaluationFrame frame  evaluationFramesgetnFrames1if result  ErrorEvalCIRCULARREFERROR  nFrames  1 returnframeupdateFormulaResultresult
public Enumeration<String> keys() {return new Iterator();},public EnumerationString keys return new Iterator
"public void fromRaw(int[] ints) {fromRaw(ints, 0);}",public void fromRawint ints fromRawints 0
"public int[] init() {final int[] ord = super.init();start = new int[ArrayUtil.oversize(ord.length, Integer.BYTES)];end = new int[ArrayUtil.oversize(ord.length, Integer.BYTES)];freq = new int[ArrayUtil.oversize(ord.length, Integer.BYTES)];assert start.length >= ord.length;assert end.length >= ord.length;assert freq.length >= ord.length;return ord;}",public int init final int ord  superinitstart  new intArrayUtiloversizeordlength IntegerBYTESend  new intArrayUtiloversizeordlength IntegerBYTESfreq  new intArrayUtiloversizeordlength IntegerBYTESassert startlength  ordlengthassert endlength  ordlengthassert freqlength  ordlengthreturn ord
public boolean addFetchRefSpec(RefSpec s) {if (fetch.contains(s))return false;return fetch.add(s);},public boolean addFetchRefSpecRefSpec s if fetchcontainssreturn falsereturn fetchadds
public char setIndex(int location) {if (location < start || location > end) {throw new IllegalArgumentException();}offset = location;if (offset == end) {return DONE;}return string.charAt(offset);},public char setIndexint location if location  start  location  end throw new IllegalArgumentExceptionoffset  locationif offset  end return DONEreturn stringcharAtoffset
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[ITERATION]\n"");buffer.append(""    .flags      = "").append(HexDump.shortToHex(_flags)).append(""\n"");buffer.append(""[/ITERATION]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendITERATIONnbufferappend    flags       appendHexDumpshortToHexflagsappendnbufferappendITERATIONnreturn buffertoString
public LogByteSizeMergePolicy() {minMergeSize = (long) (DEFAULT_MIN_MERGE_MB*1024*1024);maxMergeSize = (long) (DEFAULT_MAX_MERGE_MB*1024*1024);maxMergeSizeForForcedMerge = (long) (DEFAULT_MAX_MERGE_MB_FOR_FORCED_MERGE*1024*1024);},public LogByteSizeMergePolicy minMergeSize  long DEFAULTMINMERGEMB10241024maxMergeSize  long DEFAULTMAXMERGEMB10241024maxMergeSizeForForcedMerge  long DEFAULTMAXMERGEMBFORFORCEDMERGE10241024
public DescribeNetworkInterfacePermissionsResult describeNetworkInterfacePermissions(DescribeNetworkInterfacePermissionsRequest request) {request = beforeClientExecution(request);return executeDescribeNetworkInterfacePermissions(request);},public DescribeNetworkInterfacePermissionsResult describeNetworkInterfacePermissionsDescribeNetworkInterfacePermissionsRequest request request  beforeClientExecutionrequestreturn executeDescribeNetworkInterfacePermissionsrequest
"public String toString() {return ""<wildcard field='"" + this.field + ""' term='"" + this.text + ""'/>"";}",public String toString return wildcard field  thisfield   term  thistext  
public DeleteImageBuilderResult deleteImageBuilder(DeleteImageBuilderRequest request) {request = beforeClientExecution(request);return executeDeleteImageBuilder(request);},public DeleteImageBuilderResult deleteImageBuilderDeleteImageBuilderRequest request request  beforeClientExecutionrequestreturn executeDeleteImageBuilderrequest
public boolean requiresCommitBody() {return requiresCommitBody;},public boolean requiresCommitBody return requiresCommitBody
public void removeDocparts() {remove1stProperty(PropertyIDMap.PID_DOCPARTS);},public void removeDocparts remove1stPropertyPropertyIDMapPIDDOCPARTS
public DescribeConfigurationSetResult describeConfigurationSet(DescribeConfigurationSetRequest request) {request = beforeClientExecution(request);return executeDescribeConfigurationSet(request);},public DescribeConfigurationSetResult describeConfigurationSetDescribeConfigurationSetRequest request request  beforeClientExecutionrequestreturn executeDescribeConfigurationSetrequest
public static BufferSize megabytes(long mb) {return new BufferSize(mb * MB);},public static BufferSize megabyteslong mb return new BufferSizemb  MB
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeInt(field_1_reserved);},public void writeLittleEndianOutput out outwriteBytesid  getPtgClassoutwriteIntfield1reserved
public ListLabelingJobsForWorkteamResult listLabelingJobsForWorkteam(ListLabelingJobsForWorkteamRequest request) {request = beforeClientExecution(request);return executeListLabelingJobsForWorkteam(request);},public ListLabelingJobsForWorkteamResult listLabelingJobsForWorkteamListLabelingJobsForWorkteamRequest request request  beforeClientExecutionrequestreturn executeListLabelingJobsForWorkteamrequest
public GetKeyPairResult getKeyPair(GetKeyPairRequest request) {request = beforeClientExecution(request);return executeGetKeyPair(request);},public GetKeyPairResult getKeyPairGetKeyPairRequest request request  beforeClientExecutionrequestreturn executeGetKeyPairrequest
@Override public boolean isEmpty() {Slice slice = this.slice;return slice.from == slice.to;},Override public boolean isEmpty Slice slice  thisslicereturn slicefrom  sliceto
public EveryNTermSelector(int interval) {this.interval = interval;count = interval;},public EveryNTermSelectorint interval thisinterval  intervalcount  interval
public void ReInit(CharStream stream) {token_source.ReInit(stream);token = new Token();jj_ntk = -1;jj_gen = 0;for (int i = 0; i < 25; i++) jj_la1[i] = -1;for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();},public void ReInitCharStream stream tokensourceReInitstreamtoken  new Tokenjjntk  1jjgen  0for int i  0 i  25 i jjla1i  1for int i  0 i  jj2rtnslength i jj2rtnsi  new JJCalls
"public DirectTrackingAllocator(int blockSize, Counter bytesUsed) {super(blockSize);this.bytesUsed = bytesUsed;}",public DirectTrackingAllocatorint blockSize Counter bytesUsed superblockSizethisbytesUsed  bytesUsed
public static ShortBuffer allocate(int capacity) {if (capacity < 0) {throw new IllegalArgumentException();}return new ReadWriteShortArrayBuffer(capacity);},public static ShortBuffer allocateint capacity if capacity  0 throw new IllegalArgumentExceptionreturn new ReadWriteShortArrayBuffercapacity
public DescribeDatasetImportJobResult describeDatasetImportJob(DescribeDatasetImportJobRequest request) {request = beforeClientExecution(request);return executeDescribeDatasetImportJob(request);},public DescribeDatasetImportJobResult describeDatasetImportJobDescribeDatasetImportJobRequest request request  beforeClientExecutionrequestreturn executeDescribeDatasetImportJobrequest
public DescribeClusterSnapshotsResult describeClusterSnapshots() {return describeClusterSnapshots(new DescribeClusterSnapshotsRequest());},public DescribeClusterSnapshotsResult describeClusterSnapshots return describeClusterSnapshotsnew DescribeClusterSnapshotsRequest
"public PushbackReader(Reader in, int size) {super(in);if (size <= 0) {throw new IllegalArgumentException(""size <= 0"");}buf = new char[size];pos = size;}",public PushbackReaderReader in int size superinif size  0 throw new IllegalArgumentExceptionsize  0buf  new charsizepos  size
"public final char getChar(int index) {checkIndex(index, SizeOf.CHAR);return (char) Memory.peekShort(backingArray, offset + index, order);}",public final char getCharint index checkIndexindex SizeOfCHARreturn char MemorypeekShortbackingArray offset  index order
public SingleCellValueArray(ValueEval value) {super(1);_value = value;},public SingleCellValueArrayValueEval value super1value  value
public List<Ref> getCherryPickedRefs() {return cherryPickedRefs;},public ListRef getCherryPickedRefs return cherryPickedRefs
public Destination(java.util.List<String> toAddresses) {setToAddresses(toAddresses);},public DestinationjavautilListString toAddresses setToAddressestoAddresses
public String getHostname() {return Host.this.getHostName();},public String getHostname return HostthisgetHostName
public void setSize(int taxonomySize) {map = new int[taxonomySize];},public void setSizeint taxonomySize map  new inttaxonomySize
public void writeShort(int v) {int b1 = (v >>>  8) & 0xFF;int b0 = (v) & 0xFF;try {out.write(b0);out.write(b1);} catch (IOException e) {throw new RuntimeException(e);}},public void writeShortint v int b1  v   8  0xFFint b0  v  0xFFtry outwriteb0outwriteb1 catch IOException e throw new RuntimeExceptione
"public PathQueryNode(List<QueryText> pathElements) {this.values = pathElements;if (pathElements.size() <= 1) {throw new RuntimeException(""PathQuerynode requires more 2 or more path elements."");}}",public PathQueryNodeListQueryText pathElements thisvalues  pathElementsif pathElementssize  1 throw new RuntimeExceptionPathQuerynode requires more 2 or more path elements
public int getMaxDeltaDepth() {return maxDeltaDepth;},public int getMaxDeltaDepth return maxDeltaDepth
public DomainInfos listDomains(ListDomainsRequest request) {request = beforeClientExecution(request);return executeListDomains(request);},public DomainInfos listDomainsListDomainsRequest request request  beforeClientExecutionrequestreturn executeListDomainsrequest
"public float weight(int contentLength, int totalTermFreq) {float numDocs = 1 + contentLength / pivot;return (k1 + 1) * (float) Math.log(1 + (numDocs + 0.5D) / (totalTermFreq + 0.5D));}",public float weightint contentLength int totalTermFreq float numDocs  1  contentLength  pivotreturn k1  1  float Mathlog1  numDocs  05D  totalTermFreq  05D
public PutIdentityPolicyResult putIdentityPolicy(PutIdentityPolicyRequest request) {request = beforeClientExecution(request);return executePutIdentityPolicy(request);},public PutIdentityPolicyResult putIdentityPolicyPutIdentityPolicyRequest request request  beforeClientExecutionrequestreturn executePutIdentityPolicyrequest
"public String toString() {if (getChildren() == null || getChildren().size() == 0)return ""<tokenizedphrase/>"";StringBuilder sb = new StringBuilder();sb.append(""<tokenizedtphrase>"");for (QueryNode child : getChildren()) {sb.append(""\n"");sb.append(child.toString());}sb.append(""\n</tokenizedphrase>"");return sb.toString();}",public String toString if getChildren  null  getChildrensize  0return tokenizedphraseStringBuilder sb  new StringBuildersbappendtokenizedtphrasefor QueryNode child  getChildren sbappendnsbappendchildtoStringsbappendntokenizedphrasereturn sbtoString
"public static File[] listRoots() {return new File[] { new File(""/"") };}",public static File listRoots return new File  new File 
"public CharBuffer slice() {return new ReadOnlyCharArrayBuffer(remaining(), backingArray, offset + position);}",public CharBuffer slice return new ReadOnlyCharArrayBufferremaining backingArray offset  position
"public JapaneseKatakanaStemFilter(TokenStream input, int minimumLength) {super(input);this.minimumKatakanaLength = minimumLength;}",public JapaneseKatakanaStemFilterTokenStream input int minimumLength superinputthisminimumKatakanaLength  minimumLength
public String toString() {return brToString(termBytes);},public String toString return brToStringtermBytes
"public void unsafeWrite(char b[], int off, int len) {System.arraycopy(b, off, buf, this.len, len);this.len += len;}",public void unsafeWritechar b int off int len Systemarraycopyb off buf thislen lenthislen  len
"public ExternalNameRecord(RecordInputStream in) {field_1_option_flag = in.readShort();field_2_ixals       = in.readShort();field_3_not_used    = in.readShort();int numChars = in.readUByte();field_4_name = StringUtil.readUnicodeString(in, numChars);if(!isOLELink() && !isStdDocumentNameIdentifier()){if(isAutomaticLink()){if(in.available() > 0) {int nColumns = in.readUByte() + 1;int nRows = in.readShort() + 1;int totalCount = nRows * nColumns;_ddeValues = ConstantValueParser.parse(in, totalCount);_nColumns = nColumns;_nRows = nRows;}} else {int formulaLen = in.readUShort();field_5_name_definition = Formula.read(formulaLen, in);}}}",public ExternalNameRecordRecordInputStream in field1optionflag  inreadShortfield2ixals        inreadShortfield3notused     inreadShortint numChars  inreadUBytefield4name  StringUtilreadUnicodeStringin numCharsifisOLELink  isStdDocumentNameIdentifierifisAutomaticLinkifinavailable  0 int nColumns  inreadUByte  1int nRows  inreadShort  1int totalCount  nRows  nColumnsddeValues  ConstantValueParserparsein totalCountnColumns  nColumnsnRows  nRows else int formulaLen  inreadUShortfield5namedefinition  FormulareadformulaLen in
public PorterStemFilter create(TokenStream input) {return new PorterStemFilter(input);},public PorterStemFilter createTokenStream input return new PorterStemFilterinput
"public LoginProfile(String userName, java.util.Date createDate) {setUserName(userName);setCreateDate(createDate);}",public LoginProfileString userName javautilDate createDate setUserNameuserNamesetCreateDatecreateDate
public void setUnknownFormulaData(byte[] formularData) {field_2_unknownFormulaData = formularData;},public void setUnknownFormulaDatabyte formularData field2unknownFormulaData  formularData
"public Reader create(Reader input) {return normMap == null ? input : new MappingCharFilter(normMap,input);}",public Reader createReader input return normMap  null  input  new MappingCharFilternormMapinput
"public Iterator<Entry<K, V>> iterator() {return new EntryIterator();}",public IteratorEntryK V iterator return new EntryIterator
public final Buffer clear() {position = 0;mark = UNSET_MARK;limit = capacity;return this;},public final Buffer clear position  0mark  UNSETMARKlimit  capacityreturn this
public int getNameIx(int definedNameIndex) {return _externalNameRecords[definedNameIndex].getIx();},public int getNameIxint definedNameIndex return externalNameRecordsdefinedNameIndexgetIx
public DeleteReceiptRuleResult deleteReceiptRule(DeleteReceiptRuleRequest request) {request = beforeClientExecution(request);return executeDeleteReceiptRule(request);},public DeleteReceiptRuleResult deleteReceiptRuleDeleteReceiptRuleRequest request request  beforeClientExecutionrequestreturn executeDeleteReceiptRulerequest
public boolean equals(Object obj) {if (this == obj) return true;if (!super.equals(obj)) return false;if (getClass() != obj.getClass()) return false;SortedSetSortField other = (SortedSetSortField) obj;if (selector != other.selector) return false;return true;},public boolean equalsObject obj if this  obj return trueif superequalsobj return falseif getClass  objgetClass return falseSortedSetSortField other  SortedSetSortField objif selector  otherselector return falsereturn true
"public JobFlowDetail(String jobFlowId, String name, JobFlowExecutionStatusDetail executionStatusDetail, JobFlowInstancesDetail instances) {setJobFlowId(jobFlowId);setName(name);setExecutionStatusDetail(executionStatusDetail);setInstances(instances);}",public JobFlowDetailString jobFlowId String name JobFlowExecutionStatusDetail executionStatusDetail JobFlowInstancesDetail instances setJobFlowIdjobFlowIdsetNamenamesetExecutionStatusDetailexecutionStatusDetailsetInstancesinstances
public PutVoiceConnectorOriginationResult putVoiceConnectorOrigination(PutVoiceConnectorOriginationRequest request) {request = beforeClientExecution(request);return executePutVoiceConnectorOrigination(request);},public PutVoiceConnectorOriginationResult putVoiceConnectorOriginationPutVoiceConnectorOriginationRequest request request  beforeClientExecutionrequestreturn executePutVoiceConnectorOriginationrequest
public DBInstance startDBInstance(StartDBInstanceRequest request) {request = beforeClientExecution(request);return executeStartDBInstance(request);},public DBInstance startDBInstanceStartDBInstanceRequest request request  beforeClientExecutionrequestreturn executeStartDBInstancerequest
public DeleteChangeSetResult deleteChangeSet(DeleteChangeSetRequest request) {request = beforeClientExecution(request);return executeDeleteChangeSet(request);},public DeleteChangeSetResult deleteChangeSetDeleteChangeSetRequest request request  beforeClientExecutionrequestreturn executeDeleteChangeSetrequest
public int nextIndex() {return pos + 1;},public int nextIndex return pos  1
public DescribeGameSessionDetailsResult describeGameSessionDetails(DescribeGameSessionDetailsRequest request) {request = beforeClientExecution(request);return executeDescribeGameSessionDetails(request);},public DescribeGameSessionDetailsResult describeGameSessionDetailsDescribeGameSessionDetailsRequest request request  beforeClientExecutionrequestreturn executeDescribeGameSessionDetailsrequest
public ListDatasetImportJobsResult listDatasetImportJobs(ListDatasetImportJobsRequest request) {request = beforeClientExecution(request);return executeListDatasetImportJobs(request);},public ListDatasetImportJobsResult listDatasetImportJobsListDatasetImportJobsRequest request request  beforeClientExecutionrequestreturn executeListDatasetImportJobsrequest
"public String toString() {return new StringBuilder().append(""("").append(x).append("","").append(y).append("")"").toString();}",public String toString return new StringBuilderappendappendxappendappendyappendtoString
public CharBlockArray append(char c) {if (this.current.length == this.blockSize) {addBlock();}this.current.chars[this.current.length++] = c;this.length++;return this;},public CharBlockArray appendchar c if thiscurrentlength  thisblockSize addBlockthiscurrentcharsthiscurrentlength  cthislengthreturn this
public SimpleBoolFunction(ValueSource source) {this.source = source;},public SimpleBoolFunctionValueSource source thissource  source
public String toStringUnquoted() {return getPrefix();},public String toStringUnquoted return getPrefix
"public static Transport open(URIish uri) throws NotSupportedException, TransportException {for (WeakReference<TransportProtocol> ref : protocols) {TransportProtocol proto = ref.get();if (proto == null) {protocols.remove(ref);continue;}if (proto.canHandle(uri, null, null))return proto.open(uri);}throw new NotSupportedException(MessageFormat.format(JGitText.get().URINotSupported, uri));}",public static Transport openURIish uri throws NotSupportedException TransportException for WeakReferenceTransportProtocol ref  protocols TransportProtocol proto  refgetif proto  null protocolsremoverefcontinueif protocanHandleuri null nullreturn protoopenurithrow new NotSupportedExceptionMessageFormatformatJGitTextgetURINotSupported uri
"public void mark(int readAheadLimit) throws IOException {throw new IOException(""mark/reset not supported"");}",public void markint readAheadLimit throws IOException throw new IOExceptionmarkreset not supported
public DeleteClusterSecurityGroupResult deleteClusterSecurityGroup(DeleteClusterSecurityGroupRequest request) {request = beforeClientExecution(request);return executeDeleteClusterSecurityGroup(request);},public DeleteClusterSecurityGroupResult deleteClusterSecurityGroupDeleteClusterSecurityGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteClusterSecurityGrouprequest
public GlobalReplicationGroup rebalanceSlotsInGlobalReplicationGroup(RebalanceSlotsInGlobalReplicationGroupRequest request) {request = beforeClientExecution(request);return executeRebalanceSlotsInGlobalReplicationGroup(request);},public GlobalReplicationGroup rebalanceSlotsInGlobalReplicationGroupRebalanceSlotsInGlobalReplicationGroupRequest request request  beforeClientExecutionrequestreturn executeRebalanceSlotsInGlobalReplicationGrouprequest
public DeleteLocalGatewayRouteResult deleteLocalGatewayRoute(DeleteLocalGatewayRouteRequest request) {request = beforeClientExecution(request);return executeDeleteLocalGatewayRoute(request);},public DeleteLocalGatewayRouteResult deleteLocalGatewayRouteDeleteLocalGatewayRouteRequest request request  beforeClientExecutionrequestreturn executeDeleteLocalGatewayRouterequest
public DBCluster restoreDBClusterFromSnapshot(RestoreDBClusterFromSnapshotRequest request) {request = beforeClientExecution(request);return executeRestoreDBClusterFromSnapshot(request);},public DBCluster restoreDBClusterFromSnapshotRestoreDBClusterFromSnapshotRequest request request  beforeClientExecutionrequestreturn executeRestoreDBClusterFromSnapshotrequest
"public String getReading(int wordId, char surface[], int off, int len) {return null;}",public String getReadingint wordId char surface int off int len return null
"public CreateDBSnapshotRequest(String dBSnapshotIdentifier, String dBInstanceIdentifier) {setDBSnapshotIdentifier(dBSnapshotIdentifier);setDBInstanceIdentifier(dBInstanceIdentifier);}",public CreateDBSnapshotRequestString dBSnapshotIdentifier String dBInstanceIdentifier setDBSnapshotIdentifierdBSnapshotIdentifiersetDBInstanceIdentifierdBInstanceIdentifier
public RemoveRoleFromDBInstanceResult removeRoleFromDBInstance(RemoveRoleFromDBInstanceRequest request) {request = beforeClientExecution(request);return executeRemoveRoleFromDBInstance(request);},public RemoveRoleFromDBInstanceResult removeRoleFromDBInstanceRemoveRoleFromDBInstanceRequest request request  beforeClientExecutionrequestreturn executeRemoveRoleFromDBInstancerequest
"public Token nextToken() {if (i >= tokens.size()) {if (eofToken == null) {int start = -1;if (tokens.size() > 0) {int previousStop = tokens.get(tokens.size() - 1).getStopIndex();if (previousStop != -1) {start = previousStop + 1;}}int stop = Math.max(-1, start - 1);eofToken = _factory.create(new Pair<TokenSource, CharStream>(this, getInputStream()), Token.EOF, ""EOF"", Token.DEFAULT_CHANNEL, start, stop, getLine(), getCharPositionInLine());}return eofToken;}Token t = tokens.get(i);if (i == tokens.size() - 1 && t.getType() == Token.EOF) {eofToken = t;}i++;return t;}",public Token nextToken if i  tokenssize if eofToken  null int start  1if tokenssize  0 int previousStop  tokensgettokenssize  1getStopIndexif previousStop  1 start  previousStop  1int stop  Mathmax1 start  1eofToken  factorycreatenew PairTokenSource CharStreamthis getInputStream TokenEOF EOF TokenDEFAULTCHANNEL start stop getLine getCharPositionInLinereturn eofTokenToken t  tokensgetiif i  tokenssize  1  tgetType  TokenEOF eofToken  tireturn t
public QueryMaker getQueryMaker() {return null; },public QueryMaker getQueryMaker return null 
public GC(FileRepository repo) {this.repo = repo;this.pconfig = new PackConfig(repo);this.pm = NullProgressMonitor.INSTANCE;},public GCFileRepository repo thisrepo  repothispconfig  new PackConfigrepothispm  NullProgressMonitorINSTANCE
public synchronized void setLength(int length) {super.setLength(length);},public synchronized void setLengthint length supersetLengthlength
public CancelImportTaskResult cancelImportTask(CancelImportTaskRequest request) {request = beforeClientExecution(request);return executeCancelImportTask(request);},public CancelImportTaskResult cancelImportTaskCancelImportTaskRequest request request  beforeClientExecutionrequestreturn executeCancelImportTaskrequest
public int first() {return (current = start);},public int first return current  start
public DeleteDiskResult deleteDisk(DeleteDiskRequest request) {request = beforeClientExecution(request);return executeDeleteDisk(request);},public DeleteDiskResult deleteDiskDeleteDiskRequest request request  beforeClientExecutionrequestreturn executeDeleteDiskrequest
public DeleteVpcEndpointConnectionNotificationsResult deleteVpcEndpointConnectionNotifications(DeleteVpcEndpointConnectionNotificationsRequest request) {request = beforeClientExecution(request);return executeDeleteVpcEndpointConnectionNotifications(request);},public DeleteVpcEndpointConnectionNotificationsResult deleteVpcEndpointConnectionNotificationsDeleteVpcEndpointConnectionNotificationsRequest request request  beforeClientExecutionrequestreturn executeDeleteVpcEndpointConnectionNotificationsrequest
public final boolean equals(Object o) {if (o instanceof AnyObjectId) {return equals((AnyObjectId) o);}return false;},public final boolean equalsObject o if o instanceof AnyObjectId return equalsAnyObjectId oreturn false
public DescribeConfigurationSettingsRequest(String applicationName) {setApplicationName(applicationName);},public DescribeConfigurationSettingsRequestString applicationName setApplicationNameapplicationName
public ET next() {if (expectedModCount == list.modCount) {LinkedList.Link<ET> next = link.next;if (next != list.voidLink) {lastLink = link = next;pos++;return link.data;}throw new NoSuchElementException();}throw new ConcurrentModificationException();},public ET next if expectedModCount  listmodCount LinkedListLinkET next  linknextif next  listvoidLink lastLink  link  nextposreturn linkdatathrow new NoSuchElementExceptionthrow new ConcurrentModificationException
public CreateConfigurationResult createConfiguration(CreateConfigurationRequest request) {request = beforeClientExecution(request);return executeCreateConfiguration(request);},public CreateConfigurationResult createConfigurationCreateConfigurationRequest request request  beforeClientExecutionrequestreturn executeCreateConfigurationrequest
public ResetClusterParameterGroupResult resetClusterParameterGroup(ResetClusterParameterGroupRequest request) {request = beforeClientExecution(request);return executeResetClusterParameterGroup(request);},public ResetClusterParameterGroupResult resetClusterParameterGroupResetClusterParameterGroupRequest request request  beforeClientExecutionrequestreturn executeResetClusterParameterGrouprequest
public void mark(int readlimit) {in.mark(readlimit);},public void markint readlimit inmarkreadlimit
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[PASSWORD]\n"");buffer.append(""    .password = "").append(HexDump.shortToHex(field_1_password)).append(""\n"");buffer.append(""[/PASSWORD]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendPASSWORDnbufferappend    password  appendHexDumpshortToHexfield1passwordappendnbufferappendPASSWORDnreturn buffertoString
public SendTemplatedEmailResult sendTemplatedEmail(SendTemplatedEmailRequest request) {request = beforeClientExecution(request);return executeSendTemplatedEmail(request);},public SendTemplatedEmailResult sendTemplatedEmailSendTemplatedEmailRequest request request  beforeClientExecutionrequestreturn executeSendTemplatedEmailrequest
public boolean equals(Object obj) {if ( !(obj instanceof Predicate) ) return false;if ( this == obj ) return true;Predicate p = (Predicate)obj;return this.ruleIndex == p.ruleIndex &&this.predIndex == p.predIndex &&this.isCtxDependent == p.isCtxDependent;},public boolean equalsObject obj if  obj instanceof Predicate  return falseif  this  obj  return truePredicate p  Predicateobjreturn thisruleIndex  pruleIndex thispredIndex  ppredIndex thisisCtxDependent  pisCtxDependent
public void writeBoolean(boolean value) throws IOException {checkWritePrimitiveTypes();primitiveTypes.writeBoolean(value);},public void writeBooleanboolean value throws IOException checkWritePrimitiveTypesprimitiveTypeswriteBooleanvalue
public boolean checkPosition(int position) {Iterator<PositionSpan> positionSpanIt = positionSpans.iterator();while (positionSpanIt.hasNext()) {PositionSpan posSpan = positionSpanIt.next();if (((position >= posSpan.start) && (position <= posSpan.end))) {return true;}}return false;},public boolean checkPositionint position IteratorPositionSpan positionSpanIt  positionSpansiteratorwhile positionSpanIthasNext PositionSpan posSpan  positionSpanItnextif position  posSpanstart  position  posSpanend return truereturn false
"public static int log(long x, int base) {if (base <= 1) {throw new IllegalArgumentException(""base must be > 1"");}int ret = 0;while (x >= base) {x /= base;ret++;}return ret;}",public static int loglong x int base if base  1 throw new IllegalArgumentExceptionbase must be  1int ret  0while x  base x  baseretreturn ret
"public final LongBuffer get(long[] dst, int dstOffset, int longCount) {if (longCount > remaining()) {throw new BufferUnderflowException();}System.arraycopy(backingArray, offset + position, dst, dstOffset, longCount);position += longCount;return this;}",public final LongBuffer getlong dst int dstOffset int longCount if longCount  remaining throw new BufferUnderflowExceptionSystemarraycopybackingArray offset  position dst dstOffset longCountposition  longCountreturn this
public boolean equals(Object obj) {return obj == this;},public boolean equalsObject obj return obj  this
"public void exportRepository(String name, Repository db) {exports.put(nameWithDotGit(name), db);}",public void exportRepositoryString name Repository db exportsputnameWithDotGitname db
public void println(long l) {println(String.valueOf(l));},public void printlnlong l printlnStringvalueOfl
public HSSFFormulaEvaluator createFormulaEvaluator(){return new HSSFFormulaEvaluator(workbook);},public HSSFFormulaEvaluator createFormulaEvaluatorreturn new HSSFFormulaEvaluatorworkbook
public boolean equals(Object obj) {if ( obj==null || !(obj instanceof IntervalSet) ) {return false;}IntervalSet other = (IntervalSet)obj;return this.intervals.equals(other.intervals);},public boolean equalsObject obj if  objnull  obj instanceof IntervalSet  return falseIntervalSet other  IntervalSetobjreturn thisintervalsequalsotherintervals
public FileMode getIndexFileMode(DirCacheIterator indexIter) {final FileMode wtMode = getEntryFileMode();if (indexIter == null) {return wtMode;}final FileMode iMode = indexIter.getEntryFileMode();if (getOptions().isFileMode() && iMode != FileMode.GITLINK && iMode != FileMode.TREE) {return wtMode;}if (!getOptions().isFileMode()) {if (FileMode.REGULAR_FILE == wtMode&& FileMode.EXECUTABLE_FILE == iMode) {return iMode;}if (FileMode.EXECUTABLE_FILE == wtMode&& FileMode.REGULAR_FILE == iMode) {return iMode;}}if (FileMode.GITLINK == iMode&& FileMode.TREE == wtMode && !getOptions().isDirNoGitLinks()) {return iMode;}if (FileMode.TREE == iMode&& FileMode.GITLINK == wtMode) {return iMode;}return wtMode;},public FileMode getIndexFileModeDirCacheIterator indexIter final FileMode wtMode  getEntryFileModeif indexIter  null return wtModefinal FileMode iMode  indexItergetEntryFileModeif getOptionsisFileMode  iMode  FileModeGITLINK  iMode  FileModeTREE return wtModeif getOptionsisFileMode if FileModeREGULARFILE  wtMode FileModeEXECUTABLEFILE  iMode return iModeif FileModeEXECUTABLEFILE  wtMode FileModeREGULARFILE  iMode return iModeif FileModeGITLINK  iMode FileModeTREE  wtMode  getOptionsisDirNoGitLinks return iModeif FileModeTREE  iMode FileModeGITLINK  wtMode return iModereturn wtMode
public CreateScheduledActionResult createScheduledAction(CreateScheduledActionRequest request) {request = beforeClientExecution(request);return executeCreateScheduledAction(request);},public CreateScheduledActionResult createScheduledActionCreateScheduledActionRequest request request  beforeClientExecutionrequestreturn executeCreateScheduledActionrequest
public PackConfig getConfig() {return config;},public PackConfig getConfig return config
public CharBuffer put(char c) {throw new ReadOnlyBufferException();},public CharBuffer putchar c throw new ReadOnlyBufferException
"public DeleteDistributionRequest(String id, String ifMatch) {setId(id);setIfMatch(ifMatch);}",public DeleteDistributionRequestString id String ifMatch setIdidsetIfMatchifMatch
"public static long pop_andnot(long[] arr1, long[] arr2, int wordOffset, int numWords) {long popCount = 0;for (int i = wordOffset, end = wordOffset + numWords; i < end; ++i) {popCount += Long.bitCount(arr1[i] & ~arr2[i]);}return popCount;}",public static long popandnotlong arr1 long arr2 int wordOffset int numWords long popCount  0for int i  wordOffset end  wordOffset  numWords i  end i popCount  LongbitCountarr1i  arr2ireturn popCount
public boolean include(TreeWalk walker) {return true;},public boolean includeTreeWalk walker return true
public DescribeReservedDBInstancesOfferingsResult describeReservedDBInstancesOfferings() {return describeReservedDBInstancesOfferings(new DescribeReservedDBInstancesOfferingsRequest());},public DescribeReservedDBInstancesOfferingsResult describeReservedDBInstancesOfferings return describeReservedDBInstancesOfferingsnew DescribeReservedDBInstancesOfferingsRequest
public ByteVector(byte[] a) {blockSize = DEFAULT_BLOCK_SIZE;array = a;n = 0;},public ByteVectorbyte a blockSize  DEFAULTBLOCKSIZEarray  an  0
"public Appendable append(CharSequence csq) {return append(csq, 0, csq.length());}",public Appendable appendCharSequence csq return appendcsq 0 csqlength
public String getLookaheadName(TokenStream input) {return getTokenName(input.LA(1));},public String getLookaheadNameTokenStream input return getTokenNameinputLA1
"public static final ObjectId fromRaw(byte[] bs) {return fromRaw(bs, 0);}",public static final ObjectId fromRawbyte bs return fromRawbs 0
public GutsRecord(RecordInputStream in) {field_1_left_row_gutter = in.readShort();field_2_top_col_gutter  = in.readShort();field_3_row_level_max   = in.readShort();field_4_col_level_max   = in.readShort();},public GutsRecordRecordInputStream in field1leftrowgutter  inreadShortfield2topcolgutter   inreadShortfield3rowlevelmax    inreadShortfield4collevelmax    inreadShort
"public GermanMinimalStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public GermanMinimalStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public DescribeActiveReceiptRuleSetResult describeActiveReceiptRuleSet(DescribeActiveReceiptRuleSetRequest request) {request = beforeClientExecution(request);return executeDescribeActiveReceiptRuleSet(request);},public DescribeActiveReceiptRuleSetResult describeActiveReceiptRuleSetDescribeActiveReceiptRuleSetRequest request request  beforeClientExecutionrequestreturn executeDescribeActiveReceiptRuleSetrequest
public GetGeoLocationResult getGeoLocation(GetGeoLocationRequest request) {request = beforeClientExecution(request);return executeGetGeoLocation(request);},public GetGeoLocationResult getGeoLocationGetGeoLocationRequest request request  beforeClientExecutionrequestreturn executeGetGeoLocationrequest
"public KStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public KStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public PublishRequest(String topicArn, String message) {setTopicArn(topicArn);setMessage(message);}",public PublishRequestString topicArn String message setTopicArntopicArnsetMessagemessage
"public void replace(int start, int limit, String text) {final int charsLen = text.length();final int newLength = shiftForReplace(start, limit, charsLen);text.getChars(0, charsLen, buffer, start);token.setLength(length = newLength);}",public void replaceint start int limit String text final int charsLen  textlengthfinal int newLength  shiftForReplacestart limit charsLentextgetChars0 charsLen buffer starttokensetLengthlength  newLength
public DescribeInternetGatewaysResult describeInternetGateways() {return describeInternetGateways(new DescribeInternetGatewaysRequest());},public DescribeInternetGatewaysResult describeInternetGateways return describeInternetGatewaysnew DescribeInternetGatewaysRequest
public ListQualificationTypesResult listQualificationTypes(ListQualificationTypesRequest request) {request = beforeClientExecution(request);return executeListQualificationTypes(request);},public ListQualificationTypesResult listQualificationTypesListQualificationTypesRequest request request  beforeClientExecutionrequestreturn executeListQualificationTypesrequest
public DetachInstancesResult detachInstances(DetachInstancesRequest request) {request = beforeClientExecution(request);return executeDetachInstances(request);},public DetachInstancesResult detachInstancesDetachInstancesRequest request request  beforeClientExecutionrequestreturn executeDetachInstancesrequest
"public boolean include(TreeWalk walker) {final int n = walker.getTreeCount();if (n == 1) return true;final int m = walker.getRawMode(baseTree);for (int i = 1; i < n; i++)if (walker.getRawMode(i) != m || !walker.idEqual(i, baseTree))return true;return false;}",public boolean includeTreeWalk walker final int n  walkergetTreeCountif n  1 return truefinal int m  walkergetRawModebaseTreefor int i  1 i  n iif walkergetRawModei  m  walkeridEquali baseTreereturn truereturn false
public List<MatchingDocs> getMatchingDocs() {List<MatchingDocs> matchingDocs = super.getMatchingDocs();if (totalHits == NOT_CALCULATED) {totalHits = 0;for (MatchingDocs md : matchingDocs) {totalHits += md.totalHits;}}if (totalHits <= sampleSize) {return matchingDocs;}if (sampledDocs == null) {samplingRate = (1.0 * sampleSize) / totalHits;sampledDocs = createSampledDocs(matchingDocs);}return sampledDocs;},public ListMatchingDocs getMatchingDocs ListMatchingDocs matchingDocs  supergetMatchingDocsif totalHits  NOTCALCULATED totalHits  0for MatchingDocs md  matchingDocs totalHits  mdtotalHitsif totalHits  sampleSize return matchingDocsif sampledDocs  null samplingRate  10  sampleSize  totalHitssampledDocs  createSampledDocsmatchingDocsreturn sampledDocs
public CreateDataSourceFromS3Result createDataSourceFromS3(CreateDataSourceFromS3Request request) {request = beforeClientExecution(request);return executeCreateDataSourceFromS3(request);},public CreateDataSourceFromS3Result createDataSourceFromS3CreateDataSourceFromS3Request request request  beforeClientExecutionrequestreturn executeCreateDataSourceFromS3request
public UpdateFleetMetadataResult updateFleetMetadata(UpdateFleetMetadataRequest request) {request = beforeClientExecution(request);return executeUpdateFleetMetadata(request);},public UpdateFleetMetadataResult updateFleetMetadataUpdateFleetMetadataRequest request request  beforeClientExecutionrequestreturn executeUpdateFleetMetadatarequest
public ObjectId getNewObjectId() {return newValue;},public ObjectId getNewObjectId return newValue
public long ramBytesUsed() {long sizeInBytes = ((termBytesReader!=null)? termBytesReader.ramBytesUsed() : 0);for(FieldIndexData entry : fields.values()) {sizeInBytes += entry.ramBytesUsed();}return sizeInBytes;},public long ramBytesUsed long sizeInBytes  termBytesReadernull termBytesReaderramBytesUsed  0forFieldIndexData entry  fieldsvalues sizeInBytes  entryramBytesUsedreturn sizeInBytes
public StringBuilder append(char c) {append0(c);return this;},public StringBuilder appendchar c append0creturn this
"public void unread(int oneChar) throws IOException {synchronized (lock) {checkNotClosed();if (pos == 0) {throw new IOException(""Pushback buffer full"");}buf[--pos] = (char) oneChar;}}",public void unreadint oneChar throws IOException synchronized lock checkNotClosedif pos  0 throw new IOExceptionPushback buffer fullbufpos  char oneChar
"public QueryFaceRequest() {super(""LinkFace"", ""2018-07-20"", ""QueryFace"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public QueryFaceRequest superLinkFace 20180720 QueryFacesetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
"public ProductDomain(String product, String domain) {this.productName = product;this.domainName = domain;}",public ProductDomainString product String domain thisproductName  productthisdomainName  domain
public void disableRefLog() {refLogMessage = null;refLogIncludeResult = false;},public void disableRefLog refLogMessage  nullrefLogIncludeResult  false
public static TaxonomyWriterCache defaultTaxonomyWriterCache() {return new UTF8TaxonomyWriterCache();},public static TaxonomyWriterCache defaultTaxonomyWriterCache return new UTF8TaxonomyWriterCache
public PushCommand setDryRun(boolean dryRun) {checkCallable();this.dryRun = dryRun;return this;},public PushCommand setDryRunboolean dryRun checkCallablethisdryRun  dryRunreturn this
"public ProcessBuilder runInShell(String cmd, String[] args) {List<String> argv = new ArrayList<>(3 + args.length);argv.add(""cmd.exe""); argv.add(""/c""); argv.add(cmd);argv.addAll(Arrays.asList(args));ProcessBuilder proc = new ProcessBuilder();proc.command(argv);return proc;}",public ProcessBuilder runInShellString cmd String args ListString argv  new ArrayList3  argslengthargvaddcmdexe argvaddc argvaddcmdargvaddAllArraysasListargsProcessBuilder proc  new ProcessBuilderproccommandargvreturn proc
"public NameCommentRecord(final RecordInputStream ris) {field_1_record_type = ris.readShort();field_2_frt_cell_ref_flag = ris.readShort();field_3_reserved = ris.readLong();final int field_4_name_length = ris.readShort();final int field_5_comment_length = ris.readShort();if (ris.readByte() == 0) {field_6_name_text = StringUtil.readCompressedUnicode(ris, field_4_name_length);} else {field_6_name_text = StringUtil.readUnicodeLE(ris, field_4_name_length);}if (ris.readByte() == 0) {field_7_comment_text = StringUtil.readCompressedUnicode(ris, field_5_comment_length);} else {field_7_comment_text = StringUtil.readUnicodeLE(ris, field_5_comment_length);}}",public NameCommentRecordfinal RecordInputStream ris field1recordtype  risreadShortfield2frtcellrefflag  risreadShortfield3reserved  risreadLongfinal int field4namelength  risreadShortfinal int field5commentlength  risreadShortif risreadByte  0 field6nametext  StringUtilreadCompressedUnicoderis field4namelength else field6nametext  StringUtilreadUnicodeLEris field4namelengthif risreadByte  0 field7commenttext  StringUtilreadCompressedUnicoderis field5commentlength else field7commenttext  StringUtilreadUnicodeLEris field5commentlength
"public void onPull(float deltaDistance) {final long now = AnimationUtils.currentAnimationTimeMillis();if (mState == STATE_PULL_DECAY && now - mStartTime < mDuration) {return;}if (mState != STATE_PULL) {mGlowScaleY = PULL_GLOW_BEGIN;}mState = STATE_PULL;mStartTime = now;mDuration = PULL_TIME;mPullDistance += deltaDistance;float distance = Math.abs(mPullDistance);mEdgeAlpha = mEdgeAlphaStart = Math.max(PULL_EDGE_BEGIN, Math.min(distance, MAX_ALPHA));mEdgeScaleY = mEdgeScaleYStart = Math.max(HELD_EDGE_SCALE_Y, Math.min(distance * PULL_DISTANCE_EDGE_FACTOR, 1.f));mGlowAlpha = mGlowAlphaStart = Math.min(MAX_ALPHA,mGlowAlpha +(Math.abs(deltaDistance) * PULL_DISTANCE_ALPHA_GLOW_FACTOR));float glowChange = Math.abs(deltaDistance);if (deltaDistance > 0 && mPullDistance < 0) {glowChange = -glowChange;}if (mPullDistance == 0) {mGlowScaleY = 0;}mGlowScaleY = mGlowScaleYStart = Math.min(MAX_GLOW_HEIGHT, Math.max(0, mGlowScaleY + glowChange * PULL_DISTANCE_GLOW_FACTOR));mEdgeAlphaFinish = mEdgeAlpha;mEdgeScaleYFinish = mEdgeScaleY;mGlowAlphaFinish = mGlowAlpha;mGlowScaleYFinish = mGlowScaleY;}",public void onPullfloat deltaDistance final long now  AnimationUtilscurrentAnimationTimeMillisif mState  STATEPULLDECAY  now  mStartTime  mDuration returnif mState  STATEPULL mGlowScaleY  PULLGLOWBEGINmState  STATEPULLmStartTime  nowmDuration  PULLTIMEmPullDistance  deltaDistancefloat distance  MathabsmPullDistancemEdgeAlpha  mEdgeAlphaStart  MathmaxPULLEDGEBEGIN Mathmindistance MAXALPHAmEdgeScaleY  mEdgeScaleYStart  MathmaxHELDEDGESCALEY Mathmindistance  PULLDISTANCEEDGEFACTOR 1fmGlowAlpha  mGlowAlphaStart  MathminMAXALPHAmGlowAlpha MathabsdeltaDistance  PULLDISTANCEALPHAGLOWFACTORfloat glowChange  MathabsdeltaDistanceif deltaDistance  0  mPullDistance  0 glowChange  glowChangeif mPullDistance  0 mGlowScaleY  0mGlowScaleY  mGlowScaleYStart  MathminMAXGLOWHEIGHT Mathmax0 mGlowScaleY  glowChange  PULLDISTANCEGLOWFACTORmEdgeAlphaFinish  mEdgeAlphamEdgeScaleYFinish  mEdgeScaleYmGlowAlphaFinish  mGlowAlphamGlowScaleYFinish  mGlowScaleY
public URIish setPath(String n) {final URIish r = new URIish(this);r.path = n;r.rawPath = n;return r;},public URIish setPathString n final URIish r  new URIishthisrpath  nrrawPath  nreturn r
public UpdateTemplateResult updateTemplate(UpdateTemplateRequest request) {request = beforeClientExecution(request);return executeUpdateTemplate(request);},public UpdateTemplateResult updateTemplateUpdateTemplateRequest request request  beforeClientExecutionrequestreturn executeUpdateTemplaterequest
"public void encode(long[] values, int valuesOffset, byte[] blocks, int blocksOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = encode(values, valuesOffset);valuesOffset += valueCount;blocksOffset = writeLong(block, blocks, blocksOffset);}}",public void encodelong values int valuesOffset byte blocks int blocksOffset int iterations for int i  0 i  iterations i final long block  encodevalues valuesOffsetvaluesOffset  valueCountblocksOffset  writeLongblock blocks blocksOffset
public ListDomainDeliverabilityCampaignsResult listDomainDeliverabilityCampaigns(ListDomainDeliverabilityCampaignsRequest request) {request = beforeClientExecution(request);return executeListDomainDeliverabilityCampaigns(request);},public ListDomainDeliverabilityCampaignsResult listDomainDeliverabilityCampaignsListDomainDeliverabilityCampaignsRequest request request  beforeClientExecutionrequestreturn executeListDomainDeliverabilityCampaignsrequest
public void setReuseObjects(boolean reuseObjects) {this.reuseObjects = reuseObjects;},public void setReuseObjectsboolean reuseObjects thisreuseObjects  reuseObjects
public DiffFormatter(OutputStream out) {this.out = out;},public DiffFormatterOutputStream out thisout  out
public ExpectedAttributeValue(Boolean exists) {setExists(exists);},public ExpectedAttributeValueBoolean exists setExistsexists
"public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {PostingsReaderBase postingsReader = new Lucene84PostingsReader(state);boolean success = false;try {FieldsProducer ret = new FSTTermsReader(state, postingsReader);success = true;return ret;} finally {if (!success) {IOUtils.closeWhileHandlingException(postingsReader);}}}",public FieldsProducer fieldsProducerSegmentReadState state throws IOException PostingsReaderBase postingsReader  new Lucene84PostingsReaderstateboolean success  falsetry FieldsProducer ret  new FSTTermsReaderstate postingsReadersuccess  truereturn ret finally if success IOUtilscloseWhileHandlingExceptionpostingsReader
public ListSubscribedWorkteamsResult listSubscribedWorkteams(ListSubscribedWorkteamsRequest request) {request = beforeClientExecution(request);return executeListSubscribedWorkteams(request);},public ListSubscribedWorkteamsResult listSubscribedWorkteamsListSubscribedWorkteamsRequest request request  beforeClientExecutionrequestreturn executeListSubscribedWorkteamsrequest
"public BatchDeleteAttributesRequest(String domainName, java.util.List<DeletableItem> items) {setDomainName(domainName);setItems(items);}",public BatchDeleteAttributesRequestString domainName javautilListDeletableItem items setDomainNamedomainNamesetItemsitems
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeByte(_value ? 1 : 0);},public void writeLittleEndianOutput out outwriteBytesid  getPtgClassoutwriteBytevalue  1  0
"public NavigableMap<K, V> descendingMap() {return new BoundedMap(!ascending, from, fromBound, to, toBound);}",public NavigableMapK V descendingMap return new BoundedMapascending from fromBound to toBound
"public ByteBuffer putLong(long value) {int newPosition = position + SizeOf.LONG;if (newPosition > limit) {throw new BufferOverflowException();}Memory.pokeLong(backingArray, offset + position, value, order);position = newPosition;return this;}",public ByteBuffer putLonglong value int newPosition  position  SizeOfLONGif newPosition  limit throw new BufferOverflowExceptionMemorypokeLongbackingArray offset  position value orderposition  newPositionreturn this
public CFRecordsAggregate get(int index) {checkIndex(index);return _cfHeaders.get(index);},public CFRecordsAggregate getint index checkIndexindexreturn cfHeadersgetindex
public long get(int index) {final int o = index / 9;final int b = index % 9;final int shift = b * 7;return (blocks[o] >>> shift) & 127L;},public long getint index final int o  index  9final int b  index  9final int shift  b  7return blockso  shift  127L
public GetSegmentsResult getSegments(GetSegmentsRequest request) {request = beforeClientExecution(request);return executeGetSegments(request);},public GetSegmentsResult getSegmentsGetSegmentsRequest request request  beforeClientExecutionrequestreturn executeGetSegmentsrequest
public DeleteVpcEndpointsResult deleteVpcEndpoints(DeleteVpcEndpointsRequest request) {request = beforeClientExecution(request);return executeDeleteVpcEndpoints(request);},public DeleteVpcEndpointsResult deleteVpcEndpointsDeleteVpcEndpointsRequest request request  beforeClientExecutionrequestreturn executeDeleteVpcEndpointsrequest
"public String toString() {switch (getCellTypeEnum()) {case BLANK:return """";case BOOLEAN:return getBooleanCellValue()?""TRUE"":""FALSE"";case ERROR:return ErrorEval.getText((( BoolErrRecord ) _record).getErrorValue());case FORMULA:return getCellFormula();case NUMERIC:if (DateUtil.isCellDateFormatted(this)) {SimpleDateFormat sdf = new SimpleDateFormat(""dd-MMM-yyyy"", LocaleUtil.getUserLocale());sdf.setTimeZone(LocaleUtil.getUserTimeZone());return sdf.format(getDateCellValue());}return  String.valueOf(getNumericCellValue());case STRING:return getStringCellValue();default:return ""Unknown Cell Type: "" + getCellType();}}",public String toString switch getCellTypeEnum case BLANKreturn case BOOLEANreturn getBooleanCellValueTRUEFALSEcase ERRORreturn ErrorEvalgetText BoolErrRecord  recordgetErrorValuecase FORMULAreturn getCellFormulacase NUMERICif DateUtilisCellDateFormattedthis SimpleDateFormat sdf  new SimpleDateFormatddMMMyyyy LocaleUtilgetUserLocalesdfsetTimeZoneLocaleUtilgetUserTimeZonereturn sdfformatgetDateCellValuereturn  StringvalueOfgetNumericCellValuecase STRINGreturn getStringCellValuedefaultreturn Unknown Cell Type   getCellType
public List<? extends HunkHeader> getHunks() {if (hunks == null)return Collections.emptyList();return hunks;},public List extends HunkHeader getHunks if hunks  nullreturn CollectionsemptyListreturn hunks
public ObjectId toObjectId() {ensureId();return idBuffer.toObjectId();},public ObjectId toObjectId ensureIdreturn idBuffertoObjectId
public ListQueuesRequest(String queueNamePrefix) {setQueueNamePrefix(queueNamePrefix);},public ListQueuesRequestString queueNamePrefix setQueueNamePrefixqueueNamePrefix
public AcceptTransitGatewayPeeringAttachmentResult acceptTransitGatewayPeeringAttachment(AcceptTransitGatewayPeeringAttachmentRequest request) {request = beforeClientExecution(request);return executeAcceptTransitGatewayPeeringAttachment(request);},public AcceptTransitGatewayPeeringAttachmentResult acceptTransitGatewayPeeringAttachmentAcceptTransitGatewayPeeringAttachmentRequest request request  beforeClientExecutionrequestreturn executeAcceptTransitGatewayPeeringAttachmentrequest
public String toString() {final int n = length();final StringBuilder b = new StringBuilder(n);for (int i = 0; i < n; i++)b.append(charAt(i));return b.toString();},public String toString final int n  lengthfinal StringBuilder b  new StringBuildernfor int i  0 i  n ibappendcharAtireturn btoString
"public String toString(String field) {StringBuilder buffer = new StringBuilder();buffer.append(""("");for (int i = 0 ; i < disjuncts.length; i++) {Query subquery = disjuncts[i];if (subquery instanceof BooleanQuery) {   buffer.append(""("");buffer.append(subquery.toString(field));buffer.append("")"");}else buffer.append(subquery.toString(field));if (i != disjuncts.length-1) buffer.append("" | "");}buffer.append("")"");if (tieBreakerMultiplier != 0.0f) {buffer.append(""~"");buffer.append(tieBreakerMultiplier);}return buffer.toString();}",public String toStringString field StringBuilder buffer  new StringBuilderbufferappendfor int i  0  i  disjunctslength i Query subquery  disjunctsiif subquery instanceof BooleanQuery    bufferappendbufferappendsubquerytoStringfieldbufferappendelse bufferappendsubquerytoStringfieldif i  disjunctslength1 bufferappend  bufferappendif tieBreakerMultiplier  00f bufferappendbufferappendtieBreakerMultiplierreturn buffertoString
@Override public boolean isEmpty() {return c.isEmpty();},Override public boolean isEmpty return cisEmpty
public String getContentDisposition() {return contentDisposition;},public String getContentDisposition return contentDisposition
public DescribeHsmClientCertificatesResult describeHsmClientCertificates() {return describeHsmClientCertificates(new DescribeHsmClientCertificatesRequest());},public DescribeHsmClientCertificatesResult describeHsmClientCertificates return describeHsmClientCertificatesnew DescribeHsmClientCertificatesRequest
"public static int[] grow(int[] array, int minSize) {assert minSize >= 0: ""size must be positive (got "" + minSize + ""): likely integer overflow?"";if (array.length < minSize) {return growExact(array, oversize(minSize, Integer.BYTES));} else return array;}",public static int growint array int minSize assert minSize  0 size must be positive got   minSize   likely integer overflowif arraylength  minSize return growExactarray oversizeminSize IntegerBYTES else return array
"public String highlightTerm(String originalText, TokenGroup tokenGroup) {if (tokenGroup.getTotalScore() <= 0) {return originalText;}StringBuilder returnBuffer = new StringBuilder(preTag.length() + originalText.length() + postTag.length());returnBuffer.append(preTag);returnBuffer.append(originalText);returnBuffer.append(postTag);return returnBuffer.toString();}",public String highlightTermString originalText TokenGroup tokenGroup if tokenGroupgetTotalScore  0 return originalTextStringBuilder returnBuffer  new StringBuilderpreTaglength  originalTextlength  postTaglengthreturnBufferappendpreTagreturnBufferappendoriginalTextreturnBufferappendpostTagreturn returnBuffertoString
"public LimitTokenCountFilter(TokenStream in, int maxTokenCount, boolean consumeAllTokens) {super(in);if (maxTokenCount < 1) {throw new IllegalArgumentException(""maxTokenCount must be greater than zero"");}this.maxTokenCount = maxTokenCount;this.consumeAllTokens = consumeAllTokens;}",public LimitTokenCountFilterTokenStream in int maxTokenCount boolean consumeAllTokens superinif maxTokenCount  1 throw new IllegalArgumentExceptionmaxTokenCount must be greater than zerothismaxTokenCount  maxTokenCountthisconsumeAllTokens  consumeAllTokens
"public void encode(int[] values, int valuesOffset, byte[] blocks,int blocksOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = encode(values, valuesOffset);valuesOffset += valueCount;blocksOffset = writeLong(block, blocks, blocksOffset);}}",public void encodeint values int valuesOffset byte blocksint blocksOffset int iterations for int i  0 i  iterations i final long block  encodevalues valuesOffsetvaluesOffset  valueCountblocksOffset  writeLongblock blocks blocksOffset
public TokenFilter create(TokenStream input) {return new ClassicFilter(input);},public TokenFilter createTokenStream input return new ClassicFilterinput
public boolean isAllowThin() {return allowThin;},public boolean isAllowThin return allowThin
"public boolean contains(Object o) {if (!(o instanceof Entry))return false;Entry<?, ?> e = (Entry<?, ?>) o;return containsMapping(e.getKey(), e.getValue());}",public boolean containsObject o if o instanceof Entryreturn falseEntry  e  Entry  oreturn containsMappingegetKey egetValue
"public void add(long v) throws IOException {assert PackedInts.unsignedBitsRequired(v) <= bitsPerValue;assert !finished;if (valueCount != -1 && written >= valueCount) {throw new EOFException(""Writing past end of stream"");}nextValues[off++] = v;if (off == nextValues.length) {flush();}++written;}",public void addlong v throws IOException assert PackedIntsunsignedBitsRequiredv  bitsPerValueassert finishedif valueCount  1  written  valueCount throw new EOFExceptionWriting past end of streamnextValuesoff  vif off  nextValueslength flushwritten
"public GetOnlineServiceResultRequest() {super(""industry-brain"", ""2018-07-12"", ""GetOnlineServiceResult"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public GetOnlineServiceResultRequest superindustrybrain 20180712 GetOnlineServiceResultsetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public void setBigFileThreshold(int bigFileThreshold) {this.bigFileThreshold = bigFileThreshold;},public void setBigFileThresholdint bigFileThreshold thisbigFileThreshold  bigFileThreshold
public boolean isEmpty() {return size == 0;},public boolean isEmpty return size  0
"public int compareTo(ScoreTerm other) {if (term.bytesEquals(other.term))return 0; if (this.boost == other.boost)return other.term.compareTo(this.term);else return Float.compare(this.boost, other.boost);}",public int compareToScoreTerm other if termbytesEqualsothertermreturn 0 if thisboost  otherboostreturn othertermcompareTothistermelse return Floatcomparethisboost otherboost
"public int codePointCount(int start, int end) {if (start < 0 || end > count || start > end) {throw startEndAndLength(start, end);}return Character.codePointCount(value, start, end - start);}",public int codePointCountint start int end if start  0  end  count  start  end throw startEndAndLengthstart endreturn CharactercodePointCountvalue start end  start
public String[] getCommitNames() {return commitNames;},public String getCommitNames return commitNames
public boolean isEmpty() {if (sizeIsValid)return 0 == size;return !iterator().hasNext();},public boolean isEmpty if sizeIsValidreturn 0  sizereturn iteratorhasNext
public boolean isBorder(){return border.isSet(field_1_options);},public boolean isBorderreturn borderisSetfield1options
public DeleteLaunchTemplateVersionsResult deleteLaunchTemplateVersions(DeleteLaunchTemplateVersionsRequest request) {request = beforeClientExecution(request);return executeDeleteLaunchTemplateVersions(request);},public DeleteLaunchTemplateVersionsResult deleteLaunchTemplateVersionsDeleteLaunchTemplateVersionsRequest request request  beforeClientExecutionrequestreturn executeDeleteLaunchTemplateVersionsrequest
public DescribeDeviceResult describeDevice(DescribeDeviceRequest request) {request = beforeClientExecution(request);return executeDescribeDevice(request);},public DescribeDeviceResult describeDeviceDescribeDeviceRequest request request  beforeClientExecutionrequestreturn executeDescribeDevicerequest
public static Class<? extends TokenizerFactory> lookupClass(String name) {return loader.lookupClass(name);},public static Class extends TokenizerFactory lookupClassString name return loaderlookupClassname
public CreateParameterGroupResult createParameterGroup(CreateParameterGroupRequest request) {request = beforeClientExecution(request);return executeCreateParameterGroup(request);},public CreateParameterGroupResult createParameterGroupCreateParameterGroupRequest request request  beforeClientExecutionrequestreturn executeCreateParameterGrouprequest
"public FieldsQuery(SrndQuery q, String fieldName, char fieldOp) {this.q = q;fieldNames = new ArrayList<>();fieldNames.add(fieldName);this.fieldOp = fieldOp;}",public FieldsQuerySrndQuery q String fieldName char fieldOp thisq  qfieldNames  new ArrayListfieldNamesaddfieldNamethisfieldOp  fieldOp
public DescribeReservedCacheNodesOfferingsResult describeReservedCacheNodesOfferings(DescribeReservedCacheNodesOfferingsRequest request) {request = beforeClientExecution(request);return executeDescribeReservedCacheNodesOfferings(request);},public DescribeReservedCacheNodesOfferingsResult describeReservedCacheNodesOfferingsDescribeReservedCacheNodesOfferingsRequest request request  beforeClientExecutionrequestreturn executeDescribeReservedCacheNodesOfferingsrequest
public String toString() {final StringBuilder s = new StringBuilder();s.append(Constants.typeString(getType()));s.append(' ');s.append(name());s.append(' ');appendCoreFlags(s);return s.toString();},public String toString final StringBuilder s  new StringBuildersappendConstantstypeStringgetTypesappend sappendnamesappend appendCoreFlagssreturn stoString
public UpdateTableReplicaAutoScalingResult updateTableReplicaAutoScaling(UpdateTableReplicaAutoScalingRequest request) {request = beforeClientExecution(request);return executeUpdateTableReplicaAutoScaling(request);},public UpdateTableReplicaAutoScalingResult updateTableReplicaAutoScalingUpdateTableReplicaAutoScalingRequest request request  beforeClientExecutionrequestreturn executeUpdateTableReplicaAutoScalingrequest
public ValidateConfigurationResult validateConfiguration(ValidateConfigurationRequest request) {request = beforeClientExecution(request);return executeValidateConfiguration(request);},public ValidateConfigurationResult validateConfigurationValidateConfigurationRequest request request  beforeClientExecutionrequestreturn executeValidateConfigurationrequest
public ModifyReservedInstancesResult modifyReservedInstances(ModifyReservedInstancesRequest request) {request = beforeClientExecution(request);return executeModifyReservedInstances(request);},public ModifyReservedInstancesResult modifyReservedInstancesModifyReservedInstancesRequest request request  beforeClientExecutionrequestreturn executeModifyReservedInstancesrequest
"public void ReInit(CharStream stream, int lexState){ReInit(stream);SwitchTo(lexState);}",public void ReInitCharStream stream int lexStateReInitstreamSwitchTolexState
public DeleteIdentityResult deleteIdentity(DeleteIdentityRequest request) {request = beforeClientExecution(request);return executeDeleteIdentity(request);},public DeleteIdentityResult deleteIdentityDeleteIdentityRequest request request  beforeClientExecutionrequestreturn executeDeleteIdentityrequest
public PackConfig(Config cfg) {fromConfig(cfg);},public PackConfigConfig cfg fromConfigcfg
"public StringBuilder append(float f) {RealToString.getInstance().appendFloat(this, f);return this;}",public StringBuilder appendfloat f RealToStringgetInstanceappendFloatthis freturn this
public DeleteBrokerResult deleteBroker(DeleteBrokerRequest request) {request = beforeClientExecution(request);return executeDeleteBroker(request);},public DeleteBrokerResult deleteBrokerDeleteBrokerRequest request request  beforeClientExecutionrequestreturn executeDeleteBrokerrequest
"public static String stripTags(StringBuilder buf, int start) {return stripTags(buf.substring(start),0);}",public static String stripTagsStringBuilder buf int start return stripTagsbufsubstringstart0
"public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {double idf = 0d; List<Explanation> subs = new ArrayList<>();for (final TermStatistics stat : termStats ) {Explanation idfExplain = idfExplain(collectionStats, stat);subs.add(idfExplain);idf += idfExplain.getValue().floatValue();}return Explanation.match((float) idf, ""idf(), sum of:"", subs);}",public Explanation idfExplainCollectionStatistics collectionStats TermStatistics termStats double idf  0d ListExplanation subs  new ArrayListfor final TermStatistics stat  termStats  Explanation idfExplain  idfExplaincollectionStats statsubsaddidfExplainidf  idfExplaingetValuefloatValuereturn Explanationmatchfloat idf idf sum of subs
public CalcCountRecord clone() {return copy();},public CalcCountRecord clone return copy
"public boolean matches(ParseTree tree, String pattern, int patternRuleIndex) {ParseTreePattern p = compile(pattern, patternRuleIndex);return matches(tree, p);}",public boolean matchesParseTree tree String pattern int patternRuleIndex ParseTreePattern p  compilepattern patternRuleIndexreturn matchestree p
"public int addConditionalFormatting(CellRangeAddress[] regions,HSSFConditionalFormattingRule rule1) {return addConditionalFormatting(regions, rule1 == null ?null : new HSSFConditionalFormattingRule[] { rule1 });}",public int addConditionalFormattingCellRangeAddress regionsHSSFConditionalFormattingRule rule1 return addConditionalFormattingregions rule1  null null  new HSSFConditionalFormattingRule  rule1 
public long hash1(char carray[]) {final long p = 1099511628211L;long hash = 0xcbf29ce484222325L;for (int i = 0; i < carray.length; i++) {char d = carray[i];hash = (hash ^ (d & 0x00FF)) * p;hash = (hash ^ (d >> 8)) * p;}return hash;},public long hash1char carray final long p  1099511628211Llong hash  0xcbf29ce484222325Lfor int i  0 i  carraylength i char d  carrayihash  hash  d  0x00FF  phash  hash  d  8  preturn hash
public PutAnomalyDetectorResult putAnomalyDetector(PutAnomalyDetectorRequest request) {request = beforeClientExecution(request);return executePutAnomalyDetector(request);},public PutAnomalyDetectorResult putAnomalyDetectorPutAnomalyDetectorRequest request request  beforeClientExecutionrequestreturn executePutAnomalyDetectorrequest
public AssociateTransitGatewayRouteTableResult associateTransitGatewayRouteTable(AssociateTransitGatewayRouteTableRequest request) {request = beforeClientExecution(request);return executeAssociateTransitGatewayRouteTable(request);},public AssociateTransitGatewayRouteTableResult associateTransitGatewayRouteTableAssociateTransitGatewayRouteTableRequest request request  beforeClientExecutionrequestreturn executeAssociateTransitGatewayRouteTablerequest
"public List<String> getIPv4Association(String publicIp) {return EC2MetadataUtils.getItems(EC2_METADATA_ROOT + path+ ""ipv4-associations/"" + publicIp);}",public ListString getIPv4AssociationString publicIp return EC2MetadataUtilsgetItemsEC2METADATAROOT  path ipv4associations  publicIp
"public void reset() {count = 0;assert forwardCount == 0: ""pos="" + pos + "" forwardCount="" + forwardCount;}",public void reset count  0assert forwardCount  0 pos  pos   forwardCount  forwardCount
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_recalc);},public void serializeLittleEndianOutput out outwriteShortfield1recalc
public final void addConsumingCell(FormulaCellCacheEntry cellLoc) {_consumingCells.add(cellLoc);},public final void addConsumingCellFormulaCellCacheEntry cellLoc consumingCellsaddcellLoc
public DeleteUserRequest(String userName) {setUserName(userName);},public DeleteUserRequestString userName setUserNameuserName
public SingleValueVector(ValueEval value) {_value = value;},public SingleValueVectorValueEval value value  value
public DeleteMethodResult deleteMethod(DeleteMethodRequest request) {request = beforeClientExecution(request);return executeDeleteMethod(request);},public DeleteMethodResult deleteMethodDeleteMethodRequest request request  beforeClientExecutionrequestreturn executeDeleteMethodrequest
public static CompareResult valueOf(int simpleCompareResult) {if(simpleCompareResult < 0) {return LESS_THAN;}if(simpleCompareResult > 0) {return GREATER_THAN;}return EQUAL;},public static CompareResult valueOfint simpleCompareResult ifsimpleCompareResult  0 return LESSTHANifsimpleCompareResult  0 return GREATERTHANreturn EQUAL
public CreatePresetResult createPreset(CreatePresetRequest request) {request = beforeClientExecution(request);return executeCreatePreset(request);},public CreatePresetResult createPresetCreatePresetRequest request request  beforeClientExecutionrequestreturn executeCreatePresetrequest
public S3Origin(String domainName) {setDomainName(domainName);},public S3OriginString domainName setDomainNamedomainName
"public HTMLStripCharFilter create(Reader input) {HTMLStripCharFilter charFilter;if (null == escapedTags) {charFilter = new HTMLStripCharFilter(input);} else {charFilter = new HTMLStripCharFilter(input, escapedTags);}return charFilter;}",public HTMLStripCharFilter createReader input HTMLStripCharFilter charFilterif null  escapedTags charFilter  new HTMLStripCharFilterinput else charFilter  new HTMLStripCharFilterinput escapedTagsreturn charFilter
"public void setCurrent(char text[], int length) {current = text;cursor = 0;limit = length;limit_backward = 0;bra = cursor;ket = limit;}",public void setCurrentchar text int length current  textcursor  0limit  lengthlimitbackward  0bra  cursorket  limit
public DisableTransitGatewayRouteTablePropagationResult disableTransitGatewayRouteTablePropagation(DisableTransitGatewayRouteTablePropagationRequest request) {request = beforeClientExecution(request);return executeDisableTransitGatewayRouteTablePropagation(request);},public DisableTransitGatewayRouteTablePropagationResult disableTransitGatewayRouteTablePropagationDisableTransitGatewayRouteTablePropagationRequest request request  beforeClientExecutionrequestreturn executeDisableTransitGatewayRouteTablePropagationrequest
public UpdateTagsForDomainResult updateTagsForDomain(UpdateTagsForDomainRequest request) {request = beforeClientExecution(request);return executeUpdateTagsForDomain(request);},public UpdateTagsForDomainResult updateTagsForDomainUpdateTagsForDomainRequest request request  beforeClientExecutionrequestreturn executeUpdateTagsForDomainrequest
public ObjectId getPeeledObjectId() {return peeledObjectId;},public ObjectId getPeeledObjectId return peeledObjectId
"public LexerActionExecutor(LexerAction[] lexerActions) {this.lexerActions = lexerActions;int hash = MurmurHash.initialize();for (LexerAction lexerAction : lexerActions) {hash = MurmurHash.update(hash, lexerAction);}this.hashCode = MurmurHash.finish(hash, lexerActions.length);}",public LexerActionExecutorLexerAction lexerActions thislexerActions  lexerActionsint hash  MurmurHashinitializefor LexerAction lexerAction  lexerActions hash  MurmurHashupdatehash lexerActionthishashCode  MurmurHashfinishhash lexerActionslength
public SetAlarmStateResult setAlarmState(SetAlarmStateRequest request) {request = beforeClientExecution(request);return executeSetAlarmState(request);},public SetAlarmStateResult setAlarmStateSetAlarmStateRequest request request  beforeClientExecutionrequestreturn executeSetAlarmStaterequest
public final File getFile() {return configFile;},public final File getFile return configFile
public DescribeUsersResult describeUsers(DescribeUsersRequest request) {request = beforeClientExecution(request);return executeDescribeUsers(request);},public DescribeUsersResult describeUsersDescribeUsersRequest request request  beforeClientExecutionrequestreturn executeDescribeUsersrequest
"public PagedMutable(long size, int pageSize, int bitsPerValue, float acceptableOverheadRatio) {this(size, pageSize, PackedInts.fastestFormatAndBits(pageSize, bitsPerValue, acceptableOverheadRatio));fillPages();}",public PagedMutablelong size int pageSize int bitsPerValue float acceptableOverheadRatio thissize pageSize PackedIntsfastestFormatAndBitspageSize bitsPerValue acceptableOverheadRatiofillPages
public CFHeaderRecord() {createEmpty();},public CFHeaderRecord createEmpty
public GetDataSourceResult getDataSource(GetDataSourceRequest request) {request = beforeClientExecution(request);return executeGetDataSource(request);},public GetDataSourceResult getDataSourceGetDataSourceRequest request request  beforeClientExecutionrequestreturn executeGetDataSourcerequest
public void serialize(LittleEndianOutput out) {out.writeDouble(field_1_margin);},public void serializeLittleEndianOutput out outwriteDoublefield1margin
public DeleteProfilingGroupResult deleteProfilingGroup(DeleteProfilingGroupRequest request) {request = beforeClientExecution(request);return executeDeleteProfilingGroup(request);},public DeleteProfilingGroupResult deleteProfilingGroupDeleteProfilingGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteProfilingGrouprequest
"public IntBuffer compact() {System.arraycopy(backingArray, position + offset, backingArray, offset, remaining());position = limit - position;limit = capacity;mark = UNSET_MARK;return this;}",public IntBuffer compact SystemarraycopybackingArray position  offset backingArray offset remainingposition  limit  positionlimit  capacitymark  UNSETMARKreturn this
"public void setup(int id, int progress, boolean fromUser) {mId = id;mProgress = progress;mFromUser = fromUser;}",public void setupint id int progress boolean fromUser mId  idmProgress  progressmFromUser  fromUser
"public static FuncVarPtg create(LittleEndianInput in)  {return create(in.readByte(), in.readUShort());}",public static FuncVarPtg createLittleEndianInput in  return createinreadByte inreadUShort
public CreateAttendeeResult createAttendee(CreateAttendeeRequest request) {request = beforeClientExecution(request);return executeCreateAttendee(request);},public CreateAttendeeResult createAttendeeCreateAttendeeRequest request request  beforeClientExecutionrequestreturn executeCreateAttendeerequest
"public String toString() {StringBuilder sb = new StringBuilder();sb.append(""[EXTERNALNAME]\n"");sb.append(""    .options = "").append(field_1_option_flag).append(""\n"");sb.append(""    .ix      = "").append(field_2_ixals).append(""\n"");sb.append(""    .name    = "").append(field_4_name).append(""\n"");if(field_5_name_definition != null) {Ptg[] ptgs = field_5_name_definition.getTokens();for (Ptg ptg : ptgs) {sb.append(""    .namedef = "").append(ptg).append(ptg.getRVAType()).append(""\n"");}}sb.append(""[/EXTERNALNAME]\n"");return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappendEXTERNALNAMEnsbappend    options  appendfield1optionflagappendnsbappend    ix       appendfield2ixalsappendnsbappend    name     appendfield4nameappendniffield5namedefinition  null Ptg ptgs  field5namedefinitiongetTokensfor Ptg ptg  ptgs sbappend    namedef  appendptgappendptggetRVATypeappendnsbappendEXTERNALNAMEnreturn sbtoString
public DescribeDBClusterParameterGroupsResult describeDBClusterParameterGroups(DescribeDBClusterParameterGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeDBClusterParameterGroups(request);},public DescribeDBClusterParameterGroupsResult describeDBClusterParameterGroupsDescribeDBClusterParameterGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeDBClusterParameterGroupsrequest
public PropertyTable(HeaderBlock headerBlock){_header_block = headerBlock;_bigBigBlockSize = headerBlock.getBigBlockSize();addProperty(new RootProperty());},public PropertyTableHeaderBlock headerBlockheaderblock  headerBlockbigBigBlockSize  headerBlockgetBigBlockSizeaddPropertynew RootProperty
public int getIndexOfName(String name) {for (int i = 0; i < _externalNameRecords.length; i++) {if (_externalNameRecords[i].getText().equalsIgnoreCase(name)) {return i;}}return -1;},public int getIndexOfNameString name for int i  0 i  externalNameRecordslength i if externalNameRecordsigetTextequalsIgnoreCasename return ireturn 1
public AbortVaultLockResult abortVaultLock(AbortVaultLockRequest request) {request = beforeClientExecution(request);return executeAbortVaultLock(request);},public AbortVaultLockResult abortVaultLockAbortVaultLockRequest request request  beforeClientExecutionrequestreturn executeAbortVaultLockrequest
public CreateBatchPredictionResult createBatchPrediction(CreateBatchPredictionRequest request) {request = beforeClientExecution(request);return executeCreateBatchPrediction(request);},public CreateBatchPredictionResult createBatchPredictionCreateBatchPredictionRequest request request  beforeClientExecutionrequestreturn executeCreateBatchPredictionrequest
public ListHostedZonesByNameResult listHostedZonesByName(ListHostedZonesByNameRequest request) {request = beforeClientExecution(request);return executeListHostedZonesByName(request);},public ListHostedZonesByNameResult listHostedZonesByNameListHostedZonesByNameRequest request request  beforeClientExecutionrequestreturn executeListHostedZonesByNamerequest
"public final PersonIdent getAuthorIdent() {final byte[] raw = buffer;final int nameB = RawParseUtils.author(raw, 0);if (nameB < 0)return null;return RawParseUtils.parsePersonIdent(raw, nameB);}",public final PersonIdent getAuthorIdent final byte raw  bufferfinal int nameB  RawParseUtilsauthorraw 0if nameB  0return nullreturn RawParseUtilsparsePersonIdentraw nameB
public RecordLifecycleActionHeartbeatResult recordLifecycleActionHeartbeat(RecordLifecycleActionHeartbeatRequest request) {request = beforeClientExecution(request);return executeRecordLifecycleActionHeartbeat(request);},public RecordLifecycleActionHeartbeatResult recordLifecycleActionHeartbeatRecordLifecycleActionHeartbeatRequest request request  beforeClientExecutionrequestreturn executeRecordLifecycleActionHeartbeatrequest
public void flush() {if (logger!=null) {logger.flush();}},public void flush if loggernull loggerflush
public GetLoadBalancerTlsCertificatesResult getLoadBalancerTlsCertificates(GetLoadBalancerTlsCertificatesRequest request) {request = beforeClientExecution(request);return executeGetLoadBalancerTlsCertificates(request);},public GetLoadBalancerTlsCertificatesResult getLoadBalancerTlsCertificatesGetLoadBalancerTlsCertificatesRequest request request  beforeClientExecutionrequestreturn executeGetLoadBalancerTlsCertificatesrequest
"public ExtSSTRecord createExtSSTRecord(int sstOffset) {if (bucketAbsoluteOffsets == null || bucketRelativeOffsets == null) {throw new IllegalStateException(""SST record has not yet been serialized."");}ExtSSTRecord extSST = new ExtSSTRecord();extSST.setNumStringsPerBucket((short)8);int[] absoluteOffsets = bucketAbsoluteOffsets.clone();int[] relativeOffsets = bucketRelativeOffsets.clone();for ( int i = 0; i < absoluteOffsets.length; i++ ) {absoluteOffsets[i] += sstOffset;}extSST.setBucketOffsets(absoluteOffsets, relativeOffsets);return extSST;}",public ExtSSTRecord createExtSSTRecordint sstOffset if bucketAbsoluteOffsets  null  bucketRelativeOffsets  null throw new IllegalStateExceptionSST record has not yet been serializedExtSSTRecord extSST  new ExtSSTRecordextSSTsetNumStringsPerBucketshort8int absoluteOffsets  bucketAbsoluteOffsetscloneint relativeOffsets  bucketRelativeOffsetsclonefor  int i  0 i  absoluteOffsetslength i  absoluteOffsetsi  sstOffsetextSSTsetBucketOffsetsabsoluteOffsets relativeOffsetsreturn extSST
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());},public void writeLittleEndianOutput out outwriteBytesid  getPtgClass
public ListMultipartUploadsResult listMultipartUploads(ListMultipartUploadsRequest request) {request = beforeClientExecution(request);return executeListMultipartUploads(request);},public ListMultipartUploadsResult listMultipartUploadsListMultipartUploadsRequest request request  beforeClientExecutionrequestreturn executeListMultipartUploadsrequest
"public BytesRef add(BytesRef prefix, BytesRef output) {assert prefix != null;assert output != null;if (prefix == NO_OUTPUT) {return output;} else if (output == NO_OUTPUT) {return prefix;} else {assert prefix.length > 0;assert output.length > 0;BytesRef result = new BytesRef(prefix.length + output.length);System.arraycopy(prefix.bytes, prefix.offset, result.bytes, 0, prefix.length);System.arraycopy(output.bytes, output.offset, result.bytes, prefix.length, output.length);result.length = prefix.length + output.length;return result;}}",public BytesRef addBytesRef prefix BytesRef output assert prefix  nullassert output  nullif prefix  NOOUTPUT return output else if output  NOOUTPUT return prefix else assert prefixlength  0assert outputlength  0BytesRef result  new BytesRefprefixlength  outputlengthSystemarraycopyprefixbytes prefixoffset resultbytes 0 prefixlengthSystemarraycopyoutputbytes outputoffset resultbytes prefixlength outputlengthresultlength  prefixlength  outputlengthreturn result
public void setParams(String params) {super.setParams(params);doWait = Boolean.valueOf(params).booleanValue();},public void setParamsString params supersetParamsparamsdoWait  BooleanvalueOfparamsbooleanValue
"public RunBackgroundTask(PerfTask task, boolean letChildReport) {this.task = task;this.letChildReport = letChildReport;}",public RunBackgroundTaskPerfTask task boolean letChildReport thistask  taskthisletChildReport  letChildReport
public GridsetRecord clone() {return copy();},public GridsetRecord clone return copy
public BoundSheetRecord(String sheetname) {field_2_option_flags = 0;setSheetname(sheetname);},public BoundSheetRecordString sheetname field2optionflags  0setSheetnamesheetname
"public MFADevice(String userName, String serialNumber, java.util.Date enableDate) {setUserName(userName);setSerialNumber(serialNumber);setEnableDate(enableDate);}",public MFADeviceString userName String serialNumber javautilDate enableDate setUserNameuserNamesetSerialNumberserialNumbersetEnableDateenableDate
public DescribeStreamSummaryResult describeStreamSummary(DescribeStreamSummaryRequest request) {request = beforeClientExecution(request);return executeDescribeStreamSummary(request);},public DescribeStreamSummaryResult describeStreamSummaryDescribeStreamSummaryRequest request request  beforeClientExecutionrequestreturn executeDescribeStreamSummaryrequest
public ListClusterJobsResult listClusterJobs(ListClusterJobsRequest request) {request = beforeClientExecution(request);return executeListClusterJobs(request);},public ListClusterJobsResult listClusterJobsListClusterJobsRequest request request  beforeClientExecutionrequestreturn executeListClusterJobsrequest
"public int compareTo(String version) {long gen = Long.parseLong(version, RADIX);long commitGen = commit.getGeneration();return commitGen < gen ? -1 : (commitGen > gen ? 1 : 0);}",public int compareToString version long gen  LongparseLongversion RADIXlong commitGen  commitgetGenerationreturn commitGen  gen  1  commitGen  gen  1  0
"public CharSequence toQueryString(EscapeQuerySyntax escapeSyntaxParser) {if (getChildren() == null || getChildren().size() == 0)return """";StringBuilder sb = new StringBuilder();String filler = """";for (QueryNode child : getChildren()) {sb.append(filler).append(child.toQueryString(escapeSyntaxParser));filler = "","";}return ""[MTP["" + sb.toString() + ""]]"";}",public CharSequence toQueryStringEscapeQuerySyntax escapeSyntaxParser if getChildren  null  getChildrensize  0return StringBuilder sb  new StringBuilderString filler  for QueryNode child  getChildren sbappendfillerappendchildtoQueryStringescapeSyntaxParserfiller  return MTP  sbtoString  
public final float readFloat() throws IOException {return Float.intBitsToFloat(readInt());},public final float readFloat throws IOException return FloatintBitsToFloatreadInt
"public boolean isSubTotal(int rowIndex, int columnIndex){boolean subtotal = false;EvaluationCell cell = getSheet().getCell(rowIndex, columnIndex);if(cell != null && cell.getCellType() == CellType.FORMULA){EvaluationWorkbook wb = _bookEvaluator.getWorkbook();for(Ptg ptg : wb.getFormulaTokens(cell)){if(ptg instanceof FuncVarPtg){FuncVarPtg f = (FuncVarPtg)ptg;if(""SUBTOTAL"".equals(f.getName())) {subtotal = true;break;}}}}return subtotal;}",public boolean isSubTotalint rowIndex int columnIndexboolean subtotal  falseEvaluationCell cell  getSheetgetCellrowIndex columnIndexifcell  null  cellgetCellType  CellTypeFORMULAEvaluationWorkbook wb  bookEvaluatorgetWorkbookforPtg ptg  wbgetFormulaTokenscellifptg instanceof FuncVarPtgFuncVarPtg f  FuncVarPtgptgifSUBTOTALequalsfgetName subtotal  truebreakreturn subtotal
public CreateMonitoringScheduleResult createMonitoringSchedule(CreateMonitoringScheduleRequest request) {request = beforeClientExecution(request);return executeCreateMonitoringSchedule(request);},public CreateMonitoringScheduleResult createMonitoringScheduleCreateMonitoringScheduleRequest request request  beforeClientExecutionrequestreturn executeCreateMonitoringSchedulerequest
public TokenStream create(TokenStream input) {return new CzechStemFilter(input);},public TokenStream createTokenStream input return new CzechStemFilterinput
public GetSpeechSynthesisTaskResult getSpeechSynthesisTask(GetSpeechSynthesisTaskRequest request) {request = beforeClientExecution(request);return executeGetSpeechSynthesisTask(request);},public GetSpeechSynthesisTaskResult getSpeechSynthesisTaskGetSpeechSynthesisTaskRequest request request  beforeClientExecutionrequestreturn executeGetSpeechSynthesisTaskrequest
"public FuzzySet downsize(FieldInfo fieldInfo, FuzzySet initialSet) {float targetMaxSaturation = 0.1f;return initialSet.downsize(targetMaxSaturation);}",public FuzzySet downsizeFieldInfo fieldInfo FuzzySet initialSet float targetMaxSaturation  01freturn initialSetdownsizetargetMaxSaturation
public MonitorInstancesResult monitorInstances(MonitorInstancesRequest request) {request = beforeClientExecution(request);return executeMonitorInstances(request);},public MonitorInstancesResult monitorInstancesMonitorInstancesRequest request request  beforeClientExecutionrequestreturn executeMonitorInstancesrequest
public ListDocumentClassifiersResult listDocumentClassifiers(ListDocumentClassifiersRequest request) {request = beforeClientExecution(request);return executeListDocumentClassifiers(request);},public ListDocumentClassifiersResult listDocumentClassifiersListDocumentClassifiersRequest request request  beforeClientExecutionrequestreturn executeListDocumentClassifiersrequest
"public String toString() {StringBuilder buffer = new StringBuilder();for (int i = 0; i < fields.length; i++) {buffer.append(fields[i].toString());if ((i+1) < fields.length)buffer.append(',');}return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderfor int i  0 i  fieldslength i bufferappendfieldsitoStringif i1  fieldslengthbufferappendreturn buffertoString
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_axisType);out.writeInt(field_2_reserved1);out.writeInt(field_3_reserved2);out.writeInt(field_4_reserved3);out.writeInt(field_5_reserved4);},public void serializeLittleEndianOutput out outwriteShortfield1axisTypeoutwriteIntfield2reserved1outwriteIntfield3reserved2outwriteIntfield4reserved3outwriteIntfield5reserved4
"public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long byte0 = blocks[blocksOffset++] & 0xFF;final long byte1 = blocks[blocksOffset++] & 0xFF;final long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 12) | (byte1 << 4) | (byte2 >>> 4);final long byte3 = blocks[blocksOffset++] & 0xFF;final long byte4 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte2 & 15) << 16) | (byte3 << 8) | byte4;}}",public void decodebyte blocks int blocksOffset long values int valuesOffset int iterations for int i  0 i  iterations i final long byte0  blocksblocksOffset  0xFFfinal long byte1  blocksblocksOffset  0xFFfinal long byte2  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  12  byte1  4  byte2  4final long byte3  blocksblocksOffset  0xFFfinal long byte4  blocksblocksOffset  0xFFvaluesvaluesOffset  byte2  15  16  byte3  8  byte4
public StashDropCommand setStashRef(int stashRef) {if (stashRef < 0)throw new IllegalArgumentException();stashRefEntry = stashRef;return this;},public StashDropCommand setStashRefint stashRef if stashRef  0throw new IllegalArgumentExceptionstashRefEntry  stashRefreturn this
public CreateHITWithHITTypeResult createHITWithHITType(CreateHITWithHITTypeRequest request) {request = beforeClientExecution(request);return executeCreateHITWithHITType(request);},public CreateHITWithHITTypeResult createHITWithHITTypeCreateHITWithHITTypeRequest request request  beforeClientExecutionrequestreturn executeCreateHITWithHITTyperequest
"public void setPlaceholder(int index, Ptg token) {if (_ptgs[index] != null) {throw new IllegalStateException(""Invalid placeholder index ("" + index + "")"");}_ptgs[index] = token;}",public void setPlaceholderint index Ptg token if ptgsindex  null throw new IllegalStateExceptionInvalid placeholder index   index  ptgsindex  token
public Area3DPtg(LittleEndianInput in)  {field_1_index_extern_sheet = in.readShort();readCoordinates(in);},public Area3DPtgLittleEndianInput in  field1indexexternsheet  inreadShortreadCoordinatesin
public UpdateNotebookInstanceResult updateNotebookInstance(UpdateNotebookInstanceRequest request) {request = beforeClientExecution(request);return executeUpdateNotebookInstance(request);},public UpdateNotebookInstanceResult updateNotebookInstanceUpdateNotebookInstanceRequest request request  beforeClientExecutionrequestreturn executeUpdateNotebookInstancerequest
public org.apache.poi.hssf.record.Record findFirstRecordBySid(short sid) {for (org.apache.poi.hssf.record.Record record : records.getRecords() ) {if (record.getSid() == sid) {return record;}}return null;},public orgapachepoihssfrecordRecord findFirstRecordBySidshort sid for orgapachepoihssfrecordRecord record  recordsgetRecords  if recordgetSid  sid return recordreturn null
"public void fromString(byte[] buf, int offset) {fromHexString(buf, offset);}",public void fromStringbyte buf int offset fromHexStringbuf offset
public AttachInstancesResult attachInstances(AttachInstancesRequest request) {request = beforeClientExecution(request);return executeAttachInstances(request);},public AttachInstancesResult attachInstancesAttachInstancesRequest request request  beforeClientExecutionrequestreturn executeAttachInstancesrequest
public NotifyWorkersResult notifyWorkers(NotifyWorkersRequest request) {request = beforeClientExecution(request);return executeNotifyWorkers(request);},public NotifyWorkersResult notifyWorkersNotifyWorkersRequest request request  beforeClientExecutionrequestreturn executeNotifyWorkersrequest
public CommitCommand commit() {return new CommitCommand(repo);},public CommitCommand commit return new CommitCommandrepo
public BufferedIndexInput clone() {BufferedIndexInput clone = (BufferedIndexInput)super.clone();clone.buffer = null;clone.bufferLength = 0;clone.bufferPosition = 0;clone.bufferStart = getFilePointer();return clone;},public BufferedIndexInput clone BufferedIndexInput clone  BufferedIndexInputsupercloneclonebuffer  nullclonebufferLength  0clonebufferPosition  0clonebufferStart  getFilePointerreturn clone
public boolean hasEntry( String name ){return name != null && _byname.containsKey( name );},public boolean hasEntry String name return name  null  bynamecontainsKey name 
"public MorfologikFilterFactory(Map<String,String> args) {super(args);final String DICTIONARY_RESOURCE_ATTRIBUTE = ""dictionary-resource"";String dictionaryResource = get(args, DICTIONARY_RESOURCE_ATTRIBUTE);if (dictionaryResource != null && !dictionaryResource.isEmpty()) {throw new IllegalArgumentException(""The "" + DICTIONARY_RESOURCE_ATTRIBUTE + "" attribute is no ""+ ""longer supported. Use the '"" + DICTIONARY_ATTRIBUTE + ""' attribute instead (see LUCENE-6833)."");}resourceName = get(args, DICTIONARY_ATTRIBUTE);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public MorfologikFilterFactoryMapStringString args superargsfinal String DICTIONARYRESOURCEATTRIBUTE  dictionaryresourceString dictionaryResource  getargs DICTIONARYRESOURCEATTRIBUTEif dictionaryResource  null  dictionaryResourceisEmpty throw new IllegalArgumentExceptionThe   DICTIONARYRESOURCEATTRIBUTE   attribute is no  longer supported Use the   DICTIONARYATTRIBUTE   attribute instead see LUCENE6833resourceName  getargs DICTIONARYATTRIBUTEif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public static DVConstraint createNumericConstraint(int validationType, int comparisonOperator,String expr1, String expr2) {switch (validationType) {case ValidationType.ANY:if (expr1 != null || expr2 != null) {throw new IllegalArgumentException(""expr1 and expr2 must be null for validation type 'any'"");}break;case ValidationType.DECIMAL:case ValidationType.INTEGER:case ValidationType.TEXT_LENGTH:if (expr1 == null) {throw new IllegalArgumentException(""expr1 must be supplied"");}OperatorType.validateSecondArg(comparisonOperator, expr2);break;default:throw new IllegalArgumentException(""Validation Type (""+ validationType + "") not supported with this method"");}String formula1 = getFormulaFromTextExpression(expr1);Double value1 = formula1 == null ? convertNumber(expr1) : null;String formula2 = getFormulaFromTextExpression(expr2);Double value2 = formula2 == null ? convertNumber(expr2) : null;return new DVConstraint(validationType, comparisonOperator, formula1, formula2, value1, value2, null);}",public static DVConstraint createNumericConstraintint validationType int comparisonOperatorString expr1 String expr2 switch validationType case ValidationTypeANYif expr1  null  expr2  null throw new IllegalArgumentExceptionexpr1 and expr2 must be null for validation type anybreakcase ValidationTypeDECIMALcase ValidationTypeINTEGERcase ValidationTypeTEXTLENGTHif expr1  null throw new IllegalArgumentExceptionexpr1 must be suppliedOperatorTypevalidateSecondArgcomparisonOperator expr2breakdefaultthrow new IllegalArgumentExceptionValidation Type  validationType   not supported with this methodString formula1  getFormulaFromTextExpressionexpr1Double value1  formula1  null  convertNumberexpr1  nullString formula2  getFormulaFromTextExpressionexpr2Double value2  formula2  null  convertNumberexpr2  nullreturn new DVConstraintvalidationType comparisonOperator formula1 formula2 value1 value2 null
public UpdateUsageResult updateUsage(UpdateUsageRequest request) {request = beforeClientExecution(request);return executeUpdateUsage(request);},public UpdateUsageResult updateUsageUpdateUsageRequest request request  beforeClientExecutionrequestreturn executeUpdateUsagerequest
public UpdateEvaluationResult updateEvaluation(UpdateEvaluationRequest request) {request = beforeClientExecution(request);return executeUpdateEvaluation(request);},public UpdateEvaluationResult updateEvaluationUpdateEvaluationRequest request request  beforeClientExecutionrequestreturn executeUpdateEvaluationrequest
public ProtectRecord(boolean isProtected) {this(0);setProtect(isProtected);},public ProtectRecordboolean isProtected this0setProtectisProtected
public void serialize(LittleEndianOutput out) {out.writeShort(recordType);out.writeShort(grbitFrt);associatedRange.serialize(out);},public void serializeLittleEndianOutput out outwriteShortrecordTypeoutwriteShortgrbitFrtassociatedRangeserializeout
public GetDocumentPathResult getDocumentPath(GetDocumentPathRequest request) {request = beforeClientExecution(request);return executeGetDocumentPath(request);},public GetDocumentPathResult getDocumentPathGetDocumentPathRequest request request  beforeClientExecutionrequestreturn executeGetDocumentPathrequest
public CreateTransitGatewayVpcAttachmentResult createTransitGatewayVpcAttachment(CreateTransitGatewayVpcAttachmentRequest request) {request = beforeClientExecution(request);return executeCreateTransitGatewayVpcAttachment(request);},public CreateTransitGatewayVpcAttachmentResult createTransitGatewayVpcAttachmentCreateTransitGatewayVpcAttachmentRequest request request  beforeClientExecutionrequestreturn executeCreateTransitGatewayVpcAttachmentrequest
public boolean isLarge() {return true;},public boolean isLarge return true
public DisassociateSubnetCidrBlockResult disassociateSubnetCidrBlock(DisassociateSubnetCidrBlockRequest request) {request = beforeClientExecution(request);return executeDisassociateSubnetCidrBlock(request);},public DisassociateSubnetCidrBlockResult disassociateSubnetCidrBlockDisassociateSubnetCidrBlockRequest request request  beforeClientExecutionrequestreturn executeDisassociateSubnetCidrBlockrequest
public static byte[] encode(String str) {final ByteBuffer bb = UTF_8.encode(str);final int len = bb.limit();if (bb.hasArray() && bb.arrayOffset() == 0) {final byte[] arr = bb.array();if (arr.length == len)return arr;}final byte[] arr = new byte[len];bb.get(arr);return arr;},public static byte encodeString str final ByteBuffer bb  UTF8encodestrfinal int len  bblimitif bbhasArray  bbarrayOffset  0 final byte arr  bbarrayif arrlength  lenreturn arrfinal byte arr  new bytelenbbgetarrreturn arr
public DescribePlacementGroupsResult describePlacementGroups() {return describePlacementGroups(new DescribePlacementGroupsRequest());},public DescribePlacementGroupsResult describePlacementGroups return describePlacementGroupsnew DescribePlacementGroupsRequest
public UpdateTrialResult updateTrial(UpdateTrialRequest request) {request = beforeClientExecution(request);return executeUpdateTrial(request);},public UpdateTrialResult updateTrialUpdateTrialRequest request request  beforeClientExecutionrequestreturn executeUpdateTrialrequest
public DeleteTransitGatewayPeeringAttachmentResult deleteTransitGatewayPeeringAttachment(DeleteTransitGatewayPeeringAttachmentRequest request) {request = beforeClientExecution(request);return executeDeleteTransitGatewayPeeringAttachment(request);},public DeleteTransitGatewayPeeringAttachmentResult deleteTransitGatewayPeeringAttachmentDeleteTransitGatewayPeeringAttachmentRequest request request  beforeClientExecutionrequestreturn executeDeleteTransitGatewayPeeringAttachmentrequest
public boolean isLarge() {try {getCachedBytes();return false;} catch (LargeObjectException tooBig) {return true;}},public boolean isLarge try getCachedBytesreturn false catch LargeObjectException tooBig return true
public synchronized Collection<V> values() {Collection<V> vs = values;return (vs != null) ? vs : (values = new Values());},public synchronized CollectionV values CollectionV vs  valuesreturn vs  null  vs  values  new Values
"public EscherComplexProperty(short propertyNumber, boolean isBlipId, byte[] complexData) {this(propertyNumber, isBlipId, complexData == null ? 0 : complexData.length);setComplexData(complexData);}",public EscherComplexPropertyshort propertyNumber boolean isBlipId byte complexData thispropertyNumber isBlipId complexData  null  0  complexDatalengthsetComplexDatacomplexData
public DeleteMatchmakingRuleSetResult deleteMatchmakingRuleSet(DeleteMatchmakingRuleSetRequest request) {request = beforeClientExecution(request);return executeDeleteMatchmakingRuleSet(request);},public DeleteMatchmakingRuleSetResult deleteMatchmakingRuleSetDeleteMatchmakingRuleSetRequest request request  beforeClientExecutionrequestreturn executeDeleteMatchmakingRuleSetrequest
public UnassignIpv6AddressesResult unassignIpv6Addresses(UnassignIpv6AddressesRequest request) {request = beforeClientExecution(request);return executeUnassignIpv6Addresses(request);},public UnassignIpv6AddressesResult unassignIpv6AddressesUnassignIpv6AddressesRequest request request  beforeClientExecutionrequestreturn executeUnassignIpv6Addressesrequest
"public boolean equals(Object _other) {if ((_other instanceof FacetResult) == false) {return false;}FacetResult other = (FacetResult) _other;return value.equals(other.value) &&childCount == other.childCount &&Arrays.equals(labelValues, other.labelValues);}",public boolean equalsObject other if other instanceof FacetResult  false return falseFacetResult other  FacetResult otherreturn valueequalsothervalue childCount  otherchildCount ArraysequalslabelValues otherlabelValues
"public ConfirmSubscriptionRequest(String topicArn, String token) {setTopicArn(topicArn);setToken(token);}",public ConfirmSubscriptionRequestString topicArn String token setTopicArntopicArnsetTokentoken
"public Ref put(String keyName, Ref value) {String name = toRefName(keyName);if (!name.equals(value.getName()))throw new IllegalArgumentException();if (!resolved.isEmpty()) {for (Ref ref : resolved)loose = loose.put(ref);resolved = RefList.emptyList();}int idx = loose.find(name);if (0 <= idx) {Ref prior = loose.get(name);loose = loose.set(idx, value);return prior;}Ref prior = get(keyName);loose = loose.add(idx, value);sizeIsValid = false;return prior;}",public Ref putString keyName Ref value String name  toRefNamekeyNameif nameequalsvaluegetNamethrow new IllegalArgumentExceptionif resolvedisEmpty for Ref ref  resolvedloose  looseputrefresolved  RefListemptyListint idx  loosefindnameif 0  idx Ref prior  loosegetnameloose  loosesetidx valuereturn priorRef prior  getkeyNameloose  looseaddidx valuesizeIsValid  falsereturn prior
public void respondActivityTaskCanceled(RespondActivityTaskCanceledRequest request) {request = beforeClientExecution(request);executeRespondActivityTaskCanceled(request);},public void respondActivityTaskCanceledRespondActivityTaskCanceledRequest request request  beforeClientExecutionrequestexecuteRespondActivityTaskCanceledrequest
"public DocumentInputStream createDocumentInputStream(final Entry document)throws IOException{if (!document.isDocumentEntry()) {throw new IOException(""Entry '"" + document.getName()+ ""' is not a DocumentEntry"");}DocumentEntry entry = (DocumentEntry)document;return new DocumentInputStream(entry);}",public DocumentInputStream createDocumentInputStreamfinal Entry documentthrows IOExceptionif documentisDocumentEntry throw new IOExceptionEntry   documentgetName  is not a DocumentEntryDocumentEntry entry  DocumentEntrydocumentreturn new DocumentInputStreamentry
public DescribeInstanceStatusResult describeInstanceStatus() {return describeInstanceStatus(new DescribeInstanceStatusRequest());},public DescribeInstanceStatusResult describeInstanceStatus return describeInstanceStatusnew DescribeInstanceStatusRequest
public boolean requiresCommitBody() {return true;},public boolean requiresCommitBody return true
public BinaryHunk getReverseBinaryHunk() {return reverseBinaryHunk;},public BinaryHunk getReverseBinaryHunk return reverseBinaryHunk
"public static synchronized CoderResult malformedForLength(int length)throws IllegalArgumentException {if (length > 0) {Integer key = Integer.valueOf(length);synchronized (_malformedErrors) {CoderResult r = _malformedErrors.get(key);if (r == null) {r = new CoderResult(TYPE_MALFORMED_INPUT, length);_malformedErrors.put(key, r);}return r;}}throw new IllegalArgumentException(""Length must be greater than 0; was "" + length);}",public static synchronized CoderResult malformedForLengthint lengththrows IllegalArgumentException if length  0 Integer key  IntegervalueOflengthsynchronized malformedErrors CoderResult r  malformedErrorsgetkeyif r  null r  new CoderResultTYPEMALFORMEDINPUT lengthmalformedErrorsputkey rreturn rthrow new IllegalArgumentExceptionLength must be greater than 0 was   length
"public ByteBuffer get(byte[] dst, int dstOffset, int byteCount) {Arrays.checkOffsetAndCount(dst.length, dstOffset, byteCount);if (byteCount > remaining()) {throw new BufferUnderflowException();}for (int i = dstOffset; i < dstOffset + byteCount; ++i) {dst[i] = get();}return this;}",public ByteBuffer getbyte dst int dstOffset int byteCount ArrayscheckOffsetAndCountdstlength dstOffset byteCountif byteCount  remaining throw new BufferUnderflowExceptionfor int i  dstOffset i  dstOffset  byteCount i dsti  getreturn this
public final ObjectId getObjectId(int nthPosition) {if (nthPosition >= 0)return getObjectId((long) nthPosition);final int u31 = nthPosition >>> 1;final int one = nthPosition & 1;return getObjectId(((long) u31) << 1 | one);},public final ObjectId getObjectIdint nthPosition if nthPosition  0return getObjectIdlong nthPositionfinal int u31  nthPosition  1final int one  nthPosition  1return getObjectIdlong u31  1  one
public UpdateRoomMembershipResult updateRoomMembership(UpdateRoomMembershipRequest request) {request = beforeClientExecution(request);return executeUpdateRoomMembership(request);},public UpdateRoomMembershipResult updateRoomMembershipUpdateRoomMembershipRequest request request  beforeClientExecutionrequestreturn executeUpdateRoomMembershiprequest
"public void formatValue(StringBuffer toAppendTo, Object value) {double elapsed = ((Number) value).doubleValue();if (elapsed < 0) {toAppendTo.append('-');elapsed = -elapsed;}Object[] parts = new Long[specs.size()];for (int i = 0; i < specs.size(); i++) {parts[i] = specs.get(i).valueFor(elapsed);}try (Formatter formatter = new Formatter(toAppendTo, Locale.ROOT)) {formatter.format(printfFmt, parts);}}",public void formatValueStringBuffer toAppendTo Object value double elapsed  Number valuedoubleValueif elapsed  0 toAppendToappendelapsed  elapsedObject parts  new Longspecssizefor int i  0 i  specssize i partsi  specsgetivalueForelapsedtry Formatter formatter  new FormattertoAppendTo LocaleROOT formatterformatprintfFmt parts
public void writeDouble(double v) {writeContinueIfRequired(8);_ulrOutput.writeDouble(v);},public void writeDoubledouble v writeContinueIfRequired8ulrOutputwriteDoublev
public CancelExportTaskResult cancelExportTask(CancelExportTaskRequest request) {request = beforeClientExecution(request);return executeCancelExportTask(request);},public CancelExportTaskResult cancelExportTaskCancelExportTaskRequest request request  beforeClientExecutionrequestreturn executeCancelExportTaskrequest
"public String toString() {if (length == 0) {return ""FacetLabel: []"";}String[] parts = new String[length];System.arraycopy(components, 0, parts, 0, length);return ""FacetLabel: "" + Arrays.toString(parts);}",public String toString if length  0 return FacetLabel String parts  new StringlengthSystemarraycopycomponents 0 parts 0 lengthreturn FacetLabel   ArraystoStringparts
public DescribeEventTrackerResult describeEventTracker(DescribeEventTrackerRequest request) {request = beforeClientExecution(request);return executeDescribeEventTracker(request);},public DescribeEventTrackerResult describeEventTrackerDescribeEventTrackerRequest request request  beforeClientExecutionrequestreturn executeDescribeEventTrackerrequest
public UpdateJourneyResult updateJourney(UpdateJourneyRequest request) {request = beforeClientExecution(request);return executeUpdateJourney(request);},public UpdateJourneyResult updateJourneyUpdateJourneyRequest request request  beforeClientExecutionrequestreturn executeUpdateJourneyrequest
public RemoveTagsFromVaultResult removeTagsFromVault(RemoveTagsFromVaultRequest request) {request = beforeClientExecution(request);return executeRemoveTagsFromVault(request);},public RemoveTagsFromVaultResult removeTagsFromVaultRemoveTagsFromVaultRequest request request  beforeClientExecutionrequestreturn executeRemoveTagsFromVaultrequest
public RevertCommand include(Ref commit) {checkCallable();commits.add(commit);return this;},public RevertCommand includeRef commit checkCallablecommitsaddcommitreturn this
public DeleteFargateProfileResult deleteFargateProfile(DeleteFargateProfileRequest request) {request = beforeClientExecution(request);return executeDeleteFargateProfile(request);},public DeleteFargateProfileResult deleteFargateProfileDeleteFargateProfileRequest request request  beforeClientExecutionrequestreturn executeDeleteFargateProfilerequest
"public boolean evaluate(int cmpResult) {switch (_code) {case NONE:case EQ:return cmpResult == 0;case NE: return cmpResult != 0;case LT: return cmpResult <  0;case LE: return cmpResult <= 0;case GT: return cmpResult >  0;case GE: return cmpResult >= 0;}throw new RuntimeException(""Cannot call boolean evaluate on non-equality operator '""+ _representation + ""'"");}",public boolean evaluateint cmpResult switch code case NONEcase EQreturn cmpResult  0case NE return cmpResult  0case LT return cmpResult   0case LE return cmpResult  0case GT return cmpResult   0case GE return cmpResult  0throw new RuntimeExceptionCannot call boolean evaluate on nonequality operator  representation  
public SeriesRecord getSeries() {return series;},public SeriesRecord getSeries return series
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[UNCALCED]\n"");buffer.append(""    _reserved: "").append(_reserved).append('\n');buffer.append(""[/UNCALCED]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendUNCALCEDnbufferappend    reserved appendreservedappendnbufferappendUNCALCEDnreturn buffertoString
public ListBotsResult listBots(ListBotsRequest request) {request = beforeClientExecution(request);return executeListBots(request);},public ListBotsResult listBotsListBotsRequest request request  beforeClientExecutionrequestreturn executeListBotsrequest
public int getPort() {return port;},public int getPort return port
public void writeLong(long value) throws IOException {checkWritePrimitiveTypes();primitiveTypes.writeLong(value);},public void writeLonglong value throws IOException checkWritePrimitiveTypesprimitiveTypeswriteLongvalue
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {I_MatchPredicate mp = createCriteriaPredicate(arg1, srcRowIndex, srcColumnIndex);if(mp == null) {return NumberEval.ZERO;}double result = countMatchingCellsInArea(arg0, mp);return new NumberEval(result);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1 IMatchPredicate mp  createCriteriaPredicatearg1 srcRowIndex srcColumnIndexifmp  null return NumberEvalZEROdouble result  countMatchingCellsInAreaarg0 mpreturn new NumberEvalresult
public boolean requiresCommitBody() {return true;},public boolean requiresCommitBody return true
public DeleteVpcResult deleteVpc(DeleteVpcRequest request) {request = beforeClientExecution(request);return executeDeleteVpc(request);},public DeleteVpcResult deleteVpcDeleteVpcRequest request request  beforeClientExecutionrequestreturn executeDeleteVpcrequest
public VoteOnProposalResult voteOnProposal(VoteOnProposalRequest request) {request = beforeClientExecution(request);return executeVoteOnProposal(request);},public VoteOnProposalResult voteOnProposalVoteOnProposalRequest request request  beforeClientExecutionrequestreturn executeVoteOnProposalrequest
"public void grow() {costs = ArrayUtil.grow(costs, 1+count);lastRightID = ArrayUtil.grow(lastRightID, 1+count);backPos = ArrayUtil.grow(backPos, 1+count);backIndex = ArrayUtil.grow(backIndex, 1+count);backID = ArrayUtil.grow(backID, 1+count);final Type[] newBackType = new Type[backID.length];System.arraycopy(backType, 0, newBackType, 0, backType.length);backType = newBackType;}",public void grow costs  ArrayUtilgrowcosts 1countlastRightID  ArrayUtilgrowlastRightID 1countbackPos  ArrayUtilgrowbackPos 1countbackIndex  ArrayUtilgrowbackIndex 1countbackID  ArrayUtilgrowbackID 1countfinal Type newBackType  new TypebackIDlengthSystemarraycopybackType 0 newBackType 0 backTypelengthbackType  newBackType
"public String toString() {return ""MERGE_BASE""; }",public String toString return MERGEBASE 
public float readFloat() throws IOException {return primitiveTypes.readFloat();},public float readFloat throws IOException return primitiveTypesreadFloat
"public String substring(int start) {if (start >= 0 && start <= count) {if (start == count) {return """";}return new String(value, start, count - start);}throw indexAndLength(start);}",public String substringint start if start  0  start  count if start  count return return new Stringvalue start count  startthrow indexAndLengthstart
public DBCellRecord(RecordInputStream in) {field_1_row_offset   = in.readUShort();int size = in.remaining();field_2_cell_offsets = new short[ size / 2 ];for (int i=0;i<field_2_cell_offsets.length;i++) {field_2_cell_offsets[ i ] = in.readShort();}},public DBCellRecordRecordInputStream in field1rowoffset    inreadUShortint size  inremainingfield2celloffsets  new short size  2 for int i0ifield2celloffsetslengthi field2celloffsets i   inreadShort
"public DefaultAcsClient(IClientProfile profile) {this(profile, new StaticCredentialsProvider(profile));}",public DefaultAcsClientIClientProfile profile thisprofile new StaticCredentialsProviderprofile
"public int findStartOffset(StringBuilder buffer, int start) {if( start > buffer.length() || start < 1 ) return start;int offset, count = maxScan;for( offset = start; offset > 0 && count > 0; count-- ){if( boundaryChars.contains( buffer.charAt( offset - 1 ) ) ) return offset;offset--;}if (offset == 0) {return 0;}return start;}",public int findStartOffsetStringBuilder buffer int start if start  bufferlength  start  1  return startint offset count  maxScanfor offset  start offset  0  count  0 count if boundaryCharscontains buffercharAt offset  1    return offsetoffsetif offset  0 return 0return start
"public BufferedTokenStream(TokenSource tokenSource) {if (tokenSource == null) {throw new NullPointerException(""tokenSource cannot be null"");}this.tokenSource = tokenSource;}",public BufferedTokenStreamTokenSource tokenSource if tokenSource  null throw new NullPointerExceptiontokenSource cannot be nullthistokenSource  tokenSource
public final boolean isDirect() {return false;},public final boolean isDirect return false
"public TokenMgrError(String message, int reason) {super(message);errorCode = reason;}",public TokenMgrErrorString message int reason supermessageerrorCode  reason
public int getCells() {int size = 0;for (Row row : rows)size += row.getCells();return size;},public int getCells int size  0for Row row  rowssize  rowgetCellsreturn size
public int findStartOfRowOutlineGroup(int row) {RowRecord rowRecord = this.getRow( row );int level = rowRecord.getOutlineLevel();int currentRow = row;while (currentRow >= 0 && this.getRow( currentRow ) != null) {rowRecord = this.getRow( currentRow );if (rowRecord.getOutlineLevel() < level) {return currentRow + 1;}currentRow--;}return currentRow + 1;},public int findStartOfRowOutlineGroupint row RowRecord rowRecord  thisgetRow row int level  rowRecordgetOutlineLevelint currentRow  rowwhile currentRow  0  thisgetRow currentRow   null rowRecord  thisgetRow currentRow if rowRecordgetOutlineLevel  level return currentRow  1currentRowreturn currentRow  1
public DirCacheBuildIterator(DirCacheBuilder dcb) {super(dcb.getDirCache());builder = dcb;},public DirCacheBuildIteratorDirCacheBuilder dcb superdcbgetDirCachebuilder  dcb
public DeleteGraphResult deleteGraph(DeleteGraphRequest request) {request = beforeClientExecution(request);return executeDeleteGraph(request);},public DeleteGraphResult deleteGraphDeleteGraphRequest request request  beforeClientExecutionrequestreturn executeDeleteGraphrequest
"public String toString() {return ""id="" + id + "" version="" + version + "" files="" + sourceFiles;}",public String toString return id  id   version  version   files  sourceFiles
"public static Calendar parseDate(String strVal) throws EvaluationException {String[] parts = Pattern.compile(""/"").split(strVal);if (parts.length != 3) {throw new EvaluationException(ErrorEval.VALUE_INVALID);}String part2 = parts[2];int spacePos = part2.indexOf(' ');if (spacePos > 0) {part2 = part2.substring(0, spacePos);}int f0;int f1;int f2;try {f0 = Integer.parseInt(parts[0]);f1 = Integer.parseInt(parts[1]);f2 = Integer.parseInt(part2);} catch (NumberFormatException e) {throw new EvaluationException(ErrorEval.VALUE_INVALID);}if (f0 < 0 || f1 < 0 || f2 < 0 || (f0 > 12 && f1 > 12 && f2 > 12)) {throw new EvaluationException(ErrorEval.VALUE_INVALID);}if (f0 >= 1900 && f0 < 9999) {return makeDate(f0, f1, f2);}throw new RuntimeException(""Unable to determine date format for text '"" + strVal + ""'"");}",public static Calendar parseDateString strVal throws EvaluationException String parts  PatterncompilesplitstrValif partslength  3 throw new EvaluationExceptionErrorEvalVALUEINVALIDString part2  parts2int spacePos  part2indexOf if spacePos  0 part2  part2substring0 spacePosint f0int f1int f2try f0  IntegerparseIntparts0f1  IntegerparseIntparts1f2  IntegerparseIntpart2 catch NumberFormatException e throw new EvaluationExceptionErrorEvalVALUEINVALIDif f0  0  f1  0  f2  0  f0  12  f1  12  f2  12 throw new EvaluationExceptionErrorEvalVALUEINVALIDif f0  1900  f0  9999 return makeDatef0 f1 f2throw new RuntimeExceptionUnable to determine date format for text   strVal  
public void removeMMClipCount() {remove1stProperty(PropertyIDMap.PID_MMCLIPCOUNT);},public void removeMMClipCount remove1stPropertyPropertyIDMapPIDMMCLIPCOUNT
public void setDeltaCacheSize(long size) {deltaCacheSize = size;},public void setDeltaCacheSizelong size deltaCacheSize  size
"public UpdateKnowledgeRequest() {super(""Chatbot"", ""2017-10-11"", ""UpdateKnowledge"", ""beebot"");setMethod(MethodType.POST);}",public UpdateKnowledgeRequest superChatbot 20171011 UpdateKnowledge beebotsetMethodMethodTypePOST
"public void readBytes(byte[] b, int offset, int len) {for(int i=0;i<len;i++) {b[offset+i] = bytes[pos--];}}",public void readBytesbyte b int offset int len forint i0ileni boffseti  bytespos
"public void fillArc(int x, int y, int width, int height,int startAngle, int arcAngle){if (logger.check( POILogger.WARN ))logger.log(POILogger.WARN,""fillArc not supported"");}",public void fillArcint x int y int width int heightint startAngle int arcAngleif loggercheck POILoggerWARN loggerlogPOILoggerWARNfillArc not supported
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex,ValueEval arg0, ValueEval arg1) {double result;try {ValueVector vvY = createValueVector(arg0);ValueVector vvX = createValueVector(arg1);int size = vvX.getSize();if (size == 0 || vvY.getSize() != size) {return ErrorEval.NA;}result = evaluateInternal(vvX, vvY, size);} catch (EvaluationException e) {return e.getErrorEval();}if (Double.isNaN(result) || Double.isInfinite(result)) {return ErrorEval.NUM_ERROR;}return new NumberEval(result);}",public ValueEval evaluateint srcRowIndex int srcColumnIndexValueEval arg0 ValueEval arg1 double resulttry ValueVector vvY  createValueVectorarg0ValueVector vvX  createValueVectorarg1int size  vvXgetSizeif size  0  vvYgetSize  size return ErrorEvalNAresult  evaluateInternalvvX vvY size catch EvaluationException e return egetErrorEvalif DoubleisNaNresult  DoubleisInfiniteresult return ErrorEvalNUMERRORreturn new NumberEvalresult
public void copyUpdatedCells(Workbook workbook) {_sewb.copyUpdatedCells(workbook);},public void copyUpdatedCellsWorkbook workbook sewbcopyUpdatedCellsworkbook
"@Override public final String toString() {return key + ""="" + value;}",Override public final String toString return key    value
public DescribeReservedInstancesOfferingsResult describeReservedInstancesOfferings() {return describeReservedInstancesOfferings(new DescribeReservedInstancesOfferingsRequest());},public DescribeReservedInstancesOfferingsResult describeReservedInstancesOfferings return describeReservedInstancesOfferingsnew DescribeReservedInstancesOfferingsRequest
public CacheParameterGroup createCacheParameterGroup(CreateCacheParameterGroupRequest request) {request = beforeClientExecution(request);return executeCreateCacheParameterGroup(request);},public CacheParameterGroup createCacheParameterGroupCreateCacheParameterGroupRequest request request  beforeClientExecutionrequestreturn executeCreateCacheParameterGrouprequest
"public OldStringRecord(RecordInputStream in) {sid = in.getSid();if (in.getSid() == biff2_sid) {field_1_string_len  = (short)in.readUByte();} else {field_1_string_len   = in.readShort();}field_2_bytes = IOUtils.safelyAllocate(field_1_string_len, MAX_RECORD_LENGTH);in.read(field_2_bytes, 0, field_1_string_len);}",public OldStringRecordRecordInputStream in sid  ingetSidif ingetSid  biff2sid field1stringlen   shortinreadUByte else field1stringlen    inreadShortfield2bytes  IOUtilssafelyAllocatefield1stringlen MAXRECORDLENGTHinreadfield2bytes 0 field1stringlen
public long ramBytesUsed() {return TERMS_BASE_RAM_BYTES_USED + (fst!=null ? fst.ramBytesUsed() : 0)+ RamUsageEstimator.sizeOf(scratch.bytes()) + RamUsageEstimator.sizeOf(scratchUTF16.chars());},public long ramBytesUsed return TERMSBASERAMBYTESUSED  fstnull  fstramBytesUsed  0 RamUsageEstimatorsizeOfscratchbytes  RamUsageEstimatorsizeOfscratchUTF16chars
"public void fillRect(int x, int y, int width, int height){HSSFSimpleShape shape = escherGroup.createShape(new HSSFChildAnchor( x, y, x + width, y + height ) );shape.setShapeType(HSSFSimpleShape.OBJECT_TYPE_RECTANGLE);shape.setLineStyle(HSSFShape.LINESTYLE_NONE);shape.setFillColor(foreground.getRed(), foreground.getGreen(), foreground.getBlue());shape.setLineStyleColor(foreground.getRed(), foreground.getGreen(), foreground.getBlue());}",public void fillRectint x int y int width int heightHSSFSimpleShape shape  escherGroupcreateShapenew HSSFChildAnchor x y x  width y  height  shapesetShapeTypeHSSFSimpleShapeOBJECTTYPERECTANGLEshapesetLineStyleHSSFShapeLINESTYLENONEshapesetFillColorforegroundgetRed foregroundgetGreen foregroundgetBlueshapesetLineStyleColorforegroundgetRed foregroundgetGreen foregroundgetBlue
public void add(OneMerge merge) {merges.add(merge);},public void addOneMerge merge mergesaddmerge
public long computeNorm(FieldInvertState state) {return sims[0].computeNorm(state);},public long computeNormFieldInvertState state return sims0computeNormstate
"public PolicyAttribute(String attributeName, String attributeValue) {setAttributeName(attributeName);setAttributeValue(attributeValue);}",public PolicyAttributeString attributeName String attributeValue setAttributeNameattributeNamesetAttributeValueattributeValue
public String getAccessKeyId() {return publicKeyId;},public String getAccessKeyId return publicKeyId
public ListJourneysResult listJourneys(ListJourneysRequest request) {request = beforeClientExecution(request);return executeListJourneys(request);},public ListJourneysResult listJourneysListJourneysRequest request request  beforeClientExecutionrequestreturn executeListJourneysrequest
"public FormulaCellCacheEntry getOrCreateFormulaCellEntry(EvaluationCell cell) {FormulaCellCacheEntry result = _formulaCellCache.get(cell);if (result == null) {result = new FormulaCellCacheEntry();_formulaCellCache.put(cell, result);}return result;}",public FormulaCellCacheEntry getOrCreateFormulaCellEntryEvaluationCell cell FormulaCellCacheEntry result  formulaCellCachegetcellif result  null result  new FormulaCellCacheEntryformulaCellCacheputcell resultreturn result
public StartHumanLoopResult startHumanLoop(StartHumanLoopRequest request) {request = beforeClientExecution(request);return executeStartHumanLoop(request);},public StartHumanLoopResult startHumanLoopStartHumanLoopRequest request request  beforeClientExecutionrequestreturn executeStartHumanLooprequest
public List<RefSpec> getRefSpecs() {return refSpecs;},public ListRefSpec getRefSpecs return refSpecs
"public void build(InputIterator iterator) throws IOException {if (iterator.hasPayloads()) {throw new IllegalArgumentException(""this suggester doesn't support payloads"");}if (iterator.hasContexts()) {throw new IllegalArgumentException(""this suggester doesn't support contexts"");}count = 0;BytesRef scratch = new BytesRef();InputIterator iter = new WFSTInputIterator(tempDir, tempFileNamePrefix, iterator);IntsRefBuilder scratchInts = new IntsRefBuilder();BytesRefBuilder previous = null;PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton();FSTCompiler<Long> fstCompiler = new FSTCompiler<>(FST.INPUT_TYPE.BYTE1, outputs);while ((scratch = iter.next()) != null) {long cost = iter.weight();if (previous == null) {previous = new BytesRefBuilder();} else if (scratch.equals(previous.get())) {continue; }Util.toIntsRef(scratch, scratchInts);fstCompiler.add(scratchInts.get(), cost);previous.copyBytes(scratch);count++;}fst = fstCompiler.compile();}",public void buildInputIterator iterator throws IOException if iteratorhasPayloads throw new IllegalArgumentExceptionthis suggester doesnt support payloadsif iteratorhasContexts throw new IllegalArgumentExceptionthis suggester doesnt support contextscount  0BytesRef scratch  new BytesRefInputIterator iter  new WFSTInputIteratortempDir tempFileNamePrefix iteratorIntsRefBuilder scratchInts  new IntsRefBuilderBytesRefBuilder previous  nullPositiveIntOutputs outputs  PositiveIntOutputsgetSingletonFSTCompilerLong fstCompiler  new FSTCompilerFSTINPUTTYPEBYTE1 outputswhile scratch  iternext  null long cost  iterweightif previous  null previous  new BytesRefBuilder else if scratchequalspreviousget continue UtiltoIntsRefscratch scratchIntsfstCompileraddscratchIntsget costpreviouscopyBytesscratchcountfst  fstCompilercompile
public Comparator<? super K> comparator() {if (ascending) {return TreeMap.this.comparator();} else {return Collections.reverseOrder(comparator);}},public Comparator super K comparator if ascending return TreeMapthiscomparator else return CollectionsreverseOrdercomparator
public PrintHeadersRecord(RecordInputStream in) {field_1_print_headers = in.readShort();},public PrintHeadersRecordRecordInputStream in field1printheaders  inreadShort
public DeleteBranchCommand branchDelete() {return new DeleteBranchCommand(repo);},public DeleteBranchCommand branchDelete return new DeleteBranchCommandrepo
public DetectLabelsResult detectLabels(DetectLabelsRequest request) {request = beforeClientExecution(request);return executeDetectLabels(request);},public DetectLabelsResult detectLabelsDetectLabelsRequest request request  beforeClientExecutionrequestreturn executeDetectLabelsrequest
public FnGroupCountRecord(RecordInputStream in){field_1_count = in.readShort();},public FnGroupCountRecordRecordInputStream infield1count  inreadShort
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {double result;try {double d0 = singleOperandEvaluate(arg0, srcRowIndex, srcColumnIndex);double d1 = singleOperandEvaluate(arg1, srcRowIndex, srcColumnIndex);double multi = Math.pow(10d,d1);if(d0 < 0) result = -Math.floor(-d0 * multi) / multi;else result = Math.floor(d0 * multi) / multi;checkValue(result);}catch (EvaluationException e) {return e.getErrorEval();}return new NumberEval(result);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1 double resulttry double d0  singleOperandEvaluatearg0 srcRowIndex srcColumnIndexdouble d1  singleOperandEvaluatearg1 srcRowIndex srcColumnIndexdouble multi  Mathpow10dd1ifd0  0 result  Mathfloord0  multi  multielse result  Mathfloord0  multi  multicheckValueresultcatch EvaluationException e return egetErrorEvalreturn new NumberEvalresult
"public DoubleBuffer put(double[] src, int srcOffset, int doubleCount) {if (doubleCount > remaining()) {throw new BufferOverflowException();}System.arraycopy(src, srcOffset, backingArray, offset + position, doubleCount);position += doubleCount;return this;}",public DoubleBuffer putdouble src int srcOffset int doubleCount if doubleCount  remaining throw new BufferOverflowExceptionSystemarraycopysrc srcOffset backingArray offset  position doubleCountposition  doubleCountreturn this
"public CharSequence toQueryString(EscapeQuerySyntax escaper) {if (isDefaultField(this.field)) {return getTermEscaped(escaper) + ""~"" + this.similarity;} else {return this.field + "":"" + getTermEscaped(escaper) + ""~"" + this.similarity;}}",public CharSequence toQueryStringEscapeQuerySyntax escaper if isDefaultFieldthisfield return getTermEscapedescaper    thissimilarity else return thisfield    getTermEscapedescaper    thissimilarity
"public AbstractBlockPackedWriter(DataOutput out, int blockSize) {checkBlockSize(blockSize, MIN_BLOCK_SIZE, MAX_BLOCK_SIZE);reset(out);values = new long[blockSize];}",public AbstractBlockPackedWriterDataOutput out int blockSize checkBlockSizeblockSize MINBLOCKSIZE MAXBLOCKSIZEresetoutvalues  new longblockSize
public String getMessage() {return message;},public String getMessage return message
public ListAttendeesResult listAttendees(ListAttendeesRequest request) {request = beforeClientExecution(request);return executeListAttendees(request);},public ListAttendeesResult listAttendeesListAttendeesRequest request request  beforeClientExecutionrequestreturn executeListAttendeesrequest
public void reset() {upto = count = 0;posIncr = 1;},public void reset upto  count  0posIncr  1
public FeatHdrRecord clone() {return copy();},public FeatHdrRecord clone return copy
public synchronized void addElement(E object) {if (elementCount == elementData.length) {growByOne();}elementData[elementCount++] = object;modCount++;},public synchronized void addElementE object if elementCount  elementDatalength growByOneelementDataelementCount  objectmodCount
"public long fileLength(String name) throws IOException {ensureOpen();if (pendingDeletes.contains(name)) {throw new NoSuchFileException(""file \"""" + name + ""\"" is pending delete"");}return Files.size(directory.resolve(name));}",public long fileLengthString name throws IOException ensureOpenif pendingDeletescontainsname throw new NoSuchFileExceptionfile   name   is pending deletereturn Filessizedirectoryresolvename
public PutExternalModelResult putExternalModel(PutExternalModelRequest request) {request = beforeClientExecution(request);return executePutExternalModel(request);},public PutExternalModelResult putExternalModelPutExternalModelRequest request request  beforeClientExecutionrequestreturn executePutExternalModelrequest
public PutConferencePreferenceResult putConferencePreference(PutConferencePreferenceRequest request) {request = beforeClientExecution(request);return executePutConferencePreference(request);},public PutConferencePreferenceResult putConferencePreferencePutConferencePreferenceRequest request request  beforeClientExecutionrequestreturn executePutConferencePreferencerequest
public int size() {return size;},public int size return size
public CreateApiMappingResult createApiMapping(CreateApiMappingRequest request) {request = beforeClientExecution(request);return executeCreateApiMapping(request);},public CreateApiMappingResult createApiMappingCreateApiMappingRequest request request  beforeClientExecutionrequestreturn executeCreateApiMappingrequest
"public CharBlockArray append(CharSequence chars, int start, int length) {int end = start + length;for (int i = start; i < end; i++) {append(chars.charAt(i));}return this;}",public CharBlockArray appendCharSequence chars int start int length int end  start  lengthfor int i  start i  end i appendcharscharAtireturn this
public UpdateAdmChannelResult updateAdmChannel(UpdateAdmChannelRequest request) {request = beforeClientExecution(request);return executeUpdateAdmChannel(request);},public UpdateAdmChannelResult updateAdmChannelUpdateAdmChannelRequest request request  beforeClientExecutionrequestreturn executeUpdateAdmChannelrequest
public DirCacheIterator(DirCache dc) {cache = dc;tree = dc.getCacheTree(true);treeStart = 0;treeEnd = tree.getEntrySpan();subtreeId = new byte[Constants.OBJECT_ID_LENGTH];if (!eof())parseEntry();},public DirCacheIteratorDirCache dc cache  dctree  dcgetCacheTreetruetreeStart  0treeEnd  treegetEntrySpansubtreeId  new byteConstantsOBJECTIDLENGTHif eofparseEntry
"public void setBytesRef(BytesRef term, int textStart) {final byte[] bytes = term.bytes = buffers[textStart >> BYTE_BLOCK_SHIFT];int pos = textStart & BYTE_BLOCK_MASK;if ((bytes[pos] & 0x80) == 0) {term.length = bytes[pos];term.offset = pos+1;} else {term.length = (bytes[pos]&0x7f) + ((bytes[pos+1]&0xff)<<7);term.offset = pos+2;}assert term.length >= 0;}",public void setBytesRefBytesRef term int textStart final byte bytes  termbytes  bufferstextStart  BYTEBLOCKSHIFTint pos  textStart  BYTEBLOCKMASKif bytespos  0x80  0 termlength  bytespostermoffset  pos1 else termlength  bytespos0x7f  bytespos10xff7termoffset  pos2assert termlength  0
public Restrictions(GeoRestriction geoRestriction) {setGeoRestriction(geoRestriction);},public RestrictionsGeoRestriction geoRestriction setGeoRestrictiongeoRestriction
public DisableRuleResult disableRule(DisableRuleRequest request) {request = beforeClientExecution(request);return executeDisableRule(request);},public DisableRuleResult disableRuleDisableRuleRequest request request  beforeClientExecutionrequestreturn executeDisableRulerequest
public GetSuppressedDestinationResult getSuppressedDestination(GetSuppressedDestinationRequest request) {request = beforeClientExecution(request);return executeGetSuppressedDestination(request);},public GetSuppressedDestinationResult getSuppressedDestinationGetSuppressedDestinationRequest request request  beforeClientExecutionrequestreturn executeGetSuppressedDestinationrequest
public ListDomainsResult listDomains(ListDomainsRequest request) {request = beforeClientExecution(request);return executeListDomains(request);},public ListDomainsResult listDomainsListDomainsRequest request request  beforeClientExecutionrequestreturn executeListDomainsrequest
public StartLifecyclePolicyPreviewResult startLifecyclePolicyPreview(StartLifecyclePolicyPreviewRequest request) {request = beforeClientExecution(request);return executeStartLifecyclePolicyPreview(request);},public StartLifecyclePolicyPreviewResult startLifecyclePolicyPreviewStartLifecyclePolicyPreviewRequest request request  beforeClientExecutionrequestreturn executeStartLifecyclePolicyPreviewrequest
public CreateDiskFromSnapshotResult createDiskFromSnapshot(CreateDiskFromSnapshotRequest request) {request = beforeClientExecution(request);return executeCreateDiskFromSnapshot(request);},public CreateDiskFromSnapshotResult createDiskFromSnapshotCreateDiskFromSnapshotRequest request request  beforeClientExecutionrequestreturn executeCreateDiskFromSnapshotrequest
public SubmoduleSyncCommand submoduleSync() {return new SubmoduleSyncCommand(repo);},public SubmoduleSyncCommand submoduleSync return new SubmoduleSyncCommandrepo
public DeleteConfigurationSetTrackingOptionsResult deleteConfigurationSetTrackingOptions(DeleteConfigurationSetTrackingOptionsRequest request) {request = beforeClientExecution(request);return executeDeleteConfigurationSetTrackingOptions(request);},public DeleteConfigurationSetTrackingOptionsResult deleteConfigurationSetTrackingOptionsDeleteConfigurationSetTrackingOptionsRequest request request  beforeClientExecutionrequestreturn executeDeleteConfigurationSetTrackingOptionsrequest
public V setValue(V value) {if (!allowModify)throw new UnsupportedOperationException();V old = values[lastPos];values[lastPos] = value;return old;},public V setValueV value if allowModifythrow new UnsupportedOperationExceptionV old  valueslastPosvalueslastPos  valuereturn old
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[FtPioGrbit ]\n"");buffer.append(""  size     = "").append(length).append(""\n"");buffer.append(""  flags    = "").append(HexDump.toHex(flags)).append(""\n"");buffer.append(""[/FtPioGrbit ]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendFtPioGrbit nbufferappend  size      appendlengthappendnbufferappend  flags     appendHexDumptoHexflagsappendnbufferappendFtPioGrbit nreturn buffertoString
"static public double ipmt(double r, int per, int nper, double pv, double fv, int type) {double ipmt = fv(r, per - 1, pmt(r, nper, pv, fv, type), pv, type) * r;if (type==1) ipmt /= (1 + r);return ipmt;}",static public double ipmtdouble r int per int nper double pv double fv int type double ipmt  fvr per  1 pmtr nper pv fv type pv type  rif type1 ipmt  1  rreturn ipmt
"public FileDictionary(InputStream dictFile, String fieldDelimiter) {in = new BufferedReader(IOUtils.getDecodingReader(dictFile, StandardCharsets.UTF_8));this.fieldDelimiter = fieldDelimiter;}",public FileDictionaryInputStream dictFile String fieldDelimiter in  new BufferedReaderIOUtilsgetDecodingReaderdictFile StandardCharsetsUTF8thisfieldDelimiter  fieldDelimiter
"public DocumentSummaryInformation(final PropertySet ps)throws UnexpectedPropertySetTypeException {super(ps);if (!isDocumentSummaryInformation()) {throw new UnexpectedPropertySetTypeException(""Not a "" + getClass().getName());}}",public DocumentSummaryInformationfinal PropertySet psthrows UnexpectedPropertySetTypeException superpsif isDocumentSummaryInformation throw new UnexpectedPropertySetTypeExceptionNot a   getClassgetName
public EscherBSERecord getBSERecord(int pictureIndex) {return escherBSERecords.get(pictureIndex-1);},public EscherBSERecord getBSERecordint pictureIndex return escherBSERecordsgetpictureIndex1
public CreateDetectorVersionResult createDetectorVersion(CreateDetectorVersionRequest request) {request = beforeClientExecution(request);return executeCreateDetectorVersion(request);},public CreateDetectorVersionResult createDetectorVersionCreateDetectorVersionRequest request request  beforeClientExecutionrequestreturn executeCreateDetectorVersionrequest
"public static DVConstraint createExplicitListConstraint(String[] explicitListValues) {return new DVConstraint(null, explicitListValues);}",public static DVConstraint createExplicitListConstraintString explicitListValues return new DVConstraintnull explicitListValues
public ListGroupsResult listGroups(ListGroupsRequest request) {request = beforeClientExecution(request);return executeListGroups(request);},public ListGroupsResult listGroupsListGroupsRequest request request  beforeClientExecutionrequestreturn executeListGroupsrequest
public DeleteScriptResult deleteScript(DeleteScriptRequest request) {request = beforeClientExecution(request);return executeDeleteScript(request);},public DeleteScriptResult deleteScriptDeleteScriptRequest request request  beforeClientExecutionrequestreturn executeDeleteScriptrequest
public DescribeSpotDatafeedSubscriptionResult describeSpotDatafeedSubscription(DescribeSpotDatafeedSubscriptionRequest request) {request = beforeClientExecution(request);return executeDescribeSpotDatafeedSubscription(request);},public DescribeSpotDatafeedSubscriptionResult describeSpotDatafeedSubscriptionDescribeSpotDatafeedSubscriptionRequest request request  beforeClientExecutionrequestreturn executeDescribeSpotDatafeedSubscriptionrequest
public CharArrayReader(char[] buf) {this.buf = buf;this.count = buf.length;},public CharArrayReaderchar buf thisbuf  bufthiscount  buflength
"public CharSequence subSequence(int start, int end) {return substring(start, end);}",public CharSequence subSequenceint start int end return substringstart end
public Builder(boolean dedup) {this.dedup = dedup;},public Builderboolean dedup thisdedup  dedup
"public synchronized void setPerfObject(String key, Object obj) {perfObjects.put(key, obj);}",public synchronized void setPerfObjectString key Object obj perfObjectsputkey obj
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[DIMENSIONS]\n"");buffer.append(""    .firstrow       = "").append(Integer.toHexString(getFirstRow())).append(""\n"");buffer.append(""    .lastrow        = "").append(Integer.toHexString(getLastRow())).append(""\n"");buffer.append(""    .firstcol       = "").append(Integer.toHexString(getFirstCol())).append(""\n"");buffer.append(""    .lastcol        = "").append(Integer.toHexString(getLastCol())).append(""\n"");buffer.append(""    .zero           = "").append(Integer.toHexString(field_5_zero)).append(""\n"");buffer.append(""[/DIMENSIONS]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendDIMENSIONSnbufferappend    firstrow        appendIntegertoHexStringgetFirstRowappendnbufferappend    lastrow         appendIntegertoHexStringgetLastRowappendnbufferappend    firstcol        appendIntegertoHexStringgetFirstColappendnbufferappend    lastcol         appendIntegertoHexStringgetLastColappendnbufferappend    zero            appendIntegertoHexStringfield5zeroappendnbufferappendDIMENSIONSnreturn buffertoString
public ExitStandbyResult exitStandby(ExitStandbyRequest request) {request = beforeClientExecution(request);return executeExitStandby(request);},public ExitStandbyResult exitStandbyExitStandbyRequest request request  beforeClientExecutionrequestreturn executeExitStandbyrequest
"public String toString() {return ""MultiDocsAndPositionsEnum("" + Arrays.toString(getSubs()) + "")"";}",public String toString return MultiDocsAndPositionsEnum  ArraystoStringgetSubs  
"public MergeException(Throwable exc, Directory dir) {super(exc);this.dir = dir;}",public MergeExceptionThrowable exc Directory dir superexcthisdir  dir
"public int read(CharBuffer target) throws IOException {int remaining = remaining();if (target == this) {if (remaining == 0) {return -1;}throw new IllegalArgumentException();}if (remaining == 0) {return limit > 0 && target.remaining() == 0 ? 0 : -1;}remaining = Math.min(target.remaining(), remaining);if (remaining > 0) {char[] chars = new char[remaining];get(chars);target.put(chars);}return remaining;}",public int readCharBuffer target throws IOException int remaining  remainingif target  this if remaining  0 return 1throw new IllegalArgumentExceptionif remaining  0 return limit  0  targetremaining  0  0  1remaining  Mathmintargetremaining remainingif remaining  0 char chars  new charremaininggetcharstargetputcharsreturn remaining
public final float getFloat() {return Float.intBitsToFloat(getInt());},public final float getFloat return FloatintBitsToFloatgetInt
public UpdateApplicationRequest(String applicationName) {setApplicationName(applicationName);},public UpdateApplicationRequestString applicationName setApplicationNameapplicationName
"public void initReader(ByteSliceReader Reader, int termID, int stream) {assert stream < streamCount;int intStart = postingsArray.intStarts[termID];final int[] ints = intPool.buffers[intStart >> IntBlockPool.INT_BLOCK_SHIFT];final int upto = intStart & IntBlockPool.INT_BLOCK_MASK;Reader.init(bytePool,postingsArray.byteStarts[termID]+stream*ByteBlockPool.FIRST_LEVEL_SIZE,ints[upto+stream]);}",public void initReaderByteSliceReader Reader int termID int stream assert stream  streamCountint intStart  postingsArrayintStartstermIDfinal int ints  intPoolbuffersintStart  IntBlockPoolINTBLOCKSHIFTfinal int upto  intStart  IntBlockPoolINTBLOCKMASKReaderinitbytePoolpostingsArraybyteStartstermIDstreamByteBlockPoolFIRSTLEVELSIZEintsuptostream
public T next() {if (size <= index)throw new NoSuchElementException();T res = block[blkIdx];if (++blkIdx == BLOCK_SIZE) {if (++dirIdx < directory.length)block = directory[dirIdx];elseblock = null;blkIdx = 0;}index++;return res;},public T next if size  indexthrow new NoSuchElementExceptionT res  blockblkIdxif blkIdx  BLOCKSIZE if dirIdx  directorylengthblock  directorydirIdxelseblock  nullblkIdx  0indexreturn res
public DescribeOptionGroupOptionsResult describeOptionGroupOptions(DescribeOptionGroupOptionsRequest request) {request = beforeClientExecution(request);return executeDescribeOptionGroupOptions(request);},public DescribeOptionGroupOptionsResult describeOptionGroupOptionsDescribeOptionGroupOptionsRequest request request  beforeClientExecutionrequestreturn executeDescribeOptionGroupOptionsrequest
"public int alloc(int size) {int index = n;int len = array.length;if (n + size >= len) {byte[] aux = new byte[len + blockSize];System.arraycopy(array, 0, aux, 0, len);array = aux;}n += size;return index;}",public int allocint size int index  nint len  arraylengthif n  size  len byte aux  new bytelen  blockSizeSystemarraycopyarray 0 aux 0 lenarray  auxn  sizereturn index
public String getText() {StringBuilder text = new StringBuilder();for ( TermInfo ti: termsInfos ) {text.append( ti.getText() );}return text.toString();},public String getText StringBuilder text  new StringBuilderfor  TermInfo ti termsInfos  textappend tigetText return texttoString
public ReplaceableItem(String name) {setName(name);},public ReplaceableItemString name setNamename
public NamePtg(LittleEndianInput in)  {field_1_label_index = in.readUShort();field_2_zero = in.readShort();},public NamePtgLittleEndianInput in  field1labelindex  inreadUShortfield2zero  inreadShort
public int indexOf(Object object) {if (object != null) {for (int i = 0; i < a.length; i++) {if (object.equals(a[i])) {return i;}}} else {for (int i = 0; i < a.length; i++) {if (a[i] == null) {return i;}}}return -1;},public int indexOfObject object if object  null for int i  0 i  alength i if objectequalsai return i else for int i  0 i  alength i if ai  null return ireturn 1
public ListContactFlowsResult listContactFlows(ListContactFlowsRequest request) {request = beforeClientExecution(request);return executeListContactFlows(request);},public ListContactFlowsResult listContactFlowsListContactFlowsRequest request request  beforeClientExecutionrequestreturn executeListContactFlowsrequest
"public int doLogic() throws IOException {String analyzerName = null;try {if (current >= analyzerNames.size()) {current = 0;}analyzerName = analyzerNames.get(current++);Analyzer analyzer = null;if (null == analyzerName || 0 == analyzerName.length()) {analyzerName = ""org.apache.lucene.analysis.standard.StandardAnalyzer"";}AnalyzerFactory factory = getRunData().getAnalyzerFactories().get(analyzerName);if (null != factory) {analyzer = factory.create();} else {if (analyzerName.contains(""."")) {if (analyzerName.startsWith(""standard."")) {analyzerName = ""org.apache.lucene.analysis."" + analyzerName;}analyzer = createAnalyzer(analyzerName);} else { try {String coreClassName = ""org.apache.lucene.analysis.core."" + analyzerName;analyzer = createAnalyzer(coreClassName);analyzerName = coreClassName;} catch (ClassNotFoundException e) {analyzerName = ""org.apache.lucene.analysis."" + analyzerName;analyzer = createAnalyzer(analyzerName);}}}getRunData().setAnalyzer(analyzer);} catch (Exception e) {throw new RuntimeException(""Error creating Analyzer: "" + analyzerName, e);}return 1;}",public int doLogic throws IOException String analyzerName  nulltry if current  analyzerNamessize current  0analyzerName  analyzerNamesgetcurrentAnalyzer analyzer  nullif null  analyzerName  0  analyzerNamelength analyzerName  orgapacheluceneanalysisstandardStandardAnalyzerAnalyzerFactory factory  getRunDatagetAnalyzerFactoriesgetanalyzerNameif null  factory analyzer  factorycreate else if analyzerNamecontains if analyzerNamestartsWithstandard analyzerName  orgapacheluceneanalysis  analyzerNameanalyzer  createAnalyzeranalyzerName else  try String coreClassName  orgapacheluceneanalysiscore  analyzerNameanalyzer  createAnalyzercoreClassNameanalyzerName  coreClassName catch ClassNotFoundException e analyzerName  orgapacheluceneanalysis  analyzerNameanalyzer  createAnalyzeranalyzerNamegetRunDatasetAnalyzeranalyzer catch Exception e throw new RuntimeExceptionError creating Analyzer   analyzerName ereturn 1
"public int serializeSimplePart( byte[] data, int offset ){LittleEndian.putShort(data, offset, getId());LittleEndian.putInt(data, offset + 2, propertyValue);return 6;}",public int serializeSimplePart byte data int offset LittleEndianputShortdata offset getIdLittleEndianputIntdata offset  2 propertyValuereturn 6
"public static short[] copyOf(short[] original, int newLength) {if (newLength < 0) {throw new NegativeArraySizeException();}return copyOfRange(original, 0, newLength);}",public static short copyOfshort original int newLength if newLength  0 throw new NegativeArraySizeExceptionreturn copyOfRangeoriginal 0 newLength
@Override public Iterator<V> iterator() {return new ValueIterator();},Override public IteratorV iterator return new ValueIterator
public boolean equals(Object obj) {if (this == obj) {return true;}if (!super.equals(obj)) {return false;}PrefixQuery other = (PrefixQuery) obj;if (!term.equals(other.term)) {return false;}return true;},public boolean equalsObject obj if this  obj return trueif superequalsobj return falsePrefixQuery other  PrefixQuery objif termequalsotherterm return falsereturn true
public boolean isSheetVeryHidden(int sheetnum) {return getBoundSheetRec(sheetnum).isVeryHidden();},public boolean isSheetVeryHiddenint sheetnum return getBoundSheetRecsheetnumisVeryHidden
"public UpdateAccessKeyRequest(String accessKeyId, StatusType status) {setAccessKeyId(accessKeyId);setStatus(status.toString());}",public UpdateAccessKeyRequestString accessKeyId StatusType status setAccessKeyIdaccessKeyIdsetStatusstatustoString
"public static int countMatchingCellsInArea(ThreeDEval areaEval, I_MatchPredicate criteriaPredicate) {int result = 0;final int firstSheetIndex = areaEval.getFirstSheetIndex();final int lastSheetIndex = areaEval.getLastSheetIndex();for (int sIx = firstSheetIndex; sIx <= lastSheetIndex; sIx++) {int height = areaEval.getHeight();int width = areaEval.getWidth();for (int rrIx=0; rrIx<height; rrIx++) {for (int rcIx=0; rcIx<width; rcIx++) {ValueEval ve = areaEval.getValue(sIx, rrIx, rcIx);if(criteriaPredicate instanceof I_MatchAreaPredicate){I_MatchAreaPredicate areaPredicate = (I_MatchAreaPredicate)criteriaPredicate;if(!areaPredicate.matches(areaEval, rrIx, rcIx)) continue;}if(criteriaPredicate.matches(ve)) {result++;}}}}return result;}",public static int countMatchingCellsInAreaThreeDEval areaEval IMatchPredicate criteriaPredicate int result  0final int firstSheetIndex  areaEvalgetFirstSheetIndexfinal int lastSheetIndex  areaEvalgetLastSheetIndexfor int sIx  firstSheetIndex sIx  lastSheetIndex sIx int height  areaEvalgetHeightint width  areaEvalgetWidthfor int rrIx0 rrIxheight rrIx for int rcIx0 rcIxwidth rcIx ValueEval ve  areaEvalgetValuesIx rrIx rcIxifcriteriaPredicate instanceof IMatchAreaPredicateIMatchAreaPredicate areaPredicate  IMatchAreaPredicatecriteriaPredicateifareaPredicatematchesareaEval rrIx rcIx continueifcriteriaPredicatematchesve resultreturn result
public PushCommand setRefSpecs(List<RefSpec> specs) {checkCallable();this.refSpecs.clear();this.refSpecs.addAll(specs);return this;},public PushCommand setRefSpecsListRefSpec specs checkCallablethisrefSpecsclearthisrefSpecsaddAllspecsreturn this
"public EscherComplexProperty(short id, int complexSize) {super((short)(id | IS_COMPLEX));complexData = IOUtils.safelyAllocate(complexSize, MAX_RECORD_LENGTH);}",public EscherComplexPropertyshort id int complexSize supershortid  ISCOMPLEXcomplexData  IOUtilssafelyAllocatecomplexSize MAXRECORDLENGTH
public CreateNodeResult createNode(CreateNodeRequest request) {request = beforeClientExecution(request);return executeCreateNode(request);},public CreateNodeResult createNodeCreateNodeRequest request request  beforeClientExecutionrequestreturn executeCreateNoderequest
"public Note call() throws GitAPIException {checkCallable();NoteMap map = NoteMap.newEmptyMap();RevCommit notesCommit = null;try (RevWalk walk = new RevWalk(repo)) {Ref ref = repo.exactRef(notesRef);if (ref != null) {notesCommit = walk.parseCommit(ref.getObjectId());map = NoteMap.read(walk.getObjectReader(), notesCommit);}return map.getNote(id);} catch (IOException e) {throw new JGitInternalException(e.getMessage(), e);}}",public Note call throws GitAPIException checkCallableNoteMap map  NoteMapnewEmptyMapRevCommit notesCommit  nulltry RevWalk walk  new RevWalkrepo Ref ref  repoexactRefnotesRefif ref  null notesCommit  walkparseCommitrefgetObjectIdmap  NoteMapreadwalkgetObjectReader notesCommitreturn mapgetNoteid catch IOException e throw new JGitInternalExceptionegetMessage e
public void ReInit(CharStream stream){jjmatchedPos = jjnewStateCnt = 0;curLexState = defaultLexState;input_stream = stream;ReInitRounds();},public void ReInitCharStream streamjjmatchedPos  jjnewStateCnt  0curLexState  defaultLexStateinputstream  streamReInitRounds
"public boolean add(char[] text) {return map.put(text, PLACEHOLDER) == null;}",public boolean addchar text return mapputtext PLACEHOLDER  null
public void setDeltaBaseCacheLimit(int newLimit) {deltaBaseCacheLimit = newLimit;},public void setDeltaBaseCacheLimitint newLimit deltaBaseCacheLimit  newLimit
"public ServerException(String errCode, String errMsg, String requestId) {this(errCode, errMsg);this.setRequestId(requestId);}",public ServerExceptionString errCode String errMsg String requestId thiserrCode errMsgthissetRequestIdrequestId
"final public SrndQuery NQuery() throws ParseException {SrndQuery q;ArrayList<SrndQuery> queries;Token dt;q = WQuery();label_5:while (true) {switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {case N:;break;default:jj_la1[3] = jj_gen;break label_5;}dt = jj_consume_token(N);queries = new ArrayList<SrndQuery>();queries.add(q); q = WQuery();queries.add(q);q = getDistanceQuery(queries, true , dt, false );}{if (true) return q;}throw new Error(""Missing return statement in function"");}",final public SrndQuery NQuery throws ParseException SrndQuery qArrayListSrndQuery queriesToken dtq  WQuerylabel5while true switch jjntk1jjntkjjntk case Nbreakdefaultjjla13  jjgenbreak label5dt  jjconsumetokenNqueries  new ArrayListSrndQueryqueriesaddq q  WQueryqueriesaddqq  getDistanceQueryqueries true  dt false if true return qthrow new ErrorMissing return statement in function
"public MoreLikeThisQuery(String likeText, String[] moreLikeFields, Analyzer analyzer, String fieldName) {this.likeText = Objects.requireNonNull(likeText);this.moreLikeFields = Objects.requireNonNull(moreLikeFields);this.analyzer = Objects.requireNonNull(analyzer);this.fieldName = Objects.requireNonNull(fieldName);}",public MoreLikeThisQueryString likeText String moreLikeFields Analyzer analyzer String fieldName thislikeText  ObjectsrequireNonNulllikeTextthismoreLikeFields  ObjectsrequireNonNullmoreLikeFieldsthisanalyzer  ObjectsrequireNonNullanalyzerthisfieldName  ObjectsrequireNonNullfieldName
public DescribeImageAttributeResult describeImageAttribute(DescribeImageAttributeRequest request) {request = beforeClientExecution(request);return executeDescribeImageAttribute(request);},public DescribeImageAttributeResult describeImageAttributeDescribeImageAttributeRequest request request  beforeClientExecutionrequestreturn executeDescribeImageAttributerequest
public void println(Object o) {println(String.valueOf(o));},public void printlnObject o printlnStringvalueOfo
public DeregisterFromWorkMailResult deregisterFromWorkMail(DeregisterFromWorkMailRequest request) {request = beforeClientExecution(request);return executeDeregisterFromWorkMail(request);},public DeregisterFromWorkMailResult deregisterFromWorkMailDeregisterFromWorkMailRequest request request  beforeClientExecutionrequestreturn executeDeregisterFromWorkMailrequest
public PutClusterCapacityProvidersResult putClusterCapacityProviders(PutClusterCapacityProvidersRequest request) {request = beforeClientExecution(request);return executePutClusterCapacityProviders(request);},public PutClusterCapacityProvidersResult putClusterCapacityProvidersPutClusterCapacityProvidersRequest request request  beforeClientExecutionrequestreturn executePutClusterCapacityProvidersrequest
"public ChangeMessageVisibilityBatchRequestEntry(String id, String receiptHandle) {setId(id);setReceiptHandle(receiptHandle);}",public ChangeMessageVisibilityBatchRequestEntryString id String receiptHandle setIdidsetReceiptHandlereceiptHandle
"public StringBuffer append(float f) {RealToString.getInstance().appendFloat(this, f);return this;}",public StringBuffer appendfloat f RealToStringgetInstanceappendFloatthis freturn this
"@Override public int compare(T o1, T o2) {return cmp.compare(o2, o1);}",Override public int compareT o1 T o2 return cmpcompareo2 o1
"public GetAttributesRequest(String domainName, String itemName) {setDomainName(domainName);setItemName(itemName);}",public GetAttributesRequestString domainName String itemName setDomainNamedomainNamesetItemNameitemName
"public String toString() {return getClass().getName() +"" ["" +_firstMovedIndex +_lastMovedIndex +_amountToMove +""]"";}",public String toString return getClassgetName   firstMovedIndex lastMovedIndex amountToMove 
"public final ValueEval evaluate(ValueEval[] args, int srcCellRow, int srcCellCol) {double result;try {result = eval(args, srcCellRow, srcCellCol);checkValue(result);} catch (EvaluationException e) {return e.getErrorEval();}return new NumberEval(result);}",public final ValueEval evaluateValueEval args int srcCellRow int srcCellCol double resulttry result  evalargs srcCellRow srcCellColcheckValueresult catch EvaluationException e return egetErrorEvalreturn new NumberEvalresult
public DescribeFpgaImagesResult describeFpgaImages(DescribeFpgaImagesRequest request) {request = beforeClientExecution(request);return executeDescribeFpgaImages(request);},public DescribeFpgaImagesResult describeFpgaImagesDescribeFpgaImagesRequest request request  beforeClientExecutionrequestreturn executeDescribeFpgaImagesrequest
"public ObjectDirectoryInserter newInserter() {return new ObjectDirectoryInserter(this, config);}",public ObjectDirectoryInserter newInserter return new ObjectDirectoryInserterthis config
"public LongBuffer put(int index, long c) {checkIndex(index);byteBuffer.putLong(index * SizeOf.LONG, c);return this;}",public LongBuffer putint index long c checkIndexindexbyteBufferputLongindex  SizeOfLONG creturn this
public boolean isRetainBody() {return retainBody;},public boolean isRetainBody return retainBody
public AddApplicationVpcConfigurationResult addApplicationVpcConfiguration(AddApplicationVpcConfigurationRequest request) {request = beforeClientExecution(request);return executeAddApplicationVpcConfiguration(request);},public AddApplicationVpcConfigurationResult addApplicationVpcConfigurationAddApplicationVpcConfigurationRequest request request  beforeClientExecutionrequestreturn executeAddApplicationVpcConfigurationrequest
"public Entry<K, V> next() { return nextEntry(); }",public EntryK V next  return nextEntry 
public SpreadsheetVersion getSpreadsheetVersion(){return SpreadsheetVersion.EXCEL97;},public SpreadsheetVersion getSpreadsheetVersionreturn SpreadsheetVersionEXCEL97
"public String[] promptKeyboardInteractive(String destination, String name,String instruction, String[] prompt, boolean[] echo) {CredentialItem.StringType[] v = new CredentialItem.StringType[prompt.length];for (int i = 0; i < prompt.length; i++)v[i] = new CredentialItem.StringType(prompt[i], !echo[i]);List<CredentialItem> items = new ArrayList<>();if (instruction != null && instruction.length() > 0)items.add(new CredentialItem.InformationalMessage(instruction));items.addAll(Arrays.asList(v));if (!provider.get(uri, items))return null; String[] result = new String[v.length];for (int i = 0; i < v.length; i++)result[i] = v[i].getValue();return result;}",public String promptKeyboardInteractiveString destination String nameString instruction String prompt boolean echo CredentialItemStringType v  new CredentialItemStringTypepromptlengthfor int i  0 i  promptlength ivi  new CredentialItemStringTypeprompti echoiListCredentialItem items  new ArrayListif instruction  null  instructionlength  0itemsaddnew CredentialItemInformationalMessageinstructionitemsaddAllArraysasListvif providergeturi itemsreturn null String result  new Stringvlengthfor int i  0 i  vlength iresulti  vigetValuereturn result
public static synchronized MergeStrategy get(String name) {return STRATEGIES.get(name);},public static synchronized MergeStrategy getString name return STRATEGIESgetname
public AssociateConnectionWithLagResult associateConnectionWithLag(AssociateConnectionWithLagRequest request) {request = beforeClientExecution(request);return executeAssociateConnectionWithLag(request);},public AssociateConnectionWithLagResult associateConnectionWithLagAssociateConnectionWithLagRequest request request  beforeClientExecutionrequestreturn executeAssociateConnectionWithLagrequest
public short getShortValue(final short holder){return ( short ) getValue(holder);},public short getShortValuefinal short holderreturn  short  getValueholder
public static BreakIterator getSentenceInstance() {return getSentenceInstance(Locale.getDefault());},public static BreakIterator getSentenceInstance return getSentenceInstanceLocalegetDefault
"public MissingObjectException(ObjectId id, String type) {super(MessageFormat.format(JGitText.get().missingObject, type, id.name()));missing = id.copy();}",public MissingObjectExceptionObjectId id String type superMessageFormatformatJGitTextgetmissingObject type idnamemissing  idcopy
"public PipedReader(PipedWriter out, int pipeSize) throws IOException {this(pipeSize);connect(out);}",public PipedReaderPipedWriter out int pipeSize throws IOException thispipeSizeconnectout
"public ImportKeyPairRequest(String keyName, String publicKeyMaterial) {setKeyName(keyName);setPublicKeyMaterial(publicKeyMaterial);}",public ImportKeyPairRequestString keyName String publicKeyMaterial setKeyNamekeyNamesetPublicKeyMaterialpublicKeyMaterial
"public DeleteFaceRequest() {super(""LinkFace"", ""2018-07-20"", ""DeleteFace"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public DeleteFaceRequest superLinkFace 20180720 DeleteFacesetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public CreateReceiptRuleSetResult createReceiptRuleSet(CreateReceiptRuleSetRequest request) {request = beforeClientExecution(request);return executeCreateReceiptRuleSet(request);},public CreateReceiptRuleSetResult createReceiptRuleSetCreateReceiptRuleSetRequest request request  beforeClientExecutionrequestreturn executeCreateReceiptRuleSetrequest
"public RemovePermissionRequest(String queueUrl, String label) {setQueueUrl(queueUrl);setLabel(label);}",public RemovePermissionRequestString queueUrl String label setQueueUrlqueueUrlsetLabellabel
"public String toString() {return ""DFR "" + basicModel.toString() + afterEffect.toString()+ normalization.toString();}",public String toString return DFR   basicModeltoString  afterEffecttoString normalizationtoString
"public void setResult(RefUpdate.Result r) {switch (r) {case NOT_ATTEMPTED:setResult(Result.NOT_ATTEMPTED);break;case LOCK_FAILURE:case IO_FAILURE:setResult(Result.LOCK_FAILURE);break;case NO_CHANGE:case NEW:case FORCED:case FAST_FORWARD:setResult(Result.OK);break;case REJECTED:setResult(Result.REJECTED_NONFASTFORWARD);break;case REJECTED_CURRENT_BRANCH:setResult(Result.REJECTED_CURRENT_BRANCH);break;case REJECTED_MISSING_OBJECT:setResult(Result.REJECTED_MISSING_OBJECT);break;case REJECTED_OTHER_REASON:setResult(Result.REJECTED_OTHER_REASON);break;default:setResult(Result.REJECTED_OTHER_REASON, r.name());break;}}",public void setResultRefUpdateResult r switch r case NOTATTEMPTEDsetResultResultNOTATTEMPTEDbreakcase LOCKFAILUREcase IOFAILUREsetResultResultLOCKFAILUREbreakcase NOCHANGEcase NEWcase FORCEDcase FASTFORWARDsetResultResultOKbreakcase REJECTEDsetResultResultREJECTEDNONFASTFORWARDbreakcase REJECTEDCURRENTBRANCHsetResultResultREJECTEDCURRENTBRANCHbreakcase REJECTEDMISSINGOBJECTsetResultResultREJECTEDMISSINGOBJECTbreakcase REJECTEDOTHERREASONsetResultResultREJECTEDOTHERREASONbreakdefaultsetResultResultREJECTEDOTHERREASON rnamebreak
public DeleteMatchmakingConfigurationResult deleteMatchmakingConfiguration(DeleteMatchmakingConfigurationRequest request) {request = beforeClientExecution(request);return executeDeleteMatchmakingConfiguration(request);},public DeleteMatchmakingConfigurationResult deleteMatchmakingConfigurationDeleteMatchmakingConfigurationRequest request request  beforeClientExecutionrequestreturn executeDeleteMatchmakingConfigurationrequest
"public double resolveDistErr(SpatialContext ctx, double defaultDistErrPct) {if (distErr != null)return distErr;double distErrPct = (this.distErrPct != null ? this.distErrPct : defaultDistErrPct);return calcDistanceFromErrPct(shape, distErrPct, ctx);}",public double resolveDistErrSpatialContext ctx double defaultDistErrPct if distErr  nullreturn distErrdouble distErrPct  thisdistErrPct  null  thisdistErrPct  defaultDistErrPctreturn calcDistanceFromErrPctshape distErrPct ctx
"public final CharsetEncoder replaceWith(byte[] replacement) {if (replacement == null) {throw new IllegalArgumentException(""replacement == null"");}if (replacement.length == 0) {throw new IllegalArgumentException(""replacement.length == 0"");}if (replacement.length > maxBytesPerChar()) {throw new IllegalArgumentException(""replacement length > maxBytesPerChar: "" +replacement.length + "" > "" + maxBytesPerChar());}if (!isLegalReplacement(replacement)) {throw new IllegalArgumentException(""bad replacement: "" + Arrays.toString(replacement));}this.replacementBytes = replacement;implReplaceWith(replacementBytes);return this;}",public final CharsetEncoder replaceWithbyte replacement if replacement  null throw new IllegalArgumentExceptionreplacement  nullif replacementlength  0 throw new IllegalArgumentExceptionreplacementlength  0if replacementlength  maxBytesPerChar throw new IllegalArgumentExceptionreplacement length  maxBytesPerChar  replacementlength      maxBytesPerCharif isLegalReplacementreplacement throw new IllegalArgumentExceptionbad replacement   ArraystoStringreplacementthisreplacementBytes  replacementimplReplaceWithreplacementBytesreturn this
public CreateApplicationSnapshotResult createApplicationSnapshot(CreateApplicationSnapshotRequest request) {request = beforeClientExecution(request);return executeCreateApplicationSnapshot(request);},public CreateApplicationSnapshotResult createApplicationSnapshotCreateApplicationSnapshotRequest request request  beforeClientExecutionrequestreturn executeCreateApplicationSnapshotrequest
"public ValueEval evaluate(int srcCellRow, int srcCellCol, ValueEval arg0) {double d;try {ValueEval ve = OperandResolver.getSingleValue(arg0, srcCellRow, srcCellCol);if(ve instanceof StringEval) {return ve;}d = OperandResolver.coerceValueToDouble(ve);} catch (EvaluationException e) {return e.getErrorEval();}return new NumberEval(+d);}",public ValueEval evaluateint srcCellRow int srcCellCol ValueEval arg0 double dtry ValueEval ve  OperandResolvergetSingleValuearg0 srcCellRow srcCellColifve instanceof StringEval return ved  OperandResolvercoerceValueToDoubleve catch EvaluationException e return egetErrorEvalreturn new NumberEvald
"public MoPenBindIsvRequest() {super(""MoPen"", ""2018-02-11"", ""MoPenBindIsv"", ""mopen"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public MoPenBindIsvRequest superMoPen 20180211 MoPenBindIsv mopensetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public AssociateIpGroupsResult associateIpGroups(AssociateIpGroupsRequest request) {request = beforeClientExecution(request);return executeAssociateIpGroups(request);},public AssociateIpGroupsResult associateIpGroupsAssociateIpGroupsRequest request request  beforeClientExecutionrequestreturn executeAssociateIpGroupsrequest
public TestEventPatternResult testEventPattern(TestEventPatternRequest request) {request = beforeClientExecution(request);return executeTestEventPattern(request);},public TestEventPatternResult testEventPatternTestEventPatternRequest request request  beforeClientExecutionrequestreturn executeTestEventPatternrequest
"public LockFailedException(File file, String message) {super(message);this.file = file;}",public LockFailedExceptionFile file String message supermessagethisfile  file
public DeleteSkillGroupResult deleteSkillGroup(DeleteSkillGroupRequest request) {request = beforeClientExecution(request);return executeDeleteSkillGroup(request);},public DeleteSkillGroupResult deleteSkillGroupDeleteSkillGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteSkillGrouprequest
"public SortedDocValuesField(String name, BytesRef bytes) {super(name, TYPE);fieldsData = bytes;}",public SortedDocValuesFieldString name BytesRef bytes supername TYPEfieldsData  bytes
public CreateNetworkResult createNetwork(CreateNetworkRequest request) {request = beforeClientExecution(request);return executeCreateNetwork(request);},public CreateNetworkResult createNetworkCreateNetworkRequest request request  beforeClientExecutionrequestreturn executeCreateNetworkrequest
public DeleteGroupRequest(String groupName) {setGroupName(groupName);},public DeleteGroupRequestString groupName setGroupNamegroupName
public DescribeCacheEngineVersionsResult describeCacheEngineVersions(DescribeCacheEngineVersionsRequest request) {request = beforeClientExecution(request);return executeDescribeCacheEngineVersions(request);},public DescribeCacheEngineVersionsResult describeCacheEngineVersionsDescribeCacheEngineVersionsRequest request request  beforeClientExecutionrequestreturn executeDescribeCacheEngineVersionsrequest
public int compareSameType(Object other) {assert exists || (false == value);MutableValueBool b = (MutableValueBool)other;if (value != b.value) return value ? 1 : -1;if (exists == b.exists) return 0;return exists ? 1 : -1;},public int compareSameTypeObject other assert exists  false  valueMutableValueBool b  MutableValueBoolotherif value  bvalue return value  1  1if exists  bexists return 0return exists  1  1
public LineParser(String[] header) {this.header = header;},public LineParserString header thisheader  header
public DBInstance restoreDBInstanceFromDBSnapshot(RestoreDBInstanceFromDBSnapshotRequest request) {request = beforeClientExecution(request);return executeRestoreDBInstanceFromDBSnapshot(request);},public DBInstance restoreDBInstanceFromDBSnapshotRestoreDBInstanceFromDBSnapshotRequest request request  beforeClientExecutionrequestreturn executeRestoreDBInstanceFromDBSnapshotrequest
public void push(E e) {addFirstImpl(e);},public void pushE e addFirstImple
"public synchronized void reset() throws IOException {if (buf == null) {throw new IOException(""Stream is closed"");}if (-1 == markpos) {throw new IOException(""Mark has been invalidated."");}pos = markpos;}",public synchronized void reset throws IOException if buf  null throw new IOExceptionStream is closedif 1  markpos throw new IOExceptionMark has been invalidatedpos  markpos
public UpdateUsagePlanResult updateUsagePlan(UpdateUsagePlanRequest request) {request = beforeClientExecution(request);return executeUpdateUsagePlan(request);},public UpdateUsagePlanResult updateUsagePlanUpdateUsagePlanRequest request request  beforeClientExecutionrequestreturn executeUpdateUsagePlanrequest
public boolean equals(Object obj) {if (this == obj) {return true;}if (obj == null) {return false;}if (getClass() != obj.getClass()) {return false;}TermInfo other = (TermInfo) obj;return position == other.position;},public boolean equalsObject obj if this  obj return trueif obj  null return falseif getClass  objgetClass return falseTermInfo other  TermInfo objreturn position  otherposition
"public StringPtg(String value) {if (value.length() > 255) {throw new IllegalArgumentException(""String literals in formulas can't be bigger than 255 characters ASCII"");}_is16bitUnicode = StringUtil.hasMultibyte(value);field_3_string = value;}",public StringPtgString value if valuelength  255 throw new IllegalArgumentExceptionString literals in formulas cant be bigger than 255 characters ASCIIis16bitUnicode  StringUtilhasMultibytevaluefield3string  value
public ChangeType getChangeType() {return changeType;},public ChangeType getChangeType return changeType
public String asFormulaString() {StringBuilder sb = new StringBuilder(32);asFormulaString(sb);return sb.toString();},public String asFormulaString StringBuilder sb  new StringBuilder32asFormulaStringsbreturn sbtoString
public void serialize(LittleEndianOutput out) {out.writeShort(sid);out.writeShort(getDataSize());out.writeShort(field_1_objectType);out.writeShort(field_2_objectId);out.writeShort(field_3_option);out.writeInt(field_4_reserved1);out.writeInt(field_5_reserved2);out.writeInt(field_6_reserved3);},public void serializeLittleEndianOutput out outwriteShortsidoutwriteShortgetDataSizeoutwriteShortfield1objectTypeoutwriteShortfield2objectIdoutwriteShortfield3optionoutwriteIntfield4reserved1outwriteIntfield5reserved2outwriteIntfield6reserved3
public DescribeAppResult describeApp(DescribeAppRequest request) {request = beforeClientExecution(request);return executeDescribeApp(request);},public DescribeAppResult describeAppDescribeAppRequest request request  beforeClientExecutionrequestreturn executeDescribeApprequest
"public Map<String, DirCacheEntry> getToBeCheckedOut() {return toBeCheckedOut;}",public MapString DirCacheEntry getToBeCheckedOut return toBeCheckedOut
public CreatePublicVirtualInterfaceResult createPublicVirtualInterface(CreatePublicVirtualInterfaceRequest request) {request = beforeClientExecution(request);return executeCreatePublicVirtualInterface(request);},public CreatePublicVirtualInterfaceResult createPublicVirtualInterfaceCreatePublicVirtualInterfaceRequest request request  beforeClientExecutionrequestreturn executeCreatePublicVirtualInterfacerequest
public CreateQueueResult createQueue(String queueName) {return createQueue(new CreateQueueRequest().withQueueName(queueName));},public CreateQueueResult createQueueString queueName return createQueuenew CreateQueueRequestwithQueueNamequeueName
"public ParseException generateParseException() {jj_expentries.clear();boolean[] la1tokens = new boolean[33];if (jj_kind >= 0) {la1tokens[jj_kind] = true;jj_kind = -1;}for (int i = 0; i < 25; i++) {if (jj_la1[i] == jj_gen) {for (int j = 0; j < 32; j++) {if ((jj_la1_0[i] & (1<<j)) != 0) {la1tokens[j] = true;}if ((jj_la1_1[i] & (1<<j)) != 0) {la1tokens[32+j] = true;}}}}for (int i = 0; i < 33; i++) {if (la1tokens[i]) {jj_expentry = new int[1];jj_expentry[0] = i;jj_expentries.add(jj_expentry);}}jj_endpos = 0;jj_rescan_token();jj_add_error_token(0, 0);int[][] exptokseq = new int[jj_expentries.size()][];for (int i = 0; i < jj_expentries.size(); i++) {exptokseq[i] = jj_expentries.get(i);}return new ParseException(token, exptokseq, tokenImage);}",public ParseException generateParseException jjexpentriesclearboolean la1tokens  new boolean33if jjkind  0 la1tokensjjkind  truejjkind  1for int i  0 i  25 i if jjla1i  jjgen for int j  0 j  32 j if jjla10i  1j  0 la1tokensj  trueif jjla11i  1j  0 la1tokens32j  truefor int i  0 i  33 i if la1tokensi jjexpentry  new int1jjexpentry0  ijjexpentriesaddjjexpentryjjendpos  0jjrescantokenjjadderrortoken0 0int exptokseq  new intjjexpentriessizefor int i  0 i  jjexpentriessize i exptokseqi  jjexpentriesgetireturn new ParseExceptiontoken exptokseq tokenImage
public CreateFieldLevelEncryptionProfileResult createFieldLevelEncryptionProfile(CreateFieldLevelEncryptionProfileRequest request) {request = beforeClientExecution(request);return executeCreateFieldLevelEncryptionProfile(request);},public CreateFieldLevelEncryptionProfileResult createFieldLevelEncryptionProfileCreateFieldLevelEncryptionProfileRequest request request  beforeClientExecutionrequestreturn executeCreateFieldLevelEncryptionProfilerequest
public static int getSmileyResource(int which) {return sIconIds[which];},public static int getSmileyResourceint which return sIconIdswhich
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[SCL]\n"");buffer.append(""    .numerator            = "").append(""0x"").append(HexDump.toHex(  getNumerator ())).append("" ("").append( getNumerator() ).append("" )"");buffer.append(System.getProperty(""line.separator""));buffer.append(""    .denominator          = "").append(""0x"").append(HexDump.toHex(  getDenominator ())).append("" ("").append( getDenominator() ).append("" )"");buffer.append(System.getProperty(""line.separator""));buffer.append(""[/SCL]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendSCLnbufferappend    numerator             append0xappendHexDumptoHex  getNumerator append append getNumerator append bufferappendSystemgetPropertylineseparatorbufferappend    denominator           append0xappendHexDumptoHex  getDenominator append append getDenominator append bufferappendSystemgetPropertylineseparatorbufferappendSCLnreturn buffertoString
"public final void setBufferSize(int newSize) {assert buffer == null || bufferSize == buffer.length: ""buffer="" + buffer + "" bufferSize="" + bufferSize + "" buffer.length="" + (buffer != null ? buffer.length : 0);if (newSize != bufferSize) {checkBufferSize(newSize);bufferSize = newSize;if (buffer != null) {byte[] newBuffer = new byte[newSize];final int leftInBuffer = bufferLength-bufferPosition;final int numToCopy;if (leftInBuffer > newSize)numToCopy = newSize;elsenumToCopy = leftInBuffer;System.arraycopy(buffer, bufferPosition, newBuffer, 0, numToCopy);bufferStart += bufferPosition;bufferPosition = 0;bufferLength = numToCopy;newBuffer(newBuffer);}}}",public final void setBufferSizeint newSize assert buffer  null  bufferSize  bufferlength buffer  buffer   bufferSize  bufferSize   bufferlength  buffer  null  bufferlength  0if newSize  bufferSize checkBufferSizenewSizebufferSize  newSizeif buffer  null byte newBuffer  new bytenewSizefinal int leftInBuffer  bufferLengthbufferPositionfinal int numToCopyif leftInBuffer  newSizenumToCopy  newSizeelsenumToCopy  leftInBufferSystemarraycopybuffer bufferPosition newBuffer 0 numToCopybufferStart  bufferPositionbufferPosition  0bufferLength  numToCopynewBuffernewBuffer
public DisassociateSigninDelegateGroupsFromAccountResult disassociateSigninDelegateGroupsFromAccount(DisassociateSigninDelegateGroupsFromAccountRequest request) {request = beforeClientExecution(request);return executeDisassociateSigninDelegateGroupsFromAccount(request);},public DisassociateSigninDelegateGroupsFromAccountResult disassociateSigninDelegateGroupsFromAccountDisassociateSigninDelegateGroupsFromAccountRequest request request  beforeClientExecutionrequestreturn executeDisassociateSigninDelegateGroupsFromAccountrequest
public TokenStream create(TokenStream input) {return new IndicNormalizationFilter(input);},public TokenStream createTokenStream input return new IndicNormalizationFilterinput
public TickRecord(RecordInputStream in) {field_1_majorTickType = in.readByte();field_2_minorTickType = in.readByte();field_3_labelPosition = in.readByte();field_4_background    = in.readByte();field_5_labelColorRgb = in.readInt();field_6_zero1         = in.readInt();field_7_zero2         = in.readInt();field_8_zero3         = in.readInt();field_9_zero4         = in.readInt();field_10_options      = in.readShort();field_11_tickColor    = in.readShort();field_12_zero5        = in.readShort();},public TickRecordRecordInputStream in field1majorTickType  inreadBytefield2minorTickType  inreadBytefield3labelPosition  inreadBytefield4background     inreadBytefield5labelColorRgb  inreadIntfield6zero1          inreadIntfield7zero2          inreadIntfield8zero3          inreadIntfield9zero4          inreadIntfield10options       inreadShortfield11tickColor     inreadShortfield12zero5         inreadShort
public long getPackedGitLimit() {return packedGitLimit;},public long getPackedGitLimit return packedGitLimit
public DisassociateContactFromAddressBookResult disassociateContactFromAddressBook(DisassociateContactFromAddressBookRequest request) {request = beforeClientExecution(request);return executeDisassociateContactFromAddressBook(request);},public DisassociateContactFromAddressBookResult disassociateContactFromAddressBookDisassociateContactFromAddressBookRequest request request  beforeClientExecutionrequestreturn executeDisassociateContactFromAddressBookrequest
public void writeShort(int v) {checkPosition(2);int i = _writeIndex;_buf[i++] = (byte)((v >>>  0) & 0xFF);_buf[i++] = (byte)((v >>>  8) & 0xFF);_writeIndex = i;},public void writeShortint v checkPosition2int i  writeIndexbufi  bytev   0  0xFFbufi  bytev   8  0xFFwriteIndex  i
"public int read(char[] c, int off, int len) {if (pos < size) {len = Math.min(len, size-pos);s.getChars(pos, pos+len, c, off);pos += len;return len;} else {s = null;return -1;}}",public int readchar c int off int len if pos  size len  Mathminlen sizepossgetCharspos poslen c offpos  lenreturn len else s  nullreturn 1
public AssociateSkillWithUsersResult associateSkillWithUsers(AssociateSkillWithUsersRequest request) {request = beforeClientExecution(request);return executeAssociateSkillWithUsers(request);},public AssociateSkillWithUsersResult associateSkillWithUsersAssociateSkillWithUsersRequest request request  beforeClientExecutionrequestreturn executeAssociateSkillWithUsersrequest
"public boolean doPrune(double ageSec, IndexSearcher searcher) {return ageSec > maxAgeSec;}",public boolean doPrunedouble ageSec IndexSearcher searcher return ageSec  maxAgeSec
public DescribeObservationResult describeObservation(DescribeObservationRequest request) {request = beforeClientExecution(request);return executeDescribeObservation(request);},public DescribeObservationResult describeObservationDescribeObservationRequest request request  beforeClientExecutionrequestreturn executeDescribeObservationrequest
public DeletePresetResult deletePreset(DeletePresetRequest request) {request = beforeClientExecution(request);return executeDeletePreset(request);},public DeletePresetResult deletePresetDeletePresetRequest request request  beforeClientExecutionrequestreturn executeDeletePresetrequest
"public long ramBytesUsed() {long size = 0;for (Map.Entry<String,DocValuesProducer> entry : formats.entrySet()) {size += (entry.getKey().length() * Character.BYTES) + entry.getValue().ramBytesUsed();}return size;}",public long ramBytesUsed long size  0for MapEntryStringDocValuesProducer entry  formatsentrySet size  entrygetKeylength  CharacterBYTES  entrygetValueramBytesUsedreturn size
public UserSViewBegin clone() {return copy();},public UserSViewBegin clone return copy
"public char[] toCharArray() {synchronized (lock) {char[] result = new char[count];System.arraycopy(buf, 0, result, 0, count);return result;}}",public char toCharArray synchronized lock char result  new charcountSystemarraycopybuf 0 result 0 countreturn result
public RebuildWorkspacesResult rebuildWorkspaces(RebuildWorkspacesRequest request) {request = beforeClientExecution(request);return executeRebuildWorkspaces(request);},public RebuildWorkspacesResult rebuildWorkspacesRebuildWorkspacesRequest request request  beforeClientExecutionrequestreturn executeRebuildWorkspacesrequest
public GetLexiconResult getLexicon(GetLexiconRequest request) {request = beforeClientExecution(request);return executeGetLexicon(request);},public GetLexiconResult getLexiconGetLexiconRequest request request  beforeClientExecutionrequestreturn executeGetLexiconrequest
public UpdateDeploymentStrategyResult updateDeploymentStrategy(UpdateDeploymentStrategyRequest request) {request = beforeClientExecution(request);return executeUpdateDeploymentStrategy(request);},public UpdateDeploymentStrategyResult updateDeploymentStrategyUpdateDeploymentStrategyRequest request request  beforeClientExecutionrequestreturn executeUpdateDeploymentStrategyrequest
"public GetAlgorithmListRequest() {super(""industry-brain"", ""2018-07-12"", ""GetAlgorithmList"");setProtocol(ProtocolType.HTTPS);}",public GetAlgorithmListRequest superindustrybrain 20180712 GetAlgorithmListsetProtocolProtocolTypeHTTPS
public boolean isForceUpdate() {return forceUpdate;},public boolean isForceUpdate return forceUpdate
public ListGameServersResult listGameServers(ListGameServersRequest request) {request = beforeClientExecution(request);return executeListGameServers(request);},public ListGameServersResult listGameServersListGameServersRequest request request  beforeClientExecutionrequestreturn executeListGameServersrequest
public boolean delete(){boolean rval = false;if ((!isRoot()) && isDeleteOK()){rval = _parent.deleteEntry(this);}return rval;},public boolean deleteboolean rval  falseif isRoot  isDeleteOKrval  parentdeleteEntrythisreturn rval
public TableRecord(RecordInputStream in) {super(in);field_5_flags        = in.readByte();field_6_res          = in.readByte();field_7_rowInputRow  = in.readShort();field_8_colInputRow  = in.readShort();field_9_rowInputCol  = in.readShort();field_10_colInputCol = in.readShort();},public TableRecordRecordInputStream in superinfield5flags         inreadBytefield6res           inreadBytefield7rowInputRow   inreadShortfield8colInputRow   inreadShortfield9rowInputCol   inreadShortfield10colInputCol  inreadShort
public AllocateHostsResult allocateHosts(AllocateHostsRequest request) {request = beforeClientExecution(request);return executeAllocateHosts(request);},public AllocateHostsResult allocateHostsAllocateHostsRequest request request  beforeClientExecutionrequestreturn executeAllocateHostsrequest
"public void writeContinue() {_ulrOutput.terminate();_totalPreviousRecordsSize += _ulrOutput.getTotalSize();_ulrOutput = new UnknownLengthRecordOutput(_out, ContinueRecord.sid);}",public void writeContinue ulrOutputterminatetotalPreviousRecordsSize  ulrOutputgetTotalSizeulrOutput  new UnknownLengthRecordOutputout ContinueRecordsid
"public void unread(byte[] buffer, int offset, int length) throws IOException {if (length > pos) {throw new IOException(""Pushback buffer full"");}Arrays.checkOffsetAndCount(buffer.length, offset, length);if (buf == null) {throw streamClosed();}System.arraycopy(buffer, offset, buf, pos - length, length);pos = pos - length;}",public void unreadbyte buffer int offset int length throws IOException if length  pos throw new IOExceptionPushback buffer fullArrayscheckOffsetAndCountbufferlength offset lengthif buf  null throw streamClosedSystemarraycopybuffer offset buf pos  length lengthpos  pos  length
"public boolean containsCell(BookSheetKey key, int rowIndex, int columnIndex) {BlankCellSheetGroup bcsg = _sheetGroupsByBookSheet.get(key);if (bcsg == null) {return false;}return bcsg.containsCell(rowIndex, columnIndex);}",public boolean containsCellBookSheetKey key int rowIndex int columnIndex BlankCellSheetGroup bcsg  sheetGroupsByBookSheetgetkeyif bcsg  null return falsereturn bcsgcontainsCellrowIndex columnIndex
public DescribeTextTranslationJobResult describeTextTranslationJob(DescribeTextTranslationJobRequest request) {request = beforeClientExecution(request);return executeDescribeTextTranslationJob(request);},public DescribeTextTranslationJobResult describeTextTranslationJobDescribeTextTranslationJobRequest request request  beforeClientExecutionrequestreturn executeDescribeTextTranslationJobrequest
"public int serialize( int offset, byte[] data, EscherSerializationListener listener ){listener.beforeRecordSerialize( offset, getRecordId(), this );if (remainingData == null) {remainingData = new byte[0];}LittleEndian.putShort( data, offset, getOptions() );LittleEndian.putShort( data, offset + 2, getRecordId() );int remainingBytes = remainingData.length + (shortRecord ? 8 : 18);LittleEndian.putInt( data, offset + 4, remainingBytes );LittleEndian.putShort( data, offset + 8, field_1_flag );LittleEndian.putShort( data, offset + 10, field_2_col1 );LittleEndian.putShort( data, offset + 12, field_3_dx1 );LittleEndian.putShort( data, offset + 14, field_4_row1 );if(!shortRecord) {LittleEndian.putShort( data, offset + 16, field_5_dy1 );LittleEndian.putShort( data, offset + 18, field_6_col2 );LittleEndian.putShort( data, offset + 20, field_7_dx2 );LittleEndian.putShort( data, offset + 22, field_8_row2 );LittleEndian.putShort( data, offset + 24, field_9_dy2 );}System.arraycopy( remainingData, 0, data, offset + (shortRecord ? 16 : 26), remainingData.length );int pos = offset + 8 + (shortRecord ? 8 : 18) + remainingData.length;listener.afterRecordSerialize( pos, getRecordId(), pos - offset, this );return pos - offset;}",public int serialize int offset byte data EscherSerializationListener listener listenerbeforeRecordSerialize offset getRecordId this if remainingData  null remainingData  new byte0LittleEndianputShort data offset getOptions LittleEndianputShort data offset  2 getRecordId int remainingBytes  remainingDatalength  shortRecord  8  18LittleEndianputInt data offset  4 remainingBytes LittleEndianputShort data offset  8 field1flag LittleEndianputShort data offset  10 field2col1 LittleEndianputShort data offset  12 field3dx1 LittleEndianputShort data offset  14 field4row1 ifshortRecord LittleEndianputShort data offset  16 field5dy1 LittleEndianputShort data offset  18 field6col2 LittleEndianputShort data offset  20 field7dx2 LittleEndianputShort data offset  22 field8row2 LittleEndianputShort data offset  24 field9dy2 Systemarraycopy remainingData 0 data offset  shortRecord  16  26 remainingDatalength int pos  offset  8  shortRecord  8  18  remainingDatalengthlistenerafterRecordSerialize pos getRecordId pos  offset this return pos  offset
public final void serialize(LittleEndianOutput out) {int nBreaks = _breaks.size();out.writeShort(nBreaks);for (Break aBreak : _breaks) {aBreak.serialize(out);}},public final void serializeLittleEndianOutput out int nBreaks  breakssizeoutwriteShortnBreaksfor Break aBreak  breaks aBreakserializeout
public float baselineTf(float freq) {if (0.0f == freq) return 0.0f;return (freq <= tf_min)? tf_base: (float)Math.sqrt(freq + (tf_base * tf_base) - tf_min);},public float baselineTffloat freq if 00f  freq return 00freturn freq  tfmin tfbase floatMathsqrtfreq  tfbase  tfbase  tfmin
"public StringBuilder delete(int start, int end) {delete0(start, end);return this;}",public StringBuilder deleteint start int end delete0start endreturn this
public boolean isError() {return this.type == TYPE_MALFORMED_INPUT|| this.type == TYPE_UNMAPPABLE_CHAR;},public boolean isError return thistype  TYPEMALFORMEDINPUT thistype  TYPEUNMAPPABLECHAR
public int getLastSheetIndexFromExternSheetIndex(int externSheetNumber){return linkTable.getLastInternalSheetIndexForExtIndex(externSheetNumber);},public int getLastSheetIndexFromExternSheetIndexint externSheetNumberreturn linkTablegetLastInternalSheetIndexForExtIndexexternSheetNumber
"public PlainTextDictionary(InputStream dictFile) {in = new BufferedReader(IOUtils.getDecodingReader(dictFile, StandardCharsets.UTF_8));}",public PlainTextDictionaryInputStream dictFile in  new BufferedReaderIOUtilsgetDecodingReaderdictFile StandardCharsetsUTF8
"public LittleEndianByteArrayOutputStream(byte[] buf, int startOffset, int maxWriteLen) { if (startOffset < 0 || startOffset > buf.length) {throw new IllegalArgumentException(""Specified startOffset ("" + startOffset+ "") is out of allowable range (0.."" + buf.length + "")"");}_buf = buf;_writeIndex = startOffset;_endIndex = startOffset + maxWriteLen;if (_endIndex < startOffset ||  _endIndex > buf.length) {throw new IllegalArgumentException(""calculated end index ("" + _endIndex+ "") is out of allowable range ("" + _writeIndex + "".."" + buf.length + "")"");}}",public LittleEndianByteArrayOutputStreambyte buf int startOffset int maxWriteLen  if startOffset  0  startOffset  buflength throw new IllegalArgumentExceptionSpecified startOffset   startOffset  is out of allowable range 0  buflength  buf  bufwriteIndex  startOffsetendIndex  startOffset  maxWriteLenif endIndex  startOffset   endIndex  buflength throw new IllegalArgumentExceptioncalculated end index   endIndex  is out of allowable range   writeIndex    buflength  
public void addRecords(MergeCellsRecord[] mcrs) {for (int i = 0; i < mcrs.length; i++) {addMergeCellsRecord(mcrs[i]);}},public void addRecordsMergeCellsRecord mcrs for int i  0 i  mcrslength i addMergeCellsRecordmcrsi
public DescribeInternetGatewaysResult describeInternetGateways(DescribeInternetGatewaysRequest request) {request = beforeClientExecution(request);return executeDescribeInternetGateways(request);},public DescribeInternetGatewaysResult describeInternetGatewaysDescribeInternetGatewaysRequest request request  beforeClientExecutionrequestreturn executeDescribeInternetGatewaysrequest
public void removeLastSaveDateTime() {remove1stProperty(PropertyIDMap.PID_LASTSAVE_DTM);},public void removeLastSaveDateTime remove1stPropertyPropertyIDMapPIDLASTSAVEDTM
public boolean hitEnd() {return hitEndImpl(address);},public boolean hitEnd return hitEndImpladdress
public ListSkillsResult listSkills(ListSkillsRequest request) {request = beforeClientExecution(request);return executeListSkills(request);},public ListSkillsResult listSkillsListSkillsRequest request request  beforeClientExecutionrequestreturn executeListSkillsrequest
"public String toString() {return ""popMode"";}",public String toString return popMode
"public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long byte0 = blocks[blocksOffset++] & 0xFF;final long byte1 = blocks[blocksOffset++] & 0xFF;final long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 16) | (byte1 << 8) | byte2;}}",public void decodebyte blocks int blocksOffset long values int valuesOffset int iterations for int i  0 i  iterations i final long byte0  blocksblocksOffset  0xFFfinal long byte1  blocksblocksOffset  0xFFfinal long byte2  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  16  byte1  8  byte2
public GetCloudFrontOriginAccessIdentityResult getCloudFrontOriginAccessIdentity(GetCloudFrontOriginAccessIdentityRequest request) {request = beforeClientExecution(request);return executeGetCloudFrontOriginAccessIdentity(request);},public GetCloudFrontOriginAccessIdentityResult getCloudFrontOriginAccessIdentityGetCloudFrontOriginAccessIdentityRequest request request  beforeClientExecutionrequestreturn executeGetCloudFrontOriginAccessIdentityrequest
"public boolean include(RevWalk walker, RevCommit c) {return false;}",public boolean includeRevWalk walker RevCommit c return false
public DocumentStoredFieldVisitor() {this.fieldsToAdd = null;},public DocumentStoredFieldVisitor thisfieldsToAdd  null
"public int addConditionalFormatting(CellRangeAddress[] regions, HSSFConditionalFormattingRule[] cfRules) {if (regions == null) {throw new IllegalArgumentException(""regions must not be null"");}for(CellRangeAddress range : regions) range.validate(SpreadsheetVersion.EXCEL97);if (cfRules == null) {throw new IllegalArgumentException(""cfRules must not be null"");}if (cfRules.length == 0) {throw new IllegalArgumentException(""cfRules must not be empty"");}if (cfRules.length > 3) {throw new IllegalArgumentException(""Number of rules must not exceed 3"");}CFRuleBase[] rules = new CFRuleBase[cfRules.length];for (int i = 0; i != cfRules.length; i++) {rules[i] = cfRules[i].getCfRuleRecord();}CFRecordsAggregate cfra = new CFRecordsAggregate(regions, rules);return _conditionalFormattingTable.add(cfra);}",public int addConditionalFormattingCellRangeAddress regions HSSFConditionalFormattingRule cfRules if regions  null throw new IllegalArgumentExceptionregions must not be nullforCellRangeAddress range  regions rangevalidateSpreadsheetVersionEXCEL97if cfRules  null throw new IllegalArgumentExceptioncfRules must not be nullif cfRuleslength  0 throw new IllegalArgumentExceptioncfRules must not be emptyif cfRuleslength  3 throw new IllegalArgumentExceptionNumber of rules must not exceed 3CFRuleBase rules  new CFRuleBasecfRuleslengthfor int i  0 i  cfRuleslength i rulesi  cfRulesigetCfRuleRecordCFRecordsAggregate cfra  new CFRecordsAggregateregions rulesreturn conditionalFormattingTableaddcfra
"public FloatBuffer get(float[] dst, int dstOffset, int floatCount) {Arrays.checkOffsetAndCount(dst.length, dstOffset, floatCount);if (floatCount > remaining()) {throw new BufferUnderflowException();}for (int i = dstOffset; i < dstOffset + floatCount; ++i) {dst[i] = get();}return this;}",public FloatBuffer getfloat dst int dstOffset int floatCount ArrayscheckOffsetAndCountdstlength dstOffset floatCountif floatCount  remaining throw new BufferUnderflowExceptionfor int i  dstOffset i  dstOffset  floatCount i dsti  getreturn this
public void rewind() {pos = 0;},public void rewind pos  0
"public boolean include(TreeWalk walker) {final int cmp = walker.isPathPrefix(raw, raw.length);if (cmp > 0)throw StopWalkException.INSTANCE;return cmp == 0;}",public boolean includeTreeWalk walker final int cmp  walkerisPathPrefixraw rawlengthif cmp  0throw StopWalkExceptionINSTANCEreturn cmp  0
public TagDeliveryStreamResult tagDeliveryStream(TagDeliveryStreamRequest request) {request = beforeClientExecution(request);return executeTagDeliveryStream(request);},public TagDeliveryStreamResult tagDeliveryStreamTagDeliveryStreamRequest request request  beforeClientExecutionrequestreturn executeTagDeliveryStreamrequest
"public NormalisedDecimal normaliseBaseTen() {return NormalisedDecimal.create(_significand, _binaryExponent);}",public NormalisedDecimal normaliseBaseTen return NormalisedDecimalcreatesignificand binaryExponent
"public NavigableSet<K> descendingKeySet() {return new BoundedMap(!ascending, from, fromBound, to, toBound).navigableKeySet();}",public NavigableSetK descendingKeySet return new BoundedMapascending from fromBound to toBoundnavigableKeySet
public void serialize(LittleEndianOutput out) {out.writeShort(_row);out.writeShort(_firstCol);int nItems = _xfs.length;for (short xf : _xfs) {out.writeShort(xf);}out.writeShort(_lastCol);},public void serializeLittleEndianOutput out outwriteShortrowoutwriteShortfirstColint nItems  xfslengthfor short xf  xfs outwriteShortxfoutwriteShortlastCol
"public byte[] toByteArray() {byte[] result = new byte[LONG_SIZE];LittleEndian.putLong( result, 0, fileTime);return result;}",public byte toByteArray byte result  new byteLONGSIZELittleEndianputLong result 0 fileTimereturn result
public DiffCommand diff() {return new DiffCommand(repo);},public DiffCommand diff return new DiffCommandrepo
public ModifySnapshotAttributeResult modifySnapshotAttribute(ModifySnapshotAttributeRequest request) {request = beforeClientExecution(request);return executeModifySnapshotAttribute(request);},public ModifySnapshotAttributeResult modifySnapshotAttributeModifySnapshotAttributeRequest request request  beforeClientExecutionrequestreturn executeModifySnapshotAttributerequest
public CreateSubnetResult createSubnet(CreateSubnetRequest request) {request = beforeClientExecution(request);return executeCreateSubnet(request);},public CreateSubnetResult createSubnetCreateSubnetRequest request request  beforeClientExecutionrequestreturn executeCreateSubnetrequest
"@Override public List<E> subList(int start, int end) {return new UnmodifiableRandomAccessList<E>(list.subList(start, end));}",Override public ListE subListint start int end return new UnmodifiableRandomAccessListElistsubListstart end
"public long getClipboardFormat() throws HPSFException{if (!(getClipboardFormatTag() == CFTAG_WINDOWS))throw new HPSFException(""Clipboard Format Tag of Thumbnail must "" +""be CFTAG_WINDOWS."");return LittleEndian.getInt(getThumbnail(), OFFSET_CF);}",public long getClipboardFormat throws HPSFExceptionif getClipboardFormatTag  CFTAGWINDOWSthrow new HPSFExceptionClipboard Format Tag of Thumbnail must  be CFTAGWINDOWSreturn LittleEndiangetIntgetThumbnail OFFSETCF
"public HSSFDataValidation(CellRangeAddressList regions, DataValidationConstraint constraint) {_regions = regions;_constraint = (DVConstraint)constraint;}",public HSSFDataValidationCellRangeAddressList regions DataValidationConstraint constraint regions  regionsconstraint  DVConstraintconstraint
public DiffCommand setProgressMonitor(ProgressMonitor monitor) {if (monitor == null) {monitor = NullProgressMonitor.INSTANCE;}this.monitor = monitor;return this;},public DiffCommand setProgressMonitorProgressMonitor monitor if monitor  null monitor  NullProgressMonitorINSTANCEthismonitor  monitorreturn this
public DeleteSegmentResult deleteSegment(DeleteSegmentRequest request) {request = beforeClientExecution(request);return executeDeleteSegment(request);},public DeleteSegmentResult deleteSegmentDeleteSegmentRequest request request  beforeClientExecutionrequestreturn executeDeleteSegmentrequest
public AcceptVpcPeeringConnectionResult acceptVpcPeeringConnection(AcceptVpcPeeringConnectionRequest request) {request = beforeClientExecution(request);return executeAcceptVpcPeeringConnection(request);},public AcceptVpcPeeringConnectionResult acceptVpcPeeringConnectionAcceptVpcPeeringConnectionRequest request request  beforeClientExecutionrequestreturn executeAcceptVpcPeeringConnectionrequest
"public final FloatBuffer put(float[] src) {return put(src, 0, src.length);}",public final FloatBuffer putfloat src return putsrc 0 srclength
"public PortugueseLightStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public PortugueseLightStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public RefPtg(int row, int column, boolean isRowRelative, boolean isColumnRelative) {super(row, column, isRowRelative, isColumnRelative);}",public RefPtgint row int column boolean isRowRelative boolean isColumnRelative superrow column isRowRelative isColumnRelative
public ExportJournalToS3Result exportJournalToS3(ExportJournalToS3Request request) {request = beforeClientExecution(request);return executeExportJournalToS3(request);},public ExportJournalToS3Result exportJournalToS3ExportJournalToS3Request request request  beforeClientExecutionrequestreturn executeExportJournalToS3request
public AssociatePhoneNumbersWithVoiceConnectorGroupResult associatePhoneNumbersWithVoiceConnectorGroup(AssociatePhoneNumbersWithVoiceConnectorGroupRequest request) {request = beforeClientExecution(request);return executeAssociatePhoneNumbersWithVoiceConnectorGroup(request);},public AssociatePhoneNumbersWithVoiceConnectorGroupResult associatePhoneNumbersWithVoiceConnectorGroupAssociatePhoneNumbersWithVoiceConnectorGroupRequest request request  beforeClientExecutionrequestreturn executeAssociatePhoneNumbersWithVoiceConnectorGrouprequest
"public RecursivePrefixTreeStrategy(SpatialPrefixTree grid, String fieldName) {super(grid, fieldName);prefixGridScanLevel = grid.getMaxLevels() - 4;}",public RecursivePrefixTreeStrategySpatialPrefixTree grid String fieldName supergrid fieldNameprefixGridScanLevel  gridgetMaxLevels  4
"public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {values[valuesOffset++] = ((blocks[blocksOffset++] & 0xFFL) << 8) | (blocks[blocksOffset++] & 0xFFL);}}",public void decodebyte blocks int blocksOffset long values int valuesOffset int iterations for int j  0 j  iterations j valuesvaluesOffset  blocksblocksOffset  0xFFL  8  blocksblocksOffset  0xFFL
"public GetAlbumsByNamesRequest() {super(""CloudPhoto"", ""2017-07-11"", ""GetAlbumsByNames"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public GetAlbumsByNamesRequest superCloudPhoto 20170711 GetAlbumsByNames cloudphotosetProtocolProtocolTypeHTTPS
public SendRawEmailRequest(RawMessage rawMessage) {setRawMessage(rawMessage);},public SendRawEmailRequestRawMessage rawMessage setRawMessagerawMessage
public boolean equals(Object other) {return sameClassAs(other) &&equalsTo(getClass().cast(other));},public boolean equalsObject other return sameClassAsother equalsTogetClasscastother
"public Rule(String suffix, int min, String replacement) {this.suffix = suffix.toCharArray();this.replacement = replacement.toCharArray();this.min = min;}",public RuleString suffix int min String replacement thissuffix  suffixtoCharArraythisreplacement  replacementtoCharArraythismin  min
public ListDataSetsResult listDataSets(ListDataSetsRequest request) {request = beforeClientExecution(request);return executeListDataSets(request);},public ListDataSetsResult listDataSetsListDataSetsRequest request request  beforeClientExecutionrequestreturn executeListDataSetsrequest
"public int lastIndexOf(E object, int to) {Object[] snapshot = elements;return lastIndexOf(object, snapshot, 0, to);}",public int lastIndexOfE object int to Object snapshot  elementsreturn lastIndexOfobject snapshot 0 to
public DBCluster stopDBCluster(StopDBClusterRequest request) {request = beforeClientExecution(request);return executeStopDBCluster(request);},public DBCluster stopDBClusterStopDBClusterRequest request request  beforeClientExecutionrequestreturn executeStopDBClusterrequest
public ListRuleNamesByTargetResult listRuleNamesByTarget(ListRuleNamesByTargetRequest request) {request = beforeClientExecution(request);return executeListRuleNamesByTarget(request);},public ListRuleNamesByTargetResult listRuleNamesByTargetListRuleNamesByTargetRequest request request  beforeClientExecutionrequestreturn executeListRuleNamesByTargetrequest
"public void readFully(byte[] buf, int off, int len){_in.readFully(buf, off, len);}",public void readFullybyte buf int off int leninreadFullybuf off len
"public SSTRecord(RecordInputStream in) {field_1_num_strings = in.readInt();field_2_num_unique_strings = in.readInt();field_3_strings = new IntMapper<>();deserializer = new SSTDeserializer(field_3_strings);if(field_1_num_strings == 0) {field_2_num_unique_strings = 0;return;}deserializer.manufactureStrings( field_2_num_unique_strings, in );}",public SSTRecordRecordInputStream in field1numstrings  inreadIntfield2numuniquestrings  inreadIntfield3strings  new IntMapperdeserializer  new SSTDeserializerfield3stringsiffield1numstrings  0 field2numuniquestrings  0returndeserializermanufactureStrings field2numuniquestrings in 
public DeleteBatchPredictionResult deleteBatchPrediction(DeleteBatchPredictionRequest request) {request = beforeClientExecution(request);return executeDeleteBatchPrediction(request);},public DeleteBatchPredictionResult deleteBatchPredictionDeleteBatchPredictionRequest request request  beforeClientExecutionrequestreturn executeDeleteBatchPredictionrequest
public SetReceiptRulePositionResult setReceiptRulePosition(SetReceiptRulePositionRequest request) {request = beforeClientExecution(request);return executeSetReceiptRulePosition(request);},public SetReceiptRulePositionResult setReceiptRulePositionSetReceiptRulePositionRequest request request  beforeClientExecutionrequestreturn executeSetReceiptRulePositionrequest
"public Ref3DPtg(String cellref, int externIdx ) {this(new CellReference(cellref), externIdx);}",public Ref3DPtgString cellref int externIdx  thisnew CellReferencecellref externIdx
"public DisableAvailabilityZonesForLoadBalancerRequest(String loadBalancerName, java.util.List<String> availabilityZones) {setLoadBalancerName(loadBalancerName);setAvailabilityZones(availabilityZones);}",public DisableAvailabilityZonesForLoadBalancerRequestString loadBalancerName javautilListString availabilityZones setLoadBalancerNameloadBalancerNamesetAvailabilityZonesavailabilityZones
"public Set<Entry<K, V>> entrySet() {Set<Entry<K, V>> es = entrySet;return (es != null) ? es : (entrySet = new EntrySet());}",public SetEntryK V entrySet SetEntryK V es  entrySetreturn es  null  es  entrySet  new EntrySet
"public char[] get(int posStart, int length) {assert length > 0;assert inBounds(posStart): ""posStart="" + posStart + "" length="" + length;final int startIndex = getIndex(posStart);final int endIndex = getIndex(posStart + length);final char[] result = new char[length];if (endIndex >= startIndex && length < buffer.length) {System.arraycopy(buffer, startIndex, result, 0, endIndex-startIndex);} else {final int part1 = buffer.length-startIndex;System.arraycopy(buffer, startIndex, result, 0, part1);System.arraycopy(buffer, 0, result, buffer.length-startIndex, length-part1);}return result;}",public char getint posStart int length assert length  0assert inBoundsposStart posStart  posStart   length  lengthfinal int startIndex  getIndexposStartfinal int endIndex  getIndexposStart  lengthfinal char result  new charlengthif endIndex  startIndex  length  bufferlength Systemarraycopybuffer startIndex result 0 endIndexstartIndex else final int part1  bufferlengthstartIndexSystemarraycopybuffer startIndex result 0 part1Systemarraycopybuffer 0 result bufferlengthstartIndex lengthpart1return result
"public IndexInput openInput(String name, IOContext context) throws IOException {ensureOpen();if (context.context != Context.MERGE || context.mergeInfo.estimatedMergeBytes < minBytesDirect || fileLength(name) < minBytesDirect) {return delegate.openInput(name, context);} else {return new NativeUnixIndexInput(getDirectory().resolve(name), mergeBufferSize);}}",public IndexInput openInputString name IOContext context throws IOException ensureOpenif contextcontext  ContextMERGE  contextmergeInfoestimatedMergeBytes  minBytesDirect  fileLengthname  minBytesDirect return delegateopenInputname context else return new NativeUnixIndexInputgetDirectoryresolvename mergeBufferSize
"public EscherArrayProperty(short id, byte[] complexData) {this(id, safeSize(complexData == null ? 0 : complexData.length));setComplexData(complexData);}",public EscherArrayPropertyshort id byte complexData thisid safeSizecomplexData  null  0  complexDatalengthsetComplexDatacomplexData
public NamePtg(int nameIndex) {field_1_label_index = 1 + nameIndex; },public NamePtgint nameIndex field1labelindex  1  nameIndex 
public DescribeHumanLoopResult describeHumanLoop(DescribeHumanLoopRequest request) {request = beforeClientExecution(request);return executeDescribeHumanLoop(request);},public DescribeHumanLoopResult describeHumanLoopDescribeHumanLoopRequest request request  beforeClientExecutionrequestreturn executeDescribeHumanLooprequest
public PutDedicatedIpInPoolResult putDedicatedIpInPool(PutDedicatedIpInPoolRequest request) {request = beforeClientExecution(request);return executePutDedicatedIpInPool(request);},public PutDedicatedIpInPoolResult putDedicatedIpInPoolPutDedicatedIpInPoolRequest request request  beforeClientExecutionrequestreturn executePutDedicatedIpInPoolrequest
"public String toString() {StringBuilder sb = new StringBuilder();sb.append(getClass().getName()).append("" [XCT"");sb.append("" nCRNs="").append(field_1_number_crn_records);sb.append("" sheetIx="").append(field_2_sheet_table_index);sb.append(""]"");return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappendgetClassgetNameappend XCTsbappend nCRNsappendfield1numbercrnrecordssbappend sheetIxappendfield2sheettableindexsbappendreturn sbtoString
"public ObjectId idFor(int objectType, long length, InputStream in)throws IOException {SHA1 md = SHA1.newInstance();md.update(Constants.encodedTypeString(objectType));md.update((byte) ' ');md.update(Constants.encodeASCII(length));md.update((byte) 0);byte[] buf = buffer();while (length > 0) {int n = in.read(buf, 0, (int) Math.min(length, buf.length));if (n < 0)throw new EOFException(JGitText.get().unexpectedEndOfInput);md.update(buf, 0, n);length -= n;}return md.toObjectId();}",public ObjectId idForint objectType long length InputStream inthrows IOException SHA1 md  SHA1newInstancemdupdateConstantsencodedTypeStringobjectTypemdupdatebyte  mdupdateConstantsencodeASCIIlengthmdupdatebyte 0byte buf  bufferwhile length  0 int n  inreadbuf 0 int Mathminlength buflengthif n  0throw new EOFExceptionJGitTextgetunexpectedEndOfInputmdupdatebuf 0 nlength  nreturn mdtoObjectId
"public List<Query> makeLuceneSubQueriesField(String fn, BasicQueryFactory qf) {List<Query> luceneSubQueries = new ArrayList<>();Iterator<SrndQuery> sqi = getSubQueriesIterator();while (sqi.hasNext()) {luceneSubQueries.add( (sqi.next()).makeLuceneQueryField(fn, qf));}return luceneSubQueries;}",public ListQuery makeLuceneSubQueriesFieldString fn BasicQueryFactory qf ListQuery luceneSubQueries  new ArrayListIteratorSrndQuery sqi  getSubQueriesIteratorwhile sqihasNext luceneSubQueriesadd sqinextmakeLuceneQueryFieldfn qfreturn luceneSubQueries
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[SHARED FEATURE]\n"");buffer.append(""[/SHARED FEATURE]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendSHARED FEATUREnbufferappendSHARED FEATUREnreturn buffertoString
"public QueryNode process(QueryNode queryTree) throws QueryNodeException {Operator op = getQueryConfigHandler().get(ConfigurationKeys.DEFAULT_OPERATOR);if (op == null) {throw new IllegalArgumentException(""StandardQueryConfigHandler.ConfigurationKeys.DEFAULT_OPERATOR should be set on the QueryConfigHandler"");}this.usingAnd = StandardQueryConfigHandler.Operator.AND == op;return processIteration(queryTree);}",public QueryNode processQueryNode queryTree throws QueryNodeException Operator op  getQueryConfigHandlergetConfigurationKeysDEFAULTOPERATORif op  null throw new IllegalArgumentExceptionStandardQueryConfigHandlerConfigurationKeysDEFAULTOPERATOR should be set on the QueryConfigHandlerthisusingAnd  StandardQueryConfigHandlerOperatorAND  opreturn processIterationqueryTree
public DBCluster startDBCluster(StartDBClusterRequest request) {request = beforeClientExecution(request);return executeStartDBCluster(request);},public DBCluster startDBClusterStartDBClusterRequest request request  beforeClientExecutionrequestreturn executeStartDBClusterrequest
public Ptg[] getParsedExpression() {return Formula.getTokens(field_5_name_definition);},public Ptg getParsedExpression return FormulagetTokensfield5namedefinition
public final long getFilePointer() { return bufferStart + bufferPosition; },public final long getFilePointer  return bufferStart  bufferPosition 
public ListDevicesResult listDevices(ListDevicesRequest request) {request = beforeClientExecution(request);return executeListDevices(request);},public ListDevicesResult listDevicesListDevicesRequest request request  beforeClientExecutionrequestreturn executeListDevicesrequest
"public ApplyTokenRequest() {super(""OnsMqtt"", ""2019-12-11"", ""ApplyToken"", ""onsmqtt"");setMethod(MethodType.POST);}",public ApplyTokenRequest superOnsMqtt 20191211 ApplyToken onsmqttsetMethodMethodTypePOST
public EnableVpcClassicLinkDnsSupportResult enableVpcClassicLinkDnsSupport(EnableVpcClassicLinkDnsSupportRequest request) {request = beforeClientExecution(request);return executeEnableVpcClassicLinkDnsSupport(request);},public EnableVpcClassicLinkDnsSupportResult enableVpcClassicLinkDnsSupportEnableVpcClassicLinkDnsSupportRequest request request  beforeClientExecutionrequestreturn executeEnableVpcClassicLinkDnsSupportrequest
public Cluster modifyClusterDbRevision(ModifyClusterDbRevisionRequest request) {request = beforeClientExecution(request);return executeModifyClusterDbRevision(request);},public Cluster modifyClusterDbRevisionModifyClusterDbRevisionRequest request request  beforeClientExecutionrequestreturn executeModifyClusterDbRevisionrequest
"public final LongBuffer put(long[] src) {return put(src, 0, src.length);}",public final LongBuffer putlong src return putsrc 0 srclength
public Object clone() {try {return super.clone();} catch (CloneNotSupportedException e) {throw new AssertionError();}},public Object clone try return superclone catch CloneNotSupportedException e throw new AssertionError
"public LinkFaceRequest() {super(""LinkFace"", ""2018-07-20"", ""LinkFace"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public LinkFaceRequest superLinkFace 20180720 LinkFacesetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public RemoveAttributesResult removeAttributes(RemoveAttributesRequest request) {request = beforeClientExecution(request);return executeRemoveAttributes(request);},public RemoveAttributesResult removeAttributesRemoveAttributesRequest request request  beforeClientExecutionrequestreturn executeRemoveAttributesrequest
public boolean remove(Object o) {return ConcurrentHashMap.this.remove(o) != null;},public boolean removeObject o return ConcurrentHashMapthisremoveo  null
"public String toFormulaString(String[] operands) {return ""("" + operands[0] + "")"";}",public String toFormulaStringString operands return   operands0  
"public boolean equals(Object obj) {if (this == obj) return true;if (obj == null) return false;if (getClass() != obj.getClass()) return false;PostingsAndFreq other = (PostingsAndFreq) obj;if (position != other.position) return false;if (terms == null) return other.terms == null;return Arrays.equals(terms, other.terms);}",public boolean equalsObject obj if this  obj return trueif obj  null return falseif getClass  objgetClass return falsePostingsAndFreq other  PostingsAndFreq objif position  otherposition return falseif terms  null return otherterms  nullreturn Arraysequalsterms otherterms
public ModifyMountTargetSecurityGroupsResult modifyMountTargetSecurityGroups(ModifyMountTargetSecurityGroupsRequest request) {request = beforeClientExecution(request);return executeModifyMountTargetSecurityGroups(request);},public ModifyMountTargetSecurityGroupsResult modifyMountTargetSecurityGroupsModifyMountTargetSecurityGroupsRequest request request  beforeClientExecutionrequestreturn executeModifyMountTargetSecurityGroupsrequest
public ListBatchInferenceJobsResult listBatchInferenceJobs(ListBatchInferenceJobsRequest request) {request = beforeClientExecution(request);return executeListBatchInferenceJobs(request);},public ListBatchInferenceJobsResult listBatchInferenceJobsListBatchInferenceJobsRequest request request  beforeClientExecutionrequestreturn executeListBatchInferenceJobsrequest
public long get(int i) {if (count <= i)throw new ArrayIndexOutOfBoundsException(i);return entries[i];},public long getint i if count  ithrow new ArrayIndexOutOfBoundsExceptionireturn entriesi
"public LimitTokenPositionFilterFactory(Map<String,String> args) {super(args);maxTokenPosition = requireInt(args, MAX_TOKEN_POSITION_KEY);consumeAllTokens = getBoolean(args, CONSUME_ALL_TOKENS_KEY, false);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public LimitTokenPositionFilterFactoryMapStringString args superargsmaxTokenPosition  requireIntargs MAXTOKENPOSITIONKEYconsumeAllTokens  getBooleanargs CONSUMEALLTOKENSKEY falseif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public SaveRecalcRecord(RecordInputStream in) {field_1_recalc = in.readShort();},public SaveRecalcRecordRecordInputStream in field1recalc  inreadShort
public DeleteSecurityGroupResult deleteSecurityGroup(DeleteSecurityGroupRequest request) {request = beforeClientExecution(request);return executeDeleteSecurityGroup(request);},public DeleteSecurityGroupResult deleteSecurityGroupDeleteSecurityGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteSecurityGrouprequest
"public IntervalSet getExpectedTokens() {return getATN().getExpectedTokens(getState(), getContext());}",public IntervalSet getExpectedTokens return getATNgetExpectedTokensgetState getContext
public void print(long l) {print(String.valueOf(l));},public void printlong l printStringvalueOfl
public ResetPersonalPINResult resetPersonalPIN(ResetPersonalPINRequest request) {request = beforeClientExecution(request);return executeResetPersonalPIN(request);},public ResetPersonalPINResult resetPersonalPINResetPersonalPINRequest request request  beforeClientExecutionrequestreturn executeResetPersonalPINrequest
public StartSmartHomeApplianceDiscoveryResult startSmartHomeApplianceDiscovery(StartSmartHomeApplianceDiscoveryRequest request) {request = beforeClientExecution(request);return executeStartSmartHomeApplianceDiscovery(request);},public StartSmartHomeApplianceDiscoveryResult startSmartHomeApplianceDiscoveryStartSmartHomeApplianceDiscoveryRequest request request  beforeClientExecutionrequestreturn executeStartSmartHomeApplianceDiscoveryrequest
"public Query parse(String queryText) {if (""*"".equals(queryText.trim())) {return new MatchAllDocsQuery();}char data[] = queryText.toCharArray();char buffer[] = new char[data.length];State state = new State(data, buffer, 0, data.length);parseSubQuery(state);if (state.top == null) {return new MatchNoDocsQuery(""empty string passed to query parser"");} else {return state.top;}}",public Query parseString queryText if equalsqueryTexttrim return new MatchAllDocsQuerychar data  queryTexttoCharArraychar buffer  new chardatalengthState state  new Statedata buffer 0 datalengthparseSubQuerystateif statetop  null return new MatchNoDocsQueryempty string passed to query parser else return statetop
public void set(int val) {this.val = val;returned = false;},public void setint val thisval  valreturned  false
public Set<URIishField> getRequiredFields() {return Collections.unmodifiableSet(EnumSet.of(URIishField.PATH));},public SetURIishField getRequiredFields return CollectionsunmodifiableSetEnumSetofURIishFieldPATH
public Config(Config defaultConfig) {baseConfig = defaultConfig;state = new AtomicReference<>(newState());},public ConfigConfig defaultConfig baseConfig  defaultConfigstate  new AtomicReferencenewState
public PutAccountSuppressionAttributesResult putAccountSuppressionAttributes(PutAccountSuppressionAttributesRequest request) {request = beforeClientExecution(request);return executePutAccountSuppressionAttributes(request);},public PutAccountSuppressionAttributesResult putAccountSuppressionAttributesPutAccountSuppressionAttributesRequest request request  beforeClientExecutionrequestreturn executePutAccountSuppressionAttributesrequest
"public BufferedIndexInput(String resourceDesc, int bufferSize) {super(resourceDesc);checkBufferSize(bufferSize);this.bufferSize = bufferSize;}",public BufferedIndexInputString resourceDesc int bufferSize superresourceDesccheckBufferSizebufferSizethisbufferSize  bufferSize
public DescribeDocumentClassifierResult describeDocumentClassifier(DescribeDocumentClassifierRequest request) {request = beforeClientExecution(request);return executeDescribeDocumentClassifier(request);},public DescribeDocumentClassifierResult describeDocumentClassifierDescribeDocumentClassifierRequest request request  beforeClientExecutionrequestreturn executeDescribeDocumentClassifierrequest
"public static Function getBasicFunction(int functionIndex) {switch (functionIndex) {case FunctionID.INDIRECT:case FunctionID.EXTERNAL_FUNC:return null;}Function result = functions[functionIndex];if (result == null) {throw new NotImplementedException(""FuncIx="" + functionIndex);}return result;}",public static Function getBasicFunctionint functionIndex switch functionIndex case FunctionIDINDIRECTcase FunctionIDEXTERNALFUNCreturn nullFunction result  functionsfunctionIndexif result  null throw new NotImplementedExceptionFuncIx  functionIndexreturn result
public DeleteFacetResult deleteFacet(DeleteFacetRequest request) {request = beforeClientExecution(request);return executeDeleteFacet(request);},public DeleteFacetResult deleteFacetDeleteFacetRequest request request  beforeClientExecutionrequestreturn executeDeleteFacetrequest
"public NameXPtg getNameXPtg(String name, int sheetRefIndex, UDFFinder udf) {LinkTable lnk = getOrCreateLinkTable();NameXPtg xptg = lnk.getNameXPtg(name, sheetRefIndex);if(xptg == null && udf.findFunction(name) != null) {xptg = lnk.addNameXPtg(name);}return xptg;}",public NameXPtg getNameXPtgString name int sheetRefIndex UDFFinder udf LinkTable lnk  getOrCreateLinkTableNameXPtg xptg  lnkgetNameXPtgname sheetRefIndexifxptg  null  udffindFunctionname  null xptg  lnkaddNameXPtgnamereturn xptg
public int getIndex() {return index;},public int getIndex return index
public final String toFormulaString() {return formatReferenceAsString();},public final String toFormulaString return formatReferenceAsString
public AllocateTransitVirtualInterfaceResult allocateTransitVirtualInterface(AllocateTransitVirtualInterfaceRequest request) {request = beforeClientExecution(request);return executeAllocateTransitVirtualInterface(request);},public AllocateTransitVirtualInterfaceResult allocateTransitVirtualInterfaceAllocateTransitVirtualInterfaceRequest request request  beforeClientExecutionrequestreturn executeAllocateTransitVirtualInterfacerequest
public PushbackInputStream(InputStream in) {super(in);buf = (in == null) ? null : new byte[1];pos = 1;},public PushbackInputStreamInputStream in superinbuf  in  null  null  new byte1pos  1
public int compareTo(PostingsAndFreq other) {if (position != other.position) {return position - other.position;}if (nTerms != other.nTerms) {return nTerms - other.nTerms;}if (nTerms == 0) {return 0;}for (int i=0; i<terms.length; i++) {int res = terms[i].compareTo(other.terms[i]);if (res!=0) return res;}return 0;},public int compareToPostingsAndFreq other if position  otherposition return position  otherpositionif nTerms  othernTerms return nTerms  othernTermsif nTerms  0 return 0for int i0 itermslength i int res  termsicompareToothertermsiif res0 return resreturn 0
"public void notifyUpdateCell(EvaluationCell cell) {int sheetIndex = getSheetIndex(cell.getSheet());_cache.notifyUpdateCell(_workbookIx, sheetIndex, cell);}",public void notifyUpdateCellEvaluationCell cell int sheetIndex  getSheetIndexcellgetSheetcachenotifyUpdateCellworkbookIx sheetIndex cell
public BatchRefUpdate setAllowNonFastForwards(boolean allow) {allowNonFastForwards = allow;return this;},public BatchRefUpdate setAllowNonFastForwardsboolean allow allowNonFastForwards  allowreturn this
public UpdateRouteResult updateRoute(UpdateRouteRequest request) {request = beforeClientExecution(request);return executeUpdateRoute(request);},public UpdateRouteResult updateRouteUpdateRouteRequest request request  beforeClientExecutionrequestreturn executeUpdateRouterequest
public DoubleConstValueSource(double constant) {this.constant = constant;this.fv = (float)constant;this.lv = (long)constant;},public DoubleConstValueSourcedouble constant thisconstant  constantthisfv  floatconstantthislv  longconstant
public void yypushback(int number)  {if ( number > yylength() )zzScanError(ZZ_PUSHBACK_2BIG);zzMarkedPos -= number;},public void yypushbackint number  if  number  yylength zzScanErrorZZPUSHBACK2BIGzzMarkedPos  number
public int getReturnState(int index) {return returnStates[index];},public int getReturnStateint index return returnStatesindex
"final public SrndQuery WQuery() throws ParseException {SrndQuery q;ArrayList<SrndQuery> queries;Token wt;q = PrimaryQuery();label_6:while (true) {switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {case W:;break;default:jj_la1[4] = jj_gen;break label_6;}wt = jj_consume_token(W);queries = new ArrayList<SrndQuery>();queries.add(q); q = PrimaryQuery();queries.add(q);q = getDistanceQuery(queries, true , wt, true );}{if (true) return q;}throw new Error(""Missing return statement in function"");}",final public SrndQuery WQuery throws ParseException SrndQuery qArrayListSrndQuery queriesToken wtq  PrimaryQuerylabel6while true switch jjntk1jjntkjjntk case Wbreakdefaultjjla14  jjgenbreak label6wt  jjconsumetokenWqueries  new ArrayListSrndQueryqueriesaddq q  PrimaryQueryqueriesaddqq  getDistanceQueryqueries true  wt true if true return qthrow new ErrorMissing return statement in function
public ListHITsResult listHITs(ListHITsRequest request) {request = beforeClientExecution(request);return executeListHITs(request);},public ListHITsResult listHITsListHITsRequest request request  beforeClientExecutionrequestreturn executeListHITsrequest
public Set<String> getSubsections(String section) {return getState().getSubsections(section);},public SetString getSubsectionsString section return getStategetSubsectionssection
public AttachDiskResult attachDisk(AttachDiskRequest request) {request = beforeClientExecution(request);return executeAttachDisk(request);},public AttachDiskResult attachDiskAttachDiskRequest request request  beforeClientExecutionrequestreturn executeAttachDiskrequest
public DescribePoliciesResult describePolicies(DescribePoliciesRequest request) {request = beforeClientExecution(request);return executeDescribePolicies(request);},public DescribePoliciesResult describePoliciesDescribePoliciesRequest request request  beforeClientExecutionrequestreturn executeDescribePoliciesrequest
public boolean isEmpty(){return _limit == 0;},public boolean isEmptyreturn limit  0
"public HSSFCombobox(HSSFShape parent, HSSFAnchor anchor) {super(parent, anchor);super.setShapeType(OBJECT_TYPE_COMBO_BOX);CommonObjectDataSubRecord cod = (CommonObjectDataSubRecord) getObjRecord().getSubRecords().get(0);cod.setObjectType(CommonObjectDataSubRecord.OBJECT_TYPE_COMBO_BOX);}",public HSSFComboboxHSSFShape parent HSSFAnchor anchor superparent anchorsupersetShapeTypeOBJECTTYPECOMBOBOXCommonObjectDataSubRecord cod  CommonObjectDataSubRecord getObjRecordgetSubRecordsget0codsetObjectTypeCommonObjectDataSubRecordOBJECTTYPECOMBOBOX
public void setCalcMode(short calcmode){field_1_calcmode = calcmode;},public void setCalcModeshort calcmodefield1calcmode  calcmode
"public void resize(double scale) {resize(scale,scale);}",public void resizedouble scale resizescalescale
public AssociateAddressResult associateAddress(AssociateAddressRequest request) {request = beforeClientExecution(request);return executeAssociateAddress(request);},public AssociateAddressResult associateAddressAssociateAddressRequest request request  beforeClientExecutionrequestreturn executeAssociateAddressrequest
public ConfirmConnectionResult confirmConnection(ConfirmConnectionRequest request) {request = beforeClientExecution(request);return executeConfirmConnection(request);},public ConfirmConnectionResult confirmConnectionConfirmConnectionRequest request request  beforeClientExecutionrequestreturn executeConfirmConnectionrequest
"public UseSelFSRecord(boolean b) {this(0);_options = useNaturalLanguageFormulasFlag.setBoolean(_options, b);}",public UseSelFSRecordboolean b this0options  useNaturalLanguageFormulasFlagsetBooleanoptions b
"public void start(String originalText, TokenStream stream) {offsetAtt = stream.addAttribute(OffsetAttribute.class);currentNumFrags = 1;}",public void startString originalText TokenStream stream offsetAtt  streamaddAttributeOffsetAttributeclasscurrentNumFrags  1
"public FieldFragList createFieldFragList( FieldPhraseList fieldPhraseList, int fragCharSize ){return createFieldFragList( fieldPhraseList, new SimpleFieldFragList( fragCharSize ), fragCharSize );}",public FieldFragList createFieldFragList FieldPhraseList fieldPhraseList int fragCharSize return createFieldFragList fieldPhraseList new SimpleFieldFragList fragCharSize  fragCharSize 
public StopImageBuilderResult stopImageBuilder(StopImageBuilderRequest request) {request = beforeClientExecution(request);return executeStopImageBuilder(request);},public StopImageBuilderResult stopImageBuilderStopImageBuilderRequest request request  beforeClientExecutionrequestreturn executeStopImageBuilderrequest
public final int readUnsignedShort() throws IOException {return ((int) readShort()) & 0xffff;},public final int readUnsignedShort throws IOException return int readShort  0xffff
"public static long pop_xor(long[] arr1, long[] arr2, int wordOffset, int numWords) {long popCount = 0;for (int i = wordOffset, end = wordOffset + numWords; i < end; ++i) {popCount += Long.bitCount(arr1[i] ^ arr2[i]);}return popCount;}",public static long popxorlong arr1 long arr2 int wordOffset int numWords long popCount  0for int i  wordOffset end  wordOffset  numWords i  end i popCount  LongbitCountarr1i  arr2ireturn popCount
public GetDocumentResult getDocument(GetDocumentRequest request) {request = beforeClientExecution(request);return executeGetDocument(request);},public GetDocumentResult getDocumentGetDocumentRequest request request  beforeClientExecutionrequestreturn executeGetDocumentrequest
"public AutocompletePagedResponse(SimpleResponse<AutocompleteResult> autocompleteResponse) {super(autocompleteResponse.getRequest(),autocompleteResponse.getStatusCode(),autocompleteResponse.getHeaders(),autocompleteResponse.getValue().getResults(),null,null);}",public AutocompletePagedResponseSimpleResponseAutocompleteResult autocompleteResponse superautocompleteResponsegetRequestautocompleteResponsegetStatusCodeautocompleteResponsegetHeadersautocompleteResponsegetValuegetResultsnullnull
public PutPermissionResult putPermission(PutPermissionRequest request) {request = beforeClientExecution(request);return executePutPermission(request);},public PutPermissionResult putPermissionPutPermissionRequest request request  beforeClientExecutionrequestreturn executePutPermissionrequest
public void serialize(LittleEndianOutput out) {out.writeInt(0);out.writeInt(getFirstRow());out.writeInt(getLastRowAdd1());out.writeInt(field_4_zero);for (int k = 0; k < getNumDbcells(); k++) {out.writeInt(getDbcellAt(k));}},public void serializeLittleEndianOutput out outwriteInt0outwriteIntgetFirstRowoutwriteIntgetLastRowAdd1outwriteIntfield4zerofor int k  0 k  getNumDbcells k outwriteIntgetDbcellAtk
"public HSSFFormulaEvaluator(HSSFWorkbook workbook) {this(workbook, null);}",public HSSFFormulaEvaluatorHSSFWorkbook workbook thisworkbook null
public int hash2(char carray[]) {int hash = 5381;for (int i = 0; i < carray.length; i++) {char d = carray[i];hash = ((hash << 5) + hash) + d & 0x00FF;hash = ((hash << 5) + hash) + d >> 8;}return hash;},public int hash2char carray int hash  5381for int i  0 i  carraylength i char d  carrayihash  hash  5  hash  d  0x00FFhash  hash  5  hash  d  8return hash
"public void fillRoundRect(int x, int y, int width, int height,int arcWidth, int arcHeight){if (logger.check( POILogger.WARN ))logger.log(POILogger.WARN,""fillRoundRect not supported"");}",public void fillRoundRectint x int y int width int heightint arcWidth int arcHeightif loggercheck POILoggerWARN loggerlogPOILoggerWARNfillRoundRect not supported
"public static SimpleFraction buildFractionExactDenominator(double val, int exactDenom){int num =  (int)Math.round(val*exactDenom);return new SimpleFraction(num,exactDenom);}",public static SimpleFraction buildFractionExactDenominatordouble val int exactDenomint num   intMathroundvalexactDenomreturn new SimpleFractionnumexactDenom
public DescribeInsightRulesResult describeInsightRules(DescribeInsightRulesRequest request) {request = beforeClientExecution(request);return executeDescribeInsightRules(request);},public DescribeInsightRulesResult describeInsightRulesDescribeInsightRulesRequest request request  beforeClientExecutionrequestreturn executeDescribeInsightRulesrequest
public ListMFADevicesRequest(String userName) {setUserName(userName);},public ListMFADevicesRequestString userName setUserNameuserName
"public void removeRow(RowRecord row) {int rowIndex = row.getRowNumber();_valuesAgg.removeAllCellsValuesForRow(rowIndex);Integer key = Integer.valueOf(rowIndex);RowRecord rr = _rowRecords.remove(key);if (rr == null) {throw new RuntimeException(""Invalid row index ("" + key.intValue() + "")"");}if (row != rr) {_rowRecords.put(key, rr);throw new RuntimeException(""Attempt to remove row that does not belong to this sheet"");}_rowRecordValues = null;}",public void removeRowRowRecord row int rowIndex  rowgetRowNumbervaluesAggremoveAllCellsValuesForRowrowIndexInteger key  IntegervalueOfrowIndexRowRecord rr  rowRecordsremovekeyif rr  null throw new RuntimeExceptionInvalid row index   keyintValue  if row  rr rowRecordsputkey rrthrow new RuntimeExceptionAttempt to remove row that does not belong to this sheetrowRecordValues  null
public DeleteRepositoryPolicyResult deleteRepositoryPolicy(DeleteRepositoryPolicyRequest request) {request = beforeClientExecution(request);return executeDeleteRepositoryPolicy(request);},public DeleteRepositoryPolicyResult deleteRepositoryPolicyDeleteRepositoryPolicyRequest request request  beforeClientExecutionrequestreturn executeDeleteRepositoryPolicyrequest
public BackupRecord(RecordInputStream in) {field_1_backup = in.readShort();},public BackupRecordRecordInputStream in field1backup  inreadShort
public DiffCommand setNewTree(AbstractTreeIterator newTree) {this.newTree = newTree;return this;},public DiffCommand setNewTreeAbstractTreeIterator newTree thisnewTree  newTreereturn this
"public void decode(long[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = blocks[blocksOffset++];for (int shift = 63; shift >= 0; shift -= 1) {values[valuesOffset++] = (block >>> shift) & 1;}}}",public void decodelong blocks int blocksOffset long values int valuesOffset int iterations for int i  0 i  iterations i final long block  blocksblocksOffsetfor int shift  63 shift  0 shift  1 valuesvaluesOffset  block  shift  1
public void execute(Lexer lexer) {action.execute(lexer);},public void executeLexer lexer actionexecutelexer
public DeleteModelPackageResult deleteModelPackage(DeleteModelPackageRequest request) {request = beforeClientExecution(request);return executeDeleteModelPackage(request);},public DeleteModelPackageResult deleteModelPackageDeleteModelPackageRequest request request  beforeClientExecutionrequestreturn executeDeleteModelPackagerequest
public Object getValue() {return value;},public Object getValue return value
"public void applyFont( short fontIndex ) {applyFont(0, _string.getCharCount(), fontIndex);}",public void applyFont short fontIndex  applyFont0 stringgetCharCount fontIndex
public SliceWriter(IntBlockPool pool) {this.pool = pool;},public SliceWriterIntBlockPool pool thispool  pool
public DisableVgwRoutePropagationResult disableVgwRoutePropagation(DisableVgwRoutePropagationRequest request) {request = beforeClientExecution(request);return executeDisableVgwRoutePropagation(request);},public DisableVgwRoutePropagationResult disableVgwRoutePropagationDisableVgwRoutePropagationRequest request request  beforeClientExecutionrequestreturn executeDisableVgwRoutePropagationrequest
"public String toString() {return getClass().getName() + "" ["" +_name.getNameText() +""]"";}",public String toString return getClassgetName    namegetNameText 
public AttachObjectResult attachObject(AttachObjectRequest request) {request = beforeClientExecution(request);return executeAttachObject(request);},public AttachObjectResult attachObjectAttachObjectRequest request request  beforeClientExecutionrequestreturn executeAttachObjectrequest
public DBClusterParameterGroup copyDBClusterParameterGroup(CopyDBClusterParameterGroupRequest request) {request = beforeClientExecution(request);return executeCopyDBClusterParameterGroup(request);},public DBClusterParameterGroup copyDBClusterParameterGroupCopyDBClusterParameterGroupRequest request request  beforeClientExecutionrequestreturn executeCopyDBClusterParameterGrouprequest
public GetRoutesResult getRoutes(GetRoutesRequest request) {request = beforeClientExecution(request);return executeGetRoutes(request);},public GetRoutesResult getRoutesGetRoutesRequest request request  beforeClientExecutionrequestreturn executeGetRoutesrequest
"public Entry<String, Ref> next() {if (hasNext()) {Entry<String, Ref> r = next;next = peek();return r;}throw new NoSuchElementException();}",public EntryString Ref next if hasNext EntryString Ref r  nextnext  peekreturn rthrow new NoSuchElementException
public boolean containsKey(Object key) {return ((key instanceof Long && dictionary.containsKey(key)) || dictionary.containsValue(key));},public boolean containsKeyObject key return key instanceof Long  dictionarycontainsKeykey  dictionarycontainsValuekey
"public UpdateNamespaceRequest() {super(""cr"", ""2016-06-07"", ""UpdateNamespace"", ""cr"");setUriPattern(""/namespace/[Namespace]"");setMethod(MethodType.POST);}",public UpdateNamespaceRequest supercr 20160607 UpdateNamespace crsetUriPatternnamespaceNamespacesetMethodMethodTypePOST
public ListNotebookInstancesResult listNotebookInstances(ListNotebookInstancesRequest request) {request = beforeClientExecution(request);return executeListNotebookInstances(request);},public ListNotebookInstancesResult listNotebookInstancesListNotebookInstancesRequest request request  beforeClientExecutionrequestreturn executeListNotebookInstancesrequest
"public RoaringDocIdSet build() {flush();return new RoaringDocIdSet(sets, cardinality);}",public RoaringDocIdSet build flushreturn new RoaringDocIdSetsets cardinality
public DescribeGroupsResult describeGroups(DescribeGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeGroups(request);},public DescribeGroupsResult describeGroupsDescribeGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeGroupsrequest
public GetShippingLabelResult getShippingLabel(GetShippingLabelRequest request) {request = beforeClientExecution(request);return executeGetShippingLabel(request);},public GetShippingLabelResult getShippingLabelGetShippingLabelRequest request request  beforeClientExecutionrequestreturn executeGetShippingLabelrequest
public MonitorInstancesRequest(java.util.List<String> instanceIds) {setInstanceIds(instanceIds);},public MonitorInstancesRequestjavautilListString instanceIds setInstanceIdsinstanceIds
"public AtomTransition(ATNState target, int label) {super(target);this.label = label;}",public AtomTransitionATNState target int label supertargetthislabel  label
public MulRKRecord(RecordInputStream in) {field_1_row = in.readUShort();field_2_first_col = in.readShort();field_3_rks = RkRec.parseRKs(in);field_4_last_col = in.readShort();},public MulRKRecordRecordInputStream in field1row  inreadUShortfield2firstcol  inreadShortfield3rks  RkRecparseRKsinfield4lastcol  inreadShort
public State complete() {if (this.stateRegistry == null) throw new IllegalStateException();if (root.hasChildren()) replaceOrRegister(root);stateRegistry = null;return root;},public State complete if thisstateRegistry  null throw new IllegalStateExceptionif roothasChildren replaceOrRegisterrootstateRegistry  nullreturn root
public DescribeWorkspaceDirectoriesResult describeWorkspaceDirectories(DescribeWorkspaceDirectoriesRequest request) {request = beforeClientExecution(request);return executeDescribeWorkspaceDirectories(request);},public DescribeWorkspaceDirectoriesResult describeWorkspaceDirectoriesDescribeWorkspaceDirectoriesRequest request request  beforeClientExecutionrequestreturn executeDescribeWorkspaceDirectoriesrequest
"@Override public E remove(int index) {synchronized (CopyOnWriteArrayList.this) {slice.checkElementIndex(index);slice.checkConcurrentModification(elements);E removed = CopyOnWriteArrayList.this.remove(slice.from + index);slice = new Slice(elements, slice.from, slice.to - 1);return removed;}}",Override public E removeint index synchronized CopyOnWriteArrayListthis slicecheckElementIndexindexslicecheckConcurrentModificationelementsE removed  CopyOnWriteArrayListthisremoveslicefrom  indexslice  new Sliceelements slicefrom sliceto  1return removed
public StreamTokenizer(InputStream is) {this();if (is == null) {throw new NullPointerException();}inStream = is;},public StreamTokenizerInputStream is thisif is  null throw new NullPointerExceptioninStream  is
public ModifyVpcPeeringConnectionOptionsResult modifyVpcPeeringConnectionOptions(ModifyVpcPeeringConnectionOptionsRequest request) {request = beforeClientExecution(request);return executeModifyVpcPeeringConnectionOptions(request);},public ModifyVpcPeeringConnectionOptionsResult modifyVpcPeeringConnectionOptionsModifyVpcPeeringConnectionOptionsRequest request request  beforeClientExecutionrequestreturn executeModifyVpcPeeringConnectionOptionsrequest
public GetAppResult getApp(GetAppRequest request) {request = beforeClientExecution(request);return executeGetApp(request);},public GetAppResult getAppGetAppRequest request request  beforeClientExecutionrequestreturn executeGetApprequest
public void start(int totalTasks) {if (!isMainThread())throw new IllegalStateException();pm.start(totalTasks);},public void startint totalTasks if isMainThreadthrow new IllegalStateExceptionpmstarttotalTasks
public ModifyFleetResult modifyFleet(ModifyFleetRequest request) {request = beforeClientExecution(request);return executeModifyFleet(request);},public ModifyFleetResult modifyFleetModifyFleetRequest request request  beforeClientExecutionrequestreturn executeModifyFleetrequest
public UpdateFolderResult updateFolder(UpdateFolderRequest request) {request = beforeClientExecution(request);return executeUpdateFolder(request);},public UpdateFolderResult updateFolderUpdateFolderRequest request request  beforeClientExecutionrequestreturn executeUpdateFolderrequest
public CreateAppResult createApp(CreateAppRequest request) {request = beforeClientExecution(request);return executeCreateApp(request);},public CreateAppResult createAppCreateAppRequest request request  beforeClientExecutionrequestreturn executeCreateApprequest
"public static DVConstraint createDateConstraint(int comparisonOperator, String expr1, String expr2, String dateFormat) {if (expr1 == null) {throw new IllegalArgumentException(""expr1 must be supplied"");}OperatorType.validateSecondArg(comparisonOperator, expr2);SimpleDateFormat df = null;if (dateFormat != null) {df = new SimpleDateFormat(dateFormat, LocaleUtil.getUserLocale());df.setTimeZone(LocaleUtil.getUserTimeZone());}String formula1 = getFormulaFromTextExpression(expr1);Double value1 = formula1 == null ? convertDate(expr1, df) : null;String formula2 = getFormulaFromTextExpression(expr2);Double value2 = formula2 == null ? convertDate(expr2, df) : null;return new DVConstraint(ValidationType.DATE, comparisonOperator, formula1, formula2, value1, value2, null);}",public static DVConstraint createDateConstraintint comparisonOperator String expr1 String expr2 String dateFormat if expr1  null throw new IllegalArgumentExceptionexpr1 must be suppliedOperatorTypevalidateSecondArgcomparisonOperator expr2SimpleDateFormat df  nullif dateFormat  null df  new SimpleDateFormatdateFormat LocaleUtilgetUserLocaledfsetTimeZoneLocaleUtilgetUserTimeZoneString formula1  getFormulaFromTextExpressionexpr1Double value1  formula1  null  convertDateexpr1 df  nullString formula2  getFormulaFromTextExpressionexpr2Double value2  formula2  null  convertDateexpr2 df  nullreturn new DVConstraintValidationTypeDATE comparisonOperator formula1 formula2 value1 value2 null
"public final String toString() {return getClass().getName() + "" ["" + lookupName(_functionIndex) + "" nArgs="" + _numberOfArgs + ""]"";}",public final String toString return getClassgetName     lookupNamefunctionIndex   nArgs  numberOfArgs  
public ModifyDefaultCreditSpecificationResult modifyDefaultCreditSpecification(ModifyDefaultCreditSpecificationRequest request) {request = beforeClientExecution(request);return executeModifyDefaultCreditSpecification(request);},public ModifyDefaultCreditSpecificationResult modifyDefaultCreditSpecificationModifyDefaultCreditSpecificationRequest request request  beforeClientExecutionrequestreturn executeModifyDefaultCreditSpecificationrequest
"public Iterator<Note> iterator() {try {return root.iterator(new MutableObjectId(), Reader);} catch (IOException e) {throw new RuntimeException(e);}}",public IteratorNote iterator try return rootiteratornew MutableObjectId Reader catch IOException e throw new RuntimeExceptione
public ObjectId idFor(TreeFormatter formatter) {return delegate().idFor(formatter);},public ObjectId idForTreeFormatter formatter return delegateidForformatter
public int getInputLength() {return this.inputLength;},public int getInputLength return thisinputLength
"public void onInvalidated() {Log.d(TAG, mSrc + "": invalidated"");}",public void onInvalidated LogdTAG mSrc   invalidated
public TerminalNode addChild(Token matchedToken) {TerminalNodeImpl t = new TerminalNodeImpl(matchedToken);addAnyChild(t);t.setParent(this);return t;},public TerminalNode addChildToken matchedToken TerminalNodeImpl t  new TerminalNodeImplmatchedTokenaddAnyChildttsetParentthisreturn t
public boolean isUnknown() {return type == Type.UNKNOWN;},public boolean isUnknown return type  TypeUNKNOWN
"public boolean promptPassword(String msg) {CredentialItem.Password p = new CredentialItem.Password(msg);if (provider.get(uri, p)) {password = new String(p.getValue());return true;}password = null;return false;}",public boolean promptPasswordString msg CredentialItemPassword p  new CredentialItemPasswordmsgif providergeturi p password  new StringpgetValuereturn truepassword  nullreturn false
public CreateTransitGatewayResult createTransitGateway(CreateTransitGatewayRequest request) {request = beforeClientExecution(request);return executeCreateTransitGateway(request);},public CreateTransitGatewayResult createTransitGatewayCreateTransitGatewayRequest request request  beforeClientExecutionrequestreturn executeCreateTransitGatewayrequest
public CreateCampaignResult createCampaign(CreateCampaignRequest request) {request = beforeClientExecution(request);return executeCreateCampaign(request);},public CreateCampaignResult createCampaignCreateCampaignRequest request request  beforeClientExecutionrequestreturn executeCreateCampaignrequest
"public ClientException(String errCode, String errMsg) {super(errCode + "" : "" + errMsg);this.errCode = errCode;this.errMsg = errMsg;this.setErrorType(ErrorType.Client);}",public ClientExceptionString errCode String errMsg supererrCode      errMsgthiserrCode  errCodethiserrMsg  errMsgthissetErrorTypeErrorTypeClient
public void removeConditionalFormatting(int index) {_conditionalFormattingTable.remove(index);},public void removeConditionalFormattingint index conditionalFormattingTableremoveindex
"public static void fill(float[] array, float value) {for (int i = 0; i < array.length; i++) {array[i] = value;}}",public static void fillfloat array float value for int i  0 i  arraylength i arrayi  value
"public TokenStream create(TokenStream input) {return dictionary == null ? input : new StemmerOverrideFilter(input, dictionary);}",public TokenStream createTokenStream input return dictionary  null  input  new StemmerOverrideFilterinput dictionary
public ListS3ResourcesResult listS3Resources(ListS3ResourcesRequest request) {request = beforeClientExecution(request);return executeListS3Resources(request);},public ListS3ResourcesResult listS3ResourcesListS3ResourcesRequest request request  beforeClientExecutionrequestreturn executeListS3Resourcesrequest
"public String toString() {return new StringBuilder(""'"").appendCodePoint(from).append(""'..'"").appendCodePoint(to).append(""'"").toString();}",public String toString return new StringBuilderappendCodePointfromappendappendCodePointtoappendtoString
"public DoubleBuffer compact() {System.arraycopy(backingArray, position + offset, backingArray, offset, remaining());position = limit - position;limit = capacity;mark = UNSET_MARK;return this;}",public DoubleBuffer compact SystemarraycopybackingArray position  offset backingArray offset remainingposition  limit  positionlimit  capacitymark  UNSETMARKreturn this
public CreatePresignedNotebookInstanceUrlResult createPresignedNotebookInstanceUrl(CreatePresignedNotebookInstanceUrlRequest request) {request = beforeClientExecution(request);return executeCreatePresignedNotebookInstanceUrl(request);},public CreatePresignedNotebookInstanceUrlResult createPresignedNotebookInstanceUrlCreatePresignedNotebookInstanceUrlRequest request request  beforeClientExecutionrequestreturn executeCreatePresignedNotebookInstanceUrlrequest
public IterationRecord(RecordInputStream in) {_flags = in.readShort();},public IterationRecordRecordInputStream in flags  inreadShort
"public CreateUserInfoRequest() {super(""cr"", ""2016-06-07"", ""CreateUserInfo"", ""cr"");setUriPattern(""/users"");setMethod(MethodType.PUT);}",public CreateUserInfoRequest supercr 20160607 CreateUserInfo crsetUriPatternuserssetMethodMethodTypePUT
"public void notifyUpdatedBlankCell(BookSheetKey bsk, int rowIndex, int columnIndex, IEvaluationListener evaluationListener) {if (_usedBlankCellGroup != null) {if (_usedBlankCellGroup.containsCell(bsk, rowIndex, columnIndex)) {clearFormulaEntry();recurseClearCachedFormulaResults(evaluationListener);}}}",public void notifyUpdatedBlankCellBookSheetKey bsk int rowIndex int columnIndex IEvaluationListener evaluationListener if usedBlankCellGroup  null if usedBlankCellGroupcontainsCellbsk rowIndex columnIndex clearFormulaEntryrecurseClearCachedFormulaResultsevaluationListener
"public IntervalSet addAll(IntSet set) {if ( set==null ) {return this;}if (set instanceof IntervalSet) {IntervalSet other = (IntervalSet)set;int n = other.intervals.size();for (int i = 0; i < n; i++) {Interval I = other.intervals.get(i);this.add(I.a,I.b);}}else {for (int value : set.toList()) {add(value);}}return this;}",public IntervalSet addAllIntSet set if  setnull  return thisif set instanceof IntervalSet IntervalSet other  IntervalSetsetint n  otherintervalssizefor int i  0 i  n i Interval I  otherintervalsgetithisaddIaIbelse for int value  settoList addvaluereturn this
"public OpenStringBuilder(char[] arr, int len) {set(arr, len);}",public OpenStringBuilderchar arr int len setarr len
public boolean isRefLogIncludingResult() {return refLogIncludeResult;},public boolean isRefLogIncludingResult return refLogIncludeResult
public HeaderFooterRecord(byte[] data) {_rawData = data;},public HeaderFooterRecordbyte data rawData  data
"public byte[] getPath(){return Arrays.copyOf(path, path.length);}",public byte getPathreturn ArrayscopyOfpath pathlength
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[REFMODE]\n"");buffer.append(""    .mode           = "").append(Integer.toHexString(getMode())).append(""\n"");buffer.append(""[/REFMODE]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendREFMODEnbufferappend    mode            appendIntegertoHexStringgetModeappendnbufferappendREFMODEnreturn buffertoString
public HSSFChildAnchor() {_escherChildAnchor = new EscherChildAnchorRecord();},public HSSFChildAnchor escherChildAnchor  new EscherChildAnchorRecord
"public final boolean isRegistered() {return !canonicalName.startsWith(""x-"") && !canonicalName.startsWith(""X-"");}",public final boolean isRegistered return canonicalNamestartsWithx  canonicalNamestartsWithX
@Override public boolean remove(Object o) {if (containsKey(o)) {unfiltered.remove(o);return true;}return false;},Override public boolean removeObject o if containsKeyo unfilteredremoveoreturn truereturn false
"public static Token newToken(int ofKind, String image){switch(ofKind){default : return new Token(ofKind, image);}}",public static Token newTokenint ofKind String imageswitchofKinddefault  return new TokenofKind image
public float overheadPerValue(int bitsPerValue) {assert isSupported(bitsPerValue);final int valuesPerBlock = 64 / bitsPerValue;final int overhead = 64 % bitsPerValue;return (float) overhead / valuesPerBlock;},public float overheadPerValueint bitsPerValue assert isSupportedbitsPerValuefinal int valuesPerBlock  64  bitsPerValuefinal int overhead  64  bitsPerValuereturn float overhead  valuesPerBlock
public void clear() {backingMap.clear();},public void clear backingMapclear
public CompoundException(Collection<Throwable> why) {super(format(why));causeList = Collections.unmodifiableList(new ArrayList<>(why));},public CompoundExceptionCollectionThrowable why superformatwhycauseList  CollectionsunmodifiableListnew ArrayListwhy
"public DeleteEnvironmentConfigurationRequest(String applicationName, String environmentName) {setApplicationName(applicationName);setEnvironmentName(environmentName);}",public DeleteEnvironmentConfigurationRequestString applicationName String environmentName setApplicationNameapplicationNamesetEnvironmentNameenvironmentName
"public ModifyImageAttributeRequest(String imageId, String attribute) {setImageId(imageId);setAttribute(attribute);}",public ModifyImageAttributeRequestString imageId String attribute setImageIdimageIdsetAttributeattribute
"public LastCellOfRowDummyRecord(int row, int lastColumnNumber) {this.row = row;this.lastColumnNumber = lastColumnNumber;}",public LastCellOfRowDummyRecordint row int lastColumnNumber thisrow  rowthislastColumnNumber  lastColumnNumber
public String toString() {return path.toString();},public String toString return pathtoString
public String toFormulaString(String[] operands) {StringBuilder buffer = new StringBuilder();buffer.append(ADD);buffer.append(operands[ 0]);return buffer.toString();},public String toFormulaStringString operands StringBuilder buffer  new StringBuilderbufferappendADDbufferappendoperands 0return buffertoString
public void abort() {try {reset();} finally {if (nextTermsHash != null) {nextTermsHash.abort();}}},public void abort try reset finally if nextTermsHash  null nextTermsHashabort
public CreateUsagePlanKeyResult createUsagePlanKey(CreateUsagePlanKeyRequest request) {request = beforeClientExecution(request);return executeCreateUsagePlanKey(request);},public CreateUsagePlanKeyResult createUsagePlanKeyCreateUsagePlanKeyRequest request request  beforeClientExecutionrequestreturn executeCreateUsagePlanKeyrequest
"public boolean isOutOfBounds(int lowValidIx, int highValidIx) {if(_offset < lowValidIx) {return true;}if(getLastIndex() > highValidIx) {return true;}return false;}",public boolean isOutOfBoundsint lowValidIx int highValidIx ifoffset  lowValidIx return trueifgetLastIndex  highValidIx return truereturn false
public CherryPickStatus getStatus() {return status;},public CherryPickStatus getStatus return status
"public static String getRomanization(String s) {StringBuilder out = new StringBuilder();try {getRomanization(out, s);} catch (IOException bogus) {throw new RuntimeException(bogus);}return out.toString();}",public static String getRomanizationString s StringBuilder out  new StringBuildertry getRomanizationout s catch IOException bogus throw new RuntimeExceptionbogusreturn outtoString
public GetDistributionRequest(String id) {setId(id);},public GetDistributionRequestString id setIdid
"public String signString(String stringToSign, String accessKeySecret) {return null;}",public String signStringString stringToSign String accessKeySecret return null
"public Repository open(C req, String name)throws RepositoryNotFoundException, ServiceNotEnabledException {if (isUnreasonableName(name))throw new RepositoryNotFoundException(name);Repository db = exports.get(nameWithDotGit(name));if (db != null) {db.incrementOpen();return db;}for (File base : exportBase) {File dir = FileKey.resolve(new File(base, name), FS.DETECTED);if (dir == null)continue;try {FileKey key = FileKey.exact(dir, FS.DETECTED);db = RepositoryCache.open(key, true);} catch (IOException e) {throw new RepositoryNotFoundException(name, e);}try {if (isExportOk(req, name, db)) {return db;}throw new ServiceNotEnabledException();} catch (RuntimeException | IOException e) {db.close();throw new RepositoryNotFoundException(name, e);} catch (ServiceNotEnabledException e) {db.close();throw e;}}if (exportBase.size() == 1) {File dir = new File(exportBase.iterator().next(), name);throw new RepositoryNotFoundException(name,new RepositoryNotFoundException(dir));}throw new RepositoryNotFoundException(name);}",public Repository openC req String namethrows RepositoryNotFoundException ServiceNotEnabledException if isUnreasonableNamenamethrow new RepositoryNotFoundExceptionnameRepository db  exportsgetnameWithDotGitnameif db  null dbincrementOpenreturn dbfor File base  exportBase File dir  FileKeyresolvenew Filebase name FSDETECTEDif dir  nullcontinuetry FileKey key  FileKeyexactdir FSDETECTEDdb  RepositoryCacheopenkey true catch IOException e throw new RepositoryNotFoundExceptionname etry if isExportOkreq name db return dbthrow new ServiceNotEnabledException catch RuntimeException  IOException e dbclosethrow new RepositoryNotFoundExceptionname e catch ServiceNotEnabledException e dbclosethrow eif exportBasesize  1 File dir  new FileexportBaseiteratornext namethrow new RepositoryNotFoundExceptionnamenew RepositoryNotFoundExceptiondirthrow new RepositoryNotFoundExceptionname
public synchronized boolean addIfAbsent(E object) {if (contains(object)) {return false;}add(object);return true;},public synchronized boolean addIfAbsentE object if containsobject return falseaddobjectreturn true
public EnableTransitGatewayRouteTablePropagationResult enableTransitGatewayRouteTablePropagation(EnableTransitGatewayRouteTablePropagationRequest request) {request = beforeClientExecution(request);return executeEnableTransitGatewayRouteTablePropagation(request);},public EnableTransitGatewayRouteTablePropagationResult enableTransitGatewayRouteTablePropagationEnableTransitGatewayRouteTablePropagationRequest request request  beforeClientExecutionrequestreturn executeEnableTransitGatewayRouteTablePropagationrequest
"public PatternKeywordMarkerFilter(TokenStream in, Pattern pattern) {super(in);this.matcher = pattern.matcher("""");}",public PatternKeywordMarkerFilterTokenStream in Pattern pattern superinthismatcher  patternmatcher
"public AddInstanceGroupsRequest(java.util.List<InstanceGroupConfig> instanceGroups, String jobFlowId) {setInstanceGroups(instanceGroups);setJobFlowId(jobFlowId);}",public AddInstanceGroupsRequestjavautilListInstanceGroupConfig instanceGroups String jobFlowId setInstanceGroupsinstanceGroupssetJobFlowIdjobFlowId
"public FSTTermsReader(SegmentReadState state, PostingsReaderBase postingsReader) throws IOException {final String termsFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, FSTTermsWriter.TERMS_EXTENSION);this.postingsReader = postingsReader;final IndexInput in = state.directory.openInput(termsFileName, state.context);boolean success = false;try {CodecUtil.checkIndexHeader(in, FSTTermsWriter.TERMS_CODEC_NAME,FSTTermsWriter.TERMS_VERSION_START,FSTTermsWriter.TERMS_VERSION_CURRENT,state.segmentInfo.getId(), state.segmentSuffix);CodecUtil.checksumEntireFile(in);this.postingsReader.init(in, state);seekDir(in);final FieldInfos fieldInfos = state.fieldInfos;final int numFields = in.readVInt();for (int i = 0; i < numFields; i++) {int fieldNumber = in.readVInt();FieldInfo fieldInfo = fieldInfos.fieldInfo(fieldNumber);long numTerms = in.readVLong();long sumTotalTermFreq = in.readVLong();long sumDocFreq = fieldInfo.getIndexOptions() == IndexOptions.DOCS ? sumTotalTermFreq : in.readVLong();int docCount = in.readVInt();TermsReader current = new TermsReader(fieldInfo, in, numTerms, sumTotalTermFreq, sumDocFreq, docCount);TermsReader previous = fields.put(fieldInfo.name, current);checkFieldSummary(state.segmentInfo, in, current, previous);}success = true;} finally {if (success) {IOUtils.close(in);} else {IOUtils.closeWhileHandlingException(in);}}}",public FSTTermsReaderSegmentReadState state PostingsReaderBase postingsReader throws IOException final String termsFileName  IndexFileNamessegmentFileNamestatesegmentInfoname statesegmentSuffix FSTTermsWriterTERMSEXTENSIONthispostingsReader  postingsReaderfinal IndexInput in  statedirectoryopenInputtermsFileName statecontextboolean success  falsetry CodecUtilcheckIndexHeaderin FSTTermsWriterTERMSCODECNAMEFSTTermsWriterTERMSVERSIONSTARTFSTTermsWriterTERMSVERSIONCURRENTstatesegmentInfogetId statesegmentSuffixCodecUtilchecksumEntireFileinthispostingsReaderinitin stateseekDirinfinal FieldInfos fieldInfos  statefieldInfosfinal int numFields  inreadVIntfor int i  0 i  numFields i int fieldNumber  inreadVIntFieldInfo fieldInfo  fieldInfosfieldInfofieldNumberlong numTerms  inreadVLonglong sumTotalTermFreq  inreadVLonglong sumDocFreq  fieldInfogetIndexOptions  IndexOptionsDOCS  sumTotalTermFreq  inreadVLongint docCount  inreadVIntTermsReader current  new TermsReaderfieldInfo in numTerms sumTotalTermFreq sumDocFreq docCountTermsReader previous  fieldsputfieldInfoname currentcheckFieldSummarystatesegmentInfo in current previoussuccess  true finally if success IOUtilsclosein else IOUtilscloseWhileHandlingExceptionin
public DescribeVpcEndpointsResult describeVpcEndpoints(DescribeVpcEndpointsRequest request) {request = beforeClientExecution(request);return executeDescribeVpcEndpoints(request);},public DescribeVpcEndpointsResult describeVpcEndpointsDescribeVpcEndpointsRequest request request  beforeClientExecutionrequestreturn executeDescribeVpcEndpointsrequest
public void setNewPrefix(String prefix) {newPrefix = prefix;},public void setNewPrefixString prefix newPrefix  prefix
public GetHostedZoneRequest(String id) {setId(id);},public GetHostedZoneRequestString id setIdid
public List<File> getUpdatedFiles() {return updatedFiles;},public ListFile getUpdatedFiles return updatedFiles
public DeleteDhcpOptionsRequest(String dhcpOptionsId) {setDhcpOptionsId(dhcpOptionsId);},public DeleteDhcpOptionsRequestString dhcpOptionsId setDhcpOptionsIddhcpOptionsId
public QueryPhraseMap getTermMap( String term ){return subMap.get( term );},public QueryPhraseMap getTermMap String term return subMapget term 
public PutConfigurationSetDeliveryOptionsResult putConfigurationSetDeliveryOptions(PutConfigurationSetDeliveryOptionsRequest request) {request = beforeClientExecution(request);return executePutConfigurationSetDeliveryOptions(request);},public PutConfigurationSetDeliveryOptionsResult putConfigurationSetDeliveryOptionsPutConfigurationSetDeliveryOptionsRequest request request  beforeClientExecutionrequestreturn executePutConfigurationSetDeliveryOptionsrequest
public ChartRecord(RecordInputStream in) {field_1_x = in.readInt();field_2_y = in.readInt();field_3_width = in.readInt();field_4_height = in.readInt();},public ChartRecordRecordInputStream in field1x  inreadIntfield2y  inreadIntfield3width  inreadIntfield4height  inreadInt
public ListTaskDefinitionsResult listTaskDefinitions(ListTaskDefinitionsRequest request) {request = beforeClientExecution(request);return executeListTaskDefinitions(request);},public ListTaskDefinitionsResult listTaskDefinitionsListTaskDefinitionsRequest request request  beforeClientExecutionrequestreturn executeListTaskDefinitionsrequest
public String getRawPath() {return rawPath;},public String getRawPath return rawPath
"public IndexRecord(RecordInputStream in) {int field_1_zero          = in.readInt();if (field_1_zero != 0) {throw new RecordFormatException(""Expected zero for field 1 but got "" + field_1_zero);}field_2_first_row     = in.readInt();field_3_last_row_add1 = in.readInt();field_4_zero      = in.readInt();int nCells = in.remaining() / 4;field_5_dbcells = new IntList(nCells);for(int i=0; i<nCells; i++) {field_5_dbcells.add(in.readInt());}}",public IndexRecordRecordInputStream in int field1zero           inreadIntif field1zero  0 throw new RecordFormatExceptionExpected zero for field 1 but got   field1zerofield2firstrow      inreadIntfield3lastrowadd1  inreadIntfield4zero       inreadIntint nCells  inremaining  4field5dbcells  new IntListnCellsforint i0 inCells i field5dbcellsaddinreadInt
public Class<? extends Enum> enumType() {return enumType;},public Class extends Enum enumType return enumType
public boolean isSupportedType(final int variantType) {for (int st : SUPPORTED_TYPES) {if (variantType == st) {return true;}}return false;},public boolean isSupportedTypefinal int variantType for int st  SUPPORTEDTYPES if variantType  st return truereturn false
public PersonIdent getSourceCommitter(int idx) {return sourceCommitters[idx];},public PersonIdent getSourceCommitterint idx return sourceCommittersidx
"public RemoveTagsRequest(String resourceId, java.util.List<String> tagKeys) {setResourceId(resourceId);setTagKeys(tagKeys);}",public RemoveTagsRequestString resourceId javautilListString tagKeys setResourceIdresourceIdsetTagKeystagKeys
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[ENDBLOCK]\n"");buffer.append(""    .rt         ="").append(HexDump.shortToHex(rt)).append('\n');buffer.append(""    .grbitFrt   ="").append(HexDump.shortToHex(grbitFrt)).append('\n');buffer.append(""    .iObjectKind="").append(HexDump.shortToHex(iObjectKind)).append('\n');buffer.append(""    .unused     ="").append(HexDump.toHex(unused)).append('\n');buffer.append(""[/ENDBLOCK]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendENDBLOCKnbufferappend    rt         appendHexDumpshortToHexrtappendnbufferappend    grbitFrt   appendHexDumpshortToHexgrbitFrtappendnbufferappend    iObjectKindappendHexDumpshortToHexiObjectKindappendnbufferappend    unused     appendHexDumptoHexunusedappendnbufferappendENDBLOCKnreturn buffertoString
"public int stem(char text[], int length, boolean stemDerivational) {flags = 0;numSyllables = 0;for (int i = 0; i < length; i++)if (isVowel(text[i]))numSyllables++;if (numSyllables > 2) length = removeParticle(text, length);if (numSyllables > 2) length = removePossessivePronoun(text, length);if (stemDerivational)length = stemDerivational(text, length);return length;}",public int stemchar text int length boolean stemDerivational flags  0numSyllables  0for int i  0 i  length iif isVoweltextinumSyllablesif numSyllables  2 length  removeParticletext lengthif numSyllables  2 length  removePossessivePronountext lengthif stemDerivationallength  stemDerivationaltext lengthreturn length
public final long computeNorm(FieldInvertState state) {final int numTerms;if (state.getIndexOptions() == IndexOptions.DOCS && state.getIndexCreatedVersionMajor() >= 8) {numTerms = state.getUniqueTermCount();} else if (discountOverlaps) {numTerms = state.getLength() - state.getNumOverlap();} else {numTerms = state.getLength();}return SmallFloat.intToByte4(numTerms);},public final long computeNormFieldInvertState state final int numTermsif stategetIndexOptions  IndexOptionsDOCS  stategetIndexCreatedVersionMajor  8 numTerms  stategetUniqueTermCount else if discountOverlaps numTerms  stategetLength  stategetNumOverlap else numTerms  stategetLengthreturn SmallFloatintToByte4numTerms
"public OpenNLPChunkerFilter create(TokenStream in) {try {NLPChunkerOp chunkerOp = null;if (chunkerModelFile != null) {chunkerOp = OpenNLPOpsFactory.getChunker(chunkerModelFile);}return new OpenNLPChunkerFilter(in, chunkerOp);} catch (IOException e) {throw new IllegalArgumentException(e);}}",public OpenNLPChunkerFilter createTokenStream in try NLPChunkerOp chunkerOp  nullif chunkerModelFile  null chunkerOp  OpenNLPOpsFactorygetChunkerchunkerModelFilereturn new OpenNLPChunkerFilterin chunkerOp catch IOException e throw new IllegalArgumentExceptione
"public List<PackedObjectInfo> getSortedObjectList(Comparator<PackedObjectInfo> cmp) {Arrays.sort(entries, 0, entryCount, cmp);List<PackedObjectInfo> list = Arrays.asList(entries);if (entryCount < entries.length)list = list.subList(0, entryCount);return list;}",public ListPackedObjectInfo getSortedObjectListComparatorPackedObjectInfo cmp Arrayssortentries 0 entryCount cmpListPackedObjectInfo list  ArraysasListentriesif entryCount  entrieslengthlist  listsubList0 entryCountreturn list
public String getSecurityToken() {AlibabaCloudCredentials credentials = getCredentials();if (credentials instanceof BasicSessionCredentials) {return ((BasicSessionCredentials) credentials).getSessionToken();} else {return null;}},public String getSecurityToken AlibabaCloudCredentials credentials  getCredentialsif credentials instanceof BasicSessionCredentials return BasicSessionCredentials credentialsgetSessionToken else return null
public StopAutoMLJobResult stopAutoMLJob(StopAutoMLJobRequest request) {request = beforeClientExecution(request);return executeStopAutoMLJob(request);},public StopAutoMLJobResult stopAutoMLJobStopAutoMLJobRequest request request  beforeClientExecutionrequestreturn executeStopAutoMLJobrequest
"public int findStartOffset(StringBuilder buffer, int start) {if( start > buffer.length() || start < 1 ) return start;bi.setText(buffer.substring(0, start));bi.last();return bi.previous();}",public int findStartOffsetStringBuilder buffer int start if start  bufferlength  start  1  return startbisetTextbuffersubstring0 startbilastreturn biprevious
public StartImageBuilderResult startImageBuilder(StartImageBuilderRequest request) {request = beforeClientExecution(request);return executeStartImageBuilder(request);},public StartImageBuilderResult startImageBuilderStartImageBuilderRequest request request  beforeClientExecutionrequestreturn executeStartImageBuilderrequest
"public double readDouble() {long valueLongBits = readLong();double result = Double.longBitsToDouble(valueLongBits);if (Double.isNaN(result)) {throw new RuntimeException(""Did not expect to read NaN"");}return result;}",public double readDouble long valueLongBits  readLongdouble result  DoublelongBitsToDoublevalueLongBitsif DoubleisNaNresult throw new RuntimeExceptionDid not expect to read NaNreturn result
public double readDouble(){return _in.readDouble();},public double readDoublereturn inreadDouble
"public int compareTo(Cell other) {return Double.compare(distanceSquared, other.distanceSquared);}",public int compareToCell other return DoublecomparedistanceSquared otherdistanceSquared
public GetCampaignDateRangeKpiResult getCampaignDateRangeKpi(GetCampaignDateRangeKpiRequest request) {request = beforeClientExecution(request);return executeGetCampaignDateRangeKpi(request);},public GetCampaignDateRangeKpiResult getCampaignDateRangeKpiGetCampaignDateRangeKpiRequest request request  beforeClientExecutionrequestreturn executeGetCampaignDateRangeKpirequest
"public String toString() {StringBuilder sb = new StringBuilder();sb.append(getClass().getName()).append("" [CRN"");sb.append("" rowIx="").append(field_3_row_index);sb.append("" firstColIx="").append(field_2_first_column_index);sb.append("" lastColIx="").append(field_1_last_column_index);sb.append(""]"");return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappendgetClassgetNameappend CRNsbappend rowIxappendfield3rowindexsbappend firstColIxappendfield2firstcolumnindexsbappend lastColIxappendfield1lastcolumnindexsbappendreturn sbtoString
public void add(double value) {ensureCapacity(_count + 1);_array[_count] = value;_count++;},public void adddouble value ensureCapacitycount  1arraycount  valuecount
public String getSheetName(int sheetIndex) {return getSheetEvaluator(sheetIndex).getSheetName();},public String getSheetNameint sheetIndex return getSheetEvaluatorsheetIndexgetSheetName
public TransferDomainToAnotherAwsAccountResult transferDomainToAnotherAwsAccount(TransferDomainToAnotherAwsAccountRequest request) {request = beforeClientExecution(request);return executeTransferDomainToAnotherAwsAccount(request);},public TransferDomainToAnotherAwsAccountResult transferDomainToAnotherAwsAccountTransferDomainToAnotherAwsAccountRequest request request  beforeClientExecutionrequestreturn executeTransferDomainToAnotherAwsAccountrequest
"public final boolean weakCompareAndSet(V expect, V update) {return unsafe.compareAndSwapObject(this, valueOffset, expect, update);}",public final boolean weakCompareAndSetV expect V update return unsafecompareAndSwapObjectthis valueOffset expect update
"public void setResult(ReceiveCommand.Result status, String msg) {result = decode(status);super.setResult(status, msg);}",public void setResultReceiveCommandResult status String msg result  decodestatussupersetResultstatus msg
"public String toString() {return ""skip"";}",public String toString return skip
public List<String> getModifiedFiles() {return modifiedFiles;},public ListString getModifiedFiles return modifiedFiles
public final void serialize(LittleEndianOutput out) {out.writeShort(getRow());out.writeShort(getColumn());out.writeShort(getXFIndex());serializeValue(out);},public final void serializeLittleEndianOutput out outwriteShortgetRowoutwriteShortgetColumnoutwriteShortgetXFIndexserializeValueout
"public String toString() {return ""NotIgnored("" + index + "")"";}",public String toString return NotIgnored  index  
public DescribeDBClusterParametersResult describeDBClusterParameters(DescribeDBClusterParametersRequest request) {request = beforeClientExecution(request);return executeDescribeDBClusterParameters(request);},public DescribeDBClusterParametersResult describeDBClusterParametersDescribeDBClusterParametersRequest request request  beforeClientExecutionrequestreturn executeDescribeDBClusterParametersrequest
"public CellRangeAddress copy() {return new CellRangeAddress(getFirstRow(), getLastRow(), getFirstColumn(), getLastColumn());}",public CellRangeAddress copy return new CellRangeAddressgetFirstRow getLastRow getFirstColumn getLastColumn
public final boolean hasAny(RevFlagSet set) {return (flags & set.mask) != 0;},public final boolean hasAnyRevFlagSet set return flags  setmask  0
public GetPolicyResult getPolicy(GetPolicyRequest request) {request = beforeClientExecution(request);return executeGetPolicy(request);},public GetPolicyResult getPolicyGetPolicyRequest request request  beforeClientExecutionrequestreturn executeGetPolicyrequest
"public BookSheetKey(int bookIndex, int sheetIndex) {_bookIndex = bookIndex;_sheetIndex = sheetIndex;}",public BookSheetKeyint bookIndex int sheetIndex bookIndex  bookIndexsheetIndex  sheetIndex
"public void setRate(int rate, boolean perMin) {this.rate = rate;this.perMin = perMin;setSequenceName();}",public void setRateint rate boolean perMin thisrate  ratethisperMin  perMinsetSequenceName
public DescribeVpcEndpointConnectionsResult describeVpcEndpointConnections(DescribeVpcEndpointConnectionsRequest request) {request = beforeClientExecution(request);return executeDescribeVpcEndpointConnections(request);},public DescribeVpcEndpointConnectionsResult describeVpcEndpointConnectionsDescribeVpcEndpointConnectionsRequest request request  beforeClientExecutionrequestreturn executeDescribeVpcEndpointConnectionsrequest
public GetHostedZoneResult getHostedZone(GetHostedZoneRequest request) {request = beforeClientExecution(request);return executeGetHostedZone(request);},public GetHostedZoneResult getHostedZoneGetHostedZoneRequest request request  beforeClientExecutionrequestreturn executeGetHostedZonerequest
public ChangeBatch(java.util.List<Change> changes) {setChanges(changes);},public ChangeBatchjavautilListChange changes setChangeschanges
"public String[] getExternalBookAndSheetName(int extRefIndex) {int ebIx = _externSheetRecord.getExtbookIndexFromRefIndex(extRefIndex);SupBookRecord ebr = _externalBookBlocks[ebIx].getExternalBookRecord();if (!ebr.isExternalReferences()) {return null;}int shIx1 = _externSheetRecord.getFirstSheetIndexFromRefIndex(extRefIndex);int shIx2 = _externSheetRecord.getLastSheetIndexFromRefIndex(extRefIndex);String firstSheetName = null;String lastSheetName = null;if (shIx1 >= 0) {firstSheetName = ebr.getSheetNames()[shIx1];}if (shIx2 >= 0) {lastSheetName = ebr.getSheetNames()[shIx2];}if (shIx1 == shIx2) {return new String[]{ebr.getURL(),firstSheetName};} else {return new String[]{ebr.getURL(),firstSheetName,lastSheetName};}}",public String getExternalBookAndSheetNameint extRefIndex int ebIx  externSheetRecordgetExtbookIndexFromRefIndexextRefIndexSupBookRecord ebr  externalBookBlocksebIxgetExternalBookRecordif ebrisExternalReferences return nullint shIx1  externSheetRecordgetFirstSheetIndexFromRefIndexextRefIndexint shIx2  externSheetRecordgetLastSheetIndexFromRefIndexextRefIndexString firstSheetName  nullString lastSheetName  nullif shIx1  0 firstSheetName  ebrgetSheetNamesshIx1if shIx2  0 lastSheetName  ebrgetSheetNamesshIx2if shIx1  shIx2 return new StringebrgetURLfirstSheetName else return new StringebrgetURLfirstSheetNamelastSheetName
public ChartEndBlockRecord(RecordInputStream in) {rt = in.readShort();grbitFrt = in.readShort();iObjectKind = in.readShort();if(in.available() == 0) {unused = new byte[0];} else {unused = new byte[6];in.readFully(unused);}},public ChartEndBlockRecordRecordInputStream in rt  inreadShortgrbitFrt  inreadShortiObjectKind  inreadShortifinavailable  0 unused  new byte0 else unused  new byte6inreadFullyunused
public CreateQueueResult createQueue(CreateQueueRequest request) {request = beforeClientExecution(request);return executeCreateQueue(request);},public CreateQueueResult createQueueCreateQueueRequest request request  beforeClientExecutionrequestreturn executeCreateQueuerequest
public void setMaxDocCharsToAnalyze(int maxDocCharsToAnalyze) {this.maxCharsToAnalyze = maxDocCharsToAnalyze;},public void setMaxDocCharsToAnalyzeint maxDocCharsToAnalyze thismaxCharsToAnalyze  maxDocCharsToAnalyze
public CreateCodeRepositoryResult createCodeRepository(CreateCodeRepositoryRequest request) {request = beforeClientExecution(request);return executeCreateCodeRepository(request);},public CreateCodeRepositoryResult createCodeRepositoryCreateCodeRepositoryRequest request request  beforeClientExecutionrequestreturn executeCreateCodeRepositoryrequest
"public static String getLastCommitSegmentsFileName(String[] files) {return IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,"""",getLastCommitGeneration(files));}",public static String getLastCommitSegmentsFileNameString files return IndexFileNamesfileNameFromGenerationIndexFileNamesSEGMENTSgetLastCommitGenerationfiles
"public final CharBuffer put(char[] src) {return put(src, 0, src.length);}",public final CharBuffer putchar src return putsrc 0 srclength
public Certificate modifyCertificates(ModifyCertificatesRequest request) {request = beforeClientExecution(request);return executeModifyCertificates(request);},public Certificate modifyCertificatesModifyCertificatesRequest request request  beforeClientExecutionrequestreturn executeModifyCertificatesrequest
"public void updateCell(String sheetName, int rowIndex, int columnIndex, ValueEval value) {ForkedEvaluationCell cell = _sewb.getOrCreateUpdatableCell(sheetName, rowIndex, columnIndex);cell.setValue(value);_evaluator.notifyUpdateCell(cell);}",public void updateCellString sheetName int rowIndex int columnIndex ValueEval value ForkedEvaluationCell cell  sewbgetOrCreateUpdatableCellsheetName rowIndex columnIndexcellsetValuevalueevaluatornotifyUpdateCellcell
public DisassociateMemberAccountResult disassociateMemberAccount(DisassociateMemberAccountRequest request) {request = beforeClientExecution(request);return executeDisassociateMemberAccount(request);},public DisassociateMemberAccountResult disassociateMemberAccountDisassociateMemberAccountRequest request request  beforeClientExecutionrequestreturn executeDisassociateMemberAccountrequest
"public boolean Run(byte[] s, int offset, int length) {int p = 0;int l = offset + length;for (int i = offset; i < l; i++) {p = step(p, s[i] & 0xFF);if (p == -1) return false;}return accept.get(p);}",public boolean Runbyte s int offset int length int p  0int l  offset  lengthfor int i  offset i  l i p  stepp si  0xFFif p  1 return falsereturn acceptgetp
public DeleteTrafficPolicyResult deleteTrafficPolicy(DeleteTrafficPolicyRequest request) {request = beforeClientExecution(request);return executeDeleteTrafficPolicy(request);},public DeleteTrafficPolicyResult deleteTrafficPolicyDeleteTrafficPolicyRequest request request  beforeClientExecutionrequestreturn executeDeleteTrafficPolicyrequest
"public static PackIndex read(InputStream fd) throws IOException,CorruptObjectException {final byte[] hdr = new byte[8];IO.readFully(fd, hdr, 0, hdr.length);if (isTOC(hdr)) {final int v = NB.decodeInt32(hdr, 4);switch (v) {case 2:return new PackIndexV2(fd);default:throw new UnsupportedPackIndexVersionException(v);}}return new PackIndexV1(fd, hdr);}",public static PackIndex readInputStream fd throws IOExceptionCorruptObjectException final byte hdr  new byte8IOreadFullyfd hdr 0 hdrlengthif isTOChdr final int v  NBdecodeInt32hdr 4switch v case 2return new PackIndexV2fddefaultthrow new UnsupportedPackIndexVersionExceptionvreturn new PackIndexV1fd hdr
"public double[] toArray() {if (_count < 1) {return EMPTY_DOUBLE_ARRAY;}double[] result = new double[_count];System.arraycopy(_array, 0, result, 0, _count);return result;}",public double toArray if count  1 return EMPTYDOUBLEARRAYdouble result  new doublecountSystemarraycopyarray 0 result 0 countreturn result
public GetHostReservationPurchasePreviewResult getHostReservationPurchasePreview(GetHostReservationPurchasePreviewRequest request) {request = beforeClientExecution(request);return executeGetHostReservationPurchasePreview(request);},public GetHostReservationPurchasePreviewResult getHostReservationPurchasePreviewGetHostReservationPurchasePreviewRequest request request  beforeClientExecutionrequestreturn executeGetHostReservationPurchasePreviewrequest
public CustomAvailabilityZone createCustomAvailabilityZone(CreateCustomAvailabilityZoneRequest request) {request = beforeClientExecution(request);return executeCreateCustomAvailabilityZone(request);},public CustomAvailabilityZone createCustomAvailabilityZoneCreateCustomAvailabilityZoneRequest request request  beforeClientExecutionrequestreturn executeCreateCustomAvailabilityZonerequest
public EvaluationTracker(EvaluationCache cache) {_cache = cache;_evaluationFrames = new ArrayList<>();_currentlyEvaluatingCells = new HashSet<>();},public EvaluationTrackerEvaluationCache cache cache  cacheevaluationFrames  new ArrayListcurrentlyEvaluatingCells  new HashSet
"public String toString() {return format(false, false);}",public String toString return formatfalse false
public AcceptQualificationRequestResult acceptQualificationRequest(AcceptQualificationRequestRequest request) {request = beforeClientExecution(request);return executeAcceptQualificationRequest(request);},public AcceptQualificationRequestResult acceptQualificationRequestAcceptQualificationRequestRequest request request  beforeClientExecutionrequestreturn executeAcceptQualificationRequestrequest
public boolean markSupported() {return false;},public boolean markSupported return false
"public StringBuffer appendTail(StringBuffer buffer) {if (appendPos < regionEnd) {buffer.append(input.substring(appendPos, regionEnd));}return buffer;}",public StringBuffer appendTailStringBuffer buffer if appendPos  regionEnd bufferappendinputsubstringappendPos regionEndreturn buffer
public String getSignificantDecimalDigits() {return Long.toString(_wholePart);},public String getSignificantDecimalDigits return LongtoStringwholePart
"public void setVerticalBorder(boolean value){field_1_options = verticalBorder.setShortBoolean(field_1_options, value);}",public void setVerticalBorderboolean valuefield1options  verticalBordersetShortBooleanfield1options value
"public CRNRecord(RecordInputStream in) {field_1_last_column_index = in.readUByte();field_2_first_column_index = in.readUByte();field_3_row_index = in.readShort();int nValues = field_1_last_column_index - field_2_first_column_index + 1;field_4_constant_values = ConstantValueParser.parse(in, nValues);}",public CRNRecordRecordInputStream in field1lastcolumnindex  inreadUBytefield2firstcolumnindex  inreadUBytefield3rowindex  inreadShortint nValues  field1lastcolumnindex  field2firstcolumnindex  1field4constantvalues  ConstantValueParserparsein nValues
public DBSecurityGroup revokeDBSecurityGroupIngress(RevokeDBSecurityGroupIngressRequest request) {request = beforeClientExecution(request);return executeRevokeDBSecurityGroupIngress(request);},public DBSecurityGroup revokeDBSecurityGroupIngressRevokeDBSecurityGroupIngressRequest request request  beforeClientExecutionrequestreturn executeRevokeDBSecurityGroupIngressrequest
"public CharBlockArray append(char[] chars, int start, int length) {int offset = start;int remain = length;while (remain > 0) {if (this.current.length == this.blockSize) {addBlock();}int toCopy = remain;int remainingInBlock = this.blockSize - this.current.length;if (remainingInBlock < toCopy) {toCopy = remainingInBlock;}System.arraycopy(chars, offset, this.current.chars, this.current.length, toCopy);offset += toCopy;remain -= toCopy;this.current.length += toCopy;}this.length += length;return this;}",public CharBlockArray appendchar chars int start int length int offset  startint remain  lengthwhile remain  0 if thiscurrentlength  thisblockSize addBlockint toCopy  remainint remainingInBlock  thisblockSize  thiscurrentlengthif remainingInBlock  toCopy toCopy  remainingInBlockSystemarraycopychars offset thiscurrentchars thiscurrentlength toCopyoffset  toCopyremain  toCopythiscurrentlength  toCopythislength  lengthreturn this
"public String toString() {return toString(null, true);}",public String toString return toStringnull true
"public int doLogic() throws Exception {try {Locale locale = getRunData().getLocale();if (locale == null) throw new RuntimeException(""Locale must be set with the NewLocale task!"");Analyzer analyzer = createAnalyzer(locale, impl);getRunData().setAnalyzer(analyzer);System.out.println(""Changed Analyzer to: ""+ analyzer.getClass().getName() + ""("" + locale + "")"");} catch (Exception e) {throw new RuntimeException(""Error creating Analyzer: impl="" + impl, e);}return 1;}",public int doLogic throws Exception try Locale locale  getRunDatagetLocaleif locale  null throw new RuntimeExceptionLocale must be set with the NewLocale taskAnalyzer analyzer  createAnalyzerlocale implgetRunDatasetAnalyzeranalyzerSystemoutprintlnChanged Analyzer to  analyzergetClassgetName    locale   catch Exception e throw new RuntimeExceptionError creating Analyzer impl  impl ereturn 1
public final short get() {if (position == limit) {throw new BufferUnderflowException();}return backingArray[offset + position++];},public final short get if position  limit throw new BufferUnderflowExceptionreturn backingArrayoffset  position
"public static String toHex(final short[] value){StringBuilder retVal = new StringBuilder();retVal.append('[');for(int x = 0; x < value.length; x++){if (x>0) {retVal.append("", "");}retVal.append(toHex(value[x]));}retVal.append(']');return retVal.toString();}",public static String toHexfinal short valueStringBuilder retVal  new StringBuilderretValappendforint x  0 x  valuelength xif x0 retValappend retValappendtoHexvaluexretValappendreturn retValtoString
public ListIPSetsResult listIPSets(ListIPSetsRequest request) {request = beforeClientExecution(request);return executeListIPSets(request);},public ListIPSetsResult listIPSetsListIPSetsRequest request request  beforeClientExecutionrequestreturn executeListIPSetsrequest
"public int getLevelForDistance(double dist) {if (dist == 0){return maxLevels;}int level =  S2Projections.MAX_WIDTH.getMinLevel(dist * DistanceUtils.DEGREES_TO_RADIANS);int roundLevel = level % arity != 0 ? 1 : 0;level = level/arity + roundLevel;return Math.min(maxLevels, level + 1);}",public int getLevelForDistancedouble dist if dist  0return maxLevelsint level   S2ProjectionsMAXWIDTHgetMinLeveldist  DistanceUtilsDEGREESTORADIANSint roundLevel  level  arity  0  1  0level  levelarity  roundLevelreturn MathminmaxLevels level  1
public IndexableField[] getFields(String name) {List<IndexableField> result = new ArrayList<>();for (IndexableField field : fields) {if (field.name().equals(name)) {result.add(field);}}return result.toArray(new IndexableField[result.size()]);},public IndexableField getFieldsString name ListIndexableField result  new ArrayListfor IndexableField field  fields if fieldnameequalsname resultaddfieldreturn resulttoArraynew IndexableFieldresultsize
public GetTrafficPolicyResult getTrafficPolicy(GetTrafficPolicyRequest request) {request = beforeClientExecution(request);return executeGetTrafficPolicy(request);},public GetTrafficPolicyResult getTrafficPolicyGetTrafficPolicyRequest request request  beforeClientExecutionrequestreturn executeGetTrafficPolicyrequest
public String name() {ensureId();return idBuffer.name();},public String name ensureIdreturn idBuffername
public DeleteExperimentResult deleteExperiment(DeleteExperimentRequest request) {request = beforeClientExecution(request);return executeDeleteExperiment(request);},public DeleteExperimentResult deleteExperimentDeleteExperimentRequest request request  beforeClientExecutionrequestreturn executeDeleteExperimentrequest
"public static byte[] grow(byte[] array) {return grow(array, 1 + array.length);}",public static byte growbyte array return growarray 1  arraylength
"public void serialize(LittleEndianOutput out) {out.writeShort(getReadOnly());out.writeShort(getPassword());out.writeShort(field_3_username_value.length());if(field_3_username_value.length() > 0) {out.writeByte(field_3_username_unicode_options);StringUtil.putCompressedUnicode(getUsername(), out);}}",public void serializeLittleEndianOutput out outwriteShortgetReadOnlyoutwriteShortgetPasswordoutwriteShortfield3usernamevaluelengthiffield3usernamevaluelength  0 outwriteBytefield3usernameunicodeoptionsStringUtilputCompressedUnicodegetUsername out
"public BulgarianStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public BulgarianStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public GetMirrorListRequest() {super(""cr"", ""2016-06-07"", ""GetMirrorList"", ""cr"");setUriPattern(""/mirrors"");setMethod(MethodType.GET);}",public GetMirrorListRequest supercr 20160607 GetMirrorList crsetUriPatternmirrorssetMethodMethodTypeGET
public DescribeDomainEndpointOptionsResult describeDomainEndpointOptions(DescribeDomainEndpointOptionsRequest request) {request = beforeClientExecution(request);return executeDescribeDomainEndpointOptions(request);},public DescribeDomainEndpointOptionsResult describeDomainEndpointOptionsDescribeDomainEndpointOptionsRequest request request  beforeClientExecutionrequestreturn executeDescribeDomainEndpointOptionsrequest
"public CommonToken(Pair<TokenSource, CharStream> source, int type, int channel, int start, int stop) {this.source = source;this.type = type;this.channel = channel;this.start = start;this.stop = stop;if (source.a != null) {this.line = source.a.getLine();this.charPositionInLine = source.a.getCharPositionInLine();}}",public CommonTokenPairTokenSource CharStream source int type int channel int start int stop thissource  sourcethistype  typethischannel  channelthisstart  startthisstop  stopif sourcea  null thisline  sourceagetLinethischarPositionInLine  sourceagetCharPositionInLine
"public boolean get(URIish uri, CredentialItem... items)throws UnsupportedCredentialItem {for (CredentialItem i : items) {if (i instanceof CredentialItem.Username) {((CredentialItem.Username) i).setValue(username);continue;}if (i instanceof CredentialItem.Password) {((CredentialItem.Password) i).setValue(password);continue;}if (i instanceof CredentialItem.StringType) {if (i.getPromptText().equals(""Password: "")) { ((CredentialItem.StringType) i).setValue(new String(password));continue;}}throw new UnsupportedCredentialItem(uri, i.getClass().getName()+ "":"" + i.getPromptText()); }return true;}",public boolean getURIish uri CredentialItem itemsthrows UnsupportedCredentialItem for CredentialItem i  items if i instanceof CredentialItemUsername CredentialItemUsername isetValueusernamecontinueif i instanceof CredentialItemPassword CredentialItemPassword isetValuepasswordcontinueif i instanceof CredentialItemStringType if igetPromptTextequalsPassword   CredentialItemStringType isetValuenew Stringpasswordcontinuethrow new UnsupportedCredentialItemuri igetClassgetName   igetPromptText return true
"public boolean get(String name, boolean dflt) {boolean vals[] = (boolean[]) valByRound.get(name);if (vals != null) {return vals[roundNumber % vals.length];}String sval = props.getProperty(name, """" + dflt);if (sval.indexOf("":"") < 0) {return Boolean.valueOf(sval).booleanValue();}int k = sval.indexOf("":"");String colName = sval.substring(0, k);sval = sval.substring(k + 1);colForValByRound.put(name, colName);vals = propToBooleanArray(sval);valByRound.put(name, vals);return vals[roundNumber % vals.length];}",public boolean getString name boolean dflt boolean vals  boolean valByRoundgetnameif vals  null return valsroundNumber  valslengthString sval  propsgetPropertyname   dfltif svalindexOf  0 return BooleanvalueOfsvalbooleanValueint k  svalindexOfString colName  svalsubstring0 ksval  svalsubstringk  1colForValByRoundputname colNamevals  propToBooleanArraysvalvalByRoundputname valsreturn valsroundNumber  valslength
public UpdateDocumentationVersionResult updateDocumentationVersion(UpdateDocumentationVersionRequest request) {request = beforeClientExecution(request);return executeUpdateDocumentationVersion(request);},public UpdateDocumentationVersionResult updateDocumentationVersionUpdateDocumentationVersionRequest request request  beforeClientExecutionrequestreturn executeUpdateDocumentationVersionrequest
public DeleteApplicationInputProcessingConfigurationResult deleteApplicationInputProcessingConfiguration(DeleteApplicationInputProcessingConfigurationRequest request) {request = beforeClientExecution(request);return executeDeleteApplicationInputProcessingConfiguration(request);},public DeleteApplicationInputProcessingConfigurationResult deleteApplicationInputProcessingConfigurationDeleteApplicationInputProcessingConfigurationRequest request request  beforeClientExecutionrequestreturn executeDeleteApplicationInputProcessingConfigurationrequest
public PurchaseScheduledInstancesResult purchaseScheduledInstances(PurchaseScheduledInstancesRequest request) {request = beforeClientExecution(request);return executePurchaseScheduledInstances(request);},public PurchaseScheduledInstancesResult purchaseScheduledInstancesPurchaseScheduledInstancesRequest request request  beforeClientExecutionrequestreturn executePurchaseScheduledInstancesrequest
public String getHost() {return host;},public String getHost return host
public DeleteNetworkProfileResult deleteNetworkProfile(DeleteNetworkProfileRequest request) {request = beforeClientExecution(request);return executeDeleteNetworkProfile(request);},public DeleteNetworkProfileResult deleteNetworkProfileDeleteNetworkProfileRequest request request  beforeClientExecutionrequestreturn executeDeleteNetworkProfilerequest
public ListSchemasResult listSchemas(ListSchemasRequest request) {request = beforeClientExecution(request);return executeListSchemas(request);},public ListSchemasResult listSchemasListSchemasRequest request request  beforeClientExecutionrequestreturn executeListSchemasrequest
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeShort(field_1_first_row);out.writeShort(field_2_first_col);},public void writeLittleEndianOutput out outwriteBytesid  getPtgClassoutwriteShortfield1firstrowoutwriteShortfield2firstcol
public ByteSliceWriter(ByteBlockPool pool) {this.pool = pool;},public ByteSliceWriterByteBlockPool pool thispool  pool
"public void replace(int start, int limit, char[] text, int charsStart,int charsLen) {final int newLength = shiftForReplace(start, limit, charsLen);System.arraycopy(text, charsStart, buffer, start, charsLen);token.setLength(length = newLength);}",public void replaceint start int limit char text int charsStartint charsLen final int newLength  shiftForReplacestart limit charsLenSystemarraycopytext charsStart buffer start charsLentokensetLengthlength  newLength
"public synchronized void getChars(int start, int end, char[] buffer, int idx) {super.getChars(start, end, buffer, idx);}",public synchronized void getCharsint start int end char buffer int idx supergetCharsstart end buffer idx
public RestoreAddressToClassicResult restoreAddressToClassic(RestoreAddressToClassicRequest request) {request = beforeClientExecution(request);return executeRestoreAddressToClassic(request);},public RestoreAddressToClassicResult restoreAddressToClassicRestoreAddressToClassicRequest request request  beforeClientExecutionrequestreturn executeRestoreAddressToClassicrequest
"public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {values[valuesOffset++] = ((blocks[blocksOffset++] & 0xFFL) << 8) | (blocks[blocksOffset++] & 0xFFL);}}",public void decodebyte blocks int blocksOffset long values int valuesOffset int iterations for int j  0 j  iterations j valuesvaluesOffset  blocksblocksOffset  0xFFL  8  blocksblocksOffset  0xFFL
"public CreateNamespaceRequest() {super(""cr"", ""2016-06-07"", ""CreateNamespace"", ""cr"");setUriPattern(""/namespace"");setMethod(MethodType.PUT);}",public CreateNamespaceRequest supercr 20160607 CreateNamespace crsetUriPatternnamespacesetMethodMethodTypePUT
"public ShortBuffer compact() {System.arraycopy(backingArray, position + offset, backingArray, offset, remaining());position = limit - position;limit = capacity;mark = UNSET_MARK;return this;}",public ShortBuffer compact SystemarraycopybackingArray position  offset backingArray offset remainingposition  limit  positionlimit  capacitymark  UNSETMARKreturn this
public GetEventsConfigurationResult getEventsConfiguration(GetEventsConfigurationRequest request) {request = beforeClientExecution(request);return executeGetEventsConfiguration(request);},public GetEventsConfigurationResult getEventsConfigurationGetEventsConfigurationRequest request request  beforeClientExecutionrequestreturn executeGetEventsConfigurationrequest
"public String toString() {return ""docFreq="" + docFreq + "" totalTermFreq="" + totalTermFreq + "" termBlockOrd="" + termBlockOrd + "" blockFP="" + blockFilePointer;}",public String toString return docFreq  docFreq   totalTermFreq  totalTermFreq   termBlockOrd  termBlockOrd   blockFP  blockFilePointer
public EstimateTemplateCostResult estimateTemplateCost(EstimateTemplateCostRequest request) {request = beforeClientExecution(request);return executeEstimateTemplateCost(request);},public EstimateTemplateCostResult estimateTemplateCostEstimateTemplateCostRequest request request  beforeClientExecutionrequestreturn executeEstimateTemplateCostrequest
"public TreeFilter clone() {return new Binary(a.clone(), b.clone());}",public TreeFilter clone return new Binaryaclone bclone
"public ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {switch (args.length) {case 1:return evaluate(srcRowIndex, srcColumnIndex, args[0]);case 0:return new NumberEval(srcColumnIndex+1);}return ErrorEval.VALUE_INVALID;}",public ValueEval evaluateValueEval args int srcRowIndex int srcColumnIndex switch argslength case 1return evaluatesrcRowIndex srcColumnIndex args0case 0return new NumberEvalsrcColumnIndex1return ErrorEvalVALUEINVALID
public ByteOrder order() {return ByteOrder.nativeOrder();},public ByteOrder order return ByteOrdernativeOrder
"public void insert(char[] key, int start, char val) {int len = strlen(key) + 1;if (freenode + len > eq.length) {redimNodeArrays(eq.length + BLOCK_SIZE);}root = insert(root, key, start, val);}",public void insertchar key int start char val int len  strlenkey  1if freenode  len  eqlength redimNodeArrayseqlength  BLOCKSIZEroot  insertroot key start val
"public final DFAState getPrecedenceStartState(int precedence) {if (!isPrecedenceDfa()) {throw new IllegalStateException(""Only precedence DFAs may contain a precedence start state."");}if (precedence < 0 || precedence >= s0.edges.length) {return null;}return s0.edges[precedence];}",public final DFAState getPrecedenceStartStateint precedence if isPrecedenceDfa throw new IllegalStateExceptionOnly precedence DFAs may contain a precedence start stateif precedence  0  precedence  s0edgeslength return nullreturn s0edgesprecedence
public SetActiveReceiptRuleSetResult setActiveReceiptRuleSet(SetActiveReceiptRuleSetRequest request) {request = beforeClientExecution(request);return executeSetActiveReceiptRuleSet(request);},public SetActiveReceiptRuleSetResult setActiveReceiptRuleSetSetActiveReceiptRuleSetRequest request request  beforeClientExecutionrequestreturn executeSetActiveReceiptRuleSetrequest
public CreateLaunchTemplateResult createLaunchTemplate(CreateLaunchTemplateRequest request) {request = beforeClientExecution(request);return executeCreateLaunchTemplate(request);},public CreateLaunchTemplateResult createLaunchTemplateCreateLaunchTemplateRequest request request  beforeClientExecutionrequestreturn executeCreateLaunchTemplaterequest
public ListTrafficPolicyVersionsResult listTrafficPolicyVersions(ListTrafficPolicyVersionsRequest request) {request = beforeClientExecution(request);return executeListTrafficPolicyVersions(request);},public ListTrafficPolicyVersionsResult listTrafficPolicyVersionsListTrafficPolicyVersionsRequest request request  beforeClientExecutionrequestreturn executeListTrafficPolicyVersionsrequest
public Locale effectiveLocale() {return effectiveLocale;},public Locale effectiveLocale return effectiveLocale
"public void encode(long[] values, int valuesOffset, long[] blocks,int blocksOffset, int iterations) {for (int i = 0; i < iterations; ++i) {blocks[blocksOffset++] = encode(values, valuesOffset);valuesOffset += valueCount;}}",public void encodelong values int valuesOffset long blocksint blocksOffset int iterations for int i  0 i  iterations i blocksblocksOffset  encodevalues valuesOffsetvaluesOffset  valueCount
"public static String revisionVersion(IndexCommit commit) {return Long.toString(commit.getGeneration(), RADIX);}",public static String revisionVersionIndexCommit commit return LongtoStringcommitgetGeneration RADIX
public ListServicesResult listServices(ListServicesRequest request) {request = beforeClientExecution(request);return executeListServices(request);},public ListServicesResult listServicesListServicesRequest request request  beforeClientExecutionrequestreturn executeListServicesrequest
public BatchModifyClusterSnapshotsResult batchModifyClusterSnapshots(BatchModifyClusterSnapshotsRequest request) {request = beforeClientExecution(request);return executeBatchModifyClusterSnapshots(request);},public BatchModifyClusterSnapshotsResult batchModifyClusterSnapshotsBatchModifyClusterSnapshotsRequest request request  beforeClientExecutionrequestreturn executeBatchModifyClusterSnapshotsrequest
public DeleteBackupResult deleteBackup(DeleteBackupRequest request) {request = beforeClientExecution(request);return executeDeleteBackup(request);},public DeleteBackupResult deleteBackupDeleteBackupRequest request request  beforeClientExecutionrequestreturn executeDeleteBackuprequest
public DescribeDBParameterGroupsResult describeDBParameterGroups() {return describeDBParameterGroups(new DescribeDBParameterGroupsRequest());},public DescribeDBParameterGroupsResult describeDBParameterGroups return describeDBParameterGroupsnew DescribeDBParameterGroupsRequest
"public void reset(boolean zeroFillBuffers, boolean reuseFirst) {if (bufferUpto != -1) {if (zeroFillBuffers) {for(int i=0;i<bufferUpto;i++) {Arrays.fill(buffers[i], 0);}Arrays.fill(buffers[bufferUpto], 0, intUpto, 0);}if (bufferUpto > 0 || !reuseFirst) {final int offset = reuseFirst ? 1 : 0;allocator.recycleIntBlocks(buffers, offset, 1+bufferUpto);Arrays.fill(buffers, offset, bufferUpto+1, null);}if (reuseFirst) {bufferUpto = 0;intUpto = 0;intOffset = 0;buffer = buffers[0];} else {bufferUpto = -1;intUpto = INT_BLOCK_SIZE;intOffset = -INT_BLOCK_SIZE;buffer = null;}}}",public void resetboolean zeroFillBuffers boolean reuseFirst if bufferUpto  1 if zeroFillBuffers forint i0ibufferUptoi Arraysfillbuffersi 0ArraysfillbuffersbufferUpto 0 intUpto 0if bufferUpto  0  reuseFirst final int offset  reuseFirst  1  0allocatorrecycleIntBlocksbuffers offset 1bufferUptoArraysfillbuffers offset bufferUpto1 nullif reuseFirst bufferUpto  0intUpto  0intOffset  0buffer  buffers0 else bufferUpto  1intUpto  INTBLOCKSIZEintOffset  INTBLOCKSIZEbuffer  null
public SaveRecalcRecord clone() {return copy();},public SaveRecalcRecord clone return copy
public static void Main(String[] args) {exec(args);},public static void MainString args execargs
public DeregisterImageResult deregisterImage(DeregisterImageRequest request) {request = beforeClientExecution(request);return executeDeregisterImage(request);},public DeregisterImageResult deregisterImageDeregisterImageRequest request request  beforeClientExecutionrequestreturn executeDeregisterImagerequest
public DBSnapshot modifyDBSnapshot(ModifyDBSnapshotRequest request) {request = beforeClientExecution(request);return executeModifyDBSnapshot(request);},public DBSnapshot modifyDBSnapshotModifyDBSnapshotRequest request request  beforeClientExecutionrequestreturn executeModifyDBSnapshotrequest
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[BOUNDSHEET]\n"");buffer.append(""    .bof        = "").append(HexDump.intToHex(getPositionOfBof())).append(""\n"");buffer.append(""    .options    = "").append(HexDump.shortToHex(field_2_option_flags)).append(""\n"");buffer.append(""    .unicodeflag= "").append(HexDump.byteToHex(field_4_isMultibyteUnicode)).append(""\n"");buffer.append(""    .sheetname  = "").append(field_5_sheetname).append(""\n"");buffer.append(""[/BOUNDSHEET]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendBOUNDSHEETnbufferappend    bof         appendHexDumpintToHexgetPositionOfBofappendnbufferappend    options     appendHexDumpshortToHexfield2optionflagsappendnbufferappend    unicodeflag appendHexDumpbyteToHexfield4isMultibyteUnicodeappendnbufferappend    sheetname   appendfield5sheetnameappendnbufferappendBOUNDSHEETnreturn buffertoString
"public void setParams(String params) {this.params = params; fieldsToLoad = new HashSet<>();for (StringTokenizer tokenizer = new StringTokenizer(params, "",""); tokenizer.hasMoreTokens();) {String s = tokenizer.nextToken();fieldsToLoad.add(s);}}",public void setParamsString params thisparams  params fieldsToLoad  new HashSetfor StringTokenizer tokenizer  new StringTokenizerparams  tokenizerhasMoreTokens String s  tokenizernextTokenfieldsToLoadadds
public GetNamedQueryResult getNamedQuery(GetNamedQueryRequest request) {request = beforeClientExecution(request);return executeGetNamedQuery(request);},public GetNamedQueryResult getNamedQueryGetNamedQueryRequest request request  beforeClientExecutionrequestreturn executeGetNamedQueryrequest
public GermanStemFilter create(TokenStream in) {return new GermanStemFilter(in);},public GermanStemFilter createTokenStream in return new GermanStemFilterin
"public ExtendedFormatRecord createCellXF() {ExtendedFormatRecord xf = createExtendedFormat();records.add(records.getXfpos()+1, xf);records.setXfpos( records.getXfpos() + 1 );numxfs++;return xf;}",public ExtendedFormatRecord createCellXF ExtendedFormatRecord xf  createExtendedFormatrecordsaddrecordsgetXfpos1 xfrecordssetXfpos recordsgetXfpos  1 numxfsreturn xf
public Cluster modifyClusterMaintenance(ModifyClusterMaintenanceRequest request) {request = beforeClientExecution(request);return executeModifyClusterMaintenance(request);},public Cluster modifyClusterMaintenanceModifyClusterMaintenanceRequest request request  beforeClientExecutionrequestreturn executeModifyClusterMaintenancerequest
public DeleteDBSecurityGroupResult deleteDBSecurityGroup(DeleteDBSecurityGroupRequest request) {request = beforeClientExecution(request);return executeDeleteDBSecurityGroup(request);},public DeleteDBSecurityGroupResult deleteDBSecurityGroupDeleteDBSecurityGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteDBSecurityGrouprequest
"public static FormulaError forInt(int type) throws IllegalArgumentException {FormulaError err = imap.get(type);if(err == null) err = bmap.get((byte)type);if(err == null) throw new IllegalArgumentException(""Unknown error type: "" + type);return err;}",public static FormulaError forIntint type throws IllegalArgumentException FormulaError err  imapgettypeiferr  null err  bmapgetbytetypeiferr  null throw new IllegalArgumentExceptionUnknown error type   typereturn err
"public void finish(StringBuffer toAppendTo) {if (hStart >= 0 && !showAmPm) {for (int i = 0; i < hLen; i++) {toAppendTo.setCharAt(hStart + i, 'H');}}}",public void finishStringBuffer toAppendTo if hStart  0  showAmPm for int i  0 i  hLen i toAppendTosetCharAthStart  i H
public SendRawEmailResult sendRawEmail(SendRawEmailRequest request) {request = beforeClientExecution(request);return executeSendRawEmail(request);},public SendRawEmailResult sendRawEmailSendRawEmailRequest request request  beforeClientExecutionrequestreturn executeSendRawEmailrequest
"public void clear() {if ( readonly ) throw new IllegalStateException(""can't alter readonly IntervalSet"");intervals.clear();}",public void clear if  readonly  throw new IllegalStateExceptioncant alter readonly IntervalSetintervalsclear
public int previous() {if (current == start) {return DONE;} else {return first();}},public int previous if current  start return DONE else return first
public DeleteDocumentClassifierResult deleteDocumentClassifier(DeleteDocumentClassifierRequest request) {request = beforeClientExecution(request);return executeDeleteDocumentClassifier(request);},public DeleteDocumentClassifierResult deleteDocumentClassifierDeleteDocumentClassifierRequest request request  beforeClientExecutionrequestreturn executeDeleteDocumentClassifierrequest
"public DeleteDeviceAllGroupRequest() {super(""LinkFace"", ""2018-07-20"", ""DeleteDeviceAllGroup"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public DeleteDeviceAllGroupRequest superLinkFace 20180720 DeleteDeviceAllGroupsetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
"public String toString() {StringBuilder sb = new StringBuilder();sb.append(getClass().getName());sb.append("" ["");sb.append(""sheetIx="").append(getExternSheetIndex());sb.append("" ! "");sb.append(formatReferenceAsString());sb.append(""]"");return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappendgetClassgetNamesbappend sbappendsheetIxappendgetExternSheetIndexsbappend  sbappendformatReferenceAsStringsbappendreturn sbtoString
public CreateBGPPeerResult createBGPPeer(CreateBGPPeerRequest request) {request = beforeClientExecution(request);return executeCreateBGPPeer(request);},public CreateBGPPeerResult createBGPPeerCreateBGPPeerRequest request request  beforeClientExecutionrequestreturn executeCreateBGPPeerrequest
"public String toASCIIString() {StringBuilder result = new StringBuilder();ASCII_ONLY.appendEncoded(result, toString());return result.toString();}",public String toASCIIString StringBuilder result  new StringBuilderASCIIONLYappendEncodedresult toStringreturn resulttoString
"public CharSequence subSequence(int start, int end) {int remaining = end - start;StringBuilder sb = new StringBuilder(remaining);int blockIdx = blockIndex(start);int indexInBlock = indexInBlock(start);while (remaining > 0) {Block b = blocks.get(blockIdx++);int numToAppend = Math.min(remaining, b.length - indexInBlock);sb.append(b.chars, indexInBlock, numToAppend);remaining -= numToAppend;indexInBlock = 0; }return sb.toString();}",public CharSequence subSequenceint start int end int remaining  end  startStringBuilder sb  new StringBuilderremainingint blockIdx  blockIndexstartint indexInBlock  indexInBlockstartwhile remaining  0 Block b  blocksgetblockIdxint numToAppend  Mathminremaining blength  indexInBlocksbappendbchars indexInBlock numToAppendremaining  numToAppendindexInBlock  0 return sbtoString
public long get(int index) {final int o = index >>> 3;final int b = index & 7;final int shift = b << 3;return (blocks[o] >>> shift) & 255L;},public long getint index final int o  index  3final int b  index  7final int shift  b  3return blockso  shift  255L
"public static Collection<String> getNotSupportedFunctionNames() {Collection<String> lst = new TreeSet<>();for (int i = 0; i < functions.length; i++) {Function func = functions[i];if (func != null && (func instanceof NotImplementedFunction)) {FunctionMetadata metaData = FunctionMetadataRegistry.getFunctionByIndex(i);lst.add(metaData.getName());}}lst.remove(""INDIRECT""); return Collections.unmodifiableCollection(lst);}",public static CollectionString getNotSupportedFunctionNames CollectionString lst  new TreeSetfor int i  0 i  functionslength i Function func  functionsiif func  null  func instanceof NotImplementedFunction FunctionMetadata metaData  FunctionMetadataRegistrygetFunctionByIndexilstaddmetaDatagetNamelstremoveINDIRECT return CollectionsunmodifiableCollectionlst
"public ItalianLightStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public ItalianLightStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeByte(getNumberOfOperands());out.writeShort(getFunctionIndex());},public void writeLittleEndianOutput out outwriteBytesid  getPtgClassoutwriteBytegetNumberOfOperandsoutwriteShortgetFunctionIndex
"public String getTokenErrorDisplay(Token t) {if ( t==null ) return ""<no token>"";String s = t.getText();if ( s==null ) {if ( t.getType()==Token.EOF ) {s = ""<EOF>"";}else {s = ""<""+t.getType()+"">"";}}s = s.replace(""\n"",""\\n"");s = s.replace(""\r"",""\\r"");s = s.replace(""\t"",""\\t"");return ""'""+s+""'"";}",public String getTokenErrorDisplayToken t if  tnull  return no tokenString s  tgetTextif  snull  if  tgetTypeTokenEOF  s  EOFelse s  tgetTypes  sreplacenns  sreplacerrs  sreplacettreturn s
"public NumericPayloadTokenFilter create(TokenStream input) {return new NumericPayloadTokenFilter(input,payload,typeMatch);}",public NumericPayloadTokenFilter createTokenStream input return new NumericPayloadTokenFilterinputpayloadtypeMatch
public void incrementDrawingsSaved(){dgg.setDrawingsSaved(dgg.getDrawingsSaved()+1);},public void incrementDrawingsSaveddggsetDrawingsSaveddgggetDrawingsSaved1
public UploadSigningCertificateRequest(String certificateBody) {setCertificateBody(certificateBody);},public UploadSigningCertificateRequestString certificateBody setCertificateBodycertificateBody
public DeleteJourneyResult deleteJourney(DeleteJourneyRequest request) {request = beforeClientExecution(request);return executeDeleteJourney(request);},public DeleteJourneyResult deleteJourneyDeleteJourneyRequest request request  beforeClientExecutionrequestreturn executeDeleteJourneyrequest
public void reset() {ptr = mark;},public void reset ptr  mark
public DescribeInstanceHealthRequest(String loadBalancerName) {setLoadBalancerName(loadBalancerName);},public DescribeInstanceHealthRequestString loadBalancerName setLoadBalancerNameloadBalancerName
public static Automaton toAutomaton(Term wildcardquery) {List<Automaton> automata = new ArrayList<>();String wildcardText = wildcardquery.text();for (int i = 0; i < wildcardText.length();) {final int c = wildcardText.codePointAt(i);int length = Character.charCount(c);switch(c) {case WILDCARD_STRING:automata.add(Automata.makeAnyString());break;case WILDCARD_CHAR:automata.add(Automata.makeAnyChar());break;case WILDCARD_ESCAPE:if (i + length < wildcardText.length()) {final int nextChar = wildcardText.codePointAt(i + length);length += Character.charCount(nextChar);automata.add(Automata.makeChar(nextChar));break;} default:automata.add(Automata.makeChar(c));}i += length;}return Operations.concatenate(automata);},public static Automaton toAutomatonTerm wildcardquery ListAutomaton automata  new ArrayListString wildcardText  wildcardquerytextfor int i  0 i  wildcardTextlength final int c  wildcardTextcodePointAtiint length  CharactercharCountcswitchc case WILDCARDSTRINGautomataaddAutomatamakeAnyStringbreakcase WILDCARDCHARautomataaddAutomatamakeAnyCharbreakcase WILDCARDESCAPEif i  length  wildcardTextlength final int nextChar  wildcardTextcodePointAti  lengthlength  CharactercharCountnextCharautomataaddAutomatamakeCharnextCharbreak defaultautomataaddAutomatamakeCharci  lengthreturn Operationsconcatenateautomata
public boolean equals(Object obj) {if (this == obj)return true;if (obj == null)return false;if (obj instanceof ExtendedFormatRecord) {final ExtendedFormatRecord other = (ExtendedFormatRecord) obj;if (field_1_font_index != other.field_1_font_index)return false;if (field_2_format_index != other.field_2_format_index)return false;if (field_3_cell_options != other.field_3_cell_options)return false;if (field_4_alignment_options != other.field_4_alignment_options)return false;if (field_5_indention_options != other.field_5_indention_options)return false;if (field_6_border_options != other.field_6_border_options)return false;if (field_7_palette_options != other.field_7_palette_options)return false;if (field_8_adtl_palette_options != other.field_8_adtl_palette_options)return false;if (field_9_fill_palette_options != other.field_9_fill_palette_options)return false;return true;}return false;},public boolean equalsObject obj if this  objreturn trueif obj  nullreturn falseif obj instanceof ExtendedFormatRecord final ExtendedFormatRecord other  ExtendedFormatRecord objif field1fontindex  otherfield1fontindexreturn falseif field2formatindex  otherfield2formatindexreturn falseif field3celloptions  otherfield3celloptionsreturn falseif field4alignmentoptions  otherfield4alignmentoptionsreturn falseif field5indentionoptions  otherfield5indentionoptionsreturn falseif field6borderoptions  otherfield6borderoptionsreturn falseif field7paletteoptions  otherfield7paletteoptionsreturn falseif field8adtlpaletteoptions  otherfield8adtlpaletteoptionsreturn falseif field9fillpaletteoptions  otherfield9fillpaletteoptionsreturn falsereturn truereturn false
"public short[] getTriplet(){return new short[]{(short) (_red   & 0xff),(short) (_green & 0xff),(short) (_blue  & 0xff)};}",public short getTripletreturn new shortshort red    0xffshort green  0xffshort blue   0xff
public BlameCommand setFollowFileRenames(boolean follow) {followFileRenames = Boolean.valueOf(follow);return this;},public BlameCommand setFollowFileRenamesboolean follow followFileRenames  BooleanvalueOffollowreturn this
"public StringMatcher(String value, CmpOp operator) {super(operator);_value = value;switch(operator.getCode()) {case CmpOp.NONE:case CmpOp.EQ:case CmpOp.NE:_pattern = getWildCardPattern(value);break;default:_pattern = null;}}",public StringMatcherString value CmpOp operator superoperatorvalue  valueswitchoperatorgetCode case CmpOpNONEcase CmpOpEQcase CmpOpNEpattern  getWildCardPatternvaluebreakdefaultpattern  null
public DefaultColWidthRecord() {field_1_col_width = DEFAULT_COLUMN_WIDTH;},public DefaultColWidthRecord field1colwidth  DEFAULTCOLUMNWIDTH
"public GetIndustryInfoListRequest() {super(""industry-brain"", ""2018-07-12"", ""GetIndustryInfoList"");setProtocol(ProtocolType.HTTPS);}",public GetIndustryInfoListRequest superindustrybrain 20180712 GetIndustryInfoListsetProtocolProtocolTypeHTTPS
public AssociateTrialComponentResult associateTrialComponent(AssociateTrialComponentRequest request) {request = beforeClientExecution(request);return executeAssociateTrialComponent(request);},public AssociateTrialComponentResult associateTrialComponentAssociateTrialComponentRequest request request  beforeClientExecutionrequestreturn executeAssociateTrialComponentrequest
"public FileIdCluster addCluster(int dgId, int numShapedUsed) {return addCluster(dgId, numShapedUsed, true);}",public FileIdCluster addClusterint dgId int numShapedUsed return addClusterdgId numShapedUsed true
public GetFieldLevelEncryptionResult getFieldLevelEncryption(GetFieldLevelEncryptionRequest request) {request = beforeClientExecution(request);return executeGetFieldLevelEncryption(request);},public GetFieldLevelEncryptionResult getFieldLevelEncryptionGetFieldLevelEncryptionRequest request request  beforeClientExecutionrequestreturn executeGetFieldLevelEncryptionrequest
"public CharBuffer get(char[] dst, int dstOffset, int charCount) {Arrays.checkOffsetAndCount(dst.length, dstOffset, charCount);if (charCount > remaining()) {throw new BufferUnderflowException();}for (int i = dstOffset; i < dstOffset + charCount; ++i) {dst[i] = get();}return this;}",public CharBuffer getchar dst int dstOffset int charCount ArrayscheckOffsetAndCountdstlength dstOffset charCountif charCount  remaining throw new BufferUnderflowExceptionfor int i  dstOffset i  dstOffset  charCount i dsti  getreturn this
public UpdateServiceResult updateService(UpdateServiceRequest request) {request = beforeClientExecution(request);return executeUpdateService(request);},public UpdateServiceResult updateServiceUpdateServiceRequest request request  beforeClientExecutionrequestreturn executeUpdateServicerequest
public FlushStageCacheResult flushStageCache(FlushStageCacheRequest request) {request = beforeClientExecution(request);return executeFlushStageCache(request);},public FlushStageCacheResult flushStageCacheFlushStageCacheRequest request request  beforeClientExecutionrequestreturn executeFlushStageCacherequest
public ModifyInstanceMetadataOptionsResult modifyInstanceMetadataOptions(ModifyInstanceMetadataOptionsRequest request) {request = beforeClientExecution(request);return executeModifyInstanceMetadataOptions(request);},public ModifyInstanceMetadataOptionsResult modifyInstanceMetadataOptionsModifyInstanceMetadataOptionsRequest request request  beforeClientExecutionrequestreturn executeModifyInstanceMetadataOptionsrequest
public DefaultRowHeightRecord(RecordInputStream in) {field_1_option_flags = in.readShort();field_2_row_height   = in.readShort();},public DefaultRowHeightRecordRecordInputStream in field1optionflags  inreadShortfield2rowheight    inreadShort
public ListModelPackagesResult listModelPackages(ListModelPackagesRequest request) {request = beforeClientExecution(request);return executeListModelPackages(request);},public ListModelPackagesResult listModelPackagesListModelPackagesRequest request request  beforeClientExecutionrequestreturn executeListModelPackagesrequest
public StopFleetActionsResult stopFleetActions(StopFleetActionsRequest request) {request = beforeClientExecution(request);return executeStopFleetActions(request);},public StopFleetActionsResult stopFleetActionsStopFleetActionsRequest request request  beforeClientExecutionrequestreturn executeStopFleetActionsrequest
"public boolean matches(ValueEval x) {double testValue;if(x instanceof StringEval) {switch (getCode()) {case CmpOp.EQ:case CmpOp.NONE:break;case CmpOp.NE:return true;default:return false;}StringEval se = (StringEval)x;Double val = OperandResolver.parseDouble(se.getStringValue());if(val == null) {return false;}return _value == val.doubleValue();} else if((x instanceof NumberEval)) {NumberEval ne = (NumberEval) x;testValue = ne.getNumberValue();} else if((x instanceof BlankEval)) {switch (getCode()) {case CmpOp.NE:return true;default:return false;}} else {return false;}return evaluate(Double.compare(testValue, _value));}",public boolean matchesValueEval x double testValueifx instanceof StringEval switch getCode case CmpOpEQcase CmpOpNONEbreakcase CmpOpNEreturn truedefaultreturn falseStringEval se  StringEvalxDouble val  OperandResolverparseDoublesegetStringValueifval  null return falsereturn value  valdoubleValue else ifx instanceof NumberEval NumberEval ne  NumberEval xtestValue  negetNumberValue else ifx instanceof BlankEval switch getCode case CmpOpNEreturn truedefaultreturn false else return falsereturn evaluateDoublecomparetestValue value
"public boolean include(RevWalk walker, RevCommit c) {throw new UnsupportedOperationException(JGitText.get().cannotBeCombined);}",public boolean includeRevWalk walker RevCommit c throw new UnsupportedOperationExceptionJGitTextgetcannotBeCombined
public LongList(int capacity) {entries = new long[capacity];},public LongListint capacity entries  new longcapacity
public static String readAsciiLine(InputStream in) throws IOException {StringBuilder result = new StringBuilder(80);while (true) {int c = in.read();if (c == -1) {throw new EOFException();} else if (c == '\n') {break;}result.append((char) c);}int length = result.length();if (length > 0 && result.charAt(length - 1) == '\r') {result.setLength(length - 1);}return result.toString();},public static String readAsciiLineInputStream in throws IOException StringBuilder result  new StringBuilder80while true int c  inreadif c  1 throw new EOFException else if c  n breakresultappendchar cint length  resultlengthif length  0  resultcharAtlength  1  r resultsetLengthlength  1return resulttoString
public DeleteRouteRequestParameterResult deleteRouteRequestParameter(DeleteRouteRequestParameterRequest request) {request = beforeClientExecution(request);return executeDeleteRouteRequestParameter(request);},public DeleteRouteRequestParameterResult deleteRouteRequestParameterDeleteRouteRequestParameterRequest request request  beforeClientExecutionrequestreturn executeDeleteRouteRequestParameterrequest
public int getRowCountForBlock(int block) {int startIndex = block * DBCellRecord.BLOCK_SIZE;int endIndex = startIndex + DBCellRecord.BLOCK_SIZE - 1;if (endIndex >= _rowRecords.size())endIndex = _rowRecords.size()-1;return endIndex-startIndex+1;},public int getRowCountForBlockint block int startIndex  block  DBCellRecordBLOCKSIZEint endIndex  startIndex  DBCellRecordBLOCKSIZE  1if endIndex  rowRecordssizeendIndex  rowRecordssize1return endIndexstartIndex1
"public boolean add(CharSequence text) {return map.put(text, PLACEHOLDER) == null;}",public boolean addCharSequence text return mapputtext PLACEHOLDER  null
"public FSTCompletion(FST<Object> automaton, boolean higherWeightsFirst, boolean exactFirst) {this.automaton = automaton;if (automaton != null) {this.rootArcs = cacheRootArcs(automaton);} else {this.rootArcs = new Arc[0];}this.higherWeightsFirst = higherWeightsFirst;this.exactFirst = exactFirst;}",public FSTCompletionFSTObject automaton boolean higherWeightsFirst boolean exactFirst thisautomaton  automatonif automaton  null thisrootArcs  cacheRootArcsautomaton else thisrootArcs  new Arc0thishigherWeightsFirst  higherWeightsFirstthisexactFirst  exactFirst
"public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats[]) {double idf = 0d; List<Explanation> details = new ArrayList<>();for (final TermStatistics stat : termStats ) {Explanation idfExplain = idfExplain(collectionStats, stat);details.add(idfExplain);idf += idfExplain.getValue().floatValue();}return Explanation.match((float) idf, ""idf, sum of:"", details);}",public Explanation idfExplainCollectionStatistics collectionStats TermStatistics termStats double idf  0d ListExplanation details  new ArrayListfor final TermStatistics stat  termStats  Explanation idfExplain  idfExplaincollectionStats statdetailsaddidfExplainidf  idfExplaingetValuefloatValuereturn Explanationmatchfloat idf idf sum of details
public CreateEndpointResult createEndpoint(CreateEndpointRequest request) {request = beforeClientExecution(request);return executeCreateEndpoint(request);},public CreateEndpointResult createEndpointCreateEndpointRequest request request  beforeClientExecutionrequestreturn executeCreateEndpointrequest
"public int serialize(int offset, byte[] data){LittleEndian.putShort( data, 0 + offset, getSid() );LittleEndian.putShort( data, 2 + offset, (short) ( getRecordSize() - 4 ) );byte[] rawData = getRawData();if ( escherRecords.size() == 0 && rawData != null ){LittleEndian.putShort(data, 0 + offset, getSid());LittleEndian.putShort(data, 2 + offset, (short)(getRecordSize() - 4));System.arraycopy( rawData, 0, data, 4 + offset, rawData.length);return rawData.length + 4;}LittleEndian.putShort(data, 0 + offset, getSid());LittleEndian.putShort(data, 2 + offset, (short)(getRecordSize() - 4));int pos = offset + 4;for (EscherRecord r : escherRecords) {pos += r.serialize( pos, data, new NullEscherSerializationListener() );}return getRecordSize();}",public int serializeint offset byte dataLittleEndianputShort data 0  offset getSid LittleEndianputShort data 2  offset short  getRecordSize  4  byte rawData  getRawDataif  escherRecordssize  0  rawData  null LittleEndianputShortdata 0  offset getSidLittleEndianputShortdata 2  offset shortgetRecordSize  4Systemarraycopy rawData 0 data 4  offset rawDatalengthreturn rawDatalength  4LittleEndianputShortdata 0  offset getSidLittleEndianputShortdata 2  offset shortgetRecordSize  4int pos  offset  4for EscherRecord r  escherRecords pos  rserialize pos data new NullEscherSerializationListener return getRecordSize
public boolean isBelowMaxRep() {int sc = _significand.bitLength() - C_64;return _significand.compareTo(BI_MAX_BASE.shiftLeft(sc)) < 0;},public boolean isBelowMaxRep int sc  significandbitLength  C64return significandcompareToBIMAXBASEshiftLeftsc  0
public FieldIndexEnum getFieldEnum(FieldInfo fieldInfo) {final FieldIndexData fieldData = fields.get(fieldInfo.name);if (fieldData.fst == null) {return null;} else {return new IndexEnum(fieldData.fst);}},public FieldIndexEnum getFieldEnumFieldInfo fieldInfo final FieldIndexData fieldData  fieldsgetfieldInfonameif fieldDatafst  null return null else return new IndexEnumfieldDatafst
"public AssociationsFacetsExample() {config = new FacetsConfig();config.setMultiValued(""tags"", true);config.setIndexFieldName(""tags"", ""$tags"");config.setMultiValued(""genre"", true);config.setIndexFieldName(""genre"", ""$genre"");}",public AssociationsFacetsExample config  new FacetsConfigconfigsetMultiValuedtags trueconfigsetIndexFieldNametags tagsconfigsetMultiValuedgenre trueconfigsetIndexFieldNamegenre genre
"public void fill(int fromIndex, int toIndex, long val) {ensureCapacity(val);current.fill(fromIndex, toIndex, val);}",public void fillint fromIndex int toIndex long val ensureCapacityvalcurrentfillfromIndex toIndex val
public ListDeploymentConfigsResult listDeploymentConfigs(ListDeploymentConfigsRequest request) {request = beforeClientExecution(request);return executeListDeploymentConfigs(request);},public ListDeploymentConfigsResult listDeploymentConfigsListDeploymentConfigsRequest request request  beforeClientExecutionrequestreturn executeListDeploymentConfigsrequest
public ListUserPoliciesRequest(String userName) {setUserName(userName);},public ListUserPoliciesRequestString userName setUserNameuserName
public TokenStream create(TokenStream input) {return new FinnishLightStemFilter(input);},public TokenStream createTokenStream input return new FinnishLightStemFilterinput
public CharSequence getLastOnPath(CharSequence key) {StringBuilder result = new StringBuilder(tries.size() * 2);for (int i = 0; i < tries.size(); i++) {CharSequence r = tries.get(i).getLastOnPath(key);if (r == null || (r.length() == 1 && r.charAt(0) == EOM)) {return result;}result.append(r);}return result;},public CharSequence getLastOnPathCharSequence key StringBuilder result  new StringBuildertriessize  2for int i  0 i  triessize i CharSequence r  triesgetigetLastOnPathkeyif r  null  rlength  1  rcharAt0  EOM return resultresultappendrreturn result
"public int getExternalSheetIndex(String workbookName, String firstSheetName, String lastSheetName) {int externalBookIndex = getExternalWorkbookIndex(workbookName);if (externalBookIndex == -1) {throw new RuntimeException(""No external workbook with name '"" + workbookName + ""'"");}SupBookRecord ebrTarget = _externalBookBlocks[externalBookIndex].getExternalBookRecord();int firstSheetIndex = getSheetIndex(ebrTarget.getSheetNames(), firstSheetName);int lastSheetIndex = getSheetIndex(ebrTarget.getSheetNames(), lastSheetName);int result = _externSheetRecord.getRefIxForSheet(externalBookIndex, firstSheetIndex, lastSheetIndex);if (result < 0) {result = _externSheetRecord.addRef(externalBookIndex, firstSheetIndex, lastSheetIndex);}return result;}",public int getExternalSheetIndexString workbookName String firstSheetName String lastSheetName int externalBookIndex  getExternalWorkbookIndexworkbookNameif externalBookIndex  1 throw new RuntimeExceptionNo external workbook with name   workbookName  SupBookRecord ebrTarget  externalBookBlocksexternalBookIndexgetExternalBookRecordint firstSheetIndex  getSheetIndexebrTargetgetSheetNames firstSheetNameint lastSheetIndex  getSheetIndexebrTargetgetSheetNames lastSheetNameint result  externSheetRecordgetRefIxForSheetexternalBookIndex firstSheetIndex lastSheetIndexif result  0 result  externSheetRecordaddRefexternalBookIndex firstSheetIndex lastSheetIndexreturn result
public String findSheetLastNameFromExternSheet(int externSheetIndex){int indexToSheet = linkTable.getLastInternalSheetIndexForExtIndex(externSheetIndex);return findSheetNameFromIndex(indexToSheet);},public String findSheetLastNameFromExternSheetint externSheetIndexint indexToSheet  linkTablegetLastInternalSheetIndexForExtIndexexternSheetIndexreturn findSheetNameFromIndexindexToSheet
public void serialize(LittleEndianOutput out) {out.writeShort(rt);out.writeShort(grbitFrt);out.writeShort(iObjectKind);out.write(reserved);},public void serializeLittleEndianOutput out outwriteShortrtoutwriteShortgrbitFrtoutwriteShortiObjectKindoutwritereserved
public final ValueEval getValue() {return _value;},public final ValueEval getValue return value
public ImportImageResult importImage(ImportImageRequest request) {request = beforeClientExecution(request);return executeImportImage(request);},public ImportImageResult importImageImportImageRequest request request  beforeClientExecutionrequestreturn executeImportImagerequest
"public PruneByAge(double maxAgeSec) {if (maxAgeSec < 0) {throw new IllegalArgumentException(""maxAgeSec must be > 0 (got "" + maxAgeSec + "")"");}this.maxAgeSec = maxAgeSec;}",public PruneByAgedouble maxAgeSec if maxAgeSec  0 throw new IllegalArgumentExceptionmaxAgeSec must be  0 got   maxAgeSec  thismaxAgeSec  maxAgeSec
public DeleteSecurityGroupRequest(String groupName) {setGroupName(groupName);},public DeleteSecurityGroupRequestString groupName setGroupNamegroupName
public GetRoomSkillParameterResult getRoomSkillParameter(GetRoomSkillParameterRequest request) {request = beforeClientExecution(request);return executeGetRoomSkillParameter(request);},public GetRoomSkillParameterResult getRoomSkillParameterGetRoomSkillParameterRequest request request  beforeClientExecutionrequestreturn executeGetRoomSkillParameterrequest
"public ParserRuleContext parse(int startRuleIndex) {RuleStartState startRuleStartState = atn.ruleToStartState[startRuleIndex];rootContext = createInterpreterRuleContext(null, ATNState.INVALID_STATE_NUMBER, startRuleIndex);if (startRuleStartState.isLeftRecursiveRule) {enterRecursionRule(rootContext, startRuleStartState.stateNumber, startRuleIndex, 0);}else {enterRule(rootContext, startRuleStartState.stateNumber, startRuleIndex);}while ( true ) {ATNState p = getATNState();switch ( p.getStateType() ) {case ATNState.RULE_STOP :if ( _ctx.isEmpty() ) {if (startRuleStartState.isLeftRecursiveRule) {ParserRuleContext result = _ctx;Pair<ParserRuleContext, Integer> parentContext = _parentContextStack.pop();unrollRecursionContexts(parentContext.a);return result;}else {exitRule();return rootContext;}}visitRuleStopState(p);break;default :try {visitState(p);}catch (RecognitionException e) {setState(atn.ruleToStopState[p.ruleIndex].stateNumber);getContext().exception = e;getErrorHandler().reportError(this, e);recover(e);}break;}}}",public ParserRuleContext parseint startRuleIndex RuleStartState startRuleStartState  atnruleToStartStatestartRuleIndexrootContext  createInterpreterRuleContextnull ATNStateINVALIDSTATENUMBER startRuleIndexif startRuleStartStateisLeftRecursiveRule enterRecursionRulerootContext startRuleStartStatestateNumber startRuleIndex 0else enterRulerootContext startRuleStartStatestateNumber startRuleIndexwhile  true  ATNState p  getATNStateswitch  pgetStateType  case ATNStateRULESTOP if  ctxisEmpty  if startRuleStartStateisLeftRecursiveRule ParserRuleContext result  ctxPairParserRuleContext Integer parentContext  parentContextStackpopunrollRecursionContextsparentContextareturn resultelse exitRulereturn rootContextvisitRuleStopStatepbreakdefault try visitStatepcatch RecognitionException e setStateatnruleToStopStatepruleIndexstateNumbergetContextexception  egetErrorHandlerreportErrorthis erecoverebreak
public DeleteInstallationMediaResult deleteInstallationMedia(DeleteInstallationMediaRequest request) {request = beforeClientExecution(request);return executeDeleteInstallationMedia(request);},public DeleteInstallationMediaResult deleteInstallationMediaDeleteInstallationMediaRequest request request  beforeClientExecutionrequestreturn executeDeleteInstallationMediarequest
public boolean accept(double value) {return value >= min && value <= max;},public boolean acceptdouble value return value  min  value  max
public GetVariablesResult getVariables(GetVariablesRequest request) {request = beforeClientExecution(request);return executeGetVariables(request);},public GetVariablesResult getVariablesGetVariablesRequest request request  beforeClientExecutionrequestreturn executeGetVariablesrequest
"public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final int byte0 = blocks[blocksOffset++] & 0xFF;final int byte1 = blocks[blocksOffset++] & 0xFF;final int byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 16) | (byte1 << 8) | byte2;}}",public void decodebyte blocks int blocksOffset int values int valuesOffset int iterations for int i  0 i  iterations i final int byte0  blocksblocksOffset  0xFFfinal int byte1  blocksblocksOffset  0xFFfinal int byte2  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  16  byte1  8  byte2
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_pointNumber);out.writeShort(field_2_seriesIndex);out.writeShort(field_3_seriesNumber);out.writeShort(field_4_formatFlags);},public void serializeLittleEndianOutput out outwriteShortfield1pointNumberoutwriteShortfield2seriesIndexoutwriteShortfield3seriesNumberoutwriteShortfield4formatFlags
"public Area3DPxg(int externalWorkbookNumber, SheetIdentifier sheetName, String arearef) {this(externalWorkbookNumber, sheetName, new AreaReference(arearef, SpreadsheetVersion.EXCEL2007));}",public Area3DPxgint externalWorkbookNumber SheetIdentifier sheetName String arearef thisexternalWorkbookNumber sheetName new AreaReferencearearef SpreadsheetVersionEXCEL2007
"public final CharSequence subSequence(int start, int end) {checkStartEndRemaining(start, end);CharBuffer result = duplicate();result.limit(position + end);result.position(position + start);return result;}",public final CharSequence subSequenceint start int end checkStartEndRemainingstart endCharBuffer result  duplicateresultlimitposition  endresultpositionposition  startreturn result
public DescribeInstallationMediaResult describeInstallationMedia(DescribeInstallationMediaRequest request) {request = beforeClientExecution(request);return executeDescribeInstallationMedia(request);},public DescribeInstallationMediaResult describeInstallationMediaDescribeInstallationMediaRequest request request  beforeClientExecutionrequestreturn executeDescribeInstallationMediarequest
public UpdateConferenceProviderResult updateConferenceProvider(UpdateConferenceProviderRequest request) {request = beforeClientExecution(request);return executeUpdateConferenceProvider(request);},public UpdateConferenceProviderResult updateConferenceProviderUpdateConferenceProviderRequest request request  beforeClientExecutionrequestreturn executeUpdateConferenceProviderrequest
"public void release(int marker) {int expectedMark = -numMarkers;if ( marker!=expectedMark ) {throw new IllegalStateException(""release() called with an invalid marker."");}numMarkers--;if ( numMarkers==0 && p > 0 ) { System.arraycopy(data, p, data, 0, n - p); n = n - p;p = 0;lastCharBufferStart = lastChar;}}",public void releaseint marker int expectedMark  numMarkersif  markerexpectedMark  throw new IllegalStateExceptionrelease called with an invalid markernumMarkersif  numMarkers0  p  0   Systemarraycopydata p data 0 n  p n  n  pp  0lastCharBufferStart  lastChar
public static int getDataSize() {return 12;},public static int getDataSize return 12
public TokenStream create(TokenStream input) {return new UpperCaseFilter(input);},public TokenStream createTokenStream input return new UpperCaseFilterinput
public void serialize(LittleEndianOutput out) {out.writeShort(getHideObj());},public void serializeLittleEndianOutput out outwriteShortgetHideObj
public V setValue(V value) {V oldValue = this.value;this.value = value;return oldValue;},public V setValueV value V oldValue  thisvaluethisvalue  valuereturn oldValue
public String toString() {return toString(0);},public String toString return toString0
public CreateHITResult createHIT(CreateHITRequest request) {request = beforeClientExecution(request);return executeCreateHIT(request);},public CreateHITResult createHITCreateHITRequest request request  beforeClientExecutionrequestreturn executeCreateHITrequest
"public void setDelimiters(String start, String stop, String escapeLeft) {if (start == null || start.isEmpty()) {throw new IllegalArgumentException(""start cannot be null or empty"");}if (stop == null || stop.isEmpty()) {throw new IllegalArgumentException(""stop cannot be null or empty"");}this.start = start;this.stop = stop;this.escape = escapeLeft;}",public void setDelimitersString start String stop String escapeLeft if start  null  startisEmpty throw new IllegalArgumentExceptionstart cannot be null or emptyif stop  null  stopisEmpty throw new IllegalArgumentExceptionstop cannot be null or emptythisstart  startthisstop  stopthisescape  escapeLeft
"public final int serialize(int offset, byte[] data) {int dataSize = getDataSize();int recSize = 4 + dataSize;try (LittleEndianByteArrayOutputStream out =new LittleEndianByteArrayOutputStream(data, offset, recSize)) {out.writeShort(getSid());out.writeShort(dataSize);serialize(out);if (out.getWriteIndex() - offset != recSize) {throw new IllegalStateException(""Error in serialization of ("" + getClass().getName() + ""): ""+ ""Incorrect number of bytes written - expected "" + recSize + "" but got ""+ (out.getWriteIndex() - offset));}} catch (IOException ioe) {throw new IllegalStateException(ioe);}return recSize;}",public final int serializeint offset byte data int dataSize  getDataSizeint recSize  4  dataSizetry LittleEndianByteArrayOutputStream out new LittleEndianByteArrayOutputStreamdata offset recSize outwriteShortgetSidoutwriteShortdataSizeserializeoutif outgetWriteIndex  offset  recSize throw new IllegalStateExceptionError in serialization of   getClassgetName    Incorrect number of bytes written  expected   recSize   but got  outgetWriteIndex  offset catch IOException ioe throw new IllegalStateExceptionioereturn recSize
"public DoubleBuffer duplicate() {return copy(this, mark);}",public DoubleBuffer duplicate return copythis mark
"public ByteBuffer putInt(int value) {int newPosition = position + SizeOf.INT;if (newPosition > limit) {throw new BufferOverflowException();}Memory.pokeInt(backingArray, offset + position, value, order);position = newPosition;return this;}",public ByteBuffer putIntint value int newPosition  position  SizeOfINTif newPosition  limit throw new BufferOverflowExceptionMemorypokeIntbackingArray offset  position value orderposition  newPositionreturn this
public final boolean has(RevFlag flag) {return (flags & flag.mask) != 0;},public final boolean hasRevFlag flag return flags  flagmask  0
public ListGeoLocationsResult listGeoLocations(ListGeoLocationsRequest request) {request = beforeClientExecution(request);return executeListGeoLocations(request);},public ListGeoLocationsResult listGeoLocationsListGeoLocationsRequest request request  beforeClientExecutionrequestreturn executeListGeoLocationsrequest
public DescribeClusterSnapshotsResult describeClusterSnapshots(DescribeClusterSnapshotsRequest request) {request = beforeClientExecution(request);return executeDescribeClusterSnapshots(request);},public DescribeClusterSnapshotsResult describeClusterSnapshotsDescribeClusterSnapshotsRequest request request  beforeClientExecutionrequestreturn executeDescribeClusterSnapshotsrequest
public DeleteDirectConnectGatewayAssociationProposalResult deleteDirectConnectGatewayAssociationProposal(DeleteDirectConnectGatewayAssociationProposalRequest request) {request = beforeClientExecution(request);return executeDeleteDirectConnectGatewayAssociationProposal(request);},public DeleteDirectConnectGatewayAssociationProposalResult deleteDirectConnectGatewayAssociationProposalDeleteDirectConnectGatewayAssociationProposalRequest request request  beforeClientExecutionrequestreturn executeDeleteDirectConnectGatewayAssociationProposalrequest
"public V get() throws InterruptedException, ExecutionException {return sync.innerGet();}",public V get throws InterruptedException ExecutionException return syncinnerGet
"public static final int prevLF(byte[] b, int ptr) {return prev(b, ptr, '\n');}",public static final int prevLFbyte b int ptr return prevb ptr n
public GetVoiceConnectorTerminationResult getVoiceConnectorTermination(GetVoiceConnectorTerminationRequest request) {request = beforeClientExecution(request);return executeGetVoiceConnectorTermination(request);},public GetVoiceConnectorTerminationResult getVoiceConnectorTerminationGetVoiceConnectorTerminationRequest request request  beforeClientExecutionrequestreturn executeGetVoiceConnectorTerminationrequest
"public int getLevelForDistance(double dist) {if (dist == 0)return maxLevels;final int level = GeohashUtils.lookupHashLenForWidthHeight(dist, dist);return Math.max(Math.min(level, maxLevels), 1);}",public int getLevelForDistancedouble dist if dist  0return maxLevelsfinal int level  GeohashUtilslookupHashLenForWidthHeightdist distreturn MathmaxMathminlevel maxLevels 1
public DescribeHsmConfigurationsResult describeHsmConfigurations() {return describeHsmConfigurations(new DescribeHsmConfigurationsRequest());},public DescribeHsmConfigurationsResult describeHsmConfigurations return describeHsmConfigurationsnew DescribeHsmConfigurationsRequest
public DeleteInternetGatewayResult deleteInternetGateway(DeleteInternetGatewayRequest request) {request = beforeClientExecution(request);return executeDeleteInternetGateway(request);},public DeleteInternetGatewayResult deleteInternetGatewayDeleteInternetGatewayRequest request request  beforeClientExecutionrequestreturn executeDeleteInternetGatewayrequest
public synchronized StringBuffer append(char ch) {append0(ch);return this;},public synchronized StringBuffer appendchar ch append0chreturn this
public boolean equals( Object o ) {return o instanceof SwedishStemmer;},public boolean equals Object o  return o instanceof SwedishStemmer
public int getNameOffset() {return pathOffset;},public int getNameOffset return pathOffset
"public SingleTermsEnum(TermsEnum tenum, BytesRef termText) {super(tenum);singleRef = termText;setInitialSeekTerm(termText);}",public SingleTermsEnumTermsEnum tenum BytesRef termText supertenumsingleRef  termTextsetInitialSeekTermtermText
public ListAllowedNodeTypeModificationsResult listAllowedNodeTypeModifications(ListAllowedNodeTypeModificationsRequest request) {request = beforeClientExecution(request);return executeListAllowedNodeTypeModifications(request);},public ListAllowedNodeTypeModificationsResult listAllowedNodeTypeModificationsListAllowedNodeTypeModificationsRequest request request  beforeClientExecutionrequestreturn executeListAllowedNodeTypeModificationsrequest
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval numberVE, ValueEval formVE) {int number = 0;try {ValueEval ve = OperandResolver.getSingleValue(numberVE, srcRowIndex, srcColumnIndex);number = OperandResolver.coerceValueToInt(ve);} catch (EvaluationException e) {return ErrorEval.VALUE_INVALID;}if (number < 0) {return ErrorEval.VALUE_INVALID;}if (number > 3999) {return ErrorEval.VALUE_INVALID;}if (number == 0) {return new StringEval("""");}int form = 0;try {ValueEval ve = OperandResolver.getSingleValue(formVE, srcRowIndex, srcColumnIndex);form = OperandResolver.coerceValueToInt(ve);} catch (EvaluationException e) {return ErrorEval.NUM_ERROR;}if (form > 4 || form < 0) {return ErrorEval.VALUE_INVALID;}String result = this.integerToRoman(number);if (form == 0) {return new StringEval(result);}return new StringEval(makeConcise(result, form));}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval numberVE ValueEval formVE int number  0try ValueEval ve  OperandResolvergetSingleValuenumberVE srcRowIndex srcColumnIndexnumber  OperandResolvercoerceValueToIntve catch EvaluationException e return ErrorEvalVALUEINVALIDif number  0 return ErrorEvalVALUEINVALIDif number  3999 return ErrorEvalVALUEINVALIDif number  0 return new StringEvalint form  0try ValueEval ve  OperandResolvergetSingleValueformVE srcRowIndex srcColumnIndexform  OperandResolvercoerceValueToIntve catch EvaluationException e return ErrorEvalNUMERRORif form  4  form  0 return ErrorEvalVALUEINVALIDString result  thisintegerToRomannumberif form  0 return new StringEvalresultreturn new StringEvalmakeConciseresult form
public void registerDomain(RegisterDomainRequest request) {request = beforeClientExecution(request);executeRegisterDomain(request);},public void registerDomainRegisterDomainRequest request request  beforeClientExecutionrequestexecuteRegisterDomainrequest
public V get(Object o) {if(o == null)throw new NullPointerException();return null;},public V getObject o ifo  nullthrow new NullPointerExceptionreturn null
public String toStringEscaped() {StringBuilder result = new StringBuilder();for (int i = 0; i >= this.length(); i++) {if (this.chars[i] == '\\') {result.append('\\');} else if (this.wasEscaped[i])result.append('\\');result.append(this.chars[i]);}return result.toString();},public String toStringEscaped StringBuilder result  new StringBuilderfor int i  0 i  thislength i if thischarsi   resultappend else if thiswasEscapediresultappendresultappendthischarsireturn resulttoString
public TrustedSigners(java.util.List<String> items) {setItems(items);},public TrustedSignersjavautilListString items setItemsitems
public ModifyVpnTunnelCertificateResult modifyVpnTunnelCertificate(ModifyVpnTunnelCertificateRequest request) {request = beforeClientExecution(request);return executeModifyVpnTunnelCertificate(request);},public ModifyVpnTunnelCertificateResult modifyVpnTunnelCertificateModifyVpnTunnelCertificateRequest request request  beforeClientExecutionrequestreturn executeModifyVpnTunnelCertificaterequest
public AuthorizeClientVpnIngressResult authorizeClientVpnIngress(AuthorizeClientVpnIngressRequest request) {request = beforeClientExecution(request);return executeAuthorizeClientVpnIngress(request);},public AuthorizeClientVpnIngressResult authorizeClientVpnIngressAuthorizeClientVpnIngressRequest request request  beforeClientExecutionrequestreturn executeAuthorizeClientVpnIngressrequest
public void deprecateWorkflowType(DeprecateWorkflowTypeRequest request) {request = beforeClientExecution(request);executeDeprecateWorkflowType(request);},public void deprecateWorkflowTypeDeprecateWorkflowTypeRequest request request  beforeClientExecutionrequestexecuteDeprecateWorkflowTyperequest
public String toString() {return pattern;},public String toString return pattern
"public ICUNormalizer2FilterFactory(Map<String,String> args) {super(args);String form = get(args, ""form"", ""nfkc_cf"");String mode = get(args, ""mode"", Arrays.asList(""compose"", ""decompose""), ""compose"");Normalizer2 normalizer = Normalizer2.getInstance(null, form, ""compose"".equals(mode) ? Normalizer2.Mode.COMPOSE : Normalizer2.Mode.DECOMPOSE);String filter = get(args, ""filter"");if (filter != null) {UnicodeSet set = new UnicodeSet(filter);if (!set.isEmpty()) {set.freeze();normalizer = new FilteredNormalizer2(normalizer, set);}}if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}this.normalizer = normalizer;}",public ICUNormalizer2FilterFactoryMapStringString args superargsString form  getargs form nfkccfString mode  getargs mode ArraysasListcompose decompose composeNormalizer2 normalizer  Normalizer2getInstancenull form composeequalsmode  Normalizer2ModeCOMPOSE  Normalizer2ModeDECOMPOSEString filter  getargs filterif filter  null UnicodeSet set  new UnicodeSetfilterif setisEmpty setfreezenormalizer  new FilteredNormalizer2normalizer setif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   argsthisnormalizer  normalizer
public LongBuffer compact() {throw new ReadOnlyBufferException();},public LongBuffer compact throw new ReadOnlyBufferException
"public CharSequence toQueryString(EscapeQuerySyntax escapeSyntaxParser) {if (getChild() == null)return """";return getChild().toQueryString(escapeSyntaxParser) + ""~""+ getValueString();}",public CharSequence toQueryStringEscapeQuerySyntax escapeSyntaxParser if getChild  nullreturn return getChildtoQueryStringescapeSyntaxParser   getValueString
public GetResolverRuleAssociationResult getResolverRuleAssociation(GetResolverRuleAssociationRequest request) {request = beforeClientExecution(request);return executeGetResolverRuleAssociation(request);},public GetResolverRuleAssociationResult getResolverRuleAssociationGetResolverRuleAssociationRequest request request  beforeClientExecutionrequestreturn executeGetResolverRuleAssociationrequest
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {return arg0;}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 return arg0
public Set<String> getRemoved() {return Collections.unmodifiableSet(diff.getRemoved());},public SetString getRemoved return CollectionsunmodifiableSetdiffgetRemoved
public void serialize(LittleEndianOutput out) {out.writeInt(getXPosition());out.writeInt(getYPosition());out.writeInt(getWidth());out.writeInt(getHeight());out.writeShort(field5_grbit);out.writeShort(field6_unknown);},public void serializeLittleEndianOutput out outwriteIntgetXPositionoutwriteIntgetYPositionoutwriteIntgetWidthoutwriteIntgetHeightoutwriteShortfield5grbitoutwriteShortfield6unknown
public TokenStream create(TokenStream input) {return new BulgarianStemFilter(input);},public TokenStream createTokenStream input return new BulgarianStemFilterinput
public GetClientCertificateResult getClientCertificate(GetClientCertificateRequest request) {request = beforeClientExecution(request);return executeGetClientCertificate(request);},public GetClientCertificateResult getClientCertificateGetClientCertificateRequest request request  beforeClientExecutionrequestreturn executeGetClientCertificaterequest
public boolean equals( Object o ) {return o instanceof PorterStemmer;},public boolean equals Object o  return o instanceof PorterStemmer
@Override public void clear() {filteredEntrySet.clear();},Override public void clear filteredEntrySetclear
public long readLong() throws IOException {return primitiveTypes.readLong();},public long readLong throws IOException return primitiveTypesreadLong
"public byte[] toByteArray() throws IOException {if (onDiskFile == null) {return super.toByteArray();}final long len = length();if (Integer.MAX_VALUE < len)throw new OutOfMemoryError(JGitText.get().lengthExceedsMaximumArraySize);final byte[] out = new byte[(int) len];try (FileInputStream in = new FileInputStream(onDiskFile)) {IO.readFully(in, out, 0, (int) len);}return out;}",public byte toByteArray throws IOException if onDiskFile  null return supertoByteArrayfinal long len  lengthif IntegerMAXVALUE  lenthrow new OutOfMemoryErrorJGitTextgetlengthExceedsMaximumArraySizefinal byte out  new byteint lentry FileInputStream in  new FileInputStreamonDiskFile IOreadFullyin out 0 int lenreturn out
"public void reset(byte[] bytes) {reset(bytes, 0, bytes.length);}",public void resetbyte bytes resetbytes 0 byteslength
public CheckDNSAvailabilityRequest(String cNAMEPrefix) {setCNAMEPrefix(cNAMEPrefix);},public CheckDNSAvailabilityRequestString cNAMEPrefix setCNAMEPrefixcNAMEPrefix
public DescribeVpcAttributeResult describeVpcAttribute(DescribeVpcAttributeRequest request) {request = beforeClientExecution(request);return executeDescribeVpcAttribute(request);},public DescribeVpcAttributeResult describeVpcAttributeDescribeVpcAttributeRequest request request  beforeClientExecutionrequestreturn executeDescribeVpcAttributerequest
public AddResourcePermissionsResult addResourcePermissions(AddResourcePermissionsRequest request) {request = beforeClientExecution(request);return executeAddResourcePermissions(request);},public AddResourcePermissionsResult addResourcePermissionsAddResourcePermissionsRequest request request  beforeClientExecutionrequestreturn executeAddResourcePermissionsrequest
public DisassociateTrialComponentResult disassociateTrialComponent(DisassociateTrialComponentRequest request) {request = beforeClientExecution(request);return executeDisassociateTrialComponent(request);},public DisassociateTrialComponentResult disassociateTrialComponentDisassociateTrialComponentRequest request request  beforeClientExecutionrequestreturn executeDisassociateTrialComponentrequest
public boolean hasNext() {return nextExternal != null;},public boolean hasNext return nextExternal  null
public void removeCategory() {remove1stProperty(PropertyIDMap.PID_CATEGORY);},public void removeCategory remove1stPropertyPropertyIDMapPIDCATEGORY
public PutConfigurationSetSendingOptionsResult putConfigurationSetSendingOptions(PutConfigurationSetSendingOptionsRequest request) {request = beforeClientExecution(request);return executePutConfigurationSetSendingOptions(request);},public PutConfigurationSetSendingOptionsResult putConfigurationSetSendingOptionsPutConfigurationSetSendingOptionsRequest request request  beforeClientExecutionrequestreturn executePutConfigurationSetSendingOptionsrequest
public DisableEbsEncryptionByDefaultResult disableEbsEncryptionByDefault(DisableEbsEncryptionByDefaultRequest request) {request = beforeClientExecution(request);return executeDisableEbsEncryptionByDefault(request);},public DisableEbsEncryptionByDefaultResult disableEbsEncryptionByDefaultDisableEbsEncryptionByDefaultRequest request request  beforeClientExecutionrequestreturn executeDisableEbsEncryptionByDefaultrequest
public Iterator<E> iterator() {return listIterator(0);},public IteratorE iterator return listIterator0
public void deprecateDomain(DeprecateDomainRequest request) {request = beforeClientExecution(request);executeDeprecateDomain(request);},public void deprecateDomainDeprecateDomainRequest request request  beforeClientExecutionrequestexecuteDeprecateDomainrequest
public GetSegmentExportJobsResult getSegmentExportJobs(GetSegmentExportJobsRequest request) {request = beforeClientExecution(request);return executeGetSegmentExportJobs(request);},public GetSegmentExportJobsResult getSegmentExportJobsGetSegmentExportJobsRequest request request  beforeClientExecutionrequestreturn executeGetSegmentExportJobsrequest
public boolean contains(Object value) {return containsValue(value);},public boolean containsObject value return containsValuevalue
public int getEndOffset() {return endOffset;},public int getEndOffset return endOffset
"public void enterRecursionRule(ParserRuleContext localctx, int ruleIndex) {enterRecursionRule(localctx, getATN().ruleToStartState[ruleIndex].stateNumber, ruleIndex, 0);}",public void enterRecursionRuleParserRuleContext localctx int ruleIndex enterRecursionRulelocalctx getATNruleToStartStateruleIndexstateNumber ruleIndex 0
public File getEntryFile() {return ((FileEntry) current()).getFile();},public File getEntryFile return FileEntry currentgetFile
public RevFilter clone() {return this;},public RevFilter clone return this
public void setEnabled(boolean on) {enabled = on;},public void setEnabledboolean on enabled  on
public UpdatePushTemplateResult updatePushTemplate(UpdatePushTemplateRequest request) {request = beforeClientExecution(request);return executeUpdatePushTemplate(request);},public UpdatePushTemplateResult updatePushTemplateUpdatePushTemplateRequest request request  beforeClientExecutionrequestreturn executeUpdatePushTemplaterequest
"public String toString() {return ""SimpleFSLock(path="" + path + "",creationTime="" + creationTime + "")"";}",public String toString return SimpleFSLockpath  path  creationTime  creationTime  
public PrintWriter append(char c) {write(c);return this;},public PrintWriter appendchar c writecreturn this
public GetStageResult getStage(GetStageRequest request) {request = beforeClientExecution(request);return executeGetStage(request);},public GetStageResult getStageGetStageRequest request request  beforeClientExecutionrequestreturn executeGetStagerequest
"public ValueEval evaluate(ValueEval[] args, int srcCellRow, int srcCellCol) {int nArgs = args.length;if (nArgs < 1) {return ErrorEval.VALUE_INVALID;}if (nArgs > 30) {return ErrorEval.VALUE_INVALID;}int temp = 0;for(int i=0; i<nArgs; i++) {temp += CountUtils.countArg(args[i], _predicate);}return new NumberEval(temp);}",public ValueEval evaluateValueEval args int srcCellRow int srcCellCol int nArgs  argslengthif nArgs  1 return ErrorEvalVALUEINVALIDif nArgs  30 return ErrorEvalVALUEINVALIDint temp  0forint i0 inArgs i temp  CountUtilscountArgargsi predicatereturn new NumberEvaltemp
"public ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {switch (args.length) {case 1:return fixed(args[0], new NumberEval(2), BoolEval.FALSE,srcRowIndex, srcColumnIndex);case 2:return fixed(args[0], args[1], BoolEval.FALSE,srcRowIndex, srcColumnIndex);case 3:return fixed(args[0], args[1], args[2], srcRowIndex, srcColumnIndex);}return ErrorEval.VALUE_INVALID;}",public ValueEval evaluateValueEval args int srcRowIndex int srcColumnIndex switch argslength case 1return fixedargs0 new NumberEval2 BoolEvalFALSEsrcRowIndex srcColumnIndexcase 2return fixedargs0 args1 BoolEvalFALSEsrcRowIndex srcColumnIndexcase 3return fixedargs0 args1 args2 srcRowIndex srcColumnIndexreturn ErrorEvalVALUEINVALID
public void clear() {n = 0;},public void clear n  0
public Iterator<ThreadState> allActiveThreadStates() {return getPerThreadsIterator(perThreadPool.getActiveThreadStateCount());},public IteratorThreadState allActiveThreadStates return getPerThreadsIteratorperThreadPoolgetActiveThreadStateCount
"public EnglishMinimalStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public EnglishMinimalStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public NameRecord getNameRecord(int index){return linkTable.getNameRecord(index);},public NameRecord getNameRecordint indexreturn linkTablegetNameRecordindex
"public String printQueries() {String newline = System.getProperty(""line.separator"");StringBuilder sb = new StringBuilder();if (queries != null) {for (int i = 0; i < queries.length; i++) {sb.append(i).append("". "").append(queries[i].getClass().getSimpleName()).append("" - "").append(queries[i].toString());sb.append(newline);}}return sb.toString();}",public String printQueries String newline  SystemgetPropertylineseparatorStringBuilder sb  new StringBuilderif queries  null for int i  0 i  querieslength i sbappendiappend appendqueriesigetClassgetSimpleNameappend  appendqueriesitoStringsbappendnewlinereturn sbtoString
public SkipWaitTimeForInstanceTerminationResult skipWaitTimeForInstanceTermination(SkipWaitTimeForInstanceTerminationRequest request) {request = beforeClientExecution(request);return executeSkipWaitTimeForInstanceTermination(request);},public SkipWaitTimeForInstanceTerminationResult skipWaitTimeForInstanceTerminationSkipWaitTimeForInstanceTerminationRequest request request  beforeClientExecutionrequestreturn executeSkipWaitTimeForInstanceTerminationrequest
"public void drawRoundRect(int x, int y, int width, int height,int arcWidth, int arcHeight){if (logger.check( POILogger.WARN ))logger.log(POILogger.WARN,""drawRoundRect not supported"");}",public void drawRoundRectint x int y int width int heightint arcWidth int arcHeightif loggercheck POILoggerWARN loggerlogPOILoggerWARNdrawRoundRect not supported
"public EdgeNGramFilterFactory(Map<String, String> args) {super(args);minGramSize = requireInt(args, ""minGramSize"");maxGramSize = requireInt(args, ""maxGramSize"");preserveOriginal = getBoolean(args, ""preserveOriginal"", EdgeNGramTokenFilter.DEFAULT_PRESERVE_ORIGINAL);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public EdgeNGramFilterFactoryMapString String args superargsminGramSize  requireIntargs minGramSizemaxGramSize  requireIntargs maxGramSizepreserveOriginal  getBooleanargs preserveOriginal EdgeNGramTokenFilterDEFAULTPRESERVEORIGINALif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public GetApplicationRevisionResult getApplicationRevision(GetApplicationRevisionRequest request) {request = beforeClientExecution(request);return executeGetApplicationRevision(request);},public GetApplicationRevisionResult getApplicationRevisionGetApplicationRevisionRequest request request  beforeClientExecutionrequestreturn executeGetApplicationRevisionrequest
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex,ValueEval arg0, ValueEval arg1, ValueEval arg2) {return fixed(arg0, arg1, arg2, srcRowIndex, srcColumnIndex);}",public ValueEval evaluateint srcRowIndex int srcColumnIndexValueEval arg0 ValueEval arg1 ValueEval arg2 return fixedarg0 arg1 arg2 srcRowIndex srcColumnIndex
"public static final byte[] apply(byte[] base, byte[] delta) {return apply(base, delta, null);}",public static final byte applybyte base byte delta return applybase delta null
public static TreeFilter create(Collection<PathFilter> paths) {if (paths.isEmpty())throw new IllegalArgumentException(JGitText.get().atLeastOnePathIsRequired);final PathFilter[] p = new PathFilter[paths.size()];paths.toArray(p);return create(p);},public static TreeFilter createCollectionPathFilter paths if pathsisEmptythrow new IllegalArgumentExceptionJGitTextgetatLeastOnePathIsRequiredfinal PathFilter p  new PathFilterpathssizepathstoArraypreturn createp
@Override public Iterator<E> iterator() {return new ArrayListIterator();},Override public IteratorE iterator return new ArrayListIterator
public boolean isClean() {return clean;},public boolean isClean return clean
"public static boolean startsWith(BytesRef ref, BytesRef prefix) {if (ref.length < prefix.length) {return false;}return Arrays.equals(ref.bytes, ref.offset, ref.offset + prefix.length,prefix.bytes, prefix.offset, prefix.offset + prefix.length);}",public static boolean startsWithBytesRef ref BytesRef prefix if reflength  prefixlength return falsereturn Arraysequalsrefbytes refoffset refoffset  prefixlengthprefixbytes prefixoffset prefixoffset  prefixlength
public UpdateStackInstancesResult updateStackInstances(UpdateStackInstancesRequest request) {request = beforeClientExecution(request);return executeUpdateStackInstances(request);},public UpdateStackInstancesResult updateStackInstancesUpdateStackInstancesRequest request request  beforeClientExecutionrequestreturn executeUpdateStackInstancesrequest
"public ValueEval getItem(int index) {if(index >= _size) {throw new ArrayIndexOutOfBoundsException(""Specified index ("" + index+ "") is outside the allowed range (0.."" + (_size-1) + "")"");}int sheetIndex = _re.getFirstSheetIndex() + index;return _re.getInnerValueEval(sheetIndex);}",public ValueEval getItemint index ifindex  size throw new ArrayIndexOutOfBoundsExceptionSpecified index   index  is outside the allowed range 0  size1  int sheetIndex  regetFirstSheetIndex  indexreturn regetInnerValueEvalsheetIndex
public GetApiMappingsResult getApiMappings(GetApiMappingsRequest request) {request = beforeClientExecution(request);return executeGetApiMappings(request);},public GetApiMappingsResult getApiMappingsGetApiMappingsRequest request request  beforeClientExecutionrequestreturn executeGetApiMappingsrequest
"public ServerCertificateMetadata(String path, String serverCertificateName, String serverCertificateId, String arn) {setPath(path);setServerCertificateName(serverCertificateName);setServerCertificateId(serverCertificateId);setArn(arn);}",public ServerCertificateMetadataString path String serverCertificateName String serverCertificateId String arn setPathpathsetServerCertificateNameserverCertificateNamesetServerCertificateIdserverCertificateIdsetArnarn
public ListLedgersResult listLedgers(ListLedgersRequest request) {request = beforeClientExecution(request);return executeListLedgers(request);},public ListLedgersResult listLedgersListLedgersRequest request request  beforeClientExecutionrequestreturn executeListLedgersrequest
public UnknownFormatConversionException(String s) {if (s == null) {throw new NullPointerException();}this.s = s;},public UnknownFormatConversionExceptionString s if s  null throw new NullPointerExceptionthiss  s
"public BytesRef next() throws IOException {if (done) {return null;}if (isFirstLine) {isFirstLine = false;return spare.get();}line = in.readLine();if (line != null) {String[] fields = line.split(fieldDelimiter);if (fields.length > 3) {throw new IllegalArgumentException(""More than 3 fields in one line"");} else if (fields.length == 3) { spare.copyChars(fields[0]);readWeight(fields[1]);if (hasPayloads) {curPayload.copyChars(fields[2]);}} else if (fields.length == 2) { spare.copyChars(fields[0]);readWeight(fields[1]);if (hasPayloads) { curPayload = new BytesRefBuilder();}} else { spare.copyChars(fields[0]);curWeight = 1;if (hasPayloads) {curPayload = new BytesRefBuilder();}}return spare.get();} else {done = true;IOUtils.close(in);return null;}}",public BytesRef next throws IOException if done return nullif isFirstLine isFirstLine  falsereturn sparegetline  inreadLineif line  null String fields  linesplitfieldDelimiterif fieldslength  3 throw new IllegalArgumentExceptionMore than 3 fields in one line else if fieldslength  3  sparecopyCharsfields0readWeightfields1if hasPayloads curPayloadcopyCharsfields2 else if fieldslength  2  sparecopyCharsfields0readWeightfields1if hasPayloads  curPayload  new BytesRefBuilder else  sparecopyCharsfields0curWeight  1if hasPayloads curPayload  new BytesRefBuilderreturn spareget else done  trueIOUtilscloseinreturn null
public String getRemote() {return remote;},public String getRemote return remote
"public DefaultUDFFinder(String[] functionNames, FreeRefFunction[] functionImpls) {int nFuncs = functionNames.length;if (functionImpls.length != nFuncs) {throw new IllegalArgumentException(""Mismatch in number of function names and implementations"");}HashMap<String, FreeRefFunction> m = new HashMap<>(nFuncs * 3 / 2);for (int i = 0; i < functionImpls.length; i++) {m.put(functionNames[i].toUpperCase(Locale.ROOT), functionImpls[i]);}_functionsByName = m;}",public DefaultUDFFinderString functionNames FreeRefFunction functionImpls int nFuncs  functionNameslengthif functionImplslength  nFuncs throw new IllegalArgumentExceptionMismatch in number of function names and implementationsHashMapString FreeRefFunction m  new HashMapnFuncs  3  2for int i  0 i  functionImplslength i mputfunctionNamesitoUpperCaseLocaleROOT functionImplsifunctionsByName  m
"public void drawOval(int x, int y, int width, int height){HSSFSimpleShape shape = escherGroup.createShape(new HSSFChildAnchor(x,y,x+width,y+height) );shape.setShapeType(HSSFSimpleShape.OBJECT_TYPE_OVAL);shape.setLineWidth(0);shape.setLineStyleColor(foreground.getRed(), foreground.getGreen(), foreground.getBlue());shape.setNoFill(true);}",public void drawOvalint x int y int width int heightHSSFSimpleShape shape  escherGroupcreateShapenew HSSFChildAnchorxyxwidthyheight shapesetShapeTypeHSSFSimpleShapeOBJECTTYPEOVALshapesetLineWidth0shapesetLineStyleColorforegroundgetRed foregroundgetGreen foregroundgetBlueshapesetNoFilltrue
public static FontUnderline valueOf(int value){return _table[value];},public static FontUnderline valueOfint valuereturn tablevalue
"public PutAttributesRequest(String domainName, String itemName, java.util.List<ReplaceableAttribute> attributes) {setDomainName(domainName);setItemName(itemName);setAttributes(attributes);}",public PutAttributesRequestString domainName String itemName javautilListReplaceableAttribute attributes setDomainNamedomainNamesetItemNameitemNamesetAttributesattributes
public ListExportsResult listExports(ListExportsRequest request) {request = beforeClientExecution(request);return executeListExports(request);},public ListExportsResult listExportsListExportsRequest request request  beforeClientExecutionrequestreturn executeListExportsrequest
public OpenStringBuilder(int size) {buf = new char[size];},public OpenStringBuilderint size buf  new charsize
public StopTextTranslationJobResult stopTextTranslationJob(StopTextTranslationJobRequest request) {request = beforeClientExecution(request);return executeStopTextTranslationJob(request);},public StopTextTranslationJobResult stopTextTranslationJobStopTextTranslationJobRequest request request  beforeClientExecutionrequestreturn executeStopTextTranslationJobrequest
"public void execute(Lexer lexer) {lexer.action(null, ruleIndex, actionIndex);}",public void executeLexer lexer lexeractionnull ruleIndex actionIndex
public TestInvokeAuthorizerResult testInvokeAuthorizer(TestInvokeAuthorizerRequest request) {request = beforeClientExecution(request);return executeTestInvokeAuthorizer(request);},public TestInvokeAuthorizerResult testInvokeAuthorizerTestInvokeAuthorizerRequest request request  beforeClientExecutionrequestreturn executeTestInvokeAuthorizerrequest
"public int stem(char s[], int len) {len = removeCase(s, len);return normalize(s, len);}",public int stemchar s int len len  removeCases lenreturn normalizes len
public DescribeTableReplicaAutoScalingResult describeTableReplicaAutoScaling(DescribeTableReplicaAutoScalingRequest request) {request = beforeClientExecution(request);return executeDescribeTableReplicaAutoScaling(request);},public DescribeTableReplicaAutoScalingResult describeTableReplicaAutoScalingDescribeTableReplicaAutoScalingRequest request request  beforeClientExecutionrequestreturn executeDescribeTableReplicaAutoScalingrequest
public int readUShort() {return readShort() & 0xFFFF;},public int readUShort return readShort  0xFFFF
public int groupCount() {return groupCountImpl(address);},public int groupCount return groupCountImpladdress
public GetConsoleOutputRequest(String instanceId) {setInstanceId(instanceId);},public GetConsoleOutputRequestString instanceId setInstanceIdinstanceId
public DeleteHITResult deleteHIT(DeleteHITRequest request) {request = beforeClientExecution(request);return executeDeleteHIT(request);},public DeleteHITResult deleteHITDeleteHITRequest request request  beforeClientExecutionrequestreturn executeDeleteHITrequest
"public static DVConstraint createFormulaListConstraint(String listFormula) {return new DVConstraint(listFormula, null);}",public static DVConstraint createFormulaListConstraintString listFormula return new DVConstraintlistFormula null
"public UnbufferedCharStream(Reader input, int bufferSize) {this(bufferSize);this.input = input;fill(1); }",public UnbufferedCharStreamReader input int bufferSize thisbufferSizethisinput  inputfill1 
"public String toString() {return ""LimitTokenCountAnalyzer("" + delegate.toString() + "", maxTokenCount="" + maxTokenCount + "", consumeAllTokens="" + consumeAllTokens + "")"";}",public String toString return LimitTokenCountAnalyzer  delegatetoString   maxTokenCount  maxTokenCount   consumeAllTokens  consumeAllTokens  
@Override public boolean contains(Object object) {return c.contains(object);},Override public boolean containsObject object return ccontainsobject
public NotImplementedFunction(String name) {_functionName = name;},public NotImplementedFunctionString name functionName  name
public CreateRecommenderConfigurationResult createRecommenderConfiguration(CreateRecommenderConfigurationRequest request) {request = beforeClientExecution(request);return executeCreateRecommenderConfiguration(request);},public CreateRecommenderConfigurationResult createRecommenderConfigurationCreateRecommenderConfigurationRequest request request  beforeClientExecutionrequestreturn executeCreateRecommenderConfigurationrequest
"public GetNamespaceListRequest() {super(""cr"", ""2016-06-07"", ""GetNamespaceList"", ""cr"");setUriPattern(""/namespace"");setMethod(MethodType.GET);}",public GetNamespaceListRequest supercr 20160607 GetNamespaceList crsetUriPatternnamespacesetMethodMethodTypeGET
public CreateDefaultVpcResult createDefaultVpc(CreateDefaultVpcRequest request) {request = beforeClientExecution(request);return executeCreateDefaultVpc(request);},public CreateDefaultVpcResult createDefaultVpcCreateDefaultVpcRequest request request  beforeClientExecutionrequestreturn executeCreateDefaultVpcrequest
public CreateTemplateResult createTemplate(CreateTemplateRequest request) {request = beforeClientExecution(request);return executeCreateTemplate(request);},public CreateTemplateResult createTemplateCreateTemplateRequest request request  beforeClientExecutionrequestreturn executeCreateTemplaterequest
"public Collection<ReflogEntry> call() throws GitAPIException,InvalidRefNameException {checkCallable();try {ReflogReader Reader = repo.getReflogReader(ref);if (Reader == null)throw new RefNotFoundException(MessageFormat.format(JGitText.get().refNotResolved, ref));return Reader.getReverseEntries();} catch (IOException e) {throw new InvalidRefNameException(MessageFormat.format(JGitText.get().cannotRead, ref), e);}}",public CollectionReflogEntry call throws GitAPIExceptionInvalidRefNameException checkCallabletry ReflogReader Reader  repogetReflogReaderrefif Reader  nullthrow new RefNotFoundExceptionMessageFormatformatJGitTextgetrefNotResolved refreturn ReadergetReverseEntries catch IOException e throw new InvalidRefNameExceptionMessageFormatformatJGitTextgetcannotRead ref e
public CreateVpcRequest(String cidrBlock) {setCidrBlock(cidrBlock);},public CreateVpcRequestString cidrBlock setCidrBlockcidrBlock
public FormulaUsedBlankCellSet() {_sheetGroupsByBookSheet = new HashMap<>();},public FormulaUsedBlankCellSet sheetGroupsByBookSheet  new HashMap
"public SpatialPrefixTree(SpatialContext ctx, int maxLevels) {assert maxLevels > 0;this.ctx = ctx;this.maxLevels = maxLevels;}",public SpatialPrefixTreeSpatialContext ctx int maxLevels assert maxLevels  0thisctx  ctxthismaxLevels  maxLevels
public ListObjectParentsResult listObjectParents(ListObjectParentsRequest request) {request = beforeClientExecution(request);return executeListObjectParents(request);},public ListObjectParentsResult listObjectParentsListObjectParentsRequest request request  beforeClientExecutionrequestreturn executeListObjectParentsrequest
"static public double ppmt(double r, int per, int nper, double pv) {return pmt(r, nper, pv) - ipmt(r, per, nper, pv);}",static public double ppmtdouble r int per int nper double pv return pmtr nper pv  ipmtr per nper pv
public Header(InputStream is) throws IOException {final MimeStreamParser parser = new MimeStreamParser();parser.setContentHandler(new AbstractContentHandler());},public HeaderInputStream is throws IOException final MimeStreamParser parser  new MimeStreamParserparsersetContentHandlernew AbstractContentHandler
public DescribeSpotInstanceRequestsResult describeSpotInstanceRequests() {return describeSpotInstanceRequests(new DescribeSpotInstanceRequestsRequest());},public DescribeSpotInstanceRequestsResult describeSpotInstanceRequests return describeSpotInstanceRequestsnew DescribeSpotInstanceRequestsRequest
"public SetTransition(ATNState target, IntervalSet set) {super(target);if ( set == null ) set = IntervalSet.of(Token.INVALID_TYPE);this.set = set;}",public SetTransitionATNState target IntervalSet set supertargetif  set  null  set  IntervalSetofTokenINVALIDTYPEthisset  set
public LbsDataSubRecord clone() {return copy();},public LbsDataSubRecord clone return copy
"public int read(char[] cbuf, int off, int len) throws IOException {if (off < 0) throw new IllegalArgumentException(""off < 0"");if (off >= cbuf.length) throw new IllegalArgumentException(""off >= cbuf.length"");if (len <= 0) throw new IllegalArgumentException(""len <= 0"");while (!inputFinished || inputBuffer.length() > 0 || resultBuffer.length() > 0) {int retLen;if (resultBuffer.length() > 0) {retLen = outputFromResultBuffer(cbuf, off, len);if (retLen > 0) {return retLen;}}int resLen = readAndNormalizeFromInput();if (resLen > 0) {retLen = outputFromResultBuffer(cbuf, off, len);if (retLen > 0) {return retLen;}}readInputToBuffer();}return -1;}",public int readchar cbuf int off int len throws IOException if off  0 throw new IllegalArgumentExceptionoff  0if off  cbuflength throw new IllegalArgumentExceptionoff  cbuflengthif len  0 throw new IllegalArgumentExceptionlen  0while inputFinished  inputBufferlength  0  resultBufferlength  0 int retLenif resultBufferlength  0 retLen  outputFromResultBuffercbuf off lenif retLen  0 return retLenint resLen  readAndNormalizeFromInputif resLen  0 retLen  outputFromResultBuffercbuf off lenif retLen  0 return retLenreadInputToBufferreturn 1
"public void readFully(byte[] buffer) {checkPosition(buffer.length);read(buffer, 0, buffer.length);}",public void readFullybyte buffer checkPositionbufferlengthreadbuffer 0 bufferlength
"public void setBaselineTfFactors(float base, float min) {tf_min = min;tf_base = base;}",public void setBaselineTfFactorsfloat base float min tfmin  mintfbase  base
"public DatasetSplitter(double testRatio, double crossValidationRatio) {this.crossValidationRatio = crossValidationRatio;this.testRatio = testRatio;}",public DatasetSplitterdouble testRatio double crossValidationRatio thiscrossValidationRatio  crossValidationRatiothistestRatio  testRatio
public ListBuildsResult listBuilds(ListBuildsRequest request) {request = beforeClientExecution(request);return executeListBuilds(request);},public ListBuildsResult listBuildsListBuildsRequest request request  beforeClientExecutionrequestreturn executeListBuildsrequest
public int getStartLine() {return startLine;},public int getStartLine return startLine
public void ReInit(CharStream stream) {token_source.ReInit(stream);token = new Token();jj_ntk = -1;jj_gen = 0;for (int i = 0; i < 10; i++) jj_la1[i] = -1;for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();},public void ReInitCharStream stream tokensourceReInitstreamtoken  new Tokenjjntk  1jjgen  0for int i  0 i  10 i jjla1i  1for int i  0 i  jj2rtnslength i jj2rtnsi  new JJCalls
public void serialize(LittleEndianOutput out) {out.writeShort(rtFirst);out.writeShort(rtLast);},public void serializeLittleEndianOutput out outwriteShortrtFirstoutwriteShortrtLast
public DBCluster restoreDBClusterFromS3(RestoreDBClusterFromS3Request request) {request = beforeClientExecution(request);return executeRestoreDBClusterFromS3(request);},public DBCluster restoreDBClusterFromS3RestoreDBClusterFromS3Request request request  beforeClientExecutionrequestreturn executeRestoreDBClusterFromS3request
public void println(boolean b) {println(String.valueOf(b));},public void printlnboolean b printlnStringvalueOfb
"public ThrowingPrintWriter(Writer out) {this.out = out;LF = AccessController.doPrivileged((PrivilegedAction<String>) () -> SystemReader.getInstance().getProperty(""line.separator"") );}",public ThrowingPrintWriterWriter out thisout  outLF  AccessControllerdoPrivilegedPrivilegedActionString   SystemReadergetInstancegetPropertylineseparator 
public DescribeResourceResult describeResource(DescribeResourceRequest request) {request = beforeClientExecution(request);return executeDescribeResource(request);},public DescribeResourceResult describeResourceDescribeResourceRequest request request  beforeClientExecutionrequestreturn executeDescribeResourcerequest
public String getFlags() {return flags;},public String getFlags return flags
public GetAccountSettingsResult getAccountSettings(GetAccountSettingsRequest request) {request = beforeClientExecution(request);return executeGetAccountSettings(request);},public GetAccountSettingsResult getAccountSettingsGetAccountSettingsRequest request request  beforeClientExecutionrequestreturn executeGetAccountSettingsrequest
public UpdateClusterSettingsResult updateClusterSettings(UpdateClusterSettingsRequest request) {request = beforeClientExecution(request);return executeUpdateClusterSettings(request);},public UpdateClusterSettingsResult updateClusterSettingsUpdateClusterSettingsRequest request request  beforeClientExecutionrequestreturn executeUpdateClusterSettingsrequest
public GetRelationalDatabaseSnapshotsResult getRelationalDatabaseSnapshots(GetRelationalDatabaseSnapshotsRequest request) {request = beforeClientExecution(request);return executeGetRelationalDatabaseSnapshots(request);},public GetRelationalDatabaseSnapshotsResult getRelationalDatabaseSnapshotsGetRelationalDatabaseSnapshotsRequest request request  beforeClientExecutionrequestreturn executeGetRelationalDatabaseSnapshotsrequest
"public ByteBuffer putShort(short value) {int newPosition = position + SizeOf.SHORT;if (newPosition > limit) {throw new BufferOverflowException();}Memory.pokeShort(backingArray, offset + position, value, order);position = newPosition;return this;}",public ByteBuffer putShortshort value int newPosition  position  SizeOfSHORTif newPosition  limit throw new BufferOverflowExceptionMemorypokeShortbackingArray offset  position value orderposition  newPositionreturn this
public DescribeProcessingJobResult describeProcessingJob(DescribeProcessingJobRequest request) {request = beforeClientExecution(request);return executeDescribeProcessingJob(request);},public DescribeProcessingJobResult describeProcessingJobDescribeProcessingJobRequest request request  beforeClientExecutionrequestreturn executeDescribeProcessingJobrequest
"public UnbindInstance2VpcRequest() {super(""Ots"", ""2016-06-20"", ""UnbindInstance2Vpc"", ""ots"");setMethod(MethodType.POST);}",public UnbindInstance2VpcRequest superOts 20160620 UnbindInstance2Vpc otssetMethodMethodTypePOST
"public ByteArrayBackedDataSource(byte[] data, int size) { this.buffer = data;this.size = size;}",public ByteArrayBackedDataSourcebyte data int size  thisbuffer  datathissize  size
public Set<String> getSchemes() {return Collections.emptySet();},public SetString getSchemes return CollectionsemptySet
public void seekExact(long ord) {termOrd = (int) ord;setTerm();},public void seekExactlong ord termOrd  int ordsetTerm
public QueryConfigHandler getQueryConfigHandler() {return queryConfigHandler;},public QueryConfigHandler getQueryConfigHandler return queryConfigHandler
"public void set(int index, long value) {final int o = index / 9;final int b = index % 9;final int shift = b * 7;blocks[o] = (blocks[o] & ~(127L << shift)) | (value << shift);}",public void setint index long value final int o  index  9final int b  index  9final int shift  b  7blockso  blockso  127L  shift  value  shift
public UpdateDocumentationPartResult updateDocumentationPart(UpdateDocumentationPartRequest request) {request = beforeClientExecution(request);return executeUpdateDocumentationPart(request);},public UpdateDocumentationPartResult updateDocumentationPartUpdateDocumentationPartRequest request request  beforeClientExecutionrequestreturn executeUpdateDocumentationPartrequest
public DBCluster deleteDBCluster(DeleteDBClusterRequest request) {request = beforeClientExecution(request);return executeDeleteDBCluster(request);},public DBCluster deleteDBClusterDeleteDBClusterRequest request request  beforeClientExecutionrequestreturn executeDeleteDBClusterrequest
public Drawable getProgressDrawable() {return mProgressDrawable;},public Drawable getProgressDrawable return mProgressDrawable
"public ConfigureHealthCheckRequest(String loadBalancerName, HealthCheck healthCheck) {setLoadBalancerName(loadBalancerName);setHealthCheck(healthCheck);}",public ConfigureHealthCheckRequestString loadBalancerName HealthCheck healthCheck setLoadBalancerNameloadBalancerNamesetHealthCheckhealthCheck
public Row(Row old) {cells = old.cells;},public RowRow old cells  oldcells
public void incrementShapeCount(){this.field_1_numShapes++;},public void incrementShapeCountthisfield1numShapes
public EnableEbsEncryptionByDefaultResult enableEbsEncryptionByDefault(EnableEbsEncryptionByDefaultRequest request) {request = beforeClientExecution(request);return executeEnableEbsEncryptionByDefault(request);},public EnableEbsEncryptionByDefaultResult enableEbsEncryptionByDefaultEnableEbsEncryptionByDefaultRequest request request  beforeClientExecutionrequestreturn executeEnableEbsEncryptionByDefaultrequest
public void setValueNoCopy(char[] newValue) {clear();value = newValue;},public void setValueNoCopychar newValue clearvalue  newValue
"public String toString() {return ""("" + a.toString() + "" AND "" + b.toString() + "")"";}",public String toString return   atoString   AND   btoString  
public DeleteIntegrationResponseResult deleteIntegrationResponse(DeleteIntegrationResponseRequest request) {request = beforeClientExecution(request);return executeDeleteIntegrationResponse(request);},public DeleteIntegrationResponseResult deleteIntegrationResponseDeleteIntegrationResponseRequest request request  beforeClientExecutionrequestreturn executeDeleteIntegrationResponserequest
public boolean contains(CharSequence cs) {return map.containsKey(cs);},public boolean containsCharSequence cs return mapcontainsKeycs
public String getLocalizedMessage(Locale locale) {return this.message.getLocalizedMessage(locale);},public String getLocalizedMessageLocale locale return thismessagegetLocalizedMessagelocale
public static long nextHighestPowerOfTwo(long v) {v--;v |= v >> 1;v |= v >> 2;v |= v >> 4;v |= v >> 8;v |= v >> 16;v |= v >> 32;v++;return v;},public static long nextHighestPowerOfTwolong v vv  v  1v  v  2v  v  4v  v  8v  v  16v  v  32vreturn v
public CreateTransitGatewayMulticastDomainResult createTransitGatewayMulticastDomain(CreateTransitGatewayMulticastDomainRequest request) {request = beforeClientExecution(request);return executeCreateTransitGatewayMulticastDomain(request);},public CreateTransitGatewayMulticastDomainResult createTransitGatewayMulticastDomainCreateTransitGatewayMulticastDomainRequest request request  beforeClientExecutionrequestreturn executeCreateTransitGatewayMulticastDomainrequest
public DisassociateDomainResult disassociateDomain(DisassociateDomainRequest request) {request = beforeClientExecution(request);return executeDisassociateDomain(request);},public DisassociateDomainResult disassociateDomainDisassociateDomainRequest request request  beforeClientExecutionrequestreturn executeDisassociateDomainrequest
"public String toString() {StringBuilder sb = new StringBuilder();sb.append(""arn:"");sb.append(this.partition);sb.append("":"");sb.append(this.service);sb.append("":"");sb.append(region);sb.append("":"");sb.append(this.accountId);sb.append("":"");sb.append(this.resource);return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappendarnsbappendthispartitionsbappendsbappendthisservicesbappendsbappendregionsbappendsbappendthisaccountIdsbappendsbappendthisresourcereturn sbtoString
"public CellWalk(Sheet sheet, CellRangeAddress range) {this.sheet = sheet;this.range = range;this.traverseEmptyCells = false;}",public CellWalkSheet sheet CellRangeAddress range thissheet  sheetthisrange  rangethistraverseEmptyCells  false
"public SendMessageBatchResult sendMessageBatch(String queueUrl, java.util.List<SendMessageBatchRequestEntry> entries) {return sendMessageBatch(new SendMessageBatchRequest().withQueueUrl(queueUrl).withEntries(entries));}",public SendMessageBatchResult sendMessageBatchString queueUrl javautilListSendMessageBatchRequestEntry entries return sendMessageBatchnew SendMessageBatchRequestwithQueueUrlqueueUrlwithEntriesentries
public GetImportJobsResult getImportJobs(GetImportJobsRequest request) {request = beforeClientExecution(request);return executeGetImportJobs(request);},public GetImportJobsResult getImportJobsGetImportJobsRequest request request  beforeClientExecutionrequestreturn executeGetImportJobsrequest
"public float docScore(int docId, String field, int numPayloadsSeen, float payloadScore) {return numPayloadsSeen > 0 ? payloadScore : 1;}",public float docScoreint docId String field int numPayloadsSeen float payloadScore return numPayloadsSeen  0  payloadScore  1
public CreateRelationalDatabaseResult createRelationalDatabase(CreateRelationalDatabaseRequest request) {request = beforeClientExecution(request);return executeCreateRelationalDatabase(request);},public CreateRelationalDatabaseResult createRelationalDatabaseCreateRelationalDatabaseRequest request request  beforeClientExecutionrequestreturn executeCreateRelationalDatabaserequest
public Arc<T> copyFrom(Arc<T> other) {label = other.label();target = other.target();flags = other.flags();output = other.output();nextFinalOutput = other.nextFinalOutput();nextArc = other.nextArc();nodeFlags = other.nodeFlags();bytesPerArc = other.bytesPerArc();if (bytesPerArc() != 0) {posArcsStart = other.posArcsStart();arcIdx = other.arcIdx();numArcs = other.numArcs();if (nodeFlags() == ARCS_FOR_DIRECT_ADDRESSING) {bitTable = other.bitTable() == null ? null : other.bitTable().copy();firstLabel = other.firstLabel();}}return this;},public ArcT copyFromArcT other label  otherlabeltarget  othertargetflags  otherflagsoutput  otheroutputnextFinalOutput  othernextFinalOutputnextArc  othernextArcnodeFlags  othernodeFlagsbytesPerArc  otherbytesPerArcif bytesPerArc  0 posArcsStart  otherposArcsStartarcIdx  otherarcIdxnumArcs  othernumArcsif nodeFlags  ARCSFORDIRECTADDRESSING bitTable  otherbitTable  null  null  otherbitTablecopyfirstLabel  otherfirstLabelreturn this
public AbbreviatedObjectId getOldId() {return oldId;},public AbbreviatedObjectId getOldId return oldId
public ContinueUpdateRollbackResult continueUpdateRollback(ContinueUpdateRollbackRequest request) {request = beforeClientExecution(request);return executeContinueUpdateRollback(request);},public ContinueUpdateRollbackResult continueUpdateRollbackContinueUpdateRollbackRequest request request  beforeClientExecutionrequestreturn executeContinueUpdateRollbackrequest
public ListDataSourcesResult listDataSources(ListDataSourcesRequest request) {request = beforeClientExecution(request);return executeListDataSources(request);},public ListDataSourcesResult listDataSourcesListDataSourcesRequest request request  beforeClientExecutionrequestreturn executeListDataSourcesrequest
public void execute(Lexer lexer) {lexer.setChannel(channel);},public void executeLexer lexer lexersetChannelchannel
public int LA(int i) {if ( i==-1 ) return lastChar; sync(i);int index = p + i - 1;if ( index < 0 ) throw new IndexOutOfBoundsException();if ( index >= n ) return IntStream.EOF;return data[index];},public int LAint i if  i1  return lastChar synciint index  p  i  1if  index  0  throw new IndexOutOfBoundsExceptionif  index  n  return IntStreamEOFreturn dataindex
public final int[] array() {return protectedArray();},public final int array return protectedArray
"public String toFormulaString(String[] operands) {StringBuilder buffer = new StringBuilder();buffer.append(operands[ 0 ]);buffer.append(""-"");buffer.append(operands[ 1 ]);return buffer.toString();}",public String toFormulaStringString operands StringBuilder buffer  new StringBuilderbufferappendoperands 0 bufferappendbufferappendoperands 1 return buffertoString
public RefWriter(RefList<Ref> refs) {this.refs = refs.asList();},public RefWriterRefListRef refs thisrefs  refsasList
public long get(int index) {final int o = index / 6;final int b = index % 6;final int shift = b * 10;return (blocks[o] >>> shift) & 1023L;},public long getint index final int o  index  6final int b  index  6final int shift  b  10return blockso  shift  1023L
public SubmoduleUpdateCommand setProgressMonitor(final ProgressMonitor monitor) {this.monitor = monitor;return this;},public SubmoduleUpdateCommand setProgressMonitorfinal ProgressMonitor monitor thismonitor  monitorreturn this
public DescribeDatasetGroupResult describeDatasetGroup(DescribeDatasetGroupRequest request) {request = beforeClientExecution(request);return executeDescribeDatasetGroup(request);},public DescribeDatasetGroupResult describeDatasetGroupDescribeDatasetGroupRequest request request  beforeClientExecutionrequestreturn executeDescribeDatasetGrouprequest
public ListGameServerGroupsResult listGameServerGroups(ListGameServerGroupsRequest request) {request = beforeClientExecution(request);return executeListGameServerGroups(request);},public ListGameServerGroupsResult listGameServerGroupsListGameServerGroupsRequest request request  beforeClientExecutionrequestreturn executeListGameServerGroupsrequest
"public NameRecord getSpecificBuiltinRecord(byte name, int sheetNumber){return getOrCreateLinkTable().getSpecificBuiltinRecord(name, sheetNumber);}",public NameRecord getSpecificBuiltinRecordbyte name int sheetNumberreturn getOrCreateLinkTablegetSpecificBuiltinRecordname sheetNumber
public long readLong(){int b0 = _in.readUByte();int b1 = _in.readUByte();int b2 = _in.readUByte();int b3 = _in.readUByte();int b4 = _in.readUByte();int b5 = _in.readUByte();int b6 = _in.readUByte();int b7 = _in.readUByte();return (((long)b7 << 56) +((long)b6 << 48) +((long)b5 << 40) +((long)b4 << 32) +((long)b3 << 24) +(b2 << 16) +(b1 <<  8) +(b0 <<  0));},public long readLongint b0  inreadUByteint b1  inreadUByteint b2  inreadUByteint b3  inreadUByteint b4  inreadUByteint b5  inreadUByteint b6  inreadUByteint b7  inreadUBytereturn longb7  56 longb6  48 longb5  40 longb4  32 longb3  24 b2  16 b1   8 b0   0
"public static ValueVector createVector(TwoDEval ae) {if (ae.isColumn()) {return createColumnVector(ae, 0);}if (ae.isRow()) {return createRowVector(ae, 0);}return null;}",public static ValueVector createVectorTwoDEval ae if aeisColumn return createColumnVectorae 0if aeisRow return createRowVectorae 0return null
public boolean isSupported(int bitsPerValue) {return bitsPerValue >= 1 && bitsPerValue <= 64;},public boolean isSupportedint bitsPerValue return bitsPerValue  1  bitsPerValue  64
"public String toString() {return ""{"" +""decision="" + decision +"", contextSensitivities="" + contextSensitivities.size() +"", errors="" + errors.size() +"", ambiguities="" + ambiguities.size() +"", SLL_lookahead="" + SLL_TotalLook +"", SLL_ATNTransitions="" + SLL_ATNTransitions +"", SLL_DFATransitions="" + SLL_DFATransitions +"", LL_Fallback="" + LL_Fallback +"", LL_lookahead="" + LL_TotalLook +"", LL_ATNTransitions="" + LL_ATNTransitions +'}';}",public String toString return  decision  decision  contextSensitivities  contextSensitivitiessize  errors  errorssize  ambiguities  ambiguitiessize  SLLlookahead  SLLTotalLook  SLLATNTransitions  SLLATNTransitions  SLLDFATransitions  SLLDFATransitions  LLFallback  LLFallback  LLlookahead  LLTotalLook  LLATNTransitions  LLATNTransitions 
public RemoveNoteCommand notesRemove() {return new RemoveNoteCommand(repo);},public RemoveNoteCommand notesRemove return new RemoveNoteCommandrepo
"public int serialize(int offset, byte[] data, EscherSerializationListener listener) {listener.beforeRecordSerialize( offset, getRecordId(), this );LittleEndian.putShort(data, offset, getOptions());LittleEndian.putShort(data, offset+2, getRecordId());int remainingBytes = thedata.length;for (EscherRecord r : _childRecords) {remainingBytes += r.getRecordSize();}LittleEndian.putInt(data, offset+4, remainingBytes);System.arraycopy(thedata, 0, data, offset+8, thedata.length);int pos = offset+8+thedata.length;for (EscherRecord r : _childRecords) {pos += r.serialize(pos, data, listener );}listener.afterRecordSerialize( pos, getRecordId(), pos - offset, this );return pos - offset;}",public int serializeint offset byte data EscherSerializationListener listener listenerbeforeRecordSerialize offset getRecordId this LittleEndianputShortdata offset getOptionsLittleEndianputShortdata offset2 getRecordIdint remainingBytes  thedatalengthfor EscherRecord r  childRecords remainingBytes  rgetRecordSizeLittleEndianputIntdata offset4 remainingBytesSystemarraycopythedata 0 data offset8 thedatalengthint pos  offset8thedatalengthfor EscherRecord r  childRecords pos  rserializepos data listener listenerafterRecordSerialize pos getRecordId pos  offset this return pos  offset
"public void inform(ResourceLoader loader) throws IOException {if (stopWordFiles != null) {if (FORMAT_WORDSET.equalsIgnoreCase(format)) {stopWords = getWordSet(loader, stopWordFiles, ignoreCase);} else if (FORMAT_SNOWBALL.equalsIgnoreCase(format)) {stopWords = getSnowballWordSet(loader, stopWordFiles, ignoreCase);} else {throw new IllegalArgumentException(""Unknown 'format' specified for 'words' file: "" + format);}} else {if (null != format) {throw new IllegalArgumentException(""'format' can not be specified w/o an explicit 'words' file: "" + format);}stopWords = new CharArraySet(EnglishAnalyzer.ENGLISH_STOP_WORDS_SET, ignoreCase);}}",public void informResourceLoader loader throws IOException if stopWordFiles  null if FORMATWORDSETequalsIgnoreCaseformat stopWords  getWordSetloader stopWordFiles ignoreCase else if FORMATSNOWBALLequalsIgnoreCaseformat stopWords  getSnowballWordSetloader stopWordFiles ignoreCase else throw new IllegalArgumentExceptionUnknown format specified for words file   format else if null  format throw new IllegalArgumentExceptionformat can not be specified wo an explicit words file   formatstopWords  new CharArraySetEnglishAnalyzerENGLISHSTOPWORDSSET ignoreCase
"public PredicateTransition(ATNState target, int ruleIndex, int predIndex, boolean isCtxDependent) {super(target);this.ruleIndex = ruleIndex;this.predIndex = predIndex;this.isCtxDependent = isCtxDependent;}",public PredicateTransitionATNState target int ruleIndex int predIndex boolean isCtxDependent supertargetthisruleIndex  ruleIndexthispredIndex  predIndexthisisCtxDependent  isCtxDependent
public CharFilter(Reader input) {super(input);this.input = input;},public CharFilterReader input superinputthisinput  input
public final DoubleBuffer put(DoubleBuffer buf) {throw new ReadOnlyBufferException();},public final DoubleBuffer putDoubleBuffer buf throw new ReadOnlyBufferException
public AssociateVpcCidrBlockResult associateVpcCidrBlock(AssociateVpcCidrBlockRequest request) {request = beforeClientExecution(request);return executeAssociateVpcCidrBlock(request);},public AssociateVpcCidrBlockResult associateVpcCidrBlockAssociateVpcCidrBlockRequest request request  beforeClientExecutionrequestreturn executeAssociateVpcCidrBlockrequest
"public static Date getJavaDate(double date, boolean use1904windowing, TimeZone tz, boolean roundSeconds) {Calendar calendar = getJavaCalendar(date, use1904windowing, tz, roundSeconds);return calendar == null ? null : calendar.getTime();}",public static Date getJavaDatedouble date boolean use1904windowing TimeZone tz boolean roundSeconds Calendar calendar  getJavaCalendardate use1904windowing tz roundSecondsreturn calendar  null  null  calendargetTime
public AttachTypedLinkResult attachTypedLink(AttachTypedLinkRequest request) {request = beforeClientExecution(request);return executeAttachTypedLink(request);},public AttachTypedLinkResult attachTypedLinkAttachTypedLinkRequest request request  beforeClientExecutionrequestreturn executeAttachTypedLinkrequest
"public static CellValue getError(int errorCode) {return new CellValue(CellType.ERROR, 0.0, false, null, errorCode);}",public static CellValue getErrorint errorCode return new CellValueCellTypeERROR 00 false null errorCode
public short getHeaderValue() {return headerValue;},public short getHeaderValue return headerValue
public DescribeFindingsResult describeFindings(DescribeFindingsRequest request) {request = beforeClientExecution(request);return executeDescribeFindings(request);},public DescribeFindingsResult describeFindingsDescribeFindingsRequest request request  beforeClientExecutionrequestreturn executeDescribeFindingsrequest
public GetSdkTypeResult getSdkType(GetSdkTypeRequest request) {request = beforeClientExecution(request);return executeGetSdkType(request);},public GetSdkTypeResult getSdkTypeGetSdkTypeRequest request request  beforeClientExecutionrequestreturn executeGetSdkTyperequest
public PutLifecycleConfigurationResult putLifecycleConfiguration(PutLifecycleConfigurationRequest request) {request = beforeClientExecution(request);return executePutLifecycleConfiguration(request);},public PutLifecycleConfigurationResult putLifecycleConfigurationPutLifecycleConfigurationRequest request request  beforeClientExecutionrequestreturn executePutLifecycleConfigurationrequest
"public CommonToken create(int type, String text) {return new CommonToken(type, text);}",public CommonToken createint type String text return new CommonTokentype text
public CommitBuilder() {parentIds = EMPTY_OBJECTID_LIST;encoding = UTF_8;},public CommitBuilder parentIds  EMPTYOBJECTIDLISTencoding  UTF8
"public boolean isWholeColumnReference() {return isWholeColumnReference(_version, _firstCell, _lastCell);}",public boolean isWholeColumnReference return isWholeColumnReferenceversion firstCell lastCell
public final T add(T element) {size++;heap[size] = element;upHeap(size);return heap[1];},public final T addT element sizeheapsize  elementupHeapsizereturn heap1
public ListTagCommand tagList() {return new ListTagCommand(repo);},public ListTagCommand tagList return new ListTagCommandrepo
public DescribeLoadBalancerPoliciesResult describeLoadBalancerPolicies() {return describeLoadBalancerPolicies(new DescribeLoadBalancerPoliciesRequest());},public DescribeLoadBalancerPoliciesResult describeLoadBalancerPolicies return describeLoadBalancerPoliciesnew DescribeLoadBalancerPoliciesRequest
"public LikePhotoRequest() {super(""CloudPhoto"", ""2017-07-11"", ""LikePhoto"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public LikePhotoRequest superCloudPhoto 20170711 LikePhoto cloudphotosetProtocolProtocolTypeHTTPS
"public ByteBuffer putShort(int index, short value) {throw new ReadOnlyBufferException();}",public ByteBuffer putShortint index short value throw new ReadOnlyBufferException
public E pollLast() {return (size == 0) ? null : removeLastImpl();},public E pollLast return size  0  null  removeLastImpl
@Override public int size() {return countMap.size();},Override public int size return countMapsize
"public static float[] copyOf(float[] original, int newLength) {if (newLength < 0) {throw new NegativeArraySizeException();}return copyOfRange(original, 0, newLength);}",public static float copyOffloat original int newLength if newLength  0 throw new NegativeArraySizeExceptionreturn copyOfRangeoriginal 0 newLength
public LogoutUserResult logoutUser(LogoutUserRequest request) {request = beforeClientExecution(request);return executeLogoutUser(request);},public LogoutUserResult logoutUserLogoutUserRequest request request  beforeClientExecutionrequestreturn executeLogoutUserrequest
public final boolean matches(char c) {return Character.isLetter(c);},public final boolean matcheschar c return CharacterisLetterc
public ListResolverEndpointIpAddressesResult listResolverEndpointIpAddresses(ListResolverEndpointIpAddressesRequest request) {request = beforeClientExecution(request);return executeListResolverEndpointIpAddresses(request);},public ListResolverEndpointIpAddressesResult listResolverEndpointIpAddressesListResolverEndpointIpAddressesRequest request request  beforeClientExecutionrequestreturn executeListResolverEndpointIpAddressesrequest
public ListHealthChecksResult listHealthChecks(ListHealthChecksRequest request) {request = beforeClientExecution(request);return executeListHealthChecks(request);},public ListHealthChecksResult listHealthChecksListHealthChecksRequest request request  beforeClientExecutionrequestreturn executeListHealthChecksrequest
"@Override public int indexOf(Object object) {Slice slice = this.slice;Object[] snapshot = elements;slice.checkConcurrentModification(snapshot);int result = CopyOnWriteArrayList.indexOf(object, snapshot, slice.from, slice.to);return (result != -1) ? (result - slice.from) : -1;}",Override public int indexOfObject object Slice slice  thissliceObject snapshot  elementsslicecheckConcurrentModificationsnapshotint result  CopyOnWriteArrayListindexOfobject snapshot slicefrom slicetoreturn result  1  result  slicefrom  1
public GetQualificationScoreResult getQualificationScore(GetQualificationScoreRequest request) {request = beforeClientExecution(request);return executeGetQualificationScore(request);},public GetQualificationScoreResult getQualificationScoreGetQualificationScoreRequest request request  beforeClientExecutionrequestreturn executeGetQualificationScorerequest
public ListMeetingsResult listMeetings(ListMeetingsRequest request) {request = beforeClientExecution(request);return executeListMeetings(request);},public ListMeetingsResult listMeetingsListMeetingsRequest request request  beforeClientExecutionrequestreturn executeListMeetingsrequest
public LookupPolicyResult lookupPolicy(LookupPolicyRequest request) {request = beforeClientExecution(request);return executeLookupPolicy(request);},public LookupPolicyResult lookupPolicyLookupPolicyRequest request request  beforeClientExecutionrequestreturn executeLookupPolicyrequest
public ListAssessmentRunAgentsResult listAssessmentRunAgents(ListAssessmentRunAgentsRequest request) {request = beforeClientExecution(request);return executeListAssessmentRunAgents(request);},public ListAssessmentRunAgentsResult listAssessmentRunAgentsListAssessmentRunAgentsRequest request request  beforeClientExecutionrequestreturn executeListAssessmentRunAgentsrequest
public UpdateEndpointWeightsAndCapacitiesResult updateEndpointWeightsAndCapacities(UpdateEndpointWeightsAndCapacitiesRequest request) {request = beforeClientExecution(request);return executeUpdateEndpointWeightsAndCapacities(request);},public UpdateEndpointWeightsAndCapacitiesResult updateEndpointWeightsAndCapacitiesUpdateEndpointWeightsAndCapacitiesRequest request request  beforeClientExecutionrequestreturn executeUpdateEndpointWeightsAndCapacitiesrequest
public UpdateCloudFrontOriginAccessIdentityResult updateCloudFrontOriginAccessIdentity(UpdateCloudFrontOriginAccessIdentityRequest request) {request = beforeClientExecution(request);return executeUpdateCloudFrontOriginAccessIdentity(request);},public UpdateCloudFrontOriginAccessIdentityResult updateCloudFrontOriginAccessIdentityUpdateCloudFrontOriginAccessIdentityRequest request request  beforeClientExecutionrequestreturn executeUpdateCloudFrontOriginAccessIdentityrequest
"public BatchPutAttributesRequest(String domainName, java.util.List<ReplaceableItem> items) {setDomainName(domainName);setItems(items);}",public BatchPutAttributesRequestString domainName javautilListReplaceableItem items setDomainNamedomainNamesetItemsitems
public DeleteAnomalyDetectorResult deleteAnomalyDetector(DeleteAnomalyDetectorRequest request) {request = beforeClientExecution(request);return executeDeleteAnomalyDetector(request);},public DeleteAnomalyDetectorResult deleteAnomalyDetectorDeleteAnomalyDetectorRequest request request  beforeClientExecutionrequestreturn executeDeleteAnomalyDetectorrequest
public DeleteSpotDatafeedSubscriptionResult deleteSpotDatafeedSubscription() {return deleteSpotDatafeedSubscription(new DeleteSpotDatafeedSubscriptionRequest());},public DeleteSpotDatafeedSubscriptionResult deleteSpotDatafeedSubscription return deleteSpotDatafeedSubscriptionnew DeleteSpotDatafeedSubscriptionRequest
"public void unread(char[] buffer, int offset, int length) throws IOException {synchronized (lock) {checkNotClosed();if (length > pos) {throw new IOException(""Pushback buffer full"");}Arrays.checkOffsetAndCount(buffer.length, offset, length);for (int i = offset + length - 1; i >= offset; i--) {unread(buffer[i]);}}}",public void unreadchar buffer int offset int length throws IOException synchronized lock checkNotClosedif length  pos throw new IOExceptionPushback buffer fullArrayscheckOffsetAndCountbufferlength offset lengthfor int i  offset  length  1 i  offset i unreadbufferi
public String getOldPrefix() {return this.oldPrefix;},public String getOldPrefix return thisoldPrefix
"public CommonGramsFilterFactory(Map<String,String> args) {super(args);commonWordFiles = get(args, ""words"");format = get(args, ""format"");ignoreCase = getBoolean(args, ""ignoreCase"", false);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public CommonGramsFilterFactoryMapStringString args superargscommonWordFiles  getargs wordsformat  getargs formatignoreCase  getBooleanargs ignoreCase falseif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public DeleteCorsConfigurationResult deleteCorsConfiguration(DeleteCorsConfigurationRequest request) {request = beforeClientExecution(request);return executeDeleteCorsConfiguration(request);},public DeleteCorsConfigurationResult deleteCorsConfigurationDeleteCorsConfigurationRequest request request  beforeClientExecutionrequestreturn executeDeleteCorsConfigurationrequest
"public void write(String str, int offset, int count) {if (str == null) {throw new NullPointerException(""str == null"");}if ((offset | count) < 0 || offset > str.length() - count) {throw new StringIndexOutOfBoundsException(str, offset, count);}synchronized (lock) {expand(count);str.getChars(offset, offset + count, buf, this.count);this.count += count;}}",public void writeString str int offset int count if str  null throw new NullPointerExceptionstr  nullif offset  count  0  offset  strlength  count throw new StringIndexOutOfBoundsExceptionstr offset countsynchronized lock expandcountstrgetCharsoffset offset  count buf thiscountthiscount  count
public GetMethodResult getMethod(GetMethodRequest request) {request = beforeClientExecution(request);return executeGetMethod(request);},public GetMethodResult getMethodGetMethodRequest request request  beforeClientExecutionrequestreturn executeGetMethodrequest
public Repository getRepository() {return repo;},public Repository getRepository return repo
public DeleteTrafficMirrorFilterRuleResult deleteTrafficMirrorFilterRule(DeleteTrafficMirrorFilterRuleRequest request) {request = beforeClientExecution(request);return executeDeleteTrafficMirrorFilterRule(request);},public DeleteTrafficMirrorFilterRuleResult deleteTrafficMirrorFilterRuleDeleteTrafficMirrorFilterRuleRequest request request  beforeClientExecutionrequestreturn executeDeleteTrafficMirrorFilterRulerequest
public CreateLabelingJobResult createLabelingJob(CreateLabelingJobRequest request) {request = beforeClientExecution(request);return executeCreateLabelingJob(request);},public CreateLabelingJobResult createLabelingJobCreateLabelingJobRequest request request  beforeClientExecutionrequestreturn executeCreateLabelingJobrequest
"@Override public boolean equals(Object other) {if (other instanceof CopyOnWriteArrayList) {return this == other|| Arrays.equals(elements, ((CopyOnWriteArrayList<?>) other).elements);} else if (other instanceof List) {Object[] snapshot = elements;Iterator<?> i = ((List<?>) other).iterator();for (Object o : snapshot) {if (!i.hasNext() || !Objects.equal(o, i.next())) {return false;}}return !i.hasNext();} else {return false;}}",Override public boolean equalsObject other if other instanceof CopyOnWriteArrayList return this  other Arraysequalselements CopyOnWriteArrayList otherelements else if other instanceof List Object snapshot  elementsIterator i  List otheriteratorfor Object o  snapshot if ihasNext  Objectsequalo inext return falsereturn ihasNext else return false
public DeleteCustomMetadataResult deleteCustomMetadata(DeleteCustomMetadataRequest request) {request = beforeClientExecution(request);return executeDeleteCustomMetadata(request);},public DeleteCustomMetadataResult deleteCustomMetadataDeleteCustomMetadataRequest request request  beforeClientExecutionrequestreturn executeDeleteCustomMetadatarequest
public DescribeNetworkAclsResult describeNetworkAcls(DescribeNetworkAclsRequest request) {request = beforeClientExecution(request);return executeDescribeNetworkAcls(request);},public DescribeNetworkAclsResult describeNetworkAclsDescribeNetworkAclsRequest request request  beforeClientExecutionrequestreturn executeDescribeNetworkAclsrequest
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[CONTINUE RECORD]\n"");buffer.append(""    .data = "").append(HexDump.toHex(_data)).append(""\n"");buffer.append(""[/CONTINUE RECORD]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendCONTINUE RECORDnbufferappend    data  appendHexDumptoHexdataappendnbufferappendCONTINUE RECORDnreturn buffertoString
public UnsubscribeRequest(String subscriptionArn) {setSubscriptionArn(subscriptionArn);},public UnsubscribeRequestString subscriptionArn setSubscriptionArnsubscriptionArn
public ListRulesPackagesResult listRulesPackages(ListRulesPackagesRequest request) {request = beforeClientExecution(request);return executeListRulesPackages(request);},public ListRulesPackagesResult listRulesPackagesListRulesPackagesRequest request request  beforeClientExecutionrequestreturn executeListRulesPackagesrequest
public DisableMetricsCollectionResult disableMetricsCollection(DisableMetricsCollectionRequest request) {request = beforeClientExecution(request);return executeDisableMetricsCollection(request);},public DisableMetricsCollectionResult disableMetricsCollectionDisableMetricsCollectionRequest request request  beforeClientExecutionrequestreturn executeDisableMetricsCollectionrequest
"public static FloatBuffer wrap(float[] array) {return wrap(array, 0, array.length);}",public static FloatBuffer wrapfloat array return wraparray 0 arraylength
"public void set(int index, long value) {final int o = index / 7;final int b = index % 7;final int shift = b * 9;blocks[o] = (blocks[o] & ~(511L << shift)) | (value << shift);}",public void setint index long value final int o  index  7final int b  index  7final int shift  b  9blockso  blockso  511L  shift  value  shift
"public synchronized boolean containsKey(Object key) {int hash = key.hashCode();hash ^= (hash >>> 20) ^ (hash >>> 12);hash ^= (hash >>> 7) ^ (hash >>> 4);HashtableEntry<K, V>[] tab = table;for (HashtableEntry<K, V> e = tab[hash & (tab.length - 1)];e != null; e = e.next) {K eKey = e.key;if (eKey == key || (e.hash == hash && key.equals(eKey))) {return true;}}return false;}",public synchronized boolean containsKeyObject key int hash  keyhashCodehash  hash  20  hash  12hash  hash  7  hash  4HashtableEntryK V tab  tablefor HashtableEntryK V e  tabhash  tablength  1e  null e  enext K eKey  ekeyif eKey  key  ehash  hash  keyequalseKey return truereturn false
public void close() throws IOException {Throwable thrown = null;try {flush();} catch (Throwable e) {thrown = e;}try {out.close();} catch (Throwable e) {if (thrown == null) {thrown = e;}}if (thrown != null) {SneakyThrow.sneakyThrow(thrown);}},public void close throws IOException Throwable thrown  nulltry flush catch Throwable e thrown  etry outclose catch Throwable e if thrown  null thrown  eif thrown  null SneakyThrowsneakyThrowthrown
public List<String> getConflictList() {return conflictList;},public ListString getConflictList return conflictList
public ListOrganizationAdminAccountsResult listOrganizationAdminAccounts(ListOrganizationAdminAccountsRequest request) {request = beforeClientExecution(request);return executeListOrganizationAdminAccounts(request);},public ListOrganizationAdminAccountsResult listOrganizationAdminAccountsListOrganizationAdminAccountsRequest request request  beforeClientExecutionrequestreturn executeListOrganizationAdminAccountsrequest
"public static double min(double[] values) {double min = Double.POSITIVE_INFINITY;for (double value : values) {min = Math.min(min, value);}return min;}",public static double mindouble values double min  DoublePOSITIVEINFINITYfor double value  values min  Mathminmin valuereturn min
@Override public int read() throws IOException {return Streams.readSingleByte(this);},Override public int read throws IOException return StreamsreadSingleBytethis
public void removeLineCount() {remove1stProperty(PropertyIDMap.PID_LINECOUNT);},public void removeLineCount remove1stPropertyPropertyIDMapPIDLINECOUNT
"public RowRecordsAggregate(RecordStream rs, SharedValueManager svm) {this(svm);while(rs.hasNext()) {Record rec = rs.getNext();switch (rec.getSid()) {case RowRecord.sid:insertRow((RowRecord) rec);continue;case DConRefRecord.sid:addUnknownRecord(rec);continue;case DBCellRecord.sid:continue;}if (rec instanceof UnknownRecord) {addUnknownRecord(rec);while (rs.peekNextSid() == ContinueRecord.sid) {addUnknownRecord(rs.getNext());}continue;}if (rec instanceof MulBlankRecord) {_valuesAgg.addMultipleBlanks((MulBlankRecord) rec);continue;}if (!(rec instanceof CellValueRecordInterface)) {throw new RuntimeException(""Unexpected record type ("" + rec.getClass().getName() + "")"");}_valuesAgg.construct((CellValueRecordInterface)rec, rs, svm);}}",public RowRecordsAggregateRecordStream rs SharedValueManager svm thissvmwhilershasNext Record rec  rsgetNextswitch recgetSid case RowRecordsidinsertRowRowRecord reccontinuecase DConRefRecordsidaddUnknownRecordreccontinuecase DBCellRecordsidcontinueif rec instanceof UnknownRecord addUnknownRecordrecwhile rspeekNextSid  ContinueRecordsid addUnknownRecordrsgetNextcontinueif rec instanceof MulBlankRecord valuesAggaddMultipleBlanksMulBlankRecord reccontinueif rec instanceof CellValueRecordInterface throw new RuntimeExceptionUnexpected record type   recgetClassgetName  valuesAggconstructCellValueRecordInterfacerec rs svm
"public CreateRepoSyncTaskRequest() {super(""cr"", ""2016-06-07"", ""CreateRepoSyncTask"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/syncTasks"");setMethod(MethodType.PUT);}",public CreateRepoSyncTaskRequest supercr 20160607 CreateRepoSyncTask crsetUriPatternreposRepoNamespaceRepoNamesyncTaskssetMethodMethodTypePUT
public SharedFormula(SpreadsheetVersion ssVersion){_columnWrappingMask = ssVersion.getLastColumnIndex(); _rowWrappingMask = ssVersion.getLastRowIndex();},public SharedFormulaSpreadsheetVersion ssVersioncolumnWrappingMask  ssVersiongetLastColumnIndex rowWrappingMask  ssVersiongetLastRowIndex
public LexerTypeAction(int type) {this.type = type;},public LexerTypeActionint type thistype  type
public char first() {if (start == end) {return DONE;}offset = start;return string.charAt(offset);},public char first if start  end return DONEoffset  startreturn stringcharAtoffset
"public ShortBuffer slice() {return new ReadOnlyShortArrayBuffer(remaining(), backingArray, offset + position);}",public ShortBuffer slice return new ReadOnlyShortArrayBufferremaining backingArray offset  position
public RenameBranchCommand setNewName(String newName) {checkCallable();this.newName = newName;return this;},public RenameBranchCommand setNewNameString newName checkCallablethisnewName  newNamereturn this
public void serialize(LittleEndianOutput out) {out.writeShort(getOptions());out.writeInt(getHorizontalPos());out.writeInt(getVerticalPos());out.writeInt(getObjectID());out.writeInt(getDVRecNo());},public void serializeLittleEndianOutput out outwriteShortgetOptionsoutwriteIntgetHorizontalPosoutwriteIntgetVerticalPosoutwriteIntgetObjectIDoutwriteIntgetDVRecNo
public SheetBuilder setCreateEmptyCells(boolean shouldCreateEmptyCells) {this.shouldCreateEmptyCells = shouldCreateEmptyCells;return this;},public SheetBuilder setCreateEmptyCellsboolean shouldCreateEmptyCells thisshouldCreateEmptyCells  shouldCreateEmptyCellsreturn this
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval serialNumVE, ValueEval returnTypeVE) {double serialNum;try {serialNum = NumericFunction.singleOperandEvaluate(serialNumVE, srcRowIndex, srcColumnIndex);} catch (EvaluationException e) {return ErrorEval.VALUE_INVALID;}Calendar serialNumCalendar = LocaleUtil.getLocaleCalendar();serialNumCalendar.setTime(DateUtil.getJavaDate(serialNum, false));int returnType;try {ValueEval ve = OperandResolver.getSingleValue(returnTypeVE, srcRowIndex, srcColumnIndex);returnType = OperandResolver.coerceValueToInt(ve);} catch (EvaluationException e) {return ErrorEval.NUM_ERROR;}if (returnType != 1 && returnType != 2) {return ErrorEval.NUM_ERROR;}return new NumberEval(this.getWeekNo(serialNumCalendar, returnType));}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval serialNumVE ValueEval returnTypeVE double serialNumtry serialNum  NumericFunctionsingleOperandEvaluateserialNumVE srcRowIndex srcColumnIndex catch EvaluationException e return ErrorEvalVALUEINVALIDCalendar serialNumCalendar  LocaleUtilgetLocaleCalendarserialNumCalendarsetTimeDateUtilgetJavaDateserialNum falseint returnTypetry ValueEval ve  OperandResolvergetSingleValuereturnTypeVE srcRowIndex srcColumnIndexreturnType  OperandResolvercoerceValueToIntve catch EvaluationException e return ErrorEvalNUMERRORif returnType  1  returnType  2 return ErrorEvalNUMERRORreturn new NumberEvalthisgetWeekNoserialNumCalendar returnType
"public static int checkHeader(DataInput in, String codec, int minVersion, int maxVersion) throws IOException {final int actualHeader = in.readInt();if (actualHeader != CODEC_MAGIC) {throw new CorruptIndexException(""codec header mismatch: actual header="" + actualHeader + "" vs expected header="" + CODEC_MAGIC, in);}return checkHeaderNoMagic(in, codec, minVersion, maxVersion);}",public static int checkHeaderDataInput in String codec int minVersion int maxVersion throws IOException final int actualHeader  inreadIntif actualHeader  CODECMAGIC throw new CorruptIndexExceptioncodec header mismatch actual header  actualHeader   vs expected header  CODECMAGIC inreturn checkHeaderNoMagicin codec minVersion maxVersion
public String getErrorDisplay(String s) {StringBuilder buf = new StringBuilder();for (char c : s.toCharArray()) {buf.append(getErrorDisplay(c));}return buf.toString();},public String getErrorDisplayString s StringBuilder buf  new StringBuilderfor char c  stoCharArray bufappendgetErrorDisplaycreturn buftoString
"public boolean seekExact(BytesRef text) {termUpto = binarySearch(text, br, 0, info.terms.size()-1, info.terms, info.sortedTerms);return termUpto >= 0;}",public boolean seekExactBytesRef text termUpto  binarySearchtext br 0 infotermssize1 infoterms infosortedTermsreturn termUpto  0
public CacheSecurityGroup createCacheSecurityGroup(CreateCacheSecurityGroupRequest request) {request = beforeClientExecution(request);return executeCreateCacheSecurityGroup(request);},public CacheSecurityGroup createCacheSecurityGroupCreateCacheSecurityGroupRequest request request  beforeClientExecutionrequestreturn executeCreateCacheSecurityGrouprequest
"public FetchMomentPhotosRequest() {super(""CloudPhoto"", ""2017-07-11"", ""FetchMomentPhotos"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public FetchMomentPhotosRequest superCloudPhoto 20170711 FetchMomentPhotos cloudphotosetProtocolProtocolTypeHTTPS
public int getRuleIndex(String ruleName) {Integer ruleIndex = getRuleIndexMap().get(ruleName);if ( ruleIndex!=null ) return ruleIndex;return -1;},public int getRuleIndexString ruleName Integer ruleIndex  getRuleIndexMapgetruleNameif  ruleIndexnull  return ruleIndexreturn 1
"public RebootInstanceRequest() {super(""Ens"", ""2017-11-10"", ""RebootInstance"", ""ens"");setMethod(MethodType.POST);}",public RebootInstanceRequest superEns 20171110 RebootInstance enssetMethodMethodTypePOST
public RevokeClientVpnIngressResult revokeClientVpnIngress(RevokeClientVpnIngressRequest request) {request = beforeClientExecution(request);return executeRevokeClientVpnIngress(request);},public RevokeClientVpnIngressResult revokeClientVpnIngressRevokeClientVpnIngressRequest request request  beforeClientExecutionrequestreturn executeRevokeClientVpnIngressrequest
public boolean supportsExecute() {return false;},public boolean supportsExecute return false
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[SHARED FORMULA ("").append(HexDump.intToHex(sid)).append(""]\n"");buffer.append(""    .range      = "").append(getRange()).append(""\n"");buffer.append(""    .reserved    = "").append(HexDump.shortToHex(field_5_reserved)).append(""\n"");Ptg[] ptgs = field_7_parsed_expr.getTokens();for (int k = 0; k < ptgs.length; k++ ) {buffer.append(""Formula["").append(k).append(""]"");Ptg ptg = ptgs[k];buffer.append(ptg).append(ptg.getRVAType()).append(""\n"");}buffer.append(""[/SHARED FORMULA]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendSHARED FORMULA appendHexDumpintToHexsidappendnbufferappend    range       appendgetRangeappendnbufferappend    reserved     appendHexDumpshortToHexfield5reservedappendnPtg ptgs  field7parsedexprgetTokensfor int k  0 k  ptgslength k  bufferappendFormulaappendkappendPtg ptg  ptgskbufferappendptgappendptggetRVATypeappendnbufferappendSHARED FORMULAnreturn buffertoString
public LexerPushModeAction(int mode) {this.mode = mode;},public LexerPushModeActionint mode thismode  mode
public void mark(int readlimit) {mark = ptr;},public void markint readlimit mark  ptr
public ClusterParameterGroup createClusterParameterGroup(CreateClusterParameterGroupRequest request) {request = beforeClientExecution(request);return executeCreateClusterParameterGroup(request);},public ClusterParameterGroup createClusterParameterGroupCreateClusterParameterGroupRequest request request  beforeClientExecutionrequestreturn executeCreateClusterParameterGrouprequest
"public String distanceSubQueryNotAllowed() {Iterator<SrndQuery> sqi = getSubQueriesIterator();while (sqi.hasNext()) {SrndQuery leq = sqi.next();if (leq instanceof DistanceSubQuery) {String m = ((DistanceSubQuery)leq).distanceSubQueryNotAllowed();if (m != null) {return m;}} else {return ""subquery not allowed: "" + leq.toString();}}return null;}",public String distanceSubQueryNotAllowed IteratorSrndQuery sqi  getSubQueriesIteratorwhile sqihasNext SrndQuery leq  sqinextif leq instanceof DistanceSubQuery String m  DistanceSubQueryleqdistanceSubQueryNotAllowedif m  null return m else return subquery not allowed   leqtoStringreturn null
public DescribeBrokerEngineTypesResult describeBrokerEngineTypes(DescribeBrokerEngineTypesRequest request) {request = beforeClientExecution(request);return executeDescribeBrokerEngineTypes(request);},public DescribeBrokerEngineTypesResult describeBrokerEngineTypesDescribeBrokerEngineTypesRequest request request  beforeClientExecutionrequestreturn executeDescribeBrokerEngineTypesrequest
public DescribeReservedDBInstancesOfferingsResult describeReservedDBInstancesOfferings(DescribeReservedDBInstancesOfferingsRequest request) {request = beforeClientExecution(request);return executeDescribeReservedDBInstancesOfferings(request);},public DescribeReservedDBInstancesOfferingsResult describeReservedDBInstancesOfferingsDescribeReservedDBInstancesOfferingsRequest request request  beforeClientExecutionrequestreturn executeDescribeReservedDBInstancesOfferingsrequest
"public ByteBuffer slice() {return new ReadWriteHeapByteBuffer(backingArray, remaining(), offset + position);}",public ByteBuffer slice return new ReadWriteHeapByteBufferbackingArray remaining offset  position
"public GetCollectionRequest() {super(""cr"", ""2016-06-07"", ""GetCollection"", ""cr"");setUriPattern(""/collections"");setMethod(MethodType.GET);}",public GetCollectionRequest supercr 20160607 GetCollection crsetUriPatterncollectionssetMethodMethodTypeGET
"public DeleteApplicationVersionRequest(String applicationName, String versionLabel) {setApplicationName(applicationName);setVersionLabel(versionLabel);}",public DeleteApplicationVersionRequestString applicationName String versionLabel setApplicationNameapplicationNamesetVersionLabelversionLabel
public int last() {return (current = end);},public int last return current  end
public DeleteFleetResult deleteFleet(DeleteFleetRequest request) {request = beforeClientExecution(request);return executeDeleteFleet(request);},public DeleteFleetResult deleteFleetDeleteFleetRequest request request  beforeClientExecutionrequestreturn executeDeleteFleetrequest
public void sync(Collection<String> names) {throw new UnsupportedOperationException();},public void syncCollectionString names throw new UnsupportedOperationException
public DescribeWorkteamResult describeWorkteam(DescribeWorkteamRequest request) {request = beforeClientExecution(request);return executeDescribeWorkteam(request);},public DescribeWorkteamResult describeWorkteamDescribeWorkteamRequest request request  beforeClientExecutionrequestreturn executeDescribeWorkteamrequest
public StatusCommand status() {return new StatusCommand(repo);},public StatusCommand status return new StatusCommandrepo
public StopInstancesResult stopInstances(StopInstancesRequest request) {request = beforeClientExecution(request);return executeStopInstances(request);},public StopInstancesResult stopInstancesStopInstancesRequest request request  beforeClientExecutionrequestreturn executeStopInstancesrequest
public boolean equals(Object obj) {if (obj == null)return false;if (obj == this)return true;if (obj.getClass() != getClass())return false;HSSFChildAnchor anchor = (HSSFChildAnchor) obj;return anchor.getDx1() == getDx1() && anchor.getDx2() == getDx2() && anchor.getDy1() == getDy1()&& anchor.getDy2() == getDy2();},public boolean equalsObject obj if obj  nullreturn falseif obj  thisreturn trueif objgetClass  getClassreturn falseHSSFChildAnchor anchor  HSSFChildAnchor objreturn anchorgetDx1  getDx1  anchorgetDx2  getDx2  anchorgetDy1  getDy1 anchorgetDy2  getDy2
public DescribeDBSubnetGroupsResult describeDBSubnetGroups() {return describeDBSubnetGroups(new DescribeDBSubnetGroupsRequest());},public DescribeDBSubnetGroupsResult describeDBSubnetGroups return describeDBSubnetGroupsnew DescribeDBSubnetGroupsRequest
"public PostingsEnum reset(int[] docIDs, int[] freqs) {this.docIDs = docIDs;this.freqs = freqs;docID = upto = -1;return this;}",public PostingsEnum resetint docIDs int freqs thisdocIDs  docIDsthisfreqs  freqsdocID  upto  1return this
public boolean hasNext() {return index < size;},public boolean hasNext return index  size
public ListTagsForResourceResult listTagsForResource(ListTagsForResourceRequest request) {request = beforeClientExecution(request);return executeListTagsForResource(request);},public ListTagsForResourceResult listTagsForResourceListTagsForResourceRequest request request  beforeClientExecutionrequestreturn executeListTagsForResourcerequest
public static String getBuiltinFormat(int index) {if (index < 0 || index >=_formats.length) {return null;}return _formats[index];},public static String getBuiltinFormatint index if index  0  index formatslength return nullreturn formatsindex
public ExpandedDouble(long rawBits) {int biasedExp = Math.toIntExact(rawBits >> 52);if (biasedExp == 0) {BigInteger frac = BigInteger.valueOf(rawBits).and(BI_FRAC_MASK);int expAdj = 64 - frac.bitLength();_significand = frac.shiftLeft(expAdj);_binaryExponent = (biasedExp & 0x07FF) - 1023 - expAdj;} else {_significand = getFrac(rawBits);_binaryExponent = (biasedExp & 0x07FF) - 1023;}},public ExpandedDoublelong rawBits int biasedExp  MathtoIntExactrawBits  52if biasedExp  0 BigInteger frac  BigIntegervalueOfrawBitsandBIFRACMASKint expAdj  64  fracbitLengthsignificand  fracshiftLeftexpAdjbinaryExponent  biasedExp  0x07FF  1023  expAdj else significand  getFracrawBitsbinaryExponent  biasedExp  0x07FF  1023
public void serialize(LittleEndianOutput out) {out.writeShort(_codepage);},public void serializeLittleEndianOutput out outwriteShortcodepage
public void add(RevCommit c) {throw new UnsupportedOperationException();},public void addRevCommit c throw new UnsupportedOperationException
public CellRangeAddress[] getFormattingRanges() {return cfAggregate.getHeader().getCellRanges();},public CellRangeAddress getFormattingRanges return cfAggregategetHeadergetCellRanges
"public PrintStream append(CharSequence charSequence) {if (charSequence == null) {print(""null"");} else {print(charSequence.toString());}return this;}",public PrintStream appendCharSequence charSequence if charSequence  null printnull else printcharSequencetoStringreturn this
public GetSkillGroupResult getSkillGroup(GetSkillGroupRequest request) {request = beforeClientExecution(request);return executeGetSkillGroup(request);},public GetSkillGroupResult getSkillGroupGetSkillGroupRequest request request  beforeClientExecutionrequestreturn executeGetSkillGrouprequest
public DeleteObjectResult deleteObject(DeleteObjectRequest request) {request = beforeClientExecution(request);return executeDeleteObject(request);},public DeleteObjectResult deleteObjectDeleteObjectRequest request request  beforeClientExecutionrequestreturn executeDeleteObjectrequest
public boolean removeAll(final IntList c){boolean rval = false;for (int j = 0; j < c._limit; j++){if (removeValue(c._array[ j ])){rval = true;}}return rval;},public boolean removeAllfinal IntList cboolean rval  falsefor int j  0 j  climit jif removeValuecarray j rval  truereturn rval
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[FILEPASS]\n"");buffer.append(""    .type = "").append(HexDump.shortToHex(encryptionType)).append('\n');String prefix = ""     .""+encryptionInfo.getEncryptionMode();buffer.append(prefix+"".info = "").append(HexDump.shortToHex(encryptionInfo.getVersionMajor())).append('\n');buffer.append(prefix+"".ver  = "").append(HexDump.shortToHex(encryptionInfo.getVersionMinor())).append('\n');buffer.append(prefix+"".salt = "").append(HexDump.toHex(encryptionInfo.getVerifier().getSalt())).append('\n');buffer.append(prefix+"".verifier = "").append(HexDump.toHex(encryptionInfo.getVerifier().getEncryptedVerifier())).append('\n');buffer.append(prefix+"".verifierHash = "").append(HexDump.toHex(encryptionInfo.getVerifier().getEncryptedVerifierHash())).append('\n');buffer.append(""[/FILEPASS]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendFILEPASSnbufferappend    type  appendHexDumpshortToHexencryptionTypeappendnString prefix       encryptionInfogetEncryptionModebufferappendprefixinfo  appendHexDumpshortToHexencryptionInfogetVersionMajorappendnbufferappendprefixver   appendHexDumpshortToHexencryptionInfogetVersionMinorappendnbufferappendprefixsalt  appendHexDumptoHexencryptionInfogetVerifiergetSaltappendnbufferappendprefixverifier  appendHexDumptoHexencryptionInfogetVerifiergetEncryptedVerifierappendnbufferappendprefixverifierHash  appendHexDumptoHexencryptionInfogetVerifiergetEncryptedVerifierHashappendnbufferappendFILEPASSnreturn buffertoString
public CreateCustomerGatewayResult createCustomerGateway(CreateCustomerGatewayRequest request) {request = beforeClientExecution(request);return executeCreateCustomerGateway(request);},public CreateCustomerGatewayResult createCustomerGatewayCreateCustomerGatewayRequest request request  beforeClientExecutionrequestreturn executeCreateCustomerGatewayrequest
public CharBuffer compact() {if (byteBuffer.isReadOnly()) {throw new ReadOnlyBufferException();}byteBuffer.limit(limit * SizeOf.CHAR);byteBuffer.position(position * SizeOf.CHAR);byteBuffer.compact();byteBuffer.clear();position = limit - position;limit = capacity;mark = UNSET_MARK;return this;},public CharBuffer compact if byteBufferisReadOnly throw new ReadOnlyBufferExceptionbyteBufferlimitlimit  SizeOfCHARbyteBufferpositionposition  SizeOfCHARbyteBuffercompactbyteBufferclearposition  limit  positionlimit  capacitymark  UNSETMARKreturn this
public DirCache getDirCache() {return cache;},public DirCache getDirCache return cache
"public PatternReplaceCharFilterFactory(Map<String, String> args) {super(args);pattern = getPattern(args, ""pattern"");replacement = get(args, ""replacement"", """");if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public PatternReplaceCharFilterFactoryMapString String args superargspattern  getPatternargs patternreplacement  getargs replacement if argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public boolean getCreateEmptyCells() {return shouldCreateEmptyCells;},public boolean getCreateEmptyCells return shouldCreateEmptyCells
public long getIndexSize() {long sz = 8 ;sz += 4 * 4 ;sz += sizeOf(src);sz += sizeOf(table);sz += sizeOf(entries);return sz;},public long getIndexSize long sz  8 sz  4  4 sz  sizeOfsrcsz  sizeOftablesz  sizeOfentriesreturn sz
"public ShortBuffer put(short[] src, int srcOffset, int shortCount) {Arrays.checkOffsetAndCount(src.length, srcOffset, shortCount);if (shortCount > remaining()) {throw new BufferOverflowException();}for (int i = srcOffset; i < srcOffset + shortCount; ++i) {put(src[i]);}return this;}",public ShortBuffer putshort src int srcOffset int shortCount ArrayscheckOffsetAndCountsrclength srcOffset shortCountif shortCount  remaining throw new BufferOverflowExceptionfor int i  srcOffset i  srcOffset  shortCount i putsrcireturn this
"public String toString() {if (getChildren() == null || getChildren().size() == 0)return ""<multiPhrase/>"";StringBuilder sb = new StringBuilder();sb.append(""<multiPhrase>"");for (QueryNode child : getChildren()) {sb.append(""\n"");sb.append(child.toString());}sb.append(""\n</multiPhrase>"");return sb.toString();}",public String toString if getChildren  null  getChildrensize  0return multiPhraseStringBuilder sb  new StringBuildersbappendmultiPhrasefor QueryNode child  getChildren sbappendnsbappendchildtoStringsbappendnmultiPhrasereturn sbtoString
public GetGatewayResponseResult getGatewayResponse(GetGatewayResponseRequest request) {request = beforeClientExecution(request);return executeGetGatewayResponse(request);},public GetGatewayResponseResult getGatewayResponseGetGatewayResponseRequest request request  beforeClientExecutionrequestreturn executeGetGatewayResponserequest
"public SubscribeRequest(String topicArn, String protocol, String endpoint) {setTopicArn(topicArn);setProtocol(protocol);setEndpoint(endpoint);}",public SubscribeRequestString topicArn String protocol String endpoint setTopicArntopicArnsetProtocolprotocolsetEndpointendpoint
"public void setLengthNormFactors(int min, int max, float steepness, boolean discountOverlaps) {this.ln_min = min;this.ln_max = max;this.ln_steep = steepness;this.discountOverlaps = discountOverlaps;}",public void setLengthNormFactorsint min int max float steepness boolean discountOverlaps thislnmin  minthislnmax  maxthislnsteep  steepnessthisdiscountOverlaps  discountOverlaps
public void start() {mStartTime = ANIMATION_START;},public void start mStartTime  ANIMATIONSTART
public DeleteLaunchConfigurationResult deleteLaunchConfiguration(DeleteLaunchConfigurationRequest request) {request = beforeClientExecution(request);return executeDeleteLaunchConfiguration(request);},public DeleteLaunchConfigurationResult deleteLaunchConfigurationDeleteLaunchConfigurationRequest request request  beforeClientExecutionrequestreturn executeDeleteLaunchConfigurationrequest
public void remove( Object record ) {int i = 0;for (org.apache.poi.hssf.record.Record r : records) {if (r == record) {remove(i);break;}i++;}},public void remove Object record  int i  0for orgapachepoihssfrecordRecord r  records if r  record removeibreaki
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeShort(getFunctionIndex());},public void writeLittleEndianOutput out outwriteBytesid  getPtgClassoutwriteShortgetFunctionIndex
"public Term(String fld, BytesRef bytes) {field = fld;this.bytes = bytes == null ? null : BytesRef.deepCopyOf(bytes);}",public TermString fld BytesRef bytes field  fldthisbytes  bytes  null  null  BytesRefdeepCopyOfbytes
public long ramBytesUsed() {return RamUsageEstimator.alignObjectSize(RamUsageEstimator.NUM_BYTES_OBJECT_HEADER+ RamUsageEstimator.NUM_BYTES_OBJECT_REF+ Long.BYTES+ Float.BYTES)+ current.ramBytesUsed();},public long ramBytesUsed return RamUsageEstimatoralignObjectSizeRamUsageEstimatorNUMBYTESOBJECTHEADER RamUsageEstimatorNUMBYTESOBJECTREF LongBYTES FloatBYTES currentramBytesUsed
"public int serialize( int offset, byte[] data){return serialize( offset, data, new NullEscherSerializationListener() );}",public int serialize int offset byte datareturn serialize offset data new NullEscherSerializationListener 
"public String toString() {if (count == 0) {return """";}int wasted = value.length - count;if (wasted >= 256|| (wasted >= INITIAL_CAPACITY && wasted >= (count >> 1))) {return new String(value, 0, count);}shared = true;return new String(0, count, value);}",public String toString if count  0 return int wasted  valuelength  countif wasted  256 wasted  INITIALCAPACITY  wasted  count  1 return new Stringvalue 0 countshared  truereturn new String0 count value
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_protect);},public void serializeLittleEndianOutput out outwriteShortfield1protect
public AssociateResolverEndpointIpAddressResult associateResolverEndpointIpAddress(AssociateResolverEndpointIpAddressRequest request) {request = beforeClientExecution(request);return executeAssociateResolverEndpointIpAddress(request);},public AssociateResolverEndpointIpAddressResult associateResolverEndpointIpAddressAssociateResolverEndpointIpAddressRequest request request  beforeClientExecutionrequestreturn executeAssociateResolverEndpointIpAddressrequest
"public RevertCommand include(AnyObjectId commit) {return include(commit.getName(), commit);}",public RevertCommand includeAnyObjectId commit return includecommitgetName commit
public static ByteBuffer wrap(byte[] array) {return new ReadWriteHeapByteBuffer(array);},public static ByteBuffer wrapbyte array return new ReadWriteHeapByteBufferarray
public void removeSecurity() {remove1stProperty(PropertyIDMap.PID_SECURITY);},public void removeSecurity remove1stPropertyPropertyIDMapPIDSECURITY
public ImportVolumeResult importVolume(ImportVolumeRequest request) {request = beforeClientExecution(request);return executeImportVolume(request);},public ImportVolumeResult importVolumeImportVolumeRequest request request  beforeClientExecutionrequestreturn executeImportVolumerequest
public boolean isDetectRenames() {return renameDetector != null;},public boolean isDetectRenames return renameDetector  null
public CacheCluster rebootCacheCluster(RebootCacheClusterRequest request) {request = beforeClientExecution(request);return executeRebootCacheCluster(request);},public CacheCluster rebootCacheClusterRebootCacheClusterRequest request request  beforeClientExecutionrequestreturn executeRebootCacheClusterrequest
public DescribeTemplateAliasResult describeTemplateAlias(DescribeTemplateAliasRequest request) {request = beforeClientExecution(request);return executeDescribeTemplateAlias(request);},public DescribeTemplateAliasResult describeTemplateAliasDescribeTemplateAliasRequest request request  beforeClientExecutionrequestreturn executeDescribeTemplateAliasrequest
"public void reset() {if (overflow != null) {destroy();}if (blocks != null)blocks.clear();elseblocks = new ArrayList<>(initialBlocks);blocks.add(new Block(Math.min(inCoreLimit, Block.SZ)));}",public void reset if overflow  null destroyif blocks  nullblocksclearelseblocks  new ArrayListinitialBlocksblocksaddnew BlockMathmininCoreLimit BlockSZ
public DescribeWorkspaceSnapshotsResult describeWorkspaceSnapshots(DescribeWorkspaceSnapshotsRequest request) {request = beforeClientExecution(request);return executeDescribeWorkspaceSnapshots(request);},public DescribeWorkspaceSnapshotsResult describeWorkspaceSnapshotsDescribeWorkspaceSnapshotsRequest request request  beforeClientExecutionrequestreturn executeDescribeWorkspaceSnapshotsrequest
public void clear() {name = null;body = null;title = null;date = null;props = null;id = -1;},public void clear name  nullbody  nulltitle  nulldate  nullprops  nullid  1
public DeleteDistributionResult deleteDistribution(DeleteDistributionRequest request) {request = beforeClientExecution(request);return executeDeleteDistribution(request);},public DeleteDistributionResult deleteDistributionDeleteDistributionRequest request request  beforeClientExecutionrequestreturn executeDeleteDistributionrequest
public final long next() {assert hasNext();long result = currentValues[pOff++];if (pOff == currentCount) {vOff += 1;pOff = 0;fillBlock();}return result;},public final long next assert hasNextlong result  currentValuespOffif pOff  currentCount vOff  1pOff  0fillBlockreturn result
public AttachInstancesToLoadBalancerResult attachInstancesToLoadBalancer(AttachInstancesToLoadBalancerRequest request) {request = beforeClientExecution(request);return executeAttachInstancesToLoadBalancer(request);},public AttachInstancesToLoadBalancerResult attachInstancesToLoadBalancerAttachInstancesToLoadBalancerRequest request request  beforeClientExecutionrequestreturn executeAttachInstancesToLoadBalancerrequest
public PrintSetupRecord(RecordInputStream in) {field_1_paper_size    = in.readShort();field_2_scale         = in.readShort();field_3_page_start    = in.readShort();field_4_fit_width     = in.readShort();field_5_fit_height    = in.readShort();field_6_options       = in.readShort();field_7_hresolution   = in.readShort();field_8_vresolution   = in.readShort();field_9_headermargin  = in.readDouble();field_10_footermargin = in.readDouble();field_11_copies       = in.readShort();},public PrintSetupRecordRecordInputStream in field1papersize     inreadShortfield2scale          inreadShortfield3pagestart     inreadShortfield4fitwidth      inreadShortfield5fitheight     inreadShortfield6options        inreadShortfield7hresolution    inreadShortfield8vresolution    inreadShortfield9headermargin   inreadDoublefield10footermargin  inreadDoublefield11copies        inreadShort
public UpdateNotificationSettingsResult updateNotificationSettings(UpdateNotificationSettingsRequest request) {request = beforeClientExecution(request);return executeUpdateNotificationSettings(request);},public UpdateNotificationSettingsResult updateNotificationSettingsUpdateNotificationSettingsRequest request request  beforeClientExecutionrequestreturn executeUpdateNotificationSettingsrequest
public DescribeSnapshotAttributeResult describeSnapshotAttribute(DescribeSnapshotAttributeRequest request) {request = beforeClientExecution(request);return executeDescribeSnapshotAttribute(request);},public DescribeSnapshotAttributeResult describeSnapshotAttributeDescribeSnapshotAttributeRequest request request  beforeClientExecutionrequestreturn executeDescribeSnapshotAttributerequest
public ListDocumentClassificationJobsResult listDocumentClassificationJobs(ListDocumentClassificationJobsRequest request) {request = beforeClientExecution(request);return executeListDocumentClassificationJobs(request);},public ListDocumentClassificationJobsResult listDocumentClassificationJobsListDocumentClassificationJobsRequest request request  beforeClientExecutionrequestreturn executeListDocumentClassificationJobsrequest
public Item() {parent = 0;child = 0;},public Item parent  0child  0
"public static final AbbreviatedObjectId fromObjectId(AnyObjectId id) {return new AbbreviatedObjectId(Constants.OBJECT_ID_STRING_LENGTH,id.w1, id.w2, id.w3, id.w4, id.w5);}",public static final AbbreviatedObjectId fromObjectIdAnyObjectId id return new AbbreviatedObjectIdConstantsOBJECTIDSTRINGLENGTHidw1 idw2 idw3 idw4 idw5
"public String format(Object value) {StringBuffer sb = new StringBuffer();formatValue(sb, value);return sb.toString();}",public String formatObject value StringBuffer sb  new StringBufferformatValuesb valuereturn sbtoString
public void processContinueRecord( byte[] record ){rawDataContainer.concatenate(record);},public void processContinueRecord byte record rawDataContainerconcatenaterecord
public ListenerHandle addChangeListener(ConfigChangedListener listener) {return listeners.addConfigChangedListener(listener);},public ListenerHandle addChangeListenerConfigChangedListener listener return listenersaddConfigChangedListenerlistener
"public BlendedTermQuery build() {return new BlendedTermQuery(ArrayUtil.copyOfSubArray(terms, 0, numTerms),ArrayUtil.copyOfSubArray(boosts, 0, numTerms),ArrayUtil.copyOfSubArray(contexts, 0, numTerms),rewriteMethod);}",public BlendedTermQuery build return new BlendedTermQueryArrayUtilcopyOfSubArrayterms 0 numTermsArrayUtilcopyOfSubArrayboosts 0 numTermsArrayUtilcopyOfSubArraycontexts 0 numTermsrewriteMethod
"public void setFlagByBit(int bitmask, boolean enabled) {if (enabled) {flags |= bitmask;} else {flags &= (0xFFFF ^ bitmask);}}",public void setFlagByBitint bitmask boolean enabled if enabled flags  bitmask else flags  0xFFFF  bitmask
"public static double calculate(double pStartDateVal, double pEndDateVal, int basis) throws EvaluationException {if (basis < 0 || basis >= 5) {throw new EvaluationException(ErrorEval.NUM_ERROR);}int startDateVal = (int) Math.floor(pStartDateVal);int endDateVal = (int) Math.floor(pEndDateVal);if (startDateVal == endDateVal) {return 0;}if (startDateVal > endDateVal) {int temp = startDateVal;startDateVal = endDateVal;endDateVal = temp;}switch (basis) {case 0: return basis0(startDateVal, endDateVal);case 1: return basis1(startDateVal, endDateVal);case 2: return basis2(startDateVal, endDateVal);case 3: return basis3(startDateVal, endDateVal);case 4: return basis4(startDateVal, endDateVal);}throw new IllegalStateException(""cannot happen"");}",public static double calculatedouble pStartDateVal double pEndDateVal int basis throws EvaluationException if basis  0  basis  5 throw new EvaluationExceptionErrorEvalNUMERRORint startDateVal  int MathfloorpStartDateValint endDateVal  int MathfloorpEndDateValif startDateVal  endDateVal return 0if startDateVal  endDateVal int temp  startDateValstartDateVal  endDateValendDateVal  tempswitch basis case 0 return basis0startDateVal endDateValcase 1 return basis1startDateVal endDateValcase 2 return basis2startDateVal endDateValcase 3 return basis3startDateVal endDateValcase 4 return basis4startDateVal endDateValthrow new IllegalStateExceptioncannot happen
"public CharSequence toQueryString(EscapeQuerySyntax escapeSyntaxParser) {if (getChildren() == null || getChildren().size() == 0)return """";StringBuilder sb = new StringBuilder();String filler = """";for (QueryNode child : getChildren()) {sb.append(filler).append(child.toQueryString(escapeSyntaxParser));filler = "" "";}if ((getParent() != null && getParent() instanceof GroupQueryNode)|| isRoot())return sb.toString();else return ""( "" + sb.toString() + "" )"";}",public CharSequence toQueryStringEscapeQuerySyntax escapeSyntaxParser if getChildren  null  getChildrensize  0return StringBuilder sb  new StringBuilderString filler  for QueryNode child  getChildren sbappendfillerappendchildtoQueryStringescapeSyntaxParserfiller   if getParent  null  getParent instanceof GroupQueryNode isRootreturn sbtoStringelse return    sbtoString   
"public ByteBuffer putDouble(int index, double value) {throw new ReadOnlyBufferException();}",public ByteBuffer putDoubleint index double value throw new ReadOnlyBufferException
public GetVoiceConnectorGroupResult getVoiceConnectorGroup(GetVoiceConnectorGroupRequest request) {request = beforeClientExecution(request);return executeGetVoiceConnectorGroup(request);},public GetVoiceConnectorGroupResult getVoiceConnectorGroupGetVoiceConnectorGroupRequest request request  beforeClientExecutionrequestreturn executeGetVoiceConnectorGrouprequest
public BatchUpdateUserResult batchUpdateUser(BatchUpdateUserRequest request) {request = beforeClientExecution(request);return executeBatchUpdateUser(request);},public BatchUpdateUserResult batchUpdateUserBatchUpdateUserRequest request request  beforeClientExecutionrequestreturn executeBatchUpdateUserrequest
"public String toString() {return new String(chars, offset, length);}",public String toString return new Stringchars offset length
public DescribeStorageResult describeStorage(DescribeStorageRequest request) {request = beforeClientExecution(request);return executeDescribeStorage(request);},public DescribeStorageResult describeStorageDescribeStorageRequest request request  beforeClientExecutionrequestreturn executeDescribeStoragerequest
public void close() {flush();},public void close flush
public void close() throws IOException {super.close();},public void close throws IOException superclose
public final void backup(int amount) {bufferPosition -= amount;},public final void backupint amount bufferPosition  amount
public UpdateDashboardPublishedVersionResult updateDashboardPublishedVersion(UpdateDashboardPublishedVersionRequest request) {request = beforeClientExecution(request);return executeUpdateDashboardPublishedVersion(request);},public UpdateDashboardPublishedVersionResult updateDashboardPublishedVersionUpdateDashboardPublishedVersionRequest request request  beforeClientExecutionrequestreturn executeUpdateDashboardPublishedVersionrequest
public DocumentStoredFieldVisitor(String... fields) {fieldsToAdd = new HashSet<>(fields.length);for(String field : fields) {fieldsToAdd.add(field);}},public DocumentStoredFieldVisitorString fields fieldsToAdd  new HashSetfieldslengthforString field  fields fieldsToAddaddfield
public ResumeGameServerGroupResult resumeGameServerGroup(ResumeGameServerGroupRequest request) {request = beforeClientExecution(request);return executeResumeGameServerGroup(request);},public ResumeGameServerGroupResult resumeGameServerGroupResumeGameServerGroupRequest request request  beforeClientExecutionrequestreturn executeResumeGameServerGrouprequest
public PushCommand setPushAll() {refSpecs.add(Transport.REFSPEC_PUSH_ALL);return this;},public PushCommand setPushAll refSpecsaddTransportREFSPECPUSHALLreturn this
public DBSnapshot createDBSnapshot(CreateDBSnapshotRequest request) {request = beforeClientExecution(request);return executeCreateDBSnapshot(request);},public DBSnapshot createDBSnapshotCreateDBSnapshotRequest request request  beforeClientExecutionrequestreturn executeCreateDBSnapshotrequest
public boolean willSoonExpire() {if (roleSessionDurationSeconds == 0) {return false;}long now = System.currentTimeMillis();double expireFact = 0.95;return roleSessionDurationSeconds * expireFact < (now - sessionStartedTimeInMilliSeconds) / 1000.0;},public boolean willSoonExpire if roleSessionDurationSeconds  0 return falselong now  SystemcurrentTimeMillisdouble expireFact  095return roleSessionDurationSeconds  expireFact  now  sessionStartedTimeInMilliSeconds  10000
public List<Interval> getIntervals() {return intervals;},public ListInterval getIntervals return intervals
"public GetNamespaceRequest() {super(""cr"", ""2016-06-07"", ""GetNamespace"", ""cr"");setUriPattern(""/namespace/[Namespace]"");setMethod(MethodType.GET);}",public GetNamespaceRequest supercr 20160607 GetNamespace crsetUriPatternnamespaceNamespacesetMethodMethodTypeGET
public DeleteVpcRequest(String vpcId) {setVpcId(vpcId);},public DeleteVpcRequestString vpcId setVpcIdvpcId
public long ramBytesUsed() {long bytesUsed = BASE_RAM_BYTES_USED;if (dict != null) {bytesUsed += dict.ramBytesUsed();}return bytesUsed;},public long ramBytesUsed long bytesUsed  BASERAMBYTESUSEDif dict  null bytesUsed  dictramBytesUsedreturn bytesUsed
"public final ValueEval evaluate(ValueEval[] args, int srcRow, int srcCol) {if (args.length < 1) {return ErrorEval.VALUE_INVALID;}boolean boolResult;try {boolResult = calculate(args);} catch (EvaluationException e) {return e.getErrorEval();}return BoolEval.valueOf(boolResult);}",public final ValueEval evaluateValueEval args int srcRow int srcCol if argslength  1 return ErrorEvalVALUEINVALIDboolean boolResulttry boolResult  calculateargs catch EvaluationException e return egetErrorEvalreturn BoolEvalvalueOfboolResult
public void println(String str) {synchronized (lock) {print(str);println();}},public void printlnString str synchronized lock printstrprintln
"public TypedPropertyValue( int type, Object value ) {_type = type;_value = value;}",public TypedPropertyValue int type Object value  type  typevalue  value
public FloatBuffer duplicate() {ByteBuffer bb = byteBuffer.duplicate().order(byteBuffer.order());FloatToByteBufferAdapter buf = new FloatToByteBufferAdapter(bb);buf.limit = limit;buf.position = position;buf.mark = mark;return buf;},public FloatBuffer duplicate ByteBuffer bb  byteBufferduplicateorderbyteBufferorderFloatToByteBufferAdapter buf  new FloatToByteBufferAdapterbbbuflimit  limitbufposition  positionbufmark  markreturn buf
public MigrateWorkspaceResult migrateWorkspace(MigrateWorkspaceRequest request) {request = beforeClientExecution(request);return executeMigrateWorkspace(request);},public MigrateWorkspaceResult migrateWorkspaceMigrateWorkspaceRequest request request  beforeClientExecutionrequestreturn executeMigrateWorkspacerequest
public GetRequestValidatorResult getRequestValidator(GetRequestValidatorRequest request) {request = beforeClientExecution(request);return executeGetRequestValidator(request);},public GetRequestValidatorResult getRequestValidatorGetRequestValidatorRequest request request  beforeClientExecutionrequestreturn executeGetRequestValidatorrequest
public String toString() { return toString(false); },public String toString  return toStringfalse 
public ForgetSmartHomeAppliancesResult forgetSmartHomeAppliances(ForgetSmartHomeAppliancesRequest request) {request = beforeClientExecution(request);return executeForgetSmartHomeAppliances(request);},public ForgetSmartHomeAppliancesResult forgetSmartHomeAppliancesForgetSmartHomeAppliancesRequest request request  beforeClientExecutionrequestreturn executeForgetSmartHomeAppliancesrequest
public DeleteApiResult deleteApi(DeleteApiRequest request) {request = beforeClientExecution(request);return executeDeleteApi(request);},public DeleteApiResult deleteApiDeleteApiRequest request request  beforeClientExecutionrequestreturn executeDeleteApirequest
public void setKeyProgressIncrement(int increment) {mKeyProgressIncrement = increment < 0 ? -increment : increment;},public void setKeyProgressIncrementint increment mKeyProgressIncrement  increment  0  increment  increment
"public boolean addAll(final IntList c){if (c._limit != 0){if ((_limit + c._limit) > _array.length){growArray(_limit + c._limit);}System.arraycopy(c._array, 0, _array, _limit, c._limit);_limit += c._limit;}return true;}",public boolean addAllfinal IntList cif climit  0if limit  climit  arraylengthgrowArraylimit  climitSystemarraycopycarray 0 array limit climitlimit  climitreturn true
"public DVRecord createDVRecord(HSSFSheet sheet) {FormulaPair fp = _constraint.createFormulas(sheet);return new DVRecord(_constraint.getValidationType(),_constraint.getOperator(),_errorStyle, _emptyCellAllowed, getSuppressDropDownArrow(),_constraint.getValidationType()==ValidationType.LIST && _constraint.getExplicitListValues()!=null,_showPromptBox, _prompt_title, _prompt_text,_showErrorBox, _error_title, _error_text,fp.getFormula1(), fp.getFormula2(),_regions);}",public DVRecord createDVRecordHSSFSheet sheet FormulaPair fp  constraintcreateFormulassheetreturn new DVRecordconstraintgetValidationTypeconstraintgetOperatorerrorStyle emptyCellAllowed getSuppressDropDownArrowconstraintgetValidationTypeValidationTypeLIST  constraintgetExplicitListValuesnullshowPromptBox prompttitle prompttextshowErrorBox errortitle errortextfpgetFormula1 fpgetFormula2regions
"public boolean evaluate(int cmpResult) {switch (_code) {case NONE:case EQ:return cmpResult == 0;case NE: return cmpResult != 0;case LT: return cmpResult <  0;case LE: return cmpResult <= 0;case GT: return cmpResult >  0;case GE: return cmpResult >= 0;}throw new RuntimeException(""Cannot call boolean evaluate on non-equality operator '""+ _representation + ""'"");}",public boolean evaluateint cmpResult switch code case NONEcase EQreturn cmpResult  0case NE return cmpResult  0case LT return cmpResult   0case LE return cmpResult  0case GT return cmpResult   0case GE return cmpResult  0throw new RuntimeExceptionCannot call boolean evaluate on nonequality operator  representation  
public boolean isCancelled() {return false;},public boolean isCancelled return false
public ListHoursOfOperationsResult listHoursOfOperations(ListHoursOfOperationsRequest request) {request = beforeClientExecution(request);return executeListHoursOfOperations(request);},public ListHoursOfOperationsResult listHoursOfOperationsListHoursOfOperationsRequest request request  beforeClientExecutionrequestreturn executeListHoursOfOperationsrequest
"public int serialize(int offset, byte [] data) {throw new RecordFormatException(""Label Records are supported READ ONLY...convert to LabelSST"");}",public int serializeint offset byte  data throw new RecordFormatExceptionLabel Records are supported READ ONLYconvert to LabelSST
"public URI normalize() {if (opaque) {return this;}String normalizedPath = normalize(path, false);if (path.equals(normalizedPath)) {return this;}URI result = duplicate();result.path = normalizedPath;result.setSchemeSpecificPart();return result;}",public URI normalize if opaque return thisString normalizedPath  normalizepath falseif pathequalsnormalizedPath return thisURI result  duplicateresultpath  normalizedPathresultsetSchemeSpecificPartreturn result
public FreeRefFunction findUserDefinedFunction(String functionName) {return _udfFinder.findFunction(functionName);},public FreeRefFunction findUserDefinedFunctionString functionName return udfFinderfindFunctionfunctionName
public UpdateGatewayResponseResult updateGatewayResponse(UpdateGatewayResponseRequest request) {request = beforeClientExecution(request);return executeUpdateGatewayResponse(request);},public UpdateGatewayResponseResult updateGatewayResponseUpdateGatewayResponseRequest request request  beforeClientExecutionrequestreturn executeUpdateGatewayResponserequest
public GetOperationDetailResult getOperationDetail(GetOperationDetailRequest request) {request = beforeClientExecution(request);return executeGetOperationDetail(request);},public GetOperationDetailResult getOperationDetailGetOperationDetailRequest request request  beforeClientExecutionrequestreturn executeGetOperationDetailrequest
"public String toString(String field) {StringBuilder buffer = new StringBuilder();if (!getField().equals(field)) {buffer.append(getField());buffer.append("":"");}buffer.append(term.text());return buffer.toString();}",public String toStringString field StringBuilder buffer  new StringBuilderif getFieldequalsfield bufferappendgetFieldbufferappendbufferappendtermtextreturn buffertoString
"public NameXPtg getNameXPtg(String name, UDFFinder udf) {return getNameXPtg(name, -1, udf);}",public NameXPtg getNameXPtgString name UDFFinder udf return getNameXPtgname 1 udf
public String getCharsetName() {return charsetName;},public String getCharsetName return charsetName
public DescribeWebsiteCertificateAuthorityResult describeWebsiteCertificateAuthority(DescribeWebsiteCertificateAuthorityRequest request) {request = beforeClientExecution(request);return executeDescribeWebsiteCertificateAuthority(request);},public DescribeWebsiteCertificateAuthorityResult describeWebsiteCertificateAuthorityDescribeWebsiteCertificateAuthorityRequest request request  beforeClientExecutionrequestreturn executeDescribeWebsiteCertificateAuthorityrequest
"static public double ppmt(double r, int per, int nper, double pv, double fv) {return pmt(r, nper, pv, fv) - ipmt(r, per, nper, pv, fv);}",static public double ppmtdouble r int per int nper double pv double fv return pmtr nper pv fv  ipmtr per nper pv fv
"public ShortBuffer put(int index, short c) {throw new ReadOnlyBufferException();}",public ShortBuffer putint index short c throw new ReadOnlyBufferException
public void writeBytes(String value) throws IOException {checkWritePrimitiveTypes();primitiveTypes.writeBytes(value);},public void writeBytesString value throws IOException checkWritePrimitiveTypesprimitiveTypeswriteBytesvalue
"public LinkTable(int numberOfSheets, WorkbookRecordList workbookRecordList) {_workbookRecordList = workbookRecordList;_definedNames = new ArrayList<>();_externalBookBlocks = new ExternalBookBlock[]{new ExternalBookBlock(numberOfSheets),};_externSheetRecord = new ExternSheetRecord();_recordCount = 2;SupBookRecord supbook = _externalBookBlocks[0].getExternalBookRecord();int idx = findFirstRecordLocBySid(CountryRecord.sid);if (idx < 0) {throw new RuntimeException(""CountryRecord not found"");}_workbookRecordList.add(idx + 1, _externSheetRecord);_workbookRecordList.add(idx + 1, supbook);}",public LinkTableint numberOfSheets WorkbookRecordList workbookRecordList workbookRecordList  workbookRecordListdefinedNames  new ArrayListexternalBookBlocks  new ExternalBookBlocknew ExternalBookBlocknumberOfSheetsexternSheetRecord  new ExternSheetRecordrecordCount  2SupBookRecord supbook  externalBookBlocks0getExternalBookRecordint idx  findFirstRecordLocBySidCountryRecordsidif idx  0 throw new RuntimeExceptionCountryRecord not foundworkbookRecordListaddidx  1 externSheetRecordworkbookRecordListaddidx  1 supbook
public void remove() {throw new UnsupportedOperationException();},public void remove throw new UnsupportedOperationException
"public static int[] grow(int[] array) {return grow(array, 1 + array.length);}",public static int growint array return growarray 1  arraylength
"public void addAll(T[] src, int srcIdx, int srcCnt) {while (0 < srcCnt) {int i = tailBlkIdx;int n = Math.min(srcCnt, BLOCK_SIZE - i);if (n == 0) {add(src[srcIdx++]);srcCnt--;continue;}System.arraycopy(src, srcIdx, tailBlock, i, n);tailBlkIdx += n;size += n;srcIdx += n;srcCnt -= n;}}",public void addAllT src int srcIdx int srcCnt while 0  srcCnt int i  tailBlkIdxint n  MathminsrcCnt BLOCKSIZE  iif n  0 addsrcsrcIdxsrcCntcontinueSystemarraycopysrc srcIdx tailBlock i ntailBlkIdx  nsize  nsrcIdx  nsrcCnt  n
public RenewDomainResult renewDomain(RenewDomainRequest request) {request = beforeClientExecution(request);return executeRenewDomain(request);},public RenewDomainResult renewDomainRenewDomainRequest request request  beforeClientExecutionrequestreturn executeRenewDomainrequest
public static boolean isInRange(int i) {return i >= MIN_VALUE && i <= MAX_VALUE;},public static boolean isInRangeint i return i  MINVALUE  i  MAXVALUE
public AddApplicationInputResult addApplicationInput(AddApplicationInputRequest request) {request = beforeClientExecution(request);return executeAddApplicationInput(request);},public AddApplicationInputResult addApplicationInputAddApplicationInputRequest request request  beforeClientExecutionrequestreturn executeAddApplicationInputrequest
"public Request<DeletePublicKeyRequest> marshall(DeletePublicKeyRequest deletePublicKeyRequest) {if (deletePublicKeyRequest == null) {throw new SdkClientException(""Invalid argument passed to marshall(...)"");}Request<DeletePublicKeyRequest> request = new DefaultRequest<DeletePublicKeyRequest>(deletePublicKeyRequest, ""AmazonCloudFront"");request.setHttpMethod(HttpMethodName.DELETE);if (deletePublicKeyRequest.getIfMatch() != null) {request.addHeader(""If-Match"", StringUtils.fromString(deletePublicKeyRequest.getIfMatch()));}String uriResourcePath = ""/2019-03-26/public-key/{Id}"";uriResourcePath = com.amazonaws.transform.PathMarshallers.NON_GREEDY.marshall(uriResourcePath, ""Id"", deletePublicKeyRequest.getId());request.setResourcePath(uriResourcePath);return request;}",public RequestDeletePublicKeyRequest marshallDeletePublicKeyRequest deletePublicKeyRequest if deletePublicKeyRequest  null throw new SdkClientExceptionInvalid argument passed to marshallRequestDeletePublicKeyRequest request  new DefaultRequestDeletePublicKeyRequestdeletePublicKeyRequest AmazonCloudFrontrequestsetHttpMethodHttpMethodNameDELETEif deletePublicKeyRequestgetIfMatch  null requestaddHeaderIfMatch StringUtilsfromStringdeletePublicKeyRequestgetIfMatchString uriResourcePath  20190326publickeyIduriResourcePath  comamazonawstransformPathMarshallersNONGREEDYmarshalluriResourcePath Id deletePublicKeyRequestgetIdrequestsetResourcePathuriResourcePathreturn request
"public boolean matches(ParseTree tree) {return matcher.match(tree, this).succeeded();}",public boolean matchesParseTree tree return matchermatchtree thissucceeded
public CreateDetectorResult createDetector(CreateDetectorRequest request) {request = beforeClientExecution(request);return executeCreateDetector(request);},public CreateDetectorResult createDetectorCreateDetectorRequest request request  beforeClientExecutionrequestreturn executeCreateDetectorrequest
public boolean equals(Object other) {if (other instanceof IndexCommit) {IndexCommit otherCommit = (IndexCommit) other;return otherCommit.getDirectory() == getDirectory() && otherCommit.getGeneration() == getGeneration();} else {return false;}},public boolean equalsObject other if other instanceof IndexCommit IndexCommit otherCommit  IndexCommit otherreturn otherCommitgetDirectory  getDirectory  otherCommitgetGeneration  getGeneration else return false
public void yypushback(int number)  {if ( number > yylength() )zzScanError(ZZ_PUSHBACK_2BIG);zzMarkedPos -= number;},public void yypushbackint number  if  number  yylength zzScanErrorZZPUSHBACK2BIGzzMarkedPos  number
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {return fixed(arg0, arg1, BoolEval.FALSE, srcRowIndex, srcColumnIndex);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1 return fixedarg0 arg1 BoolEvalFALSE srcRowIndex srcColumnIndex
"public RevisionSyntaxException(String message, String revstr) {super(message);this.revstr = revstr;}",public RevisionSyntaxExceptionString message String revstr supermessagethisrevstr  revstr
public void reset() throws IOException {synchronized (lock) {super.reset();lineNumber = markedLineNumber;lastWasCR = markedLastWasCR;}},public void reset throws IOException synchronized lock superresetlineNumber  markedLineNumberlastWasCR  markedLastWasCR
public QueryParser(CharStream stream) {token_source = new QueryParserTokenManager(stream);token = new Token();jj_ntk = -1;jj_gen = 0;for (int i = 0; i < 10; i++) jj_la1[i] = -1;for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();},public QueryParserCharStream stream tokensource  new QueryParserTokenManagerstreamtoken  new Tokenjjntk  1jjgen  0for int i  0 i  10 i jjla1i  1for int i  0 i  jj2rtnslength i jj2rtnsi  new JJCalls
public Float floatValue(String key) {String value = responseMap.get(key);if (null == value || 0 == value.length()) {return null;}return Float.valueOf(responseMap.get(key));},public Float floatValueString key String value  responseMapgetkeyif null  value  0  valuelength return nullreturn FloatvalueOfresponseMapgetkey
public ModifyClusterResult modifyCluster(ModifyClusterRequest request) {request = beforeClientExecution(request);return executeModifyCluster(request);},public ModifyClusterResult modifyClusterModifyClusterRequest request request  beforeClientExecutionrequestreturn executeModifyClusterrequest
public DescribeSolutionResult describeSolution(DescribeSolutionRequest request) {request = beforeClientExecution(request);return executeDescribeSolution(request);},public DescribeSolutionResult describeSolutionDescribeSolutionRequest request request  beforeClientExecutionrequestreturn executeDescribeSolutionrequest
"public BootstrapActionConfig build() {return new BootstrapActionConfig().withName(""Configure Hadoop"").withScriptBootstrapAction(new ScriptBootstrapActionConfig().withPath(""s3:"").withArgs(args));}",public BootstrapActionConfig build return new BootstrapActionConfigwithNameConfigure HadoopwithScriptBootstrapActionnew ScriptBootstrapActionConfigwithPaths3withArgsargs
"public void append(String name, RevCommit commit) {append(name, GITLINK, commit);}",public void appendString name RevCommit commit appendname GITLINK commit
public int read() {if (ptr == data.length)return -1;return data[ptr++] & 0xff;},public int read if ptr  datalengthreturn 1return dataptr  0xff
public void setOutputUnigramsIfNoShingles(boolean outputUnigramsIfNoShingles) {this.outputUnigramsIfNoShingles = outputUnigramsIfNoShingles;},public void setOutputUnigramsIfNoShinglesboolean outputUnigramsIfNoShingles thisoutputUnigramsIfNoShingles  outputUnigramsIfNoShingles
public RevFilter clone() {return this; },public RevFilter clone return this 
"public void updateFormulasAfterRowShift(FormulaShifter shifter, int currentExternSheetIndex) {for (int i = 0; i < records.length; i++) {CellValueRecordInterface[] rowCells = records[i];if (rowCells == null) {continue;}for (int j = 0; j < rowCells.length; j++) {CellValueRecordInterface cell = rowCells[j];if (cell instanceof FormulaRecordAggregate) {FormulaRecordAggregate fra = (FormulaRecordAggregate)cell;Ptg[] ptgs = fra.getFormulaTokens(); Ptg[] ptgs2 = ((FormulaRecordAggregate)cell).getFormulaRecord().getParsedExpression(); if (shifter.adjustFormula(ptgs, currentExternSheetIndex)) {fra.setParsedExpression(ptgs);}}}}}",public void updateFormulasAfterRowShiftFormulaShifter shifter int currentExternSheetIndex for int i  0 i  recordslength i CellValueRecordInterface rowCells  recordsiif rowCells  null continuefor int j  0 j  rowCellslength j CellValueRecordInterface cell  rowCellsjif cell instanceof FormulaRecordAggregate FormulaRecordAggregate fra  FormulaRecordAggregatecellPtg ptgs  fragetFormulaTokens Ptg ptgs2  FormulaRecordAggregatecellgetFormulaRecordgetParsedExpression if shifteradjustFormulaptgs currentExternSheetIndex frasetParsedExpressionptgs
public UpdateGroupRequest(String groupName) {setGroupName(groupName);},public UpdateGroupRequestString groupName setGroupNamegroupName
public ListBrokersResult listBrokers(ListBrokersRequest request) {request = beforeClientExecution(request);return executeListBrokers(request);},public ListBrokersResult listBrokersListBrokersRequest request request  beforeClientExecutionrequestreturn executeListBrokersrequest
public final FormulaCellCacheEntry[] getConsumingCells() {return _consumingCells.toArray();},public final FormulaCellCacheEntry getConsumingCells return consumingCellstoArray
public int cardinality() {return cardinality;},public int cardinality return cardinality
"public static final WeightedTerm[] getTerms(Query query, boolean prohibited){return getTerms(query,prohibited,null);}",public static final WeightedTerm getTermsQuery query boolean prohibitedreturn getTermsqueryprohibitednull
public void serialize(LittleEndianOutput out) {out.writeShort(getColWidth());},public void serializeLittleEndianOutput out outwriteShortgetColWidth
"public FieldsConsumer fieldsConsumer(SegmentWriteState state) throws IOException {PostingsWriterBase postingsWriter = new Lucene84PostingsWriter(state);boolean success = false;try {FieldsConsumer ret = new FSTTermsWriter(state, postingsWriter);success = true;return ret;} finally {if (!success) {IOUtils.closeWhileHandlingException(postingsWriter);}}}",public FieldsConsumer fieldsConsumerSegmentWriteState state throws IOException PostingsWriterBase postingsWriter  new Lucene84PostingsWriterstateboolean success  falsetry FieldsConsumer ret  new FSTTermsWriterstate postingsWritersuccess  truereturn ret finally if success IOUtilscloseWhileHandlingExceptionpostingsWriter
public int getThumbOffset() {return mThumbOffset;},public int getThumbOffset return mThumbOffset
public GetApnsChannelResult getApnsChannel(GetApnsChannelRequest request) {request = beforeClientExecution(request);return executeGetApnsChannel(request);},public GetApnsChannelResult getApnsChannelGetApnsChannelRequest request request  beforeClientExecutionrequestreturn executeGetApnsChannelrequest
public boolean equals(Object obj) {if (this == obj) return true;if (null == obj || getClass() != obj.getClass()) return false;NGramDistance o = (NGramDistance)obj;return o.n == this.n;},public boolean equalsObject obj if this  obj return trueif null  obj  getClass  objgetClass return falseNGramDistance o  NGramDistanceobjreturn on  thisn
public GetDomainDetailResult getDomainDetail(GetDomainDetailRequest request) {request = beforeClientExecution(request);return executeGetDomainDetail(request);},public GetDomainDetailResult getDomainDetailGetDomainDetailRequest request request  beforeClientExecutionrequestreturn executeGetDomainDetailrequest
public UpdateConfigurationSetReputationMetricsEnabledResult updateConfigurationSetReputationMetricsEnabled(UpdateConfigurationSetReputationMetricsEnabledRequest request) {request = beforeClientExecution(request);return executeUpdateConfigurationSetReputationMetricsEnabled(request);},public UpdateConfigurationSetReputationMetricsEnabledResult updateConfigurationSetReputationMetricsEnabledUpdateConfigurationSetReputationMetricsEnabledRequest request request  beforeClientExecutionrequestreturn executeUpdateConfigurationSetReputationMetricsEnabledrequest
public PackedDataInput(DataInput in) {this.in = in;skipToNextByte();},public PackedDataInputDataInput in thisin  inskipToNextByte
public AssociateQualificationWithWorkerResult associateQualificationWithWorker(AssociateQualificationWithWorkerRequest request) {request = beforeClientExecution(request);return executeAssociateQualificationWithWorker(request);},public AssociateQualificationWithWorkerResult associateQualificationWithWorkerAssociateQualificationWithWorkerRequest request request  beforeClientExecutionrequestreturn executeAssociateQualificationWithWorkerrequest
"public String toString() {return ""arc="" + fstArc + "" state="" + fsaState;}",public String toString return arc  fstArc   state  fsaState
public void signalWorkflowExecution(SignalWorkflowExecutionRequest request) {request = beforeClientExecution(request);executeSignalWorkflowExecution(request);},public void signalWorkflowExecutionSignalWorkflowExecutionRequest request request  beforeClientExecutionrequestexecuteSignalWorkflowExecutionrequest
"public String getTokenName(int t) {if (t == Token.EOF) {return ""EOF"";}Vocabulary vocabulary = parser != null ? parser.getVocabulary() : VocabularyImpl.EMPTY_VOCABULARY;String displayName = vocabulary.getDisplayName(t);if (displayName.equals(Integer.toString(t))) {return displayName;}return displayName + ""<"" + t + "">"";}",public String getTokenNameint t if t  TokenEOF return EOFVocabulary vocabulary  parser  null  parsergetVocabulary  VocabularyImplEMPTYVOCABULARYString displayName  vocabularygetDisplayNametif displayNameequalsIntegertoStringt return displayNamereturn displayName    t  
"public CJKWidthFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public CJKWidthFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public GetHLSStreamingSessionURLResult getHLSStreamingSessionURL(GetHLSStreamingSessionURLRequest request) {request = beforeClientExecution(request);return executeGetHLSStreamingSessionURL(request);},public GetHLSStreamingSessionURLResult getHLSStreamingSessionURLGetHLSStreamingSessionURLRequest request request  beforeClientExecutionrequestreturn executeGetHLSStreamingSessionURLrequest
"public boolean updateFormulasAfterCellShift(FormulaShifter shifter, int currentExternSheetIx) {CellRangeAddress[] cellRanges = header.getCellRanges();boolean changed = false;List<CellRangeAddress> temp = new ArrayList<>();for (CellRangeAddress craOld : cellRanges) {CellRangeAddress craNew = BaseRowColShifter.shiftRange(shifter, craOld, currentExternSheetIx);if (craNew == null) {changed = true;continue;}temp.add(craNew);if (craNew != craOld) {changed = true;}}if (changed) {int nRanges = temp.size();if (nRanges == 0) {return false;}CellRangeAddress[] newRanges = new CellRangeAddress[nRanges];temp.toArray(newRanges);header.setCellRanges(newRanges);}for (CFRuleBase rule : rules) {Ptg[] ptgs;ptgs = rule.getParsedExpression1();if (ptgs != null && shifter.adjustFormula(ptgs, currentExternSheetIx)) {rule.setParsedExpression1(ptgs);}ptgs = rule.getParsedExpression2();if (ptgs != null && shifter.adjustFormula(ptgs, currentExternSheetIx)) {rule.setParsedExpression2(ptgs);}if (rule instanceof CFRule12Record) {CFRule12Record rule12 = (CFRule12Record)rule;ptgs = rule12.getParsedExpressionScale();if (ptgs != null && shifter.adjustFormula(ptgs, currentExternSheetIx)) {rule12.setParsedExpressionScale(ptgs);}}}return true;}",public boolean updateFormulasAfterCellShiftFormulaShifter shifter int currentExternSheetIx CellRangeAddress cellRanges  headergetCellRangesboolean changed  falseListCellRangeAddress temp  new ArrayListfor CellRangeAddress craOld  cellRanges CellRangeAddress craNew  BaseRowColShiftershiftRangeshifter craOld currentExternSheetIxif craNew  null changed  truecontinuetempaddcraNewif craNew  craOld changed  trueif changed int nRanges  tempsizeif nRanges  0 return falseCellRangeAddress newRanges  new CellRangeAddressnRangestemptoArraynewRangesheadersetCellRangesnewRangesfor CFRuleBase rule  rules Ptg ptgsptgs  rulegetParsedExpression1if ptgs  null  shifteradjustFormulaptgs currentExternSheetIx rulesetParsedExpression1ptgsptgs  rulegetParsedExpression2if ptgs  null  shifteradjustFormulaptgs currentExternSheetIx rulesetParsedExpression2ptgsif rule instanceof CFRule12Record CFRule12Record rule12  CFRule12Recordruleptgs  rule12getParsedExpressionScaleif ptgs  null  shifteradjustFormulaptgs currentExternSheetIx rule12setParsedExpressionScaleptgsreturn true
public int keyAt(int index) {if (mGarbage) {gc();}return mKeys[index];},public int keyAtint index if mGarbage gcreturn mKeysindex
"public JapaneseKatakanaStemFilterFactory(Map<String,String> args) {super(args);minimumLength = getInt(args, MINIMUM_LENGTH_PARAM, JapaneseKatakanaStemFilter.DEFAULT_MINIMUM_LENGTH);if (minimumLength < 2) {throw new IllegalArgumentException(""Illegal "" + MINIMUM_LENGTH_PARAM + "" "" + minimumLength + "" (must be 2 or greater)"");}if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public JapaneseKatakanaStemFilterFactoryMapStringString args superargsminimumLength  getIntargs MINIMUMLENGTHPARAM JapaneseKatakanaStemFilterDEFAULTMINIMUMLENGTHif minimumLength  2 throw new IllegalArgumentExceptionIllegal   MINIMUMLENGTHPARAM     minimumLength   must be 2 or greaterif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public static void byteArray(StringBuilder buffer, byte[] bytes) {for (int i = 0; i < bytes.length; i++) {buffer.append(""b["").append(i).append(""]="").append(bytes[i]);if (i < bytes.length - 1) {buffer.append(',');}}}",public static void byteArrayStringBuilder buffer byte bytes for int i  0 i  byteslength i bufferappendbappendiappendappendbytesiif i  byteslength  1 bufferappend
public int available(){return _in.available();},public int availablereturn inavailable
public DeleteDatasetGroupResult deleteDatasetGroup(DeleteDatasetGroupRequest request) {request = beforeClientExecution(request);return executeDeleteDatasetGroup(request);},public DeleteDatasetGroupResult deleteDatasetGroupDeleteDatasetGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteDatasetGrouprequest
public DescribeBuildResult describeBuild(DescribeBuildRequest request) {request = beforeClientExecution(request);return executeDescribeBuild(request);},public DescribeBuildResult describeBuildDescribeBuildRequest request request  beforeClientExecutionrequestreturn executeDescribeBuildrequest
public E peekLast() {Link<E> last = voidLink.previous;return (last == voidLink) ? null : last.data;},public E peekLast LinkE last  voidLinkpreviousreturn last  voidLink  null  lastdata
"public long get(long index) {assert index >= 0 && index < valueCount;final int block = (int) (index >>> blockShift);final int idx = (int) (index & blockMask);return expected(minValues[block], averages[block], idx) + subReaders[block].get(idx);}",public long getlong index assert index  0  index  valueCountfinal int block  int index  blockShiftfinal int idx  int index  blockMaskreturn expectedminValuesblock averagesblock idx  subReadersblockgetidx
public DescribeVpnGatewaysResult describeVpnGateways() {return describeVpnGateways(new DescribeVpnGatewaysRequest());},public DescribeVpnGatewaysResult describeVpnGateways return describeVpnGatewaysnew DescribeVpnGatewaysRequest
public Iterator<E> iterator() {return backingMap.keySet().iterator();},public IteratorE iterator return backingMapkeySetiterator
"public void parseLine(DocData docData, String line) {int n = 0;int k1 = 0;int k2;while ((k2 = line.indexOf(WriteLineDocTask.SEP, k1)) >= 0) {if (n>=header.length) {throw new RuntimeException(""input line has invalid format: ""+(n+1)+"" fields instead of ""+header.length+"" :: ["" + line + ""]"");}setDocDataField(docData, n, line.substring(k1,k2));++n;k1 = k2 + 1;}if (n!=header.length-1) {throw new RuntimeException(""input line has invalid format: ""+(n+1)+"" fields instead of ""+header.length+"" :: ["" + line + ""]"");}setDocDataField(docData, n, line.substring(k1));}",public void parseLineDocData docData String line int n  0int k1  0int k2while k2  lineindexOfWriteLineDocTaskSEP k1  0 if nheaderlength throw new RuntimeExceptioninput line has invalid format n1 fields instead of headerlength    line  setDocDataFielddocData n linesubstringk1k2nk1  k2  1if nheaderlength1 throw new RuntimeExceptioninput line has invalid format n1 fields instead of headerlength    line  setDocDataFielddocData n linesubstringk1
public long getTotalLLLookaheadOps() {DecisionInfo[] decisions = atnSimulator.getDecisionInfo();long k = 0;for (int i = 0; i < decisions.length; i++) {k += decisions[i].LL_TotalLook;}return k;},public long getTotalLLLookaheadOps DecisionInfo decisions  atnSimulatorgetDecisionInfolong k  0for int i  0 i  decisionslength i k  decisionsiLLTotalLookreturn k
"public static boolean matches(String regularExpression, CharSequence input) {return new Matcher(new Pattern(regularExpression, 0), input).matches();}",public static boolean matchesString regularExpression CharSequence input return new Matchernew PatternregularExpression 0 inputmatches
"public HSSFChildAnchor(int dx1, int dy1, int dx2, int dy2) {super(Math.min(dx1, dx2), Math.min(dy1, dy2), Math.max(dx1, dx2), Math.max(dy1, dy2));if (dx1 > dx2){_isHorizontallyFlipped = true;}if (dy1 > dy2){_isVerticallyFlipped = true;}}",public HSSFChildAnchorint dx1 int dy1 int dx2 int dy2 superMathmindx1 dx2 Mathmindy1 dy2 Mathmaxdx1 dx2 Mathmaxdy1 dy2if dx1  dx2isHorizontallyFlipped  trueif dy1  dy2isVerticallyFlipped  true
"public final CharBuffer put(String str) {return put(str, 0, str.length());}",public final CharBuffer putString str return putstr 0 strlength
public StartExportTaskResult startExportTask(StartExportTaskRequest request) {request = beforeClientExecution(request);return executeStartExportTask(request);},public StartExportTaskResult startExportTaskStartExportTaskRequest request request  beforeClientExecutionrequestreturn executeStartExportTaskrequest
public UpdateUserHierarchyResult updateUserHierarchy(UpdateUserHierarchyRequest request) {request = beforeClientExecution(request);return executeUpdateUserHierarchy(request);},public UpdateUserHierarchyResult updateUserHierarchyUpdateUserHierarchyRequest request request  beforeClientExecutionrequestreturn executeUpdateUserHierarchyrequest
"public String toString() {StringBuilder sb = new StringBuilder();sb.append(""[SERIESTEXT]\n"");sb.append(""  .id     ="").append(HexDump.shortToHex(getId())).append('\n');sb.append(""  .textLen="").append(field_4_text.length()).append('\n');sb.append(""  .is16bit="").append(is16bit).append('\n');sb.append(""  .text   ="").append("" ("").append(getText()).append("" )"").append('\n');sb.append(""[/SERIESTEXT]\n"");return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappendSERIESTEXTnsbappend  id     appendHexDumpshortToHexgetIdappendnsbappend  textLenappendfield4textlengthappendnsbappend  is16bitappendis16bitappendnsbappend  text   append appendgetTextappend appendnsbappendSERIESTEXTnreturn sbtoString
"public int put(Object key, int value) {Object _key = key;int _value = value;int index = findIndex(_key, keys);if (keys[index] != _key) {if (++size > threshold) {rehash();index = findIndex(_key, keys);}keys[index] = _key;values[index] = -1;}int result = values[index];values[index] = _value;return result;}",public int putObject key int value Object key  keyint value  valueint index  findIndexkey keysif keysindex  key if size  threshold rehashindex  findIndexkey keyskeysindex  keyvaluesindex  1int result  valuesindexvaluesindex  valuereturn result
public TagCommand setMessage(String message) {checkCallable();this.message = message;return this;},public TagCommand setMessageString message checkCallablethismessage  messagereturn this
public DeleteIndexFieldResult deleteIndexField(DeleteIndexFieldRequest request) {request = beforeClientExecution(request);return executeDeleteIndexField(request);},public DeleteIndexFieldResult deleteIndexFieldDeleteIndexFieldRequest request request  beforeClientExecutionrequestreturn executeDeleteIndexFieldrequest
public AbbreviatedObjectId getAbbreviatedObjectId() {return missing;},public AbbreviatedObjectId getAbbreviatedObjectId return missing
public ParserRuleContext getInvokingContext(int ruleIndex) {ParserRuleContext p = _ctx;while ( p!=null ) {if ( p.getRuleIndex() == ruleIndex ) return p;p = (ParserRuleContext)p.parent;}return null;},public ParserRuleContext getInvokingContextint ruleIndex ParserRuleContext p  ctxwhile  pnull  if  pgetRuleIndex  ruleIndex  return pp  ParserRuleContextpparentreturn null
"public boolean containsCell(int rowIndex, int columnIndex) {if (rowIndex > _lastDefinedRow) return true;for (int i=_rectangleGroups.size()-1; i>=0; i--) {BlankCellRectangleGroup bcrg = _rectangleGroups.get(i);if (bcrg.containsCell(rowIndex, columnIndex)) {return true;}}if(_currentRectangleGroup != null && _currentRectangleGroup.containsCell(rowIndex, columnIndex)) {return true;}if (_currentRowIndex != -1 && _currentRowIndex == rowIndex) {if (_firstColumnIndex <=  columnIndex && columnIndex <= _lastColumnIndex) {return true;}}return false;}",public boolean containsCellint rowIndex int columnIndex if rowIndex  lastDefinedRow return truefor int irectangleGroupssize1 i0 i BlankCellRectangleGroup bcrg  rectangleGroupsgetiif bcrgcontainsCellrowIndex columnIndex return trueifcurrentRectangleGroup  null  currentRectangleGroupcontainsCellrowIndex columnIndex return trueif currentRowIndex  1  currentRowIndex  rowIndex if firstColumnIndex   columnIndex  columnIndex  lastColumnIndex return truereturn false
public DisassociateS3ResourcesResult disassociateS3Resources(DisassociateS3ResourcesRequest request) {request = beforeClientExecution(request);return executeDisassociateS3Resources(request);},public DisassociateS3ResourcesResult disassociateS3ResourcesDisassociateS3ResourcesRequest request request  beforeClientExecutionrequestreturn executeDisassociateS3Resourcesrequest
"public FontRecord createNewFont() {FontRecord rec = createFont();records.add(records.getFontpos()+1, rec);records.setFontpos( records.getFontpos() + 1 );numfonts++;return rec;}",public FontRecord createNewFont FontRecord rec  createFontrecordsaddrecordsgetFontpos1 recrecordssetFontpos recordsgetFontpos  1 numfontsreturn rec
public boolean equals( Object o ) {return o instanceof SpanishStemmer;},public boolean equals Object o  return o instanceof SpanishStemmer
public final boolean matches(char c) {return Character.isLowerCase(c);},public final boolean matcheschar c return CharacterisLowerCasec
public ByteOrder order() {return byteBuffer.order();},public ByteOrder order return byteBufferorder
public DeleteVolumeRequest(String volumeId) {setVolumeId(volumeId);},public DeleteVolumeRequestString volumeId setVolumeIdvolumeId
public LinkedDataRecord getDataSecondaryCategoryLabels() {return dataSecondaryCategoryLabels;},public LinkedDataRecord getDataSecondaryCategoryLabels return dataSecondaryCategoryLabels
public int depth() {int n = 0;RuleContext p = this;while ( p!=null ) {p = p.parent;n++;}return n;},public int depth int n  0RuleContext p  thiswhile  pnull  p  pparentnreturn n
public PersonIdent getTagger() {return tagger;},public PersonIdent getTagger return tagger
"public ObjectId insert(int objectType, long length, InputStream in)throws IOException {throw new UnsupportedOperationException();}",public ObjectId insertint objectType long length InputStream inthrows IOException throw new UnsupportedOperationException
"public Automaton convert(Automaton utf32) {if (utf32.getNumStates() == 0) {return utf32;}int[] map = new int[utf32.getNumStates()];Arrays.fill(map, -1);List<Integer> pending = new ArrayList<>();int utf32State = 0;pending.add(utf32State);utf8 = new Automaton.Builder();int utf8State = utf8.createState();utf8.setAccept(utf8State, utf32.isAccept(utf32State));map[utf32State] = utf8State;Transition scratch = new Transition();while (pending.size() != 0) {utf32State = pending.remove(pending.size()-1);utf8State = map[utf32State];assert utf8State != -1;int numTransitions = utf32.getNumTransitions(utf32State);utf32.initTransition(utf32State, scratch);for(int i=0;i<numTransitions;i++) {utf32.getNextTransition(scratch);int destUTF32 = scratch.dest;int destUTF8 = map[destUTF32];if (destUTF8 == -1) {destUTF8 = utf8.createState();utf8.setAccept(destUTF8, utf32.isAccept(destUTF32));map[destUTF32] = destUTF8;pending.add(destUTF32);}convertOneEdge(utf8State, destUTF8, scratch.min, scratch.max);}}return utf8.finish();}",public Automaton convertAutomaton utf32 if utf32getNumStates  0 return utf32int map  new intutf32getNumStatesArraysfillmap 1ListInteger pending  new ArrayListint utf32State  0pendingaddutf32Stateutf8  new AutomatonBuilderint utf8State  utf8createStateutf8setAcceptutf8State utf32isAcceptutf32Statemaputf32State  utf8StateTransition scratch  new Transitionwhile pendingsize  0 utf32State  pendingremovependingsize1utf8State  maputf32Stateassert utf8State  1int numTransitions  utf32getNumTransitionsutf32Stateutf32initTransitionutf32State scratchforint i0inumTransitionsi utf32getNextTransitionscratchint destUTF32  scratchdestint destUTF8  mapdestUTF32if destUTF8  1 destUTF8  utf8createStateutf8setAcceptdestUTF8 utf32isAcceptdestUTF32mapdestUTF32  destUTF8pendingadddestUTF32convertOneEdgeutf8State destUTF8 scratchmin scratchmaxreturn utf8finish
public static String[] listServices() throws RemoteException {return null;},public static String listServices throws RemoteException return null
public void startWorkers(int count) {workers.addAndGet(count);},public void startWorkersint count workersaddAndGetcount
"public FacetEntry(BytesRef value, int count) {this.value = value;this.count = count;}",public FacetEntryBytesRef value int count thisvalue  valuethiscount  count
"public String toString() {String inv = invert ? ""!"" : """";return getClass().getSimpleName()+""[""+inv+nodeName+""]"";}",public String toString String inv  invert    return getClassgetSimpleNameinvnodeName
public RemoveNoteCommand setNotesRef(String notesRef) {checkCallable();this.notesRef = notesRef;return this;},public RemoveNoteCommand setNotesRefString notesRef checkCallablethisnotesRef  notesRefreturn this
"final public SrndQuery FieldsQuery() throws ParseException {SrndQuery q;ArrayList<String> fieldNames;fieldNames = OptionalFields();q = OrQuery();{if (true) return (fieldNames == null) ? q : getFieldsQuery(q, fieldNames);}throw new Error(""Missing return statement in function"");}",final public SrndQuery FieldsQuery throws ParseException SrndQuery qArrayListString fieldNamesfieldNames  OptionalFieldsq  OrQueryif true return fieldNames  null  q  getFieldsQueryq fieldNamesthrow new ErrorMissing return statement in function
public DescribeParametersResult describeParameters(DescribeParametersRequest request) {request = beforeClientExecution(request);return executeDescribeParameters(request);},public DescribeParametersResult describeParametersDescribeParametersRequest request request  beforeClientExecutionrequestreturn executeDescribeParametersrequest
"public ParseException(Token currentTokenVal,int[][] expectedTokenSequencesVal, String[] tokenImageVal) {super(new MessageImpl(QueryParserMessages.INVALID_SYNTAX, initialise(currentTokenVal, expectedTokenSequencesVal, tokenImageVal)));this.currentToken = currentTokenVal;this.expectedTokenSequences = expectedTokenSequencesVal;this.tokenImage = tokenImageVal;}",public ParseExceptionToken currentTokenValint expectedTokenSequencesVal String tokenImageVal supernew MessageImplQueryParserMessagesINVALIDSYNTAX initialisecurrentTokenVal expectedTokenSequencesVal tokenImageValthiscurrentToken  currentTokenValthisexpectedTokenSequences  expectedTokenSequencesValthistokenImage  tokenImageVal
public ListHumanTaskUisResult listHumanTaskUis(ListHumanTaskUisRequest request) {request = beforeClientExecution(request);return executeListHumanTaskUis(request);},public ListHumanTaskUisResult listHumanTaskUisListHumanTaskUisRequest request request  beforeClientExecutionrequestreturn executeListHumanTaskUisrequest
"public static ShortBuffer wrap(short[] array) {return wrap(array, 0, array.length);}",public static ShortBuffer wrapshort array return wraparray 0 arraylength
"public Parser(boolean dedup, Analyzer analyzer) {super(dedup);this.analyzer = analyzer;}",public Parserboolean dedup Analyzer analyzer superdedupthisanalyzer  analyzer
public ObjectProtectRecord(RecordInputStream in) {field_1_protect = in.readShort();},public ObjectProtectRecordRecordInputStream in field1protect  inreadShort
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeInt(_reserved0Int);out.writeShort(_reserved1Short);out.writeByte(_reserved2Byte);},public void writeLittleEndianOutput out outwriteBytesid  getPtgClassoutwriteIntreserved0IntoutwriteShortreserved1ShortoutwriteBytereserved2Byte
public int size() {if (mGarbage) {gc();}return mSize;},public int size if mGarbage gcreturn mSize
public BigDecimal getFractionalPart() {return new BigDecimal(_fractionalPart).divide(BD_2_POW_24);},public BigDecimal getFractionalPart return new BigDecimalfractionalPartdivideBD2POW24
public AttachLoadBalancerTlsCertificateResult attachLoadBalancerTlsCertificate(AttachLoadBalancerTlsCertificateRequest request) {request = beforeClientExecution(request);return executeAttachLoadBalancerTlsCertificate(request);},public AttachLoadBalancerTlsCertificateResult attachLoadBalancerTlsCertificateAttachLoadBalancerTlsCertificateRequest request request  beforeClientExecutionrequestreturn executeAttachLoadBalancerTlsCertificaterequest
"public final int step(int state, int c) {assert c < alphabetSize;if (c >= classmap.length) {return transitions[state * points.length + getCharClass(c)];} else {return transitions[state * points.length + classmap[c]];}}",public final int stepint state int c assert c  alphabetSizeif c  classmaplength return transitionsstate  pointslength  getCharClassc else return transitionsstate  pointslength  classmapc
public UpdateVoiceChannelResult updateVoiceChannel(UpdateVoiceChannelRequest request) {request = beforeClientExecution(request);return executeUpdateVoiceChannel(request);},public UpdateVoiceChannelResult updateVoiceChannelUpdateVoiceChannelRequest request request  beforeClientExecutionrequestreturn executeUpdateVoiceChannelrequest
"public void onPreReceive(ReceivePack rp,Collection<ReceiveCommand> commands) {for (int i = 0; i < count; i++)hooks[i].onPreReceive(rp, commands);}",public void onPreReceiveReceivePack rpCollectionReceiveCommand commands for int i  0 i  count ihooksionPreReceiverp commands
"public ValueEval evaluate(ValueEval[] args, OperationEvaluationContext ec) {if (args.length != 1) {return ErrorEval.VALUE_INVALID;}return evaluate(ec.getRowIndex(), ec.getColumnIndex(), args[0]);}",public ValueEval evaluateValueEval args OperationEvaluationContext ec if argslength  1 return ErrorEvalVALUEINVALIDreturn evaluateecgetRowIndex ecgetColumnIndex args0
public DescribeSpotDatafeedSubscriptionResult describeSpotDatafeedSubscription() {return describeSpotDatafeedSubscription(new DescribeSpotDatafeedSubscriptionRequest());},public DescribeSpotDatafeedSubscriptionResult describeSpotDatafeedSubscription return describeSpotDatafeedSubscriptionnew DescribeSpotDatafeedSubscriptionRequest
public int getTimeZoneOffset() {return tzOffset;},public int getTimeZoneOffset return tzOffset
public void close() {allocationSite = null;},public void close allocationSite  null
public AssociateClientVpnTargetNetworkResult associateClientVpnTargetNetwork(AssociateClientVpnTargetNetworkRequest request) {request = beforeClientExecution(request);return executeAssociateClientVpnTargetNetwork(request);},public AssociateClientVpnTargetNetworkResult associateClientVpnTargetNetworkAssociateClientVpnTargetNetworkRequest request request  beforeClientExecutionrequestreturn executeAssociateClientVpnTargetNetworkrequest
public ListEnvironmentsResult listEnvironments(ListEnvironmentsRequest request) {request = beforeClientExecution(request);return executeListEnvironments(request);},public ListEnvironmentsResult listEnvironmentsListEnvironmentsRequest request request  beforeClientExecutionrequestreturn executeListEnvironmentsrequest
"public String toFormulaString() {if(semiVolatile.isSet(_options)) {return ""ATTR(semiVolatile)"";}if(optiIf.isSet(_options)) {return ""IF"";}if( optiChoose.isSet(_options)) {return ""CHOOSE"";}if(optiSkip.isSet(_options)) {return """";}if(optiSum.isSet(_options)) {return ""SUM"";}if(baxcel.isSet(_options)) {return ""ATTR(baxcel)"";}if(space.isSet(_options)) {return """";}return ""UNKNOWN ATTRIBUTE"";}",public String toFormulaString ifsemiVolatileisSetoptions return ATTRsemiVolatileifoptiIfisSetoptions return IFif optiChooseisSetoptions return CHOOSEifoptiSkipisSetoptions return ifoptiSumisSetoptions return SUMifbaxcelisSetoptions return ATTRbaxcelifspaceisSetoptions return return UNKNOWN ATTRIBUTE
public int capacity() {return value.length;},public int capacity return valuelength
"public synchronized void setMax(int max) {if (max < 0) {max = 0;}if (max != mMax) {mMax = max;postInvalidate();if (mProgress > max) {mProgress = max;}refreshProgress(R.id.progress, mProgress, false);}}",public synchronized void setMaxint max if max  0 max  0if max  mMax mMax  maxpostInvalidateif mProgress  max mProgress  maxrefreshProgressRidprogress mProgress false
"public GetVaultNotificationsRequest(String accountId, String vaultName) {setAccountId(accountId);setVaultName(vaultName);}",public GetVaultNotificationsRequestString accountId String vaultName setAccountIdaccountIdsetVaultNamevaultName
"public FloatBuffer asReadOnlyBuffer() {return ReadOnlyFloatArrayBuffer.copy(this, mark);}",public FloatBuffer asReadOnlyBuffer return ReadOnlyFloatArrayBuffercopythis mark
"public MissingResourceException(String detailMessage, String className,String resourceName) {super(detailMessage);this.className = className;key = resourceName;}",public MissingResourceExceptionString detailMessage String classNameString resourceName superdetailMessagethisclassName  classNamekey  resourceName
"public ValueEval getRelativeValue(int relativeRowIndex, int relativeColumnIndex) {return getRelativeValue(getFirstSheetIndex(), relativeRowIndex, relativeColumnIndex);}",public ValueEval getRelativeValueint relativeRowIndex int relativeColumnIndex return getRelativeValuegetFirstSheetIndex relativeRowIndex relativeColumnIndex
"public Matcher matcher(CharSequence input) {return new Matcher(this, input);}",public Matcher matcherCharSequence input return new Matcherthis input
public ListRoomMembershipsResult listRoomMemberships(ListRoomMembershipsRequest request) {request = beforeClientExecution(request);return executeListRoomMemberships(request);},public ListRoomMembershipsResult listRoomMembershipsListRoomMembershipsRequest request request  beforeClientExecutionrequestreturn executeListRoomMembershipsrequest
"public StringBuilder insert(int offset, String str) {insert0(offset, str);return this;}",public StringBuilder insertint offset String str insert0offset strreturn this
public void registerActivityType(RegisterActivityTypeRequest request) {request = beforeClientExecution(request);executeRegisterActivityType(request);},public void registerActivityTypeRegisterActivityTypeRequest request request  beforeClientExecutionrequestexecuteRegisterActivityTyperequest
public DescribeSuggestersResult describeSuggesters(DescribeSuggestersRequest request) {request = beforeClientExecution(request);return executeDescribeSuggesters(request);},public DescribeSuggestersResult describeSuggestersDescribeSuggestersRequest request request  beforeClientExecutionrequestreturn executeDescribeSuggestersrequest
"public boolean acceptRow(int rowIndex, int firstColumnIndex, int lastColumnIndex) {if (firstColumnIndex != _firstColumnIndex) {return false;}if (lastColumnIndex != _lastColumnIndex) {return false;}if (rowIndex != _lastRowIndex+1) {return false;}_lastRowIndex = rowIndex;return true;}",public boolean acceptRowint rowIndex int firstColumnIndex int lastColumnIndex if firstColumnIndex  firstColumnIndex return falseif lastColumnIndex  lastColumnIndex return falseif rowIndex  lastRowIndex1 return falselastRowIndex  rowIndexreturn true
public boolean equals( Object o ) {return o instanceof FinnishStemmer;},public boolean equals Object o  return o instanceof FinnishStemmer
public StopDeploymentResult stopDeployment(StopDeploymentRequest request) {request = beforeClientExecution(request);return executeStopDeployment(request);},public StopDeploymentResult stopDeploymentStopDeploymentRequest request request  beforeClientExecutionrequestreturn executeStopDeploymentrequest
public ListGitHubAccountTokenNamesResult listGitHubAccountTokenNames(ListGitHubAccountTokenNamesRequest request) {request = beforeClientExecution(request);return executeListGitHubAccountTokenNames(request);},public ListGitHubAccountTokenNamesResult listGitHubAccountTokenNamesListGitHubAccountTokenNamesRequest request request  beforeClientExecutionrequestreturn executeListGitHubAccountTokenNamesrequest
public CreateBackupResult createBackup(CreateBackupRequest request) {request = beforeClientExecution(request);return executeCreateBackup(request);},public CreateBackupResult createBackupCreateBackupRequest request request  beforeClientExecutionrequestreturn executeCreateBackuprequest
public ModifyTransitGatewayVpcAttachmentResult modifyTransitGatewayVpcAttachment(ModifyTransitGatewayVpcAttachmentRequest request) {request = beforeClientExecution(request);return executeModifyTransitGatewayVpcAttachment(request);},public ModifyTransitGatewayVpcAttachmentResult modifyTransitGatewayVpcAttachmentModifyTransitGatewayVpcAttachmentRequest request request  beforeClientExecutionrequestreturn executeModifyTransitGatewayVpcAttachmentrequest
public RejectSkillResult rejectSkill(RejectSkillRequest request) {request = beforeClientExecution(request);return executeRejectSkill(request);},public RejectSkillResult rejectSkillRejectSkillRequest request request  beforeClientExecutionrequestreturn executeRejectSkillrequest
"public String getHexString() {return getGnumericPart(_red) + "":"" + getGnumericPart(_green) + "":"" + getGnumericPart(_blue);}",public String getHexString return getGnumericPartred    getGnumericPartgreen    getGnumericPartblue
"public String toString() {return ""<prefixWildcard field='"" + this.field + ""' term='"" + this.text+ ""'/>"";}",public String toString return prefixWildcard field  thisfield   term  thistext 
"public GetOSSImageAccessRequest() {super(""industry-brain"", ""2018-07-12"", ""GetOSSImageAccess"");setProtocol(ProtocolType.HTTPS);}",public GetOSSImageAccessRequest superindustrybrain 20180712 GetOSSImageAccesssetProtocolProtocolTypeHTTPS
public DeleteFleetsResult deleteFleets(DeleteFleetsRequest request) {request = beforeClientExecution(request);return executeDeleteFleets(request);},public DeleteFleetsResult deleteFleetsDeleteFleetsRequest request request  beforeClientExecutionrequestreturn executeDeleteFleetsrequest
"public void set(E object) {if (expectedModCount == modCount) {try {AbstractList.this.set(lastPosition, object);} catch (IndexOutOfBoundsException e) {throw new IllegalStateException();}} else {throw new ConcurrentModificationException();}}",public void setE object if expectedModCount  modCount try AbstractListthissetlastPosition object catch IndexOutOfBoundsException e throw new IllegalStateException else throw new ConcurrentModificationException
"public InvalidationBatch(Paths paths, String callerReference) {setPaths(paths);setCallerReference(callerReference);}",public InvalidationBatchPaths paths String callerReference setPathspathssetCallerReferencecallerReference
public int getPrecision() {return p;},public int getPrecision return p
public boolean addSubRecord(SubRecord o) {return subrecords.add(o);},public boolean addSubRecordSubRecord o return subrecordsaddo
"public int serialize(int offset, byte[] data, EscherSerializationListener listener) {listener.beforeRecordSerialize( offset, getRecordId(), this );int pos = offset;LittleEndian.putShort( data, pos, getOptions() );          pos += 2;LittleEndian.putShort( data, pos, getRecordId() );         pos += 2;LittleEndian.putInt( data, pos, getRecordSize()-8 );       pos += 4;LittleEndian.putInt( data, pos, field_1_dx1 );             pos += 4;LittleEndian.putInt( data, pos, field_2_dy1 );             pos += 4;LittleEndian.putInt( data, pos, field_3_dx2 );             pos += 4;LittleEndian.putInt( data, pos, field_4_dy2 );             pos += 4;listener.afterRecordSerialize( pos, getRecordId(), pos - offset, this );return pos - offset;}",public int serializeint offset byte data EscherSerializationListener listener listenerbeforeRecordSerialize offset getRecordId this int pos  offsetLittleEndianputShort data pos getOptions           pos  2LittleEndianputShort data pos getRecordId          pos  2LittleEndianputInt data pos getRecordSize8        pos  4LittleEndianputInt data pos field1dx1              pos  4LittleEndianputInt data pos field2dy1              pos  4LittleEndianputInt data pos field3dx2              pos  4LittleEndianputInt data pos field4dy2              pos  4listenerafterRecordSerialize pos getRecordId pos  offset this return pos  offset
"public static final ObjectId fromRaw(int[] is) {return fromRaw(is, 0);}",public static final ObjectId fromRawint is return fromRawis 0
public DisassociateIpGroupsResult disassociateIpGroups(DisassociateIpGroupsRequest request) {request = beforeClientExecution(request);return executeDisassociateIpGroups(request);},public DisassociateIpGroupsResult disassociateIpGroupsDisassociateIpGroupsRequest request request  beforeClientExecutionrequestreturn executeDisassociateIpGroupsrequest
"public static void mkdirs(File d, boolean skipExisting)throws IOException {if (!d.mkdirs()) {if (skipExisting && d.isDirectory())return;throw new IOException(MessageFormat.format(JGitText.get().mkDirsFailed, d.getAbsolutePath()));}}",public static void mkdirsFile d boolean skipExistingthrows IOException if dmkdirs if skipExisting  disDirectoryreturnthrow new IOExceptionMessageFormatformatJGitTextgetmkDirsFailed dgetAbsolutePath
"public GetImageManifestRequest() {super(""cr"", ""2016-06-07"", ""GetImageManifest"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/tags/[Tag]/manifest"");setMethod(MethodType.GET);}",public GetImageManifestRequest supercr 20160607 GetImageManifest crsetUriPatternreposRepoNamespaceRepoNametagsTagmanifestsetMethodMethodTypeGET
public ListIdentitiesResult listIdentities(ListIdentitiesRequest request) {request = beforeClientExecution(request);return executeListIdentities(request);},public ListIdentitiesResult listIdentitiesListIdentitiesRequest request request  beforeClientExecutionrequestreturn executeListIdentitiesrequest
"public final String toString() {return getClass().getName() + "" ["" +_sfr.getRange() +""]"";}",public final String toString return getClassgetName    sfrgetRange 
"public byte[] toByteArray() {byte[] result = new byte[LittleEndianConsts.INT_SIZE*2+_value.length];LittleEndianByteArrayOutputStream bos = new LittleEndianByteArrayOutputStream(result,0);try {bos.writeInt(LittleEndianConsts.INT_SIZE + _value.length);bos.writeInt(_format);bos.write(_value);return result;} finally {IOUtils.closeQuietly(bos);}}",public byte toByteArray byte result  new byteLittleEndianConstsINTSIZE2valuelengthLittleEndianByteArrayOutputStream bos  new LittleEndianByteArrayOutputStreamresult0try boswriteIntLittleEndianConstsINTSIZE  valuelengthboswriteIntformatboswritevaluereturn result finally IOUtilscloseQuietlybos
"public void update(byte[] b, int off, int len) {if (len >= buffer.length) {flush();in.update(b, off, len);} else {if (upto + len > buffer.length) {flush();}System.arraycopy(b, off, buffer, upto, len);upto += len;}}",public void updatebyte b int off int len if len  bufferlength flushinupdateb off len else if upto  len  bufferlength flushSystemarraycopyb off buffer upto lenupto  len
"public HSSFPicture createPicture(ClientAnchor anchor, int pictureIndex) {return createPicture((HSSFClientAnchor) anchor, pictureIndex);}",public HSSFPicture createPictureClientAnchor anchor int pictureIndex return createPictureHSSFClientAnchor anchor pictureIndex
public String getAccessKeySecret() {return legacyCredential.getAccessSecret();},public String getAccessKeySecret return legacyCredentialgetAccessSecret
"public int compareTo(ByteBuffer otherBuffer) {int compareRemaining = (remaining() < otherBuffer.remaining()) ? remaining(): otherBuffer.remaining();int thisPos = position;int otherPos = otherBuffer.position;byte thisByte, otherByte;while (compareRemaining > 0) {thisByte = get(thisPos);otherByte = otherBuffer.get(otherPos);if (thisByte != otherByte) {return thisByte < otherByte ? -1 : 1;}thisPos++;otherPos++;compareRemaining--;}return remaining() - otherBuffer.remaining();}",public int compareToByteBuffer otherBuffer int compareRemaining  remaining  otherBufferremaining  remaining otherBufferremainingint thisPos  positionint otherPos  otherBufferpositionbyte thisByte otherBytewhile compareRemaining  0 thisByte  getthisPosotherByte  otherBuffergetotherPosif thisByte  otherByte return thisByte  otherByte  1  1thisPosotherPoscompareRemainingreturn remaining  otherBufferremaining
public CreateResolverEndpointResult createResolverEndpoint(CreateResolverEndpointRequest request) {request = beforeClientExecution(request);return executeCreateResolverEndpoint(request);},public CreateResolverEndpointResult createResolverEndpointCreateResolverEndpointRequest request request  beforeClientExecutionrequestreturn executeCreateResolverEndpointrequest
"public HunspellStemFilterFactory(Map<String,String> args) {super(args);dictionaryFiles = require(args, PARAM_DICTIONARY);affixFile = get(args, PARAM_AFFIX);ignoreCase = getBoolean(args, PARAM_IGNORE_CASE, false);longestOnly = getBoolean(args, PARAM_LONGEST_ONLY, false);getBoolean(args, ""strictAffixParsing"", true);getInt(args, ""recursionCap"", 0);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public HunspellStemFilterFactoryMapStringString args superargsdictionaryFiles  requireargs PARAMDICTIONARYaffixFile  getargs PARAMAFFIXignoreCase  getBooleanargs PARAMIGNORECASE falselongestOnly  getBooleanargs PARAMLONGESTONLY falsegetBooleanargs strictAffixParsing truegetIntargs recursionCap 0if argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {final byte block = blocks[blocksOffset++];values[valuesOffset++] = (block >>> 4) & 15;values[valuesOffset++] = block & 15;}}",public void decodebyte blocks int blocksOffset long values int valuesOffset int iterations for int j  0 j  iterations j final byte block  blocksblocksOffsetvaluesvaluesOffset  block  4  15valuesvaluesOffset  block  15
public CancelSpotInstanceRequestsResult cancelSpotInstanceRequests(CancelSpotInstanceRequestsRequest request) {request = beforeClientExecution(request);return executeCancelSpotInstanceRequests(request);},public CancelSpotInstanceRequestsResult cancelSpotInstanceRequestsCancelSpotInstanceRequestsRequest request request  beforeClientExecutionrequestreturn executeCancelSpotInstanceRequestsrequest
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_print_headers);},public void serializeLittleEndianOutput out outwriteShortfield1printheaders
"public void copyTo(char[] tmp, StringBuilder w) {toHexCharArray(tmp);w.append(tmp, 0, Constants.OBJECT_ID_STRING_LENGTH);}",public void copyTochar tmp StringBuilder w toHexCharArraytmpwappendtmp 0 ConstantsOBJECTIDSTRINGLENGTH
public DeleteVaultAccessPolicyResult deleteVaultAccessPolicy(DeleteVaultAccessPolicyRequest request) {request = beforeClientExecution(request);return executeDeleteVaultAccessPolicy(request);},public DeleteVaultAccessPolicyResult deleteVaultAccessPolicyDeleteVaultAccessPolicyRequest request request  beforeClientExecutionrequestreturn executeDeleteVaultAccessPolicyrequest
public SpanOrBuilder(SpanQueryBuilder factory) {this.factory = factory;},public SpanOrBuilderSpanQueryBuilder factory thisfactory  factory
public DescribeConnectionsOnInterconnectResult describeConnectionsOnInterconnect(DescribeConnectionsOnInterconnectRequest request) {request = beforeClientExecution(request);return executeDescribeConnectionsOnInterconnect(request);},public DescribeConnectionsOnInterconnectResult describeConnectionsOnInterconnectDescribeConnectionsOnInterconnectRequest request request  beforeClientExecutionrequestreturn executeDescribeConnectionsOnInterconnectrequest
public MultiBoolFunction(List<ValueSource> sources) {this.sources = sources;},public MultiBoolFunctionListValueSource sources thissources  sources
"public TokenStream create(TokenStream input) {return new ICUTransformFilter(input, transliterator);}",public TokenStream createTokenStream input return new ICUTransformFilterinput transliterator
public void extendA() {endA++;},public void extendA endA
public DeleteReceiptRuleSetResult deleteReceiptRuleSet(DeleteReceiptRuleSetRequest request) {request = beforeClientExecution(request);return executeDeleteReceiptRuleSet(request);},public DeleteReceiptRuleSetResult deleteReceiptRuleSetDeleteReceiptRuleSetRequest request request  beforeClientExecutionrequestreturn executeDeleteReceiptRuleSetrequest
"public PutRetentionPolicyRequest(String logGroupName, Integer retentionInDays) {setLogGroupName(logGroupName);setRetentionInDays(retentionInDays);}",public PutRetentionPolicyRequestString logGroupName Integer retentionInDays setLogGroupNamelogGroupNamesetRetentionInDaysretentionInDays
"public void insertRow(RowRecord row) {_rowRecords.put(Integer.valueOf(row.getRowNumber()), row);_rowRecordValues = null;if ((row.getRowNumber() < _firstrow) || (_firstrow == -1)) {_firstrow = row.getRowNumber();}if ((row.getRowNumber() > _lastrow) || (_lastrow == -1)) {_lastrow = row.getRowNumber();}}",public void insertRowRowRecord row rowRecordsputIntegervalueOfrowgetRowNumber rowrowRecordValues  nullif rowgetRowNumber  firstrow  firstrow  1 firstrow  rowgetRowNumberif rowgetRowNumber  lastrow  lastrow  1 lastrow  rowgetRowNumber
"public String toString() {return ""TermState"";}",public String toString return TermState
public LsRemoteCommand setHeads(boolean heads) {this.heads = heads;return this;},public LsRemoteCommand setHeadsboolean heads thisheads  headsreturn this
public void remove(String key) {deleteNode(getNode(key.trim().toLowerCase(locale)));},public void removeString key deleteNodegetNodekeytrimtoLowerCaselocale
"public Object[][] getTokenArrayValues() {if (_arrayValues == null) {throw new IllegalStateException(""array values not read yet"");}Object[][] result = new Object[_nRows][_nColumns];for (int r = 0; r < _nRows; r++) {Object[] rowData = result[r];for (int c = 0; c < _nColumns; c++) {rowData[c] = _arrayValues[getValueIndex(c, r)];}}return result;}",public Object getTokenArrayValues if arrayValues  null throw new IllegalStateExceptionarray values not read yetObject result  new ObjectnRowsnColumnsfor int r  0 r  nRows r Object rowData  resultrfor int c  0 c  nColumns c rowDatac  arrayValuesgetValueIndexc rreturn result
public PutIntegrationResponseResult putIntegrationResponse(PutIntegrationResponseRequest request) {request = beforeClientExecution(request);return executePutIntegrationResponse(request);},public PutIntegrationResponseResult putIntegrationResponsePutIntegrationResponseRequest request request  beforeClientExecutionrequestreturn executePutIntegrationResponserequest
"public void write(String str, int offset, int count) throws IOException {synchronized (lock) {if (count < 0) {throw new StringIndexOutOfBoundsException(str, offset, count);}if (str == null) {throw new NullPointerException(""str == null"");}if ((offset | count) < 0 || offset > str.length() - count) {throw new StringIndexOutOfBoundsException(str, offset, count);}checkStatus();CharBuffer chars = CharBuffer.wrap(str, offset, count + offset);convert(chars);}}",public void writeString str int offset int count throws IOException synchronized lock if count  0 throw new StringIndexOutOfBoundsExceptionstr offset countif str  null throw new NullPointerExceptionstr  nullif offset  count  0  offset  strlength  count throw new StringIndexOutOfBoundsExceptionstr offset countcheckStatusCharBuffer chars  CharBufferwrapstr offset count  offsetconvertchars
public String subscriptionId() {return this.subscriptionId;},public String subscriptionId return thissubscriptionId
"public HSSFPicture createPicture(HSSFClientAnchor anchor, int pictureIndex) {HSSFPicture shape = new HSSFPicture(null, anchor);shape.setPictureIndex(pictureIndex);addShape(shape);onCreate(shape);return shape;}",public HSSFPicture createPictureHSSFClientAnchor anchor int pictureIndex HSSFPicture shape  new HSSFPicturenull anchorshapesetPictureIndexpictureIndexaddShapeshapeonCreateshapereturn shape
public ReleaseStaticIpResult releaseStaticIp(ReleaseStaticIpRequest request) {request = beforeClientExecution(request);return executeReleaseStaticIp(request);},public ReleaseStaticIpResult releaseStaticIpReleaseStaticIpRequest request request  beforeClientExecutionrequestreturn executeReleaseStaticIprequest
public ListConfigurationSetsResult listConfigurationSets(ListConfigurationSetsRequest request) {request = beforeClientExecution(request);return executeListConfigurationSets(request);},public ListConfigurationSetsResult listConfigurationSetsListConfigurationSetsRequest request request  beforeClientExecutionrequestreturn executeListConfigurationSetsrequest
public UpdateRecordsResult updateRecords(UpdateRecordsRequest request) {request = beforeClientExecution(request);return executeUpdateRecords(request);},public UpdateRecordsResult updateRecordsUpdateRecordsRequest request request  beforeClientExecutionrequestreturn executeUpdateRecordsrequest
"public Token emit() {Token t = _factory.create(_tokenFactorySourcePair, _type, _text, _channel, _tokenStartCharIndex, getCharIndex()-1,_tokenStartLine, _tokenStartCharPositionInLine);emit(t);return t;}",public Token emit Token t  factorycreatetokenFactorySourcePair type text channel tokenStartCharIndex getCharIndex1tokenStartLine tokenStartCharPositionInLineemittreturn t
"public synchronized IndexCommit snapshot() throws IOException {if (!initCalled) {throw new IllegalStateException(""this instance is not being used by IndexWriter; be sure to use the instance returned from writer.getConfig().getIndexDeletionPolicy()"");}if (lastCommit == null) {throw new IllegalStateException(""No index commit to snapshot"");}incRef(lastCommit);return lastCommit;}",public synchronized IndexCommit snapshot throws IOException if initCalled throw new IllegalStateExceptionthis instance is not being used by IndexWriter be sure to use the instance returned from writergetConfiggetIndexDeletionPolicyif lastCommit  null throw new IllegalStateExceptionNo index commit to snapshotincReflastCommitreturn lastCommit
"public void build(InputIterator iter) throws IOException {synchronized (searcherMgrLock) {if (searcherMgr != null) {searcherMgr.close();searcherMgr = null;}if (writer != null) {writer.close();writer = null;}boolean success = false;try {writer = new IndexWriter(dir,getIndexWriterConfig(getGramAnalyzer(), IndexWriterConfig.OpenMode.CREATE));BytesRef text;while ((text = iter.next()) != null) {BytesRef payload;if (iter.hasPayloads()) {payload = iter.payload();} else {payload = null;}add(text, iter.contexts(), iter.weight(), payload);}if (commitOnBuild || closeIndexWriterOnBuild) {commit();}searcherMgr = new SearcherManager(writer, null);success = true;} finally {if (success) {if (closeIndexWriterOnBuild) {writer.close();writer = null;}} else {  if (writer != null) {writer.rollback();writer = null;}}}}}",public void buildInputIterator iter throws IOException synchronized searcherMgrLock if searcherMgr  null searcherMgrclosesearcherMgr  nullif writer  null writerclosewriter  nullboolean success  falsetry writer  new IndexWriterdirgetIndexWriterConfiggetGramAnalyzer IndexWriterConfigOpenModeCREATEBytesRef textwhile text  iternext  null BytesRef payloadif iterhasPayloads payload  iterpayload else payload  nulladdtext itercontexts iterweight payloadif commitOnBuild  closeIndexWriterOnBuild commitsearcherMgr  new SearcherManagerwriter nullsuccess  true finally if success if closeIndexWriterOnBuild writerclosewriter  null else   if writer  null writerrollbackwriter  null
public ShortBuffer put(ShortBuffer buf) {throw new ReadOnlyBufferException();},public ShortBuffer putShortBuffer buf throw new ReadOnlyBufferException
"public int stemSuffix(char s[], int len) {for (int i = 0; i < suffixes.length; i++)if (endsWithCheckLength(s, len, suffixes[i]))len = deleteN(s, len - suffixes[i].length, len, suffixes[i].length);return len;}",public int stemSuffixchar s int len for int i  0 i  suffixeslength iif endsWithCheckLengths len suffixesilen  deleteNs len  suffixesilength len suffixesilengthreturn len
public SeriesListRecord(RecordInputStream in) {int nItems = in.readUShort();short[] ss = new short[nItems];for (int i = 0; i < nItems; i++) {ss[i] = in.readShort();}field_1_seriesNumbers = ss;},public SeriesListRecordRecordInputStream in int nItems  inreadUShortshort ss  new shortnItemsfor int i  0 i  nItems i ssi  inreadShortfield1seriesNumbers  ss
public boolean equals(Object obj) {if (obj == this) {return true;}else if (!(obj instanceof LexerModeAction)) {return false;}return mode == ((LexerModeAction)obj).mode;},public boolean equalsObject obj if obj  this return trueelse if obj instanceof LexerModeAction return falsereturn mode  LexerModeActionobjmode
"public String getLineDelimiter() {if (size() == 0) {return null;}int e = getEnd(0);if (content[e - 1] != '\n') {return null;}if (content.length > 1 && e > 1 && content[e - 2] == '\r') {return ""\r\n""; }return ""\n""; }",public String getLineDelimiter if size  0 return nullint e  getEnd0if contente  1  n return nullif contentlength  1  e  1  contente  2  r return rn return n 
"public NormalisedDecimal roundUnits() {long wholePart = _wholePart;if (_fractionalPart >= FRAC_HALF) {wholePart++;}int de = _relativeDecimalExponent;if (wholePart < MAX_REP_WHOLE_PART) {return new NormalisedDecimal(wholePart, 0, de);}return new NormalisedDecimal(wholePart/10, 0, de+1);}",public NormalisedDecimal roundUnits long wholePart  wholePartif fractionalPart  FRACHALF wholePartint de  relativeDecimalExponentif wholePart  MAXREPWHOLEPART return new NormalisedDecimalwholePart 0 dereturn new NormalisedDecimalwholePart10 0 de1
public PLSAggregate(RecordStream rs) {_pls = rs.getNext();if (rs.peekNextSid()==ContinueRecord.sid) {List<ContinueRecord> temp = new ArrayList<>();while (rs.peekNextSid()==ContinueRecord.sid) {temp.add((ContinueRecord)rs.getNext());}_plsContinues = new ContinueRecord[temp.size()];temp.toArray(_plsContinues);} else {_plsContinues = EMPTY_CONTINUE_RECORD_ARRAY;}},public PLSAggregateRecordStream rs pls  rsgetNextif rspeekNextSidContinueRecordsid ListContinueRecord temp  new ArrayListwhile rspeekNextSidContinueRecordsid tempaddContinueRecordrsgetNextplsContinues  new ContinueRecordtempsizetemptoArrayplsContinues else plsContinues  EMPTYCONTINUERECORDARRAY
public AssociateDelegateToResourceResult associateDelegateToResource(AssociateDelegateToResourceRequest request) {request = beforeClientExecution(request);return executeAssociateDelegateToResource(request);},public AssociateDelegateToResourceResult associateDelegateToResourceAssociateDelegateToResourceRequest request request  beforeClientExecutionrequestreturn executeAssociateDelegateToResourcerequest
public static void setDefault(CredentialsProvider p) {defaultProvider = p;},public static void setDefaultCredentialsProvider p defaultProvider  p
public EscherProperty getEscherProperty( int index ){return properties.get( index );},public EscherProperty getEscherProperty int index return propertiesget index 
"@Override public void add(int index, E object) {synchronized (CopyOnWriteArrayList.this) {slice.checkPositionIndex(index);slice.checkConcurrentModification(elements);CopyOnWriteArrayList.this.add(index + slice.from, object);slice = new Slice(elements, slice.from, slice.to + 1);}}",Override public void addint index E object synchronized CopyOnWriteArrayListthis slicecheckPositionIndexindexslicecheckConcurrentModificationelementsCopyOnWriteArrayListthisaddindex  slicefrom objectslice  new Sliceelements slicefrom sliceto  1
"public static BitField getInstance(int mask) {BitField f = instances.get(Integer.valueOf(mask));if (f == null) {f = new BitField(mask);instances.put(Integer.valueOf(mask), f);}return f;}",public static BitField getInstanceint mask BitField f  instancesgetIntegervalueOfmaskif f  null f  new BitFieldmaskinstancesputIntegervalueOfmask freturn f
"public boolean get(int doc) {final int Reader = ReaderUtil.subIndex(doc, starts);assert Reader != -1;final Bits bits = subs[Reader];if (bits == null) {return defaultValue;} else {assert checkLength(Reader, doc);return bits.get(doc-starts[Reader]);}}",public boolean getint doc final int Reader  ReaderUtilsubIndexdoc startsassert Reader  1final Bits bits  subsReaderif bits  null return defaultValue else assert checkLengthReader docreturn bitsgetdocstartsReader
public DeleteFieldLevelEncryptionProfileResult deleteFieldLevelEncryptionProfile(DeleteFieldLevelEncryptionProfileRequest request) {request = beforeClientExecution(request);return executeDeleteFieldLevelEncryptionProfile(request);},public DeleteFieldLevelEncryptionProfileResult deleteFieldLevelEncryptionProfileDeleteFieldLevelEncryptionProfileRequest request request  beforeClientExecutionrequestreturn executeDeleteFieldLevelEncryptionProfilerequest
"public EscherComplexProperty(short id, byte[] complexData) {this(id, complexData == null ? 0 : complexData.length);setComplexData(complexData);}",public EscherComplexPropertyshort id byte complexData thisid complexData  null  0  complexDatalengthsetComplexDatacomplexData
"public TermVectorsReader clone() {if (in == null) {throw new AlreadyClosedException(""this TermVectorsReader is closed"");}return new SimpleTextTermVectorsReader(offsets, in.clone());}",public TermVectorsReader clone if in  null throw new AlreadyClosedExceptionthis TermVectorsReader is closedreturn new SimpleTextTermVectorsReaderoffsets inclone
"public static void fill(short[] array, short value) {for (int i = 0; i < array.length; i++) {array[i] = value;}}",public static void fillshort array short value for int i  0 i  arraylength i arrayi  value
public final int getEndB() {return endB;},public final int getEndB return endB
public DescribeAutoMLJobResult describeAutoMLJob(DescribeAutoMLJobRequest request) {request = beforeClientExecution(request);return executeDescribeAutoMLJob(request);},public DescribeAutoMLJobResult describeAutoMLJobDescribeAutoMLJobRequest request request  beforeClientExecutionrequestreturn executeDescribeAutoMLJobrequest
"public SelectionRecord(int activeCellRow, int activeCellCol) {field_1_pane = 3; field_2_row_active_cell = activeCellRow;field_3_col_active_cell = activeCellCol;field_4_active_cell_ref_index = 0;field_6_refs = new CellRangeAddress8Bit[] {new CellRangeAddress8Bit(activeCellRow, activeCellRow, activeCellCol, activeCellCol),};}",public SelectionRecordint activeCellRow int activeCellCol field1pane  3 field2rowactivecell  activeCellRowfield3colactivecell  activeCellColfield4activecellrefindex  0field6refs  new CellRangeAddress8Bit new CellRangeAddress8BitactiveCellRow activeCellRow activeCellCol activeCellCol
public InvalidationBatch(String callerReference) {setCallerReference(callerReference);},public InvalidationBatchString callerReference setCallerReferencecallerReference
"public int compareTo(IndexCommit commit) {if (getDirectory() != commit.getDirectory()) {throw new UnsupportedOperationException(""cannot compare IndexCommits from different Directory instances"");}long gen = getGeneration();long comgen = commit.getGeneration();return Long.compare(gen, comgen);}",public int compareToIndexCommit commit if getDirectory  commitgetDirectory throw new UnsupportedOperationExceptioncannot compare IndexCommits from different Directory instanceslong gen  getGenerationlong comgen  commitgetGenerationreturn Longcomparegen comgen
public void serialize(LittleEndianOutput out) {out.writeShort(getOptions());out.writeShort(getTopRow());out.writeShort(getLeftCol());out.writeInt(getHeaderColor());out.writeShort(getPageBreakZoom());out.writeShort(getNormalZoom());out.writeInt(getReserved());},public void serializeLittleEndianOutput out outwriteShortgetOptionsoutwriteShortgetTopRowoutwriteShortgetLeftColoutwriteIntgetHeaderColoroutwriteShortgetPageBreakZoomoutwriteShortgetNormalZoomoutwriteIntgetReserved
"public PhoneticFilter create(TokenStream input) {return new PhoneticFilter(input, getEncoder(), inject);}",public PhoneticFilter createTokenStream input return new PhoneticFilterinput getEncoder inject
public StartMatchmakingResult startMatchmaking(StartMatchmakingRequest request) {request = beforeClientExecution(request);return executeStartMatchmaking(request);},public StartMatchmakingResult startMatchmakingStartMatchmakingRequest request request  beforeClientExecutionrequestreturn executeStartMatchmakingrequest
public CreateReusableDelegationSetResult createReusableDelegationSet(CreateReusableDelegationSetRequest request) {request = beforeClientExecution(request);return executeCreateReusableDelegationSet(request);},public CreateReusableDelegationSetResult createReusableDelegationSetCreateReusableDelegationSetRequest request request  beforeClientExecutionrequestreturn executeCreateReusableDelegationSetrequest
public GC setProgressMonitor(ProgressMonitor pm) {this.pm = (pm == null) ? NullProgressMonitor.INSTANCE : pm;return this;},public GC setProgressMonitorProgressMonitor pm thispm  pm  null  NullProgressMonitorINSTANCE  pmreturn this
public synchronized String getRegionId() {return regionId;},public synchronized String getRegionId return regionId
public CreateVpcEndpointServiceConfigurationResult createVpcEndpointServiceConfiguration(CreateVpcEndpointServiceConfigurationRequest request) {request = beforeClientExecution(request);return executeCreateVpcEndpointServiceConfiguration(request);},public CreateVpcEndpointServiceConfigurationResult createVpcEndpointServiceConfigurationCreateVpcEndpointServiceConfigurationRequest request request  beforeClientExecutionrequestreturn executeCreateVpcEndpointServiceConfigurationrequest
"public IndexableField getField(FieldInfo fieldInfo) {fieldNames.add(fieldInfo.name);List<LazyField> values = fields.get(fieldInfo.number);if (null == values) {values = new ArrayList<>();fields.put(fieldInfo.number, values);}LazyField value = new LazyField(fieldInfo.name, fieldInfo.number);values.add(value);synchronized (this) {doc = null;}return value;}",public IndexableField getFieldFieldInfo fieldInfo fieldNamesaddfieldInfonameListLazyField values  fieldsgetfieldInfonumberif null  values values  new ArrayListfieldsputfieldInfonumber valuesLazyField value  new LazyFieldfieldInfoname fieldInfonumbervaluesaddvaluesynchronized this doc  nullreturn value
public static int nextHighestPowerOfTwo(int v) {v--;v |= v >> 1;v |= v >> 2;v |= v >> 4;v |= v >> 8;v |= v >> 16;v++;return v;},public static int nextHighestPowerOfTwoint v vv  v  1v  v  2v  v  4v  v  8v  v  16vreturn v
"public boolean contains(int x, int y) {return isValid() &&x >= this.x &&y >= this.y &&x < (this.x + this.w) &&y < (this.y + this.h);}",public boolean containsint x int y return isValid x  thisx y  thisy x  thisx  thisw y  thisy  thish
public int getFormat() {return PACK_DELTA;},public int getFormat return PACKDELTA
public Tag(String key) {setKey(key);},public TagString key setKeykey
"public InactivatePhotosRequest() {super(""CloudPhoto"", ""2017-07-11"", ""InactivatePhotos"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public InactivatePhotosRequest superCloudPhoto 20170711 InactivatePhotos cloudphotosetProtocolProtocolTypeHTTPS
public DescribeEventSubscriptionsResult describeEventSubscriptions() {return describeEventSubscriptions(new DescribeEventSubscriptionsRequest());},public DescribeEventSubscriptionsResult describeEventSubscriptions return describeEventSubscriptionsnew DescribeEventSubscriptionsRequest
public short get(int index) {checkIndex(index);return byteBuffer.getShort(index * SizeOf.SHORT);},public short getint index checkIndexindexreturn byteBuffergetShortindex  SizeOfSHORT
public boolean isExportAll() {return exportAll;},public boolean isExportAll return exportAll
"public static void validateSecondArg(int comparisonOperator, String paramValue) {switch (comparisonOperator) {case BETWEEN:case NOT_BETWEEN:if (paramValue == null) {throw new IllegalArgumentException(""expr2 must be supplied for 'between' comparisons"");}}}",public static void validateSecondArgint comparisonOperator String paramValue switch comparisonOperator case BETWEENcase NOTBETWEENif paramValue  null throw new IllegalArgumentExceptionexpr2 must be supplied for between comparisons
public V next() {V v = nextValue;advance();return v;},public V next V v  nextValueadvancereturn v
public UpdateSchemaResult updateSchema(UpdateSchemaRequest request) {request = beforeClientExecution(request);return executeUpdateSchema(request);},public UpdateSchemaResult updateSchemaUpdateSchemaRequest request request  beforeClientExecutionrequestreturn executeUpdateSchemarequest
"public PortugueseMinimalStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public PortugueseMinimalStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public SeriesChartGroupIndexRecord(RecordInputStream in) {field_1_chartGroupIndex = in.readShort();},public SeriesChartGroupIndexRecordRecordInputStream in field1chartGroupIndex  inreadShort
"public ValueEval evaluate(int srcCellRow, int srcCellCol) {return ErrorEval.NA;}",public ValueEval evaluateint srcCellRow int srcCellCol return ErrorEvalNA
"public E get(int key) {return get(key, null);}",public E getint key return getkey null
public DescribeComponentConfigurationResult describeComponentConfiguration(DescribeComponentConfigurationRequest request) {request = beforeClientExecution(request);return executeDescribeComponentConfiguration(request);},public DescribeComponentConfigurationResult describeComponentConfigurationDescribeComponentConfigurationRequest request request  beforeClientExecutionrequestreturn executeDescribeComponentConfigurationrequest
public CellRangeAddressList copy() {CellRangeAddressList result = new CellRangeAddressList();int nItems = _list.size();for (int k = 0; k < nItems; k++) {CellRangeAddress region = _list.get(k);result.addCellRangeAddress(region.copy());}return result;},public CellRangeAddressList copy CellRangeAddressList result  new CellRangeAddressListint nItems  listsizefor int k  0 k  nItems k CellRangeAddress region  listgetkresultaddCellRangeAddressregioncopyreturn result
public DescribeClientVpnAuthorizationRulesResult describeClientVpnAuthorizationRules(DescribeClientVpnAuthorizationRulesRequest request) {request = beforeClientExecution(request);return executeDescribeClientVpnAuthorizationRules(request);},public DescribeClientVpnAuthorizationRulesResult describeClientVpnAuthorizationRulesDescribeClientVpnAuthorizationRulesRequest request request  beforeClientExecutionrequestreturn executeDescribeClientVpnAuthorizationRulesrequest
"public HSSFConditionalFormattingRule getRule(int idx) {CFRuleBase ruleRecord = cfAggregate.getRule(idx);return new HSSFConditionalFormattingRule(sheet, ruleRecord);}",public HSSFConditionalFormattingRule getRuleint idx CFRuleBase ruleRecord  cfAggregategetRuleidxreturn new HSSFConditionalFormattingRulesheet ruleRecord
public final Ref getAdvertisedRef(String name) {return advertisedRefs.get(name);},public final Ref getAdvertisedRefString name return advertisedRefsgetname
public int getType() {return delegate().getType();},public int getType return delegategetType
public DeleteCustomVerificationEmailTemplateResult deleteCustomVerificationEmailTemplate(DeleteCustomVerificationEmailTemplateRequest request) {request = beforeClientExecution(request);return executeDeleteCustomVerificationEmailTemplate(request);},public DeleteCustomVerificationEmailTemplateResult deleteCustomVerificationEmailTemplateDeleteCustomVerificationEmailTemplateRequest request request  beforeClientExecutionrequestreturn executeDeleteCustomVerificationEmailTemplaterequest
"public void setRefLogMessage(String msg) {if (msg == null)disableRefLog();elsedestination.setRefLogMessage(msg, false);}",public void setRefLogMessageString msg if msg  nulldisableRefLogelsedestinationsetRefLogMessagemsg false
public CreateVpcEndpointConnectionNotificationResult createVpcEndpointConnectionNotification(CreateVpcEndpointConnectionNotificationRequest request) {request = beforeClientExecution(request);return executeCreateVpcEndpointConnectionNotification(request);},public CreateVpcEndpointConnectionNotificationResult createVpcEndpointConnectionNotificationCreateVpcEndpointConnectionNotificationRequest request request  beforeClientExecutionrequestreturn executeCreateVpcEndpointConnectionNotificationrequest
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {int rnum;if (arg0 instanceof AreaEval) {rnum = ((AreaEval) arg0).getFirstColumn();} else if (arg0 instanceof RefEval) {rnum = ((RefEval) arg0).getColumn();} else {return ErrorEval.VALUE_INVALID;}return new NumberEval(rnum + 1);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 int rnumif arg0 instanceof AreaEval rnum  AreaEval arg0getFirstColumn else if arg0 instanceof RefEval rnum  RefEval arg0getColumn else return ErrorEvalVALUEINVALIDreturn new NumberEvalrnum  1
"public CompleteMultipartUploadRequest(String accountId, String vaultName, String uploadId, String archiveSize, String checksum) {setAccountId(accountId);setVaultName(vaultName);setUploadId(uploadId);setArchiveSize(archiveSize);setChecksum(checksum);}",public CompleteMultipartUploadRequestString accountId String vaultName String uploadId String archiveSize String checksum setAccountIdaccountIdsetVaultNamevaultNamesetUploadIduploadIdsetArchiveSizearchiveSizesetChecksumchecksum
"public void clearRect(int x, int y, int width, int height){Color color = foreground;setColor(background);fillRect(x,y,width,height);setColor(color);}",public void clearRectint x int y int width int heightColor color  foregroundsetColorbackgroundfillRectxywidthheightsetColorcolor
public String getRawFragment() {return fragment;},public String getRawFragment return fragment
"public String toString() {StringBuilder s = new StringBuilder();for(int i=0;i<count;i++) {if (i > 0) {s.append(' ');}s.append(points[i].point).append(':').append(points[i].starts.next/3).append(',').append(points[i].ends.next/3);}return s.toString();}",public String toString StringBuilder s  new StringBuilderforint i0icounti if i  0 sappend sappendpointsipointappendappendpointsistartsnext3appendappendpointsiendsnext3return stoString
"public static double sinh(double d) {double ePowX = Math.pow(Math.E, d);double ePowNegX = Math.pow(Math.E, -d);return (ePowX - ePowNegX) / 2;}",public static double sinhdouble d double ePowX  MathpowMathE ddouble ePowNegX  MathpowMathE dreturn ePowX  ePowNegX  2
public GetMembersResult getMembers(GetMembersRequest request) {request = beforeClientExecution(request);return executeGetMembers(request);},public GetMembersResult getMembersGetMembersRequest request request  beforeClientExecutionrequestreturn executeGetMembersrequest
public HSSFPatternFormatting createPatternFormatting(){return getPatternFormatting(true);},public HSSFPatternFormatting createPatternFormattingreturn getPatternFormattingtrue
public DeleteSpotDatafeedSubscriptionResult deleteSpotDatafeedSubscription(DeleteSpotDatafeedSubscriptionRequest request) {request = beforeClientExecution(request);return executeDeleteSpotDatafeedSubscription(request);},public DeleteSpotDatafeedSubscriptionResult deleteSpotDatafeedSubscriptionDeleteSpotDatafeedSubscriptionRequest request request  beforeClientExecutionrequestreturn executeDeleteSpotDatafeedSubscriptionrequest
public RevFilter clone() {return new SkipRevFilter(skip);},public RevFilter clone return new SkipRevFilterskip
public BinarySearchIndexes(int highIx) {_lowIx = -1;_highIx = highIx;},public BinarySearchIndexesint highIx lowIx  1highIx  highIx
"public Query makeLuceneQueryFieldNoBoost(String fieldName, BasicQueryFactory qf) {return SrndBooleanQuery.makeBooleanQuery(makeLuceneSubQueriesField(fieldName, qf), BooleanClause.Occur.SHOULD);}",public Query makeLuceneQueryFieldNoBoostString fieldName BasicQueryFactory qf return SrndBooleanQuerymakeBooleanQuerymakeLuceneSubQueriesFieldfieldName qf BooleanClauseOccurSHOULD
public static CloneCommand cloneRepository() {return new CloneCommand();},public static CloneCommand cloneRepository return new CloneCommand
public EnableMetricsCollectionResult enableMetricsCollection(EnableMetricsCollectionRequest request) {request = beforeClientExecution(request);return executeEnableMetricsCollection(request);},public EnableMetricsCollectionResult enableMetricsCollectionEnableMetricsCollectionRequest request request  beforeClientExecutionrequestreturn executeEnableMetricsCollectionrequest
public DescribePlayerSessionsResult describePlayerSessions(DescribePlayerSessionsRequest request) {request = beforeClientExecution(request);return executeDescribePlayerSessions(request);},public DescribePlayerSessionsResult describePlayerSessionsDescribePlayerSessionsRequest request request  beforeClientExecutionrequestreturn executeDescribePlayerSessionsrequest
public UpdateDocumentVersionResult updateDocumentVersion(UpdateDocumentVersionRequest request) {request = beforeClientExecution(request);return executeUpdateDocumentVersion(request);},public UpdateDocumentVersionResult updateDocumentVersionUpdateDocumentVersionRequest request request  beforeClientExecutionrequestreturn executeUpdateDocumentVersionrequest
public TagCommand setTagger(PersonIdent tagger) {this.tagger = tagger;return this;},public TagCommand setTaggerPersonIdent tagger thistagger  taggerreturn this
"public void setCellValue(boolean value) {int row=_record.getRow();short col=_record.getColumn();short styleIndex=_record.getXFIndex();switch (_cellType) {default:setCellType(CellType.BOOLEAN, false, row, col, styleIndex);case BOOLEAN:(( BoolErrRecord ) _record).setValue(value);break;case FORMULA:((FormulaRecordAggregate)_record).setCachedBooleanResult(value);break;}}",public void setCellValueboolean value int rowrecordgetRowshort colrecordgetColumnshort styleIndexrecordgetXFIndexswitch cellType defaultsetCellTypeCellTypeBOOLEAN false row col styleIndexcase BOOLEAN BoolErrRecord  recordsetValuevaluebreakcase FORMULAFormulaRecordAggregaterecordsetCachedBooleanResultvaluebreak
"public PatternReplaceFilterFactory(Map<String, String> args) {super(args);pattern = getPattern(args, ""pattern"");replacement = get(args, ""replacement"");replaceAll = ""all"".equals(get(args, ""replace"", Arrays.asList(""all"", ""first""), ""all""));if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public PatternReplaceFilterFactoryMapString String args superargspattern  getPatternargs patternreplacement  getargs replacementreplaceAll  allequalsgetargs replace ArraysasListall first allif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public List<T> asList(Object output) {if (!(output instanceof List)) {List<T> result = new ArrayList<>(1);result.add((T) output);return result;} else {return (List<T>) output;}},public ListT asListObject output if output instanceof List ListT result  new ArrayList1resultaddT outputreturn result else return ListT output
public FooterKey(String keyName) {name = keyName;raw = Constants.encode(keyName.toLowerCase(Locale.ROOT));},public FooterKeyString keyName name  keyNameraw  ConstantsencodekeyNametoLowerCaseLocaleROOT
public List<Token> getTokens() { return tokens; },public ListToken getTokens  return tokens 
public DeleteTaskSetResult deleteTaskSet(DeleteTaskSetRequest request) {request = beforeClientExecution(request);return executeDeleteTaskSet(request);},public DeleteTaskSetResult deleteTaskSetDeleteTaskSetRequest request request  beforeClientExecutionrequestreturn executeDeleteTaskSetrequest
public DescribeLifecycleConfigurationResult describeLifecycleConfiguration(DescribeLifecycleConfigurationRequest request) {request = beforeClientExecution(request);return executeDescribeLifecycleConfiguration(request);},public DescribeLifecycleConfigurationResult describeLifecycleConfigurationDescribeLifecycleConfigurationRequest request request  beforeClientExecutionrequestreturn executeDescribeLifecycleConfigurationrequest
public DescribeNodegroupResult describeNodegroup(DescribeNodegroupRequest request) {request = beforeClientExecution(request);return executeDescribeNodegroup(request);},public DescribeNodegroupResult describeNodegroupDescribeNodegroupRequest request request  beforeClientExecutionrequestreturn executeDescribeNodegrouprequest
public CustomProperty() {this.name = null;},public CustomProperty thisname  null
public DeleteDirectConnectGatewayResult deleteDirectConnectGateway(DeleteDirectConnectGatewayRequest request) {request = beforeClientExecution(request);return executeDeleteDirectConnectGateway(request);},public DeleteDirectConnectGatewayResult deleteDirectConnectGatewayDeleteDirectConnectGatewayRequest request request  beforeClientExecutionrequestreturn executeDeleteDirectConnectGatewayrequest
public AddCommand(Repository repo) {super(repo);filepatterns = new LinkedList<>();},public AddCommandRepository repo superrepofilepatterns  new LinkedList
public UpdateStageResult updateStage(UpdateStageRequest request) {request = beforeClientExecution(request);return executeUpdateStage(request);},public UpdateStageResult updateStageUpdateStageRequest request request  beforeClientExecutionrequestreturn executeUpdateStagerequest
public ModifyIdFormatResult modifyIdFormat(ModifyIdFormatRequest request) {request = beforeClientExecution(request);return executeModifyIdFormat(request);},public ModifyIdFormatResult modifyIdFormatModifyIdFormatRequest request request  beforeClientExecutionrequestreturn executeModifyIdFormatrequest
public RemoveRoleFromDBClusterResult removeRoleFromDBCluster(RemoveRoleFromDBClusterRequest request) {request = beforeClientExecution(request);return executeRemoveRoleFromDBCluster(request);},public RemoveRoleFromDBClusterResult removeRoleFromDBClusterRemoveRoleFromDBClusterRequest request request  beforeClientExecutionrequestreturn executeRemoveRoleFromDBClusterrequest
"public E set(int location, E object) {if (location >= 0 && location < size) {Link<E> link = voidLink;if (location < (size / 2)) {for (int i = 0; i <= location; i++) {link = link.next;}} else {for (int i = size; i > location; i--) {link = link.previous;}}E result = link.data;link.data = object;return result;}throw new IndexOutOfBoundsException();}",public E setint location E object if location  0  location  size LinkE link  voidLinkif location  size  2 for int i  0 i  location i link  linknext else for int i  size i  location i link  linkpreviousE result  linkdatalinkdata  objectreturn resultthrow new IndexOutOfBoundsException
public ListPhoneNumbersResult listPhoneNumbers(ListPhoneNumbersRequest request) {request = beforeClientExecution(request);return executeListPhoneNumbers(request);},public ListPhoneNumbersResult listPhoneNumbersListPhoneNumbersRequest request request  beforeClientExecutionrequestreturn executeListPhoneNumbersrequest
public GermanNormalizationFilter(TokenStream input) {super(input);},public GermanNormalizationFilterTokenStream input superinput
@Override public boolean equals(Object object) {return list.equals(object);},Override public boolean equalsObject object return listequalsobject
public PullCommand pull() {return new PullCommand(repo);},public PullCommand pull return new PullCommandrepo
"public String toString() {return ""ALL""; }",public String toString return ALL 
public CreateIngestionResult createIngestion(CreateIngestionRequest request) {request = beforeClientExecution(request);return executeCreateIngestion(request);},public CreateIngestionResult createIngestionCreateIngestionRequest request request  beforeClientExecutionrequestreturn executeCreateIngestionrequest
public StashCreateCommand(Repository repo) {super(repo);person = new PersonIdent(repo);},public StashCreateCommandRepository repo superrepoperson  new PersonIdentrepo
public final ShortBuffer asShortBuffer() {return ShortToByteBufferAdapter.asShortBuffer(this);},public final ShortBuffer asShortBuffer return ShortToByteBufferAdapterasShortBufferthis
public FeatSmartTag() {data = new byte[0];},public FeatSmartTag data  new byte0
public LogCommand setSkip(int skip) {checkCallable();this.skip = skip;return this;},public LogCommand setSkipint skip checkCallablethisskip  skipreturn this
"public Ptg[] getFormulaTokens(FormulaRecord formula) {int formulaRow = formula.getRow();int formulaColumn = formula.getColumn();if (!isInRange(formulaRow, formulaColumn)) {throw new RuntimeException(""Shared Formula Conversion: Coding Error"");}SharedFormula sf = new SharedFormula(SpreadsheetVersion.EXCEL97);return sf.convertSharedFormulas(field_7_parsed_expr.getTokens(), formulaRow, formulaColumn);}",public Ptg getFormulaTokensFormulaRecord formula int formulaRow  formulagetRowint formulaColumn  formulagetColumnif isInRangeformulaRow formulaColumn throw new RuntimeExceptionShared Formula Conversion Coding ErrorSharedFormula sf  new SharedFormulaSpreadsheetVersionEXCEL97return sfconvertSharedFormulasfield7parsedexprgetTokens formulaRow formulaColumn
public int regionEnd() {return regionEnd;},public int regionEnd return regionEnd
public int getBehindCount() {return behindCount;},public int getBehindCount return behindCount
"public void encode(int[] values, int valuesOffset, long[] blocks,int blocksOffset, int iterations) {for (int i = 0; i < iterations; ++i) {blocks[blocksOffset++] = encode(values, valuesOffset);valuesOffset += valueCount;}}",public void encodeint values int valuesOffset long blocksint blocksOffset int iterations for int i  0 i  iterations i blocksblocksOffset  encodevalues valuesOffsetvaluesOffset  valueCount
public PutImageScanningConfigurationResult putImageScanningConfiguration(PutImageScanningConfigurationRequest request) {request = beforeClientExecution(request);return executePutImageScanningConfiguration(request);},public PutImageScanningConfigurationResult putImageScanningConfigurationPutImageScanningConfigurationRequest request request  beforeClientExecutionrequestreturn executePutImageScanningConfigurationrequest
public BlameCommand blame() {return new BlameCommand(repo);},public BlameCommand blame return new BlameCommandrepo
public BytesRef textToBytesRef() {return new BytesRef(text);},public BytesRef textToBytesRef return new BytesReftext
"public int compareTo(DoubleBuffer otherBuffer) {int compareRemaining = (remaining() < otherBuffer.remaining()) ? remaining(): otherBuffer.remaining();int thisPos = position;int otherPos = otherBuffer.position;double thisDouble, otherDouble;while (compareRemaining > 0) {thisDouble = get(thisPos);otherDouble = otherBuffer.get(otherPos);if ((thisDouble != otherDouble)&& ((thisDouble == thisDouble) || (otherDouble == otherDouble))) {return thisDouble < otherDouble ? -1 : 1;}thisPos++;otherPos++;compareRemaining--;}return remaining() - otherBuffer.remaining();}",public int compareToDoubleBuffer otherBuffer int compareRemaining  remaining  otherBufferremaining  remaining otherBufferremainingint thisPos  positionint otherPos  otherBufferpositiondouble thisDouble otherDoublewhile compareRemaining  0 thisDouble  getthisPosotherDouble  otherBuffergetotherPosif thisDouble  otherDouble thisDouble  thisDouble  otherDouble  otherDouble return thisDouble  otherDouble  1  1thisPosotherPoscompareRemainingreturn remaining  otherBufferremaining
public CreateIpGroupResult createIpGroup(CreateIpGroupRequest request) {request = beforeClientExecution(request);return executeCreateIpGroup(request);},public CreateIpGroupResult createIpGroupCreateIpGroupRequest request request  beforeClientExecutionrequestreturn executeCreateIpGrouprequest
"public synchronized E set(int index, E e) {Object[] newElements = elements.clone();@SuppressWarnings(""unchecked"")E result = (E) newElements[index];newElements[index] = e;elements = newElements;return result;}",public synchronized E setint index E e Object newElements  elementscloneSuppressWarningsuncheckedE result  E newElementsindexnewElementsindex  eelements  newElementsreturn result
"public String toFormulaString(String[] operands){StringBuilder buffer = new StringBuilder();buffer.append(operands[ 0 ]);buffer.append("":"");buffer.append(operands[ 1 ]);return buffer.toString();}",public String toFormulaStringString operandsStringBuilder buffer  new StringBuilderbufferappendoperands 0 bufferappendbufferappendoperands 1 return buffertoString
"public synchronized String substring(int start, int end) {return super.substring(start, end);}",public synchronized String substringint start int end return supersubstringstart end
"public static TreeFilter create(TreeFilter a, TreeFilter b) {if (a == ALL)return b;if (b == ALL)return a;return new Binary(a, b);}",public static TreeFilter createTreeFilter a TreeFilter b if a  ALLreturn bif b  ALLreturn areturn new Binarya b
"public static String authoritySafePath(String authority, String path) {if (authority != null && !authority.isEmpty() && !path.isEmpty() && !path.startsWith(""/"")) {return ""/"" + path;}return path;}",public static String authoritySafePathString authority String path if authority  null  authorityisEmpty  pathisEmpty  pathstartsWith return   pathreturn path
"public final void smudgeRacilyClean() {final int base = infoOffset + P_SIZE;Arrays.fill(info, base, base + 4, (byte) 0);}",public final void smudgeRacilyClean final int base  infoOffset  PSIZEArraysfillinfo base base  4 byte 0
public SeriesListRecord clone() {return copy();},public SeriesListRecord clone return copy
"public void decode(){if (null == escherRecords || 0 == escherRecords.size()){byte[] rawData = getRawData();convertToEscherRecords(0, rawData.length, rawData );}}",public void decodeif null  escherRecords  0  escherRecordssizebyte rawData  getRawDataconvertToEscherRecords0 rawDatalength rawData 
public RemoveAutoScalingPolicyResult removeAutoScalingPolicy(RemoveAutoScalingPolicyRequest request) {request = beforeClientExecution(request);return executeRemoveAutoScalingPolicy(request);},public RemoveAutoScalingPolicyResult removeAutoScalingPolicyRemoveAutoScalingPolicyRequest request request  beforeClientExecutionrequestreturn executeRemoveAutoScalingPolicyrequest
public byte readByte() {assert !eof();assert upto <= limit;if (upto == limit)nextSlice();return buffer[upto++];},public byte readByte assert eofassert upto  limitif upto  limitnextSlicereturn bufferupto
public CreateAliasResult createAlias(CreateAliasRequest request) {request = beforeClientExecution(request);return executeCreateAlias(request);},public CreateAliasResult createAliasCreateAliasRequest request request  beforeClientExecutionrequestreturn executeCreateAliasrequest
public boolean markSupported() {return in.markSupported();},public boolean markSupported return inmarkSupported
public String getRawSchemeSpecificPart() {return schemeSpecificPart;},public String getRawSchemeSpecificPart return schemeSpecificPart
public CreateRouteResponseResult createRouteResponse(CreateRouteResponseRequest request) {request = beforeClientExecution(request);return executeCreateRouteResponse(request);},public CreateRouteResponseResult createRouteResponseCreateRouteResponseRequest request request  beforeClientExecutionrequestreturn executeCreateRouteResponserequest
public void remove() {if (lastEntryReturned == null)throw new IllegalStateException();if (modCount != expectedModCount)throw new ConcurrentModificationException();HashMap.this.remove(lastEntryReturned.key);lastEntryReturned = null;expectedModCount = modCount;},public void remove if lastEntryReturned  nullthrow new IllegalStateExceptionif modCount  expectedModCountthrow new ConcurrentModificationExceptionHashMapthisremovelastEntryReturnedkeylastEntryReturned  nullexpectedModCount  modCount
"public void put(int key, E value) {int i = binarySearch(mKeys, 0, mSize, key);if (i >= 0) {mValues[i] = value;} else {i = ~i;if (i < mSize && mValues[i] == DELETED) {mKeys[i] = key;mValues[i] = value;return;}if (mGarbage && mSize >= mKeys.length) {gc();i = ~binarySearch(mKeys, 0, mSize, key);}if (mSize >= mKeys.length) {int n = ArrayUtils.idealIntArraySize(mSize + 1);int[] nkeys = new int[n];Object[] nvalues = new Object[n];System.arraycopy(mKeys, 0, nkeys, 0, mKeys.length);System.arraycopy(mValues, 0, nvalues, 0, mValues.length);mKeys = nkeys;mValues = nvalues;}if (mSize - i != 0) {System.arraycopy(mKeys, i, mKeys, i + 1, mSize - i);System.arraycopy(mValues, i, mValues, i + 1, mSize - i);}mKeys[i] = key;mValues[i] = value;mSize++;}}",public void putint key E value int i  binarySearchmKeys 0 mSize keyif i  0 mValuesi  value else i  iif i  mSize  mValuesi  DELETED mKeysi  keymValuesi  valuereturnif mGarbage  mSize  mKeyslength gci  binarySearchmKeys 0 mSize keyif mSize  mKeyslength int n  ArrayUtilsidealIntArraySizemSize  1int nkeys  new intnObject nvalues  new ObjectnSystemarraycopymKeys 0 nkeys 0 mKeyslengthSystemarraycopymValues 0 nvalues 0 mValueslengthmKeys  nkeysmValues  nvaluesif mSize  i  0 SystemarraycopymKeys i mKeys i  1 mSize  iSystemarraycopymValues i mValues i  1 mSize  imKeysi  keymValuesi  valuemSize
public boolean equals(Object obj) {if (obj == this) {return true;}else if (!(obj instanceof LexerCustomAction)) {return false;}LexerCustomAction other = (LexerCustomAction)obj;return ruleIndex == other.ruleIndex&& actionIndex == other.actionIndex;},public boolean equalsObject obj if obj  this return trueelse if obj instanceof LexerCustomAction return falseLexerCustomAction other  LexerCustomActionobjreturn ruleIndex  otherruleIndex actionIndex  otheractionIndex
"public void seekExact(BytesRef term, TermState state) throws IOException {throw new UnsupportedOperationException(getClass().getName()+"" does not support seeking"");}",public void seekExactBytesRef term TermState state throws IOException throw new UnsupportedOperationExceptiongetClassgetName does not support seeking
"public void readBytes(byte[] b, int offset, int len) {assert b.length >= offset + len;final int offsetEnd = offset + len;while (true) {final int blockLeft = blockSize - currentBlockUpto;final int left = offsetEnd - offset;if (blockLeft < left) {System.arraycopy(currentBlock, currentBlockUpto,b, offset,blockLeft);nextBlock();offset += blockLeft;} else {System.arraycopy(currentBlock, currentBlockUpto,b, offset,left);currentBlockUpto += left;break;}}}",public void readBytesbyte b int offset int len assert blength  offset  lenfinal int offsetEnd  offset  lenwhile true final int blockLeft  blockSize  currentBlockUptofinal int left  offsetEnd  offsetif blockLeft  left SystemarraycopycurrentBlock currentBlockUptob offsetblockLeftnextBlockoffset  blockLeft else SystemarraycopycurrentBlock currentBlockUptob offsetleftcurrentBlockUpto  leftbreak
"public FileResolver(File basePath, boolean exportAll) {this();exportDirectory(basePath);setExportAll(exportAll);}",public FileResolverFile basePath boolean exportAll thisexportDirectorybasePathsetExportAllexportAll
"@Override public void add(int location, E object) {synchronized (mutex) {list.add(location, object);}}",Override public void addint location E object synchronized mutex listaddlocation object
"public String replaceFirst(String replacement) {reset();StringBuffer buffer = new StringBuffer(input.length());if (find()) {appendReplacement(buffer, replacement);}return appendTail(buffer).toString();}",public String replaceFirstString replacement resetStringBuffer buffer  new StringBufferinputlengthif find appendReplacementbuffer replacementreturn appendTailbuffertoString
public String format2DRefAsString() {return formatReferenceAsString();},public String format2DRefAsString return formatReferenceAsString
"public static String trimFromLast(String str, String stripString) {int pos = str.lastIndexOf(stripString);if (pos > -1) {return str.substring(0, pos);} else {return str;}}",public static String trimFromLastString str String stripString int pos  strlastIndexOfstripStringif pos  1 return strsubstring0 pos else return str
"public float hyperbolicTf(float freq) {if (0.0f == freq) return 0.0f;final float min = tf_hyper_min;final float max = tf_hyper_max;final double base = tf_hyper_base;final float xoffset = tf_hyper_xoffset;final double x = (double)(freq - xoffset);final float result = min +(float)((max-min) / 2.0f*(( ( Math.pow(base,x) - Math.pow(base,-x) )/ ( Math.pow(base,x) + Math.pow(base,-x) ))+ 1.0d));return Float.isNaN(result) ? max : result;}",public float hyperbolicTffloat freq if 00f  freq return 00ffinal float min  tfhyperminfinal float max  tfhypermaxfinal double base  tfhyperbasefinal float xoffset  tfhyperxoffsetfinal double x  doublefreq  xoffsetfinal float result  min floatmaxmin  20f  Mathpowbasex  Mathpowbasex   Mathpowbasex  Mathpowbasex  10dreturn FloatisNaNresult  max  result
"public void setConfig(Config config) {super.setConfig(config);sortRange = config.get(""sort.rng"", 20000);r = new Random(config.get(""rand.seed"", 13));}",public void setConfigConfig config supersetConfigconfigsortRange  configgetsortrng 20000r  new Randomconfiggetrandseed 13
"public ParseException generateParseException() {jj_expentries.clear();boolean[] la1tokens = new boolean[33];if (jj_kind >= 0) {la1tokens[jj_kind] = true;jj_kind = -1;}for (int i = 0; i < 25; i++) {if (jj_la1[i] == jj_gen) {for (int j = 0; j < 32; j++) {if ((jj_la1_0[i] & (1<<j)) != 0) {la1tokens[j] = true;}if ((jj_la1_1[i] & (1<<j)) != 0) {la1tokens[32+j] = true;}}}}for (int i = 0; i < 33; i++) {if (la1tokens[i]) {jj_expentry = new int[1];jj_expentry[0] = i;jj_expentries.add(jj_expentry);}}jj_endpos = 0;jj_rescan_token();jj_add_error_token(0, 0);int[][] exptokseq = new int[jj_expentries.size()][];for (int i = 0; i < jj_expentries.size(); i++) {exptokseq[i] = jj_expentries.get(i);}return new ParseException(token, exptokseq, tokenImage);}",public ParseException generateParseException jjexpentriesclearboolean la1tokens  new boolean33if jjkind  0 la1tokensjjkind  truejjkind  1for int i  0 i  25 i if jjla1i  jjgen for int j  0 j  32 j if jjla10i  1j  0 la1tokensj  trueif jjla11i  1j  0 la1tokens32j  truefor int i  0 i  33 i if la1tokensi jjexpentry  new int1jjexpentry0  ijjexpentriesaddjjexpentryjjendpos  0jjrescantokenjjadderrortoken0 0int exptokseq  new intjjexpentriessizefor int i  0 i  jjexpentriessize i exptokseqi  jjexpentriesgetireturn new ParseExceptiontoken exptokseq tokenImage
"public int addConditionalFormatting(CellRangeAddress[] regions,ConditionalFormattingRule rule1) {return addConditionalFormatting(regions,  (HSSFConditionalFormattingRule)rule1);}",public int addConditionalFormattingCellRangeAddress regionsConditionalFormattingRule rule1 return addConditionalFormattingregions  HSSFConditionalFormattingRulerule1
public void setObjectInserter(ObjectInserter oi) {walk.close();Reader.close();inserter.close();inserter = oi;Reader = oi.newReader();walk = new RevWalk(Reader);},public void setObjectInserterObjectInserter oi walkcloseReadercloseinsertercloseinserter  oiReader  oinewReaderwalk  new RevWalkReader
public void clear() {head = null;free = null;index = null;inQueue = 0;sinceLastIndex = 0;last = -1;},public void clear head  nullfree  nullindex  nullinQueue  0sinceLastIndex  0last  1
"public void ReInit(CharStream stream, int lexState){ReInit(stream);SwitchTo(lexState);}",public void ReInitCharStream stream int lexStateReInitstreamSwitchTolexState
"public boolean contains(Object o) {if (!(o instanceof Map.Entry))return false;Map.Entry<?,?> e = (Map.Entry<?,?>)o;V v = ConcurrentHashMap.this.get(e.getKey());return v != null && v.equals(e.getValue());}",public boolean containsObject o if o instanceof MapEntryreturn falseMapEntry e  MapEntryoV v  ConcurrentHashMapthisgetegetKeyreturn v  null  vequalsegetValue
public List<String> getRemovedList() {return removedList;},public ListString getRemovedList return removedList
public synchronized TaxonomyReader getTaxonomyReader() {if (taxonomyReader != null) {taxonomyReader.incRef();}return taxonomyReader;},public synchronized TaxonomyReader getTaxonomyReader if taxonomyReader  null taxonomyReaderincRefreturn taxonomyReader
public String toString(String field) {return getBooleanQuery().toString(field);},public String toStringString field return getBooleanQuerytoStringfield
"public HSSFShapeGroup createGroup(HSSFClientAnchor anchor) {HSSFShapeGroup group = new HSSFShapeGroup(null, anchor);addShape(group);onCreate(group);return group;}",public HSSFShapeGroup createGroupHSSFClientAnchor anchor HSSFShapeGroup group  new HSSFShapeGroupnull anchoraddShapegrouponCreategroupreturn group
"public String toString(){StringBuilder sb = new StringBuilder();sb.append( getText() ).append( '(' ).append( boost ).append( "")("" );for( Toffs to : termsOffsets ){sb.append( to );}sb.append( ')' );return sb.toString();}",public String toStringStringBuilder sb  new StringBuildersbappend getText append  append boost append  for Toffs to  termsOffsets sbappend to sbappend  return sbtoString
"public ClassicFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public ClassicFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public UpdateApplicationResult updateApplication(UpdateApplicationRequest request) {request = beforeClientExecution(request);return executeUpdateApplication(request);},public UpdateApplicationResult updateApplicationUpdateApplicationRequest request request  beforeClientExecutionrequestreturn executeUpdateApplicationrequest
public PackParser newPackParser(InputStream in) throws IOException {throw new UnsupportedOperationException();},public PackParser newPackParserInputStream in throws IOException throw new UnsupportedOperationException
public void print(boolean bool) {print(String.valueOf(bool));},public void printboolean bool printStringvalueOfbool
public int centerY() {return y + h / 2;},public int centerY return y  h  2
"public Query makeQuery(SpatialArgs args) {if(! SpatialOperation.is( args.getOperation(),SpatialOperation.Intersects,SpatialOperation.IsWithin ))throw new UnsupportedSpatialOperation(args.getOperation());Shape shape = args.getShape();if (shape instanceof Rectangle) {Rectangle bbox = (Rectangle) shape;return new ConstantScoreQuery(makeWithin(bbox));} else if (shape instanceof Circle) {Circle circle = (Circle)shape;Rectangle bbox = circle.getBoundingBox();return new DistanceRangeQuery(makeWithin(bbox), makeDistanceValueSource(circle.getCenter()), circle.getRadius());} else {throw new UnsupportedOperationException(""Only Rectangles and Circles are currently supported, "" +""found ["" + shape.getClass() + ""]"");}}",public Query makeQuerySpatialArgs args if SpatialOperationis argsgetOperationSpatialOperationIntersectsSpatialOperationIsWithin throw new UnsupportedSpatialOperationargsgetOperationShape shape  argsgetShapeif shape instanceof Rectangle Rectangle bbox  Rectangle shapereturn new ConstantScoreQuerymakeWithinbbox else if shape instanceof Circle Circle circle  CircleshapeRectangle bbox  circlegetBoundingBoxreturn new DistanceRangeQuerymakeWithinbbox makeDistanceValueSourcecirclegetCenter circlegetRadius else throw new UnsupportedOperationExceptionOnly Rectangles and Circles are currently supported  found   shapegetClass  
"public BooleanQuery build() {return new BooleanQuery(minimumNumberShouldMatch, clauses.toArray(new BooleanClause[0]));}",public BooleanQuery build return new BooleanQueryminimumNumberShouldMatch clausestoArraynew BooleanClause0
public GetManagedScalingPolicyResult getManagedScalingPolicy(GetManagedScalingPolicyRequest request) {request = beforeClientExecution(request);return executeGetManagedScalingPolicy(request);},public GetManagedScalingPolicyResult getManagedScalingPolicyGetManagedScalingPolicyRequest request request  beforeClientExecutionrequestreturn executeGetManagedScalingPolicyrequest
public ListApplicationsResult listApplications() {return listApplications(new ListApplicationsRequest());},public ListApplicationsResult listApplications return listApplicationsnew ListApplicationsRequest
public String getFormatSpecifier() {return s;},public String getFormatSpecifier return s
public static String getBuiltinFormat(short index) {return BuiltinFormats.getBuiltinFormat(index);},public static String getBuiltinFormatshort index return BuiltinFormatsgetBuiltinFormatindex
public void addTask(PerfTask task) {tasks.add(task);task.setDepth(getDepth()+1);},public void addTaskPerfTask task tasksaddtasktasksetDepthgetDepth1
public GetQueueUrlResult getQueueUrl(String queueName) {return getQueueUrl(new GetQueueUrlRequest().withQueueName(queueName));},public GetQueueUrlResult getQueueUrlString queueName return getQueueUrlnew GetQueueUrlRequestwithQueueNamequeueName
public static double asinh(double d) {return Math.log(Math.sqrt(d*d + 1) + d);},public static double asinhdouble d return MathlogMathsqrtdd  1  d
public ActivityTypeDetail describeActivityType(DescribeActivityTypeRequest request) {request = beforeClientExecution(request);return executeDescribeActivityType(request);},public ActivityTypeDetail describeActivityTypeDescribeActivityTypeRequest request request  beforeClientExecutionrequestreturn executeDescribeActivityTyperequest
public RegisterTransitGatewayMulticastGroupSourcesResult registerTransitGatewayMulticastGroupSources(RegisterTransitGatewayMulticastGroupSourcesRequest request) {request = beforeClientExecution(request);return executeRegisterTransitGatewayMulticastGroupSources(request);},public RegisterTransitGatewayMulticastGroupSourcesResult registerTransitGatewayMulticastGroupSourcesRegisterTransitGatewayMulticastGroupSourcesRequest request request  beforeClientExecutionrequestreturn executeRegisterTransitGatewayMulticastGroupSourcesrequest
public void onRelease() {mPullDistance = 0;if (mState != STATE_PULL && mState != STATE_PULL_DECAY) {return;}mState = STATE_RECEDE;mEdgeAlphaStart = mEdgeAlpha;mEdgeScaleYStart = mEdgeScaleY;mGlowAlphaStart = mGlowAlpha;mGlowScaleYStart = mGlowScaleY;mEdgeAlphaFinish = 0.f;mEdgeScaleYFinish = 0.f;mGlowAlphaFinish = 0.f;mGlowScaleYFinish = 0.f;mStartTime = AnimationUtils.currentAnimationTimeMillis();mDuration = RECEDE_TIME;},public void onRelease mPullDistance  0if mState  STATEPULL  mState  STATEPULLDECAY returnmState  STATERECEDEmEdgeAlphaStart  mEdgeAlphamEdgeScaleYStart  mEdgeScaleYmGlowAlphaStart  mGlowAlphamGlowScaleYStart  mGlowScaleYmEdgeAlphaFinish  0fmEdgeScaleYFinish  0fmGlowAlphaFinish  0fmGlowScaleYFinish  0fmStartTime  AnimationUtilscurrentAnimationTimeMillismDuration  RECEDETIME
public ImportKeyPairResult importKeyPair(ImportKeyPairRequest request) {request = beforeClientExecution(request);return executeImportKeyPair(request);},public ImportKeyPairResult importKeyPairImportKeyPairRequest request request  beforeClientExecutionrequestreturn executeImportKeyPairrequest
public String metricFilterPattern() {return this.metricFilterPattern;},public String metricFilterPattern return thismetricFilterPattern
public long getTotalTimeInPrediction() {DecisionInfo[] decisions = atnSimulator.getDecisionInfo();long t = 0;for (int i=0; i<decisions.length; i++) {t += decisions[i].timeInPrediction;}return t;},public long getTotalTimeInPrediction DecisionInfo decisions  atnSimulatorgetDecisionInfolong t  0for int i0 idecisionslength i t  decisionsitimeInPredictionreturn t
public TokenStream create(TokenStream input) {return new HungarianLightStemFilter(input);},public TokenStream createTokenStream input return new HungarianLightStemFilterinput
public String getDescription() {return desc;},public String getDescription return desc
public DeleteAlgorithmResult deleteAlgorithm(DeleteAlgorithmRequest request) {request = beforeClientExecution(request);return executeDeleteAlgorithm(request);},public DeleteAlgorithmResult deleteAlgorithmDeleteAlgorithmRequest request request  beforeClientExecutionrequestreturn executeDeleteAlgorithmrequest
public void setPrefix(String prefix) {this.prefix = prefix;},public void setPrefixString prefix thisprefix  prefix
"public Collection<ChildScorable> getChildren() {return Collections.singleton(new ChildScorable(childScorer, ""BLOCK_JOIN""));}",public CollectionChildScorable getChildren return Collectionssingletonnew ChildScorablechildScorer BLOCKJOIN
public void Run() {sendAccessibilityEvent(AccessibilityEvent.TYPE_VIEW_SELECTED);},public void Run sendAccessibilityEventAccessibilityEventTYPEVIEWSELECTED
public String apiVersion() {return this.apiVersion;},public String apiVersion return thisapiVersion
"public OpenNLPPOSFilter create(TokenStream in) {try {return new OpenNLPPOSFilter(in, OpenNLPOpsFactory.getPOSTagger(posTaggerModelFile));} catch (IOException e) {throw new IllegalArgumentException(e);}}",public OpenNLPPOSFilter createTokenStream in try return new OpenNLPPOSFilterin OpenNLPOpsFactorygetPOSTaggerposTaggerModelFile catch IOException e throw new IllegalArgumentExceptione
public SendBulkTemplatedEmailResult sendBulkTemplatedEmail(SendBulkTemplatedEmailRequest request) {request = beforeClientExecution(request);return executeSendBulkTemplatedEmail(request);},public SendBulkTemplatedEmailResult sendBulkTemplatedEmailSendBulkTemplatedEmailRequest request request  beforeClientExecutionrequestreturn executeSendBulkTemplatedEmailrequest
public ByteBuffer putFloat(float value) {return putInt(Float.floatToRawIntBits(value));},public ByteBuffer putFloatfloat value return putIntFloatfloatToRawIntBitsvalue
"public TotalTermFreqValueSource(String field, String val, String indexedField, BytesRef indexedBytes) {this.field = field;this.val = val;this.indexedField = indexedField;this.indexedBytes = indexedBytes;}",public TotalTermFreqValueSourceString field String val String indexedField BytesRef indexedBytes thisfield  fieldthisval  valthisindexedField  indexedFieldthisindexedBytes  indexedBytes
"public static final int encoding(byte[] b, int ptr) {final int sz = b.length;while (ptr < sz) {if (b[ptr] == '\n')return -1;if (b[ptr] == 'e')break;ptr = nextLF(b, ptr);}return match(b, ptr, encoding);}",public static final int encodingbyte b int ptr final int sz  blengthwhile ptr  sz if bptr  nreturn 1if bptr  ebreakptr  nextLFb ptrreturn matchb ptr encoding
"public void init(ByteBlockPool pool, int startIndex, int endIndex) {assert endIndex-startIndex >= 0;assert startIndex >= 0;assert endIndex >= 0;this.pool = pool;this.endIndex = endIndex;level = 0;bufferUpto = startIndex / ByteBlockPool.BYTE_BLOCK_SIZE;bufferOffset = bufferUpto * ByteBlockPool.BYTE_BLOCK_SIZE;buffer = pool.buffers[bufferUpto];upto = startIndex & ByteBlockPool.BYTE_BLOCK_MASK;final int firstSize = ByteBlockPool.LEVEL_SIZE_ARRAY[0];if (startIndex+firstSize >= endIndex) {limit = endIndex & ByteBlockPool.BYTE_BLOCK_MASK;} elselimit = upto+firstSize-4;}",public void initByteBlockPool pool int startIndex int endIndex assert endIndexstartIndex  0assert startIndex  0assert endIndex  0thispool  poolthisendIndex  endIndexlevel  0bufferUpto  startIndex  ByteBlockPoolBYTEBLOCKSIZEbufferOffset  bufferUpto  ByteBlockPoolBYTEBLOCKSIZEbuffer  poolbuffersbufferUptoupto  startIndex  ByteBlockPoolBYTEBLOCKMASKfinal int firstSize  ByteBlockPoolLEVELSIZEARRAY0if startIndexfirstSize  endIndex limit  endIndex  ByteBlockPoolBYTEBLOCKMASK elselimit  uptofirstSize4
public MergeCellsRecord(RecordInputStream in) {int nRegions = in.readUShort();CellRangeAddress[] cras = new CellRangeAddress[nRegions];for (int i = 0; i < nRegions; i++) {cras[i] = new CellRangeAddress(in);}_numberOfRegions = nRegions;_startIndex = 0;_regions = cras;},public MergeCellsRecordRecordInputStream in int nRegions  inreadUShortCellRangeAddress cras  new CellRangeAddressnRegionsfor int i  0 i  nRegions i crasi  new CellRangeAddressinnumberOfRegions  nRegionsstartIndex  0regions  cras
public List<? extends FileHeader> getFiles() {return files;},public List extends FileHeader getFiles return files
public final long get(int index) {checkIndex(index);return backingArray[offset + index];},public final long getint index checkIndexindexreturn backingArrayoffset  index
public DescribeClusterTracksResult describeClusterTracks(DescribeClusterTracksRequest request) {request = beforeClientExecution(request);return executeDescribeClusterTracks(request);},public DescribeClusterTracksResult describeClusterTracksDescribeClusterTracksRequest request request  beforeClientExecutionrequestreturn executeDescribeClusterTracksrequest
"public String toString() {StringBuilder sb = new StringBuilder();sb.append(getClass().getName());sb.append("" ["");if (externalWorkbookNumber >= 0) {sb.append("" ["");sb.append(""workbook="").append(getExternalWorkbookNumber());sb.append(""] "");}sb.append(""sheet="").append(getSheetName());sb.append("" ! "");sb.append(FormulaError.REF.getString());sb.append(""]"");return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappendgetClassgetNamesbappend if externalWorkbookNumber  0 sbappend sbappendworkbookappendgetExternalWorkbookNumbersbappend sbappendsheetappendgetSheetNamesbappend  sbappendFormulaErrorREFgetStringsbappendreturn sbtoString
public void setParsedExpression(Ptg[] ptgs) {field_8_parsed_expr = Formula.create(ptgs);},public void setParsedExpressionPtg ptgs field8parsedexpr  Formulacreateptgs
public ActivityTypeInfos listActivityTypes(ListActivityTypesRequest request) {request = beforeClientExecution(request);return executeListActivityTypes(request);},public ActivityTypeInfos listActivityTypesListActivityTypesRequest request request  beforeClientExecutionrequestreturn executeListActivityTypesrequest
public DescribeDBSecurityGroupsResult describeDBSecurityGroups() {return describeDBSecurityGroups(new DescribeDBSecurityGroupsRequest());},public DescribeDBSecurityGroupsResult describeDBSecurityGroups return describeDBSecurityGroupsnew DescribeDBSecurityGroupsRequest
public <T> Collection<T> getAllMatchingGroups() {return (Collection<T>) matchingGroups;},public T CollectionT getAllMatchingGroups return CollectionT matchingGroups
public void setCachedResultBoolean(boolean value) {specialCachedValue = FormulaSpecialCachedValue.createCachedBoolean(value);},public void setCachedResultBooleanboolean value specialCachedValue  FormulaSpecialCachedValuecreateCachedBooleanvalue
public static boolean doesFormulaReferToDeletedCell(Ptg[] ptgs) {for (Ptg ptg : ptgs) {if (isDeletedCellRef(ptg)) {return true;}}return false;},public static boolean doesFormulaReferToDeletedCellPtg ptgs for Ptg ptg  ptgs if isDeletedCellRefptg return truereturn false
"public static float[] grow(float[] array) {return grow(array, 1 + array.length);}",public static float growfloat array return growarray 1  arraylength
public void clear() {head = null;tail = null;free.clear();},public void clear head  nulltail  nullfreeclear
public DeleteIPSetResult deleteIPSet(DeleteIPSetRequest request) {request = beforeClientExecution(request);return executeDeleteIPSet(request);},public DeleteIPSetResult deleteIPSetDeleteIPSetRequest request request  beforeClientExecutionrequestreturn executeDeleteIPSetrequest
public StaticCredentialsProvider(AlibabaCloudCredentials credentials) {this.credentials = credentials;},public StaticCredentialsProviderAlibabaCloudCredentials credentials thiscredentials  credentials
"public static double[] copyOfRange(double[] original, int start, int end) {if (start > end) {throw new IllegalArgumentException();}int originalLength = original.length;if (start < 0 || start > originalLength) {throw new ArrayIndexOutOfBoundsException();}int resultLength = end - start;int copyLength = Math.min(resultLength, originalLength - start);double[] result = new double[resultLength];System.arraycopy(original, start, result, 0, copyLength);return result;}",public static double copyOfRangedouble original int start int end if start  end throw new IllegalArgumentExceptionint originalLength  originallengthif start  0  start  originalLength throw new ArrayIndexOutOfBoundsExceptionint resultLength  end  startint copyLength  MathminresultLength originalLength  startdouble result  new doubleresultLengthSystemarraycopyoriginal start result 0 copyLengthreturn result
public DescribeEntityRecognizerResult describeEntityRecognizer(DescribeEntityRecognizerRequest request) {request = beforeClientExecution(request);return executeDescribeEntityRecognizer(request);},public DescribeEntityRecognizerResult describeEntityRecognizerDescribeEntityRecognizerRequest request request  beforeClientExecutionrequestreturn executeDescribeEntityRecognizerrequest
public void removeTitle() {remove1stProperty(PropertyIDMap.PID_TITLE);},public void removeTitle remove1stPropertyPropertyIDMapPIDTITLE
public GetDigestResult getDigest(GetDigestRequest request) {request = beforeClientExecution(request);return executeGetDigest(request);},public GetDigestResult getDigestGetDigestRequest request request  beforeClientExecutionrequestreturn executeGetDigestrequest
public CreateStackResult createStack(CreateStackRequest request) {request = beforeClientExecution(request);return executeCreateStack(request);},public CreateStackResult createStackCreateStackRequest request request  beforeClientExecutionrequestreturn executeCreateStackrequest
"public boolean adjustFormula(Ptg[] ptgs, int currentExternSheetIx) {boolean refsWereChanged = false;for(int i=0; i<ptgs.length; i++) {Ptg newPtg = adjustPtg(ptgs[i], currentExternSheetIx);if (newPtg != null) {refsWereChanged = true;ptgs[i] = newPtg;}}return refsWereChanged;}",public boolean adjustFormulaPtg ptgs int currentExternSheetIx boolean refsWereChanged  falseforint i0 iptgslength i Ptg newPtg  adjustPtgptgsi currentExternSheetIxif newPtg  null refsWereChanged  trueptgsi  newPtgreturn refsWereChanged
public void print(Object o) {print(String.valueOf(o));},public void printObject o printStringvalueOfo
public void setParams(String params) {super.setParams(params);useAddIndexesDir = Boolean.parseBoolean(params);},public void setParamsString params supersetParamsparamsuseAddIndexesDir  BooleanparseBooleanparams
public void close() throws IOException {if (isOpen && !isClone) {try {channel.close();} finally {if (!isClone) {fis.close();}}}},public void close throws IOException if isOpen  isClone try channelclose finally if isClone fisclose
"public void reset() {count = 0;assert forwardCount == 0: ""pos="" + pos + "" forwardCount="" + forwardCount;}",public void reset count  0assert forwardCount  0 pos  pos   forwardCount  forwardCount
public void unlinkSharedFormulas() {for (int i = 0; i < _numberOfFormulas; i++) {_frAggs[i].unlinkSharedFormula();}},public void unlinkSharedFormulas for int i  0 i  numberOfFormulas i frAggsiunlinkSharedFormula
"public boolean isIndexTerm(BytesRef term, TermStats stats) {if (stats.docFreq >= docFreqThresh || count >= interval) {count = 1;return true;} else {count++;return false;}}",public boolean isIndexTermBytesRef term TermStats stats if statsdocFreq  docFreqThresh  count  interval count  1return true else countreturn false
public void removeHeadingPair() {remove1stProperty(PropertyIDMap.PID_HEADINGPAIR);},public void removeHeadingPair remove1stPropertyPropertyIDMapPIDHEADINGPAIR
public synchronized String[] getPOSTags(String[] words) {return tagger.tag(words);},public synchronized String getPOSTagsString words return taggertagwords
"public TermsEnum intersect(CompiledAutomaton compiled, BytesRef startTerm) throws IOException {if (compiled.type != CompiledAutomaton.AUTOMATON_TYPE.NORMAL) {throw new IllegalArgumentException(""please use CompiledAutomaton.getTermsEnum instead"");}return new IntersectTermsEnum(this, compiled.automaton, compiled.runAutomaton, compiled.commonSuffixRef, startTerm);}",public TermsEnum intersectCompiledAutomaton compiled BytesRef startTerm throws IOException if compiledtype  CompiledAutomatonAUTOMATONTYPENORMAL throw new IllegalArgumentExceptionplease use CompiledAutomatongetTermsEnum insteadreturn new IntersectTermsEnumthis compiledautomaton compiledrunAutomaton compiledcommonSuffixRef startTerm
public AttachLoadBalancerToSubnetsResult attachLoadBalancerToSubnets(AttachLoadBalancerToSubnetsRequest request) {request = beforeClientExecution(request);return executeAttachLoadBalancerToSubnets(request);},public AttachLoadBalancerToSubnetsResult attachLoadBalancerToSubnetsAttachLoadBalancerToSubnetsRequest request request  beforeClientExecutionrequestreturn executeAttachLoadBalancerToSubnetsrequest
public PrecedenceQueryParser() {setQueryNodeProcessor(new PrecedenceQueryNodeProcessorPipeline(getQueryConfigHandler()));},public PrecedenceQueryParser setQueryNodeProcessornew PrecedenceQueryNodeProcessorPipelinegetQueryConfigHandler
public CommonToken(int type) {this.type = type;this.source = EMPTY_SOURCE;},public CommonTokenint type thistype  typethissource  EMPTYSOURCE
public DeleteEmailChannelResult deleteEmailChannel(DeleteEmailChannelRequest request) {request = beforeClientExecution(request);return executeDeleteEmailChannel(request);},public DeleteEmailChannelResult deleteEmailChannelDeleteEmailChannelRequest request request  beforeClientExecutionrequestreturn executeDeleteEmailChannelrequest
public DeleteNotificationSubscriptionResult deleteNotificationSubscription(DeleteNotificationSubscriptionRequest request) {request = beforeClientExecution(request);return executeDeleteNotificationSubscription(request);},public DeleteNotificationSubscriptionResult deleteNotificationSubscriptionDeleteNotificationSubscriptionRequest request request  beforeClientExecutionrequestreturn executeDeleteNotificationSubscriptionrequest
public void close() throws IOException {synchronized (lock) {if (isClosed()) {return;}Throwable thrown = null;try {flushInternal();} catch (Throwable e) {thrown = e;}buf = null;try {out.close();} catch (Throwable e) {if (thrown == null) {thrown = e;}}out = null;if (thrown != null) {SneakyThrow.sneakyThrow(thrown);}}},public void close throws IOException synchronized lock if isClosed returnThrowable thrown  nulltry flushInternal catch Throwable e thrown  ebuf  nulltry outclose catch Throwable e if thrown  null thrown  eout  nullif thrown  null SneakyThrowsneakyThrowthrown
"public String toString(String field) {StringBuilder buffer = new StringBuilder();buffer.append(""spanPosRange("");buffer.append(match.toString(field));buffer.append("", "").append(start).append("", "");buffer.append(end);buffer.append("")"");return buffer.toString();}",public String toStringString field StringBuilder buffer  new StringBuilderbufferappendspanPosRangebufferappendmatchtoStringfieldbufferappend appendstartappend bufferappendendbufferappendreturn buffertoString
public ListPipelinesResult listPipelines(ListPipelinesRequest request) {request = beforeClientExecution(request);return executeListPipelines(request);},public ListPipelinesResult listPipelinesListPipelinesRequest request request  beforeClientExecutionrequestreturn executeListPipelinesrequest
public ConfirmProductInstanceResult confirmProductInstance(ConfirmProductInstanceRequest request) {request = beforeClientExecution(request);return executeConfirmProductInstance(request);},public ConfirmProductInstanceResult confirmProductInstanceConfirmProductInstanceRequest request request  beforeClientExecutionrequestreturn executeConfirmProductInstancerequest
public CreateProjectResult createProject(CreateProjectRequest request) {request = beforeClientExecution(request);return executeCreateProject(request);},public CreateProjectResult createProjectCreateProjectRequest request request  beforeClientExecutionrequestreturn executeCreateProjectrequest
"public ListMomentsRequest() {super(""CloudPhoto"", ""2017-07-11"", ""ListMoments"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public ListMomentsRequest superCloudPhoto 20170711 ListMoments cloudphotosetProtocolProtocolTypeHTTPS
"public String getCCByGB2312Id(int ccid) {if (ccid < 0 || ccid > AbstractDictionary.GB2312_CHAR_NUM)return """";int cc1 = ccid / 94 + 161;int cc2 = ccid % 94 + 161;byte[] buffer = new byte[2];buffer[0] = (byte) cc1;buffer[1] = (byte) cc2;try {String cchar = new String(buffer, ""GB2312"");return cchar;} catch (UnsupportedEncodingException e) {return """";}}",public String getCCByGB2312Idint ccid if ccid  0  ccid  AbstractDictionaryGB2312CHARNUMreturn int cc1  ccid  94  161int cc2  ccid  94  161byte buffer  new byte2buffer0  byte cc1buffer1  byte cc2try String cchar  new Stringbuffer GB2312return cchar catch UnsupportedEncodingException e return 
"public static RevFilter create(RevFilter a, RevFilter b) {if (a == ALL || b == ALL)return ALL;return new Binary(a, b);}",public static RevFilter createRevFilter a RevFilter b if a  ALL  b  ALLreturn ALLreturn new Binarya b
"public UpdateTableRequest(String tableName, ProvisionedThroughput provisionedThroughput) {setTableName(tableName);setProvisionedThroughput(provisionedThroughput);}",public UpdateTableRequestString tableName ProvisionedThroughput provisionedThroughput setTableNametableNamesetProvisionedThroughputprovisionedThroughput
public Repository getRepository() {return db;},public Repository getRepository return db
public ShortBuffer compact() {if (byteBuffer.isReadOnly()) {throw new ReadOnlyBufferException();}byteBuffer.limit(limit * SizeOf.SHORT);byteBuffer.position(position * SizeOf.SHORT);byteBuffer.compact();byteBuffer.clear();position = limit - position;limit = capacity;mark = UNSET_MARK;return this;},public ShortBuffer compact if byteBufferisReadOnly throw new ReadOnlyBufferExceptionbyteBufferlimitlimit  SizeOfSHORTbyteBufferpositionposition  SizeOfSHORTbyteBuffercompactbyteBufferclearposition  limit  positionlimit  capacitymark  UNSETMARKreturn this
public CreateInstanceExportTaskResult createInstanceExportTask(CreateInstanceExportTaskRequest request) {request = beforeClientExecution(request);return executeCreateInstanceExportTask(request);},public CreateInstanceExportTaskResult createInstanceExportTaskCreateInstanceExportTaskRequest request request  beforeClientExecutionrequestreturn executeCreateInstanceExportTaskrequest
"public String toString() {return ""MultiDocsAndPositionsEnum("" + Arrays.toString(getSubs()) + "")"";}",public String toString return MultiDocsAndPositionsEnum  ArraystoStringgetSubs  
public DescribeStacksResult describeStacks(DescribeStacksRequest request) {request = beforeClientExecution(request);return executeDescribeStacks(request);},public DescribeStacksResult describeStacksDescribeStacksRequest request request  beforeClientExecutionrequestreturn executeDescribeStacksrequest
"public void serialize(LittleEndianOutput out) {out.writeShort(field_1_xf_index);if (isBuiltin()) {out.writeByte(field_2_builtin_style);out.writeByte(field_3_outline_style_level);} else {out.writeShort(field_4_name.length());out.writeByte(field_3_stringHasMultibyte ? 0x01 : 0x00);if (field_3_stringHasMultibyte) {StringUtil.putUnicodeLE(getName(), out);} else {StringUtil.putCompressedUnicode(getName(), out);}}}",public void serializeLittleEndianOutput out outwriteShortfield1xfindexif isBuiltin outwriteBytefield2builtinstyleoutwriteBytefield3outlinestylelevel else outwriteShortfield4namelengthoutwriteBytefield3stringHasMultibyte  0x01  0x00if field3stringHasMultibyte StringUtilputUnicodeLEgetName out else StringUtilputCompressedUnicodegetName out
"public void write(byte[] b, int off, int len) throws IOException {deflater.setInput(b, off, len);for (;;) {if (outPtr == zbuf.length)throw new EOFException();int n = deflater.deflate(zbuf, outPtr, zbuf.length - outPtr);if (n == 0) {if (deflater.needsInput())break;throw new IOException();}outPtr += n;}}",public void writebyte b int off int len throws IOException deflatersetInputb off lenfor  if outPtr  zbuflengththrow new EOFExceptionint n  deflaterdeflatezbuf outPtr zbuflength  outPtrif n  0 if deflaterneedsInputbreakthrow new IOExceptionoutPtr  n
"public String toFormulaString() {return "" "";}",public String toFormulaString return  
"public StringBuffer insert(int index, double d) {return insert(index, Double.toString(d));}",public StringBuffer insertint index double d return insertindex DoubletoStringd
"public FieldWriter addField(FieldInfo field, long termsFilePointer) {SimpleFieldWriter writer = new SimpleFieldWriter(field, termsFilePointer);fields.add(writer);return writer;}",public FieldWriter addFieldFieldInfo field long termsFilePointer SimpleFieldWriter writer  new SimpleFieldWriterfield termsFilePointerfieldsaddwriterreturn writer
public DeleteUserEndpointsResult deleteUserEndpoints(DeleteUserEndpointsRequest request) {request = beforeClientExecution(request);return executeDeleteUserEndpoints(request);},public DeleteUserEndpointsResult deleteUserEndpointsDeleteUserEndpointsRequest request request  beforeClientExecutionrequestreturn executeDeleteUserEndpointsrequest
"public HSSFColor addColor( byte red, byte green, byte blue ){byte[] b = _palette.getColor(PaletteRecord.FIRST_COLOR_INDEX);short i;for (i = PaletteRecord.FIRST_COLOR_INDEX; i < PaletteRecord.STANDARD_PALETTE_SIZE + PaletteRecord.FIRST_COLOR_INDEX; b = _palette.getColor(++i)){if (b == null){setColorAtIndex( i, red, green, blue );return getColor(i);}}throw new RuntimeException(""Could not find free color index"");}",public HSSFColor addColor byte red byte green byte blue byte b  palettegetColorPaletteRecordFIRSTCOLORINDEXshort ifor i  PaletteRecordFIRSTCOLORINDEX i  PaletteRecordSTANDARDPALETTESIZE  PaletteRecordFIRSTCOLORINDEX b  palettegetColoriif b  nullsetColorAtIndex i red green blue return getColorithrow new RuntimeExceptionCould not find free color index
public boolean isRenameDetectionEnabled() {return renameDetectionType != RenameDetectionType.FALSE;},public boolean isRenameDetectionEnabled return renameDetectionType  RenameDetectionTypeFALSE
public static boolean safe(String pattern) {for (int i = 0; i < pattern.length(); i++) {final char c = pattern.charAt(i);switch (c) {case '.':case '?':case '*':case '+':case '{':case '}':case '(':case ')':case '[':case ']':case '\\':return false;}}return true;},public static boolean safeString pattern for int i  0 i  patternlength i final char c  patterncharAtiswitch c case case case case case case case case case case case return falsereturn true
"public void SwitchTo(int lexState){if (lexState >= 3 || lexState < 0)throw new TokenMgrError(""Error: Ignoring invalid lexical state : "" + lexState + "". State unchanged."", TokenMgrError.INVALID_LEXICAL_STATE);elsecurLexState = lexState;}",public void SwitchToint lexStateif lexState  3  lexState  0throw new TokenMgrErrorError Ignoring invalid lexical state    lexState   State unchanged TokenMgrErrorINVALIDLEXICALSTATEelsecurLexState  lexState
public CreateDeliverabilityTestReportResult createDeliverabilityTestReport(CreateDeliverabilityTestReportRequest request) {request = beforeClientExecution(request);return executeCreateDeliverabilityTestReport(request);},public CreateDeliverabilityTestReportResult createDeliverabilityTestReportCreateDeliverabilityTestReportRequest request request  beforeClientExecutionrequestreturn executeCreateDeliverabilityTestReportrequest
"public void set(int index, long value) {final int o = index / 10;final int b = index % 10;final int shift = b * 6;blocks[o] = (blocks[o] & ~(63L << shift)) | (value << shift);}",public void setint index long value final int o  index  10final int b  index  10final int shift  b  6blockso  blockso  63L  shift  value  shift
"public String toString() {return getClass().getName() + "" ["" +formatAsString() +""]"";}",public String toString return getClassgetName    formatAsString 
public String getRemoteName() {return remoteName;},public String getRemoteName return remoteName
public CherryPickCommand cherryPick() {return new CherryPickCommand(repo);},public CherryPickCommand cherryPick return new CherryPickCommandrepo
public HSSFClientAnchor createClientAnchor(){return new HSSFClientAnchor();},public HSSFClientAnchor createClientAnchorreturn new HSSFClientAnchor
public DeleteProfileResult deleteProfile(DeleteProfileRequest request) {request = beforeClientExecution(request);return executeDeleteProfile(request);},public DeleteProfileResult deleteProfileDeleteProfileRequest request request  beforeClientExecutionrequestreturn executeDeleteProfilerequest
@Override public int size() {return count(entrySet().iterator());},Override public int size return countentrySetiterator
public ByteBuffer put(ByteBuffer buf) {throw new ReadOnlyBufferException();},public ByteBuffer putByteBuffer buf throw new ReadOnlyBufferException
public CreateBranchCommand setStartPoint(RevCommit startPoint) {checkCallable();this.startCommit = startPoint;this.startPoint = null;return this;},public CreateBranchCommand setStartPointRevCommit startPoint checkCallablethisstartCommit  startPointthisstartPoint  nullreturn this
public ListOnPremisesInstancesResult listOnPremisesInstances(ListOnPremisesInstancesRequest request) {request = beforeClientExecution(request);return executeListOnPremisesInstances(request);},public ListOnPremisesInstancesResult listOnPremisesInstancesListOnPremisesInstancesRequest request request  beforeClientExecutionrequestreturn executeListOnPremisesInstancesrequest
public int[] clear() {if (perField.postingsArray != null) {bytesUsed.addAndGet(-(perField.postingsArray.size * perField.postingsArray.bytesPerPosting()));perField.postingsArray = null;perField.newPostingsArray();}return null;},public int clear if perFieldpostingsArray  null bytesUsedaddAndGetperFieldpostingsArraysize  perFieldpostingsArraybytesPerPostingperFieldpostingsArray  nullperFieldnewPostingsArrayreturn null
public String getSourcePath() {return outCandidate.sourcePath.getPath();},public String getSourcePath return outCandidatesourcePathgetPath
"public static SingletonPredictionContext create(PredictionContext parent, int returnState) {if ( returnState == EMPTY_RETURN_STATE && parent == null ) {return EMPTY;}return new SingletonPredictionContext(parent, returnState);}",public static SingletonPredictionContext createPredictionContext parent int returnState if  returnState  EMPTYRETURNSTATE  parent  null  return EMPTYreturn new SingletonPredictionContextparent returnState
"public void cleanupSession(String sessionID) throws IOException {if (sessionID.isEmpty()) { throw new IllegalArgumentException(""sessionID cannot be empty"");}IOUtils.rm(workDir.resolve(sessionID));}",public void cleanupSessionString sessionID throws IOException if sessionIDisEmpty  throw new IllegalArgumentExceptionsessionID cannot be emptyIOUtilsrmworkDirresolvesessionID
public DescribeSnapshotCopyGrantsResult describeSnapshotCopyGrants(DescribeSnapshotCopyGrantsRequest request) {request = beforeClientExecution(request);return executeDescribeSnapshotCopyGrants(request);},public DescribeSnapshotCopyGrantsResult describeSnapshotCopyGrantsDescribeSnapshotCopyGrantsRequest request request  beforeClientExecutionrequestreturn executeDescribeSnapshotCopyGrantsrequest
"public String toString() {return Utils.join(Arrays.asList(opnds).iterator(), ""&&"");}",public String toString return UtilsjoinArraysasListopndsiterator 
public DescribeApplicationResult describeApplication(DescribeApplicationRequest request) {request = beforeClientExecution(request);return executeDescribeApplication(request);},public DescribeApplicationResult describeApplicationDescribeApplicationRequest request request  beforeClientExecutionrequestreturn executeDescribeApplicationrequest
"@Override public E set(int index, E object) {Object[] a = array;if (index >= size) {throwIndexOutOfBoundsException(index, size);}@SuppressWarnings(""unchecked"") E result = (E) a[index];a[index] = object;return result;}",Override public E setint index E object Object a  arrayif index  size throwIndexOutOfBoundsExceptionindex sizeSuppressWarningsunchecked E result  E aindexaindex  objectreturn result
"public void set(int x, int y) {this.x = x;this.y = y;}",public void setint x int y thisx  xthisy  y
"public BatchSendMessagesRequest() {super(""OnsMqtt"", ""2019-12-11"", ""BatchSendMessages"", ""onsmqtt"");setMethod(MethodType.POST);}",public BatchSendMessagesRequest superOnsMqtt 20191211 BatchSendMessages onsmqttsetMethodMethodTypePOST
public DeleteEgressOnlyInternetGatewayResult deleteEgressOnlyInternetGateway(DeleteEgressOnlyInternetGatewayRequest request) {request = beforeClientExecution(request);return executeDeleteEgressOnlyInternetGateway(request);},public DeleteEgressOnlyInternetGatewayResult deleteEgressOnlyInternetGatewayDeleteEgressOnlyInternetGatewayRequest request request  beforeClientExecutionrequestreturn executeDeleteEgressOnlyInternetGatewayrequest
"public static String byteToHex(int value) {StringBuilder sb = new StringBuilder(4);writeHex(sb, value & 0xFFL, 2, ""0x"");return sb.toString();}",public static String byteToHexint value StringBuilder sb  new StringBuilder4writeHexsb value  0xFFL 2 0xreturn sbtoString
public DescribeLoadBalancerPoliciesResult describeLoadBalancerPolicies(DescribeLoadBalancerPoliciesRequest request) {request = beforeClientExecution(request);return executeDescribeLoadBalancerPolicies(request);},public DescribeLoadBalancerPoliciesResult describeLoadBalancerPoliciesDescribeLoadBalancerPoliciesRequest request request  beforeClientExecutionrequestreturn executeDescribeLoadBalancerPoliciesrequest
public void close() throws IOException {try {beginWrite();dst.close();} catch (InterruptedIOException e) {throw writeTimedOut(e);} finally {endWrite();}},public void close throws IOException try beginWritedstclose catch InterruptedIOException e throw writeTimedOute finally endWrite
public UpdateVirtualInterfaceAttributesResult updateVirtualInterfaceAttributes(UpdateVirtualInterfaceAttributesRequest request) {request = beforeClientExecution(request);return executeUpdateVirtualInterfaceAttributes(request);},public UpdateVirtualInterfaceAttributesResult updateVirtualInterfaceAttributesUpdateVirtualInterfaceAttributesRequest request request  beforeClientExecutionrequestreturn executeUpdateVirtualInterfaceAttributesrequest
public ScandinavianNormalizationFilter(TokenStream input) {super(input);},public ScandinavianNormalizationFilterTokenStream input superinput
public DeleteHumanLoopResult deleteHumanLoop(DeleteHumanLoopRequest request) {request = beforeClientExecution(request);return executeDeleteHumanLoop(request);},public DeleteHumanLoopResult deleteHumanLoopDeleteHumanLoopRequest request request  beforeClientExecutionrequestreturn executeDeleteHumanLooprequest
public void onWindowFocusChanged(boolean hasWindowFocus) {super.onWindowFocusChanged(hasWindowFocus);if (!hasWindowFocus && !mPopup.isDropDownAlwaysVisible()) {dismissDropDown();}},public void onWindowFocusChangedboolean hasWindowFocus superonWindowFocusChangedhasWindowFocusif hasWindowFocus  mPopupisDropDownAlwaysVisible dismissDropDown
public GetApnsSandboxChannelResult getApnsSandboxChannel(GetApnsSandboxChannelRequest request) {request = beforeClientExecution(request);return executeGetApnsSandboxChannel(request);},public GetApnsSandboxChannelResult getApnsSandboxChannelGetApnsSandboxChannelRequest request request  beforeClientExecutionrequestreturn executeGetApnsSandboxChannelrequest
public TreeFilter clone() {final TreeFilter n = a.clone();return n == a ? this : new NotTreeFilter(n);},public TreeFilter clone final TreeFilter n  aclonereturn n  a  this  new NotTreeFiltern
"public void addBuilder(String nodeName, QueryBuilder builder) {builders.put(nodeName, builder);}",public void addBuilderString nodeName QueryBuilder builder buildersputnodeName builder
"public static boolean isSupported(int bitsPerValue) {return Arrays.binarySearch(SUPPORTED_BITS_PER_VALUE, bitsPerValue) >= 0;}",public static boolean isSupportedint bitsPerValue return ArraysbinarySearchSUPPORTEDBITSPERVALUE bitsPerValue  0
@Override public V getValue() {return mapEntry.getValue();},Override public V getValue return mapEntrygetValue
public DeletedArea3DPtg(LittleEndianInput in)  {field_1_index_extern_sheet = in.readUShort();unused1 = in.readInt();unused2 = in.readInt();},public DeletedArea3DPtgLittleEndianInput in  field1indexexternsheet  inreadUShortunused1  inreadIntunused2  inreadInt
"public String toString() {return ""NativeFSLock(path="" + path + "",impl="" + lock + "",creationTime="" + creationTime + "")"";}",public String toString return NativeFSLockpath  path  impl  lock  creationTime  creationTime  
public CreateVolumeResult createVolume(CreateVolumeRequest request) {request = beforeClientExecution(request);return executeCreateVolume(request);},public CreateVolumeResult createVolumeCreateVolumeRequest request request  beforeClientExecutionrequestreturn executeCreateVolumerequest
"public EvaluationCell getCell(int rowIndex, int columnIndex) {HSSFRow row = _hs.getRow(rowIndex);if (row == null) {return null;}HSSFCell cell = row.getCell(columnIndex);if (cell == null) {return null;}return new HSSFEvaluationCell(cell, this);}",public EvaluationCell getCellint rowIndex int columnIndex HSSFRow row  hsgetRowrowIndexif row  null return nullHSSFCell cell  rowgetCellcolumnIndexif cell  null return nullreturn new HSSFEvaluationCellcell this
public DeleteBasePathMappingResult deleteBasePathMapping(DeleteBasePathMappingRequest request) {request = beforeClientExecution(request);return executeDeleteBasePathMapping(request);},public DeleteBasePathMappingResult deleteBasePathMappingDeleteBasePathMappingRequest request request  beforeClientExecutionrequestreturn executeDeleteBasePathMappingrequest
"public void removeState(ATNState state) {states.set(state.stateNumber, null); }",public void removeStateATNState state statessetstatestateNumber null 
public boolean equals(Object other) {if (!(other instanceof ShortBuffer)) {return false;}ShortBuffer otherBuffer = (ShortBuffer) other;if (remaining() != otherBuffer.remaining()) {return false;}int myPosition = position;int otherPosition = otherBuffer.position;boolean equalSoFar = true;while (equalSoFar && (myPosition < limit)) {equalSoFar = get(myPosition++) == otherBuffer.get(otherPosition++);}return equalSoFar;},public boolean equalsObject other if other instanceof ShortBuffer return falseShortBuffer otherBuffer  ShortBuffer otherif remaining  otherBufferremaining return falseint myPosition  positionint otherPosition  otherBufferpositionboolean equalSoFar  truewhile equalSoFar  myPosition  limit equalSoFar  getmyPosition  otherBuffergetotherPositionreturn equalSoFar
public boolean equals(final Object o) {if (!(o instanceof PropertySet)) {return false;}final PropertySet ps = (PropertySet) o;int byteOrder1 = ps.getByteOrder();int byteOrder2 = getByteOrder();ClassID classID1 = ps.getClassID();ClassID classID2 = getClassID();int format1 = ps.getFormat();int format2 = getFormat();int osVersion1 = ps.getOSVersion();int osVersion2 = getOSVersion();int sectionCount1 = ps.getSectionCount();int sectionCount2 = getSectionCount();if (byteOrder1 != byteOrder2      ||!classID1.equals(classID2)    ||format1 != format2            ||osVersion1 != osVersion2      ||sectionCount1 != sectionCount2) {return false;}return getSections().containsAll(ps.getSections());},public boolean equalsfinal Object o if o instanceof PropertySet return falsefinal PropertySet ps  PropertySet oint byteOrder1  psgetByteOrderint byteOrder2  getByteOrderClassID classID1  psgetClassIDClassID classID2  getClassIDint format1  psgetFormatint format2  getFormatint osVersion1  psgetOSVersionint osVersion2  getOSVersionint sectionCount1  psgetSectionCountint sectionCount2  getSectionCountif byteOrder1  byteOrder2      classID1equalsclassID2    format1  format2            osVersion1  osVersion2      sectionCount1  sectionCount2 return falsereturn getSectionscontainsAllpsgetSections
"public static int getEstimatedNumberUniqueValuesAllowingForCollisions(int setSize, int numRecordedBits) {double setSizeAsDouble = setSize;double numRecordedBitsAsDouble = numRecordedBits;double saturation = numRecordedBitsAsDouble / setSizeAsDouble;double logInverseSaturation = Math.log(1 - saturation) * -1;return (int) (setSizeAsDouble * logInverseSaturation);}",public static int getEstimatedNumberUniqueValuesAllowingForCollisionsint setSize int numRecordedBits double setSizeAsDouble  setSizedouble numRecordedBitsAsDouble  numRecordedBitsdouble saturation  numRecordedBitsAsDouble  setSizeAsDoubledouble logInverseSaturation  Mathlog1  saturation  1return int setSizeAsDouble  logInverseSaturation
"public static boolean isGitRepository(File dir, FS fs) {return fs.resolve(dir, Constants.OBJECTS).exists()&& fs.resolve(dir, ""refs"").exists() && (fs.resolve(dir, Constants.REFTABLE).exists()|| isValidHead(new File(dir, Constants.HEAD)));}",public static boolean isGitRepositoryFile dir FS fs return fsresolvedir ConstantsOBJECTSexists fsresolvedir refsexists  fsresolvedir ConstantsREFTABLEexists isValidHeadnew Filedir ConstantsHEAD
"public void setBackgroundImage(int pictureIndex){setPropertyValue(new EscherSimpleProperty( EscherPropertyTypes.FILL__PATTERNTEXTURE, false, true, pictureIndex));setPropertyValue(new EscherSimpleProperty( EscherPropertyTypes.FILL__FILLTYPE, false, false, FILL_TYPE_PICTURE));EscherBSERecord bse = getPatriarch().getSheet().getWorkbook().getWorkbook().getBSERecord(pictureIndex);bse.setRef(bse.getRef() + 1);}",public void setBackgroundImageint pictureIndexsetPropertyValuenew EscherSimpleProperty EscherPropertyTypesFILLPATTERNTEXTURE false true pictureIndexsetPropertyValuenew EscherSimpleProperty EscherPropertyTypesFILLFILLTYPE false false FILLTYPEPICTUREEscherBSERecord bse  getPatriarchgetSheetgetWorkbookgetWorkbookgetBSERecordpictureIndexbsesetRefbsegetRef  1
"public DirectPostingsFormat(int minSkipCount, int lowFreqCutoff) {super(""Direct"");this.minSkipCount = minSkipCount;this.lowFreqCutoff = lowFreqCutoff;}",public DirectPostingsFormatint minSkipCount int lowFreqCutoff superDirectthisminSkipCount  minSkipCountthislowFreqCutoff  lowFreqCutoff
"public RecyclingByteBlockAllocator(int blockSize, int maxBufferedBlocks,Counter bytesUsed) {super(blockSize);freeByteBlocks = new byte[maxBufferedBlocks][];this.maxBufferedBlocks = maxBufferedBlocks;this.bytesUsed = bytesUsed;}",public RecyclingByteBlockAllocatorint blockSize int maxBufferedBlocksCounter bytesUsed superblockSizefreeByteBlocks  new bytemaxBufferedBlocksthismaxBufferedBlocks  maxBufferedBlocksthisbytesUsed  bytesUsed
"public int stemPrefix(char s[], int len) {for (int i = 0; i < prefixes.length; i++)if (startsWithCheckLength(s, len, prefixes[i]))return deleteN(s, 0, len, prefixes[i].length);return len;}",public int stemPrefixchar s int len for int i  0 i  prefixeslength iif startsWithCheckLengths len prefixesireturn deleteNs 0 len prefixesilengthreturn len
"public String toString() {final StringBuilder s = new StringBuilder();for (Entry q = head; q != null; q = q.next)describe(s, q.commit);return s.toString();}",public String toString final StringBuilder s  new StringBuilderfor Entry q  head q  null q  qnextdescribes qcommitreturn stoString
public CodingErrorAction malformedInputAction() {return malformedInputAction;},public CodingErrorAction malformedInputAction return malformedInputAction
"public Result(IntsRef input, T output) {this.input = input;this.output = output;}",public ResultIntsRef input T output thisinput  inputthisoutput  output
public String getInflectionForm(int wordId) {return null; },public String getInflectionFormint wordId return null 
public void removeComments() {remove1stProperty(PropertyIDMap.PID_COMMENTS);},public void removeComments remove1stPropertyPropertyIDMapPIDCOMMENTS
public GetBlacklistReportsResult getBlacklistReports(GetBlacklistReportsRequest request) {request = beforeClientExecution(request);return executeGetBlacklistReports(request);},public GetBlacklistReportsResult getBlacklistReportsGetBlacklistReportsRequest request request  beforeClientExecutionrequestreturn executeGetBlacklistReportsrequest
"public String getMessages() {return messageWriter != null ? messageWriter.toString() : """"; }",public String getMessages return messageWriter  null  messageWritertoString   
public boolean equals(Object object) {if (!(object instanceof StringCharacterIterator)) {return false;}StringCharacterIterator it = (StringCharacterIterator) object;return string.equals(it.string) && start == it.start && end == it.end&& offset == it.offset;},public boolean equalsObject object if object instanceof StringCharacterIterator return falseStringCharacterIterator it  StringCharacterIterator objectreturn stringequalsitstring  start  itstart  end  itend offset  itoffset
public AddFacetToObjectResult addFacetToObject(AddFacetToObjectRequest request) {request = beforeClientExecution(request);return executeAddFacetToObject(request);},public AddFacetToObjectResult addFacetToObjectAddFacetToObjectRequest request request  beforeClientExecutionrequestreturn executeAddFacetToObjectrequest
"public ParseException generateParseException() {jj_expentries.clear();boolean[] la1tokens = new boolean[34];if (jj_kind >= 0) {la1tokens[jj_kind] = true;jj_kind = -1;}for (int i = 0; i < 25; i++) {if (jj_la1[i] == jj_gen) {for (int j = 0; j < 32; j++) {if ((jj_la1_0[i] & (1<<j)) != 0) {la1tokens[j] = true;}if ((jj_la1_1[i] & (1<<j)) != 0) {la1tokens[32+j] = true;}}}}for (int i = 0; i < 34; i++) {if (la1tokens[i]) {jj_expentry = new int[1];jj_expentry[0] = i;jj_expentries.add(jj_expentry);}}jj_endpos = 0;jj_rescan_token();jj_add_error_token(0, 0);int[][] exptokseq = new int[jj_expentries.size()][];for (int i = 0; i < jj_expentries.size(); i++) {exptokseq[i] = jj_expentries.get(i);}return new ParseException(token, exptokseq, tokenImage);}",public ParseException generateParseException jjexpentriesclearboolean la1tokens  new boolean34if jjkind  0 la1tokensjjkind  truejjkind  1for int i  0 i  25 i if jjla1i  jjgen for int j  0 j  32 j if jjla10i  1j  0 la1tokensj  trueif jjla11i  1j  0 la1tokens32j  truefor int i  0 i  34 i if la1tokensi jjexpentry  new int1jjexpentry0  ijjexpentriesaddjjexpentryjjendpos  0jjrescantokenjjadderrortoken0 0int exptokseq  new intjjexpentriessizefor int i  0 i  jjexpentriessize i exptokseqi  jjexpentriesgetireturn new ParseExceptiontoken exptokseq tokenImage
public final int correctOffset(int currentOff) {final int corrected = correct(currentOff);return (input instanceof CharFilter) ? ((CharFilter) input).correctOffset(corrected) : corrected;},public final int correctOffsetint currentOff final int corrected  correctcurrentOffreturn input instanceof CharFilter  CharFilter inputcorrectOffsetcorrected  corrected
"public static ContinuableRecordOutput createForCountingOnly() {return new ContinuableRecordOutput(NOPOutput, -777); }",public static ContinuableRecordOutput createForCountingOnly return new ContinuableRecordOutputNOPOutput 777 
public DisassociateAddressRequest(String publicIp) {setPublicIp(publicIp);},public DisassociateAddressRequestString publicIp setPublicIppublicIp
public DescribeVirtualGatewaysResult describeVirtualGateways(DescribeVirtualGatewaysRequest request) {request = beforeClientExecution(request);return executeDescribeVirtualGateways(request);},public DescribeVirtualGatewaysResult describeVirtualGatewaysDescribeVirtualGatewaysRequest request request  beforeClientExecutionrequestreturn executeDescribeVirtualGatewaysrequest
"public void setSheetHidden(int sheetnum, boolean hidden) {setSheetHidden(sheetnum, hidden ? SheetVisibility.HIDDEN : SheetVisibility.VISIBLE);}",public void setSheetHiddenint sheetnum boolean hidden setSheetHiddensheetnum hidden  SheetVisibilityHIDDEN  SheetVisibilityVISIBLE
"public static Cell createCell(Row row, int column, String value, CellStyle style) {Cell cell = getCell(row, column);cell.setCellValue(cell.getRow().getSheet().getWorkbook().getCreationHelper().createRichTextString(value));if (style != null) {cell.setCellStyle(style);}return cell;}",public static Cell createCellRow row int column String value CellStyle style Cell cell  getCellrow columncellsetCellValuecellgetRowgetSheetgetWorkbookgetCreationHelpercreateRichTextStringvalueif style  null cellsetCellStylestylereturn cell
"public CreateCacheParameterGroupRequest(String cacheParameterGroupName, String cacheParameterGroupFamily, String description) {setCacheParameterGroupName(cacheParameterGroupName);setCacheParameterGroupFamily(cacheParameterGroupFamily);setDescription(description);}",public CreateCacheParameterGroupRequestString cacheParameterGroupName String cacheParameterGroupFamily String description setCacheParameterGroupNamecacheParameterGroupNamesetCacheParameterGroupFamilycacheParameterGroupFamilysetDescriptiondescription
"public DirCacheEntry(byte[] path, int stage) {checkPath(path);if (stage < 0 || 3 < stage)throw new IllegalArgumentException(MessageFormat.format(JGitText.get().invalidStageForPath,stage, toString(path)));info = new byte[INFO_LEN];infoOffset = 0;this.path = path;int flags = ((stage & 0x3) << 12);if (path.length < NAME_MASK)flags |= path.length;elseflags |= NAME_MASK;NB.encodeInt16(info, infoOffset + P_FLAGS, flags);}",public DirCacheEntrybyte path int stage checkPathpathif stage  0  3  stagethrow new IllegalArgumentExceptionMessageFormatformatJGitTextgetinvalidStageForPathstage toStringpathinfo  new byteINFOLENinfoOffset  0thispath  pathint flags  stage  0x3  12if pathlength  NAMEMASKflags  pathlengthelseflags  NAMEMASKNBencodeInt16info infoOffset  PFLAGS flags
"public FileOutputStream(String path, boolean append) throws FileNotFoundException {this(new File(path), append);}",public FileOutputStreamString path boolean append throws FileNotFoundException thisnew Filepath append
public DescribeVolumesResult describeVolumes() {return describeVolumes(new DescribeVolumesRequest());},public DescribeVolumesResult describeVolumes return describeVolumesnew DescribeVolumesRequest
public String toString() {return String.valueOf(label);},public String toString return StringvalueOflabel
public MutableValue duplicate() {MutableValueDouble v = new MutableValueDouble();v.value = this.value;v.exists = this.exists;return v;},public MutableValue duplicate MutableValueDouble v  new MutableValueDoublevvalue  thisvaluevexists  thisexistsreturn v
public boolean shouldBeRecursive() {for (byte b : pathRaw)if (b == '/')return true;return false;},public boolean shouldBeRecursive for byte b  pathRawif b  return truereturn false
public boolean equals( Object o ) {return o instanceof BasqueStemmer;},public boolean equals Object o  return o instanceof BasqueStemmer
public SheetBuilder setSheetName(String sheetName) {this.sheetName = sheetName;return this;},public SheetBuilder setSheetNameString sheetName thissheetName  sheetNamereturn this
"public ListTimeLinesRequest() {super(""CloudPhoto"", ""2017-07-11"", ""ListTimeLines"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public ListTimeLinesRequest superCloudPhoto 20170711 ListTimeLines cloudphotosetProtocolProtocolTypeHTTPS
public DescribeStackResourcesResult describeStackResources(DescribeStackResourcesRequest request) {request = beforeClientExecution(request);return executeDescribeStackResources(request);},public DescribeStackResourcesResult describeStackResourcesDescribeStackResourcesRequest request request  beforeClientExecutionrequestreturn executeDescribeStackResourcesrequest
public UpdateBotResult updateBot(UpdateBotRequest request) {request = beforeClientExecution(request);return executeUpdateBot(request);},public UpdateBotResult updateBotUpdateBotRequest request request  beforeClientExecutionrequestreturn executeUpdateBotrequest
"public boolean matches(int symbol, int minVocabSymbol, int maxVocabSymbol) {return symbol >= minVocabSymbol&& symbol <= maxVocabSymbol&& !super.matches(symbol, minVocabSymbol, maxVocabSymbol);}",public boolean matchesint symbol int minVocabSymbol int maxVocabSymbol return symbol  minVocabSymbol symbol  maxVocabSymbol supermatchessymbol minVocabSymbol maxVocabSymbol
"public void fillTo(int toIndex, int val) {while (count < toIndex)add(val);}",public void fillToint toIndex int val while count  toIndexaddval
"public static long[] grow(long[] array, int minSize) {assert minSize >= 0: ""size must be positive (got "" + minSize + ""): likely integer overflow?"";if (array.length < minSize) {return growExact(array, oversize(minSize, Long.BYTES));} else return array;}",public static long growlong array int minSize assert minSize  0 size must be positive got   minSize   likely integer overflowif arraylength  minSize return growExactarray oversizeminSize LongBYTES else return array
public ExportSnapshotResult exportSnapshot(ExportSnapshotRequest request) {request = beforeClientExecution(request);return executeExportSnapshot(request);},public ExportSnapshotResult exportSnapshotExportSnapshotRequest request request  beforeClientExecutionrequestreturn executeExportSnapshotrequest
public boolean hasChildOfType(short recordId) {return _childRecords.stream().anyMatch(r -> r.getRecordId() == recordId);},public boolean hasChildOfTypeshort recordId return childRecordsstreamanyMatchr  rgetRecordId  recordId
"public int fillFields(byte[] data, int offset, EscherRecordFactory recordFactory) {int bytesRemaining = readHeader( data, offset );thedata = IOUtils.safelyAllocate(bytesRemaining, MAX_RECORD_LENGTH);System.arraycopy( data, offset + 8, thedata, 0, bytesRemaining );return bytesRemaining + 8;}",public int fillFieldsbyte data int offset EscherRecordFactory recordFactory int bytesRemaining  readHeader data offset thedata  IOUtilssafelyAllocatebytesRemaining MAXRECORDLENGTHSystemarraycopy data offset  8 thedata 0 bytesRemaining return bytesRemaining  8
public RmCommand addFilepattern(String filepattern) {checkCallable();filepatterns.add(filepattern);return this;},public RmCommand addFilepatternString filepattern checkCallablefilepatternsaddfilepatternreturn this
public GetEmailIdentityResult getEmailIdentity(GetEmailIdentityRequest request) {request = beforeClientExecution(request);return executeGetEmailIdentity(request);},public GetEmailIdentityResult getEmailIdentityGetEmailIdentityRequest request request  beforeClientExecutionrequestreturn executeGetEmailIdentityrequest
public E remove(int location) {try {ListIterator<E> it = listIterator(location);E result = it.next();it.remove();return result;} catch (NoSuchElementException e) {throw new IndexOutOfBoundsException();}},public E removeint location try ListIteratorE it  listIteratorlocationE result  itnextitremovereturn result catch NoSuchElementException e throw new IndexOutOfBoundsException
public CanonicalTreeParser next() {CanonicalTreeParser p = this;for (;;) {if (p.nextPtr == p.raw.length) {if (p.parent == null) {p.currPtr = p.nextPtr;return p;}p = (CanonicalTreeParser) p.parent;continue;}p.prevPtr = p.currPtr;p.currPtr = p.nextPtr;p.parseEntry();return p;}},public CanonicalTreeParser next CanonicalTreeParser p  thisfor  if pnextPtr  prawlength if pparent  null pcurrPtr  pnextPtrreturn pp  CanonicalTreeParser pparentcontinuepprevPtr  pcurrPtrpcurrPtr  pnextPtrpparseEntryreturn p
public UpdateClusterConfigResult updateClusterConfig(UpdateClusterConfigRequest request) {request = beforeClientExecution(request);return executeUpdateClusterConfig(request);},public UpdateClusterConfigResult updateClusterConfigUpdateClusterConfigRequest request request  beforeClientExecutionrequestreturn executeUpdateClusterConfigrequest
"public Point(int x, int y) {this.x = x;this.y = y;}",public Pointint x int y thisx  xthisy  y
public void cloneStyleFrom(ExtendedFormatRecord source) {field_1_font_index           = source.field_1_font_index;field_2_format_index         = source.field_2_format_index;field_3_cell_options         = source.field_3_cell_options;field_4_alignment_options    = source.field_4_alignment_options;field_5_indention_options    = source.field_5_indention_options;field_6_border_options       = source.field_6_border_options;field_7_palette_options      = source.field_7_palette_options;field_8_adtl_palette_options = source.field_8_adtl_palette_options;field_9_fill_palette_options = source.field_9_fill_palette_options;},public void cloneStyleFromExtendedFormatRecord source field1fontindex            sourcefield1fontindexfield2formatindex          sourcefield2formatindexfield3celloptions          sourcefield3celloptionsfield4alignmentoptions     sourcefield4alignmentoptionsfield5indentionoptions     sourcefield5indentionoptionsfield6borderoptions        sourcefield6borderoptionsfield7paletteoptions       sourcefield7paletteoptionsfield8adtlpaletteoptions  sourcefield8adtlpaletteoptionsfield9fillpaletteoptions  sourcefield9fillpaletteoptions
public GetInvitationConfigurationResult getInvitationConfiguration(GetInvitationConfigurationRequest request) {request = beforeClientExecution(request);return executeGetInvitationConfiguration(request);},public GetInvitationConfigurationResult getInvitationConfigurationGetInvitationConfigurationRequest request request  beforeClientExecutionrequestreturn executeGetInvitationConfigurationrequest
"public RevTag parseTag(AnyObjectId id) throws MissingObjectException,IncorrectObjectTypeException, IOException {RevObject c = parseAny(id);if (!(c instanceof RevTag))throw new IncorrectObjectTypeException(id.toObjectId(),Constants.TYPE_TAG);return (RevTag) c;}",public RevTag parseTagAnyObjectId id throws MissingObjectExceptionIncorrectObjectTypeException IOException RevObject c  parseAnyidif c instanceof RevTagthrow new IncorrectObjectTypeExceptionidtoObjectIdConstantsTYPETAGreturn RevTag c
"public List<String> matchAlmost(String key) {return matchAlmost(key, defaultNumReturnValues);}",public ListString matchAlmostString key return matchAlmostkey defaultNumReturnValues
public boolean remove(Object o) {synchronized (Hashtable.this) {int oldSize = size;Hashtable.this.remove(o);return size != oldSize;}},public boolean removeObject o synchronized Hashtablethis int oldSize  sizeHashtablethisremoveoreturn size  oldSize
"public StringEval(String value) {if (value == null) {throw new IllegalArgumentException(""value must not be null"");}_value = value;}",public StringEvalString value if value  null throw new IllegalArgumentExceptionvalue must not be nullvalue  value
public BatchGetOnPremisesInstancesResult batchGetOnPremisesInstances(BatchGetOnPremisesInstancesRequest request) {request = beforeClientExecution(request);return executeBatchGetOnPremisesInstances(request);},public BatchGetOnPremisesInstancesResult batchGetOnPremisesInstancesBatchGetOnPremisesInstancesRequest request request  beforeClientExecutionrequestreturn executeBatchGetOnPremisesInstancesrequest
"public void update(Config rc) {final List<String> vlst = new ArrayList<>();vlst.clear();for (URIish u : getURIs())vlst.add(u.toPrivateString());rc.setStringList(SECTION, getName(), KEY_URL, vlst);vlst.clear();for (URIish u : getPushURIs())vlst.add(u.toPrivateString());rc.setStringList(SECTION, getName(), KEY_PUSHURL, vlst);vlst.clear();for (RefSpec u : getFetchRefSpecs())vlst.add(u.toString());rc.setStringList(SECTION, getName(), KEY_FETCH, vlst);vlst.clear();for (RefSpec u : getPushRefSpecs())vlst.add(u.toString());rc.setStringList(SECTION, getName(), KEY_PUSH, vlst);set(rc, KEY_UPLOADPACK, getUploadPack(), DEFAULT_UPLOAD_PACK);set(rc, KEY_RECEIVEPACK, getReceivePack(), DEFAULT_RECEIVE_PACK);set(rc, KEY_TAGOPT, getTagOpt().option(), TagOpt.AUTO_FOLLOW.option());set(rc, KEY_MIRROR, mirror, DEFAULT_MIRROR);set(rc, KEY_TIMEOUT, timeout, 0);}",public void updateConfig rc final ListString vlst  new ArrayListvlstclearfor URIish u  getURIsvlstaddutoPrivateStringrcsetStringListSECTION getName KEYURL vlstvlstclearfor URIish u  getPushURIsvlstaddutoPrivateStringrcsetStringListSECTION getName KEYPUSHURL vlstvlstclearfor RefSpec u  getFetchRefSpecsvlstaddutoStringrcsetStringListSECTION getName KEYFETCH vlstvlstclearfor RefSpec u  getPushRefSpecsvlstaddutoStringrcsetStringListSECTION getName KEYPUSH vlstsetrc KEYUPLOADPACK getUploadPack DEFAULTUPLOADPACKsetrc KEYRECEIVEPACK getReceivePack DEFAULTRECEIVEPACKsetrc KEYTAGOPT getTagOptoption TagOptAUTOFOLLOWoptionsetrc KEYMIRROR mirror DEFAULTMIRRORsetrc KEYTIMEOUT timeout 0
"public String toString() {StringBuilder sb = new StringBuilder();sb.append(""[OBJ]\n"");for (final SubRecord record : subrecords) {sb.append(""SUBRECORD: "").append(record);}sb.append(""[/OBJ]\n"");return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappendOBJnfor final SubRecord record  subrecords sbappendSUBRECORD appendrecordsbappendOBJnreturn sbtoString
public StashCreateCommand setPerson(PersonIdent person) {this.person = person;return this;},public StashCreateCommand setPersonPersonIdent person thisperson  personreturn this
public GetDefaultCreditSpecificationResult getDefaultCreditSpecification(GetDefaultCreditSpecificationRequest request) {request = beforeClientExecution(request);return executeGetDefaultCreditSpecification(request);},public GetDefaultCreditSpecificationResult getDefaultCreditSpecificationGetDefaultCreditSpecificationRequest request request  beforeClientExecutionrequestreturn executeGetDefaultCreditSpecificationrequest
public static IntervalSet of(int a) {IntervalSet s = new IntervalSet();s.add(a);return s;},public static IntervalSet ofint a IntervalSet s  new IntervalSetsaddareturn s
public static int idealFloatArraySize(int need) {return idealByteArraySize(need * 4) / 4;},public static int idealFloatArraySizeint need return idealByteArraySizeneed  4  4
public GetJobManifestResult getJobManifest(GetJobManifestRequest request) {request = beforeClientExecution(request);return executeGetJobManifest(request);},public GetJobManifestResult getJobManifestGetJobManifestRequest request request  beforeClientExecutionrequestreturn executeGetJobManifestrequest
public ListGroupMembersResult listGroupMembers(ListGroupMembersRequest request) {request = beforeClientExecution(request);return executeListGroupMembers(request);},public ListGroupMembersResult listGroupMembersListGroupMembersRequest request request  beforeClientExecutionrequestreturn executeListGroupMembersrequest
public CreateMatchmakingConfigurationResult createMatchmakingConfiguration(CreateMatchmakingConfigurationRequest request) {request = beforeClientExecution(request);return executeCreateMatchmakingConfiguration(request);},public CreateMatchmakingConfigurationResult createMatchmakingConfigurationCreateMatchmakingConfigurationRequest request request  beforeClientExecutionrequestreturn executeCreateMatchmakingConfigurationrequest
public GetQueryResultsResult getQueryResults(GetQueryResultsRequest request) {request = beforeClientExecution(request);return executeGetQueryResults(request);},public GetQueryResultsResult getQueryResultsGetQueryResultsRequest request request  beforeClientExecutionrequestreturn executeGetQueryResultsrequest
public int[] lookupSegmentation(int phraseID) {return segmentations[phraseID];},public int lookupSegmentationint phraseID return segmentationsphraseID
public StartTextTranslationJobResult startTextTranslationJob(StartTextTranslationJobRequest request) {request = beforeClientExecution(request);return executeStartTextTranslationJob(request);},public StartTextTranslationJobResult startTextTranslationJobStartTextTranslationJobRequest request request  beforeClientExecutionrequestreturn executeStartTextTranslationJobrequest
"public final ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {double val;try {ValueEval ve = OperandResolver.getSingleValue(arg0, srcRowIndex, srcColumnIndex);val = OperandResolver.coerceValueToDouble(ve);} catch (EvaluationException e) {return e.getErrorEval();}if (val < 0) {return ErrorEval.NUM_ERROR;}return new NumberEval(getCalField(val));}",public final ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 double valtry ValueEval ve  OperandResolvergetSingleValuearg0 srcRowIndex srcColumnIndexval  OperandResolvercoerceValueToDoubleve catch EvaluationException e return egetErrorEvalif val  0 return ErrorEvalNUMERRORreturn new NumberEvalgetCalFieldval
public GetAutoSnapshotsResult getAutoSnapshots(GetAutoSnapshotsRequest request) {request = beforeClientExecution(request);return executeGetAutoSnapshots(request);},public GetAutoSnapshotsResult getAutoSnapshotsGetAutoSnapshotsRequest request request  beforeClientExecutionrequestreturn executeGetAutoSnapshotsrequest
"public RestoreDBInstanceToPointInTimeRequest(String sourceDBInstanceIdentifier, String targetDBInstanceIdentifier) {setSourceDBInstanceIdentifier(sourceDBInstanceIdentifier);setTargetDBInstanceIdentifier(targetDBInstanceIdentifier);}",public RestoreDBInstanceToPointInTimeRequestString sourceDBInstanceIdentifier String targetDBInstanceIdentifier setSourceDBInstanceIdentifiersourceDBInstanceIdentifiersetTargetDBInstanceIdentifiertargetDBInstanceIdentifier
public boolean isDryRun() {return dryRun;},public boolean isDryRun return dryRun
"public static boolean equals(Object[] array1, Object[] array2) {if (array1 == array2) {return true;}if (array1 == null || array2 == null || array1.length != array2.length) {return false;}for (int i = 0; i < array1.length; i++) {Object e1 = array1[i], e2 = array2[i];if (!(e1 == null ? e2 == null : e1.equals(e2))) {return false;}}return true;}",public static boolean equalsObject array1 Object array2 if array1  array2 return trueif array1  null  array2  null  array1length  array2length return falsefor int i  0 i  array1length i Object e1  array1i e2  array2iif e1  null  e2  null  e1equalse2 return falsereturn true
"public boolean isSame(Formula other) {return Arrays.equals(_byteEncoding, other._byteEncoding);}",public boolean isSameFormula other return ArraysequalsbyteEncoding otherbyteEncoding
public ObjectId idFor(TreeFormatter formatter) {return formatter.computeId(this);},public ObjectId idForTreeFormatter formatter return formattercomputeIdthis
"public static int[] grow(int[] array) {return grow(array, 1 + array.length);}",public static int growint array return growarray 1  arraylength
public DescribeReservedDBInstancesResult describeReservedDBInstances(DescribeReservedDBInstancesRequest request) {request = beforeClientExecution(request);return executeDescribeReservedDBInstances(request);},public DescribeReservedDBInstancesResult describeReservedDBInstancesDescribeReservedDBInstancesRequest request request  beforeClientExecutionrequestreturn executeDescribeReservedDBInstancesrequest
"public String toString() {StringBuilder b = new StringBuilder();b.append(subs.length).append("" subs: "");for(int i=0;i<subs.length;i++) {if (i != 0) {b.append(""; "");}if (subs[i] == null) {b.append(""s="").append(starts[i]).append("" l=null"");} else {b.append(""s="").append(starts[i]).append("" l="").append(subs[i].length()).append("" b="").append(subs[i]);}}b.append("" end="").append(starts[subs.length]);return b.toString();}",public String toString StringBuilder b  new StringBuilderbappendsubslengthappend subs forint i0isubslengthi if i  0 bappend if subsi  null bappendsappendstartsiappend lnull else bappendsappendstartsiappend lappendsubsilengthappend bappendsubsibappend endappendstartssubslengthreturn btoString
public DescribeLogStreamsRequest(String logGroupName) {setLogGroupName(logGroupName);},public DescribeLogStreamsRequestString logGroupName setLogGroupNamelogGroupName
public static String[] getAll() {return _formats.clone();},public static String getAll return formatsclone
public CreateVoiceTemplateResult createVoiceTemplate(CreateVoiceTemplateRequest request) {request = beforeClientExecution(request);return executeCreateVoiceTemplate(request);},public CreateVoiceTemplateResult createVoiceTemplateCreateVoiceTemplateRequest request request  beforeClientExecutionrequestreturn executeCreateVoiceTemplaterequest
public static long getLastCommitGeneration(Directory directory) throws IOException {return getLastCommitGeneration(directory.listAll());},public static long getLastCommitGenerationDirectory directory throws IOException return getLastCommitGenerationdirectorylistAll
public SearchTransitGatewayRoutesResult searchTransitGatewayRoutes(SearchTransitGatewayRoutesRequest request) {request = beforeClientExecution(request);return executeSearchTransitGatewayRoutes(request);},public SearchTransitGatewayRoutesResult searchTransitGatewayRoutesSearchTransitGatewayRoutesRequest request request  beforeClientExecutionrequestreturn executeSearchTransitGatewayRoutesrequest
public ListCompilationJobsResult listCompilationJobs(ListCompilationJobsRequest request) {request = beforeClientExecution(request);return executeListCompilationJobs(request);},public ListCompilationJobsResult listCompilationJobsListCompilationJobsRequest request request  beforeClientExecutionrequestreturn executeListCompilationJobsrequest
"public static Query createJoinQuery(String fromField,boolean multipleValuesPerDocument,String toField,Query fromQuery,IndexSearcher fromSearcher,ScoreMode scoreMode) throws IOException {final GenericTermsCollector termsWithScoreCollector;if (multipleValuesPerDocument) {Function<SortedSetDocValues> mvFunction = DocValuesTermsCollector.sortedSetDocValues(fromField);termsWithScoreCollector = GenericTermsCollector.createCollectorMV(mvFunction, scoreMode);} else {Function<BinaryDocValues> svFunction = DocValuesTermsCollector.binaryDocValues(fromField);termsWithScoreCollector = GenericTermsCollector.createCollectorSV(svFunction, scoreMode);}return createJoinQuery(multipleValuesPerDocument, toField, fromQuery, fromField, fromSearcher, scoreMode, termsWithScoreCollector);}",public static Query createJoinQueryString fromFieldboolean multipleValuesPerDocumentString toFieldQuery fromQueryIndexSearcher fromSearcherScoreMode scoreMode throws IOException final GenericTermsCollector termsWithScoreCollectorif multipleValuesPerDocument FunctionSortedSetDocValues mvFunction  DocValuesTermsCollectorsortedSetDocValuesfromFieldtermsWithScoreCollector  GenericTermsCollectorcreateCollectorMVmvFunction scoreMode else FunctionBinaryDocValues svFunction  DocValuesTermsCollectorbinaryDocValuesfromFieldtermsWithScoreCollector  GenericTermsCollectorcreateCollectorSVsvFunction scoreModereturn createJoinQuerymultipleValuesPerDocument toField fromQuery fromField fromSearcher scoreMode termsWithScoreCollector
"public int serialize(int offset, byte[] data, EscherSerializationListener listener) {listener.beforeRecordSerialize(offset, getRecordId(), this);LittleEndian.putShort( data, offset, getOptions() );LittleEndian.putShort( data, offset + 2, getRecordId() );System.arraycopy( field_pictureData, 0, data, offset + 4, field_pictureData.length );listener.afterRecordSerialize(offset + 4 + field_pictureData.length, getRecordId(), field_pictureData.length + 4, this);return field_pictureData.length + 4;}",public int serializeint offset byte data EscherSerializationListener listener listenerbeforeRecordSerializeoffset getRecordId thisLittleEndianputShort data offset getOptions LittleEndianputShort data offset  2 getRecordId Systemarraycopy fieldpictureData 0 data offset  4 fieldpictureDatalength listenerafterRecordSerializeoffset  4  fieldpictureDatalength getRecordId fieldpictureDatalength  4 thisreturn fieldpictureDatalength  4
public SeekStatus seekCeil(BytesRef term) {final int ord = findTerm(term);if (ord >= 0) {termOrd = ord;setTerm();return SeekStatus.FOUND;} else if (ord == -terms.length-1) {return SeekStatus.END;} else {termOrd = -ord - 1;setTerm();return SeekStatus.NOT_FOUND;}},public SeekStatus seekCeilBytesRef term final int ord  findTermtermif ord  0 termOrd  ordsetTermreturn SeekStatusFOUND else if ord  termslength1 return SeekStatusEND else termOrd  ord  1setTermreturn SeekStatusNOTFOUND
public DeleteLoadBalancerResult deleteLoadBalancer(DeleteLoadBalancerRequest request) {request = beforeClientExecution(request);return executeDeleteLoadBalancer(request);},public DeleteLoadBalancerResult deleteLoadBalancerDeleteLoadBalancerRequest request request  beforeClientExecutionrequestreturn executeDeleteLoadBalancerrequest
public DeleteVpcPeeringAuthorizationResult deleteVpcPeeringAuthorization(DeleteVpcPeeringAuthorizationRequest request) {request = beforeClientExecution(request);return executeDeleteVpcPeeringAuthorization(request);},public DeleteVpcPeeringAuthorizationResult deleteVpcPeeringAuthorizationDeleteVpcPeeringAuthorizationRequest request request  beforeClientExecutionrequestreturn executeDeleteVpcPeeringAuthorizationrequest
public SendAnnouncementResult sendAnnouncement(SendAnnouncementRequest request) {request = beforeClientExecution(request);return executeSendAnnouncement(request);},public SendAnnouncementResult sendAnnouncementSendAnnouncementRequest request request  beforeClientExecutionrequestreturn executeSendAnnouncementrequest
@Override public int lastIndexOf(Object object) {final int size;final Object[] array;synchronized (mutex) {size = list.size();array = new Object[size];list.toArray(array);}if (object != null) {for (int i = size - 1; i >= 0; i--) {if (object.equals(array[i])) {return i;}}} else {for (int i = size - 1; i >= 0; i--) {if (array[i] == null) {return i;}}}return -1;},Override public int lastIndexOfObject object final int sizefinal Object arraysynchronized mutex size  listsizearray  new ObjectsizelisttoArrayarrayif object  null for int i  size  1 i  0 i if objectequalsarrayi return i else for int i  size  1 i  0 i if arrayi  null return ireturn 1
"public SortedDocValues getSortedDocValues(String field) {return getSortedDocValues(field, DocValuesType.SORTED);}",public SortedDocValues getSortedDocValuesString field return getSortedDocValuesfield DocValuesTypeSORTED
public void setBaseline() {setBaseline(clock.get());},public void setBaseline setBaselineclockget
"public final IntBuffer put(int[] src, int srcOffset, int intCount) {throw new ReadOnlyBufferException();}",public final IntBuffer putint src int srcOffset int intCount throw new ReadOnlyBufferException
"public SortingBits(final Bits in, Sorter.DocMap docMap) {this.in = in;this.docMap = docMap;}",public SortingBitsfinal Bits in SorterDocMap docMap thisin  inthisdocMap  docMap
"public static String quoteEscape(String original) {String result = original;if (result.indexOf('\""') >= 0) {result = result.replace(""\"""", ESCAPED_QUOTE);}if(result.indexOf(COMMA) >= 0) {result = ""\"""" + result + ""\"""";}return result;}",public static String quoteEscapeString original String result  originalif resultindexOf  0 result  resultreplace ESCAPEDQUOTEifresultindexOfCOMMA  0 result    result  return result
"public static double fv(double r, double n, double y, double p, boolean t) {double retval = 0;if (r == 0) {retval = -1*(p+(n*y));}else {double r1 = r + 1;retval =((1-Math.pow(r1, n)) * (t ? r1 : 1) * y ) / r-p*Math.pow(r1, n);}return retval;}",public static double fvdouble r double n double y double p boolean t double retval  0if r  0 retval  1pnyelse double r1  r  1retval 1Mathpowr1 n  t  r1  1  y   rpMathpowr1 nreturn retval
"public CharBuffer put(int index, char c) {throw new ReadOnlyBufferException();}",public CharBuffer putint index char c throw new ReadOnlyBufferException
public UpdateLifecyclePolicyResult updateLifecyclePolicy(UpdateLifecyclePolicyRequest request) {request = beforeClientExecution(request);return executeUpdateLifecyclePolicy(request);},public UpdateLifecyclePolicyResult updateLifecyclePolicyUpdateLifecyclePolicyRequest request request  beforeClientExecutionrequestreturn executeUpdateLifecyclePolicyrequest
public CreateNotebookInstanceLifecycleConfigResult createNotebookInstanceLifecycleConfig(CreateNotebookInstanceLifecycleConfigRequest request) {request = beforeClientExecution(request);return executeCreateNotebookInstanceLifecycleConfig(request);},public CreateNotebookInstanceLifecycleConfigResult createNotebookInstanceLifecycleConfigCreateNotebookInstanceLifecycleConfigRequest request request  beforeClientExecutionrequestreturn executeCreateNotebookInstanceLifecycleConfigrequest
"public boolean add(String text) {return map.put(text, PLACEHOLDER) == null;}",public boolean addString text return mapputtext PLACEHOLDER  null
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_axisType);out.writeInt(field_2_x);out.writeInt(field_3_y);out.writeInt(field_4_width);out.writeInt(field_5_height);},public void serializeLittleEndianOutput out outwriteShortfield1axisTypeoutwriteIntfield2xoutwriteIntfield3youtwriteIntfield4widthoutwriteIntfield5height
public GetJourneyResult getJourney(GetJourneyRequest request) {request = beforeClientExecution(request);return executeGetJourney(request);},public GetJourneyResult getJourneyGetJourneyRequest request request  beforeClientExecutionrequestreturn executeGetJourneyrequest
public PrecedenceQueryNodeProcessorPipeline(QueryConfigHandler queryConfig) {super(queryConfig);for (int i = 0 ; i < size() ; i++) {if (get(i).getClass().equals(BooleanQuery2ModifierNodeProcessor.class)) {remove(i--);}}add(new BooleanModifiersQueryNodeProcessor());},public PrecedenceQueryNodeProcessorPipelineQueryConfigHandler queryConfig superqueryConfigfor int i  0  i  size  i if getigetClassequalsBooleanQuery2ModifierNodeProcessorclass removeiaddnew BooleanModifiersQueryNodeProcessor
"public static boolean startsWith(byte[] ref, BytesRef prefix) {if (ref.length < prefix.length) {return false;}return Arrays.equals(ref, 0, prefix.length,prefix.bytes, prefix.offset, prefix.offset + prefix.length);}",public static boolean startsWithbyte ref BytesRef prefix if reflength  prefixlength return falsereturn Arraysequalsref 0 prefixlengthprefixbytes prefixoffset prefixoffset  prefixlength
public DeleteUsageReportSubscriptionResult deleteUsageReportSubscription(DeleteUsageReportSubscriptionRequest request) {request = beforeClientExecution(request);return executeDeleteUsageReportSubscription(request);},public DeleteUsageReportSubscriptionResult deleteUsageReportSubscriptionDeleteUsageReportSubscriptionRequest request request  beforeClientExecutionrequestreturn executeDeleteUsageReportSubscriptionrequest
public File[] listFiles(FilenameFilter filter) {return filenamesToFiles(list(filter));},public File listFilesFilenameFilter filter return filenamesToFileslistfilter
public void respondActivityTaskFailed(RespondActivityTaskFailedRequest request) {request = beforeClientExecution(request);executeRespondActivityTaskFailed(request);},public void respondActivityTaskFailedRespondActivityTaskFailedRequest request request  beforeClientExecutionrequestexecuteRespondActivityTaskFailedrequest
public ListIdentitiesResult listIdentities() {return listIdentities(new ListIdentitiesRequest());},public ListIdentitiesResult listIdentities return listIdentitiesnew ListIdentitiesRequest
"@Override public int compare(T o1, T o2) {Comparable<T> c2 = (Comparable<T>) o2;return c2.compareTo(o1);}",Override public int compareT o1 T o2 ComparableT c2  ComparableT o2return c2compareToo1
public ListFindingsResult listFindings(ListFindingsRequest request) {request = beforeClientExecution(request);return executeListFindings(request);},public ListFindingsResult listFindingsListFindingsRequest request request  beforeClientExecutionrequestreturn executeListFindingsrequest
public boolean contains(final int o){boolean rval = false;for (int j = 0; !rval && (j < _limit); j++){if (_array[ j ] == o){rval = true;}}return rval;},public boolean containsfinal int oboolean rval  falsefor int j  0 rval  j  limit jif array j   orval  truereturn rval
"public ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {if (args.length < 2) {return ErrorEval.VALUE_INVALID;}try {int ix = evaluateFirstArg(args[0], srcRowIndex, srcColumnIndex);if (ix < 1 || ix >= args.length) {return ErrorEval.VALUE_INVALID;}ValueEval result = OperandResolver.getSingleValue(args[ix], srcRowIndex, srcColumnIndex);if (result == MissingArgEval.instance) {return BlankEval.instance;}return result;} catch (EvaluationException e) {return e.getErrorEval();}}",public ValueEval evaluateValueEval args int srcRowIndex int srcColumnIndex if argslength  2 return ErrorEvalVALUEINVALIDtry int ix  evaluateFirstArgargs0 srcRowIndex srcColumnIndexif ix  1  ix  argslength return ErrorEvalVALUEINVALIDValueEval result  OperandResolvergetSingleValueargsix srcRowIndex srcColumnIndexif result  MissingArgEvalinstance return BlankEvalinstancereturn result catch EvaluationException e return egetErrorEval
public DatRecord clone() {return copy();},public DatRecord clone return copy
public GlobalReplicationGroup createGlobalReplicationGroup(CreateGlobalReplicationGroupRequest request) {request = beforeClientExecution(request);return executeCreateGlobalReplicationGroup(request);},public GlobalReplicationGroup createGlobalReplicationGroupCreateGlobalReplicationGroupRequest request request  beforeClientExecutionrequestreturn executeCreateGlobalReplicationGrouprequest
"public String getText(Interval interval) {if (interval.a < 0 || interval.b < interval.a - 1) {throw new IllegalArgumentException(""invalid interval"");}int bufferStartIndex = getBufferStartIndex();if (n > 0 && data[n - 1] == Character.MAX_VALUE) {if (interval.a + interval.length() > bufferStartIndex + n) {throw new IllegalArgumentException(""the interval extends past the end of the stream"");}}if (interval.a < bufferStartIndex || interval.b >= bufferStartIndex + n) {throw new UnsupportedOperationException(""interval ""+interval+"" outside buffer: ""+bufferStartIndex+""..""+(bufferStartIndex+n-1));}int i = interval.a - bufferStartIndex;return new String(data, i, interval.length());}",public String getTextInterval interval if intervala  0  intervalb  intervala  1 throw new IllegalArgumentExceptioninvalid intervalint bufferStartIndex  getBufferStartIndexif n  0  datan  1  CharacterMAXVALUE if intervala  intervallength  bufferStartIndex  n throw new IllegalArgumentExceptionthe interval extends past the end of the streamif intervala  bufferStartIndex  intervalb  bufferStartIndex  n throw new UnsupportedOperationExceptioninterval interval outside buffer bufferStartIndexbufferStartIndexn1int i  intervala  bufferStartIndexreturn new Stringdata i intervallength
"public void addClass(String chargroup) {if (chargroup.length() > 0) {char equivChar = chargroup.charAt(0);char[] key = new char[2];key[1] = 0;for (int i = 0; i < chargroup.length(); i++) {key[0] = chargroup.charAt(i);classmap.insert(key, 0, equivChar);}}}",public void addClassString chargroup if chargrouplength  0 char equivChar  chargroupcharAt0char key  new char2key1  0for int i  0 i  chargrouplength i key0  chargroupcharAticlassmapinsertkey 0 equivChar
"public MultiPhraseQuery build() {int[] positionsArray = new int[this.positions.size()];for (int i = 0; i < this.positions.size(); ++i) {positionsArray[i] = this.positions.get(i);}Term[][] termArraysArray = termArrays.toArray(new Term[termArrays.size()][]);return new MultiPhraseQuery(field, termArraysArray, positionsArray, slop);}",public MultiPhraseQuery build int positionsArray  new intthispositionssizefor int i  0 i  thispositionssize i positionsArrayi  thispositionsgetiTerm termArraysArray  termArraystoArraynew TermtermArrayssizereturn new MultiPhraseQueryfield termArraysArray positionsArray slop
"public DFRSimilarity(BasicModel basicModel,AfterEffect afterEffect,Normalization normalization) {if (basicModel == null || afterEffect == null || normalization == null) {throw new NullPointerException(""null parameters not allowed."");}this.basicModel = basicModel;this.afterEffect = afterEffect;this.normalization = normalization;}",public DFRSimilarityBasicModel basicModelAfterEffect afterEffectNormalization normalization if basicModel  null  afterEffect  null  normalization  null throw new NullPointerExceptionnull parameters not allowedthisbasicModel  basicModelthisafterEffect  afterEffectthisnormalization  normalization
"public ResetSnapshotAttributeRequest(String snapshotId, SnapshotAttributeName attribute) {setSnapshotId(snapshotId);setAttribute(attribute.toString());}",public ResetSnapshotAttributeRequestString snapshotId SnapshotAttributeName attribute setSnapshotIdsnapshotIdsetAttributeattributetoString
public V get(CharSequence cs) {if(cs == null)throw new NullPointerException();return null;},public V getCharSequence cs ifcs  nullthrow new NullPointerExceptionreturn null
public String getScheme() {return scheme;},public String getScheme return scheme
public void seekExact(long ord) {throw new UnsupportedOperationException();},public void seekExactlong ord throw new UnsupportedOperationException
public XPathElement(String nodeName) {this.nodeName = nodeName;},public XPathElementString nodeName thisnodeName  nodeName
public DeleteAccountResult deleteAccount(DeleteAccountRequest request) {request = beforeClientExecution(request);return executeDeleteAccount(request);},public DeleteAccountResult deleteAccountDeleteAccountRequest request request  beforeClientExecutionrequestreturn executeDeleteAccountrequest
"public boolean matches(ParseTree tree, ParseTreePattern pattern) {MultiMap<String, ParseTree> labels = new MultiMap<String, ParseTree>();ParseTree mismatchedNode = matchImpl(tree, pattern.getPatternTree(), labels);return mismatchedNode == null;}",public boolean matchesParseTree tree ParseTreePattern pattern MultiMapString ParseTree labels  new MultiMapString ParseTreeParseTree mismatchedNode  matchImpltree patterngetPatternTree labelsreturn mismatchedNode  null
public PredictionContext get(PredictionContext ctx) {return cache.get(ctx);},public PredictionContext getPredictionContext ctx return cachegetctx
public SpotPlacement(String availabilityZone) {setAvailabilityZone(availabilityZone);},public SpotPlacementString availabilityZone setAvailabilityZoneavailabilityZone
public DescribeFleetInstancesResult describeFleetInstances(DescribeFleetInstancesRequest request) {request = beforeClientExecution(request);return executeDescribeFleetInstances(request);},public DescribeFleetInstancesResult describeFleetInstancesDescribeFleetInstancesRequest request request  beforeClientExecutionrequestreturn executeDescribeFleetInstancesrequest
public void setWorkingTreeIterator(WorkingTreeIterator workingTreeIterator) {this.workingTreeIterator = workingTreeIterator;},public void setWorkingTreeIteratorWorkingTreeIterator workingTreeIterator thisworkingTreeIterator  workingTreeIterator
"public static long pop_array(long[] arr, int wordOffset, int numWords) {long popCount = 0;for (int i = wordOffset, end = wordOffset + numWords; i < end; ++i) {popCount += Long.bitCount(arr[i]);}return popCount;}",public static long poparraylong arr int wordOffset int numWords long popCount  0for int i  wordOffset end  wordOffset  numWords i  end i popCount  LongbitCountarrireturn popCount
"public static FileKey lenient(File directory, FS fs) {final File gitdir = resolve(directory, fs);return new FileKey(gitdir != null ? gitdir : directory, fs);}",public static FileKey lenientFile directory FS fs final File gitdir  resolvedirectory fsreturn new FileKeygitdir  null  gitdir  directory fs
"public ObjectWalk(ObjectReader or, int depth) {super(or);this.depth = depth;this.deepenNots = Collections.emptyList();this.UNSHALLOW = newFlag(""UNSHALLOW""); this.REINTERESTING = newFlag(""REINTERESTING""); this.DEEPEN_NOT = newFlag(""DEEPEN_NOT""); }",public ObjectWalkObjectReader or int depth superorthisdepth  depththisdeepenNots  CollectionsemptyListthisUNSHALLOW  newFlagUNSHALLOW thisREINTERESTING  newFlagREINTERESTING thisDEEPENNOT  newFlagDEEPENNOT 
public RegisterImageRequest(String imageLocation) {setImageLocation(imageLocation);},public RegisterImageRequestString imageLocation setImageLocationimageLocation
"public void write(String s) {reserve(s.length());s.getChars(0,s.length(),buf, len);len +=s.length();}",public void writeString s reserveslengthsgetChars0slengthbuf lenlen slength
public RefCountedRevision(Revision revision) {this.revision = revision;},public RefCountedRevisionRevision revision thisrevision  revision
public ListTagsForResourcesResult listTagsForResources(ListTagsForResourcesRequest request) {request = beforeClientExecution(request);return executeListTagsForResources(request);},public ListTagsForResourcesResult listTagsForResourcesListTagsForResourcesRequest request request  beforeClientExecutionrequestreturn executeListTagsForResourcesrequest
public byte readByte() {return bytes[pos++];},public byte readByte return bytespos
public GlobalReplicationGroup deleteGlobalReplicationGroup(DeleteGlobalReplicationGroupRequest request) {request = beforeClientExecution(request);return executeDeleteGlobalReplicationGroup(request);},public GlobalReplicationGroup deleteGlobalReplicationGroupDeleteGlobalReplicationGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteGlobalReplicationGrouprequest
public IntBuffer asReadOnlyBuffer() {return duplicate();},public IntBuffer asReadOnlyBuffer return duplicate
public DescribeFileSystemPolicyResult describeFileSystemPolicy(DescribeFileSystemPolicyRequest request) {request = beforeClientExecution(request);return executeDescribeFileSystemPolicy(request);},public DescribeFileSystemPolicyResult describeFileSystemPolicyDescribeFileSystemPolicyRequest request request  beforeClientExecutionrequestreturn executeDescribeFileSystemPolicyrequest
public ListAttributesResult listAttributes(ListAttributesRequest request) {request = beforeClientExecution(request);return executeListAttributes(request);},public ListAttributesResult listAttributesListAttributesRequest request request  beforeClientExecutionrequestreturn executeListAttributesrequest
"public ModifyStrategyTargetRequest() {super(""aegis"", ""2016-11-11"", ""ModifyStrategyTarget"", ""vipaegis"");setMethod(MethodType.POST);}",public ModifyStrategyTargetRequest superaegis 20161111 ModifyStrategyTarget vipaegissetMethodMethodTypePOST
public void removeFontRecord(FontRecord rec) {records.remove(rec); numfonts--;},public void removeFontRecordFontRecord rec recordsremoverec numfonts
public static Class<? extends TokenFilterFactory> lookupClass(String name) {return loader.lookupClass(name);},public static Class extends TokenFilterFactory lookupClassString name return loaderlookupClassname
"public void reset(TermsEnum terms, BytesRef term) {this.terms = terms;current = term;}",public void resetTermsEnum terms BytesRef term thisterms  termscurrent  term
public LinkedDataRecord getDataValues(){return dataValues;},public LinkedDataRecord getDataValuesreturn dataValues
"public synchronized static DefaultProfile getProfile(String regionId, ICredentialProvider icredential) {profile = new DefaultProfile(regionId, icredential);return profile;}",public synchronized static DefaultProfile getProfileString regionId ICredentialProvider icredential profile  new DefaultProfileregionId icredentialreturn profile
public ListFieldLevelEncryptionProfilesResult listFieldLevelEncryptionProfiles(ListFieldLevelEncryptionProfilesRequest request) {request = beforeClientExecution(request);return executeListFieldLevelEncryptionProfiles(request);},public ListFieldLevelEncryptionProfilesResult listFieldLevelEncryptionProfilesListFieldLevelEncryptionProfilesRequest request request  beforeClientExecutionrequestreturn executeListFieldLevelEncryptionProfilesrequest
public RegisterTaskDefinitionResult registerTaskDefinition(RegisterTaskDefinitionRequest request) {request = beforeClientExecution(request);return executeRegisterTaskDefinition(request);},public RegisterTaskDefinitionResult registerTaskDefinitionRegisterTaskDefinitionRequest request request  beforeClientExecutionrequestreturn executeRegisterTaskDefinitionrequest
"public String toString() {return String.format(""type(%d)"", type);}",public String toString return Stringformattyped type
public DisableEnhancedMonitoringResult disableEnhancedMonitoring(DisableEnhancedMonitoringRequest request) {request = beforeClientExecution(request);return executeDisableEnhancedMonitoring(request);},public DisableEnhancedMonitoringResult disableEnhancedMonitoringDisableEnhancedMonitoringRequest request request  beforeClientExecutionrequestreturn executeDisableEnhancedMonitoringrequest
"public NodeHash(FST<T> fst, FST.BytesReader in) {table = new PagedGrowableWriter(16, 1<<27, 8, PackedInts.COMPACT);mask = 15;this.fst = fst;this.in = in;}",public NodeHashFSTT fst FSTBytesReader in table  new PagedGrowableWriter16 127 8 PackedIntsCOMPACTmask  15thisfst  fstthisin  in
public static final String toString(ObjectId i) {return i != null ? i.name() : ZEROID_STR;},public static final String toStringObjectId i return i  null  iname  ZEROIDSTR
public LittleEndianOutput createDelayedOutput(int size) {return this;},public LittleEndianOutput createDelayedOutputint size return this
public String toFormulaString(FormulaRenderingWorkbook book) {return book.getNameText(this);},public String toFormulaStringFormulaRenderingWorkbook book return bookgetNameTextthis
"public String toString() {return ""<boost value='"" + getValueString() + ""'>"" + ""\n""+ getChild().toString() + ""\n</boost>"";}",public String toString return boost value  getValueString    n getChildtoString  nboost
public ListTagsResult listTags(ListTagsRequest request) {request = beforeClientExecution(request);return executeListTags(request);},public ListTagsResult listTagsListTagsRequest request request  beforeClientExecutionrequestreturn executeListTagsrequest
public ListTypeVersionsResult listTypeVersions(ListTypeVersionsRequest request) {request = beforeClientExecution(request);return executeListTypeVersions(request);},public ListTypeVersionsResult listTypeVersionsListTypeVersionsRequest request request  beforeClientExecutionrequestreturn executeListTypeVersionsrequest
public ObjectLinkRecord(RecordInputStream in) {field_1_anchorId = in.readShort();field_2_link1 = in.readShort();field_3_link2 = in.readShort();},public ObjectLinkRecordRecordInputStream in field1anchorId  inreadShortfield2link1  inreadShortfield3link2  inreadShort
public String getPromptText() {return promptText;},public String getPromptText return promptText
public static String toLowerCase(String in) {final StringBuilder r = new StringBuilder(in.length());for (int i = 0; i < in.length(); i++)r.append(toLowerCase(in.charAt(i)));return r.toString();},public static String toLowerCaseString in final StringBuilder r  new StringBuilderinlengthfor int i  0 i  inlength irappendtoLowerCaseincharAtireturn rtoString
public static boolean isBeginRecord(int sid) {return sid == UserSViewBegin.sid;},public static boolean isBeginRecordint sid return sid  UserSViewBeginsid
public GetInstanceMetricDataResult getInstanceMetricData(GetInstanceMetricDataRequest request) {request = beforeClientExecution(request);return executeGetInstanceMetricData(request);},public GetInstanceMetricDataResult getInstanceMetricDataGetInstanceMetricDataRequest request request  beforeClientExecutionrequestreturn executeGetInstanceMetricDatarequest
"public void seekExact(BytesRef target, TermState otherState) {assert otherState != null && otherState instanceof BlockTermState;assert !doOrd || ((BlockTermState) otherState).ord < numTerms;state.copyFrom(otherState);seekPending = true;indexIsCurrent = false;term.copyBytes(target);}",public void seekExactBytesRef target TermState otherState assert otherState  null  otherState instanceof BlockTermStateassert doOrd  BlockTermState otherStateord  numTermsstatecopyFromotherStateseekPending  trueindexIsCurrent  falsetermcopyBytestarget
public NGramDistance(int size) {this.n = size;},public NGramDistanceint size thisn  size
public AllocateConnectionOnInterconnectResult allocateConnectionOnInterconnect(AllocateConnectionOnInterconnectRequest request) {request = beforeClientExecution(request);return executeAllocateConnectionOnInterconnect(request);},public AllocateConnectionOnInterconnectResult allocateConnectionOnInterconnectAllocateConnectionOnInterconnectRequest request request  beforeClientExecutionrequestreturn executeAllocateConnectionOnInterconnectrequest
public StandardSyntaxParser(CharStream stream) {token_source = new StandardSyntaxParserTokenManager(stream);token = new Token();jj_ntk = -1;jj_gen = 0;for (int i = 0; i < 25; i++) jj_la1[i] = -1;for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();},public StandardSyntaxParserCharStream stream tokensource  new StandardSyntaxParserTokenManagerstreamtoken  new Tokenjjntk  1jjgen  0for int i  0 i  25 i jjla1i  1for int i  0 i  jj2rtnslength i jj2rtnsi  new JJCalls
public void serialize(LittleEndianOutput out) {_range.serialize(out);serializeExtraData(out);},public void serializeLittleEndianOutput out rangeserializeoutserializeExtraDataout
"public CharSequence toQueryString(EscapeQuerySyntax escapeSyntaxParser) {return isDefaultField(field)? ""/""+text+""/"": field + "":/"" + text + ""/"";}",public CharSequence toQueryStringEscapeQuerySyntax escapeSyntaxParser return isDefaultFieldfield text field    text  
public static boolean isRowBlockRecord(int sid) {switch (sid) {case RowRecord.sid:case BlankRecord.sid:case BoolErrRecord.sid:case FormulaRecord.sid:case LabelRecord.sid:case LabelSSTRecord.sid:case NumberRecord.sid:case RKRecord.sid:case ArrayRecord.sid:case SharedFormulaRecord.sid:case TableRecord.sid:return true;}return false;},public static boolean isRowBlockRecordint sid switch sid case RowRecordsidcase BlankRecordsidcase BoolErrRecordsidcase FormulaRecordsidcase LabelRecordsidcase LabelSSTRecordsidcase NumberRecordsidcase RKRecordsidcase ArrayRecordsidcase SharedFormulaRecordsidcase TableRecordsidreturn truereturn false
"public static final int endOfParagraph(byte[] b, int start) {int ptr = start;final int sz = b.length;while (ptr < sz && (b[ptr] != '\n' && b[ptr] != '\r'))ptr = nextLF(b, ptr);if (ptr > start && b[ptr - 1] == '\n')ptr--;if (ptr > start && b[ptr - 1] == '\r')ptr--;return ptr;}",public static final int endOfParagraphbyte b int start int ptr  startfinal int sz  blengthwhile ptr  sz  bptr  n  bptr  rptr  nextLFb ptrif ptr  start  bptr  1  nptrif ptr  start  bptr  1  rptrreturn ptr
public VerifyDomainDkimResult verifyDomainDkim(VerifyDomainDkimRequest request) {request = beforeClientExecution(request);return executeVerifyDomainDkim(request);},public VerifyDomainDkimResult verifyDomainDkimVerifyDomainDkimRequest request request  beforeClientExecutionrequestreturn executeVerifyDomainDkimrequest
public boolean equals(Object o) {if (o instanceof HSSFRichTextString) {return _string.equals(((HSSFRichTextString)o)._string);}return false;},public boolean equalsObject o if o instanceof HSSFRichTextString return stringequalsHSSFRichTextStringostringreturn false
public boolean equals(Object obj) {if (!(obj instanceof RowColKey)) {return false;}RowColKey other = (RowColKey) obj;return _rowIndex == other._rowIndex && _columnIndex == other._columnIndex;},public boolean equalsObject obj if obj instanceof RowColKey return falseRowColKey other  RowColKey objreturn rowIndex  otherrowIndex  columnIndex  othercolumnIndex
public GetIdentityPoolConfigurationResult getIdentityPoolConfiguration(GetIdentityPoolConfigurationRequest request) {request = beforeClientExecution(request);return executeGetIdentityPoolConfiguration(request);},public GetIdentityPoolConfigurationResult getIdentityPoolConfigurationGetIdentityPoolConfigurationRequest request request  beforeClientExecutionrequestreturn executeGetIdentityPoolConfigurationrequest
public DeleteTrafficMirrorFilterResult deleteTrafficMirrorFilter(DeleteTrafficMirrorFilterRequest request) {request = beforeClientExecution(request);return executeDeleteTrafficMirrorFilter(request);},public DeleteTrafficMirrorFilterResult deleteTrafficMirrorFilterDeleteTrafficMirrorFilterRequest request request  beforeClientExecutionrequestreturn executeDeleteTrafficMirrorFilterrequest
"public Bits readLiveDocs(Directory dir, SegmentCommitInfo info, IOContext context) throws IOException {assert info.hasDeletions();BytesRefBuilder scratch = new BytesRefBuilder();CharsRefBuilder scratchUTF16 = new CharsRefBuilder();String fileName = IndexFileNames.fileNameFromGeneration(info.info.name, LIVEDOCS_EXTENSION, info.getDelGen());ChecksumIndexInput in = null;boolean success = false;try {in = dir.openChecksumInput(fileName, context);SimpleTextUtil.readLine(in, scratch);assert StringHelper.startsWith(scratch.get(), SIZE);int size = parseIntAt(scratch.get(), SIZE.length, scratchUTF16);BitSet bits = new BitSet(size);SimpleTextUtil.readLine(in, scratch);while (!scratch.get().equals(END)) {assert StringHelper.startsWith(scratch.get(), DOC);int docid = parseIntAt(scratch.get(), DOC.length, scratchUTF16);bits.set(docid);SimpleTextUtil.readLine(in, scratch);}SimpleTextUtil.checkFooter(in);success = true;return new SimpleTextBits(bits, size);} finally {if (success) {IOUtils.close(in);} else {IOUtils.closeWhileHandlingException(in);}}}",public Bits readLiveDocsDirectory dir SegmentCommitInfo info IOContext context throws IOException assert infohasDeletionsBytesRefBuilder scratch  new BytesRefBuilderCharsRefBuilder scratchUTF16  new CharsRefBuilderString fileName  IndexFileNamesfileNameFromGenerationinfoinfoname LIVEDOCSEXTENSION infogetDelGenChecksumIndexInput in  nullboolean success  falsetry in  diropenChecksumInputfileName contextSimpleTextUtilreadLinein scratchassert StringHelperstartsWithscratchget SIZEint size  parseIntAtscratchget SIZElength scratchUTF16BitSet bits  new BitSetsizeSimpleTextUtilreadLinein scratchwhile scratchgetequalsEND assert StringHelperstartsWithscratchget DOCint docid  parseIntAtscratchget DOClength scratchUTF16bitssetdocidSimpleTextUtilreadLinein scratchSimpleTextUtilcheckFooterinsuccess  truereturn new SimpleTextBitsbits size finally if success IOUtilsclosein else IOUtilscloseWhileHandlingExceptionin
public CreateConferenceProviderResult createConferenceProvider(CreateConferenceProviderRequest request) {request = beforeClientExecution(request);return executeCreateConferenceProvider(request);},public CreateConferenceProviderResult createConferenceProviderCreateConferenceProviderRequest request request  beforeClientExecutionrequestreturn executeCreateConferenceProviderrequest
"public SimpleQQParser(String qqNames[], String indexField) {this.qqNames = qqNames;this.indexField = indexField;}",public SimpleQQParserString qqNames String indexField thisqqNames  qqNamesthisindexField  indexField
public boolean isCaseSensitive() {return false;},public boolean isCaseSensitive return false
"public TokenFilter create(TokenStream input) {return new HyphenationCompoundWordTokenFilter(input, hyphenator, dictionary, minWordSize, minSubwordSize, maxSubwordSize, onlyLongestMatch);}",public TokenFilter createTokenStream input return new HyphenationCompoundWordTokenFilterinput hyphenator dictionary minWordSize minSubwordSize maxSubwordSize onlyLongestMatch
public TokenStream create(TokenStream input) {return new JapaneseBaseFormFilter(input);},public TokenStream createTokenStream input return new JapaneseBaseFormFilterinput
public OrderedATNConfigSet() {this.configLookup = new LexerConfigHashSet();},public OrderedATNConfigSet thisconfigLookup  new LexerConfigHashSet
"public static ValueEval dereferenceResult(ValueEval evaluationResult, int srcRowNum, int srcColNum) {ValueEval value;try {value = OperandResolver.getSingleValue(evaluationResult, srcRowNum, srcColNum);} catch (EvaluationException e) {return e.getErrorEval();}if (value == BlankEval.instance) {return NumberEval.ZERO;}return value;}",public static ValueEval dereferenceResultValueEval evaluationResult int srcRowNum int srcColNum ValueEval valuetry value  OperandResolvergetSingleValueevaluationResult srcRowNum srcColNum catch EvaluationException e return egetErrorEvalif value  BlankEvalinstance return NumberEvalZEROreturn value
public GetGroupRequest(String groupName) {setGroupName(groupName);},public GetGroupRequestString groupName setGroupNamegroupName
"public void narrowSearch(int midIx, boolean isLessThan) {if(isLessThan) {_highIx = midIx;} else {_lowIx = midIx;}}",public void narrowSearchint midIx boolean isLessThan ifisLessThan highIx  midIx else lowIx  midIx
"public void set(int index, long value) {final int o = index >>> 1;final int b = index & 1;final int shift = b << 5;blocks[o] = (blocks[o] & ~(4294967295L << shift)) | (value << shift);}",public void setint index long value final int o  index  1final int b  index  1final int shift  b  5blockso  blockso  4294967295L  shift  value  shift
public String toString() {return cfAggregate.toString();},public String toString return cfAggregatetoString
"public void setConfig(Config config) {super.setConfig(config);random = new Random(config.get(""rand.seed"", 13));maxDocFacets = config.get(""max.doc.facets"", 10);maxDims = config.get(""max.doc.facets.dims"", 5);maxFacetDepth = config.get(""max.facet.depth"", 3);if (maxFacetDepth < 2) {throw new IllegalArgumentException(""max.facet.depth must be at least 2; got: "" + maxFacetDepth);}maxValue = maxDocFacets * maxFacetDepth;}",public void setConfigConfig config supersetConfigconfigrandom  new Randomconfiggetrandseed 13maxDocFacets  configgetmaxdocfacets 10maxDims  configgetmaxdocfacetsdims 5maxFacetDepth  configgetmaxfacetdepth 3if maxFacetDepth  2 throw new IllegalArgumentExceptionmaxfacetdepth must be at least 2 got   maxFacetDepthmaxValue  maxDocFacets  maxFacetDepth
"public interface Experiments extends SupportsCreating<Experiment.DefinitionStages.Blank>, HasInner<ExperimentsInner> {Observable<Experiment> getAsync(String resourceGroupName, String workspaceName, String experimentName);Observable<Experiment> listByWorkspaceAsync(final String resourceGroupName, final String workspaceName);Completable deleteAsync(String resourceGroupName, String workspaceName, String experimentName);}",public interface Experiments extends SupportsCreatingExperimentDefinitionStagesBlank HasInnerExperimentsInner ObservableExperiment getAsyncString resourceGroupName String workspaceName String experimentNameObservableExperiment listByWorkspaceAsyncfinal String resourceGroupName final String workspaceNameCompletable deleteAsyncString resourceGroupName String workspaceName String experimentName
"public Builder add(long l) {if (pending == null) {throw new IllegalStateException(""Cannot be reused after build()"");}if (pendingOff == pending.length) {if (values.length == valuesOff) {final int newLength = ArrayUtil.oversize(valuesOff + 1, 8);grow(newLength);}pack();}pending[pendingOff++] = l;size += 1;return this;}",public Builder addlong l if pending  null throw new IllegalStateExceptionCannot be reused after buildif pendingOff  pendinglength if valueslength  valuesOff final int newLength  ArrayUtiloversizevaluesOff  1 8grownewLengthpackpendingpendingOff  lsize  1return this
public static boolean isBuiltInFunctionName(String name) {short ix = FunctionMetadataRegistry.lookupIndexByName(name.toUpperCase(Locale.ROOT));return ix >= 0;},public static boolean isBuiltInFunctionNameString name short ix  FunctionMetadataRegistrylookupIndexByNamenametoUpperCaseLocaleROOTreturn ix  0
"public void readBytes(byte[] b, int offset, int len) {while(len > 0) {final int numLeft = limit-upto;if (numLeft < len) {System.arraycopy(buffer, upto, b, offset, numLeft);offset += numLeft;len -= numLeft;nextSlice();} else {System.arraycopy(buffer, upto, b, offset, len);upto += len;break;}}}",public void readBytesbyte b int offset int len whilelen  0 final int numLeft  limituptoif numLeft  len Systemarraycopybuffer upto b offset numLeftoffset  numLeftlen  numLeftnextSlice else Systemarraycopybuffer upto b offset lenupto  lenbreak
public String toFormulaString(String[] operands) {StringBuilder buffer = new StringBuilder();buffer.append(operands[ 0 ]);buffer.append(CONCAT);buffer.append(operands[ 1 ]);return buffer.toString();},public String toFormulaStringString operands StringBuilder buffer  new StringBuilderbufferappendoperands 0 bufferappendCONCATbufferappendoperands 1 return buffertoString
public ListResolverRuleAssociationsResult listResolverRuleAssociations(ListResolverRuleAssociationsRequest request) {request = beforeClientExecution(request);return executeListResolverRuleAssociations(request);},public ListResolverRuleAssociationsResult listResolverRuleAssociationsListResolverRuleAssociationsRequest request request  beforeClientExecutionrequestreturn executeListResolverRuleAssociationsrequest
public TokenStream create(TokenStream input) {return new ApostropheFilter(input);},public TokenStream createTokenStream input return new ApostropheFilterinput
"public static String getExtension(String name) {int i = name.lastIndexOf('.');if (i == -1) {return """";}String ext = name.substring(i + 1);if (ext.equals(""tmp"")) {Matcher matcher = EXT_PATTERN.matcher(name.substring(0, i + 1));if (matcher.find()) {return matcher.group(1);}}return ext;}",public static String getExtensionString name int i  namelastIndexOfif i  1 return String ext  namesubstringi  1if extequalstmp Matcher matcher  EXTPATTERNmatchernamesubstring0 i  1if matcherfind return matchergroup1return ext
"public static int getBuiltinFormat(String pFmt) {String fmt = ""TEXT"".equalsIgnoreCase(pFmt) ? ""@"" : pFmt;int i = -1;for (String f : _formats) {i++;if (f.equals(fmt)) {return i;}}return -1;}",public static int getBuiltinFormatString pFmt String fmt  TEXTequalsIgnoreCasepFmt    pFmtint i  1for String f  formats iif fequalsfmt return ireturn 1
@Override public int indexOf(Object object) {return list.indexOf(object);},Override public int indexOfObject object return listindexOfobject
"public void trimToSize() {balance();redimNodeArrays(freenode);CharVector kx = new CharVector();kx.alloc(1);TernaryTree map = new TernaryTree();compact(kx, map, root);kv = kx;kv.trimToSize();}",public void trimToSize balanceredimNodeArraysfreenodeCharVector kx  new CharVectorkxalloc1TernaryTree map  new TernaryTreecompactkx map rootkv  kxkvtrimToSize
"public GetRepoSyncTaskRequest() {super(""cr"", ""2016-06-07"", ""GetRepoSyncTask"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/syncTasks/[SyncTaskId]"");setMethod(MethodType.GET);}",public GetRepoSyncTaskRequest supercr 20160607 GetRepoSyncTask crsetUriPatternreposRepoNamespaceRepoNamesyncTasksSyncTaskIdsetMethodMethodTypeGET
"public ChangeMessageVisibilityRequest(String queueUrl, String receiptHandle, Integer visibilityTimeout) {setQueueUrl(queueUrl);setReceiptHandle(receiptHandle);setVisibilityTimeout(visibilityTimeout);}",public ChangeMessageVisibilityRequestString queueUrl String receiptHandle Integer visibilityTimeout setQueueUrlqueueUrlsetReceiptHandlereceiptHandlesetVisibilityTimeoutvisibilityTimeout
"public String toString() {return ""[SAVERECALC]\n"" +""    .recalc         = "" + getRecalc() +""\n"" +""[/SAVERECALC]\n"";}",public String toString return SAVERECALCn     recalc            getRecalc n SAVERECALCn
public Status getStatus() {return status;},public Status getStatus return status
"public StartRepoBuildByRuleRequest() {super(""cr"", ""2016-06-07"", ""StartRepoBuildByRule"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/rules/[BuildRuleId]/build"");setMethod(MethodType.PUT);}",public StartRepoBuildByRuleRequest supercr 20160607 StartRepoBuildByRule crsetUriPatternreposRepoNamespaceRepoNamerulesBuildRuleIdbuildsetMethodMethodTypePUT
public ModifyAvailabilityZoneGroupResult modifyAvailabilityZoneGroup(ModifyAvailabilityZoneGroupRequest request) {request = beforeClientExecution(request);return executeModifyAvailabilityZoneGroup(request);},public ModifyAvailabilityZoneGroupResult modifyAvailabilityZoneGroupModifyAvailabilityZoneGroupRequest request request  beforeClientExecutionrequestreturn executeModifyAvailabilityZoneGrouprequest
public int compareSameType(Object other) {assert exists || 0 == value.length();MutableValueStr b = (MutableValueStr)other;int c = value.get().compareTo(b.value.get());if (c != 0) return c;if (exists == b.exists) return 0;return exists ? 1 : -1;},public int compareSameTypeObject other assert exists  0  valuelengthMutableValueStr b  MutableValueStrotherint c  valuegetcompareTobvaluegetif c  0 return cif exists  bexists return 0return exists  1  1
"public CharSequence toQueryString(EscapeQuerySyntax escapeSyntaxParser) {if (getChildren() == null || getChildren().size() == 0)return """";StringBuilder sb = new StringBuilder();String filler = """";for (QueryNode child : getChildren()) {sb.append(filler).append(child.toQueryString(escapeSyntaxParser));filler = "","";}return ""[TP["" + sb.toString() + ""]]"";}",public CharSequence toQueryStringEscapeQuerySyntax escapeSyntaxParser if getChildren  null  getChildrensize  0return StringBuilder sb  new StringBuilderString filler  for QueryNode child  getChildren sbappendfillerappendchildtoQueryStringescapeSyntaxParserfiller  return TP  sbtoString  
public DescribeChangeSetResult describeChangeSet(DescribeChangeSetRequest request) {request = beforeClientExecution(request);return executeDescribeChangeSet(request);},public DescribeChangeSetResult describeChangeSetDescribeChangeSetRequest request request  beforeClientExecutionrequestreturn executeDescribeChangeSetrequest
public static int initialize(int seed) {return seed;},public static int initializeint seed return seed
public File getIdentityFile() {return identityFile;},public File getIdentityFile return identityFile
"public String toString() {String n = getClass().getName();int lastDot = n.lastIndexOf('.');if (lastDot >= 0) {n = n.substring(lastDot + 1);}return n.replace('$', '.');}",public String toString String n  getClassgetNameint lastDot  nlastIndexOfif lastDot  0 n  nsubstringlastDot  1return nreplace 
public DeleteVoiceConnectorProxyResult deleteVoiceConnectorProxy(DeleteVoiceConnectorProxyRequest request) {request = beforeClientExecution(request);return executeDeleteVoiceConnectorProxy(request);},public DeleteVoiceConnectorProxyResult deleteVoiceConnectorProxyDeleteVoiceConnectorProxyRequest request request  beforeClientExecutionrequestreturn executeDeleteVoiceConnectorProxyrequest
public ByteArrayDataInput(byte[] bytes) {reset(bytes);},public ByteArrayDataInputbyte bytes resetbytes
public CreateLocalGatewayRouteResult createLocalGatewayRoute(CreateLocalGatewayRouteRequest request) {request = beforeClientExecution(request);return executeCreateLocalGatewayRoute(request);},public CreateLocalGatewayRouteResult createLocalGatewayRouteCreateLocalGatewayRouteRequest request request  beforeClientExecutionrequestreturn executeCreateLocalGatewayRouterequest
"public static int strlen(char[] a, int start) {int len = 0;for (int i = start; i < a.length && a[i] != 0; i++) {len++;}return len;}",public static int strlenchar a int start int len  0for int i  start i  alength  ai  0 i lenreturn len
public AttachPolicyResult attachPolicy(AttachPolicyRequest request) {request = beforeClientExecution(request);return executeAttachPolicy(request);},public AttachPolicyResult attachPolicyAttachPolicyRequest request request  beforeClientExecutionrequestreturn executeAttachPolicyrequest
public void print(double dnum) {print(String.valueOf(dnum));},public void printdouble dnum printStringvalueOfdnum
public static BreakIterator getCharacterInstance() {return getCharacterInstance(Locale.getDefault());},public static BreakIterator getCharacterInstance return getCharacterInstanceLocalegetDefault
public boolean add(E object) {throw new UnsupportedOperationException();},public boolean addE object throw new UnsupportedOperationException
"public SendMessageRequest(String queueUrl, String messageBody) {setQueueUrl(queueUrl);setMessageBody(messageBody);}",public SendMessageRequestString queueUrl String messageBody setQueueUrlqueueUrlsetMessageBodymessageBody
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {try {AreaEval reA = evaluateRef(arg0);AreaEval reB = evaluateRef(arg1);return resolveRange(reA, reB);} catch (EvaluationException e) {return e.getErrorEval();}}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1 try AreaEval reA  evaluateRefarg0AreaEval reB  evaluateRefarg1return resolveRangereA reB catch EvaluationException e return egetErrorEval
"public CharBuffer put(char[] src, int srcOffset, int charCount) {Arrays.checkOffsetAndCount(src.length, srcOffset, charCount);if (charCount > remaining()) {throw new BufferOverflowException();}for (int i = srcOffset; i < srcOffset + charCount; ++i) {put(src[i]);}return this;}",public CharBuffer putchar src int srcOffset int charCount ArrayscheckOffsetAndCountsrclength srcOffset charCountif charCount  remaining throw new BufferOverflowExceptionfor int i  srcOffset i  srcOffset  charCount i putsrcireturn this
"public void writeByte(byte b) {assert slice != null;if (slice[upto] != 0) {upto = pool.allocSlice(slice, upto);slice = pool.buffer;offset0 = pool.byteOffset;assert slice != null;}slice[upto++] = b;assert upto != slice.length;}",public void writeBytebyte b assert slice  nullif sliceupto  0 upto  poolallocSliceslice uptoslice  poolbufferoffset0  poolbyteOffsetassert slice  nullsliceupto  bassert upto  slicelength
public static double atanh(double a) {final double mult;if (Double.doubleToRawLongBits(a) < 0) {a = Math.abs(a);mult = -0.5d;} else {mult = 0.5d;}return mult * Math.log((1.0d + a) / (1.0d - a));},public static double atanhdouble a final double multif DoubledoubleToRawLongBitsa  0 a  Mathabsamult  05d else mult  05dreturn mult  Mathlog10d  a  10d  a
public static double asinh(double a) {final double sign;if (Double.doubleToRawLongBits(a) < 0) {a = Math.abs(a);sign = -1.0d;} else {sign = 1.0d;}return sign * Math.log(Math.sqrt(a * a + 1.0d) + a);},public static double asinhdouble a final double signif DoubledoubleToRawLongBitsa  0 a  Mathabsasign  10d else sign  10dreturn sign  MathlogMathsqrta  a  10d  a
"public FuzzyLikeThisQuery(int maxNumTerms, Analyzer analyzer){this.analyzer=analyzer;this.maxNumTerms = maxNumTerms;}",public FuzzyLikeThisQueryint maxNumTerms Analyzer analyzerthisanalyzeranalyzerthismaxNumTerms  maxNumTerms
"public boolean precpred(RuleContext localctx, int precedence) {return precedence >= _precedenceStack.peek();}",public boolean precpredRuleContext localctx int precedence return precedence  precedenceStackpeek
public UpdateStackResult updateStack(UpdateStackRequest request) {request = beforeClientExecution(request);return executeUpdateStack(request);},public UpdateStackResult updateStackUpdateStackRequest request request  beforeClientExecutionrequestreturn executeUpdateStackrequest
"public StartJumpserverRequest() {super(""HPC"", ""2016-06-03"", ""StartJumpserver"", ""hpc"");setMethod(MethodType.POST);}",public StartJumpserverRequest superHPC 20160603 StartJumpserver hpcsetMethodMethodTypePOST
public List<FastIgnoreRule> getRules() {return Collections.unmodifiableList(rules);},public ListFastIgnoreRule getRules return CollectionsunmodifiableListrules
"public RefMap() {prefix = """"; packed = RefList.emptyList();loose = RefList.emptyList();resolved = RefList.emptyList();}",public RefMap prefix   packed  RefListemptyListloose  RefListemptyListresolved  RefListemptyList
public Collection<ObjectId> getCandidates() {return candidates;},public CollectionObjectId getCandidates return candidates
"public int get(Object key) {int index = findIndex(key, keys);if (keys[index] == key) {return values[index];}return -1;}",public int getObject key int index  findIndexkey keysif keysindex  key return valuesindexreturn 1
public String toStringEscaped(char[] enabledChars) {StringBuilder result = new StringBuilder();for (int i = 0; i < this.length(); i++) {if (this.chars[i] == '\\') {result.append('\\');} else {for (char character : enabledChars) {if (this.chars[i] == character && this.wasEscaped[i]) {result.append('\\');break;}}}result.append(this.chars[i]);}return result.toString();},public String toStringEscapedchar enabledChars StringBuilder result  new StringBuilderfor int i  0 i  thislength i if thischarsi   resultappend else for char character  enabledChars if thischarsi  character  thiswasEscapedi resultappendbreakresultappendthischarsireturn resulttoString
public DiffCommand setCached(boolean cached) {this.cached = cached;return this;},public DiffCommand setCachedboolean cached thiscached  cachedreturn this
public RevertCommand revert() {return new RevertCommand(repo);},public RevertCommand revert return new RevertCommandrepo
"@Override public void clear() {if (size != 0) {Arrays.fill(table, null);entryForNullKey = null;modCount++;size = 0;}}",Override public void clear if size  0 Arraysfilltable nullentryForNullKey  nullmodCountsize  0
public static double log2(double x) {return Math.log(x) / LOG_2;},public static double log2double x return Mathlogx  LOG2
public boolean isHorizontalBorder(){return horizontalBorder.isSet(field_1_options);},public boolean isHorizontalBorderreturn horizontalBorderisSetfield1options
"public void validate() throws IllegalArgumentException {if (distErr != null && distErrPct != null)throw new IllegalArgumentException(""Only distErr or distErrPct can be specified."");}",public void validate throws IllegalArgumentException if distErr  null  distErrPct  nullthrow new IllegalArgumentExceptionOnly distErr or distErrPct can be specified
public DeleteConfigurationSetResult deleteConfigurationSet(DeleteConfigurationSetRequest request) {request = beforeClientExecution(request);return executeDeleteConfigurationSet(request);},public DeleteConfigurationSetResult deleteConfigurationSetDeleteConfigurationSetRequest request request  beforeClientExecutionrequestreturn executeDeleteConfigurationSetrequest
"public boolean incrementToken() {if (used) {return false;}clearAttributes();termAttribute.append(value);offsetAttribute.setOffset(0, value.length());used = true;return true;}",public boolean incrementToken if used return falseclearAttributestermAttributeappendvalueoffsetAttributesetOffset0 valuelengthused  truereturn true
"public static DoubleBuffer wrap(double[] array, int start, int doubleCount) {Arrays.checkOffsetAndCount(array.length, start, doubleCount);DoubleBuffer buf = new ReadWriteDoubleArrayBuffer(array);buf.position = start;buf.limit = start + doubleCount;return buf;}",public static DoubleBuffer wrapdouble array int start int doubleCount ArrayscheckOffsetAndCountarraylength start doubleCountDoubleBuffer buf  new ReadWriteDoubleArrayBufferarraybufposition  startbuflimit  start  doubleCountreturn buf
public DescribeSpotInstanceRequestsResult describeSpotInstanceRequests(DescribeSpotInstanceRequestsRequest request) {request = beforeClientExecution(request);return executeDescribeSpotInstanceRequests(request);},public DescribeSpotInstanceRequestsResult describeSpotInstanceRequestsDescribeSpotInstanceRequestsRequest request request  beforeClientExecutionrequestreturn executeDescribeSpotInstanceRequestsrequest
public UpdateFieldLevelEncryptionConfigResult updateFieldLevelEncryptionConfig(UpdateFieldLevelEncryptionConfigRequest request) {request = beforeClientExecution(request);return executeUpdateFieldLevelEncryptionConfig(request);},public UpdateFieldLevelEncryptionConfigResult updateFieldLevelEncryptionConfigUpdateFieldLevelEncryptionConfigRequest request request  beforeClientExecutionrequestreturn executeUpdateFieldLevelEncryptionConfigrequest
public void setCachedResultTypeString() {specialCachedValue = FormulaSpecialCachedValue.createForString();},public void setCachedResultTypeString specialCachedValue  FormulaSpecialCachedValuecreateForString
public SpanNearBuilder(SpanQueryBuilder factory) {this.factory = factory;},public SpanNearBuilderSpanQueryBuilder factory thisfactory  factory
"public long ramBytesUsed() {long sizeInBytes = 0;for(Map.Entry<String,DirectField> entry: fields.entrySet()) {sizeInBytes += entry.getKey().length() * Character.BYTES;sizeInBytes += entry.getValue().ramBytesUsed();}return sizeInBytes;}",public long ramBytesUsed long sizeInBytes  0forMapEntryStringDirectField entry fieldsentrySet sizeInBytes  entrygetKeylength  CharacterBYTESsizeInBytes  entrygetValueramBytesUsedreturn sizeInBytes
public GlobalCluster deleteGlobalCluster(DeleteGlobalClusterRequest request) {request = beforeClientExecution(request);return executeDeleteGlobalCluster(request);},public GlobalCluster deleteGlobalClusterDeleteGlobalClusterRequest request request  beforeClientExecutionrequestreturn executeDeleteGlobalClusterrequest
"public String toString() {return type.getSimpleName() + ""["" + listener + ""]"";}",public String toString return typegetSimpleName    listener  
"public void parseLine(DocData docData, String line) {int k1 = 0;int k2 = line.indexOf(WriteLineDocTask.SEP, k1);if (k2<0) {throw new RuntimeException(""line: ["" + line + ""] is in an invalid format (missing: separator title::date)!"");}docData.setTitle(line.substring(k1,k2));k1 = k2+1;k2 = line.indexOf(WriteLineDocTask.SEP, k1);if (k2<0) {throw new RuntimeException(""line: ["" + line + ""] is in an invalid format (missing: separator date::body)!"");}docData.setDate(line.substring(k1,k2));k1 = k2+1;k2 = line.indexOf(WriteLineDocTask.SEP, k1);if (k2>=0) {throw new RuntimeException(""line: ["" + line + ""] is in an invalid format (too many separators)!"");}docData.setBody(line.substring(k1));}",public void parseLineDocData docData String line int k1  0int k2  lineindexOfWriteLineDocTaskSEP k1if k20 throw new RuntimeExceptionline   line   is in an invalid format missing separator titledatedocDatasetTitlelinesubstringk1k2k1  k21k2  lineindexOfWriteLineDocTaskSEP k1if k20 throw new RuntimeExceptionline   line   is in an invalid format missing separator datebodydocDatasetDatelinesubstringk1k2k1  k21k2  lineindexOfWriteLineDocTaskSEP k1if k20 throw new RuntimeExceptionline   line   is in an invalid format too many separatorsdocDatasetBodylinesubstringk1
public boolean isLarge() {return false;},public boolean isLarge return false
"public String toString() {StringBuilder sb = new StringBuilder();sb.append(""TrackingRefUpdate["");sb.append(remoteName);sb.append("" -> "");sb.append(localName);if (forceUpdate)sb.append("" (forced)"");sb.append("" "");sb.append(oldObjectId == null ? """" : oldObjectId.abbreviate(7).name());sb.append("".."");sb.append(newObjectId == null ? """" : newObjectId.abbreviate(7).name());sb.append(""]"");return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappendTrackingRefUpdatesbappendremoteNamesbappend  sbappendlocalNameif forceUpdatesbappend forcedsbappend sbappendoldObjectId  null    oldObjectIdabbreviate7namesbappendsbappendnewObjectId  null    newObjectIdabbreviate7namesbappendreturn sbtoString
public DescribeTerminationPolicyTypesResult describeTerminationPolicyTypes() {return describeTerminationPolicyTypes(new DescribeTerminationPolicyTypesRequest());},public DescribeTerminationPolicyTypesResult describeTerminationPolicyTypes return describeTerminationPolicyTypesnew DescribeTerminationPolicyTypesRequest
"public DeleteTagsRequest() {super(""Ots"", ""2016-06-20"", ""DeleteTags"", ""ots"");setMethod(MethodType.POST);}",public DeleteTagsRequest superOts 20160620 DeleteTags otssetMethodMethodTypePOST
public ChartFormatRecord(RecordInputStream in) {field1_x_position = in.readInt();field2_y_position = in.readInt();field3_width = in.readInt();field4_height = in.readInt();field5_grbit = in.readUShort();field6_unknown = in.readUShort();},public ChartFormatRecordRecordInputStream in field1xposition  inreadIntfield2yposition  inreadIntfield3width  inreadIntfield4height  inreadIntfield5grbit  inreadUShortfield6unknown  inreadUShort
public void dispatch(IndexChangedListener listener) {listener.onIndexChanged(this);},public void dispatchIndexChangedListener listener listeneronIndexChangedthis
"public NameRecord cloneFilter(int filterDbNameIndex, int newSheetIndex){NameRecord origNameRecord = getNameRecord(filterDbNameIndex);int newExtSheetIx = checkExternSheet(newSheetIndex);Ptg[] ptgs = origNameRecord.getNameDefinition();for (int i=0; i< ptgs.length; i++) {Ptg ptg = ptgs[i];if (ptg instanceof Area3DPtg) {Area3DPtg a3p = (Area3DPtg) ((OperandPtg) ptg).copy();a3p.setExternSheetIndex(newExtSheetIx);ptgs[i] = a3p;} else if (ptg instanceof Ref3DPtg) {Ref3DPtg r3p = (Ref3DPtg) ((OperandPtg) ptg).copy();r3p.setExternSheetIndex(newExtSheetIx);ptgs[i] = r3p;}}NameRecord newNameRecord = createBuiltInName(NameRecord.BUILTIN_FILTER_DB, newSheetIndex+1);newNameRecord.setNameDefinition(ptgs);newNameRecord.setHidden(true);return newNameRecord;}",public NameRecord cloneFilterint filterDbNameIndex int newSheetIndexNameRecord origNameRecord  getNameRecordfilterDbNameIndexint newExtSheetIx  checkExternSheetnewSheetIndexPtg ptgs  origNameRecordgetNameDefinitionfor int i0 i ptgslength i Ptg ptg  ptgsiif ptg instanceof Area3DPtg Area3DPtg a3p  Area3DPtg OperandPtg ptgcopya3psetExternSheetIndexnewExtSheetIxptgsi  a3p else if ptg instanceof Ref3DPtg Ref3DPtg r3p  Ref3DPtg OperandPtg ptgcopyr3psetExternSheetIndexnewExtSheetIxptgsi  r3pNameRecord newNameRecord  createBuiltInNameNameRecordBUILTINFILTERDB newSheetIndex1newNameRecordsetNameDefinitionptgsnewNameRecordsetHiddentruereturn newNameRecord
public int read(byte[] b) throws IOException {int n = in.read(b);if (n == -1) {close();}return n;},public int readbyte b throws IOException int n  inreadbif n  1 closereturn n
"public void serializeArrayConstantData(LittleEndianOutput out) {int len = _byteEncoding.length-_encodedTokenLen;out.write(_byteEncoding, _encodedTokenLen, len);}",public void serializeArrayConstantDataLittleEndianOutput out int len  byteEncodinglengthencodedTokenLenoutwritebyteEncoding encodedTokenLen len
public GetGcmChannelResult getGcmChannel(GetGcmChannelRequest request) {request = beforeClientExecution(request);return executeGetGcmChannel(request);},public GetGcmChannelResult getGcmChannelGetGcmChannelRequest request request  beforeClientExecutionrequestreturn executeGetGcmChannelrequest
public long ramBytesUsed() {return indexReader.ramBytesUsed();},public long ramBytesUsed return indexReaderramBytesUsed
public short getCalcMode(){return field_1_calcmode;},public short getCalcModereturn field1calcmode
public DeleteStreamResult deleteStream(DeleteStreamRequest request) {request = beforeClientExecution(request);return executeDeleteStream(request);},public DeleteStreamResult deleteStreamDeleteStreamRequest request request  beforeClientExecutionrequestreturn executeDeleteStreamrequest
"public DoubleBuffer put(double[] src, int srcOffset, int doubleCount) {Arrays.checkOffsetAndCount(src.length, srcOffset, doubleCount);if (doubleCount > remaining()) {throw new BufferOverflowException();}for (int i = srcOffset; i < srcOffset + doubleCount; ++i) {put(src[i]);}return this;}",public DoubleBuffer putdouble src int srcOffset int doubleCount ArrayscheckOffsetAndCountsrclength srcOffset doubleCountif doubleCount  remaining throw new BufferOverflowExceptionfor int i  srcOffset i  srcOffset  doubleCount i putsrcireturn this
public RevokeSecurityGroupEgressResult revokeSecurityGroupEgress(RevokeSecurityGroupEgressRequest request) {request = beforeClientExecution(request);return executeRevokeSecurityGroupEgress(request);},public RevokeSecurityGroupEgressResult revokeSecurityGroupEgressRevokeSecurityGroupEgressRequest request request  beforeClientExecutionrequestreturn executeRevokeSecurityGroupEgressrequest
"public CreateRepoWebhookRequest() {super(""cr"", ""2016-06-07"", ""CreateRepoWebhook"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/webhooks"");setMethod(MethodType.PUT);}",public CreateRepoWebhookRequest supercr 20160607 CreateRepoWebhook crsetUriPatternreposRepoNamespaceRepoNamewebhookssetMethodMethodTypePUT
public int getCnt(Character way) {Cell c = at(way);return (c == null) ? -1 : c.cnt;},public int getCntCharacter way Cell c  atwayreturn c  null  1  ccnt
public SortField[] getSort() {return fields;},public SortField getSort return fields
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[BOF RECORD]\n"");buffer.append(""    .version  = "").append(HexDump.shortToHex(getVersion())).append(""\n"");buffer.append(""    .type     = "").append(HexDump.shortToHex(getType()));buffer.append("" ("").append(getTypeName()).append("")"").append(""\n"");buffer.append(""    .build    = "").append(HexDump.shortToHex(getBuild())).append(""\n"");buffer.append(""    .buildyear= "").append(getBuildYear()).append(""\n"");buffer.append(""    .history  = "").append(HexDump.intToHex(getHistoryBitMask())).append(""\n"");buffer.append(""    .reqver   = "").append(HexDump.intToHex(getRequiredVersion())).append(""\n"");buffer.append(""[/BOF RECORD]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendBOF RECORDnbufferappend    version   appendHexDumpshortToHexgetVersionappendnbufferappend    type      appendHexDumpshortToHexgetTypebufferappend appendgetTypeNameappendappendnbufferappend    build     appendHexDumpshortToHexgetBuildappendnbufferappend    buildyear appendgetBuildYearappendnbufferappend    history   appendHexDumpintToHexgetHistoryBitMaskappendnbufferappend    reqver    appendHexDumpintToHexgetRequiredVersionappendnbufferappendBOF RECORDnreturn buffertoString
public DBInstance createDBInstance(CreateDBInstanceRequest request) {request = beforeClientExecution(request);return executeCreateDBInstance(request);},public DBInstance createDBInstanceCreateDBInstanceRequest request request  beforeClientExecutionrequestreturn executeCreateDBInstancerequest
public CreateStackInstancesResult createStackInstances(CreateStackInstancesRequest request) {request = beforeClientExecution(request);return executeCreateStackInstances(request);},public CreateStackInstancesResult createStackInstancesCreateStackInstancesRequest request request  beforeClientExecutionrequestreturn executeCreateStackInstancesrequest
"public int serialize( int offset, byte[] data, EscherSerializationListener listener ){listener.beforeRecordSerialize( offset, getRecordId(), this );LittleEndian.putShort(data, offset, getOptions());LittleEndian.putShort(data, offset+2, getRecordId());int remainingBytes = 0;for (EscherRecord r : this) {remainingBytes += r.getRecordSize();}remainingBytes += _remainingLength;LittleEndian.putInt(data, offset+4, remainingBytes);int pos = offset+8;for (EscherRecord r : this) {pos += r.serialize(pos, data, listener );}listener.afterRecordSerialize( pos, getRecordId(), pos - offset, this );return pos - offset;}",public int serialize int offset byte data EscherSerializationListener listener listenerbeforeRecordSerialize offset getRecordId this LittleEndianputShortdata offset getOptionsLittleEndianputShortdata offset2 getRecordIdint remainingBytes  0for EscherRecord r  this remainingBytes  rgetRecordSizeremainingBytes  remainingLengthLittleEndianputIntdata offset4 remainingBytesint pos  offset8for EscherRecord r  this pos  rserializepos data listener listenerafterRecordSerialize pos getRecordId pos  offset this return pos  offset
"public String toString() {return ""SnapshotDeletionPolicy.SnapshotCommitPoint("" + cp + "")"";}",public String toString return SnapshotDeletionPolicySnapshotCommitPoint  cp  
public MissingRecordAwareHSSFListener(HSSFListener listener) {resetCounts();childListener = listener;},public MissingRecordAwareHSSFListenerHSSFListener listener resetCountschildListener  listener
public int clear(final int holder){return holder & ~_mask;},public int clearfinal int holderreturn holder  mask
public void serialize(LittleEndianOutput out) {out.writeInt(field_13_border_styles1);out.writeInt(field_14_border_styles2);},public void serializeLittleEndianOutput out outwriteIntfield13borderstyles1outwriteIntfield14borderstyles2
public void setParams(String params) {super.setParams(params);traversalSize = (int)Float.parseFloat(params);},public void setParamsString params supersetParamsparamstraversalSize  intFloatparseFloatparams
"public String toStringTree(List<String> ruleNames) {return Trees.toStringTree(this, ruleNames);}",public String toStringTreeListString ruleNames return TreestoStringTreethis ruleNames
"public HSSFTextbox createTextbox(HSSFClientAnchor anchor) {HSSFTextbox shape = new HSSFTextbox(null, anchor);addShape(shape);onCreate(shape);return shape;}",public HSSFTextbox createTextboxHSSFClientAnchor anchor HSSFTextbox shape  new HSSFTextboxnull anchoraddShapeshapeonCreateshapereturn shape
public UpdateDevicePolicyConfigurationResult updateDevicePolicyConfiguration(UpdateDevicePolicyConfigurationRequest request) {request = beforeClientExecution(request);return executeUpdateDevicePolicyConfiguration(request);},public UpdateDevicePolicyConfigurationResult updateDevicePolicyConfigurationUpdateDevicePolicyConfigurationRequest request request  beforeClientExecutionrequestreturn executeUpdateDevicePolicyConfigurationrequest
public float norm(int passageStart) {return 1 + 1 / (float) Math.log(pivot + passageStart);},public float normint passageStart return 1  1  float Mathlogpivot  passageStart
public Record nextRecord() {Record r;r = getNextUnreadRecord();if (r != null) {return r;}while (true) {if (!_recStream.hasNextRecord()) {return null;}if (_lastRecordWasEOFLevelZero) {if (_recStream.getNextSid() != BOFRecord.sid) {return null;}}_recStream.nextRecord();r = readNextRecord();if (r == null) {continue;}return r;}},public Record nextRecord Record rr  getNextUnreadRecordif r  null return rwhile true if recStreamhasNextRecord return nullif lastRecordWasEOFLevelZero if recStreamgetNextSid  BOFRecordsid return nullrecStreamnextRecordr  readNextRecordif r  null continuereturn r
public final FileDescriptor getFD() throws IOException {return fd;},public final FileDescriptor getFD throws IOException return fd
"public MoveAlbumPhotosRequest() {super(""CloudPhoto"", ""2017-07-11"", ""MoveAlbumPhotos"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public MoveAlbumPhotosRequest superCloudPhoto 20170711 MoveAlbumPhotos cloudphotosetProtocolProtocolTypeHTTPS
public UpdateStackSetResult updateStackSet(UpdateStackSetRequest request) {request = beforeClientExecution(request);return executeUpdateStackSet(request);},public UpdateStackSetResult updateStackSetUpdateStackSetRequest request request  beforeClientExecutionrequestreturn executeUpdateStackSetrequest
"public static double acosh(double d) {return Math.log(Math.sqrt(Math.pow(d, 2) - 1) + d);}",public static double acoshdouble d return MathlogMathsqrtMathpowd 2  1  d
"public int stem(char s[], int len) {for (int i = 0; i < len; i++)switch(s[i]) {case 'ä':case 'à':case 'á':case 'â': s[i] = 'a'; break;case 'ö':case 'ò':case 'ó':case 'ô': s[i] = 'o'; break;case 'ï':case 'ì':case 'í':case 'î': s[i] = 'i'; break;case 'ü':case 'ù':case 'ú':case 'û': s[i] = 'u'; break;}len = step1(s, len);return step2(s, len);}",public int stemchar s int len for int i  0 i  len iswitchsi case äcase àcase ácase â si  a breakcase öcase òcase ócase ô si  o breakcase ïcase ìcase ícase î si  i breakcase ücase ùcase úcase û si  u breaklen  step1s lenreturn step2s len
public CreateProposalResult createProposal(CreateProposalRequest request) {request = beforeClientExecution(request);return executeCreateProposal(request);},public CreateProposalResult createProposalCreateProposalRequest request request  beforeClientExecutionrequestreturn executeCreateProposalrequest
public boolean didFetchIncludeTags() {return false;},public boolean didFetchIncludeTags return false
public RevCommit peek() {return head != null ? head.commit : null;},public RevCommit peek return head  null  headcommit  null
public HSSFBorderFormatting getBorderFormatting() {return getBorderFormatting(false);},public HSSFBorderFormatting getBorderFormatting return getBorderFormattingfalse
public DeletedArea3DPtg(int externSheetIndex) {field_1_index_extern_sheet = externSheetIndex;unused1 = 0;unused2 = 0;},public DeletedArea3DPtgint externSheetIndex field1indexexternsheet  externSheetIndexunused1  0unused2  0
public SheetRecordCollector() {_totalSize = 0;_list = new ArrayList<>(128);},public SheetRecordCollector totalSize  0list  new ArrayList128
public RemovePermissionResult removePermission(RemovePermissionRequest request) {request = beforeClientExecution(request);return executeRemovePermission(request);},public RemovePermissionResult removePermissionRemovePermissionRequest request request  beforeClientExecutionrequestreturn executeRemovePermissionrequest
public Cluster modifyClusterIamRoles(ModifyClusterIamRolesRequest request) {request = beforeClientExecution(request);return executeModifyClusterIamRoles(request);},public Cluster modifyClusterIamRolesModifyClusterIamRolesRequest request request  beforeClientExecutionrequestreturn executeModifyClusterIamRolesrequest
public AreaFormatRecord(RecordInputStream in) {field_1_foregroundColor        = in.readInt();field_2_backgroundColor        = in.readInt();field_3_pattern                = in.readShort();field_4_formatFlags            = in.readShort();field_5_forecolorIndex         = in.readShort();field_6_backcolorIndex         = in.readShort();},public AreaFormatRecordRecordInputStream in field1foregroundColor         inreadIntfield2backgroundColor         inreadIntfield3pattern                 inreadShortfield4formatFlags             inreadShortfield5forecolorIndex          inreadShortfield6backcolorIndex          inreadShort
public int available() {return _lei.available();},public int available return leiavailable
"public final String toString() {return toString("""");}",public final String toString return toString
public short setShort(final short holder){return ( short ) set(holder);},public short setShortfinal short holderreturn  short  setholder
public synchronized void setFlushPending(ThreadState perThread) {assert !perThread.flushPending;if (perThread.dwpt.getNumDocsInRAM() > 0) {perThread.flushPending = true; final long bytes = perThread.bytesUsed;flushBytes += bytes;activeBytes -= bytes;numPending++; assert assertMemory();} },public synchronized void setFlushPendingThreadState perThread assert perThreadflushPendingif perThreaddwptgetNumDocsInRAM  0 perThreadflushPending  true final long bytes  perThreadbytesUsedflushBytes  bytesactiveBytes  bytesnumPending assert assertMemory 
"public StringBuilder insert(int offset, char[] ch) {insert0(offset, ch);return this;}",public StringBuilder insertint offset char ch insert0offset chreturn this
"public StoredField(String name, double value) {super(name, TYPE);fieldsData = value;}",public StoredFieldString name double value supername TYPEfieldsData  value
"public String getName() {return String.format(Locale.ROOT, ""Jelinek-Mercer(%f)"", getLambda());}",public String getName return StringformatLocaleROOT JelinekMercerf getLambda
public ReleaseAddressRequest(String publicIp) {setPublicIp(publicIp);},public ReleaseAddressRequestString publicIp setPublicIppublicIp
public DeleteKeyPairResult deleteKeyPair(DeleteKeyPairRequest request) {request = beforeClientExecution(request);return executeDeleteKeyPair(request);},public DeleteKeyPairResult deleteKeyPairDeleteKeyPairRequest request request  beforeClientExecutionrequestreturn executeDeleteKeyPairrequest
public byte[] getColor(int byteIndex) {int i = byteIndex - FIRST_COLOR_INDEX;if (i < 0 || i >= _colors.size()) {return null;}return _colors.get(i).getTriplet();},public byte getColorint byteIndex int i  byteIndex  FIRSTCOLORINDEXif i  0  i  colorssize return nullreturn colorsgetigetTriplet
public int indexOfValue(E value) {if (mGarbage) {gc();}for (int i = 0; i < mSize; i++)if (mValues[i] == value)return i;return -1;},public int indexOfValueE value if mGarbage gcfor int i  0 i  mSize iif mValuesi  valuereturn ireturn 1
public URIish setScheme(String n) {final URIish r = new URIish(this);r.scheme = n;return r;},public URIish setSchemeString n final URIish r  new URIishthisrscheme  nreturn r
"public void print(char[] charArray) {print(new String(charArray, 0, charArray.length));}",public void printchar charArray printnew StringcharArray 0 charArraylength
"public CommonToken(int type, String text) {this.type = type;this.channel = DEFAULT_CHANNEL;this.text = text;this.source = EMPTY_SOURCE;}",public CommonTokenint type String text thistype  typethischannel  DEFAULTCHANNELthistext  textthissource  EMPTYSOURCE
"public final String toString() { return field + "":"" + text(); }",public final String toString  return field    text 
public LongBuffer compact() {if (byteBuffer.isReadOnly()) {throw new ReadOnlyBufferException();}byteBuffer.limit(limit * SizeOf.LONG);byteBuffer.position(position * SizeOf.LONG);byteBuffer.compact();byteBuffer.clear();position = limit - position;limit = capacity;mark = UNSET_MARK;return this;},public LongBuffer compact if byteBufferisReadOnly throw new ReadOnlyBufferExceptionbyteBufferlimitlimit  SizeOfLONGbyteBufferpositionposition  SizeOfLONGbyteBuffercompactbyteBufferclearposition  limit  positionlimit  capacitymark  UNSETMARKreturn this
"public ATNSimulator(ATN atn,PredictionContextCache sharedContextCache){this.atn = atn;this.sharedContextCache = sharedContextCache;}",public ATNSimulatorATN atnPredictionContextCache sharedContextCachethisatn  atnthissharedContextCache  sharedContextCache
public CachedOrdinalsReader(OrdinalsReader source) {this.source = source;},public CachedOrdinalsReaderOrdinalsReader source thissource  source
public static CompareResult valueOf(boolean matches) {if(matches) {return EQUAL ;}return LESS_THAN;},public static CompareResult valueOfboolean matches ifmatches return EQUAL return LESSTHAN
public void serialize(LittleEndianOutput out) {out.writeShort(getVersion());out.writeShort(getType());out.writeShort(getBuild());out.writeShort(getBuildYear());out.writeInt(getHistoryBitMask());out.writeInt(getRequiredVersion());},public void serializeLittleEndianOutput out outwriteShortgetVersionoutwriteShortgetTypeoutwriteShortgetBuildoutwriteShortgetBuildYearoutwriteIntgetHistoryBitMaskoutwriteIntgetRequiredVersion
public File getAbsoluteFile() {return new File(getAbsolutePath());},public File getAbsoluteFile return new FilegetAbsolutePath
public DescribeTemplatePermissionsResult describeTemplatePermissions(DescribeTemplatePermissionsRequest request) {request = beforeClientExecution(request);return executeDescribeTemplatePermissions(request);},public DescribeTemplatePermissionsResult describeTemplatePermissionsDescribeTemplatePermissionsRequest request request  beforeClientExecutionrequestreturn executeDescribeTemplatePermissionsrequest
public WorkflowExecutionCount countOpenWorkflowExecutions(CountOpenWorkflowExecutionsRequest request) {request = beforeClientExecution(request);return executeCountOpenWorkflowExecutions(request);},public WorkflowExecutionCount countOpenWorkflowExecutionsCountOpenWorkflowExecutionsRequest request request  beforeClientExecutionrequestreturn executeCountOpenWorkflowExecutionsrequest
public DescribeAccountLimitsResult describeAccountLimits() {return describeAccountLimits(new DescribeAccountLimitsRequest());},public DescribeAccountLimitsResult describeAccountLimits return describeAccountLimitsnew DescribeAccountLimitsRequest
"public Object get(CharSequence key) {if (fst == null) {return null;}Arc<Long> arc = new Arc<>();Long result = null;try {result = lookupPrefix(new BytesRef(key), arc);} catch (IOException bogus) { throw new RuntimeException(bogus); }if (result == null || !arc.isFinal()) {return null;} else {return Integer.valueOf(decodeWeight(result + arc.nextFinalOutput()));}}",public Object getCharSequence key if fst  null return nullArcLong arc  new ArcLong result  nulltry result  lookupPrefixnew BytesRefkey arc catch IOException bogus  throw new RuntimeExceptionbogus if result  null  arcisFinal return null else return IntegervalueOfdecodeWeightresult  arcnextFinalOutput
public CreateGameServerGroupResult createGameServerGroup(CreateGameServerGroupRequest request) {request = beforeClientExecution(request);return executeCreateGameServerGroup(request);},public CreateGameServerGroupResult createGameServerGroupCreateGameServerGroupRequest request request  beforeClientExecutionrequestreturn executeCreateGameServerGrouprequest
public static boolean isInternalDateFormat(int format) {switch(format) {case 0x0e:case 0x0f:case 0x10:case 0x11:case 0x12:case 0x13:case 0x14:case 0x15:case 0x16:case 0x2d:case 0x2e:case 0x2f:return true;}return false;},public static boolean isInternalDateFormatint format switchformat case 0x0ecase 0x0fcase 0x10case 0x11case 0x12case 0x13case 0x14case 0x15case 0x16case 0x2dcase 0x2ecase 0x2freturn truereturn false
public PackFile getPackFile() {return newPack;},public PackFile getPackFile return newPack
public CreateInternetGatewayResult createInternetGateway() {return createInternetGateway(new CreateInternetGatewayRequest());},public CreateInternetGatewayResult createInternetGateway return createInternetGatewaynew CreateInternetGatewayRequest
"public void drawPolyline(int[] xPoints, int[] yPoints,int nPoints){if (logger.check( POILogger.WARN ))logger.log(POILogger.WARN,""drawPolyline not supported"");}",public void drawPolylineint xPoints int yPointsint nPointsif loggercheck POILoggerWARN loggerlogPOILoggerWARNdrawPolyline not supported
"public void close() {unpackedObjectCache.clear();final PackList packs = packList.get();if (packs != NO_PACKS && packList.compareAndSet(packs, NO_PACKS)) {for (PackFile p : packs.packs)p.close();}AlternateHandle[] alt = alternates.get();if (alt != null && alternates.compareAndSet(alt, null)) {for(AlternateHandle od : alt)od.close();}}",public void close unpackedObjectCacheclearfinal PackList packs  packListgetif packs  NOPACKS  packListcompareAndSetpacks NOPACKS for PackFile p  packspackspcloseAlternateHandle alt  alternatesgetif alt  null  alternatescompareAndSetalt null forAlternateHandle od  altodclose
"public List<Token> getHiddenTokensToRight(int tokenIndex, int channel) {lazyInit();if ( tokenIndex<0 || tokenIndex>=tokens.size() ) {throw new IndexOutOfBoundsException(tokenIndex+"" not in 0..""+(tokens.size()-1));}int nextOnChannel =nextTokenOnChannel(tokenIndex + 1, Lexer.DEFAULT_TOKEN_CHANNEL);int to;int from = tokenIndex+1;if ( nextOnChannel == -1 ) to = size()-1;else to = nextOnChannel;return filterForChannel(from, to, channel);}",public ListToken getHiddenTokensToRightint tokenIndex int channel lazyInitif  tokenIndex0  tokenIndextokenssize  throw new IndexOutOfBoundsExceptiontokenIndex not in 0tokenssize1int nextOnChannel nextTokenOnChanneltokenIndex  1 LexerDEFAULTTOKENCHANNELint toint from  tokenIndex1if  nextOnChannel  1  to  size1else to  nextOnChannelreturn filterForChannelfrom to channel
public int size() {return Hashtable.this.size();},public int size return Hashtablethissize
public CustomAvailabilityZone deleteCustomAvailabilityZone(DeleteCustomAvailabilityZoneRequest request) {request = beforeClientExecution(request);return executeDeleteCustomAvailabilityZone(request);},public CustomAvailabilityZone deleteCustomAvailabilityZoneDeleteCustomAvailabilityZoneRequest request request  beforeClientExecutionrequestreturn executeDeleteCustomAvailabilityZonerequest
public BatchUnsuspendUserResult batchUnsuspendUser(BatchUnsuspendUserRequest request) {request = beforeClientExecution(request);return executeBatchUnsuspendUser(request);},public BatchUnsuspendUserResult batchUnsuspendUserBatchUnsuspendUserRequest request request  beforeClientExecutionrequestreturn executeBatchUnsuspendUserrequest
public DeleteAccountSettingResult deleteAccountSetting(DeleteAccountSettingRequest request) {request = beforeClientExecution(request);return executeDeleteAccountSetting(request);},public DeleteAccountSettingResult deleteAccountSettingDeleteAccountSettingRequest request request  beforeClientExecutionrequestreturn executeDeleteAccountSettingrequest
"public static SemanticContext or(SemanticContext a, SemanticContext b) {if ( a == null ) return b;if ( b == null ) return a;if ( a == NONE || b == NONE ) return NONE;OR result = new OR(a, b);if (result.opnds.length == 1) {return result.opnds[0];}return result;}",public static SemanticContext orSemanticContext a SemanticContext b if  a  null  return bif  b  null  return aif  a  NONE  b  NONE  return NONEOR result  new ORa bif resultopndslength  1 return resultopnds0return result
public ListHumanLoopsResult listHumanLoops(ListHumanLoopsRequest request) {request = beforeClientExecution(request);return executeListHumanLoops(request);},public ListHumanLoopsResult listHumanLoopsListHumanLoopsRequest request request  beforeClientExecutionrequestreturn executeListHumanLoopsrequest
"public ValueEval evaluate(ValueEval[] args, int srcCellRow, int srcCellCol) {int maxN = args.length;if(maxN < 1) {return ErrorEval.VALUE_INVALID;}ValueEval firstArg = args[0];try {if(firstArg instanceof NumericValueEval) {return evaluateSingleProduct(args);}if(firstArg instanceof RefEval) {return evaluateSingleProduct(args);}if (firstArg instanceof TwoDEval) {TwoDEval ae = (TwoDEval) firstArg;if(ae.isRow() && ae.isColumn()) {return evaluateSingleProduct(args);}return evaluateAreaSumProduct(args);}} catch (EvaluationException e) {return e.getErrorEval();}throw new RuntimeException(""Invalid arg type for SUMPRODUCT: (""+ firstArg.getClass().getName() + "")"");}",public ValueEval evaluateValueEval args int srcCellRow int srcCellCol int maxN  argslengthifmaxN  1 return ErrorEvalVALUEINVALIDValueEval firstArg  args0try iffirstArg instanceof NumericValueEval return evaluateSingleProductargsiffirstArg instanceof RefEval return evaluateSingleProductargsif firstArg instanceof TwoDEval TwoDEval ae  TwoDEval firstArgifaeisRow  aeisColumn return evaluateSingleProductargsreturn evaluateAreaSumProductargs catch EvaluationException e return egetErrorEvalthrow new RuntimeExceptionInvalid arg type for SUMPRODUCT  firstArggetClassgetName  
public DescribeParameterGroupsResult describeParameterGroups(DescribeParameterGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeParameterGroups(request);},public DescribeParameterGroupsResult describeParameterGroupsDescribeParameterGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeParameterGroupsrequest
"public static char[] grow(char[] array, int minSize) {assert minSize >= 0: ""size must be positive (got "" + minSize + ""): likely integer overflow?"";if (array.length < minSize) {return growExact(array, oversize(minSize, Character.BYTES));} else return array;}",public static char growchar array int minSize assert minSize  0 size must be positive got   minSize   likely integer overflowif arraylength  minSize return growExactarray oversizeminSize CharacterBYTES else return array
public double readDouble() throws IOException {return primitiveTypes.readDouble();},public double readDouble throws IOException return primitiveTypesreadDouble
public void setTokenSource(TokenSource tokenSource) {this.tokenSource = tokenSource;tokens.clear();p = -1;fetchedEOF = false;},public void setTokenSourceTokenSource tokenSource thistokenSource  tokenSourcetokensclearp  1fetchedEOF  false
public void reset(Parser recognizer) {endErrorCondition(recognizer);},public void resetParser recognizer endErrorConditionrecognizer
public DescribeVpcPeeringAuthorizationsResult describeVpcPeeringAuthorizations(DescribeVpcPeeringAuthorizationsRequest request) {request = beforeClientExecution(request);return executeDescribeVpcPeeringAuthorizations(request);},public DescribeVpcPeeringAuthorizationsResult describeVpcPeeringAuthorizationsDescribeVpcPeeringAuthorizationsRequest request request  beforeClientExecutionrequestreturn executeDescribeVpcPeeringAuthorizationsrequest
public CreateDocumentationVersionResult createDocumentationVersion(CreateDocumentationVersionRequest request) {request = beforeClientExecution(request);return executeCreateDocumentationVersion(request);},public CreateDocumentationVersionResult createDocumentationVersionCreateDocumentationVersionRequest request request  beforeClientExecutionrequestreturn executeCreateDocumentationVersionrequest
public CreateClusterResult createCluster(CreateClusterRequest request) {request = beforeClientExecution(request);return executeCreateCluster(request);},public CreateClusterResult createClusterCreateClusterRequest request request  beforeClientExecutionrequestreturn executeCreateClusterrequest
public DoubleBuffer compact() {if (byteBuffer.isReadOnly()) {throw new ReadOnlyBufferException();}byteBuffer.limit(limit * SizeOf.DOUBLE);byteBuffer.position(position * SizeOf.DOUBLE);byteBuffer.compact();byteBuffer.clear();position = limit - position;limit = capacity;mark = UNSET_MARK;return this;},public DoubleBuffer compact if byteBufferisReadOnly throw new ReadOnlyBufferExceptionbyteBufferlimitlimit  SizeOfDOUBLEbyteBufferpositionposition  SizeOfDOUBLEbyteBuffercompactbyteBufferclearposition  limit  positionlimit  capacitymark  UNSETMARKreturn this
"public int[] grow() {final int[] ord = super.grow();boost = ArrayUtil.grow(boost, ord.length);if (termState.length < ord.length) {TermStates[] tmpTermState = new TermStates[ArrayUtil.oversize(ord.length, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];System.arraycopy(termState, 0, tmpTermState, 0, termState.length);termState = tmpTermState;}assert termState.length >= ord.length && boost.length >= ord.length;return ord;}",public int grow final int ord  supergrowboost  ArrayUtilgrowboost ordlengthif termStatelength  ordlength TermStates tmpTermState  new TermStatesArrayUtiloversizeordlength RamUsageEstimatorNUMBYTESOBJECTREFSystemarraycopytermState 0 tmpTermState 0 termStatelengthtermState  tmpTermStateassert termStatelength  ordlength  boostlength  ordlengthreturn ord
public DefaultColWidthRecord(RecordInputStream in){field_1_col_width = in.readUShort();},public DefaultColWidthRecordRecordInputStream infield1colwidth  inreadUShort
public GetAttributesResult getAttributes(GetAttributesRequest request) {request = beforeClientExecution(request);return executeGetAttributes(request);},public GetAttributesResult getAttributesGetAttributesRequest request request  beforeClientExecutionrequestreturn executeGetAttributesrequest
"public GetSubUserListRequest() {super(""cr"", ""2016-06-07"", ""GetSubUserList"", ""cr"");setUriPattern(""/users/subAccount"");setMethod(MethodType.GET);}",public GetSubUserListRequest supercr 20160607 GetSubUserList crsetUriPatternuserssubAccountsetMethodMethodTypeGET
public void setQueryConfigHandler(QueryConfigHandler queryConfigHandler) {this.queryConfigHandler = queryConfigHandler;},public void setQueryConfigHandlerQueryConfigHandler queryConfigHandler thisqueryConfigHandler  queryConfigHandler
public WindowCacheConfig() {packedGitOpenFiles = 128;packedGitLimit = 10 * MB;useStrongRefs = false;packedGitWindowSize = 8 * KB;packedGitMMAP = false;deltaBaseCacheLimit = 10 * MB;streamFileThreshold = PackConfig.DEFAULT_BIG_FILE_THRESHOLD;},public WindowCacheConfig packedGitOpenFiles  128packedGitLimit  10  MBuseStrongRefs  falsepackedGitWindowSize  8  KBpackedGitMMAP  falsedeltaBaseCacheLimit  10  MBstreamFileThreshold  PackConfigDEFAULTBIGFILETHRESHOLD
"public MutableFPNumber copy() {return new MutableFPNumber(_significand, _binaryExponent);}",public MutableFPNumber copy return new MutableFPNumbersignificand binaryExponent
public ShortBuffer asReadOnlyBuffer() {ShortToByteBufferAdapter buf = new ShortToByteBufferAdapter(byteBuffer.asReadOnlyBuffer());buf.limit = limit;buf.position = position;buf.mark = mark;buf.byteBuffer.order = byteBuffer.order;return buf;},public ShortBuffer asReadOnlyBuffer ShortToByteBufferAdapter buf  new ShortToByteBufferAdapterbyteBufferasReadOnlyBufferbuflimit  limitbufposition  positionbufmark  markbufbyteBufferorder  byteBufferorderreturn buf
public DescribeReservedCacheNodesResult describeReservedCacheNodes(DescribeReservedCacheNodesRequest request) {request = beforeClientExecution(request);return executeDescribeReservedCacheNodes(request);},public DescribeReservedCacheNodesResult describeReservedCacheNodesDescribeReservedCacheNodesRequest request request  beforeClientExecutionrequestreturn executeDescribeReservedCacheNodesrequest
public ListOperationsResult listOperations(ListOperationsRequest request) {request = beforeClientExecution(request);return executeListOperations(request);},public ListOperationsResult listOperationsListOperationsRequest request request  beforeClientExecutionrequestreturn executeListOperationsrequest
"public SaveTaskForSubmittingDomainRealNameVerificationByIdentityCredentialRequest() {super(""Domain-intl"", ""2017-12-18"", ""SaveTaskForSubmittingDomainRealNameVerificationByIdentityCredential"", ""domain"");setMethod(MethodType.POST);}",public SaveTaskForSubmittingDomainRealNameVerificationByIdentityCredentialRequest superDomainintl 20171218 SaveTaskForSubmittingDomainRealNameVerificationByIdentityCredential domainsetMethodMethodTypePOST
public BatchReadResult batchRead(BatchReadRequest request) {request = beforeClientExecution(request);return executeBatchRead(request);},public BatchReadResult batchReadBatchReadRequest request request  beforeClientExecutionrequestreturn executeBatchReadrequest
"public InstanceProfileCredentials fetch(int retryTimes) throws ClientException {for (int i = 0; i <= retryTimes; i++) {try {return fetch();} catch (ClientException e) {if (i == retryTimes) {throw e;}}}throw new ClientException(""Failed to connect ECS Metadata Service: Max retry times exceeded."");}",public InstanceProfileCredentials fetchint retryTimes throws ClientException for int i  0 i  retryTimes i try return fetch catch ClientException e if i  retryTimes throw ethrow new ClientExceptionFailed to connect ECS Metadata Service Max retry times exceeded
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex) {Date now = new Date(System.currentTimeMillis());return new NumberEval(DateUtil.getExcelDate(now));}",public ValueEval evaluateint srcRowIndex int srcColumnIndex Date now  new DateSystemcurrentTimeMillisreturn new NumberEvalDateUtilgetExcelDatenow
public static int idealIntArraySize(int need) {return idealByteArraySize(need * 4) / 4;},public static int idealIntArraySizeint need return idealByteArraySizeneed  4  4
"public long record(IndexSearcher searcher) throws IOException {ensureOpen();final long version = ((DirectoryReader) searcher.getIndexReader()).getVersion();SearcherTracker tracker = searchers.get(version);if (tracker == null) {tracker = new SearcherTracker(searcher);if (searchers.putIfAbsent(version, tracker) != null) {tracker.close();}} else if (tracker.searcher != searcher) {throw new IllegalArgumentException(""the provided searcher has the same underlying Reader version yet the searcher instance differs from before (new="" + searcher + "" vs old="" + tracker.searcher);}return version;}",public long recordIndexSearcher searcher throws IOException ensureOpenfinal long version  DirectoryReader searchergetIndexReadergetVersionSearcherTracker tracker  searchersgetversionif tracker  null tracker  new SearcherTrackersearcherif searchersputIfAbsentversion tracker  null trackerclose else if trackersearcher  searcher throw new IllegalArgumentExceptionthe provided searcher has the same underlying Reader version yet the searcher instance differs from before new  searcher   vs old  trackersearcherreturn version
public ClassifyDocumentResult classifyDocument(ClassifyDocumentRequest request) {request = beforeClientExecution(request);return executeClassifyDocument(request);},public ClassifyDocumentResult classifyDocumentClassifyDocumentRequest request request  beforeClientExecutionrequestreturn executeClassifyDocumentrequest
public GetIdentityPoolRolesResult getIdentityPoolRoles(GetIdentityPoolRolesRequest request) {request = beforeClientExecution(request);return executeGetIdentityPoolRoles(request);},public GetIdentityPoolRolesResult getIdentityPoolRolesGetIdentityPoolRolesRequest request request  beforeClientExecutionrequestreturn executeGetIdentityPoolRolesrequest
"public CharSequence subSequence(int start, int end) {int newLength = end - start;return new UnescapedCharSequence(this.chars, this.wasEscaped, start,newLength);}",public CharSequence subSequenceint start int end int newLength  end  startreturn new UnescapedCharSequencethischars thiswasEscaped startnewLength
public CreateDeploymentGroupResult createDeploymentGroup(CreateDeploymentGroupRequest request) {request = beforeClientExecution(request);return executeCreateDeploymentGroup(request);},public CreateDeploymentGroupResult createDeploymentGroupCreateDeploymentGroupRequest request request  beforeClientExecutionrequestreturn executeCreateDeploymentGrouprequest
"public String toString() {StringBuilder r = new StringBuilder();r.append(""Tag"");r.append(""={\n"");r.append(""object "");r.append(object != null ? object.name() : ""NOT_SET"");r.append(""\n"");r.append(""type "");r.append(object != null ? Constants.typeString(type) : ""NOT_SET"");r.append(""\n"");r.append(""tag "");r.append(tag != null ? tag : ""NOT_SET"");r.append(""\n"");if (tagger != null) {r.append(""tagger "");r.append(tagger);r.append(""\n"");}r.append(""\n"");r.append(message != null ? message : """");r.append(""}"");return r.toString();}",public String toString StringBuilder r  new StringBuilderrappendTagrappendnrappendobject rappendobject  null  objectname  NOTSETrappendnrappendtype rappendobject  null  ConstantstypeStringtype  NOTSETrappendnrappendtag rappendtag  null  tag  NOTSETrappendnif tagger  null rappendtagger rappendtaggerrappendnrappendnrappendmessage  null  message  rappendreturn rtoString
public ET next() {if (expectedModCount == list.modCount) {if (hasNext()) {link = link.previous;canRemove = true;return link.data;}throw new NoSuchElementException();}throw new ConcurrentModificationException();},public ET next if expectedModCount  listmodCount if hasNext link  linkpreviouscanRemove  truereturn linkdatathrow new NoSuchElementExceptionthrow new ConcurrentModificationException
public boolean contains(Object needle) {if (needle instanceof String) {String n = (String) needle;return names.containsKey(n)|| names.containsKey(StringUtils.toLowerCase(n));}return false;},public boolean containsObject needle if needle instanceof String String n  String needlereturn namescontainsKeyn namescontainsKeyStringUtilstoLowerCasenreturn false
public int set(final int holder){return holder | _mask;},public int setfinal int holderreturn holder  mask
public void setContext(int lineCount) {if (lineCount < 0)throw new IllegalArgumentException(JGitText.get().contextMustBeNonNegative);context = lineCount;},public void setContextint lineCount if lineCount  0throw new IllegalArgumentExceptionJGitTextgetcontextMustBeNonNegativecontext  lineCount
public String getPath(Side side) {return side == Side.OLD ? getOldPath() : getNewPath();},public String getPathSide side return side  SideOLD  getOldPath  getNewPath
public DescribeAccessPointsResult describeAccessPoints(DescribeAccessPointsRequest request) {request = beforeClientExecution(request);return executeDescribeAccessPoints(request);},public DescribeAccessPointsResult describeAccessPointsDescribeAccessPointsRequest request request  beforeClientExecutionrequestreturn executeDescribeAccessPointsrequest
public StringBuilder deleteCharAt(int index) {deleteCharAt0(index);return this;},public StringBuilder deleteCharAtint index deleteCharAt0indexreturn this
"public int addSSTString(UnicodeString string) {LOG.log(DEBUG, ""insert to sst string='"", string);if (sst == null) {insertSST();}return sst.addString(string);}",public int addSSTStringUnicodeString string LOGlogDEBUG insert to sst string stringif sst  null insertSSTreturn sstaddStringstring
public String outputToString(TermData data) {return data.toString();},public String outputToStringTermData data return datatoString
"public List<HSSFObjectData> getAllEmbeddedObjects(){List<HSSFObjectData> objects = new ArrayList<>();for (HSSFSheet sheet : _sheets){getAllEmbeddedObjects(sheet, objects);}return Collections.unmodifiableList(objects);}",public ListHSSFObjectData getAllEmbeddedObjectsListHSSFObjectData objects  new ArrayListfor HSSFSheet sheet  sheetsgetAllEmbeddedObjectssheet objectsreturn CollectionsunmodifiableListobjects
public DisableDirectoryResult disableDirectory(DisableDirectoryRequest request) {request = beforeClientExecution(request);return executeDisableDirectory(request);},public DisableDirectoryResult disableDirectoryDisableDirectoryRequest request request  beforeClientExecutionrequestreturn executeDisableDirectoryrequest
public UpdateApiMappingResult updateApiMapping(UpdateApiMappingRequest request) {request = beforeClientExecution(request);return executeUpdateApiMapping(request);},public UpdateApiMappingResult updateApiMappingUpdateApiMappingRequest request request  beforeClientExecutionrequestreturn executeUpdateApiMappingrequest
"public StringBuffer insert(int index, boolean b) {return insert(index, b ? ""true"" : ""false"");}",public StringBuffer insertint index boolean b return insertindex b  true  false
public UpdateConfigurationResult updateConfiguration(UpdateConfigurationRequest request) {request = beforeClientExecution(request);return executeUpdateConfiguration(request);},public UpdateConfigurationResult updateConfigurationUpdateConfigurationRequest request request  beforeClientExecutionrequestreturn executeUpdateConfigurationrequest
"public synchronized StringBuffer replace(int start, int end, String string) {replace0(start, end, string);return this;}",public synchronized StringBuffer replaceint start int end String string replace0start end stringreturn this
"public void decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = blocks[blocksOffset++];for (int shift = 60; shift >= 0; shift -= 4) {values[valuesOffset++] = (int) ((block >>> shift) & 15);}}}",public void decodelong blocks int blocksOffset int values int valuesOffset int iterations for int i  0 i  iterations i final long block  blocksblocksOffsetfor int shift  60 shift  0 shift  4 valuesvaluesOffset  int block  shift  15
"public synchronized void print(String str) {if (out == null) {setError();return;}if (str == null) {print(""null"");return;}try {if (encoding == null) {write(str.getBytes());} else {write(str.getBytes(encoding));}} catch (IOException e) {setError();}}",public synchronized void printString str if out  null setErrorreturnif str  null printnullreturntry if encoding  null writestrgetBytes else writestrgetBytesencoding catch IOException e setError
"@Override public E set(int index, E object) {synchronized (CopyOnWriteArrayList.this) {slice.checkElementIndex(index);slice.checkConcurrentModification(elements);E result = CopyOnWriteArrayList.this.set(index + slice.from, object);slice = new Slice(elements, slice.from, slice.to);return result;}}",Override public E setint index E object synchronized CopyOnWriteArrayListthis slicecheckElementIndexindexslicecheckConcurrentModificationelementsE result  CopyOnWriteArrayListthissetindex  slicefrom objectslice  new Sliceelements slicefrom slicetoreturn result
"public static void fill(Object[] array, int start, int end, Object value) {Arrays.checkStartAndEnd(array.length, start, end);for (int i = start; i < end; i++) {array[i] = value;}}",public static void fillObject array int start int end Object value ArrayscheckStartAndEndarraylength start endfor int i  start i  end i arrayi  value
"public short checkExternSheet(int firstSheetNumber, int lastSheetNumber){return (short)getOrCreateLinkTable().checkExternSheet(firstSheetNumber, lastSheetNumber);}",public short checkExternSheetint firstSheetNumber int lastSheetNumberreturn shortgetOrCreateLinkTablecheckExternSheetfirstSheetNumber lastSheetNumber
public DeleteClusterParameterGroupResult deleteClusterParameterGroup(DeleteClusterParameterGroupRequest request) {request = beforeClientExecution(request);return executeDeleteClusterParameterGroup(request);},public DeleteClusterParameterGroupResult deleteClusterParameterGroupDeleteClusterParameterGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteClusterParameterGrouprequest
public GetTemplateResult getTemplate(GetTemplateRequest request) {request = beforeClientExecution(request);return executeGetTemplate(request);},public GetTemplateResult getTemplateGetTemplateRequest request request  beforeClientExecutionrequestreturn executeGetTemplaterequest
"public ByteBuffer put(byte[] src, int srcOffset, int byteCount) {throw new ReadOnlyBufferException();}",public ByteBuffer putbyte src int srcOffset int byteCount throw new ReadOnlyBufferException
"public Note call() throws GitAPIException {checkCallable();NoteMap map = NoteMap.newEmptyMap();RevCommit notesCommit = null;try (RevWalk walk = new RevWalk(repo);ObjectInserter inserter = repo.newObjectInserter()) {Ref ref = repo.findRef(notesRef);if (ref != null) {notesCommit = walk.parseCommit(ref.getObjectId());map = NoteMap.read(walk.getObjectReader(), notesCommit);}map.set(id, message, inserter);commitNoteMap(repo, notesRef, walk, map, notesCommit, inserter,""Notes added by 'git notes add'""); return map.getNote(id);} catch (IOException e) {throw new JGitInternalException(e.getMessage(), e);}}",public Note call throws GitAPIException checkCallableNoteMap map  NoteMapnewEmptyMapRevCommit notesCommit  nulltry RevWalk walk  new RevWalkrepoObjectInserter inserter  reponewObjectInserter Ref ref  repofindRefnotesRefif ref  null notesCommit  walkparseCommitrefgetObjectIdmap  NoteMapreadwalkgetObjectReader notesCommitmapsetid message insertercommitNoteMaprepo notesRef walk map notesCommit inserterNotes added by git notes add return mapgetNoteid catch IOException e throw new JGitInternalExceptionegetMessage e
public DeleteNodegroupResult deleteNodegroup(DeleteNodegroupRequest request) {request = beforeClientExecution(request);return executeDeleteNodegroup(request);},public DeleteNodegroupResult deleteNodegroupDeleteNodegroupRequest request request  beforeClientExecutionrequestreturn executeDeleteNodegrouprequest
public final boolean hasRemaining() {return position < limit;},public final boolean hasRemaining return position  limit
"public final int compareTo(AnyObjectId other) {if (this == other)return 0;int cmp;cmp = NB.compareUInt32(w1, other.w1);if (cmp != 0)return cmp;cmp = NB.compareUInt32(w2, other.w2);if (cmp != 0)return cmp;cmp = NB.compareUInt32(w3, other.w3);if (cmp != 0)return cmp;cmp = NB.compareUInt32(w4, other.w4);if (cmp != 0)return cmp;return NB.compareUInt32(w5, other.w5);}",public final int compareToAnyObjectId other if this  otherreturn 0int cmpcmp  NBcompareUInt32w1 otherw1if cmp  0return cmpcmp  NBcompareUInt32w2 otherw2if cmp  0return cmpcmp  NBcompareUInt32w3 otherw3if cmp  0return cmpcmp  NBcompareUInt32w4 otherw4if cmp  0return cmpreturn NBcompareUInt32w5 otherw5
"public static IntBuffer wrap(int[] array) {return wrap(array, 0, array.length);}",public static IntBuffer wrapint array return wraparray 0 arraylength
public ObjectId getNewId() {return newId;},public ObjectId getNewId return newId
public DescribeBrokerInstanceOptionsResult describeBrokerInstanceOptions(DescribeBrokerInstanceOptionsRequest request) {request = beforeClientExecution(request);return executeDescribeBrokerInstanceOptions(request);},public DescribeBrokerInstanceOptionsResult describeBrokerInstanceOptionsDescribeBrokerInstanceOptionsRequest request request  beforeClientExecutionrequestreturn executeDescribeBrokerInstanceOptionsrequest
public GetDASHStreamingSessionURLResult getDASHStreamingSessionURL(GetDASHStreamingSessionURLRequest request) {request = beforeClientExecution(request);return executeGetDASHStreamingSessionURL(request);},public GetDASHStreamingSessionURLResult getDASHStreamingSessionURLGetDASHStreamingSessionURLRequest request request  beforeClientExecutionrequestreturn executeGetDASHStreamingSessionURLrequest
public CancelJobResult cancelJob(CancelJobRequest request) {request = beforeClientExecution(request);return executeCancelJob(request);},public CancelJobResult cancelJobCancelJobRequest request request  beforeClientExecutionrequestreturn executeCancelJobrequest
public ListExperimentsResult listExperiments(ListExperimentsRequest request) {request = beforeClientExecution(request);return executeListExperiments(request);},public ListExperimentsResult listExperimentsListExperimentsRequest request request  beforeClientExecutionrequestreturn executeListExperimentsrequest
public CreateSubnetGroupResult createSubnetGroup(CreateSubnetGroupRequest request) {request = beforeClientExecution(request);return executeCreateSubnetGroup(request);},public CreateSubnetGroupResult createSubnetGroupCreateSubnetGroupRequest request request  beforeClientExecutionrequestreturn executeCreateSubnetGrouprequest
"public String toString() { return ""scorer("" + weight + "")["" + super.toString() + ""]""; }",public String toString  return scorer  weight    supertoString   
public Executor getExecutor() {return executor;},public Executor getExecutor return executor
public void write(LittleEndianOutput out) {throw invalid();},public void writeLittleEndianOutput out throw invalid
public StandardQueryParser(Analyzer analyzer) {this();this.setAnalyzer(analyzer);},public StandardQueryParserAnalyzer analyzer thisthissetAnalyzeranalyzer
public IndexedUDFFinder(UDFFinder... usedToolPacks) {super(usedToolPacks);_funcMap = new HashMap<>();},public IndexedUDFFinderUDFFinder usedToolPacks superusedToolPacksfuncMap  new HashMap
"public static int countMatchingCellsInRef(RefEval refEval, I_MatchPredicate criteriaPredicate) {int result = 0;final int firstSheetIndex = refEval.getFirstSheetIndex();final int lastSheetIndex = refEval.getLastSheetIndex();for (int sIx = firstSheetIndex; sIx <= lastSheetIndex; sIx++) {ValueEval ve = refEval.getInnerValueEval(sIx);if(criteriaPredicate.matches(ve)) {result++;}}return result;}",public static int countMatchingCellsInRefRefEval refEval IMatchPredicate criteriaPredicate int result  0final int firstSheetIndex  refEvalgetFirstSheetIndexfinal int lastSheetIndex  refEvalgetLastSheetIndexfor int sIx  firstSheetIndex sIx  lastSheetIndex sIx ValueEval ve  refEvalgetInnerValueEvalsIxifcriteriaPredicatematchesve resultreturn result
"public NameXPxg(int externalWorkbookNumber, String sheetName, String nameName) {this.externalWorkbookNumber = externalWorkbookNumber;this.sheetName = sheetName;this.nameName = nameName;}",public NameXPxgint externalWorkbookNumber String sheetName String nameName thisexternalWorkbookNumber  externalWorkbookNumberthissheetName  sheetNamethisnameName  nameName
"public MergeInfo(int totalMaxDoc, long estimatedMergeBytes, boolean isExternal, int mergeMaxNumSegments) {this.totalMaxDoc = totalMaxDoc;this.estimatedMergeBytes = estimatedMergeBytes;this.isExternal = isExternal;this.mergeMaxNumSegments = mergeMaxNumSegments;}",public MergeInfoint totalMaxDoc long estimatedMergeBytes boolean isExternal int mergeMaxNumSegments thistotalMaxDoc  totalMaxDocthisestimatedMergeBytes  estimatedMergeBytesthisisExternal  isExternalthismergeMaxNumSegments  mergeMaxNumSegments
public HsmClientCertificate createHsmClientCertificate(CreateHsmClientCertificateRequest request) {request = beforeClientExecution(request);return executeCreateHsmClientCertificate(request);},public HsmClientCertificate createHsmClientCertificateCreateHsmClientCertificateRequest request request  beforeClientExecutionrequestreturn executeCreateHsmClientCertificaterequest
"public Token consume() {Token o = getCurrentToken();if (o.getType() != EOF) {getInputStream().consume();}boolean hasListener = _parseListeners != null && !_parseListeners.isEmpty();if (_buildParseTrees || hasListener) {if ( _errHandler.inErrorRecoveryMode(this) ) {ErrorNode node = _ctx.addErrorNode(createErrorNode(_ctx,o));if (_parseListeners != null) {for (ParseTreeListener listener : _parseListeners) {listener.visitErrorNode(node);}}}else {TerminalNode node = _ctx.addChild(createTerminalNode(_ctx,o));if (_parseListeners != null) {for (ParseTreeListener listener : _parseListeners) {listener.visitTerminal(node);}}}}return o;}",public Token consume Token o  getCurrentTokenif ogetType  EOF getInputStreamconsumeboolean hasListener  parseListeners  null  parseListenersisEmptyif buildParseTrees  hasListener if  errHandlerinErrorRecoveryModethis  ErrorNode node  ctxaddErrorNodecreateErrorNodectxoif parseListeners  null for ParseTreeListener listener  parseListeners listenervisitErrorNodenodeelse TerminalNode node  ctxaddChildcreateTerminalNodectxoif parseListeners  null for ParseTreeListener listener  parseListeners listenervisitTerminalnodereturn o
public boolean seekExact(BytesRef term) {final int ord = findTerm(term);if (ord >= 0) {termOrd = ord;setTerm();return true;} else {return false;}},public boolean seekExactBytesRef term final int ord  findTermtermif ord  0 termOrd  ordsetTermreturn true else return false
public DescribeEgressOnlyInternetGatewaysResult describeEgressOnlyInternetGateways(DescribeEgressOnlyInternetGatewaysRequest request) {request = beforeClientExecution(request);return executeDescribeEgressOnlyInternetGateways(request);},public DescribeEgressOnlyInternetGatewaysResult describeEgressOnlyInternetGatewaysDescribeEgressOnlyInternetGatewaysRequest request request  beforeClientExecutionrequestreturn executeDescribeEgressOnlyInternetGatewaysrequest
public Ref getLeaf() {Ref dst = getTarget();while (dst.isSymbolic())dst = dst.getTarget();return dst;},public Ref getLeaf Ref dst  getTargetwhile dstisSymbolicdst  dstgetTargetreturn dst
public void ReInit(QueryParserTokenManager tm) {token_source = tm;token = new Token();jj_ntk = -1;jj_gen = 0;for (int i = 0; i < 10; i++) jj_la1[i] = -1;for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();},public void ReInitQueryParserTokenManager tm tokensource  tmtoken  new Tokenjjntk  1jjgen  0for int i  0 i  10 i jjla1i  1for int i  0 i  jj2rtnslength i jj2rtnsi  new JJCalls
public ListStacksResult listStacks() {return listStacks(new ListStacksRequest());},public ListStacksResult listStacks return listStacksnew ListStacksRequest
public PutInstancePublicPortsResult putInstancePublicPorts(PutInstancePublicPortsRequest request) {request = beforeClientExecution(request);return executePutInstancePublicPorts(request);},public PutInstancePublicPortsResult putInstancePublicPortsPutInstancePublicPortsRequest request request  beforeClientExecutionrequestreturn executePutInstancePublicPortsrequest
public GetConfigurationSetResult getConfigurationSet(GetConfigurationSetRequest request) {request = beforeClientExecution(request);return executeGetConfigurationSet(request);},public GetConfigurationSetResult getConfigurationSetGetConfigurationSetRequest request request  beforeClientExecutionrequestreturn executeGetConfigurationSetrequest
"public static Element getFirstChildOrFail(Element e) throws ParserException {Element kid = getFirstChildElement(e);if (null == kid) {throw new ParserException(e.getTagName()+ "" does not contain a child element"");}return kid;}",public static Element getFirstChildOrFailElement e throws ParserException Element kid  getFirstChildElementeif null  kid throw new ParserExceptionegetTagName  does not contain a child elementreturn kid
"public String toString() {return ""Cell(readerIndex="" + readerIndex + "" nodeID="" + index.getNodeID()+ "" isLeaf="" + index.isLeafNode() + "" distanceSquared="" + distanceSquared + "")"";}",public String toString return CellreaderIndex  readerIndex   nodeID  indexgetNodeID  isLeaf  indexisLeafNode   distanceSquared  distanceSquared  
"public static long getBaseSize(byte[] delta) {int p = 0;long baseLen = 0;int c, shift = 0;do {c = delta[p++] & 0xff;baseLen |= ((long) (c & 0x7f)) << shift;shift += 7;} while ((c & 0x80) != 0);return baseLen;}",public static long getBaseSizebyte delta int p  0long baseLen  0int c shift  0do c  deltap  0xffbaseLen  long c  0x7f  shiftshift  7 while c  0x80  0return baseLen
public VerifyEmailIdentityResult verifyEmailIdentity(VerifyEmailIdentityRequest request) {request = beforeClientExecution(request);return executeVerifyEmailIdentity(request);},public VerifyEmailIdentityResult verifyEmailIdentityVerifyEmailIdentityRequest request request  beforeClientExecutionrequestreturn executeVerifyEmailIdentityrequest
public CreateInvalidationResult createInvalidation(CreateInvalidationRequest request) {request = beforeClientExecution(request);return executeCreateInvalidation(request);},public CreateInvalidationResult createInvalidationCreateInvalidationRequest request request  beforeClientExecutionrequestreturn executeCreateInvalidationrequest
public ListGroupsForUserRequest(String userName) {setUserName(userName);},public ListGroupsForUserRequestString userName setUserNameuserName
public void serialize(LittleEndianOutput out) {out.writeInt(field_1_stream_pos);out.writeShort(field_2_bucket_sst_offset);out.writeShort(field_3_zero);},public void serializeLittleEndianOutput out outwriteIntfield1streamposoutwriteShortfield2bucketsstoffsetoutwriteShortfield3zero
public boolean equals(Object o) {if (QueryValueSource.class != o.getClass()) return false;QueryValueSource other = (QueryValueSource)o;return this.q.equals(other.q) && this.defVal==other.defVal;},public boolean equalsObject o if QueryValueSourceclass  ogetClass return falseQueryValueSource other  QueryValueSourceoreturn thisqequalsotherq  thisdefValotherdefVal
"public boolean add(E object) {add(size(), object);return true;}",public boolean addE object addsize objectreturn true
"public synchronized SessionToken checkForUpdate(String currentVersion) {ensureOpen();if (currentRevision == null) { return null;}if (currentVersion != null && currentRevision.revision.compareTo(currentVersion) <= 0) {return null;}currentRevision.incRef();final String sessionID = Integer.toString(sessionToken.incrementAndGet());final SessionToken sessionToken = new SessionToken(sessionID, currentRevision.revision);final ReplicationSession timedSessionToken = new ReplicationSession(sessionToken, currentRevision);sessions.put(sessionID, timedSessionToken);return sessionToken;}",public synchronized SessionToken checkForUpdateString currentVersion ensureOpenif currentRevision  null  return nullif currentVersion  null  currentRevisionrevisioncompareTocurrentVersion  0 return nullcurrentRevisionincReffinal String sessionID  IntegertoStringsessionTokenincrementAndGetfinal SessionToken sessionToken  new SessionTokensessionID currentRevisionrevisionfinal ReplicationSession timedSessionToken  new ReplicationSessionsessionToken currentRevisionsessionsputsessionID timedSessionTokenreturn sessionToken
public void setCommitNames(String[] commitNames) {this.commitNames = commitNames;},public void setCommitNamesString commitNames thiscommitNames  commitNames
"public FormulaRecordAggregate createFormula(int row, int col) {FormulaRecord fr = new FormulaRecord();fr.setRow(row);fr.setColumn((short) col);return new FormulaRecordAggregate(fr, null, _sharedValueManager);}",public FormulaRecordAggregate createFormulaint row int col FormulaRecord fr  new FormulaRecordfrsetRowrowfrsetColumnshort colreturn new FormulaRecordAggregatefr null sharedValueManager
public DetectSyntaxResult detectSyntax(DetectSyntaxRequest request) {request = beforeClientExecution(request);return executeDetectSyntax(request);},public DetectSyntaxResult detectSyntaxDetectSyntaxRequest request request  beforeClientExecutionrequestreturn executeDetectSyntaxrequest
"public ValueEval evaluate(ValueEval[] args, OperationEvaluationContext ec) { if (args.length < 2 || args.length > 3) {return ErrorEval.VALUE_INVALID;}int srcCellRow = ec.getRowIndex();int srcCellCol = ec.getColumnIndex();double start, end;double[] holidays;try {start = this.evaluator.evaluateDateArg(args[0], srcCellRow, srcCellCol);end = this.evaluator.evaluateDateArg(args[1], srcCellRow, srcCellCol);if (start > end) {return ErrorEval.NAME_INVALID;}ValueEval holidaysCell = args.length == 3 ? args[2] : null;holidays = this.evaluator.evaluateDatesArg(holidaysCell, srcCellRow, srcCellCol);return new NumberEval(WorkdayCalculator.instance.calculateWorkdays(start, end, holidays));} catch (EvaluationException e) {return ErrorEval.VALUE_INVALID;}}",public ValueEval evaluateValueEval args OperationEvaluationContext ec  if argslength  2  argslength  3 return ErrorEvalVALUEINVALIDint srcCellRow  ecgetRowIndexint srcCellCol  ecgetColumnIndexdouble start enddouble holidaystry start  thisevaluatorevaluateDateArgargs0 srcCellRow srcCellColend  thisevaluatorevaluateDateArgargs1 srcCellRow srcCellColif start  end return ErrorEvalNAMEINVALIDValueEval holidaysCell  argslength  3  args2  nullholidays  thisevaluatorevaluateDatesArgholidaysCell srcCellRow srcCellColreturn new NumberEvalWorkdayCalculatorinstancecalculateWorkdaysstart end holidays catch EvaluationException e return ErrorEvalVALUEINVALID
public HSSFDataValidationHelper(HSSFSheet sheet) {super();},public HSSFDataValidationHelperHSSFSheet sheet super
"public SyncFacePicturesRequest() {super(""LinkFace"", ""2018-07-20"", ""SyncFacePictures"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public SyncFacePicturesRequest superLinkFace 20180720 SyncFacePicturessetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
"public static String shortToHex(int value) {StringBuilder sb = new StringBuilder(6);writeHex(sb, value & 0xFFFFL, 4, ""0x"");return sb.toString();}",public static String shortToHexint value StringBuilder sb  new StringBuilder6writeHexsb value  0xFFFFL 4 0xreturn sbtoString
"public String toString() {switch (state) {case SET:return key;case UNSET:return ""-"" + key; case UNSPECIFIED:return ""!"" + key; case CUSTOM:default:return key + ""="" + value; }}",public String toString switch state case SETreturn keycase UNSETreturn   key case UNSPECIFIEDreturn   key case CUSTOMdefaultreturn key    value 
public void seek(int index) {lazyInit();p = adjustSeekIndex(index);},public void seekint index lazyInitp  adjustSeekIndexindex
public CreateTransitGatewayPeeringAttachmentResult createTransitGatewayPeeringAttachment(CreateTransitGatewayPeeringAttachmentRequest request) {request = beforeClientExecution(request);return executeCreateTransitGatewayPeeringAttachment(request);},public CreateTransitGatewayPeeringAttachmentResult createTransitGatewayPeeringAttachmentCreateTransitGatewayPeeringAttachmentRequest request request  beforeClientExecutionrequestreturn executeCreateTransitGatewayPeeringAttachmentrequest
"public static BytesRef deepCopyOf(BytesRef other) {return new BytesRef(ArrayUtil.copyOfSubArray(other.bytes, other.offset, other.offset + other.length), 0, other.length);}",public static BytesRef deepCopyOfBytesRef other return new BytesRefArrayUtilcopyOfSubArrayotherbytes otheroffset otheroffset  otherlength 0 otherlength
public TokenCollector(int tokenCount) {_ptgs = new Ptg[tokenCount];_offset = 0;},public TokenCollectorint tokenCount ptgs  new PtgtokenCountoffset  0
public static String[] tokenize( String format ) {List<String> result = new ArrayList<>();DateFormatTokenizer tokenizer = new DateFormatTokenizer(format);String token;while( ( token = tokenizer.getNextToken() ) != null ) {result.add(token);}return result.toArray(new String[0]);},public static String tokenize String format  ListString result  new ArrayListDateFormatTokenizer tokenizer  new DateFormatTokenizerformatString tokenwhile  token  tokenizergetNextToken   null  resultaddtokenreturn resulttoArraynew String0
public DescribeNatGatewaysResult describeNatGateways(DescribeNatGatewaysRequest request) {request = beforeClientExecution(request);return executeDescribeNatGateways(request);},public DescribeNatGatewaysResult describeNatGatewaysDescribeNatGatewaysRequest request request  beforeClientExecutionrequestreturn executeDescribeNatGatewaysrequest
public ResetImageAttributeResult resetImageAttribute(ResetImageAttributeRequest request) {request = beforeClientExecution(request);return executeResetImageAttribute(request);},public ResetImageAttributeResult resetImageAttributeResetImageAttributeRequest request request  beforeClientExecutionrequestreturn executeResetImageAttributerequest
"public void setHorizontalBorder(boolean value){field_1_options = horizontalBorder.setShortBoolean(field_1_options, value);}",public void setHorizontalBorderboolean valuefield1options  horizontalBordersetShortBooleanfield1options value
public ReplicationGroup modifyReplicationGroup(ModifyReplicationGroupRequest request) {request = beforeClientExecution(request);return executeModifyReplicationGroup(request);},public ReplicationGroup modifyReplicationGroupModifyReplicationGroupRequest request request  beforeClientExecutionrequestreturn executeModifyReplicationGrouprequest
public boolean containsKey(CharSequence cs) {if(cs == null)throw new NullPointerException();return false;},public boolean containsKeyCharSequence cs ifcs  nullthrow new NullPointerExceptionreturn false
public GetIntegrationsResult getIntegrations(GetIntegrationsRequest request) {request = beforeClientExecution(request);return executeGetIntegrations(request);},public GetIntegrationsResult getIntegrationsGetIntegrationsRequest request request  beforeClientExecutionrequestreturn executeGetIntegrationsrequest
"public LabelRecord(RecordInputStream in) {field_1_row          = in.readUShort();field_2_column       = in.readShort();field_3_xf_index     = in.readShort();field_4_string_len   = in.readShort();field_5_unicode_flag = in.readByte();if (field_4_string_len > 0) {if (isUnCompressedUnicode()) {field_6_value = in.readUnicodeLEString(field_4_string_len);} else {field_6_value = in.readCompressedUnicode(field_4_string_len);}} else {field_6_value = """";}if (in.remaining() > 0) {logger.log(POILogger.INFO,""LabelRecord data remains: "" + in.remaining() +"" : "" + HexDump.toHex(in.readRemainder()));}}",public LabelRecordRecordInputStream in field1row           inreadUShortfield2column        inreadShortfield3xfindex      inreadShortfield4stringlen    inreadShortfield5unicodeflag  inreadByteif field4stringlen  0 if isUnCompressedUnicode field6value  inreadUnicodeLEStringfield4stringlen else field6value  inreadCompressedUnicodefield4stringlen else field6value  if inremaining  0 loggerlogPOILoggerINFOLabelRecord data remains   inremaining     HexDumptoHexinreadRemainder
public SubmoduleAddCommand setProgressMonitor(ProgressMonitor monitor) {this.monitor = monitor;return this;},public SubmoduleAddCommand setProgressMonitorProgressMonitor monitor thismonitor  monitorreturn this
public byte readByte() {if (currentBlockUpto == blockSize) {nextBlock();}return currentBlock[currentBlockUpto++];},public byte readByte if currentBlockUpto  blockSize nextBlockreturn currentBlockcurrentBlockUpto
public TestAlarmResult testAlarm(TestAlarmRequest request) {request = beforeClientExecution(request);return executeTestAlarm(request);},public TestAlarmResult testAlarmTestAlarmRequest request request  beforeClientExecutionrequestreturn executeTestAlarmrequest
public void clear() {HashMap.this.clear();},public void clear HashMapthisclear
"public void visitContainedRecords(RecordVisitor rv) {int nRegions = _mergedRegions.size();if (nRegions < 1) {return;}int nFullMergedCellsRecords = nRegions / MAX_MERGED_REGIONS;int nLeftoverMergedRegions = nRegions % MAX_MERGED_REGIONS;CellRangeAddress[] cras = new CellRangeAddress[nRegions];_mergedRegions.toArray(cras);for (int i = 0; i < nFullMergedCellsRecords; i++) {int startIx = i * MAX_MERGED_REGIONS;rv.visitRecord(new MergeCellsRecord(cras, startIx, MAX_MERGED_REGIONS));}if (nLeftoverMergedRegions > 0) {int startIx = nFullMergedCellsRecords * MAX_MERGED_REGIONS;rv.visitRecord(new MergeCellsRecord(cras, startIx, nLeftoverMergedRegions));}}",public void visitContainedRecordsRecordVisitor rv int nRegions  mergedRegionssizeif nRegions  1 returnint nFullMergedCellsRecords  nRegions  MAXMERGEDREGIONSint nLeftoverMergedRegions  nRegions  MAXMERGEDREGIONSCellRangeAddress cras  new CellRangeAddressnRegionsmergedRegionstoArraycrasfor int i  0 i  nFullMergedCellsRecords i int startIx  i  MAXMERGEDREGIONSrvvisitRecordnew MergeCellsRecordcras startIx MAXMERGEDREGIONSif nLeftoverMergedRegions  0 int startIx  nFullMergedCellsRecords  MAXMERGEDREGIONSrvvisitRecordnew MergeCellsRecordcras startIx nLeftoverMergedRegions
public CharArrayWriter() {buf = new char[32];lock = buf;},public CharArrayWriter buf  new char32lock  buf
"public SendEmailRequest(String source, Destination destination, Message message) {setSource(source);setDestination(destination);setMessage(message);}",public SendEmailRequestString source Destination destination Message message setSourcesourcesetDestinationdestinationsetMessagemessage
public DescribeReservedNodesResult describeReservedNodes() {return describeReservedNodes(new DescribeReservedNodesRequest());},public DescribeReservedNodesResult describeReservedNodes return describeReservedNodesnew DescribeReservedNodesRequest
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[PROTECT]\n"");buffer.append(""    .options = "").append(HexDump.shortToHex(_options)).append(""\n"");buffer.append(""[/PROTECT]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendPROTECTnbufferappend    options  appendHexDumpshortToHexoptionsappendnbufferappendPROTECTnreturn buffertoString
"public String getSignerType() {return ""PRIVATEKEY"";}",public String getSignerType return PRIVATEKEY
public StopProjectVersionResult stopProjectVersion(StopProjectVersionRequest request) {request = beforeClientExecution(request);return executeStopProjectVersion(request);},public StopProjectVersionResult stopProjectVersionStopProjectVersionRequest request request  beforeClientExecutionrequestreturn executeStopProjectVersionrequest
public CacheCluster createCacheCluster(CreateCacheClusterRequest request) {request = beforeClientExecution(request);return executeCreateCacheCluster(request);},public CacheCluster createCacheClusterCreateCacheClusterRequest request request  beforeClientExecutionrequestreturn executeCreateCacheClusterrequest
public boolean equals(Object _other) {if ((_other instanceof LabelAndValue) == false) {return false;}LabelAndValue other = (LabelAndValue) _other;return label.equals(other.label) && value.equals(other.value);},public boolean equalsObject other if other instanceof LabelAndValue  false return falseLabelAndValue other  LabelAndValue otherreturn labelequalsotherlabel  valueequalsothervalue
"public JobFlowInstancesDetail(String masterInstanceType, String slaveInstanceType, Integer instanceCount) {setMasterInstanceType(masterInstanceType);setSlaveInstanceType(slaveInstanceType);setInstanceCount(instanceCount);}",public JobFlowInstancesDetailString masterInstanceType String slaveInstanceType Integer instanceCount setMasterInstanceTypemasterInstanceTypesetSlaveInstanceTypeslaveInstanceTypesetInstanceCountinstanceCount
public boolean stem() {r_mark_regions();limit_backward = cursor;cursor = limit;int v_2 = limit - cursor;r_attached_pronoun();cursor = limit - v_2;int v_3 = limit - cursor;lab0: {lab1: {int v_4 = limit - cursor;lab2: {if (!r_standard_suffix()){break lab2;}break lab1;}cursor = limit - v_4;if (!r_verb_suffix()){break lab0;}}}cursor = limit - v_3;int v_5 = limit - cursor;r_residual_suffix();cursor = limit - v_5;cursor = limit_backward;int v_6 = cursor;r_cleaning();cursor = v_6;return true;},public boolean stem rmarkregionslimitbackward  cursorcursor  limitint v2  limit  cursorrattachedpronouncursor  limit  v2int v3  limit  cursorlab0 lab1 int v4  limit  cursorlab2 if rstandardsuffixbreak lab2break lab1cursor  limit  v4if rverbsuffixbreak lab0cursor  limit  v3int v5  limit  cursorrresidualsuffixcursor  limit  v5cursor  limitbackwardint v6  cursorrcleaningcursor  v6return true
public HSSFPictureData( EscherBlipRecord blip ){this.blip = blip;},public HSSFPictureData EscherBlipRecord blip thisblip  blip
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[PALETTE]\n"");buffer.append(""  numcolors     = "").append(_colors.size()).append('\n');for (int i = 0; i < _colors.size(); i++) {PColor c = _colors.get(i);buffer.append(""* colornum      = "").append(i).append('\n');buffer.append(c);buffer.append("""");}}",public String toString StringBuilder buffer  new StringBuilderbufferappendPALETTEnbufferappend  numcolors      appendcolorssizeappendnfor int i  0 i  colorssize i PColor c  colorsgetibufferappend colornum       appendiappendnbufferappendcbufferappend
"public String[] list(FilenameFilter filter) {String[] filenames = list();if (filter == null || filenames == null) {return filenames;}List<String> result = new ArrayList<String>(filenames.length);for (String filename : filenames) {if (filter.accept(this, filename)) {result.add(filename);}}return result.toArray(new String[result.size()]);}",public String listFilenameFilter filter String filenames  listif filter  null  filenames  null return filenamesListString result  new ArrayListStringfilenameslengthfor String filename  filenames if filteracceptthis filename resultaddfilenamereturn resulttoArraynew Stringresultsize
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0,ValueEval arg1) {String arg;int index;try {arg = evaluateStringArg(arg0, srcRowIndex, srcColumnIndex);index = evaluateIntArg(arg1, srcRowIndex, srcColumnIndex);} catch (EvaluationException e) {return e.getErrorEval();}if(index < 0) {return ErrorEval.VALUE_INVALID;}String result;if (_isLeft) {result = arg.substring(0, Math.min(arg.length(), index));} else {result = arg.substring(Math.max(0, arg.length()-index));}return new StringEval(result);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0ValueEval arg1 String argint indextry arg  evaluateStringArgarg0 srcRowIndex srcColumnIndexindex  evaluateIntArgarg1 srcRowIndex srcColumnIndex catch EvaluationException e return egetErrorEvalifindex  0 return ErrorEvalVALUEINVALIDString resultif isLeft result  argsubstring0 Mathminarglength index else result  argsubstringMathmax0 arglengthindexreturn new StringEvalresult
public void serialize(LittleEndianOutput out) {out.writeShort(sid);out.writeShort(reserved.length);out.write(reserved);},public void serializeLittleEndianOutput out outwriteShortsidoutwriteShortreservedlengthoutwritereserved
public HadoopJarStepConfig(String jar) {setJar(jar);},public HadoopJarStepConfigString jar setJarjar
public CharArrayWriter append(char c) {write(c);return this;},public CharArrayWriter appendchar c writecreturn this
public GetChannelsResult getChannels(GetChannelsRequest request) {request = beforeClientExecution(request);return executeGetChannels(request);},public GetChannelsResult getChannelsGetChannelsRequest request request  beforeClientExecutionrequestreturn executeGetChannelsrequest
public File getParentFile() {String tempParent = getParent();if (tempParent == null) {return null;}return new File(tempParent);},public File getParentFile String tempParent  getParentif tempParent  null return nullreturn new FiletempParent
public URI resolve(String relative) {return resolve(create(relative));},public URI resolveString relative return resolvecreaterelative
"public static IntervalSet of(int a, int b) {IntervalSet s = new IntervalSet();s.add(a,b);return s;}",public static IntervalSet ofint a int b IntervalSet s  new IntervalSetsaddabreturn s
public void setCompressionLevel(int level) {compressionLevel = level;},public void setCompressionLevelint level compressionLevel  level
public void reset() {offset = 0;length = 0;lastTrailingHighSurrogate = 0;},public void reset offset  0length  0lastTrailingHighSurrogate  0
public AttributeValue(String s) {setS(s);},public AttributeValueString s setSs
"public Token(int kind, String image){this.kind = kind;this.image = image;}",public Tokenint kind String imagethiskind  kindthisimage  image
"public XmlSerializer newSerializer() throws XmlPullParserException {if (serializerClasses == null) {throw new XmlPullParserException(""Factory initialization incomplete - has not tried ""+classNamesLocation);}if(serializerClasses.size() == 0) {throw new XmlPullParserException(""No valid serializer classes found in ""+classNamesLocation);}final StringBuilder issues = new StringBuilder ();for (int i = 0; i < serializerClasses.size (); i++) {final Class ppClass = (Class) serializerClasses.get(i);try {final XmlSerializer ser = (XmlSerializer) ppClass.newInstance();return ser;} catch(Exception ex) {issues.append (ppClass.getName () + "": ""+ ex.toString ()+""; "");}}throw new XmlPullParserException (""could not create serializer: ""+issues);}",public XmlSerializer newSerializer throws XmlPullParserException if serializerClasses  null throw new XmlPullParserExceptionFactory initialization incomplete  has not tried classNamesLocationifserializerClassessize  0 throw new XmlPullParserExceptionNo valid serializer classes found in classNamesLocationfinal StringBuilder issues  new StringBuilder for int i  0 i  serializerClassessize  i final Class ppClass  Class serializerClassesgetitry final XmlSerializer ser  XmlSerializer ppClassnewInstancereturn ser catchException ex issuesappend ppClassgetName     extoString  throw new XmlPullParserException could not create serializer issues
public UpdateDomainContactPrivacyResult updateDomainContactPrivacy(UpdateDomainContactPrivacyRequest request) {request = beforeClientExecution(request);return executeUpdateDomainContactPrivacy(request);},public UpdateDomainContactPrivacyResult updateDomainContactPrivacyUpdateDomainContactPrivacyRequest request request  beforeClientExecutionrequestreturn executeUpdateDomainContactPrivacyrequest
"public String toString(String enc) throws UnsupportedEncodingException {return new String(buf, 0, count, enc);}",public String toStringString enc throws UnsupportedEncodingException return new Stringbuf 0 count enc
public DescribeStaleSecurityGroupsResult describeStaleSecurityGroups(DescribeStaleSecurityGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeStaleSecurityGroups(request);},public DescribeStaleSecurityGroupsResult describeStaleSecurityGroupsDescribeStaleSecurityGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeStaleSecurityGroupsrequest
public DisassociateWebsiteCertificateAuthorityResult disassociateWebsiteCertificateAuthority(DisassociateWebsiteCertificateAuthorityRequest request) {request = beforeClientExecution(request);return executeDisassociateWebsiteCertificateAuthority(request);},public DisassociateWebsiteCertificateAuthorityResult disassociateWebsiteCertificateAuthorityDisassociateWebsiteCertificateAuthorityRequest request request  beforeClientExecutionrequestreturn executeDisassociateWebsiteCertificateAuthorityrequest
public DeleteTransitGatewayVpcAttachmentResult deleteTransitGatewayVpcAttachment(DeleteTransitGatewayVpcAttachmentRequest request) {request = beforeClientExecution(request);return executeDeleteTransitGatewayVpcAttachment(request);},public DeleteTransitGatewayVpcAttachmentResult deleteTransitGatewayVpcAttachmentDeleteTransitGatewayVpcAttachmentRequest request request  beforeClientExecutionrequestreturn executeDeleteTransitGatewayVpcAttachmentrequest
public ObjectId idFor(TreeFormatter formatter) {return formatter.computeId(this);},public ObjectId idForTreeFormatter formatter return formattercomputeIdthis
"public static boolean startsWith(char s[], int len, String prefix) {final int prefixLen = prefix.length();if (prefixLen > len)return false;for (int i = 0; i < prefixLen; i++)if (s[i] != prefix.charAt(i))return false;return true;}",public static boolean startsWithchar s int len String prefix final int prefixLen  prefixlengthif prefixLen  lenreturn falsefor int i  0 i  prefixLen iif si  prefixcharAtireturn falsereturn true
public UpdateBatchPredictionResult updateBatchPrediction(UpdateBatchPredictionRequest request) {request = beforeClientExecution(request);return executeUpdateBatchPrediction(request);},public UpdateBatchPredictionResult updateBatchPredictionUpdateBatchPredictionRequest request request  beforeClientExecutionrequestreturn executeUpdateBatchPredictionrequest
public final void remove(RevFlag flag) {flags &= ~flag.mask;},public final void removeRevFlag flag flags  flagmask
"public void SwitchTo(int lexState){if (lexState >= 2 || lexState < 0)throw new TokenMgrError(""Error: Ignoring invalid lexical state : "" + lexState + "". State unchanged."", TokenMgrError.INVALID_LEXICAL_STATE);elsecurLexState = lexState;}",public void SwitchToint lexStateif lexState  2  lexState  0throw new TokenMgrErrorError Ignoring invalid lexical state    lexState   State unchanged TokenMgrErrorINVALIDLEXICALSTATEelsecurLexState  lexState
"public String toString() {StringBuilder sb = new StringBuilder(""[ArrayPtg]\n"");sb.append(""nRows = "").append(getRowCount()).append(""\n"");sb.append(""nCols = "").append(getColumnCount()).append(""\n"");if (_arrayValues == null) {sb.append(""  #values#uninitialised#\n"");} else {sb.append(""  "").append(toFormulaString());}return sb.toString();}",public String toString StringBuilder sb  new StringBuilderArrayPtgnsbappendnRows  appendgetRowCountappendnsbappendnCols  appendgetColumnCountappendnif arrayValues  null sbappend  valuesuninitialisedn else sbappend  appendtoFormulaStringreturn sbtoString
public ObjectId getHeadId() {return headId;},public ObjectId getHeadId return headId
public GetAssociatedIpv6PoolCidrsResult getAssociatedIpv6PoolCidrs(GetAssociatedIpv6PoolCidrsRequest request) {request = beforeClientExecution(request);return executeGetAssociatedIpv6PoolCidrs(request);},public GetAssociatedIpv6PoolCidrsResult getAssociatedIpv6PoolCidrsGetAssociatedIpv6PoolCidrsRequest request request  beforeClientExecutionrequestreturn executeGetAssociatedIpv6PoolCidrsrequest
"public void copyValue(Cell destCell) {switch (_cellType) {case BLANK:   destCell.setBlank();                           return;case NUMERIC: destCell.setCellValue(_numberValue);           return;case BOOLEAN: destCell.setCellValue(_booleanValue);          return;case STRING:  destCell.setCellValue(_stringValue);           return;case ERROR:   destCell.setCellErrorValue((byte)_errorValue); return;default: throw new IllegalStateException(""Unexpected data type ("" + _cellType + "")"");}}",public void copyValueCell destCell switch cellType case BLANK   destCellsetBlank                           returncase NUMERIC destCellsetCellValuenumberValue           returncase BOOLEAN destCellsetCellValuebooleanValue          returncase STRING  destCellsetCellValuestringValue           returncase ERROR   destCellsetCellErrorValuebyteerrorValue returndefault throw new IllegalStateExceptionUnexpected data type   cellType  
public DescribeLaunchTemplateVersionsResult describeLaunchTemplateVersions(DescribeLaunchTemplateVersionsRequest request) {request = beforeClientExecution(request);return executeDescribeLaunchTemplateVersions(request);},public DescribeLaunchTemplateVersionsResult describeLaunchTemplateVersionsDescribeLaunchTemplateVersionsRequest request request  beforeClientExecutionrequestreturn executeDescribeLaunchTemplateVersionsrequest
"public static DVConstraint createCustomFormulaConstraint(String formula) {if (formula == null) {throw new IllegalArgumentException(""formula must be supplied"");}return new DVConstraint(ValidationType.FORMULA, OperatorType.IGNORED, formula, null, null, null, null);}",public static DVConstraint createCustomFormulaConstraintString formula if formula  null throw new IllegalArgumentExceptionformula must be suppliedreturn new DVConstraintValidationTypeFORMULA OperatorTypeIGNORED formula null null null null
public DeleteProjectVersionResult deleteProjectVersion(DeleteProjectVersionRequest request) {request = beforeClientExecution(request);return executeDeleteProjectVersion(request);},public DeleteProjectVersionResult deleteProjectVersionDeleteProjectVersionRequest request request  beforeClientExecutionrequestreturn executeDeleteProjectVersionrequest
public String toStringUnquoted() {return getTermText();},public String toStringUnquoted return getTermText
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[RECALCID]\n"");buffer.append(""    .reserved = "").append(HexDump.shortToHex(_reserved0)).append(""\n"");buffer.append(""    .engineId = "").append(HexDump.intToHex(_engineId)).append(""\n"");buffer.append(""[/RECALCID]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendRECALCIDnbufferappend    reserved  appendHexDumpshortToHexreserved0appendnbufferappend    engineId  appendHexDumpintToHexengineIdappendnbufferappendRECALCIDnreturn buffertoString
"public String toString() {return ""RandomAccessInput("" + IndexInput.this.toString() + "")"";}",public String toString return RandomAccessInput  IndexInputthistoString  
"public static int countArg(ValueEval eval, I_MatchPredicate criteriaPredicate) {if (eval == null) {throw new IllegalArgumentException(""eval must not be null"");}if (eval instanceof ThreeDEval) {return countMatchingCellsInArea((ThreeDEval) eval, criteriaPredicate);}if (eval instanceof TwoDEval) {throw new IllegalArgumentException(""Count requires 3D Evals, 2D ones aren't supported"");}if (eval instanceof RefEval) {return CountUtils.countMatchingCellsInRef((RefEval) eval, criteriaPredicate);}return criteriaPredicate.matches(eval) ? 1 : 0;}",public static int countArgValueEval eval IMatchPredicate criteriaPredicate if eval  null throw new IllegalArgumentExceptioneval must not be nullif eval instanceof ThreeDEval return countMatchingCellsInAreaThreeDEval eval criteriaPredicateif eval instanceof TwoDEval throw new IllegalArgumentExceptionCount requires 3D Evals 2D ones arent supportedif eval instanceof RefEval return CountUtilscountMatchingCellsInRefRefEval eval criteriaPredicatereturn criteriaPredicatematcheseval  1  0
"public void parse(byte[] buf, int ptr, int end) {while (ptr < end)ptr = parseFile(buf, ptr, end);}",public void parsebyte buf int ptr int end while ptr  endptr  parseFilebuf ptr end
public ListQueuesResult listQueues(String queueNamePrefix) {return listQueues(new ListQueuesRequest().withQueueNamePrefix(queueNamePrefix));},public ListQueuesResult listQueuesString queueNamePrefix return listQueuesnew ListQueuesRequestwithQueueNamePrefixqueueNamePrefix
public DescribeVolumeAttributeResult describeVolumeAttribute(DescribeVolumeAttributeRequest request) {request = beforeClientExecution(request);return executeDescribeVolumeAttribute(request);},public DescribeVolumeAttributeResult describeVolumeAttributeDescribeVolumeAttributeRequest request request  beforeClientExecutionrequestreturn executeDescribeVolumeAttributerequest
"public Trie optimize(Trie orig) {List<CharSequence> cmds = orig.cmds;List<Row> rows = new ArrayList<>();List<Row> orows = orig.rows;int remap[] = new int[orows.size()];for (int j = orows.size() - 1; j >= 0; j--) {liftUp(orows.get(j), orows);}Arrays.fill(remap, -1);rows = removeGaps(orig.root, orows, new ArrayList<Row>(), remap);return new Trie(orig.forward, remap[orig.root], cmds, rows);}",public Trie optimizeTrie orig ListCharSequence cmds  origcmdsListRow rows  new ArrayListListRow orows  origrowsint remap  new intorowssizefor int j  orowssize  1 j  0 j liftUporowsgetj orowsArraysfillremap 1rows  removeGapsorigroot orows new ArrayListRow remapreturn new Trieorigforward remaporigroot cmds rows
public WorkingTreeOptions getOptions() {return state.options;},public WorkingTreeOptions getOptions return stateoptions
public SendInvitationResult sendInvitation(SendInvitationRequest request) {request = beforeClientExecution(request);return executeSendInvitation(request);},public SendInvitationResult sendInvitationSendInvitationRequest request request  beforeClientExecutionrequestreturn executeSendInvitationrequest
public DeleteAlarmsResult deleteAlarms(DeleteAlarmsRequest request) {request = beforeClientExecution(request);return executeDeleteAlarms(request);},public DeleteAlarmsResult deleteAlarmsDeleteAlarmsRequest request request  beforeClientExecutionrequestreturn executeDeleteAlarmsrequest
"public static void Main(String[] args) throws Exception {FSDirectory dir = null;String inputStr = null;String field = null;if (args.length == 3) {dir = FSDirectory.open(Paths.get(args[0]));field = args[1];inputStr = args[2];} else {usage();System.exit(1);}getTermInfo(dir,new Term(field, inputStr));}",public static void MainString args throws Exception FSDirectory dir  nullString inputStr  nullString field  nullif argslength  3 dir  FSDirectoryopenPathsgetargs0field  args1inputStr  args2 else usageSystemexit1getTermInfodirnew Termfield inputStr
public DBSnapshotAttributesResult modifyDBSnapshotAttribute(ModifyDBSnapshotAttributeRequest request) {request = beforeClientExecution(request);return executeModifyDBSnapshotAttribute(request);},public DBSnapshotAttributesResult modifyDBSnapshotAttributeModifyDBSnapshotAttributeRequest request request  beforeClientExecutionrequestreturn executeModifyDBSnapshotAttributerequest
"public static final String readUTF(DataInput in) throws IOException {return decodeUTF(in.readUnsignedShort(), in);}",public static final String readUTFDataInput in throws IOException return decodeUTFinreadUnsignedShort in
"public synchronized E remove(int index) {@SuppressWarnings(""unchecked"")E removed = (E) elements[index];removeRange(index, index + 1);return removed;}",public synchronized E removeint index SuppressWarningsuncheckedE removed  E elementsindexremoveRangeindex index  1return removed
"public byte[] getElement(int index) {int actualSize = getActualSizeOfElements(getSizeOfElements());byte[] result = IOUtils.safelyAllocate(actualSize, MAX_RECORD_LENGTH);System.arraycopy(getComplexData(), FIXED_SIZE + index * actualSize, result, 0, result.length );return result;}",public byte getElementint index int actualSize  getActualSizeOfElementsgetSizeOfElementsbyte result  IOUtilssafelyAllocateactualSize MAXRECORDLENGTHSystemarraycopygetComplexData FIXEDSIZE  index  actualSize result 0 resultlength return result
"public String signString(String stringToSign, AlibabaCloudCredentials credentials) {return null;}",public String signStringString stringToSign AlibabaCloudCredentials credentials return null
public void writeData(final ByteBuffer block) {block.put( serialize() );},public void writeDatafinal ByteBuffer block blockput serialize 
public void setSshSessionFactory(SshSessionFactory factory) {if (factory == null)throw new NullPointerException(JGitText.get().theFactoryMustNotBeNull);if (sock != null)throw new IllegalStateException(JGitText.get().anSSHSessionHasBeenAlreadyCreated);sch = factory;},public void setSshSessionFactorySshSessionFactory factory if factory  nullthrow new NullPointerExceptionJGitTextgettheFactoryMustNotBeNullif sock  nullthrow new IllegalStateExceptionJGitTextgetanSSHSessionHasBeenAlreadyCreatedsch  factory
public PipedReader(PipedWriter out) throws IOException {connect(out);},public PipedReaderPipedWriter out throws IOException connectout
public RawText getSourceContents() {return outCandidate.sourceText;},public RawText getSourceContents return outCandidatesourceText
"public static <T> T[] copyOfRange(T[] original, int start, int end) {int originalLength = original.length; if (start > end) {throw new IllegalArgumentException();}if (start < 0 || start > originalLength) {throw new ArrayIndexOutOfBoundsException();}int resultLength = end - start;int copyLength = Math.min(resultLength, originalLength - start);T[] result = (T[]) Array.newInstance(original.getClass().getComponentType(), resultLength);System.arraycopy(original, start, result, 0, copyLength);return result;}",public static T T copyOfRangeT original int start int end int originalLength  originallength if start  end throw new IllegalArgumentExceptionif start  0  start  originalLength throw new ArrayIndexOutOfBoundsExceptionint resultLength  end  startint copyLength  MathminresultLength originalLength  startT result  T ArraynewInstanceoriginalgetClassgetComponentType resultLengthSystemarraycopyoriginal start result 0 copyLengthreturn result
public boolean isPeeled() {return false;},public boolean isPeeled return false
public ProgressMonitor getProgressMonitor() {return monitor;},public ProgressMonitor getProgressMonitor return monitor
public Content(String data) {setData(data);},public ContentString data setDatadata
"public boolean add(Object o) {return map.put(o, PLACEHOLDER) == null;}",public boolean addObject o return mapputo PLACEHOLDER  null
public String getLockMessage() {return lockMessage;},public String getLockMessage return lockMessage
public E previous() {if (index > from) {return (E) snapshot[--index];} else {throw new NoSuchElementException();}},public E previous if index  from return E snapshotindex else throw new NoSuchElementException
public InviteUsersResult inviteUsers(InviteUsersRequest request) {request = beforeClientExecution(request);return executeInviteUsers(request);},public InviteUsersResult inviteUsersInviteUsersRequest request request  beforeClientExecutionrequestreturn executeInviteUsersrequest
"public boolean lessThan(ShardRef first, ShardRef second) {assert first != second;ScoreDoc firstScoreDoc = shardHits[first.shardIndex][first.hitIndex];ScoreDoc secondScoreDoc = shardHits[second.shardIndex][second.hitIndex];if (firstScoreDoc.score < secondScoreDoc.score) {return false;} else if (firstScoreDoc.score > secondScoreDoc.score) {return true;} else {return tieBreakLessThan(first, firstScoreDoc, second, secondScoreDoc, tieBreakerComparator);}}",public boolean lessThanShardRef first ShardRef second assert first  secondScoreDoc firstScoreDoc  shardHitsfirstshardIndexfirsthitIndexScoreDoc secondScoreDoc  shardHitssecondshardIndexsecondhitIndexif firstScoreDocscore  secondScoreDocscore return false else if firstScoreDocscore  secondScoreDocscore return true else return tieBreakLessThanfirst firstScoreDoc second secondScoreDoc tieBreakerComparator
public ListSubscriptionsRequest(String nextToken) {setNextToken(nextToken);},public ListSubscriptionsRequestString nextToken setNextTokennextToken
public RemoveTagsFromResourceResult removeTagsFromResource(RemoveTagsFromResourceRequest request) {request = beforeClientExecution(request);return executeRemoveTagsFromResource(request);},public RemoveTagsFromResourceResult removeTagsFromResourceRemoveTagsFromResourceRequest request request  beforeClientExecutionrequestreturn executeRemoveTagsFromResourcerequest
public ListHostedZonesResult listHostedZones() {return listHostedZones(new ListHostedZonesRequest());},public ListHostedZonesResult listHostedZones return listHostedZonesnew ListHostedZonesRequest
"public String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getName()).append("" ["");if(isSemiVolatile()) {sb.append(""volatile "");}if(isSpace()) {sb.append(""space count="").append((_data >> 8) & 0x00FF);sb.append("" type="").append(_data & 0x00FF).append("" "");}if(isOptimizedIf()) {sb.append(""if dist="").append(_data);} else if(isOptimizedChoose()) {sb.append(""choose nCases="").append(_data);} else if(isSkip()) {sb.append(""skip dist="").append(_data);} else if(isSum()) {sb.append(""sum "");} else if(isBaxcel()) {sb.append(""assign "");}sb.append(""]"");return sb.toString();}",public String toString StringBuilder sb  new StringBuilder64sbappendgetClassgetNameappend ifisSemiVolatile sbappendvolatile ifisSpace sbappendspace countappenddata  8  0x00FFsbappend typeappenddata  0x00FFappend ifisOptimizedIf sbappendif distappenddata else ifisOptimizedChoose sbappendchoose nCasesappenddata else ifisSkip sbappendskip distappenddata else ifisSum sbappendsum  else ifisBaxcel sbappendassign sbappendreturn sbtoString
public static double stdev(double[] v) {double r = Double.NaN;if (v!=null && v.length > 1) {r = Math.sqrt( devsq(v) / (v.length - 1) );}return r;},public static double stdevdouble v double r  DoubleNaNif vnull  vlength  1 r  Mathsqrt devsqv  vlength  1 return r
public GetVoiceConnectorLoggingConfigurationResult getVoiceConnectorLoggingConfiguration(GetVoiceConnectorLoggingConfigurationRequest request) {request = beforeClientExecution(request);return executeGetVoiceConnectorLoggingConfiguration(request);},public GetVoiceConnectorLoggingConfigurationResult getVoiceConnectorLoggingConfigurationGetVoiceConnectorLoggingConfigurationRequest request request  beforeClientExecutionrequestreturn executeGetVoiceConnectorLoggingConfigurationrequest
public GetQueueUrlResult getQueueUrl(GetQueueUrlRequest request) {request = beforeClientExecution(request);return executeGetQueueUrl(request);},public GetQueueUrlResult getQueueUrlGetQueueUrlRequest request request  beforeClientExecutionrequestreturn executeGetQueueUrlrequest
public TblPtg(LittleEndianInput in)  {field_1_first_row = in.readUShort();field_2_first_col = in.readUShort();},public TblPtgLittleEndianInput in  field1firstrow  inreadUShortfield2firstcol  inreadUShort
public long ramBytesUsed() {long size = 0;for (PackedInts.Reader Reader : subReaders) {size += Reader.ramBytesUsed();}return size;},public long ramBytesUsed long size  0for PackedIntsReader Reader  subReaders size  ReaderramBytesUsedreturn size
public CreateInternetGatewayResult createInternetGateway(CreateInternetGatewayRequest request) {request = beforeClientExecution(request);return executeCreateInternetGateway(request);},public CreateInternetGatewayResult createInternetGatewayCreateInternetGatewayRequest request request  beforeClientExecutionrequestreturn executeCreateInternetGatewayrequest
"public void setInputStream(IntStream input) {this._input = null;this._tokenFactorySourcePair = new Pair<TokenSource, CharStream>(this, _input);reset();this._input = (CharStream)input;this._tokenFactorySourcePair = new Pair<TokenSource, CharStream>(this, _input);}",public void setInputStreamIntStream input thisinput  nullthistokenFactorySourcePair  new PairTokenSource CharStreamthis inputresetthisinput  CharStreaminputthistokenFactorySourcePair  new PairTokenSource CharStreamthis input
"public ExpPtg(int firstRow, int firstCol) {this.field_1_first_row = firstRow;this.field_2_first_col = firstCol;}",public ExpPtgint firstRow int firstCol thisfield1firstrow  firstRowthisfield2firstcol  firstCol
public int refCount() {final int rc = refCount.get();assert rc >= 0;return rc;},public int refCount final int rc  refCountgetassert rc  0return rc
"public Object[] toArray() {int size = size(), index = 0;Iterator<?> it = iterator();Object[] array = new Object[size];while (index < size) {array[index++] = it.next();}return array;}",public Object toArray int size  size index  0Iterator it  iteratorObject array  new Objectsizewhile index  size arrayindex  itnextreturn array
"public String toString() {return Utils.join(Arrays.asList(opnds).iterator(), ""||"");}",public String toString return UtilsjoinArraysasListopndsiterator 
public boolean anyDeletions() {return deleteQueue.anyChanges();},public boolean anyDeletions return deleteQueueanyChanges
public DoubleBuffer asReadOnlyBuffer() {DoubleToByteBufferAdapter buf = new DoubleToByteBufferAdapter(byteBuffer.asReadOnlyBuffer());buf.limit = limit;buf.position = position;buf.mark = mark;buf.byteBuffer.order = byteBuffer.order;return buf;},public DoubleBuffer asReadOnlyBuffer DoubleToByteBufferAdapter buf  new DoubleToByteBufferAdapterbyteBufferasReadOnlyBufferbuflimit  limitbufposition  positionbufmark  markbufbyteBufferorder  byteBufferorderreturn buf
public GetTelemetryMetadataResult getTelemetryMetadata(GetTelemetryMetadataRequest request) {request = beforeClientExecution(request);return executeGetTelemetryMetadata(request);},public GetTelemetryMetadataResult getTelemetryMetadataGetTelemetryMetadataRequest request request  beforeClientExecutionrequestreturn executeGetTelemetryMetadatarequest
public ExternalBookBlock(RecordStream rs) {_externalBookRecord = (SupBookRecord) rs.getNext();List<Object> temp = new ArrayList<>();while (rs.peekNextClass() == ExternalNameRecord.class) {temp.add(rs.getNext());}_externalNameRecords = new ExternalNameRecord[temp.size()];temp.toArray(_externalNameRecords);temp.clear();while (rs.peekNextClass() == CRNCountRecord.class) {temp.add(new CRNBlock(rs));}_crnBlocks = new CRNBlock[temp.size()];temp.toArray(_crnBlocks);},public ExternalBookBlockRecordStream rs externalBookRecord  SupBookRecord rsgetNextListObject temp  new ArrayListwhile rspeekNextClass  ExternalNameRecordclass tempaddrsgetNextexternalNameRecords  new ExternalNameRecordtempsizetemptoArrayexternalNameRecordstempclearwhile rspeekNextClass  CRNCountRecordclass tempaddnew CRNBlockrscrnBlocks  new CRNBlocktempsizetemptoArraycrnBlocks
public StartDeliveryStreamEncryptionResult startDeliveryStreamEncryption(StartDeliveryStreamEncryptionRequest request) {request = beforeClientExecution(request);return executeStartDeliveryStreamEncryption(request);},public StartDeliveryStreamEncryptionResult startDeliveryStreamEncryptionStartDeliveryStreamEncryptionRequest request request  beforeClientExecutionrequestreturn executeStartDeliveryStreamEncryptionrequest
"public static double getExcelDate(LocalDateTime date, boolean use1904windowing) {int year = date.getYear();int dayOfYear = date.getDayOfYear();int hour = date.getHour();int minute = date.getMinute();int second = date.getSecond();int milliSecond = date.getNano()/1_000_000;return internalGetExcelDate(year, dayOfYear, hour, minute, second, milliSecond, use1904windowing);}",public static double getExcelDateLocalDateTime date boolean use1904windowing int year  dategetYearint dayOfYear  dategetDayOfYearint hour  dategetHourint minute  dategetMinuteint second  dategetSecondint milliSecond  dategetNano1000000return internalGetExcelDateyear dayOfYear hour minute second milliSecond use1904windowing
public UpdateFleetAttributesResult updateFleetAttributes(UpdateFleetAttributesRequest request) {request = beforeClientExecution(request);return executeUpdateFleetAttributes(request);},public UpdateFleetAttributesResult updateFleetAttributesUpdateFleetAttributesRequest request request  beforeClientExecutionrequestreturn executeUpdateFleetAttributesrequest
"public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics termStats) {final long df = termStats.docFreq();final long docCount = collectionStats.docCount();final float idf = idf(df, docCount);return Explanation.match(idf, ""idf(docFreq, docCount)"",Explanation.match(df, ""docFreq, number of documents containing term""),Explanation.match(docCount, ""docCount, total number of documents with field""));}",public Explanation idfExplainCollectionStatistics collectionStats TermStatistics termStats final long df  termStatsdocFreqfinal long docCount  collectionStatsdocCountfinal float idf  idfdf docCountreturn Explanationmatchidf idfdocFreq docCountExplanationmatchdf docFreq number of documents containing termExplanationmatchdocCount docCount total number of documents with field
public CreateGroupMembershipResult createGroupMembership(CreateGroupMembershipRequest request) {request = beforeClientExecution(request);return executeCreateGroupMembership(request);},public CreateGroupMembershipResult createGroupMembershipCreateGroupMembershipRequest request request  beforeClientExecutionrequestreturn executeCreateGroupMembershiprequest
"public GrowableWriter(int startBitsPerValue, int valueCount, float acceptableOverheadRatio) {this.acceptableOverheadRatio = acceptableOverheadRatio;current = PackedInts.getMutable(valueCount, startBitsPerValue, this.acceptableOverheadRatio);currentMask = mask(current.getBitsPerValue());}",public GrowableWriterint startBitsPerValue int valueCount float acceptableOverheadRatio thisacceptableOverheadRatio  acceptableOverheadRatiocurrent  PackedIntsgetMutablevalueCount startBitsPerValue thisacceptableOverheadRatiocurrentMask  maskcurrentgetBitsPerValue
public AddJobFlowStepsResult addJobFlowSteps(AddJobFlowStepsRequest request) {request = beforeClientExecution(request);return executeAddJobFlowSteps(request);},public AddJobFlowStepsResult addJobFlowStepsAddJobFlowStepsRequest request request  beforeClientExecutionrequestreturn executeAddJobFlowStepsrequest
public RecalcIdRecord() {_reserved0 = 0;_engineId = 0;},public RecalcIdRecord reserved0  0engineId  0
"public boolean matches() {matchFound = matchesImpl(address, input, matchOffsets);if (matchFound) {findPos = matchOffsets[1];}return matchFound;}",public boolean matches matchFound  matchesImpladdress input matchOffsetsif matchFound findPos  matchOffsets1return matchFound
"public FieldMaskingSpanQuery(SpanQuery maskedQuery, String maskedField) {this.maskedQuery = Objects.requireNonNull(maskedQuery);this.field = Objects.requireNonNull(maskedField);}",public FieldMaskingSpanQuerySpanQuery maskedQuery String maskedField thismaskedQuery  ObjectsrequireNonNullmaskedQuerythisfield  ObjectsrequireNonNullmaskedField
public void print(float fnum) {print(String.valueOf(fnum));},public void printfloat fnum printStringvalueOffnum
"public int addBSERecord(EscherBSERecord e) {createDrawingGroup();escherBSERecords.add( e );int dgLoc = findFirstRecordLocBySid(DrawingGroupRecord.sid);DrawingGroupRecord drawingGroup = (DrawingGroupRecord) getRecords().get( dgLoc );EscherContainerRecord dggContainer = (EscherContainerRecord) drawingGroup.getEscherRecord( 0 );EscherContainerRecord bstoreContainer;if (dggContainer.getChild( 1 ).getRecordId() == EscherContainerRecord.BSTORE_CONTAINER ){bstoreContainer = (EscherContainerRecord) dggContainer.getChild( 1 );} else {bstoreContainer = new EscherContainerRecord();bstoreContainer.setRecordId( EscherContainerRecord.BSTORE_CONTAINER );List<EscherRecord> childRecords = dggContainer.getChildRecords();childRecords.add(1, bstoreContainer);dggContainer.setChildRecords(childRecords);}bstoreContainer.setOptions( (short) ( (escherBSERecords.size() << 4) | 0xF ) );bstoreContainer.addChildRecord( e );return escherBSERecords.size();}",public int addBSERecordEscherBSERecord e createDrawingGroupescherBSERecordsadd e int dgLoc  findFirstRecordLocBySidDrawingGroupRecordsidDrawingGroupRecord drawingGroup  DrawingGroupRecord getRecordsget dgLoc EscherContainerRecord dggContainer  EscherContainerRecord drawingGroupgetEscherRecord 0 EscherContainerRecord bstoreContainerif dggContainergetChild 1 getRecordId  EscherContainerRecordBSTORECONTAINER bstoreContainer  EscherContainerRecord dggContainergetChild 1  else bstoreContainer  new EscherContainerRecordbstoreContainersetRecordId EscherContainerRecordBSTORECONTAINER ListEscherRecord childRecords  dggContainergetChildRecordschildRecordsadd1 bstoreContainerdggContainersetChildRecordschildRecordsbstoreContainersetOptions short  escherBSERecordssize  4  0xF  bstoreContaineraddChildRecord e return escherBSERecordssize
"public CreateLoadBalancerListenersRequest(String loadBalancerName, java.util.List<Listener> listeners) {setLoadBalancerName(loadBalancerName);setListeners(listeners);}",public CreateLoadBalancerListenersRequestString loadBalancerName javautilListListener listeners setLoadBalancerNameloadBalancerNamesetListenerslisteners
public DeleteDBClusterEndpointResult deleteDBClusterEndpoint(DeleteDBClusterEndpointRequest request) {request = beforeClientExecution(request);return executeDeleteDBClusterEndpoint(request);},public DeleteDBClusterEndpointResult deleteDBClusterEndpointDeleteDBClusterEndpointRequest request request  beforeClientExecutionrequestreturn executeDeleteDBClusterEndpointrequest
public DescribeIngestionResult describeIngestion(DescribeIngestionRequest request) {request = beforeClientExecution(request);return executeDescribeIngestion(request);},public DescribeIngestionResult describeIngestionDescribeIngestionRequest request request  beforeClientExecutionrequestreturn executeDescribeIngestionrequest
public PutCompositeAlarmResult putCompositeAlarm(PutCompositeAlarmRequest request) {request = beforeClientExecution(request);return executePutCompositeAlarm(request);},public PutCompositeAlarmResult putCompositeAlarmPutCompositeAlarmRequest request request  beforeClientExecutionrequestreturn executePutCompositeAlarmrequest
public Collection<ParseTree> evaluate(ParseTree t) {List<ParseTree> nodes = new ArrayList<ParseTree>();for (Tree c : Trees.getChildren(t)) {if ( c instanceof ParserRuleContext ) {ParserRuleContext ctx = (ParserRuleContext)c;if ( (ctx.getRuleIndex() == ruleIndex && !invert) ||(ctx.getRuleIndex() != ruleIndex && invert) ){nodes.add(ctx);}}}return nodes;},public CollectionParseTree evaluateParseTree t ListParseTree nodes  new ArrayListParseTreefor Tree c  TreesgetChildrent if  c instanceof ParserRuleContext  ParserRuleContext ctx  ParserRuleContextcif  ctxgetRuleIndex  ruleIndex  invert ctxgetRuleIndex  ruleIndex  invert nodesaddctxreturn nodes
public CreateKeyPairResult createKeyPair(CreateKeyPairRequest request) {request = beforeClientExecution(request);return executeCreateKeyPair(request);},public CreateKeyPairResult createKeyPairCreateKeyPairRequest request request  beforeClientExecutionrequestreturn executeCreateKeyPairrequest
public DiffCommand setOldTree(AbstractTreeIterator oldTree) {this.oldTree = oldTree;return this;},public DiffCommand setOldTreeAbstractTreeIterator oldTree thisoldTree  oldTreereturn this
public GetDeploymentConfigResult getDeploymentConfig(GetDeploymentConfigRequest request) {request = beforeClientExecution(request);return executeGetDeploymentConfig(request);},public GetDeploymentConfigResult getDeploymentConfigGetDeploymentConfigRequest request request  beforeClientExecutionrequestreturn executeGetDeploymentConfigrequest
"public static void addNewSheetRecord(List<RecordBase> sheetRecords, RecordBase newRecord) {int index = findSheetInsertPos(sheetRecords, newRecord.getClass());sheetRecords.add(index, newRecord);}",public static void addNewSheetRecordListRecordBase sheetRecords RecordBase newRecord int index  findSheetInsertPossheetRecords newRecordgetClasssheetRecordsaddindex newRecord
"public final void restoreState(State state) {if (state == null)  return;do {AttributeImpl targetImpl = attributeImpls.get(state.attribute.getClass());if (targetImpl == null) {throw new IllegalArgumentException(""State contains AttributeImpl of type "" +state.attribute.getClass().getName() + "" that is not in in this AttributeSource"");}state.attribute.copyTo(targetImpl);state = state.next;} while (state != null);}",public final void restoreStateState state if state  null  returndo AttributeImpl targetImpl  attributeImplsgetstateattributegetClassif targetImpl  null throw new IllegalArgumentExceptionState contains AttributeImpl of type  stateattributegetClassgetName   that is not in in this AttributeSourcestateattributecopyTotargetImplstate  statenext while state  null
public SendVoiceMessageResult sendVoiceMessage(SendVoiceMessageRequest request) {request = beforeClientExecution(request);return executeSendVoiceMessage(request);},public SendVoiceMessageResult sendVoiceMessageSendVoiceMessageRequest request request  beforeClientExecutionrequestreturn executeSendVoiceMessagerequest
public DescribeLoadBalancersResult describeLoadBalancers() {return describeLoadBalancers(new DescribeLoadBalancersRequest());},public DescribeLoadBalancersResult describeLoadBalancers return describeLoadBalancersnew DescribeLoadBalancersRequest
public DisassociateTransitGatewayRouteTableResult disassociateTransitGatewayRouteTable(DisassociateTransitGatewayRouteTableRequest request) {request = beforeClientExecution(request);return executeDisassociateTransitGatewayRouteTable(request);},public DisassociateTransitGatewayRouteTableResult disassociateTransitGatewayRouteTableDisassociateTransitGatewayRouteTableRequest request request  beforeClientExecutionrequestreturn executeDisassociateTransitGatewayRouteTablerequest
"public String segString(Directory dir) {StringBuilder b = new StringBuilder();b.append(""MergeSpec:\n"");final int count = merges.size();for(int i=0;i<count;i++) {b.append(""  "").append(1 + i).append("": "").append(merges.get(i).segString());}return b.toString();}",public String segStringDirectory dir StringBuilder b  new StringBuilderbappendMergeSpecnfinal int count  mergessizeforint i0icounti bappend  append1  iappend appendmergesgetisegStringreturn btoString
public DetachNetworkInterfaceResult detachNetworkInterface(DetachNetworkInterfaceRequest request) {request = beforeClientExecution(request);return executeDetachNetworkInterface(request);},public DetachNetworkInterfaceResult detachNetworkInterfaceDetachNetworkInterfaceRequest request request  beforeClientExecutionrequestreturn executeDetachNetworkInterfacerequest
public ObjectInserter newObjectInserter() {return getObjectDatabase().newInserter();},public ObjectInserter newObjectInserter return getObjectDatabasenewInserter
public Class<? extends Record> getRecordClass() {return _c.getDeclaringClass();},public Class extends Record getRecordClass return cgetDeclaringClass
public StringBufferInputStream(String str) {if (str == null) {throw new NullPointerException();}buffer = str;count = str.length();},public StringBufferInputStreamString str if str  null throw new NullPointerExceptionbuffer  strcount  strlength
public DeletedRef3DPtg(LittleEndianInput in)  {field_1_index_extern_sheet = in.readUShort();unused1 = in.readInt();},public DeletedRef3DPtgLittleEndianInput in  field1indexexternsheet  inreadUShortunused1  inreadInt
public CellRangeAddress get(int index) {checkIndex(index);return _mergedRegions.get(index);},public CellRangeAddress getint index checkIndexindexreturn mergedRegionsgetindex
public boolean removePushRefSpec(RefSpec s) {return push.remove(s);},public boolean removePushRefSpecRefSpec s return pushremoves
public CreateJobResult createJob(CreateJobRequest request) {request = beforeClientExecution(request);return executeCreateJob(request);},public CreateJobResult createJobCreateJobRequest request request  beforeClientExecutionrequestreturn executeCreateJobrequest
public CreateResourceResult createResource(CreateResourceRequest request) {request = beforeClientExecution(request);return executeCreateResource(request);},public CreateResourceResult createResourceCreateResourceRequest request request  beforeClientExecutionrequestreturn executeCreateResourcerequest
"public String log() {return "" (TERM = "" + TERM + "")"" +"" (CT = "" + CT +"")"" +"" (RV = "" + RV +"")"" +"" (R1 = "" + R1 +"")"" +"" (R2 = "" + R2 +"")"" ;}",public String log return  TERM    TERM    CT    CT   RV    RV   R1    R1   R2    R2  
public VerifyDomainIdentityResult verifyDomainIdentity(VerifyDomainIdentityRequest request) {request = beforeClientExecution(request);return executeVerifyDomainIdentity(request);},public VerifyDomainIdentityResult verifyDomainIdentityVerifyDomainIdentityRequest request request  beforeClientExecutionrequestreturn executeVerifyDomainIdentityrequest
public void remove(int index) {checkIndex(index);_mergedRegions.remove(index);},public void removeint index checkIndexindexmergedRegionsremoveindex
"public static org.apache.poi.hssf.record.Record [] createRecord(RecordInputStream in) {Record record = createSingleRecord(in);if (record instanceof DBCellRecord) {return new Record[] { null, };}if (record instanceof RKRecord) {return new Record[] { convertToNumberRecord((RKRecord) record), };}if (record instanceof MulRKRecord) {return convertRKRecords((MulRKRecord)record);}return new Record[] { record, };}",public static orgapachepoihssfrecordRecord  createRecordRecordInputStream in Record record  createSingleRecordinif record instanceof DBCellRecord return new Record  null if record instanceof RKRecord return new Record  convertToNumberRecordRKRecord record if record instanceof MulRKRecord return convertRKRecordsMulRKRecordrecordreturn new Record  record 
public DeleteIpGroupResult deleteIpGroup(DeleteIpGroupRequest request) {request = beforeClientExecution(request);return executeDeleteIpGroup(request);},public DeleteIpGroupResult deleteIpGroupDeleteIpGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteIpGrouprequest
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {double d;try {ValueEval ve = OperandResolver.getSingleValue(arg0, srcRowIndex, srcColumnIndex);d = OperandResolver.coerceValueToDouble(ve);} catch (EvaluationException e) {return e.getErrorEval();}if (d == 0.0) { return NumberEval.ZERO;}return new NumberEval(-d);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 double dtry ValueEval ve  OperandResolvergetSingleValuearg0 srcRowIndex srcColumnIndexd  OperandResolvercoerceValueToDoubleve catch EvaluationException e return egetErrorEvalif d  00  return NumberEvalZEROreturn new NumberEvald
"public String toString() {return ""action_""+ruleIndex+"":""+actionIndex;}",public String toString return actionruleIndexactionIndex
public StopFleetResult stopFleet(StopFleetRequest request) {request = beforeClientExecution(request);return executeStopFleet(request);},public StopFleetResult stopFleetStopFleetRequest request request  beforeClientExecutionrequestreturn executeStopFleetrequest
"public String toString() {return(""TermStats: term="" + termtext.utf8ToString() + "" docFreq="" + docFreq + "" totalTermFreq="" + totalTermFreq);}",public String toString returnTermStats term  termtextutf8ToString   docFreq  docFreq   totalTermFreq  totalTermFreq
final public Token getNextToken() {if (token.next != null) token = token.next;else token = token.next = token_source.getNextToken();jj_ntk = -1;jj_gen++;return token;},final public Token getNextToken if tokennext  null token  tokennextelse token  tokennext  tokensourcegetNextTokenjjntk  1jjgenreturn token
public GetLabelDetectionResult getLabelDetection(GetLabelDetectionRequest request) {request = beforeClientExecution(request);return executeGetLabelDetection(request);},public GetLabelDetectionResult getLabelDetectionGetLabelDetectionRequest request request  beforeClientExecutionrequestreturn executeGetLabelDetectionrequest
public synchronized IndexCommit getIndexCommit(long gen) {return indexCommits.get(gen);},public synchronized IndexCommit getIndexCommitlong gen return indexCommitsgetgen
public ListMetricsResult listMetrics(ListMetricsRequest request) {request = beforeClientExecution(request);return executeListMetrics(request);},public ListMetricsResult listMetricsListMetricsRequest request request  beforeClientExecutionrequestreturn executeListMetricsrequest
"public void delete() {throw new UnsupportedOperationException(""This IndexCommit does not support deletions"");}",public void delete throw new UnsupportedOperationExceptionThis IndexCommit does not support deletions
"public ByteBuffer putChar(int index, char value) {checkIndex(index, SizeOf.CHAR);Memory.pokeShort(backingArray, offset + index, (short) value, order);return this;}",public ByteBuffer putCharint index char value checkIndexindex SizeOfCHARMemorypokeShortbackingArray offset  index short value orderreturn this
public CreateBasePathMappingResult createBasePathMapping(CreateBasePathMappingRequest request) {request = beforeClientExecution(request);return executeCreateBasePathMapping(request);},public CreateBasePathMappingResult createBasePathMappingCreateBasePathMappingRequest request request  beforeClientExecutionrequestreturn executeCreateBasePathMappingrequest
"public synchronized StringBuffer insert(int index, CharSequence s) {insert0(index, s == null ? ""null"" : s.toString());return this;}",public synchronized StringBuffer insertint index CharSequence s insert0index s  null  null  stoStringreturn this
public DescribeDBInstancesResult describeDBInstances(DescribeDBInstancesRequest request) {request = beforeClientExecution(request);return executeDescribeDBInstances(request);},public DescribeDBInstancesResult describeDBInstancesDescribeDBInstancesRequest request request  beforeClientExecutionrequestreturn executeDescribeDBInstancesrequest
"public ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {switch (args.length) {case 2:return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1]);case 3:return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2]);case 4:return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2], args[3]);}return ErrorEval.VALUE_INVALID;}",public ValueEval evaluateValueEval args int srcRowIndex int srcColumnIndex switch argslength case 2return evaluatesrcRowIndex srcColumnIndex args0 args1case 3return evaluatesrcRowIndex srcColumnIndex args0 args1 args2case 4return evaluatesrcRowIndex srcColumnIndex args0 args1 args2 args3return ErrorEvalVALUEINVALID
@Override public boolean add(E object) {throw new UnsupportedOperationException();},Override public boolean addE object throw new UnsupportedOperationException
public Collection<TrackingRefUpdate> getTrackingRefUpdates() {return Collections.unmodifiableCollection(updates.values());},public CollectionTrackingRefUpdate getTrackingRefUpdates return CollectionsunmodifiableCollectionupdatesvalues
"public ConfirmProductInstanceRequest(String productCode, String instanceId) {setProductCode(productCode);setInstanceId(instanceId);}",public ConfirmProductInstanceRequestString productCode String instanceId setProductCodeproductCodesetInstanceIdinstanceId
"public AnalyzerFactory(List<CharFilterFactory> charFilterFactories,TokenizerFactory tokenizerFactory,List<TokenFilterFactory> tokenFilterFactories) {this.charFilterFactories = charFilterFactories;assert null != tokenizerFactory;this.tokenizerFactory = tokenizerFactory;this.tokenFilterFactories = tokenFilterFactories;}",public AnalyzerFactoryListCharFilterFactory charFilterFactoriesTokenizerFactory tokenizerFactoryListTokenFilterFactory tokenFilterFactories thischarFilterFactories  charFilterFactoriesassert null  tokenizerFactorythistokenizerFactory  tokenizerFactorythistokenFilterFactories  tokenFilterFactories
public DeleteRestApiResult deleteRestApi(DeleteRestApiRequest request) {request = beforeClientExecution(request);return executeDeleteRestApi(request);},public DeleteRestApiResult deleteRestApiDeleteRestApiRequest request request  beforeClientExecutionrequestreturn executeDeleteRestApirequest
"public final ByteBuffer put(byte[] src) {return put(src, 0, src.length);}",public final ByteBuffer putbyte src return putsrc 0 srclength
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[PROT4REV]\n"");buffer.append(""    .options = "").append(HexDump.shortToHex(_options)).append(""\n"");buffer.append(""[/PROT4REV]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendPROT4REVnbufferappend    options  appendHexDumpshortToHexoptionsappendnbufferappendPROT4REVnreturn buffertoString
"public void setTokenSeparator(String tokenSeparator) {this.tokenSeparator = null == tokenSeparator ? """" : tokenSeparator;}",public void setTokenSeparatorString tokenSeparator thistokenSeparator  null  tokenSeparator    tokenSeparator
@Override public ListIterator<E> listIterator() {synchronized (mutex) {return list.listIterator();}},Override public ListIteratorE listIterator synchronized mutex return listlistIterator
"public FileOutputStream(File file) throws FileNotFoundException {this(file, false);}",public FileOutputStreamFile file throws FileNotFoundException thisfile false
public SetInstanceHealthResult setInstanceHealth(SetInstanceHealthRequest request) {request = beforeClientExecution(request);return executeSetInstanceHealth(request);},public SetInstanceHealthResult setInstanceHealthSetInstanceHealthRequest request request  beforeClientExecutionrequestreturn executeSetInstanceHealthrequest
public boolean isUnderflow() {return this.type == TYPE_UNDERFLOW;},public boolean isUnderflow return thistype  TYPEUNDERFLOW
public PutRecordsResult putRecords(PutRecordsRequest request) {request = beforeClientExecution(request);return executePutRecords(request);},public PutRecordsResult putRecordsPutRecordsRequest request request  beforeClientExecutionrequestreturn executePutRecordsrequest
public synchronized boolean isIndeterminate() {return mIndeterminate;},public synchronized boolean isIndeterminate return mIndeterminate
"public NavigableMap<K, V> headMap(K toExclusive) {return subMap(null, NO_BOUND, toExclusive, EXCLUSIVE);}",public NavigableMapK V headMapK toExclusive return subMapnull NOBOUND toExclusive EXCLUSIVE
"public final boolean updateValue(ValueEval value) {if (value == null) {throw new IllegalArgumentException(""Did not expect to update to null"");}boolean result = !areValuesEqual(_value, value);_value = value;return result;}",public final boolean updateValueValueEval value if value  null throw new IllegalArgumentExceptionDid not expect to update to nullboolean result  areValuesEqualvalue valuevalue  valuereturn result
public ListTablesResult listTables() {return listTables(new ListTablesRequest());},public ListTablesResult listTables return listTablesnew ListTablesRequest
"public ValueEval evaluate(ValueEval[] args, OperationEvaluationContext ec) {if (args.length != 1) {return ErrorEval.VALUE_INVALID;}int val;try {val = evaluateArgParity(args[0], ec.getRowIndex(), ec.getColumnIndex());} catch (EvaluationException e) {return e.getErrorEval();}return BoolEval.valueOf(val == _desiredParity);}",public ValueEval evaluateValueEval args OperationEvaluationContext ec if argslength  1 return ErrorEvalVALUEINVALIDint valtry val  evaluateArgParityargs0 ecgetRowIndex ecgetColumnIndex catch EvaluationException e return egetErrorEvalreturn BoolEvalvalueOfval  desiredParity
public char charAt(int index) {return (char) (buffer[startPtr + index] & 0xff);},public char charAtint index return char bufferstartPtr  index  0xff
"public CFHeaderRecord(CellRangeAddress[] regions, int nRules) {super(regions, nRules);}",public CFHeaderRecordCellRangeAddress regions int nRules superregions nRules
"public LayoutParams(int width, int height) {super(width, height);}",public LayoutParamsint width int height superwidth height
"public String toString() {return ""FormatAndBits(format="" + format + "" bitsPerValue="" + bitsPerValue + "")"";}",public String toString return FormatAndBitsformat  format   bitsPerValue  bitsPerValue  
"final public SrndQuery TopSrndQuery() throws ParseException {SrndQuery q;q = FieldsQuery();jj_consume_token(0);{if (true) return q;}throw new Error(""Missing return statement in function"");}",final public SrndQuery TopSrndQuery throws ParseException SrndQuery qq  FieldsQueryjjconsumetoken0if true return qthrow new ErrorMissing return statement in function
public final ObjectId copy() {if (getClass() == ObjectId.class)return (ObjectId) this;return new ObjectId(this);},public final ObjectId copy if getClass  ObjectIdclassreturn ObjectId thisreturn new ObjectIdthis
public DescribeReservedCacheNodesResult describeReservedCacheNodes() {return describeReservedCacheNodes(new DescribeReservedCacheNodesRequest());},public DescribeReservedCacheNodesResult describeReservedCacheNodes return describeReservedCacheNodesnew DescribeReservedCacheNodesRequest
public StringBuilder append(char[] chars) {append0(chars);return this;},public StringBuilder appendchar chars append0charsreturn this
public final boolean matches(char c) {return start <= c && c <= end;},public final boolean matcheschar c return start  c  c  end
public DetachVolumeRequest(String volumeId) {setVolumeId(volumeId);},public DetachVolumeRequestString volumeId setVolumeIdvolumeId
"public final PersonIdent getCommitterIdent() {final byte[] raw = buffer;final int nameB = RawParseUtils.committer(raw, 0);if (nameB < 0)return null;return RawParseUtils.parsePersonIdent(raw, nameB);}",public final PersonIdent getCommitterIdent final byte raw  bufferfinal int nameB  RawParseUtilscommitterraw 0if nameB  0return nullreturn RawParseUtilsparsePersonIdentraw nameB
"public SnowballPorterFilterFactory(Map<String,String> args) {super(args);language = get(args, ""language"", ""English"");wordFiles = get(args, PROTECTED_TOKENS);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public SnowballPorterFilterFactoryMapStringString args superargslanguage  getargs language EnglishwordFiles  getargs PROTECTEDTOKENSif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public String toFormulaString(String[] operands) {StringBuilder buffer = new StringBuilder();buffer.append(operands[ 0 ]);buffer.append(""="");buffer.append(operands[ 1 ]);return buffer.toString();}",public String toFormulaStringString operands StringBuilder buffer  new StringBuilderbufferappendoperands 0 bufferappendbufferappendoperands 1 return buffertoString
"public String getType(int script, int ruleStatus) {switch (ruleStatus) {case RuleBasedBreakIterator.WORD_IDEO:return WORD_IDEO;case RuleBasedBreakIterator.WORD_KANA:return script == UScript.HIRAGANA ? WORD_HIRAGANA : WORD_KATAKANA;case RuleBasedBreakIterator.WORD_LETTER:return script == UScript.HANGUL ? WORD_HANGUL : WORD_LETTER;case RuleBasedBreakIterator.WORD_NUMBER:return WORD_NUMBER;case EMOJI_SEQUENCE_STATUS:return WORD_EMOJI;default: return ""<OTHER>"";}}",public String getTypeint script int ruleStatus switch ruleStatus case RuleBasedBreakIteratorWORDIDEOreturn WORDIDEOcase RuleBasedBreakIteratorWORDKANAreturn script  UScriptHIRAGANA  WORDHIRAGANA  WORDKATAKANAcase RuleBasedBreakIteratorWORDLETTERreturn script  UScriptHANGUL  WORDHANGUL  WORDLETTERcase RuleBasedBreakIteratorWORDNUMBERreturn WORDNUMBERcase EMOJISEQUENCESTATUSreturn WORDEMOJIdefault return OTHER
"public static TopDocs merge(int start, int topN, TopDocs[] shardHits) {return mergeAux(null, start, topN, shardHits, DEFAULT_TIE_BREAKER);}",public static TopDocs mergeint start int topN TopDocs shardHits return mergeAuxnull start topN shardHits DEFAULTTIEBREAKER
public EnableDomainTransferLockResult enableDomainTransferLock(EnableDomainTransferLockRequest request) {request = beforeClientExecution(request);return executeEnableDomainTransferLock(request);},public EnableDomainTransferLockResult enableDomainTransferLockEnableDomainTransferLockRequest request request  beforeClientExecutionrequestreturn executeEnableDomainTransferLockrequest
public DeleteConfigurationProfileResult deleteConfigurationProfile(DeleteConfigurationProfileRequest request) {request = beforeClientExecution(request);return executeDeleteConfigurationProfile(request);},public DeleteConfigurationProfileResult deleteConfigurationProfileDeleteConfigurationProfileRequest request request  beforeClientExecutionrequestreturn executeDeleteConfigurationProfilerequest
public DescribeExpressionsResult describeExpressions(DescribeExpressionsRequest request) {request = beforeClientExecution(request);return executeDescribeExpressions(request);},public DescribeExpressionsResult describeExpressionsDescribeExpressionsRequest request request  beforeClientExecutionrequestreturn executeDescribeExpressionsrequest
public Ptg[] getResult() {return _ptgs;},public Ptg getResult return ptgs
public GetDistributionConfigResult getDistributionConfig(GetDistributionConfigRequest request) {request = beforeClientExecution(request);return executeGetDistributionConfig(request);},public GetDistributionConfigResult getDistributionConfigGetDistributionConfigRequest request request  beforeClientExecutionrequestreturn executeGetDistributionConfigrequest
"public ShortBuffer get(short[] dst) {return get(dst, 0, dst.length);}",public ShortBuffer getshort dst return getdst 0 dstlength
public GetMetricWidgetImageResult getMetricWidgetImage(GetMetricWidgetImageRequest request) {request = beforeClientExecution(request);return executeGetMetricWidgetImage(request);},public GetMetricWidgetImageResult getMetricWidgetImageGetMetricWidgetImageRequest request request  beforeClientExecutionrequestreturn executeGetMetricWidgetImagerequest
public UpdateVoiceConnectorGroupResult updateVoiceConnectorGroup(UpdateVoiceConnectorGroupRequest request) {request = beforeClientExecution(request);return executeUpdateVoiceConnectorGroup(request);},public UpdateVoiceConnectorGroupResult updateVoiceConnectorGroupUpdateVoiceConnectorGroupRequest request request  beforeClientExecutionrequestreturn executeUpdateVoiceConnectorGrouprequest
"public void add(SortField sortField) {map.put(sortField.getField(), sortField);}",public void addSortField sortField mapputsortFieldgetField sortField
public Daemon getDaemon() {return daemon;},public Daemon getDaemon return daemon
public CreateVpcPeeringConnectionResult createVpcPeeringConnection(CreateVpcPeeringConnectionRequest request) {request = beforeClientExecution(request);return executeCreateVpcPeeringConnection(request);},public CreateVpcPeeringConnectionResult createVpcPeeringConnectionCreateVpcPeeringConnectionRequest request request  beforeClientExecutionrequestreturn executeCreateVpcPeeringConnectionrequest
"public String toFormulaString(String[] operands) {StringBuilder buffer = new StringBuilder();buffer.append(operands[ 0 ]);buffer.append(""*"");buffer.append(operands[ 1 ]);return buffer.toString();}",public String toFormulaStringString operands StringBuilder buffer  new StringBuilderbufferappendoperands 0 bufferappendbufferappendoperands 1 return buffertoString
public DescribeExclusionsResult describeExclusions(DescribeExclusionsRequest request) {request = beforeClientExecution(request);return executeDescribeExclusions(request);},public DescribeExclusionsResult describeExclusionsDescribeExclusionsRequest request request  beforeClientExecutionrequestreturn executeDescribeExclusionsrequest
public SearchNetworkProfilesResult searchNetworkProfiles(SearchNetworkProfilesRequest request) {request = beforeClientExecution(request);return executeSearchNetworkProfiles(request);},public SearchNetworkProfilesResult searchNetworkProfilesSearchNetworkProfilesRequest request request  beforeClientExecutionrequestreturn executeSearchNetworkProfilesrequest
public LooseRef peel(ObjectIdRef newLeaf) {throw new UnsupportedOperationException();},public LooseRef peelObjectIdRef newLeaf throw new UnsupportedOperationException
public void println(float f) {println(String.valueOf(f));},public void printlnfloat f printlnStringvalueOff
"public PurchaseReservedInstancesOfferingRequest(String reservedInstancesOfferingId, Integer instanceCount) {setReservedInstancesOfferingId(reservedInstancesOfferingId);setInstanceCount(instanceCount);}",public PurchaseReservedInstancesOfferingRequestString reservedInstancesOfferingId Integer instanceCount setReservedInstancesOfferingIdreservedInstancesOfferingIdsetInstanceCountinstanceCount
public Set<String> getUntracked() {return Collections.unmodifiableSet(diff.getUntracked());},public SetString getUntracked return CollectionsunmodifiableSetdiffgetUntracked
public String getTag() {return tag;},public String getTag return tag
"public void buildFieldConfig(FieldConfig fieldConfig) {DateTools.Resolution dateRes = null;Map<CharSequence, DateTools.Resolution> dateResMap = this.config.get(ConfigurationKeys.FIELD_DATE_RESOLUTION_MAP);if (dateResMap != null) {dateRes = dateResMap.get(fieldConfig.getField());}if (dateRes == null) {dateRes = this.config.get(ConfigurationKeys.DATE_RESOLUTION);}if (dateRes != null) {fieldConfig.set(ConfigurationKeys.DATE_RESOLUTION, dateRes);}}",public void buildFieldConfigFieldConfig fieldConfig DateToolsResolution dateRes  nullMapCharSequence DateToolsResolution dateResMap  thisconfiggetConfigurationKeysFIELDDATERESOLUTIONMAPif dateResMap  null dateRes  dateResMapgetfieldConfiggetFieldif dateRes  null dateRes  thisconfiggetConfigurationKeysDATERESOLUTIONif dateRes  null fieldConfigsetConfigurationKeysDATERESOLUTION dateRes
public String toFormulaString() {return String.valueOf(getValue());},public String toFormulaString return StringvalueOfgetValue
public Bits getAllGroupHeads() {return matchingGroupHeads;},public Bits getAllGroupHeads return matchingGroupHeads
"public int serialize( int offset, byte[] data, EscherSerializationListener listener ) {listener.beforeRecordSerialize( offset, getRecordId(), this );int pos = offset;LittleEndian.putShort( data, pos, getOptions() );     pos += 2;LittleEndian.putShort( data, pos, getRecordId() );    pos += 2;int remainingBytes =  getRecordSize() - 8;LittleEndian.putInt( data, pos, remainingBytes );          pos += 4;LittleEndian.putInt( data, pos, field_1_color1 );          pos += 4;LittleEndian.putInt( data, pos, field_2_color2 );          pos += 4;LittleEndian.putInt( data, pos, field_3_color3 );          pos += 4;LittleEndian.putInt( data, pos, field_4_color4 );          pos += 4;listener.afterRecordSerialize( pos, getRecordId(), pos - offset, this );return getRecordSize();}",public int serialize int offset byte data EscherSerializationListener listener  listenerbeforeRecordSerialize offset getRecordId this int pos  offsetLittleEndianputShort data pos getOptions      pos  2LittleEndianputShort data pos getRecordId     pos  2int remainingBytes   getRecordSize  8LittleEndianputInt data pos remainingBytes           pos  4LittleEndianputInt data pos field1color1           pos  4LittleEndianputInt data pos field2color2           pos  4LittleEndianputInt data pos field3color3           pos  4LittleEndianputInt data pos field4color4           pos  4listenerafterRecordSerialize pos getRecordId pos  offset this return getRecordSize
"public boolean add(E object) {return backingMap.put(object, Boolean.TRUE) == null;}",public boolean addE object return backingMapputobject BooleanTRUE  null
public void setBinaryFileThreshold(int threshold) {this.binaryFileThreshold = threshold;},public void setBinaryFileThresholdint threshold thisbinaryFileThreshold  threshold
public void setParams(String params) {super.setParams(params);pauseMSec = (long) (1000.0*Float.parseFloat(params));},public void setParamsString params supersetParamsparamspauseMSec  long 10000FloatparseFloatparams
"public PerfTask(PerfRunData runData) {this();this.runData = runData;Config config = runData.getConfig();this.maxDepthLogStart = config.get(""task.max.depth.log"",0);String logStepAtt = ""log.step"";String taskLogStepAtt = ""log.step."" + name;if (config.get(taskLogStepAtt, null) != null) {logStepAtt = taskLogStepAtt;}logStep = config.get(logStepAtt, DEFAULT_LOG_STEP);if (logStep <= 0) {logStep = Integer.MAX_VALUE;}}",public PerfTaskPerfRunData runData thisthisrunData  runDataConfig config  runDatagetConfigthismaxDepthLogStart  configgettaskmaxdepthlog0String logStepAtt  logstepString taskLogStepAtt  logstep  nameif configgettaskLogStepAtt null  null logStepAtt  taskLogStepAttlogStep  configgetlogStepAtt DEFAULTLOGSTEPif logStep  0 logStep  IntegerMAXVALUE
public void setMBPerSec(double mbPerSec) {this.mbPerSec = mbPerSec;minPauseCheckBytes = (long) ((MIN_PAUSE_CHECK_MSEC / 1000.0) * mbPerSec * 1024 * 1024);},public void setMBPerSecdouble mbPerSec thismbPerSec  mbPerSecminPauseCheckBytes  long MINPAUSECHECKMSEC  10000  mbPerSec  1024  1024
"public ConfirmSubscriptionRequest(String topicArn, String token, String authenticateOnUnsubscribe) {setTopicArn(topicArn);setToken(token);setAuthenticateOnUnsubscribe(authenticateOnUnsubscribe);}",public ConfirmSubscriptionRequestString topicArn String token String authenticateOnUnsubscribe setTopicArntopicArnsetTokentokensetAuthenticateOnUnsubscribeauthenticateOnUnsubscribe
public String getHostName() {return hostName;},public String getHostName return hostName
public StartMonitoringMemberResult startMonitoringMember(StartMonitoringMemberRequest request) {request = beforeClientExecution(request);return executeStartMonitoringMember(request);},public StartMonitoringMemberResult startMonitoringMemberStartMonitoringMemberRequest request request  beforeClientExecutionrequestreturn executeStartMonitoringMemberrequest
public <T extends EscherProperty> T lookup( int propId ) {return (T)properties.stream().filter(p -> p.getPropertyNumber() == propId).findFirst().orElse(null);},public T extends EscherProperty T lookup int propId  return Tpropertiesstreamfilterp  pgetPropertyNumber  propIdfindFirstorElsenull
public boolean isExpectingOldObjectId() {return expectedOldObjectId != null;},public boolean isExpectingOldObjectId return expectedOldObjectId  null
"public int compareTo(ScoreTerm other) {if (term.bytesEquals(other.term))return 0; if (this.boost == other.boost)return other.term.compareTo(this.term);else return Float.compare(this.boost, other.boost);}",public int compareToScoreTerm other if termbytesEqualsothertermreturn 0 if thisboost  otherboostreturn othertermcompareTothistermelse return Floatcomparethisboost otherboost
"public LazyAreaEval getColumn(int columnIndex) {if (columnIndex >= getWidth()) {throw new IllegalArgumentException(""Invalid columnIndex "" + columnIndex+ "".  Allowable range is (0.."" + getWidth() + "")."");}int absColIx = getFirstColumn() + columnIndex;return new LazyAreaEval(getFirstRow(), absColIx, getLastRow(), absColIx, _evaluator);}",public LazyAreaEval getColumnint columnIndex if columnIndex  getWidth throw new IllegalArgumentExceptionInvalid columnIndex   columnIndex   Allowable range is 0  getWidth  int absColIx  getFirstColumn  columnIndexreturn new LazyAreaEvalgetFirstRow absColIx getLastRow absColIx evaluator
public BytesRef next() throws IOException {if (done) {return null;}boolean success = false;BytesRef result;try {String line;if ((line = in.readLine()) != null) {spare.copyChars(line);result = spare.get();} else {done = true;IOUtils.close(in);result = null;}success = true;} finally {if (!success) {IOUtils.closeWhileHandlingException(in);}}return result;},public BytesRef next throws IOException if done return nullboolean success  falseBytesRef resulttry String lineif line  inreadLine  null sparecopyCharslineresult  spareget else done  trueIOUtilscloseinresult  nullsuccess  true finally if success IOUtilscloseWhileHandlingExceptioninreturn result
public boolean shouldBeRecursive() {return path.shouldBeRecursive();},public boolean shouldBeRecursive return pathshouldBeRecursive
"public String toString() {return getClass().getSimpleName() + ""(compressionMode="" + compressionMode+ "", chunkSize="" + chunkSize + "", blockSize="" + blockSize + "")"";}",public String toString return getClassgetSimpleName  compressionMode  compressionMode  chunkSize  chunkSize   blockSize  blockSize  
public ResourcePendingMaintenanceActions applyPendingMaintenanceAction(ApplyPendingMaintenanceActionRequest request) {request = beforeClientExecution(request);return executeApplyPendingMaintenanceAction(request);},public ResourcePendingMaintenanceActions applyPendingMaintenanceActionApplyPendingMaintenanceActionRequest request request  beforeClientExecutionrequestreturn executeApplyPendingMaintenanceActionrequest
public boolean startsWith(AbbreviatedObjectId abbr) {return abbr.prefixCompare(this) == 0;},public boolean startsWithAbbreviatedObjectId abbr return abbrprefixComparethis  0
"public SerializingRecordVisitor(byte[] data, int startOffset) {_data = data;_startOffset = startOffset;_countBytesWritten = 0;}",public SerializingRecordVisitorbyte data int startOffset data  datastartOffset  startOffsetcountBytesWritten  0
public static TreeFilter createFromStrings(Collection<String> paths) {if (paths.isEmpty())throw new IllegalArgumentException(JGitText.get().atLeastOnePathIsRequired);final PathFilter[] p = new PathFilter[paths.size()];int i = 0;for (String s : paths)p[i++] = PathFilter.create(s);return create(p);},public static TreeFilter createFromStringsCollectionString paths if pathsisEmptythrow new IllegalArgumentExceptionJGitTextgetatLeastOnePathIsRequiredfinal PathFilter p  new PathFilterpathssizeint i  0for String s  pathspi  PathFiltercreatesreturn createp
public void serialize(LittleEndianOutput out) {out.writeShort(getDefaultCountry());out.writeShort(getCurrentCountry());},public void serializeLittleEndianOutput out outwriteShortgetDefaultCountryoutwriteShortgetCurrentCountry
@Override public boolean equals(Object object) {synchronized (mutex) {return list.equals(object);}},Override public boolean equalsObject object synchronized mutex return listequalsobject
"public CellFormatter(String format) {this(LocaleUtil.getUserLocale(), format);}",public CellFormatterString format thisLocaleUtilgetUserLocale format
public ObjectId getResultTreeId() {return resultTree;},public ObjectId getResultTreeId return resultTree
"public DrillDownQuery clone() {return new DrillDownQuery(config, baseQuery, dimQueries, drillDownDims);}",public DrillDownQuery clone return new DrillDownQueryconfig baseQuery dimQueries drillDownDims
"public final ShortBuffer put(short[] src, int srcOffset, int shortCount) {throw new ReadOnlyBufferException();}",public final ShortBuffer putshort src int srcOffset int shortCount throw new ReadOnlyBufferException
"public final void writeLong(long val) throws IOException {Memory.pokeLong(scratch, 0, val, ByteOrder.BIG_ENDIAN);write(scratch, 0, SizeOf.LONG);}",public final void writeLonglong val throws IOException MemorypokeLongscratch 0 val ByteOrderBIGENDIANwritescratch 0 SizeOfLONG
public AuthorizeSecurityGroupEgressResult authorizeSecurityGroupEgress(AuthorizeSecurityGroupEgressRequest request) {request = beforeClientExecution(request);return executeAuthorizeSecurityGroupEgress(request);},public AuthorizeSecurityGroupEgressResult authorizeSecurityGroupEgressAuthorizeSecurityGroupEgressRequest request request  beforeClientExecutionrequestreturn executeAuthorizeSecurityGroupEgressrequest
public void add(E object) {throw new UnsupportedOperationException();},public void addE object throw new UnsupportedOperationException
public static String getPOSTranslation(String s) {return posTranslations.get(s);},public static String getPOSTranslationString s return posTranslationsgets
public AnalyticsTagPredicate(Tag tag) {this.tag = tag;},public AnalyticsTagPredicateTag tag thistag  tag
"public String toInfoString(Parser recognizer) {List<String> rules = recognizer.getRuleInvocationStack(this);Collections.reverse(rules);return ""ParserRuleContext""+rules+""{"" +""start="" + start +"", stop="" + stop +'}';}",public String toInfoStringParser recognizer ListString rules  recognizergetRuleInvocationStackthisCollectionsreverserulesreturn ParserRuleContextrules start  start  stop  stop 
"public CharBuffer put(int index, char c) {checkIndex(index);backingArray[offset + index] = c;return this;}",public CharBuffer putint index char c checkIndexindexbackingArrayoffset  index  creturn this
public CreateComponentResult createComponent(CreateComponentRequest request) {request = beforeClientExecution(request);return executeCreateComponent(request);},public CreateComponentResult createComponentCreateComponentRequest request request  beforeClientExecutionrequestreturn executeCreateComponentrequest
"public RuleWithSuffixExceptions(String suffix, int min, String replacement,String[] exceptions) {super(suffix, min, replacement);for (int i = 0; i < exceptions.length; i++) {if (!exceptions[i].endsWith(suffix))throw new RuntimeException(""warning: useless exception '"" + exceptions[i] + ""' does not end with '"" + suffix + ""'"");}this.exceptions = new char[exceptions.length][];for (int i = 0; i < exceptions.length; i++)this.exceptions[i] = exceptions[i].toCharArray();}",public RuleWithSuffixExceptionsString suffix int min String replacementString exceptions supersuffix min replacementfor int i  0 i  exceptionslength i if exceptionsiendsWithsuffixthrow new RuntimeExceptionwarning useless exception   exceptionsi   does not end with   suffix  thisexceptions  new charexceptionslengthfor int i  0 i  exceptionslength ithisexceptionsi  exceptionsitoCharArray
public DescribeVpnGatewaysResult describeVpnGateways(DescribeVpnGatewaysRequest request) {request = beforeClientExecution(request);return executeDescribeVpnGateways(request);},public DescribeVpnGatewaysResult describeVpnGatewaysDescribeVpnGatewaysRequest request request  beforeClientExecutionrequestreturn executeDescribeVpnGatewaysrequest
public HSSFClientAnchor(EscherClientAnchorRecord escherClientAnchorRecord) {this._escherClientAnchor = escherClientAnchorRecord;},public HSSFClientAnchorEscherClientAnchorRecord escherClientAnchorRecord thisescherClientAnchor  escherClientAnchorRecord
public void stopNow() {stopNow = true;},public void stopNow stopNow  true
"public String toString() {return ""FooterKey["" + name + ""]"";}",public String toString return FooterKey  name  
public GetRelationalDatabasesResult getRelationalDatabases(GetRelationalDatabasesRequest request) {request = beforeClientExecution(request);return executeGetRelationalDatabases(request);},public GetRelationalDatabasesResult getRelationalDatabasesGetRelationalDatabasesRequest request request  beforeClientExecutionrequestreturn executeGetRelationalDatabasesrequest
public int compareTo(Revision o) {IndexRevision other = (IndexRevision) o;return commit.compareTo(other.commit);},public int compareToRevision o IndexRevision other  IndexRevision oreturn commitcompareToothercommit
"public PredPrediction(SemanticContext pred, int alt) {this.alt = alt;this.pred = pred;}",public PredPredictionSemanticContext pred int alt thisalt  altthispred  pred
public ListMeetingTagsResult listMeetingTags(ListMeetingTagsRequest request) {request = beforeClientExecution(request);return executeListMeetingTags(request);},public ListMeetingTagsResult listMeetingTagsListMeetingTagsRequest request request  beforeClientExecutionrequestreturn executeListMeetingTagsrequest
"public TokenStream create(TokenStream input) {return new NorwegianMinimalStemFilter(input, flags);}",public TokenStream createTokenStream input return new NorwegianMinimalStemFilterinput flags
public ImportInstanceResult importInstance(ImportInstanceRequest request) {request = beforeClientExecution(request);return executeImportInstance(request);},public ImportInstanceResult importInstanceImportInstanceRequest request request  beforeClientExecutionrequestreturn executeImportInstancerequest
public void setCodePage(CodepageRecord codepage) {this.codepage = codepage;},public void setCodePageCodepageRecord codepage thiscodepage  codepage
@Override public Collection<V> values() {Collection<V> vs = values;return (vs != null) ? vs : (values = new Values());},Override public CollectionV values CollectionV vs  valuesreturn vs  null  vs  values  new Values
public UpdateRulesOfIpGroupResult updateRulesOfIpGroup(UpdateRulesOfIpGroupRequest request) {request = beforeClientExecution(request);return executeUpdateRulesOfIpGroup(request);},public UpdateRulesOfIpGroupResult updateRulesOfIpGroupUpdateRulesOfIpGroupRequest request request  beforeClientExecutionrequestreturn executeUpdateRulesOfIpGrouprequest
"public String toString() {return ""OneOrMoreOutputs("" + outputs + "")"";}",public String toString return OneOrMoreOutputs  outputs  
"public static TreeFilter create(TreeFilter a, TreeFilter b) {if (a == ALL || b == ALL)return ALL;return new Binary(a, b);}",public static TreeFilter createTreeFilter a TreeFilter b if a  ALL  b  ALLreturn ALLreturn new Binarya b
public UntagQueueResult untagQueue(UntagQueueRequest request) {request = beforeClientExecution(request);return executeUntagQueue(request);},public UntagQueueResult untagQueueUntagQueueRequest request request  beforeClientExecutionrequestreturn executeUntagQueuerequest
public final double getDouble(int index) {return Double.longBitsToDouble(getLong(index));},public final double getDoubleint index return DoublelongBitsToDoublegetLongindex
public V next() {return entryIterator.next().getValue();},public V next return entryIteratornextgetValue
public IntervalSet(int... els) {if ( els==null ) {intervals = new ArrayList<Interval>(2); }else {intervals = new ArrayList<Interval>(els.length);for (int e : els) add(e);}},public IntervalSetint els if  elsnull  intervals  new ArrayListInterval2 else intervals  new ArrayListIntervalelslengthfor int e  els adde
"public void dumpDeadEndConfigs(NoViableAltException nvae) {System.err.println(""dead end configs: "");for (ATNConfig c : nvae.getDeadEndConfigs()) {String trans = ""no edges"";if ( c.state.getNumberOfTransitions()>0 ) {Transition t = c.state.transition(0);if ( t instanceof AtomTransition) {AtomTransition at = (AtomTransition)t;trans = ""Atom ""+getTokenName(at.label);}else if ( t instanceof SetTransition ) {SetTransition st = (SetTransition)t;boolean not = st instanceof NotSetTransition;trans = (not?""~"":"""")+""Set ""+st.set.toString();}}System.err.println(c.toString(parser, true)+"":""+trans);}}",public void dumpDeadEndConfigsNoViableAltException nvae Systemerrprintlndead end configs for ATNConfig c  nvaegetDeadEndConfigs String trans  no edgesif  cstategetNumberOfTransitions0  Transition t  cstatetransition0if  t instanceof AtomTransition AtomTransition at  AtomTransitionttrans  Atom getTokenNameatlabelelse if  t instanceof SetTransition  SetTransition st  SetTransitiontboolean not  st instanceof NotSetTransitiontrans  notSet stsettoStringSystemerrprintlnctoStringparser truetrans
"public String toString() {StringBuilder sb = new StringBuilder();sb.append(""[SUPBOOK "");if(isExternalReferences()) {sb.append(""External References]\n"");sb.append("" .url     = "").append(getURL()).append(""\n"");sb.append("" .nSheets = "").append(field_1_number_of_sheets).append(""\n"");for (String sheetname : field_3_sheet_names) {sb.append(""    .name = "").append(sheetname).append(""\n"");}sb.append(""[/SUPBOOK"");} else if(_isAddInFunctions) {sb.append(""Add-In Functions"");} else {sb.append(""Internal References"");sb.append("" nSheets="").append(field_1_number_of_sheets);}sb.append(""]"");return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappendSUPBOOK ifisExternalReferences sbappendExternal Referencesnsbappend url      appendgetURLappendnsbappend nSheets  appendfield1numberofsheetsappendnfor String sheetname  field3sheetnames sbappend    name  appendsheetnameappendnsbappendSUPBOOK else ifisAddInFunctions sbappendAddIn Functions else sbappendInternal Referencessbappend nSheetsappendfield1numberofsheetssbappendreturn sbtoString
"public String toString() {StringBuilder sb = new StringBuilder(256);sb.append(""[ftLbsData]\n"");sb.append(""    .unknownShort1 ="").append(HexDump.shortToHex(_cbFContinued)).append(""\n"");sb.append(""    .formula        = "").append('\n');if(_linkPtg != null) {sb.append(_linkPtg).append(_linkPtg.getRVAType()).append('\n');}sb.append(""    .nEntryCount   ="").append(HexDump.shortToHex(_cLines)).append(""\n"");sb.append(""    .selEntryIx    ="").append(HexDump.shortToHex(_iSel)).append(""\n"");sb.append(""    .style         ="").append(HexDump.shortToHex(_flags)).append(""\n"");sb.append(""    .unknownShort10="").append(HexDump.shortToHex(_idEdit)).append(""\n"");if(_dropData != null) {sb.append('\n').append(_dropData);}sb.append(""[/ftLbsData]\n"");return sb.toString();}",public String toString StringBuilder sb  new StringBuilder256sbappendftLbsDatansbappend    unknownShort1 appendHexDumpshortToHexcbFContinuedappendnsbappend    formula         appendniflinkPtg  null sbappendlinkPtgappendlinkPtggetRVATypeappendnsbappend    nEntryCount   appendHexDumpshortToHexcLinesappendnsbappend    selEntryIx    appendHexDumpshortToHexiSelappendnsbappend    style         appendHexDumpshortToHexflagsappendnsbappend    unknownShort10appendHexDumpshortToHexidEditappendnifdropData  null sbappendnappenddropDatasbappendftLbsDatanreturn sbtoString
"public static QualityStats average(QualityStats[] stats) {QualityStats avg = new QualityStats(0,0);if (stats.length==0) {return avg;}int m = 0; for (int i=0; i<stats.length; i++) {avg.searchTime += stats[i].searchTime;avg.docNamesExtractTime += stats[i].docNamesExtractTime;if (stats[i].maxGoodPoints>0) {m++;avg.numGoodPoints += stats[i].numGoodPoints;avg.numPoints += stats[i].numPoints;avg.pReleventSum += stats[i].getAvp();avg.recall += stats[i].recall;avg.mrr += stats[i].getMRR();avg.maxGoodPoints += stats[i].maxGoodPoints;for (int j=1; j<avg.pAt.length; j++) {avg.pAt[j] += stats[i].getPrecisionAt(j);}}}assert m>0 : ""Fishy: no \""good\"" queries!"";avg.searchTime /= stats.length;avg.docNamesExtractTime /= stats.length;avg.numGoodPoints /= m;avg.numPoints /= m;avg.recall /= m;avg.mrr /= m;avg.maxGoodPoints /= m;for (int j=1; j<avg.pAt.length; j++) {avg.pAt[j] /= m;}avg.pReleventSum /= m;                 avg.pReleventSum *= avg.maxGoodPoints; return avg;}",public static QualityStats averageQualityStats stats QualityStats avg  new QualityStats00if statslength0 return avgint m  0 for int i0 istatslength i avgsearchTime  statsisearchTimeavgdocNamesExtractTime  statsidocNamesExtractTimeif statsimaxGoodPoints0 mavgnumGoodPoints  statsinumGoodPointsavgnumPoints  statsinumPointsavgpReleventSum  statsigetAvpavgrecall  statsirecallavgmrr  statsigetMRRavgmaxGoodPoints  statsimaxGoodPointsfor int j1 javgpAtlength j avgpAtj  statsigetPrecisionAtjassert m0  Fishy no good queriesavgsearchTime  statslengthavgdocNamesExtractTime  statslengthavgnumGoodPoints  mavgnumPoints  mavgrecall  mavgmrr  mavgmaxGoodPoints  mfor int j1 javgpAtlength j avgpAtj  mavgpReleventSum  m                 avgpReleventSum  avgmaxGoodPoints return avg
public String getUser() {return Host.this.getUser();},public String getUser return HostthisgetUser
public int[] clear() {boost = null;termState = null;return super.clear();},public int clear boost  nulltermState  nullreturn superclear
public DescribeApplicationSnapshotResult describeApplicationSnapshot(DescribeApplicationSnapshotRequest request) {request = beforeClientExecution(request);return executeDescribeApplicationSnapshot(request);},public DescribeApplicationSnapshotResult describeApplicationSnapshotDescribeApplicationSnapshotRequest request request  beforeClientExecutionrequestreturn executeDescribeApplicationSnapshotrequest
"public FormatAndBits(Format format, int bitsPerValue) {this.format = format;this.bitsPerValue = bitsPerValue;}",public FormatAndBitsFormat format int bitsPerValue thisformat  formatthisbitsPerValue  bitsPerValue
"public HSSFName getNameAt(int nameIndex) {int nNames = names.size();if (nNames < 1) {throw new IllegalStateException(""There are no defined names in this workbook"");}if (nameIndex < 0 || nameIndex > nNames) {throw new IllegalArgumentException(""Specified name index "" + nameIndex+ "" is outside the allowable range (0.."" + (nNames-1) + "")."");}return names.get(nameIndex);}",public HSSFName getNameAtint nameIndex int nNames  namessizeif nNames  1 throw new IllegalStateExceptionThere are no defined names in this workbookif nameIndex  0  nameIndex  nNames throw new IllegalArgumentExceptionSpecified name index   nameIndex  is outside the allowable range 0  nNames1  return namesgetnameIndex
"public void fromString(String str) {if (str.length() != Constants.OBJECT_ID_STRING_LENGTH)throw new IllegalArgumentException(MessageFormat.format(JGitText.get().invalidId, str));fromHexString(Constants.encodeASCII(str), 0);}",public void fromStringString str if strlength  ConstantsOBJECTIDSTRINGLENGTHthrow new IllegalArgumentExceptionMessageFormatformatJGitTextgetinvalidId strfromHexStringConstantsencodeASCIIstr 0
public DescribeTableRestoreStatusResult describeTableRestoreStatus(DescribeTableRestoreStatusRequest request) {request = beforeClientExecution(request);return executeDescribeTableRestoreStatus(request);},public DescribeTableRestoreStatusResult describeTableRestoreStatusDescribeTableRestoreStatusRequest request request  beforeClientExecutionrequestreturn executeDescribeTableRestoreStatusrequest
"public Edit(int as, int ae, int bs, int be) {beginA = as;endA = ae;beginB = bs;endB = be;}",public Editint as int ae int bs int be beginA  asendA  aebeginB  bsendB  be
public UpdateDomainEndpointOptionsResult updateDomainEndpointOptions(UpdateDomainEndpointOptionsRequest request) {request = beforeClientExecution(request);return executeUpdateDomainEndpointOptions(request);},public UpdateDomainEndpointOptionsResult updateDomainEndpointOptionsUpdateDomainEndpointOptionsRequest request request  beforeClientExecutionrequestreturn executeUpdateDomainEndpointOptionsrequest
@Override public boolean contains(Object o) {return Impl.this.containsKey(o);},Override public boolean containsObject o return ImplthiscontainsKeyo
"public ParseTreePattern compileParseTreePattern(String pattern, int patternRuleIndex,Lexer lexer){ParseTreePatternMatcher m = new ParseTreePatternMatcher(lexer, this);return m.compile(pattern, patternRuleIndex);}",public ParseTreePattern compileParseTreePatternString pattern int patternRuleIndexLexer lexerParseTreePatternMatcher m  new ParseTreePatternMatcherlexer thisreturn mcompilepattern patternRuleIndex
public MalformedInputException(int length) {this.inputLength = length;},public MalformedInputExceptionint length thisinputLength  length
public void reset() {upto = 0;in.reset();},public void reset upto  0inreset
public String toString() {return name;},public String toString return name
"public DeletePhotoStoreRequest() {super(""CloudPhoto"", ""2017-07-11"", ""DeletePhotoStore"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public DeletePhotoStoreRequest superCloudPhoto 20170711 DeletePhotoStore cloudphotosetProtocolProtocolTypeHTTPS
public GlobalCluster createGlobalCluster(CreateGlobalClusterRequest request) {request = beforeClientExecution(request);return executeCreateGlobalCluster(request);},public GlobalCluster createGlobalClusterCreateGlobalClusterRequest request request  beforeClientExecutionrequestreturn executeCreateGlobalClusterrequest
"public SimpleImmutableEntry(K theKey, V theValue) {key = theKey;value = theValue;}",public SimpleImmutableEntryK theKey V theValue key  theKeyvalue  theValue
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[SeriesToChartGroup]\n"");buffer.append(""    .chartGroupIndex      = "").append(""0x"").append(HexDump.toHex(  getChartGroupIndex ())).append("" ("").append( getChartGroupIndex() ).append("" )"");buffer.append(System.getProperty(""line.separator""));buffer.append(""[/SeriesToChartGroup]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendSeriesToChartGroupnbufferappend    chartGroupIndex       append0xappendHexDumptoHex  getChartGroupIndex append append getChartGroupIndex append bufferappendSystemgetPropertylineseparatorbufferappendSeriesToChartGroupnreturn buffertoString
"public String toString() {return ""FAST_"" + path.toString(); }",public String toString return FAST  pathtoString 
"public OpenNLPLemmatizerFilterFactory(Map<String,String> args) {super(args);dictionaryFile = get(args, DICTIONARY);lemmatizerModelFile = get(args, LEMMATIZER_MODEL);if (dictionaryFile == null && lemmatizerModelFile == null) {throw new IllegalArgumentException(""Configuration Error: missing parameter: at least one of '""+ DICTIONARY + ""' and '"" + LEMMATIZER_MODEL + ""' must be provided."");}if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public OpenNLPLemmatizerFilterFactoryMapStringString args superargsdictionaryFile  getargs DICTIONARYlemmatizerModelFile  getargs LEMMATIZERMODELif dictionaryFile  null  lemmatizerModelFile  null throw new IllegalArgumentExceptionConfiguration Error missing parameter at least one of  DICTIONARY   and   LEMMATIZERMODEL   must be providedif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public Long contentLength() {return this.contentLength;},public Long contentLength return thiscontentLength
public void addError(FormatError err) {errors.add(err);},public void addErrorFormatError err errorsadderr
public UpdateUserResult updateUser(UpdateUserRequest request) {request = beforeClientExecution(request);return executeUpdateUser(request);},public UpdateUserResult updateUserUpdateUserRequest request request  beforeClientExecutionrequestreturn executeUpdateUserrequest
public DeletePartnerEventSourceResult deletePartnerEventSource(DeletePartnerEventSourceRequest request) {request = beforeClientExecution(request);return executeDeletePartnerEventSource(request);},public DeletePartnerEventSourceResult deletePartnerEventSourceDeletePartnerEventSourceRequest request request  beforeClientExecutionrequestreturn executeDeletePartnerEventSourcerequest
public WorkflowExecutionInfos listClosedWorkflowExecutions(ListClosedWorkflowExecutionsRequest request) {request = beforeClientExecution(request);return executeListClosedWorkflowExecutions(request);},public WorkflowExecutionInfos listClosedWorkflowExecutionsListClosedWorkflowExecutionsRequest request request  beforeClientExecutionrequestreturn executeListClosedWorkflowExecutionsrequest
public HSSFFontFormatting createFontFormatting() {return getFontFormatting(true);},public HSSFFontFormatting createFontFormatting return getFontFormattingtrue
public SimpleFragmenter(int fragmentSize) {this.fragmentSize = fragmentSize;},public SimpleFragmenterint fragmentSize thisfragmentSize  fragmentSize
public DeleteEmailIdentityResult deleteEmailIdentity(DeleteEmailIdentityRequest request) {request = beforeClientExecution(request);return executeDeleteEmailIdentity(request);},public DeleteEmailIdentityResult deleteEmailIdentityDeleteEmailIdentityRequest request request  beforeClientExecutionrequestreturn executeDeleteEmailIdentityrequest
public ListScriptsResult listScripts(ListScriptsRequest request) {request = beforeClientExecution(request);return executeListScripts(request);},public ListScriptsResult listScriptsListScriptsRequest request request  beforeClientExecutionrequestreturn executeListScriptsrequest
"public SnowballFilter(TokenStream input, SnowballStemmer stemmer) {super(input);this.stemmer = stemmer;}",public SnowballFilterTokenStream input SnowballStemmer stemmer superinputthisstemmer  stemmer
public DeleteFlowLogsResult deleteFlowLogs(DeleteFlowLogsRequest request) {request = beforeClientExecution(request);return executeDeleteFlowLogs(request);},public DeleteFlowLogsResult deleteFlowLogsDeleteFlowLogsRequest request request  beforeClientExecutionrequestreturn executeDeleteFlowLogsrequest
public CreateIdentityPoolResult createIdentityPool(CreateIdentityPoolRequest request) {request = beforeClientExecution(request);return executeCreateIdentityPool(request);},public CreateIdentityPoolResult createIdentityPoolCreateIdentityPoolRequest request request  beforeClientExecutionrequestreturn executeCreateIdentityPoolrequest
"public String distanceSubQueryNotAllowed() {Iterator<?> sqi = getSubQueriesIterator();while (sqi.hasNext()) {Object leq = sqi.next();if (leq instanceof DistanceSubQuery) {DistanceSubQuery dsq = (DistanceSubQuery) leq;String m = dsq.distanceSubQueryNotAllowed();if (m != null) {return m;}} else {return ""Operator "" + getOperatorName() + "" does not allow subquery "" + leq.toString();}}return null; }",public String distanceSubQueryNotAllowed Iterator sqi  getSubQueriesIteratorwhile sqihasNext Object leq  sqinextif leq instanceof DistanceSubQuery DistanceSubQuery dsq  DistanceSubQuery leqString m  dsqdistanceSubQueryNotAllowedif m  null return m else return Operator   getOperatorName   does not allow subquery   leqtoStringreturn null 
"public static String getNodeText(Tree t, List<String> ruleNames) {if ( ruleNames!=null ) {if ( t instanceof RuleContext ) {int ruleIndex = ((RuleContext)t).getRuleContext().getRuleIndex();String ruleName = ruleNames.get(ruleIndex);int altNumber = ((RuleContext) t).getAltNumber();if ( altNumber!=ATN.INVALID_ALT_NUMBER ) {return ruleName+"":""+altNumber;}return ruleName;}else if ( t instanceof ErrorNode) {return t.toString();}else if ( t instanceof TerminalNode) {Token symbol = ((TerminalNode)t).getSymbol();if (symbol != null) {String s = symbol.getText();return s;}}}Object payload = t.getPayload();if ( payload instanceof Token ) {return ((Token)payload).getText();}return t.getPayload().toString();}",public static String getNodeTextTree t ListString ruleNames if  ruleNamesnull  if  t instanceof RuleContext  int ruleIndex  RuleContexttgetRuleContextgetRuleIndexString ruleName  ruleNamesgetruleIndexint altNumber  RuleContext tgetAltNumberif  altNumberATNINVALIDALTNUMBER  return ruleNamealtNumberreturn ruleNameelse if  t instanceof ErrorNode return ttoStringelse if  t instanceof TerminalNode Token symbol  TerminalNodetgetSymbolif symbol  null String s  symbolgetTextreturn sObject payload  tgetPayloadif  payload instanceof Token  return TokenpayloadgetTextreturn tgetPayloadtoString
public int last() {if (sentenceStarts.length > 0) {currentSentence = sentenceStarts.length - 1;text.setIndex(text.getEndIndex());} else { currentSentence = 0;text.setIndex(text.getBeginIndex());}return current();},public int last if sentenceStartslength  0 currentSentence  sentenceStartslength  1textsetIndextextgetEndIndex else  currentSentence  0textsetIndextextgetBeginIndexreturn current
public HSSFRichTextString createRichTextString(String text) {return new HSSFRichTextString(text);},public HSSFRichTextString createRichTextStringString text return new HSSFRichTextStringtext
public PushbackReader(Reader in) {super(in);buf = new char[1];pos = 1;},public PushbackReaderReader in superinbuf  new char1pos  1
public List<ParseTree> getAll(String label) {List<ParseTree> nodes = labels.get(label);if ( nodes==null ) {return Collections.emptyList();}return nodes;},public ListParseTree getAllString label ListParseTree nodes  labelsgetlabelif  nodesnull  return CollectionsemptyListreturn nodes
"public InternalWorkbook getStubWorkbook() {return createStubWorkbook(getExternSheetRecords(), getBoundSheetRecords(),getSSTRecord());}",public InternalWorkbook getStubWorkbook return createStubWorkbookgetExternSheetRecords getBoundSheetRecordsgetSSTRecord
"public ReactivatePhotosRequest() {super(""CloudPhoto"", ""2017-07-11"", ""ReactivatePhotos"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public ReactivatePhotosRequest superCloudPhoto 20170711 ReactivatePhotos cloudphotosetProtocolProtocolTypeHTTPS
public DecisionTask pollForDecisionTask(PollForDecisionTaskRequest request) {request = beforeClientExecution(request);return executePollForDecisionTask(request);},public DecisionTask pollForDecisionTaskPollForDecisionTaskRequest request request  beforeClientExecutionrequestreturn executePollForDecisionTaskrequest
public void write(LittleEndianOutput out) {out.writeByte(getSid() + getPtgClass());writeCoordinates(out);},public void writeLittleEndianOutput out outwriteBytegetSid  getPtgClasswriteCoordinatesout
public Ref getTarget() {return target;},public Ref getTarget return target
public CreateTagsResult createTags(CreateTagsRequest request) {request = beforeClientExecution(request);return executeCreateTags(request);},public CreateTagsResult createTagsCreateTagsRequest request request  beforeClientExecutionrequestreturn executeCreateTagsrequest
public UpdateUserPhoneConfigResult updateUserPhoneConfig(UpdateUserPhoneConfigRequest request) {request = beforeClientExecution(request);return executeUpdateUserPhoneConfig(request);},public UpdateUserPhoneConfigResult updateUserPhoneConfigUpdateUserPhoneConfigRequest request request  beforeClientExecutionrequestreturn executeUpdateUserPhoneConfigrequest
public PersonIdent getSourceAuthor(int idx) {return sourceAuthors[idx];},public PersonIdent getSourceAuthorint idx return sourceAuthorsidx
public void setLength(long sz) {setLength((int) sz);},public void setLengthlong sz setLengthint sz
public GetServerCertificateRequest(String serverCertificateName) {setServerCertificateName(serverCertificateName);},public GetServerCertificateRequestString serverCertificateName setServerCertificateNameserverCertificateName
public CreateStreamingDistributionWithTagsResult createStreamingDistributionWithTags(CreateStreamingDistributionWithTagsRequest request) {request = beforeClientExecution(request);return executeCreateStreamingDistributionWithTags(request);},public CreateStreamingDistributionWithTagsResult createStreamingDistributionWithTagsCreateStreamingDistributionWithTagsRequest request request  beforeClientExecutionrequestreturn executeCreateStreamingDistributionWithTagsrequest
public DescribeNotificationSubscriptionsResult describeNotificationSubscriptions(DescribeNotificationSubscriptionsRequest request) {request = beforeClientExecution(request);return executeDescribeNotificationSubscriptions(request);},public DescribeNotificationSubscriptionsResult describeNotificationSubscriptionsDescribeNotificationSubscriptionsRequest request request  beforeClientExecutionrequestreturn executeDescribeNotificationSubscriptionsrequest
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[CHARTFRTINFO]\n"");buffer.append(""    .rt           ="").append(HexDump.shortToHex(rt)).append('\n');buffer.append(""    .grbitFrt     ="").append(HexDump.shortToHex(grbitFrt)).append('\n');buffer.append(""    .verOriginator="").append(HexDump.byteToHex(verOriginator)).append('\n');buffer.append(""    .verWriter    ="").append(HexDump.byteToHex(verOriginator)).append('\n');buffer.append(""    .nCFRTIDs     ="").append(HexDump.shortToHex(rgCFRTID.length)).append('\n');buffer.append(""[/CHARTFRTINFO]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendCHARTFRTINFOnbufferappend    rt           appendHexDumpshortToHexrtappendnbufferappend    grbitFrt     appendHexDumpshortToHexgrbitFrtappendnbufferappend    verOriginatorappendHexDumpbyteToHexverOriginatorappendnbufferappend    verWriter    appendHexDumpbyteToHexverOriginatorappendnbufferappend    nCFRTIDs     appendHexDumpshortToHexrgCFRTIDlengthappendnbufferappendCHARTFRTINFOnreturn buffertoString
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {double result;if (arg0 instanceof RefEval) {result = CountUtils.countMatchingCellsInRef((RefEval) arg0, predicate);} else if (arg0 instanceof ThreeDEval) {result = CountUtils.countMatchingCellsInArea((ThreeDEval) arg0, predicate);} else {throw new IllegalArgumentException(""Bad range arg type ("" + arg0.getClass().getName() + "")"");}return new NumberEval(result);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 double resultif arg0 instanceof RefEval result  CountUtilscountMatchingCellsInRefRefEval arg0 predicate else if arg0 instanceof ThreeDEval result  CountUtilscountMatchingCellsInAreaThreeDEval arg0 predicate else throw new IllegalArgumentExceptionBad range arg type   arg0getClassgetName  return new NumberEvalresult
public UpdateRestApiResult updateRestApi(UpdateRestApiRequest request) {request = beforeClientExecution(request);return executeUpdateRestApi(request);},public UpdateRestApiResult updateRestApiUpdateRestApiRequest request request  beforeClientExecutionrequestreturn executeUpdateRestApirequest
public int size() {return ConcurrentHashMap.this.size();},public int size return ConcurrentHashMapthissize
"public EscherSimpleProperty( short propertyNumber, boolean isComplex, boolean isBlipId, int propertyValue ) {super( propertyNumber, isComplex, isBlipId );this.propertyValue = propertyValue;}",public EscherSimpleProperty short propertyNumber boolean isComplex boolean isBlipId int propertyValue  super propertyNumber isComplex isBlipId thispropertyValue  propertyValue
"public static boolean isEndOfRowBlock(int sid) {switch(sid) {case ViewDefinitionRecord.sid:case DrawingRecord.sid:case DrawingSelectionRecord.sid:case ObjRecord.sid:case TextObjectRecord.sid:case ColumnInfoRecord.sid: case GutsRecord.sid:   case WindowOneRecord.sid:case WindowTwoRecord.sid:return true;case DVALRecord.sid:return true;case EOFRecord.sid:throw new RuntimeException(""Found EOFRecord before WindowTwoRecord was encountered"");}return PageSettingsBlock.isComponentRecord(sid);}",public static boolean isEndOfRowBlockint sid switchsid case ViewDefinitionRecordsidcase DrawingRecordsidcase DrawingSelectionRecordsidcase ObjRecordsidcase TextObjectRecordsidcase ColumnInfoRecordsid case GutsRecordsid   case WindowOneRecordsidcase WindowTwoRecordsidreturn truecase DVALRecordsidreturn truecase EOFRecordsidthrow new RuntimeExceptionFound EOFRecord before WindowTwoRecord was encounteredreturn PageSettingsBlockisComponentRecordsid
"public RegistrantProfileRealNameVerificationRequest() {super(""Domain-intl"", ""2017-12-18"", ""RegistrantProfileRealNameVerification"", ""domain"");setMethod(MethodType.POST);}",public RegistrantProfileRealNameVerificationRequest superDomainintl 20171218 RegistrantProfileRealNameVerification domainsetMethodMethodTypePOST
public CreateProfileResult createProfile(CreateProfileRequest request) {request = beforeClientExecution(request);return executeCreateProfile(request);},public CreateProfileResult createProfileCreateProfileRequest request request  beforeClientExecutionrequestreturn executeCreateProfilerequest
"public ObjectId idFor(int type, byte[] data, int off, int len) {SHA1 md = SHA1.newInstance();md.update(Constants.encodedTypeString(type));md.update((byte) ' ');md.update(Constants.encodeASCII(len));md.update((byte) 0);md.update(data, off, len);return md.toObjectId();}",public ObjectId idForint type byte data int off int len SHA1 md  SHA1newInstancemdupdateConstantsencodedTypeStringtypemdupdatebyte  mdupdateConstantsencodeASCIIlenmdupdatebyte 0mdupdatedata off lenreturn mdtoObjectId
public EndSubRecord clone() {return copy();},public EndSubRecord clone return copy
"public SearchRepoRequest() {super(""cr"", ""2016-06-07"", ""SearchRepo"", ""cr"");setUriPattern(""/search"");setMethod(MethodType.GET);}",public SearchRepoRequest supercr 20160607 SearchRepo crsetUriPatternsearchsetMethodMethodTypeGET
public InputIterator getEntryIterator() {try {return new FileIterator();} catch (IOException e) {throw new RuntimeException(e);}},public InputIterator getEntryIterator try return new FileIterator catch IOException e throw new RuntimeExceptione
public final long get() {if (position == limit) {throw new BufferUnderflowException();}return backingArray[offset + position++];},public final long get if position  limit throw new BufferUnderflowExceptionreturn backingArrayoffset  position
public void setThumbOffset(int thumbOffset) {mThumbOffset = thumbOffset;invalidate();},public void setThumbOffsetint thumbOffset mThumbOffset  thumbOffsetinvalidate
"public void seekExact(BytesRef target, TermState otherState) {if (!target.equals(term)) {state.copyFrom(otherState);term = BytesRef.deepCopyOf(target);seekPending = true;}}",public void seekExactBytesRef target TermState otherState if targetequalsterm statecopyFromotherStateterm  BytesRefdeepCopyOftargetseekPending  true
public GetFilterResult getFilter(GetFilterRequest request) {request = beforeClientExecution(request);return executeGetFilter(request);},public GetFilterResult getFilterGetFilterRequest request request  beforeClientExecutionrequestreturn executeGetFilterrequest
"public static FontDetails create( String fontName, Properties fontMetricsProps ){String heightStr = fontMetricsProps.getProperty( buildFontHeightProperty(fontName) );String widthsStr = fontMetricsProps.getProperty( buildFontWidthsProperty(fontName) );String charactersStr = fontMetricsProps.getProperty( buildFontCharactersProperty(fontName) );if(heightStr == null || widthsStr == null || charactersStr == null) {throw new IllegalArgumentException(""The supplied FontMetrics doesn't know about the font '"" + fontName + ""', so we can't use it. Please add it to your font metrics file (see StaticFontMetrics.getFontDetails"");}int height = Integer.parseInt(heightStr);FontDetails d = new FontDetails(fontName, height);String[] charactersStrArray = split(charactersStr, "","", -1);String[] widthsStrArray = split(widthsStr, "","", -1);if (charactersStrArray.length != widthsStrArray.length)throw new RuntimeException(""Number of characters does not number of widths for font "" + fontName);for ( int i = 0; i < widthsStrArray.length; i++ ){if (charactersStrArray[i].length() != 0)d.addChar(charactersStrArray[i].charAt(0), Integer.parseInt(widthsStrArray[i]));}return d;}",public static FontDetails create String fontName Properties fontMetricsProps String heightStr  fontMetricsPropsgetProperty buildFontHeightPropertyfontName String widthsStr  fontMetricsPropsgetProperty buildFontWidthsPropertyfontName String charactersStr  fontMetricsPropsgetProperty buildFontCharactersPropertyfontName ifheightStr  null  widthsStr  null  charactersStr  null throw new IllegalArgumentExceptionThe supplied FontMetrics doesnt know about the font   fontName   so we cant use it Please add it to your font metrics file see StaticFontMetricsgetFontDetailsint height  IntegerparseIntheightStrFontDetails d  new FontDetailsfontName heightString charactersStrArray  splitcharactersStr  1String widthsStrArray  splitwidthsStr  1if charactersStrArraylength  widthsStrArraylengththrow new RuntimeExceptionNumber of characters does not number of widths for font   fontNamefor  int i  0 i  widthsStrArraylength i if charactersStrArrayilength  0daddCharcharactersStrArrayicharAt0 IntegerparseIntwidthsStrArrayireturn d
"public static void registerFunction(String name, Function func){FunctionMetadata metaData = FunctionMetadataRegistry.getFunctionByName(name);if(metaData == null) {if(AnalysisToolPak.isATPFunction(name)) {throw new IllegalArgumentException(name + "" is a function from the Excel Analysis Toolpack. "" +""Use AnalysisToolpack.registerFunction(String name, FreeRefFunction func) instead."");}throw new IllegalArgumentException(""Unknown function: "" + name);}int idx = metaData.getIndex();if(functions[idx] instanceof NotImplementedFunction) {functions[idx] = func;} else {throw new IllegalArgumentException(""POI already implememts "" + name +"". You cannot override POI's implementations of Excel functions"");}}",public static void registerFunctionString name Function funcFunctionMetadata metaData  FunctionMetadataRegistrygetFunctionByNamenameifmetaData  null ifAnalysisToolPakisATPFunctionname throw new IllegalArgumentExceptionname   is a function from the Excel Analysis Toolpack  Use AnalysisToolpackregisterFunctionString name FreeRefFunction func insteadthrow new IllegalArgumentExceptionUnknown function   nameint idx  metaDatagetIndexiffunctionsidx instanceof NotImplementedFunction functionsidx  func else throw new IllegalArgumentExceptionPOI already implememts   name  You cannot override POIs implementations of Excel functions
"public SortedSetDocValuesField(String name, BytesRef bytes) {super(name, TYPE);fieldsData = bytes;}",public SortedSetDocValuesFieldString name BytesRef bytes supername TYPEfieldsData  bytes
"public static TreeFilter create(TreeFilter[] list) {if (list.length == 2)return create(list[0], list[1]);if (list.length < 2)throw new IllegalArgumentException(JGitText.get().atLeastTwoFiltersNeeded);final TreeFilter[] subfilters = new TreeFilter[list.length];System.arraycopy(list, 0, subfilters, 0, list.length);return new List(subfilters);}",public static TreeFilter createTreeFilter list if listlength  2return createlist0 list1if listlength  2throw new IllegalArgumentExceptionJGitTextgetatLeastTwoFiltersNeededfinal TreeFilter subfilters  new TreeFilterlistlengthSystemarraycopylist 0 subfilters 0 listlengthreturn new Listsubfilters
"public V get(Object key) {if (key == null) {HashMapEntry<K, V> e = entryForNullKey;return e == null ? null : e.value;}int hash = key.hashCode();hash ^= (hash >>> 20) ^ (hash >>> 12);hash ^= (hash >>> 7) ^ (hash >>> 4);HashMapEntry<K, V>[] tab = table;for (HashMapEntry<K, V> e = tab[hash & (tab.length - 1)];e != null; e = e.next) {K eKey = e.key;if (eKey == key || (e.hash == hash && key.equals(eKey))) {return e.value;}}return null;}",public V getObject key if key  null HashMapEntryK V e  entryForNullKeyreturn e  null  null  evalueint hash  keyhashCodehash  hash  20  hash  12hash  hash  7  hash  4HashMapEntryK V tab  tablefor HashMapEntryK V e  tabhash  tablength  1e  null e  enext K eKey  ekeyif eKey  key  ehash  hash  keyequalseKey return evaluereturn null
public boolean hasSourceData(int idx) {return sourceLines[idx] != 0;},public boolean hasSourceDataint idx return sourceLinesidx  0
public CreateBotResult createBot(CreateBotRequest request) {request = beforeClientExecution(request);return executeCreateBot(request);},public CreateBotResult createBotCreateBotRequest request request  beforeClientExecutionrequestreturn executeCreateBotrequest
public UpdateMethodResponseResult updateMethodResponse(UpdateMethodResponseRequest request) {request = beforeClientExecution(request);return executeUpdateMethodResponse(request);},public UpdateMethodResponseResult updateMethodResponseUpdateMethodResponseRequest request request  beforeClientExecutionrequestreturn executeUpdateMethodResponserequest
"public boolean add(char[] text) {return map.put(text, PLACEHOLDER) == null;}",public boolean addchar text return mapputtext PLACEHOLDER  null
"public String toString(Vocabulary vocabulary) {if (s0 == null) {return """";}DFASerializer serializer = new DFASerializer(this, vocabulary);return serializer.toString();}",public String toStringVocabulary vocabulary if s0  null return DFASerializer serializer  new DFASerializerthis vocabularyreturn serializertoString
public CreateApiKeyResult createApiKey(CreateApiKeyRequest request) {request = beforeClientExecution(request);return executeCreateApiKey(request);},public CreateApiKeyResult createApiKeyCreateApiKeyRequest request request  beforeClientExecutionrequestreturn executeCreateApiKeyrequest
public DetachTypedLinkResult detachTypedLink(DetachTypedLinkRequest request) {request = beforeClientExecution(request);return executeDetachTypedLink(request);},public DetachTypedLinkResult detachTypedLinkDetachTypedLinkRequest request request  beforeClientExecutionrequestreturn executeDetachTypedLinkrequest
public ExternSheetRecord[] getExternSheetRecords() {return externSheetRecords.toArray(new ExternSheetRecord[0]);},public ExternSheetRecord getExternSheetRecords return externSheetRecordstoArraynew ExternSheetRecord0
public DescribeNetworkInterfaceAttributeResult describeNetworkInterfaceAttribute(DescribeNetworkInterfaceAttributeRequest request) {request = beforeClientExecution(request);return executeDescribeNetworkInterfaceAttribute(request);},public DescribeNetworkInterfaceAttributeResult describeNetworkInterfaceAttributeDescribeNetworkInterfaceAttributeRequest request request  beforeClientExecutionrequestreturn executeDescribeNetworkInterfaceAttributerequest
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[TABID]\n"");buffer.append(""    .elements        = "").append(_tabids.length).append(""\n"");for (int i = 0; i < _tabids.length; i++) {buffer.append(""    .element_"").append(i).append("" = "").append(_tabids[i]).append(""\n"");}buffer.append(""[/TABID]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendTABIDnbufferappend    elements         appendtabidslengthappendnfor int i  0 i  tabidslength i bufferappend    elementappendiappend  appendtabidsiappendnbufferappendTABIDnreturn buffertoString
public long ramBytesUsed() {long ramBytesUsed = BASE_RAM_BYTES_USED;ramBytesUsed += (postingsReader!=null) ? postingsReader.ramBytesUsed() : 0;ramBytesUsed += (indexReader!=null) ? indexReader.ramBytesUsed() : 0;ramBytesUsed += fields.size() * 2L * RamUsageEstimator.NUM_BYTES_OBJECT_REF;for (FieldReader Reader : fields.values()) {ramBytesUsed += Reader.ramBytesUsed();}return ramBytesUsed;},public long ramBytesUsed long ramBytesUsed  BASERAMBYTESUSEDramBytesUsed  postingsReadernull  postingsReaderramBytesUsed  0ramBytesUsed  indexReadernull  indexReaderramBytesUsed  0ramBytesUsed  fieldssize  2L  RamUsageEstimatorNUMBYTESOBJECTREFfor FieldReader Reader  fieldsvalues ramBytesUsed  ReaderramBytesUsedreturn ramBytesUsed
public ByteBuffer put(ByteBuffer buf) {throw new ReadOnlyBufferException();},public ByteBuffer putByteBuffer buf throw new ReadOnlyBufferException
"public RecognizePetRequest() {super(""visionai-poc"", ""2020-04-08"", ""RecognizePet"");setMethod(MethodType.POST);}",public RecognizePetRequest supervisionaipoc 20200408 RecognizePetsetMethodMethodTypePOST
public ImportRestApiResult importRestApi(ImportRestApiRequest request) {request = beforeClientExecution(request);return executeImportRestApi(request);},public ImportRestApiResult importRestApiImportRestApiRequest request request  beforeClientExecutionrequestreturn executeImportRestApirequest
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_anchorId);out.writeShort(field_2_link1);out.writeShort(field_3_link2);},public void serializeLittleEndianOutput out outwriteShortfield1anchorIdoutwriteShortfield2link1outwriteShortfield3link2
"public DescribeSnapshotAttributeRequest(String snapshotId, SnapshotAttributeName attribute) {setSnapshotId(snapshotId);setAttribute(attribute.toString());}",public DescribeSnapshotAttributeRequestString snapshotId SnapshotAttributeName attribute setSnapshotIdsnapshotIdsetAttributeattributetoString
"public Token recoverInline(Parser recognizer)throws RecognitionException{Token matchedSymbol = singleTokenDeletion(recognizer);if ( matchedSymbol!=null ) {recognizer.consume();return matchedSymbol;}if ( singleTokenInsertion(recognizer) ) {return getMissingSymbol(recognizer);}InputMismatchException e;if (nextTokensContext == null) {e = new InputMismatchException(recognizer);} else {e = new InputMismatchException(recognizer, nextTokensState, nextTokensContext);}throw e;}",public Token recoverInlineParser recognizerthrows RecognitionExceptionToken matchedSymbol  singleTokenDeletionrecognizerif  matchedSymbolnull  recognizerconsumereturn matchedSymbolif  singleTokenInsertionrecognizer  return getMissingSymbolrecognizerInputMismatchException eif nextTokensContext  null e  new InputMismatchExceptionrecognizer else e  new InputMismatchExceptionrecognizer nextTokensState nextTokensContextthrow e
"public MultiCategoryListsFacetsExample() {config.setIndexFieldName(""Author"", ""author"");config.setIndexFieldName(""Publish Date"", ""pubdate"");config.setHierarchical(""Publish Date"", true);}",public MultiCategoryListsFacetsExample configsetIndexFieldNameAuthor authorconfigsetIndexFieldNamePublish Date pubdateconfigsetHierarchicalPublish Date true
public GetAddressBookResult getAddressBook(GetAddressBookRequest request) {request = beforeClientExecution(request);return executeGetAddressBook(request);},public GetAddressBookResult getAddressBookGetAddressBookRequest request request  beforeClientExecutionrequestreturn executeGetAddressBookrequest
public PatternFormatting() {field_15_pattern_style = 0;field_16_pattern_color_indexes = 0;},public PatternFormatting field15patternstyle  0field16patterncolorindexes  0
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg1, ValueEval arg2) {try {Double number1 = evaluateValue(arg1, srcRowIndex, srcColumnIndex);if (number1 == null) {return ErrorEval.VALUE_INVALID;}Double number2 = evaluateValue(arg2, srcRowIndex, srcColumnIndex);if (number2 == null) {return ErrorEval.VALUE_INVALID;}return (number1.compareTo(number2) == 0) ? ONE : ZERO;} catch (EvaluationException e) {return e.getErrorEval();}}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg1 ValueEval arg2 try Double number1  evaluateValuearg1 srcRowIndex srcColumnIndexif number1  null return ErrorEvalVALUEINVALIDDouble number2  evaluateValuearg2 srcRowIndex srcColumnIndexif number2  null return ErrorEvalVALUEINVALIDreturn number1compareTonumber2  0  ONE  ZERO catch EvaluationException e return egetErrorEval
public final double getDouble() {return Double.longBitsToDouble(getLong());},public final double getDouble return DoublelongBitsToDoublegetLong
"public Principal(String provider, String id, boolean stripHyphen) {this.provider = provider;this.id = stripHyphen ?id.replace(""-"", """") : id;}",public PrincipalString provider String id boolean stripHyphen thisprovider  providerthisid  stripHyphen idreplace   id
public ListJobsResult listJobs() {return listJobs(new ListJobsRequest());},public ListJobsResult listJobs return listJobsnew ListJobsRequest
public CharBuffer slice() {byteBuffer.limit(limit * SizeOf.CHAR);byteBuffer.position(position * SizeOf.CHAR);ByteBuffer bb = byteBuffer.slice().order(byteBuffer.order());CharBuffer result = new CharToByteBufferAdapter(bb);byteBuffer.clear();return result;},public CharBuffer slice byteBufferlimitlimit  SizeOfCHARbyteBufferpositionposition  SizeOfCHARByteBuffer bb  byteBuffersliceorderbyteBufferorderCharBuffer result  new CharToByteBufferAdapterbbbyteBufferclearreturn result
"public static final int tagMessage(byte[] b, int ptr) {final int sz = b.length;if (ptr == 0)ptr += 48; while (ptr < sz && b[ptr] != '\n')ptr = nextLF(b, ptr);if (ptr < sz && b[ptr] == '\n')return ptr + 1;return -1;}",public static final int tagMessagebyte b int ptr final int sz  blengthif ptr  0ptr  48 while ptr  sz  bptr  nptr  nextLFb ptrif ptr  sz  bptr  nreturn ptr  1return 1
public RebootBrokerResult rebootBroker(RebootBrokerRequest request) {request = beforeClientExecution(request);return executeRebootBroker(request);},public RebootBrokerResult rebootBrokerRebootBrokerRequest request request  beforeClientExecutionrequestreturn executeRebootBrokerrequest
public int getLastInternalSheetIndexForExtIndex(int extRefIndex) {if (extRefIndex >= _externSheetRecord.getNumOfRefs() || extRefIndex < 0) {return -1;}return _externSheetRecord.getLastSheetIndexFromRefIndex(extRefIndex);},public int getLastInternalSheetIndexForExtIndexint extRefIndex if extRefIndex  externSheetRecordgetNumOfRefs  extRefIndex  0 return 1return externSheetRecordgetLastSheetIndexFromRefIndexextRefIndex
public RemoveTagsFromOnPremisesInstancesResult removeTagsFromOnPremisesInstances(RemoveTagsFromOnPremisesInstancesRequest request) {request = beforeClientExecution(request);return executeRemoveTagsFromOnPremisesInstances(request);},public RemoveTagsFromOnPremisesInstancesResult removeTagsFromOnPremisesInstancesRemoveTagsFromOnPremisesInstancesRequest request request  beforeClientExecutionrequestreturn executeRemoveTagsFromOnPremisesInstancesrequest
"public static final int nextLF(byte[] b, int ptr) {return next(b, ptr, '\n');}",public static final int nextLFbyte b int ptr return nextb ptr n
public boolean equals(Object other) {return sameClassAs(other) &&equalsTo(getClass().cast(other));},public boolean equalsObject other return sameClassAsother equalsTogetClasscastother
public void setResult(ReceiveCommand.Result status) {result = decode(status);super.setResult(status);},public void setResultReceiveCommandResult status result  decodestatussupersetResultstatus
public UpdateIAMPolicyAssignmentResult updateIAMPolicyAssignment(UpdateIAMPolicyAssignmentRequest request) {request = beforeClientExecution(request);return executeUpdateIAMPolicyAssignment(request);},public UpdateIAMPolicyAssignmentResult updateIAMPolicyAssignmentUpdateIAMPolicyAssignmentRequest request request  beforeClientExecutionrequestreturn executeUpdateIAMPolicyAssignmentrequest
public ExportImageResult exportImage(ExportImageRequest request) {request = beforeClientExecution(request);return executeExportImage(request);},public ExportImageResult exportImageExportImageRequest request request  beforeClientExecutionrequestreturn executeExportImagerequest
public ListTopicsDetectionJobsResult listTopicsDetectionJobs(ListTopicsDetectionJobsRequest request) {request = beforeClientExecution(request);return executeListTopicsDetectionJobs(request);},public ListTopicsDetectionJobsResult listTopicsDetectionJobsListTopicsDetectionJobsRequest request request  beforeClientExecutionrequestreturn executeListTopicsDetectionJobsrequest
"public static IntBuffer wrap(int[] array, int start, int intCount) {Arrays.checkOffsetAndCount(array.length, start, intCount);IntBuffer buf = new ReadWriteIntArrayBuffer(array);buf.position = start;buf.limit = start + intCount;return buf;}",public static IntBuffer wrapint array int start int intCount ArrayscheckOffsetAndCountarraylength start intCountIntBuffer buf  new ReadWriteIntArrayBufferarraybufposition  startbuflimit  start  intCountreturn buf
public ListDeploymentTargetsResult listDeploymentTargets(ListDeploymentTargetsRequest request) {request = beforeClientExecution(request);return executeListDeploymentTargets(request);},public ListDeploymentTargetsResult listDeploymentTargetsListDeploymentTargetsRequest request request  beforeClientExecutionrequestreturn executeListDeploymentTargetsrequest
"public HSSFTextbox createTextbox(HSSFChildAnchor anchor) {HSSFTextbox shape = new HSSFTextbox(this, anchor);shape.setParent(this);shape.setAnchor(anchor);shapes.add(shape);onCreate(shape);return shape;}",public HSSFTextbox createTextboxHSSFChildAnchor anchor HSSFTextbox shape  new HSSFTextboxthis anchorshapesetParentthisshapesetAnchoranchorshapesaddshapeonCreateshapereturn shape
public CreateStreamProcessorResult createStreamProcessor(CreateStreamProcessorRequest request) {request = beforeClientExecution(request);return executeCreateStreamProcessor(request);},public CreateStreamProcessorResult createStreamProcessorCreateStreamProcessorRequest request request  beforeClientExecutionrequestreturn executeCreateStreamProcessorrequest
"public boolean matches(char s[], int len) {return (len - suffix.length >= min && endsWith(s, len, suffix));}",public boolean matcheschar s int len return len  suffixlength  min  endsWiths len suffix
"public void setFontStyle(boolean italic, boolean bold){boolean modified = italic || bold;fontFormatting.setItalic(italic);fontFormatting.setBold(bold);fontFormatting.setFontStyleModified(modified);fontFormatting.setFontWieghtModified(modified);}",public void setFontStyleboolean italic boolean boldboolean modified  italic  boldfontFormattingsetItalicitalicfontFormattingsetBoldboldfontFormattingsetFontStyleModifiedmodifiedfontFormattingsetFontWieghtModifiedmodified
public void writeShort(int value) throws IOException {checkWritePrimitiveTypes();primitiveTypes.writeShort(value);},public void writeShortint value throws IOException checkWritePrimitiveTypesprimitiveTypeswriteShortvalue
public CreateEntityRecognizerResult createEntityRecognizer(CreateEntityRecognizerRequest request) {request = beforeClientExecution(request);return executeCreateEntityRecognizer(request);},public CreateEntityRecognizerResult createEntityRecognizerCreateEntityRecognizerRequest request request  beforeClientExecutionrequestreturn executeCreateEntityRecognizerrequest
public DescribeContributorInsightsResult describeContributorInsights(DescribeContributorInsightsRequest request) {request = beforeClientExecution(request);return executeDescribeContributorInsights(request);},public DescribeContributorInsightsResult describeContributorInsightsDescribeContributorInsightsRequest request request  beforeClientExecutionrequestreturn executeDescribeContributorInsightsrequest
public CreateLaunchConfigurationResult createLaunchConfiguration(CreateLaunchConfigurationRequest request) {request = beforeClientExecution(request);return executeCreateLaunchConfiguration(request);},public CreateLaunchConfigurationResult createLaunchConfigurationCreateLaunchConfigurationRequest request request  beforeClientExecutionrequestreturn executeCreateLaunchConfigurationrequest
public int read() throws IOException {checkReadPrimitiveTypes();return primitiveData.read();},public int read throws IOException checkReadPrimitiveTypesreturn primitiveDataread
"public TokenStream create(TokenStream input) {return new LimitTokenCountFilter(input, maxTokenCount, consumeAllTokens);}",public TokenStream createTokenStream input return new LimitTokenCountFilterinput maxTokenCount consumeAllTokens
public CharBuffer asReadOnlyBuffer() {return duplicate();},public CharBuffer asReadOnlyBuffer return duplicate
public GetConsoleScreenshotResult getConsoleScreenshot(GetConsoleScreenshotRequest request) {request = beforeClientExecution(request);return executeGetConsoleScreenshot(request);},public GetConsoleScreenshotResult getConsoleScreenshotGetConsoleScreenshotRequest request request  beforeClientExecutionrequestreturn executeGetConsoleScreenshotrequest
public DrawingRecordForBiffViewer(DrawingRecord r){super(convertToInputStream(r));convertRawBytesToEscherRecords();},public DrawingRecordForBiffViewerDrawingRecord rsuperconvertToInputStreamrconvertRawBytesToEscherRecords
public boolean hasPrevious() {return pos >= 0;},public boolean hasPrevious return pos  0
public NotImplemented(String functionName) {_functionName = functionName;},public NotImplementedString functionName functionName  functionName
public UpdateDirectoryConfigResult updateDirectoryConfig(UpdateDirectoryConfigRequest request) {request = beforeClientExecution(request);return executeUpdateDirectoryConfig(request);},public UpdateDirectoryConfigResult updateDirectoryConfigUpdateDirectoryConfigRequest request request  beforeClientExecutionrequestreturn executeUpdateDirectoryConfigrequest
public DeleteQualificationTypeResult deleteQualificationType(DeleteQualificationTypeRequest request) {request = beforeClientExecution(request);return executeDeleteQualificationType(request);},public DeleteQualificationTypeResult deleteQualificationTypeDeleteQualificationTypeRequest request request  beforeClientExecutionrequestreturn executeDeleteQualificationTyperequest
@Override public void clear() {throw new UnsupportedOperationException();},Override public void clear throw new UnsupportedOperationException
public int startNewSlice() {return offset = pool.newSlice(FIRST_LEVEL_SIZE) + pool.intOffset;},public int startNewSlice return offset  poolnewSliceFIRSTLEVELSIZE  poolintOffset
public void postInvalidate() {if (!mNoInvalidate) {super.postInvalidate();}},public void postInvalidate if mNoInvalidate superpostInvalidate
"public List<FacetEntry> getFacetEntries(int offset, int limit) {List<FacetEntry> entries = new LinkedList<>();int skipped = 0;int included = 0;for (FacetEntry facetEntry : facetEntries) {if (skipped < offset) {skipped++;continue;}if (included++ >= limit) {break;}entries.add(facetEntry);}return entries;}",public ListFacetEntry getFacetEntriesint offset int limit ListFacetEntry entries  new LinkedListint skipped  0int included  0for FacetEntry facetEntry  facetEntries if skipped  offset skippedcontinueif included  limit breakentriesaddfacetEntryreturn entries
"public static synchronized CoderResult unmappableForLength(int length)throws IllegalArgumentException {if (length > 0) {Integer key = Integer.valueOf(length);synchronized (_unmappableErrors) {CoderResult r = _unmappableErrors.get(key);if (r == null) {r = new CoderResult(TYPE_UNMAPPABLE_CHAR, length);_unmappableErrors.put(key, r);}return r;}}throw new IllegalArgumentException(""Length must be greater than 0; was "" + length);}",public static synchronized CoderResult unmappableForLengthint lengththrows IllegalArgumentException if length  0 Integer key  IntegervalueOflengthsynchronized unmappableErrors CoderResult r  unmappableErrorsgetkeyif r  null r  new CoderResultTYPEUNMAPPABLECHAR lengthunmappableErrorsputkey rreturn rthrow new IllegalArgumentExceptionLength must be greater than 0 was   length
public UpdateDetectorVersionStatusResult updateDetectorVersionStatus(UpdateDetectorVersionStatusRequest request) {request = beforeClientExecution(request);return executeUpdateDetectorVersionStatus(request);},public UpdateDetectorVersionStatusResult updateDetectorVersionStatusUpdateDetectorVersionStatusRequest request request  beforeClientExecutionrequestreturn executeUpdateDetectorVersionStatusrequest
public void remove() {iterator.remove();subList.sizeChanged(false);end--;},public void remove iteratorremovesubListsizeChangedfalseend
"public void setRef(Character way, int ref) {Cell c = at(way);if (c == null) {c = new Cell();c.ref = ref;cells.put(way, c);} else {c.ref = ref;}}",public void setRefCharacter way int ref Cell c  atwayif c  null c  new Cellcref  refcellsputway c else cref  ref
public QueryNodeProcessorPipeline(QueryConfigHandler queryConfigHandler) {this.queryConfig = queryConfigHandler;},public QueryNodeProcessorPipelineQueryConfigHandler queryConfigHandler thisqueryConfig  queryConfigHandler
public IllegalFormatPrecisionException(int p) {this.p = p;},public IllegalFormatPrecisionExceptionint p thisp  p
"@Override public final boolean equals(Object o) {if (!(o instanceof Entry)) {return false;}Entry<?, ?> e = (Entry<?, ?>) o;return Objects.equal(e.getKey(), key)&& Objects.equal(e.getValue(), value);}",Override public final boolean equalsObject o if o instanceof Entry return falseEntry  e  Entry  oreturn ObjectsequalegetKey key ObjectsequalegetValue value
public ObjectId getOldObjectId() {return oldValue;},public ObjectId getOldObjectId return oldValue
public AuthorizeIpRulesResult authorizeIpRules(AuthorizeIpRulesRequest request) {request = beforeClientExecution(request);return executeAuthorizeIpRules(request);},public AuthorizeIpRulesResult authorizeIpRulesAuthorizeIpRulesRequest request request  beforeClientExecutionrequestreturn executeAuthorizeIpRulesrequest
"public GetPrivateAccessUrlsRequest() {super(""CloudPhoto"", ""2017-07-11"", ""GetPrivateAccessUrls"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public GetPrivateAccessUrlsRequest superCloudPhoto 20170711 GetPrivateAccessUrls cloudphotosetProtocolProtocolTypeHTTPS
public boolean remove(Object o) {int oldSize = size;HashMap.this.remove(o);return size != oldSize;},public boolean removeObject o int oldSize  sizeHashMapthisremoveoreturn size  oldSize
@Override public int size() {return filteredEntrySet.size();},Override public int size return filteredEntrySetsize
public PutConfigurationSetTrackingOptionsResult putConfigurationSetTrackingOptions(PutConfigurationSetTrackingOptionsRequest request) {request = beforeClientExecution(request);return executePutConfigurationSetTrackingOptions(request);},public PutConfigurationSetTrackingOptionsResult putConfigurationSetTrackingOptionsPutConfigurationSetTrackingOptionsRequest request request  beforeClientExecutionrequestreturn executePutConfigurationSetTrackingOptionsrequest
"public static final ObjectId fromString(byte[] buf, int offset) {return fromHexString(buf, offset);}",public static final ObjectId fromStringbyte buf int offset return fromHexStringbuf offset
public GetRelationalDatabaseResult getRelationalDatabase(GetRelationalDatabaseRequest request) {request = beforeClientExecution(request);return executeGetRelationalDatabase(request);},public GetRelationalDatabaseResult getRelationalDatabaseGetRelationalDatabaseRequest request request  beforeClientExecutionrequestreturn executeGetRelationalDatabaserequest
"public JschSession(Session session, URIish uri) {sock = session;this.uri = uri;}",public JschSessionSession session URIish uri sock  sessionthisuri  uri
public SetCognitoEventsResult setCognitoEvents(SetCognitoEventsRequest request) {request = beforeClientExecution(request);return executeSetCognitoEvents(request);},public SetCognitoEventsResult setCognitoEventsSetCognitoEventsRequest request request  beforeClientExecutionrequestreturn executeSetCognitoEventsrequest
public BatchDetectEntitiesResult batchDetectEntities(BatchDetectEntitiesRequest request) {request = beforeClientExecution(request);return executeBatchDetectEntities(request);},public BatchDetectEntitiesResult batchDetectEntitiesBatchDetectEntitiesRequest request request  beforeClientExecutionrequestreturn executeBatchDetectEntitiesrequest
"public synchronized int codePointCount(int beginIndex, int endIndex) {return super.codePointCount(beginIndex, endIndex);}",public synchronized int codePointCountint beginIndex int endIndex return supercodePointCountbeginIndex endIndex
public GenerateClientCertificateResult generateClientCertificate(GenerateClientCertificateRequest request) {request = beforeClientExecution(request);return executeGenerateClientCertificate(request);},public GenerateClientCertificateResult generateClientCertificateGenerateClientCertificateRequest request request  beforeClientExecutionrequestreturn executeGenerateClientCertificaterequest
public final void writeDouble(double val) throws IOException {writeLong(Double.doubleToLongBits(val));},public final void writeDoubledouble val throws IOException writeLongDoubledoubleToLongBitsval
"public static void fill(int[] array, int start, int end, int value) {Arrays.checkStartAndEnd(array.length, start, end);for (int i = start; i < end; i++) {array[i] = value;}}",public static void fillint array int start int end int value ArrayscheckStartAndEndarraylength start endfor int i  start i  end i arrayi  value
public final char yycharat(int pos) {return zzBuffer[zzStartRead+pos];},public final char yycharatint pos return zzBufferzzStartReadpos
"public void pushMode(int m) {if ( LexerATNSimulator.debug ) System.out.println(""pushMode ""+m);_modeStack.push(_mode);mode(m);}",public void pushModeint m if  LexerATNSimulatordebug  SystemoutprintlnpushMode mmodeStackpushmodemodem
public Set<String> getCapabilities() {return command.getCapabilities();},public SetString getCapabilities return commandgetCapabilities
public DescribeReservedInstancesListingsResult describeReservedInstancesListings() {return describeReservedInstancesListings(new DescribeReservedInstancesListingsRequest());},public DescribeReservedInstancesListingsResult describeReservedInstancesListings return describeReservedInstancesListingsnew DescribeReservedInstancesListingsRequest
public RegisterInstanceEventNotificationAttributesResult registerInstanceEventNotificationAttributes(RegisterInstanceEventNotificationAttributesRequest request) {request = beforeClientExecution(request);return executeRegisterInstanceEventNotificationAttributes(request);},public RegisterInstanceEventNotificationAttributesResult registerInstanceEventNotificationAttributesRegisterInstanceEventNotificationAttributesRequest request request  beforeClientExecutionrequestreturn executeRegisterInstanceEventNotificationAttributesrequest
public PutRuleResult putRule(PutRuleRequest request) {request = beforeClientExecution(request);return executePutRule(request);},public PutRuleResult putRulePutRuleRequest request request  beforeClientExecutionrequestreturn executePutRulerequest
"public static char[] grow(char[] array, int minSize) {assert minSize >= 0: ""size must be positive (got "" + minSize + ""): likely integer overflow?"";if (array.length < minSize) {return growExact(array, oversize(minSize, Character.BYTES));} else return array;}",public static char growchar array int minSize assert minSize  0 size must be positive got   minSize   likely integer overflowif arraylength  minSize return growExactarray oversizeminSize CharacterBYTES else return array
public CleanCommand setPaths(Set<String> paths) {this.paths = paths;return this;},public CleanCommand setPathsSetString paths thispaths  pathsreturn this
"public int getLevelForDistance(double dist) {if (dist == 0)return maxLevels;final int level = GeohashUtils.lookupHashLenForWidthHeight(dist, dist);return Math.max(Math.min(level, maxLevels), 1);}",public int getLevelForDistancedouble dist if dist  0return maxLevelsfinal int level  GeohashUtilslookupHashLenForWidthHeightdist distreturn MathmaxMathminlevel maxLevels 1
public StartDocumentTextDetectionResult startDocumentTextDetection(StartDocumentTextDetectionRequest request) {request = beforeClientExecution(request);return executeStartDocumentTextDetection(request);},public StartDocumentTextDetectionResult startDocumentTextDetectionStartDocumentTextDetectionRequest request request  beforeClientExecutionrequestreturn executeStartDocumentTextDetectionrequest
public String getLine() {return firstWant.getLine();},public String getLine return firstWantgetLine
"public ValueEval getItem(int index) {if(index > _size) {throw new ArrayIndexOutOfBoundsException(""Specified index ("" + index+ "") is outside the allowed range (0.."" + (_size-1) + "")"");}return _tableArray.getValue(_rowIndex, index);}",public ValueEval getItemint index ifindex  size throw new ArrayIndexOutOfBoundsExceptionSpecified index   index  is outside the allowed range 0  size1  return tableArraygetValuerowIndex index
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[IFMT]\n"");buffer.append(""    .formatIndex          = "").append(""0x"").append(HexDump.toHex(  getFormatIndex ())).append("" ("").append( getFormatIndex() ).append("" )"");buffer.append(System.getProperty(""line.separator""));buffer.append(""[/IFMT]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendIFMTnbufferappend    formatIndex           append0xappendHexDumptoHex  getFormatIndex append append getFormatIndex append bufferappendSystemgetPropertylineseparatorbufferappendIFMTnreturn buffertoString
public SubmoduleSyncCommand(Repository repo) {super(repo);paths = new ArrayList<>();},public SubmoduleSyncCommandRepository repo superrepopaths  new ArrayList
public void registerWorkflowType(RegisterWorkflowTypeRequest request) {request = beforeClientExecution(request);executeRegisterWorkflowType(request);},public void registerWorkflowTypeRegisterWorkflowTypeRequest request request  beforeClientExecutionrequestexecuteRegisterWorkflowTyperequest
"public UnescapedCharSequence(char[] chars, boolean[] wasEscaped, int offset,int length) {this.chars = new char[length];this.wasEscaped = new boolean[length];System.arraycopy(chars, offset, this.chars, 0, length);System.arraycopy(wasEscaped, offset, this.wasEscaped, 0, length);}",public UnescapedCharSequencechar chars boolean wasEscaped int offsetint length thischars  new charlengththiswasEscaped  new booleanlengthSystemarraycopychars offset thischars 0 lengthSystemarraycopywasEscaped offset thiswasEscaped 0 length
public CreateDatasetGroupResult createDatasetGroup(CreateDatasetGroupRequest request) {request = beforeClientExecution(request);return executeCreateDatasetGroup(request);},public CreateDatasetGroupResult createDatasetGroupCreateDatasetGroupRequest request request  beforeClientExecutionrequestreturn executeCreateDatasetGrouprequest
public boolean equals(Object obj) {if (this == obj)return true;if (obj == null)return false;if (getClass() != obj.getClass())return false;FieldVals other = (FieldVals) obj;if (fieldName == null) {if (other.fieldName != null)return false;} else if (!fieldName.equals(other.fieldName))return false;if (maxEdits != other.maxEdits) {return false;}if (prefixLength != other.prefixLength)return false;if (queryString == null) {if (other.queryString != null)return false;} else if (!queryString.equals(other.queryString))return false;return true;},public boolean equalsObject obj if this  objreturn trueif obj  nullreturn falseif getClass  objgetClassreturn falseFieldVals other  FieldVals objif fieldName  null if otherfieldName  nullreturn false else if fieldNameequalsotherfieldNamereturn falseif maxEdits  othermaxEdits return falseif prefixLength  otherprefixLengthreturn falseif queryString  null if otherqueryString  nullreturn false else if queryStringequalsotherqueryStringreturn falsereturn true
public BuildSuggestersResult buildSuggesters(BuildSuggestersRequest request) {request = beforeClientExecution(request);return executeBuildSuggesters(request);},public BuildSuggestersResult buildSuggestersBuildSuggestersRequest request request  beforeClientExecutionrequestreturn executeBuildSuggestersrequest
public GetRelationalDatabaseBundlesResult getRelationalDatabaseBundles(GetRelationalDatabaseBundlesRequest request) {request = beforeClientExecution(request);return executeGetRelationalDatabaseBundles(request);},public GetRelationalDatabaseBundlesResult getRelationalDatabaseBundlesGetRelationalDatabaseBundlesRequest request request  beforeClientExecutionrequestreturn executeGetRelationalDatabaseBundlesrequest
"public String getMessages() {return messageBuffer != null ? messageBuffer.toString() : """"; }",public String getMessages return messageBuffer  null  messageBuffertoString   
"public DelimitedPayloadTokenFilter(TokenStream input, char delimiter, PayloadEncoder encoder) {super(input);this.delimiter = delimiter;this.encoder = encoder;}",public DelimitedPayloadTokenFilterTokenStream input char delimiter PayloadEncoder encoder superinputthisdelimiter  delimiterthisencoder  encoder
"public void setPrintArea(int sheetIndex, int startColumn, int endColumn,int startRow, int endRow) {CellReference cell = new CellReference(startRow, startColumn, true, true);String reference = cell.formatAsString();cell = new CellReference(endRow, endColumn, true, true);reference = reference+"":""+cell.formatAsString();setPrintArea(sheetIndex, reference);}",public void setPrintAreaint sheetIndex int startColumn int endColumnint startRow int endRow CellReference cell  new CellReferencestartRow startColumn true trueString reference  cellformatAsStringcell  new CellReferenceendRow endColumn true truereference  referencecellformatAsStringsetPrintAreasheetIndex reference
"public void normalise64bit() {int oldBitLen = _significand.bitLength();int sc = oldBitLen - C_64;if (sc == 0) {return;}if (sc < 0) {throw new IllegalStateException(""Not enough precision"");}_binaryExponent += sc;if (sc > 32) {int highShift = (sc-1) & 0xFFFFE0;_significand = _significand.shiftRight(highShift);sc -= highShift;oldBitLen -= highShift;}if (sc < 1) {throw new IllegalStateException();}_significand = Rounder.round(_significand, sc);if (_significand.bitLength() > oldBitLen) {sc++;_binaryExponent++;}_significand = _significand.shiftRight(sc);}",public void normalise64bit int oldBitLen  significandbitLengthint sc  oldBitLen  C64if sc  0 returnif sc  0 throw new IllegalStateExceptionNot enough precisionbinaryExponent  scif sc  32 int highShift  sc1  0xFFFFE0significand  significandshiftRighthighShiftsc  highShiftoldBitLen  highShiftif sc  1 throw new IllegalStateExceptionsignificand  Rounderroundsignificand scif significandbitLength  oldBitLen scbinaryExponentsignificand  significandshiftRightsc
"public ObjRecord(RecordInputStream in) {byte[] subRecordData = in.readRemainder();if (LittleEndian.getUShort(subRecordData, 0) != CommonObjectDataSubRecord.sid) {_uninterpretedData = subRecordData;return;}LittleEndianByteArrayInputStream subRecStream = new LittleEndianByteArrayInputStream(subRecordData);CommonObjectDataSubRecord cmo = (CommonObjectDataSubRecord)SubRecord.createSubRecord(subRecStream, 0);subrecords.add(cmo);while (true) {SubRecord subRecord = SubRecord.createSubRecord(subRecStream, cmo.getObjectType());subrecords.add(subRecord);if (subRecord.isTerminating()) {break;}}final int nRemainingBytes = subRecordData.length-subRecStream.getReadIndex();if (nRemainingBytes > 0) {_isPaddedToQuadByteMultiple = subRecordData.length % MAX_PAD_ALIGNMENT == 0;if (nRemainingBytes >= (_isPaddedToQuadByteMultiple ? MAX_PAD_ALIGNMENT : NORMAL_PAD_ALIGNMENT)) {if (!canPaddingBeDiscarded(subRecordData, nRemainingBytes)) {String msg = ""Leftover "" + nRemainingBytes+ "" bytes in subrecord data "" + HexDump.toHex(subRecordData);throw new RecordFormatException(msg);}_isPaddedToQuadByteMultiple = false;}} else {_isPaddedToQuadByteMultiple = false;}_uninterpretedData = null;}",public ObjRecordRecordInputStream in byte subRecordData  inreadRemainderif LittleEndiangetUShortsubRecordData 0  CommonObjectDataSubRecordsid uninterpretedData  subRecordDatareturnLittleEndianByteArrayInputStream subRecStream  new LittleEndianByteArrayInputStreamsubRecordDataCommonObjectDataSubRecord cmo  CommonObjectDataSubRecordSubRecordcreateSubRecordsubRecStream 0subrecordsaddcmowhile true SubRecord subRecord  SubRecordcreateSubRecordsubRecStream cmogetObjectTypesubrecordsaddsubRecordif subRecordisTerminating breakfinal int nRemainingBytes  subRecordDatalengthsubRecStreamgetReadIndexif nRemainingBytes  0 isPaddedToQuadByteMultiple  subRecordDatalength  MAXPADALIGNMENT  0if nRemainingBytes  isPaddedToQuadByteMultiple  MAXPADALIGNMENT  NORMALPADALIGNMENT if canPaddingBeDiscardedsubRecordData nRemainingBytes String msg  Leftover   nRemainingBytes  bytes in subrecord data   HexDumptoHexsubRecordDatathrow new RecordFormatExceptionmsgisPaddedToQuadByteMultiple  false else isPaddedToQuadByteMultiple  falseuninterpretedData  null
"public FrenchLightStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public FrenchLightStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
@Override public int size() {Slice slice = this.slice;return slice.to - slice.from;},Override public int size Slice slice  thisslicereturn sliceto  slicefrom
public boolean equals(Object other) {if (!(other instanceof IntBuffer)) {return false;}IntBuffer otherBuffer = (IntBuffer) other;if (remaining() != otherBuffer.remaining()) {return false;}int myPosition = position;int otherPosition = otherBuffer.position;boolean equalSoFar = true;while (equalSoFar && (myPosition < limit)) {equalSoFar = get(myPosition++) == otherBuffer.get(otherPosition++);}return equalSoFar;},public boolean equalsObject other if other instanceof IntBuffer return falseIntBuffer otherBuffer  IntBuffer otherif remaining  otherBufferremaining return falseint myPosition  positionint otherPosition  otherBufferpositionboolean equalSoFar  truewhile equalSoFar  myPosition  limit equalSoFar  getmyPosition  otherBuffergetotherPositionreturn equalSoFar
"public static void fill(char[] array, int start, int end, char value) {Arrays.checkStartAndEnd(array.length, start, end);for (int i = start; i < end; i++) {array[i] = value;}}",public static void fillchar array int start int end char value ArrayscheckStartAndEndarraylength start endfor int i  start i  end i arrayi  value
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[CALCMODE]\n"");buffer.append(""    .calcmode       = "").append(Integer.toHexString(getCalcMode())).append(""\n"");buffer.append(""[/CALCMODE]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendCALCMODEnbufferappend    calcmode        appendIntegertoHexStringgetCalcModeappendnbufferappendCALCMODEnreturn buffertoString
public void setCurrent(String value){current = value.toCharArray();cursor = 0;limit = value.length();limit_backward = 0;bra = cursor;ket = limit;},public void setCurrentString valuecurrent  valuetoCharArraycursor  0limit  valuelengthlimitbackward  0bra  cursorket  limit
"public ShortBuffer put(int index, short c) {checkIndex(index);backingArray[offset + index] = c;return this;}",public ShortBuffer putint index short c checkIndexindexbackingArrayoffset  index  creturn this
public EventSubscription deleteEventSubscription(DeleteEventSubscriptionRequest request) {request = beforeClientExecution(request);return executeDeleteEventSubscription(request);},public EventSubscription deleteEventSubscriptionDeleteEventSubscriptionRequest request request  beforeClientExecutionrequestreturn executeDeleteEventSubscriptionrequest
public void setTokenType(String tokenType) {this.tokenType = tokenType;},public void setTokenTypeString tokenType thistokenType  tokenType
"public NumericDocValuesField(String name, long value) {this(name, Long.valueOf(value));}",public NumericDocValuesFieldString name long value thisname LongvalueOfvalue
public AddTagsRequest(String resourceId) {setResourceId(resourceId);},public AddTagsRequestString resourceId setResourceIdresourceId
"public ValueEval getRefEval(int rowIndex, int columnIndex) {SheetRangeEvaluator sre = getRefEvaluatorForCurrentSheet();return new LazyRefEval(rowIndex, columnIndex, sre);}",public ValueEval getRefEvalint rowIndex int columnIndex SheetRangeEvaluator sre  getRefEvaluatorForCurrentSheetreturn new LazyRefEvalrowIndex columnIndex sre
public DescribeTaskDefinitionResult describeTaskDefinition(DescribeTaskDefinitionRequest request) {request = beforeClientExecution(request);return executeDescribeTaskDefinition(request);},public DescribeTaskDefinitionResult describeTaskDefinitionDescribeTaskDefinitionRequest request request  beforeClientExecutionrequestreturn executeDescribeTaskDefinitionrequest
"public void sort() {if (count > 1) ArrayUtil.timSort(points, 0, count);}",public void sort if count  1 ArrayUtiltimSortpoints 0 count
public static final RevFilter before(long ts) {return new Before(ts);},public static final RevFilter beforelong ts return new Beforets
public void set(E object) {throw new UnsupportedOperationException();},public void setE object throw new UnsupportedOperationException
public EscherDggRecord getDgg() {return dgg;},public EscherDggRecord getDgg return dgg
"public ListenerHandle addConfigChangedListener(ConfigChangedListener listener) {return addListener(ConfigChangedListener.class, listener);}",public ListenerHandle addConfigChangedListenerConfigChangedListener listener return addListenerConfigChangedListenerclass listener
public DetectSentimentResult detectSentiment(DetectSentimentRequest request) {request = beforeClientExecution(request);return executeDetectSentiment(request);},public DetectSentimentResult detectSentimentDetectSentimentRequest request request  beforeClientExecutionrequestreturn executeDetectSentimentrequest
"public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {final byte block = blocks[blocksOffset++];values[valuesOffset++] = (block >>> 6) & 3;values[valuesOffset++] = (block >>> 4) & 3;values[valuesOffset++] = (block >>> 2) & 3;values[valuesOffset++] = block & 3;}}",public void decodebyte blocks int blocksOffset long values int valuesOffset int iterations for int j  0 j  iterations j final byte block  blocksblocksOffsetvaluesvaluesOffset  block  6  3valuesvaluesOffset  block  4  3valuesvaluesOffset  block  2  3valuesvaluesOffset  block  3
public HeaderRecord clone() {return copy();},public HeaderRecord clone return copy
public CreateEndpointConfigResult createEndpointConfig(CreateEndpointConfigRequest request) {request = beforeClientExecution(request);return executeCreateEndpointConfig(request);},public CreateEndpointConfigResult createEndpointConfigCreateEndpointConfigRequest request request  beforeClientExecutionrequestreturn executeCreateEndpointConfigrequest
public Interpolator getInterpolator() {return mInterpolator;},public Interpolator getInterpolator return mInterpolator
public GetSolutionMetricsResult getSolutionMetrics(GetSolutionMetricsRequest request) {request = beforeClientExecution(request);return executeGetSolutionMetrics(request);},public GetSolutionMetricsResult getSolutionMetricsGetSolutionMetricsRequest request request  beforeClientExecutionrequestreturn executeGetSolutionMetricsrequest
public StopActivityStreamResult stopActivityStream(StopActivityStreamRequest request) {request = beforeClientExecution(request);return executeStopActivityStream(request);},public StopActivityStreamResult stopActivityStreamStopActivityStreamRequest request request  beforeClientExecutionrequestreturn executeStopActivityStreamrequest
public ListTypedLinkFacetAttributesResult listTypedLinkFacetAttributes(ListTypedLinkFacetAttributesRequest request) {request = beforeClientExecution(request);return executeListTypedLinkFacetAttributes(request);},public ListTypedLinkFacetAttributesResult listTypedLinkFacetAttributesListTypedLinkFacetAttributesRequest request request  beforeClientExecutionrequestreturn executeListTypedLinkFacetAttributesrequest
public ListSentimentDetectionJobsResult listSentimentDetectionJobs(ListSentimentDetectionJobsRequest request) {request = beforeClientExecution(request);return executeListSentimentDetectionJobs(request);},public ListSentimentDetectionJobsResult listSentimentDetectionJobsListSentimentDetectionJobsRequest request request  beforeClientExecutionrequestreturn executeListSentimentDetectionJobsrequest
public GetAccountSendingEnabledResult getAccountSendingEnabled(GetAccountSendingEnabledRequest request) {request = beforeClientExecution(request);return executeGetAccountSendingEnabled(request);},public GetAccountSendingEnabledResult getAccountSendingEnabledGetAccountSendingEnabledRequest request request  beforeClientExecutionrequestreturn executeGetAccountSendingEnabledrequest
"public static int getBuiltinFormat(String pFmt) {String fmt = ""TEXT"".equalsIgnoreCase(pFmt) ? ""@"" : pFmt;int i = -1;for (String f : _formats) {i++;if (f.equals(fmt)) {return i;}}return -1;}",public static int getBuiltinFormatString pFmt String fmt  TEXTequalsIgnoreCasepFmt    pFmtint i  1for String f  formats iif fequalsfmt return ireturn 1
"public void simpleValue(StringBuffer toAppendTo, Object value) {formatValue(toAppendTo, value);}",public void simpleValueStringBuffer toAppendTo Object value formatValuetoAppendTo value
public BatchCheckLayerAvailabilityResult batchCheckLayerAvailability(BatchCheckLayerAvailabilityRequest request) {request = beforeClientExecution(request);return executeBatchCheckLayerAvailability(request);},public BatchCheckLayerAvailabilityResult batchCheckLayerAvailabilityBatchCheckLayerAvailabilityRequest request request  beforeClientExecutionrequestreturn executeBatchCheckLayerAvailabilityrequest
public void clearSubRecords() {subrecords.clear();},public void clearSubRecords subrecordsclear
"public List<Ref> call() throws GitAPIException {checkCallable();List<Ref> tags = new ArrayList<>();try (RevWalk revWalk = new RevWalk(repo)) {List<Ref> refList = repo.getRefDatabase().getRefsByPrefix(Constants.R_TAGS);for (Ref ref : refList) {tags.add(ref);}} catch (IOException e) {throw new JGitInternalException(e.getMessage(), e);}Collections.sort(tags,(Ref o1, Ref o2) -> o1.getName().compareTo(o2.getName()));setCallable(false);return tags;}",public ListRef call throws GitAPIException checkCallableListRef tags  new ArrayListtry RevWalk revWalk  new RevWalkrepo ListRef refList  repogetRefDatabasegetRefsByPrefixConstantsRTAGSfor Ref ref  refList tagsaddref catch IOException e throw new JGitInternalExceptionegetMessage eCollectionssorttagsRef o1 Ref o2  o1getNamecompareToo2getNamesetCallablefalsereturn tags
public synchronized void clear() {cache.clear();},public synchronized void clear cacheclear
"public int indexOf(E object, int from) {Object[] snapshot = elements;return indexOf(object, snapshot, from, snapshot.length);}",public int indexOfE object int from Object snapshot  elementsreturn indexOfobject snapshot from snapshotlength
"public String highlightTerm(String originalText, TokenGroup tokenGroup) {if (tokenGroup.getTotalScore() == 0)return originalText;float score = tokenGroup.getTotalScore();if (score == 0) {return originalText;}StringBuilder sb = new StringBuilder(originalText.length() + EXTRA);sb.append(""<span style=\"""");if (highlightForeground) {sb.append(""color: "");sb.append(getForegroundColorString(score));sb.append(""; "");}if (highlightBackground) {sb.append(""background: "");sb.append(getBackgroundColorString(score));sb.append(""; "");}sb.append(""\"">"");sb.append(originalText);sb.append(""</span>"");return sb.toString();}",public String highlightTermString originalText TokenGroup tokenGroup if tokenGroupgetTotalScore  0return originalTextfloat score  tokenGroupgetTotalScoreif score  0 return originalTextStringBuilder sb  new StringBuilderoriginalTextlength  EXTRAsbappendspan styleif highlightForeground sbappendcolor sbappendgetForegroundColorStringscoresbappend if highlightBackground sbappendbackground sbappendgetBackgroundColorStringscoresbappend sbappendsbappendoriginalTextsbappendspanreturn sbtoString
public PasswordRecord getPasswordRecord() {return _passwordRecord;},public PasswordRecord getPasswordRecord return passwordRecord
public SlicedIndexInput clone() {SlicedIndexInput clone = (SlicedIndexInput)super.clone();clone.base = base.clone();clone.fileOffset = fileOffset;clone.length = length;return clone;},public SlicedIndexInput clone SlicedIndexInput clone  SlicedIndexInputsupercloneclonebase  basecloneclonefileOffset  fileOffsetclonelength  lengthreturn clone
public int getSourceLine(int idx) {return sourceLines[idx] - 1;},public int getSourceLineint idx return sourceLinesidx  1
public DeleteResolverRuleResult deleteResolverRule(DeleteResolverRuleRequest request) {request = beforeClientExecution(request);return executeDeleteResolverRule(request);},public DeleteResolverRuleResult deleteResolverRuleDeleteResolverRuleRequest request request  beforeClientExecutionrequestreturn executeDeleteResolverRulerequest
"static public double ppmt(double r, int per, int nper, double pv, double fv, int type) {return pmt(r, nper, pv, fv, type) - ipmt(r, per, nper, pv, fv, type);}",static public double ppmtdouble r int per int nper double pv double fv int type return pmtr nper pv fv type  ipmtr per nper pv fv type
@Override public Set<K> keySet() {return navigableKeySet();},Override public SetK keySet return navigableKeySet
public boolean stem() {if (!r_more_than_one_syllable_word()){return false;}limit_backward = cursor;cursor = limit;int v_1 = limit - cursor;r_stem_nominal_verb_suffixes();cursor = limit - v_1;if (!(B_continue_stemming_noun_suffixes)){return false;}int v_2 = limit - cursor;r_stem_noun_suffixes();cursor = limit - v_2;cursor = limit_backward;if (!r_postlude()){return false;}return true;},public boolean stem if rmorethanonesyllablewordreturn falselimitbackward  cursorcursor  limitint v1  limit  cursorrstemnominalverbsuffixescursor  limit  v1if Bcontinuestemmingnounsuffixesreturn falseint v2  limit  cursorrstemnounsuffixescursor  limit  v2cursor  limitbackwardif rpostludereturn falsereturn true
public ListShardsResult listShards(ListShardsRequest request) {request = beforeClientExecution(request);return executeListShards(request);},public ListShardsResult listShardsListShardsRequest request request  beforeClientExecutionrequestreturn executeListShardsrequest
"public SearcherAndTaxonomy(IndexSearcher searcher, DirectoryTaxonomyReader taxonomyReader) {this.searcher = searcher;this.taxonomyReader = taxonomyReader;}",public SearcherAndTaxonomyIndexSearcher searcher DirectoryTaxonomyReader taxonomyReader thissearcher  searcherthistaxonomyReader  taxonomyReader
public TreeFilter clone() {return this;},public TreeFilter clone return this
"public void set(int index, long value) {final int o = index / 6;final int b = index % 6;final int shift = b * 10;blocks[o] = (blocks[o] & ~(1023L << shift)) | (value << shift);}",public void setint index long value final int o  index  6final int b  index  6final int shift  b  10blockso  blockso  1023L  shift  value  shift
"public boolean add(String text) {return map.put(text, PLACEHOLDER) == null;}",public boolean addString text return mapputtext PLACEHOLDER  null
"public Position get(int pos) {while(pos >= nextPos) {if (count == positions.length) {Position[] newPositions = new Position[ArrayUtil.oversize(1+count, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];System.arraycopy(positions, nextWrite, newPositions, 0, positions.length-nextWrite);System.arraycopy(positions, 0, newPositions, positions.length-nextWrite, nextWrite);for(int i=positions.length;i<newPositions.length;i++) {newPositions[i] = new Position();}nextWrite = positions.length;positions = newPositions;}if (nextWrite == positions.length) {nextWrite = 0;}assert positions[nextWrite].count == 0;positions[nextWrite++].pos = nextPos++;count++;}assert inBounds(pos);final int index = getIndex(pos);assert positions[index].pos == pos;return positions[index];}",public Position getint pos whilepos  nextPos if count  positionslength Position newPositions  new PositionArrayUtiloversize1count RamUsageEstimatorNUMBYTESOBJECTREFSystemarraycopypositions nextWrite newPositions 0 positionslengthnextWriteSystemarraycopypositions 0 newPositions positionslengthnextWrite nextWriteforint ipositionslengthinewPositionslengthi newPositionsi  new PositionnextWrite  positionslengthpositions  newPositionsif nextWrite  positionslength nextWrite  0assert positionsnextWritecount  0positionsnextWritepos  nextPoscountassert inBoundsposfinal int index  getIndexposassert positionsindexpos  posreturn positionsindex
public synchronized void reset() {pos = 0;},public synchronized void reset pos  0
"public void configure(FacetsConfig config) {for(int i=0;i<maxDims;i++) {config.setHierarchical(Integer.toString(i), true);config.setMultiValued(Integer.toString(i), true);}}",public void configureFacetsConfig config forint i0imaxDimsi configsetHierarchicalIntegertoStringi trueconfigsetMultiValuedIntegertoStringi true
public boolean equals(Object obj) {if (obj == null)return false;if (obj == this)return true;if (obj.getClass() != getClass())return false;HSSFClientAnchor anchor = (HSSFClientAnchor) obj;return anchor.getCol1() == getCol1() && anchor.getCol2() == getCol2() && anchor.getDx1() == getDx1()&& anchor.getDx2() == getDx2() && anchor.getDy1() == getDy1() && anchor.getDy2() == getDy2()&& anchor.getRow1() == getRow1() && anchor.getRow2() == getRow2() && anchor.getAnchorType() == getAnchorType();},public boolean equalsObject obj if obj  nullreturn falseif obj  thisreturn trueif objgetClass  getClassreturn falseHSSFClientAnchor anchor  HSSFClientAnchor objreturn anchorgetCol1  getCol1  anchorgetCol2  getCol2  anchorgetDx1  getDx1 anchorgetDx2  getDx2  anchorgetDy1  getDy1  anchorgetDy2  getDy2 anchorgetRow1  getRow1  anchorgetRow2  getRow2  anchorgetAnchorType  getAnchorType
public Set<String> getMissing() {return Collections.unmodifiableSet(diff.getMissing());},public SetString getMissing return CollectionsunmodifiableSetdiffgetMissing
"public static IndexWriterConfig createWriterConfig(Config config, PerfRunData runData, OpenMode mode, IndexCommit commit) {IndexWriterConfig iwConf = new IndexWriterConfig(runData.getAnalyzer());iwConf.setOpenMode(mode);IndexDeletionPolicy indexDeletionPolicy = getIndexDeletionPolicy(config);iwConf.setIndexDeletionPolicy(indexDeletionPolicy);if (commit != null) {iwConf.setIndexCommit(commit);}final String mergeScheduler = config.get(""merge.scheduler"",""org.apache.lucene.index.ConcurrentMergeScheduler"");if (mergeScheduler.equals(NoMergeScheduler.class.getName())) {iwConf.setMergeScheduler(NoMergeScheduler.INSTANCE);} else {try {iwConf.setMergeScheduler(Class.forName(mergeScheduler).asSubclass(MergeScheduler.class).getConstructor().newInstance());} catch (Exception e) {}}}",public static IndexWriterConfig createWriterConfigConfig config PerfRunData runData OpenMode mode IndexCommit commit IndexWriterConfig iwConf  new IndexWriterConfigrunDatagetAnalyzeriwConfsetOpenModemodeIndexDeletionPolicy indexDeletionPolicy  getIndexDeletionPolicyconfigiwConfsetIndexDeletionPolicyindexDeletionPolicyif commit  null iwConfsetIndexCommitcommitfinal String mergeScheduler  configgetmergeschedulerorgapacheluceneindexConcurrentMergeSchedulerif mergeSchedulerequalsNoMergeSchedulerclassgetName iwConfsetMergeSchedulerNoMergeSchedulerINSTANCE else try iwConfsetMergeSchedulerClassforNamemergeSchedulerasSubclassMergeSchedulerclassgetConstructornewInstance catch Exception e 
public GetCapacityReservationUsageResult getCapacityReservationUsage(GetCapacityReservationUsageRequest request) {request = beforeClientExecution(request);return executeGetCapacityReservationUsage(request);},public GetCapacityReservationUsageResult getCapacityReservationUsageGetCapacityReservationUsageRequest request request  beforeClientExecutionrequestreturn executeGetCapacityReservationUsagerequest
public void addRule(HSSFConditionalFormattingRule cfRule) {cfAggregate.addRule(cfRule.getCfRuleRecord());},public void addRuleHSSFConditionalFormattingRule cfRule cfAggregateaddRulecfRulegetCfRuleRecord
"public DocState(boolean reuseFields, FieldType ft, FieldType bodyFt) {this.reuseFields = reuseFields;if (reuseFields) {fields =  new HashMap<>();numericFields = new HashMap<>();fields.put(BODY_FIELD, new Field(BODY_FIELD, """", bodyFt));fields.put(TITLE_FIELD, new Field(TITLE_FIELD, """", ft));fields.put(DATE_FIELD, new Field(DATE_FIELD, """", ft));fields.put(ID_FIELD, new StringField(ID_FIELD, """", Field.Store.YES));fields.put(NAME_FIELD, new Field(NAME_FIELD, """", ft));numericFields.put(DATE_MSEC_FIELD, new LongPoint(DATE_MSEC_FIELD, 0L));numericFields.put(TIME_SEC_FIELD, new IntPoint(TIME_SEC_FIELD, 0));doc = new Document();} else {numericFields = null;fields = null;doc = null;}}",public DocStateboolean reuseFields FieldType ft FieldType bodyFt thisreuseFields  reuseFieldsif reuseFields fields   new HashMapnumericFields  new HashMapfieldsputBODYFIELD new FieldBODYFIELD  bodyFtfieldsputTITLEFIELD new FieldTITLEFIELD  ftfieldsputDATEFIELD new FieldDATEFIELD  ftfieldsputIDFIELD new StringFieldIDFIELD  FieldStoreYESfieldsputNAMEFIELD new FieldNAMEFIELD  ftnumericFieldsputDATEMSECFIELD new LongPointDATEMSECFIELD 0LnumericFieldsputTIMESECFIELD new IntPointTIMESECFIELD 0doc  new Document else numericFields  nullfields  nulldoc  null
public char[] getValue() {return value;},public char getValue return value
"public void updateNameCommentRecordCache(final NameCommentRecord commentRecord) {if(commentRecords.containsValue(commentRecord)) {for(Entry<String,NameCommentRecord> entry : commentRecords.entrySet()) {if(entry.getValue().equals(commentRecord)) {commentRecords.remove(entry.getKey());break;}}}commentRecords.put(commentRecord.getNameText(), commentRecord);}",public void updateNameCommentRecordCachefinal NameCommentRecord commentRecord ifcommentRecordscontainsValuecommentRecord forEntryStringNameCommentRecord entry  commentRecordsentrySet ifentrygetValueequalscommentRecord commentRecordsremoveentrygetKeybreakcommentRecordsputcommentRecordgetNameText commentRecord
"public CompleteMultipartUploadRequest(String vaultName, String uploadId, String archiveSize, String checksum) {setVaultName(vaultName);setUploadId(uploadId);setArchiveSize(archiveSize);setChecksum(checksum);}",public CompleteMultipartUploadRequestString vaultName String uploadId String archiveSize String checksum setVaultNamevaultNamesetUploadIduploadIdsetArchiveSizearchiveSizesetChecksumchecksum
"public Query getQuery(Element n) throws ParserException {QueryBuilder builder = builders.get(n.getNodeName());if (builder == null) {throw new ParserException(""No QueryObjectBuilder defined for node "" + n.getNodeName());}return builder.getQuery(n);}",public Query getQueryElement n throws ParserException QueryBuilder builder  buildersgetngetNodeNameif builder  null throw new ParserExceptionNo QueryObjectBuilder defined for node   ngetNodeNamereturn buildergetQueryn
"public static double nper(double r, double y, double p, double f, boolean t) {double retval = 0;if (r == 0) {retval = -1 * (f + p) / y;} else {double r1 = r + 1;double ryr = (t ? r1 : 1) * y / r;double a1 = ((ryr - f) < 0)? Math.log(f - ryr): Math.log(ryr - f);double a2 = ((ryr - f) < 0)? Math.log(-p - ryr): Math.log(p + ryr);double a3 = Math.log(r1);retval = (a1 - a2) / a3;}return retval;}",public static double nperdouble r double y double p double f boolean t double retval  0if r  0 retval  1  f  p  y else double r1  r  1double ryr  t  r1  1  y  rdouble a1  ryr  f  0 Mathlogf  ryr Mathlogryr  fdouble a2  ryr  f  0 Mathlogp  ryr Mathlogp  ryrdouble a3  Mathlogr1retval  a1  a2  a3return retval
"public AndQueryNode(List<QueryNode> clauses) {super(clauses);if ((clauses == null) || (clauses.size() == 0)) {throw new IllegalArgumentException(""AND query must have at least one clause"");}}",public AndQueryNodeListQueryNode clauses superclausesif clauses  null  clausessize  0 throw new IllegalArgumentExceptionAND query must have at least one clause
public SeriesListRecord(short[] seriesNumbers) {field_1_seriesNumbers = (seriesNumbers == null) ? null : seriesNumbers.clone();},public SeriesListRecordshort seriesNumbers field1seriesNumbers  seriesNumbers  null  null  seriesNumbersclone
"public String toString() {return value + "", "" + begin + "", "" + end;}",public String toString return value     begin     end
"public String toString() {return ""<StandardQueryParser config=\"""" + this.getQueryConfigHandler()+ ""\""/>"";}",public String toString return StandardQueryParser config  thisgetQueryConfigHandler 
public DescribeActivitiesResult describeActivities(DescribeActivitiesRequest request) {request = beforeClientExecution(request);return executeDescribeActivities(request);},public DescribeActivitiesResult describeActivitiesDescribeActivitiesRequest request request  beforeClientExecutionrequestreturn executeDescribeActivitiesrequest
"public int writeTokenValueBytes(LittleEndianOutput out) {out.writeByte(_nColumns-1);out.writeShort(_nRows-1);ConstantValueParser.encode(out, _arrayValues);return 3 + ConstantValueParser.getEncodedSize(_arrayValues);}",public int writeTokenValueBytesLittleEndianOutput out outwriteBytenColumns1outwriteShortnRows1ConstantValueParserencodeout arrayValuesreturn 3  ConstantValueParsergetEncodedSizearrayValues
public DescribeFleetMetadataResult describeFleetMetadata(DescribeFleetMetadataRequest request) {request = beforeClientExecution(request);return executeDescribeFleetMetadata(request);},public DescribeFleetMetadataResult describeFleetMetadataDescribeFleetMetadataRequest request request  beforeClientExecutionrequestreturn executeDescribeFleetMetadatarequest
public GlobalCluster modifyGlobalCluster(ModifyGlobalClusterRequest request) {request = beforeClientExecution(request);return executeModifyGlobalCluster(request);},public GlobalCluster modifyGlobalClusterModifyGlobalClusterRequest request request  beforeClientExecutionrequestreturn executeModifyGlobalClusterrequest
public DescribeIdentityIdFormatResult describeIdentityIdFormat(DescribeIdentityIdFormatRequest request) {request = beforeClientExecution(request);return executeDescribeIdentityIdFormat(request);},public DescribeIdentityIdFormatResult describeIdentityIdFormatDescribeIdentityIdFormatRequest request request  beforeClientExecutionrequestreturn executeDescribeIdentityIdFormatrequest
public ListUserGroupsResult listUserGroups(ListUserGroupsRequest request) {request = beforeClientExecution(request);return executeListUserGroups(request);},public ListUserGroupsResult listUserGroupsListUserGroupsRequest request request  beforeClientExecutionrequestreturn executeListUserGroupsrequest
"public RevertCommand include(String name, AnyObjectId commit) {return include(new ObjectIdRef.Unpeeled(Storage.LOOSE, name,commit.copy()));}",public RevertCommand includeString name AnyObjectId commit return includenew ObjectIdRefUnpeeledStorageLOOSE namecommitcopy
"public BeiderMorseFilter(TokenStream input, PhoneticEngine engine, LanguageSet languages) {super(input);this.engine = engine;this.languages = languages;}",public BeiderMorseFilterTokenStream input PhoneticEngine engine LanguageSet languages superinputthisengine  enginethislanguages  languages
public ListUsersResult listUsers(ListUsersRequest request) {request = beforeClientExecution(request);return executeListUsers(request);},public ListUsersResult listUsersListUsersRequest request request  beforeClientExecutionrequestreturn executeListUsersrequest
"public PutUserPolicyRequest(String userName, String policyName, String policyDocument) {setUserName(userName);setPolicyName(policyName);setPolicyDocument(policyDocument);}",public PutUserPolicyRequestString userName String policyName String policyDocument setUserNameuserNamesetPolicyNamepolicyNamesetPolicyDocumentpolicyDocument
public synchronized void trimToSize() {super.trimToSize();},public synchronized void trimToSize supertrimToSize
public void serialize(LittleEndianOutput out) {out.writeShort(getWindowing());},public void serializeLittleEndianOutput out outwriteShortgetWindowing
public AreaValueArray(TwoDEval ae) {super(ae.getWidth() * ae.getHeight());_ae = ae;_width = ae.getWidth();},public AreaValueArrayTwoDEval ae superaegetWidth  aegetHeightae  aewidth  aegetWidth
public RegisterOnPremisesInstanceResult registerOnPremisesInstance(RegisterOnPremisesInstanceRequest request) {request = beforeClientExecution(request);return executeRegisterOnPremisesInstance(request);},public RegisterOnPremisesInstanceResult registerOnPremisesInstanceRegisterOnPremisesInstanceRequest request request  beforeClientExecutionrequestreturn executeRegisterOnPremisesInstancerequest
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[DATALABEXT]\n"");buffer.append(""    .rt      ="").append(HexDump.shortToHex(rt)).append('\n');buffer.append(""    .grbitFrt="").append(HexDump.shortToHex(grbitFrt)).append('\n');buffer.append(""    .unused  ="").append(HexDump.toHex(unused)).append('\n');buffer.append(""[/DATALABEXT]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendDATALABEXTnbufferappend    rt      appendHexDumpshortToHexrtappendnbufferappend    grbitFrtappendHexDumpshortToHexgrbitFrtappendnbufferappend    unused  appendHexDumptoHexunusedappendnbufferappendDATALABEXTnreturn buffertoString
public LsRemoteCommand lsRemote() {return new LsRemoteCommand(repo);},public LsRemoteCommand lsRemote return new LsRemoteCommandrepo
public boolean isMerged() {return getStage() == STAGE_0;},public boolean isMerged return getStage  STAGE0
public StopEntitiesDetectionJobResult stopEntitiesDetectionJob(StopEntitiesDetectionJobRequest request) {request = beforeClientExecution(request);return executeStopEntitiesDetectionJob(request);},public StopEntitiesDetectionJobResult stopEntitiesDetectionJobStopEntitiesDetectionJobRequest request request  beforeClientExecutionrequestreturn executeStopEntitiesDetectionJobrequest
public final int arrayOffset() {return protectedArrayOffset();},public final int arrayOffset return protectedArrayOffset
"public SetVaultNotificationsRequest(String accountId, String vaultName, VaultNotificationConfig vaultNotificationConfig) {setAccountId(accountId);setVaultName(vaultName);setVaultNotificationConfig(vaultNotificationConfig);}",public SetVaultNotificationsRequestString accountId String vaultName VaultNotificationConfig vaultNotificationConfig setAccountIdaccountIdsetVaultNamevaultNamesetVaultNotificationConfigvaultNotificationConfig
public int addConditionalFormatting( ConditionalFormatting cf ) {return addConditionalFormatting((HSSFConditionalFormatting)cf);},public int addConditionalFormatting ConditionalFormatting cf  return addConditionalFormattingHSSFConditionalFormattingcf
public MemAreaPtg(LittleEndianInput in)  {field_1_reserved = in.readInt();field_2_subex_len = in.readShort();},public MemAreaPtgLittleEndianInput in  field1reserved  inreadIntfield2subexlen  inreadShort
public DescribeScalingActivitiesResult describeScalingActivities() {return describeScalingActivities(new DescribeScalingActivitiesRequest());},public DescribeScalingActivitiesResult describeScalingActivities return describeScalingActivitiesnew DescribeScalingActivitiesRequest
public StopApplicationResult stopApplication(StopApplicationRequest request) {request = beforeClientExecution(request);return executeStopApplication(request);},public StopApplicationResult stopApplicationStopApplicationRequest request request  beforeClientExecutionrequestreturn executeStopApplicationrequest
public void seekExact(long ord) throws IOException {throw new UnsupportedOperationException();},public void seekExactlong ord throws IOException throw new UnsupportedOperationException
public DescribeLocalGatewayRouteTableVpcAssociationsResult describeLocalGatewayRouteTableVpcAssociations(DescribeLocalGatewayRouteTableVpcAssociationsRequest request) {request = beforeClientExecution(request);return executeDescribeLocalGatewayRouteTableVpcAssociations(request);},public DescribeLocalGatewayRouteTableVpcAssociationsResult describeLocalGatewayRouteTableVpcAssociationsDescribeLocalGatewayRouteTableVpcAssociationsRequest request request  beforeClientExecutionrequestreturn executeDescribeLocalGatewayRouteTableVpcAssociationsrequest
public ErrorEval getErrorEval() {return _errorEval;},public ErrorEval getErrorEval return errorEval
public DeleteNetworkInterfaceResult deleteNetworkInterface(DeleteNetworkInterfaceRequest request) {request = beforeClientExecution(request);return executeDeleteNetworkInterface(request);},public DeleteNetworkInterfaceResult deleteNetworkInterfaceDeleteNetworkInterfaceRequest request request  beforeClientExecutionrequestreturn executeDeleteNetworkInterfacerequest
"public Group(String path, String groupName, String groupId, String arn, java.util.Date createDate) {setPath(path);setGroupName(groupName);setGroupId(groupId);setArn(arn);setCreateDate(createDate);}",public GroupString path String groupName String groupId String arn javautilDate createDate setPathpathsetGroupNamegroupNamesetGroupIdgroupIdsetArnarnsetCreateDatecreateDate
public void removeName(int nameIndex){if (linkTable.getNumNames() > nameIndex) {int idx = findFirstRecordLocBySid(NameRecord.sid);records.remove(idx + nameIndex);linkTable.removeName(nameIndex);}},public void removeNameint nameIndexif linkTablegetNumNames  nameIndex int idx  findFirstRecordLocBySidNameRecordsidrecordsremoveidx  nameIndexlinkTableremoveNamenameIndex
"public BaseFragListBuilder( int margin ){if( margin < 0 )throw new IllegalArgumentException( ""margin("" + margin + "") is too small. It must be 0 or higher."" );this.margin = margin;this.minFragCharSize = Math.max( 1, margin * MIN_FRAG_CHAR_SIZE_FACTOR );}",public BaseFragListBuilder int margin if margin  0 throw new IllegalArgumentException margin  margin   is too small It must be 0 or higher thismargin  marginthisminFragCharSize  Mathmax 1 margin  MINFRAGCHARSIZEFACTOR 
"public Reader create(Reader input) {return new PatternReplaceCharFilter(pattern, replacement, input);}",public Reader createReader input return new PatternReplaceCharFilterpattern replacement input
"@Override public Iterator<K> iterator() {final Iterator<Entry<K, V>> iterator = delegate.entrySet().iterator();return new Iterator<K>();}",Override public IteratorK iterator final IteratorEntryK V iterator  delegateentrySetiteratorreturn new IteratorK
public CreatePushTemplateResult createPushTemplate(CreatePushTemplateRequest request) {request = beforeClientExecution(request);return executeCreatePushTemplate(request);},public CreatePushTemplateResult createPushTemplateCreatePushTemplateRequest request request  beforeClientExecutionrequestreturn executeCreatePushTemplaterequest
public void removeEditTime() {remove1stProperty(PropertyIDMap.PID_EDITTIME);},public void removeEditTime remove1stPropertyPropertyIDMapPIDEDITTIME
public ListReusableDelegationSetsResult listReusableDelegationSets() {return listReusableDelegationSets(new ListReusableDelegationSetsRequest());},public ListReusableDelegationSetsResult listReusableDelegationSets return listReusableDelegationSetsnew ListReusableDelegationSetsRequest
public boolean equals(Object obj) {if (obj == this) {return true;}if (obj instanceof AttributeSource) {AttributeSource other = (AttributeSource) obj;if (hasAttributes()) {if (!other.hasAttributes()) {return false;}if (this.attributeImpls.size() != other.attributeImpls.size()) {return false;}State thisState = this.getCurrentState();State otherState = other.getCurrentState();while (thisState != null && otherState != null) {if (otherState.attribute.getClass() != thisState.attribute.getClass() || !otherState.attribute.equals(thisState.attribute)) {return false;}thisState = thisState.next;otherState = otherState.next;}return true;} else {return !other.hasAttributes();}} else return false;},public boolean equalsObject obj if obj  this return trueif obj instanceof AttributeSource AttributeSource other  AttributeSource objif hasAttributes if otherhasAttributes return falseif thisattributeImplssize  otherattributeImplssize return falseState thisState  thisgetCurrentStateState otherState  othergetCurrentStatewhile thisState  null  otherState  null if otherStateattributegetClass  thisStateattributegetClass  otherStateattributeequalsthisStateattribute return falsethisState  thisStatenextotherState  otherStatenextreturn true else return otherhasAttributes else return false
public static String toText(double value) {return rawDoubleBitsToText(Double.doubleToLongBits(value));},public static String toTextdouble value return rawDoubleBitsToTextDoubledoubleToLongBitsvalue
public void notifySetFormula(Cell cell) {_bookEvaluator.notifyUpdateCell(new HSSFEvaluationCell((HSSFCell)cell));},public void notifySetFormulaCell cell bookEvaluatornotifyUpdateCellnew HSSFEvaluationCellHSSFCellcell
public Ref getRef() {return ref;},public Ref getRef return ref
"public String toString() {StringBuilder sb = new StringBuilder();for (Block b : blocks) {sb.append(b.chars, 0, b.length);}return sb.toString();}",public String toString StringBuilder sb  new StringBuilderfor Block b  blocks sbappendbchars 0 blengthreturn sbtoString
public QueryNodeError(Message message) {super(message.getKey());this.message = message;},public QueryNodeErrorMessage message supermessagegetKeythismessage  message
public GetRelationalDatabaseMasterUserPasswordResult getRelationalDatabaseMasterUserPassword(GetRelationalDatabaseMasterUserPasswordRequest request) {request = beforeClientExecution(request);return executeGetRelationalDatabaseMasterUserPassword(request);},public GetRelationalDatabaseMasterUserPasswordResult getRelationalDatabaseMasterUserPasswordGetRelationalDatabaseMasterUserPasswordRequest request request  beforeClientExecutionrequestreturn executeGetRelationalDatabaseMasterUserPasswordrequest
"public LuceneDictionary(IndexReader Reader, String field) {this.Reader = Reader;this.field = field;}",public LuceneDictionaryIndexReader Reader String field thisReader  Readerthisfield  field
public CreateRuleResult createRule(CreateRuleRequest request) {request = beforeClientExecution(request);return executeCreateRule(request);},public CreateRuleResult createRuleCreateRuleRequest request request  beforeClientExecutionrequestreturn executeCreateRulerequest
public void serialize(LittleEndianOutput out) {out.writeInt(errorCheck);},public void serializeLittleEndianOutput out outwriteInterrorCheck
public DescribeAlarmHistoryResult describeAlarmHistory() {return describeAlarmHistory(new DescribeAlarmHistoryRequest());},public DescribeAlarmHistoryResult describeAlarmHistory return describeAlarmHistorynew DescribeAlarmHistoryRequest
public DescribeVpcClassicLinkDnsSupportResult describeVpcClassicLinkDnsSupport(DescribeVpcClassicLinkDnsSupportRequest request) {request = beforeClientExecution(request);return executeDescribeVpcClassicLinkDnsSupport(request);},public DescribeVpcClassicLinkDnsSupportResult describeVpcClassicLinkDnsSupportDescribeVpcClassicLinkDnsSupportRequest request request  beforeClientExecutionrequestreturn executeDescribeVpcClassicLinkDnsSupportrequest
public static char toLowerCase(char c) {return c <= 'Z' ? LC[c] : c;},public static char toLowerCasechar c return c  Z  LCc  c
"public String[] split(CharSequence input) {return split(input, 0);}",public String splitCharSequence input return splitinput 0
"public synchronized void  execute() throws Exception {if (executed) {throw new IllegalStateException(""Benchmark was already executed"");}executed = true;runData.setStartTimeMillis();algorithm.execute();}",public synchronized void  execute throws Exception if executed throw new IllegalStateExceptionBenchmark was already executedexecuted  truerunDatasetStartTimeMillisalgorithmexecute
public final V get() {return value;},public final V get return value
public VCenterRecord clone() {return copy();},public VCenterRecord clone return copy
"public void publish(Revision revision) throws IOException {throw new UnsupportedOperationException(""this replicator implementation does not support remote publishing of revisions"");}",public void publishRevision revision throws IOException throw new UnsupportedOperationExceptionthis replicator implementation does not support remote publishing of revisions
public boolean shouldBeRecursive() {return a.shouldBeRecursive() || b.shouldBeRecursive();},public boolean shouldBeRecursive return ashouldBeRecursive  bshouldBeRecursive
"public boolean equals(Object obj) {if (!(obj instanceof URIish))return false;final URIish b = (URIish) obj;if (!eq(getScheme(), b.getScheme()))return false;if (!eq(getUser(), b.getUser()))return false;if (!eq(getPass(), b.getPass()))return false;if (!eq(getHost(), b.getHost()))return false;if (getPort() != b.getPort())return false;if (!eq(getPath(), b.getPath()))return false;return true;}",public boolean equalsObject obj if obj instanceof URIishreturn falsefinal URIish b  URIish objif eqgetScheme bgetSchemereturn falseif eqgetUser bgetUserreturn falseif eqgetPass bgetPassreturn falseif eqgetHost bgetHostreturn falseif getPort  bgetPortreturn falseif eqgetPath bgetPathreturn falsereturn true
public TokenStream create(TokenStream input) {return new LowerCaseFilter(input);},public TokenStream createTokenStream input return new LowerCaseFilterinput
"public String toString() {return ""IndexRevision version="" + version + "" files="" + sourceFiles;}",public String toString return IndexRevision version  version   files  sourceFiles
"public static double coerceValueToDouble(ValueEval ev) throws EvaluationException {if (ev == BlankEval.instance) {return 0.0;}if (ev instanceof NumericValueEval) {return ((NumericValueEval)ev).getNumberValue();}if (ev instanceof StringEval) {String sval = ((StringEval) ev).getStringValue();Double dd = parseDouble(sval);if(dd == null) dd = parseDateTime(sval);if (dd == null) {throw EvaluationException.invalidValue();}return dd.doubleValue();}throw new RuntimeException(""Unexpected arg eval type ("" + ev.getClass().getName() + "")"");}",public static double coerceValueToDoubleValueEval ev throws EvaluationException if ev  BlankEvalinstance return 00if ev instanceof NumericValueEval return NumericValueEvalevgetNumberValueif ev instanceof StringEval String sval  StringEval evgetStringValueDouble dd  parseDoublesvalifdd  null dd  parseDateTimesvalif dd  null throw EvaluationExceptioninvalidValuereturn dddoubleValuethrow new RuntimeExceptionUnexpected arg eval type   evgetClassgetName  
public SetQueueAttributesResult setQueueAttributes(SetQueueAttributesRequest request) {request = beforeClientExecution(request);return executeSetQueueAttributes(request);},public SetQueueAttributesResult setQueueAttributesSetQueueAttributesRequest request request  beforeClientExecutionrequestreturn executeSetQueueAttributesrequest
public E getLast() {Link<E> last = voidLink.previous;if (last != voidLink) {return last.data;}throw new NoSuchElementException();},public E getLast LinkE last  voidLinkpreviousif last  voidLink return lastdatathrow new NoSuchElementException
public boolean contains(Object o) {return ConcurrentHashMap.this.containsKey(o);},public boolean containsObject o return ConcurrentHashMapthiscontainsKeyo
public CreateLoadBalancerListenersResult createLoadBalancerListeners(CreateLoadBalancerListenersRequest request) {request = beforeClientExecution(request);return executeCreateLoadBalancerListeners(request);},public CreateLoadBalancerListenersResult createLoadBalancerListenersCreateLoadBalancerListenersRequest request request  beforeClientExecutionrequestreturn executeCreateLoadBalancerListenersrequest
public RebootWorkspacesResult rebootWorkspaces(RebootWorkspacesRequest request) {request = beforeClientExecution(request);return executeRebootWorkspaces(request);},public RebootWorkspacesResult rebootWorkspacesRebootWorkspacesRequest request request  beforeClientExecutionrequestreturn executeRebootWorkspacesrequest
"@Override public final boolean equals(Object o) {if (!(o instanceof Entry)) {return false;}Entry<?, ?> e = (Entry<?, ?>) o;return key.equals(e.getKey()) && value.equals(e.getValue());}",Override public final boolean equalsObject o if o instanceof Entry return falseEntry  e  Entry  oreturn keyequalsegetKey  valueequalsegetValue
public DeleteCustomerGatewayRequest(String customerGatewayId) {setCustomerGatewayId(customerGatewayId);},public DeleteCustomerGatewayRequestString customerGatewayId setCustomerGatewayIdcustomerGatewayId
"public String toString() {return getFileMode() + "" "" + getLength() + "" ""+ getLastModifiedInstant()+ "" "" + getObjectId() + "" "" + getStage() + "" ""+ getPathString() + ""\n"";}",public String toString return getFileMode     getLength    getLastModifiedInstant    getObjectId     getStage    getPathString  n
public StartDocumentAnalysisResult startDocumentAnalysis(StartDocumentAnalysisRequest request) {request = beforeClientExecution(request);return executeStartDocumentAnalysis(request);},public StartDocumentAnalysisResult startDocumentAnalysisStartDocumentAnalysisRequest request request  beforeClientExecutionrequestreturn executeStartDocumentAnalysisrequest
public UpdatePhoneNumberSettingsResult updatePhoneNumberSettings(UpdatePhoneNumberSettingsRequest request) {request = beforeClientExecution(request);return executeUpdatePhoneNumberSettings(request);},public UpdatePhoneNumberSettingsResult updatePhoneNumberSettingsUpdatePhoneNumberSettingsRequest request request  beforeClientExecutionrequestreturn executeUpdatePhoneNumberSettingsrequest
public BatchStopUpdateActionResult batchStopUpdateAction(BatchStopUpdateActionRequest request) {request = beforeClientExecution(request);return executeBatchStopUpdateAction(request);},public BatchStopUpdateActionResult batchStopUpdateActionBatchStopUpdateActionRequest request request  beforeClientExecutionrequestreturn executeBatchStopUpdateActionrequest
"public void setText(final char array[], int start, int length) {this.array = array;this.start = start;this.index = start;this.length = length;this.limit = start + length;}",public void setTextfinal char array int start int length thisarray  arraythisstart  startthisindex  startthislength  lengththislimit  start  length
public CreateHyperParameterTuningJobResult createHyperParameterTuningJob(CreateHyperParameterTuningJobRequest request) {request = beforeClientExecution(request);return executeCreateHyperParameterTuningJob(request);},public CreateHyperParameterTuningJobResult createHyperParameterTuningJobCreateHyperParameterTuningJobRequest request request  beforeClientExecutionrequestreturn executeCreateHyperParameterTuningJobrequest
"public TermsEnumIndex(TermsEnum termsEnum, int subIndex) {this.termsEnum = termsEnum;this.subIndex = subIndex;}",public TermsEnumIndexTermsEnum termsEnum int subIndex thistermsEnum  termsEnumthissubIndex  subIndex
public UnarchiveFindingsResult unarchiveFindings(UnarchiveFindingsRequest request) {request = beforeClientExecution(request);return executeUnarchiveFindings(request);},public UnarchiveFindingsResult unarchiveFindingsUnarchiveFindingsRequest request request  beforeClientExecutionrequestreturn executeUnarchiveFindingsrequest
public void setSort(SortField field) {this.fields = new SortField[] { field };},public void setSortSortField field thisfields  new SortField  field 
public CreateBusinessReportScheduleResult createBusinessReportSchedule(CreateBusinessReportScheduleRequest request) {request = beforeClientExecution(request);return executeCreateBusinessReportSchedule(request);},public CreateBusinessReportScheduleResult createBusinessReportScheduleCreateBusinessReportScheduleRequest request request  beforeClientExecutionrequestreturn executeCreateBusinessReportSchedulerequest
public GetIPSetResult getIPSet(GetIPSetRequest request) {request = beforeClientExecution(request);return executeGetIPSet(request);},public GetIPSetResult getIPSetGetIPSetRequest request request  beforeClientExecutionrequestreturn executeGetIPSetrequest
"public int serialize( int offset, byte[] data,EscherSerializationListener listener ){listener.beforeRecordSerialize( offset, getRecordId(), this );LittleEndian.putShort( data, offset, getOptions() );LittleEndian.putShort( data, offset + 2, getRecordId() );LittleEndian.putInt( data, offset + 4, getPropertiesSize() );int pos = offset + 8;for ( EscherProperty property : properties ){pos += property.serializeSimplePart( data, pos );}for ( EscherProperty property : properties ){pos += property.serializeComplexPart( data, pos );}listener.afterRecordSerialize( pos, getRecordId(), pos - offset, this );return pos - offset;}",public int serialize int offset byte dataEscherSerializationListener listener listenerbeforeRecordSerialize offset getRecordId this LittleEndianputShort data offset getOptions LittleEndianputShort data offset  2 getRecordId LittleEndianputInt data offset  4 getPropertiesSize int pos  offset  8for  EscherProperty property  properties pos  propertyserializeSimplePart data pos for  EscherProperty property  properties pos  propertyserializeComplexPart data pos listenerafterRecordSerialize pos getRecordId pos  offset this return pos  offset
public ListTagsForVaultResult listTagsForVault(ListTagsForVaultRequest request) {request = beforeClientExecution(request);return executeListTagsForVault(request);},public ListTagsForVaultResult listTagsForVaultListTagsForVaultRequest request request  beforeClientExecutionrequestreturn executeListTagsForVaultrequest
public long getDeltaCacheSize() {return deltaCacheSize;},public long getDeltaCacheSize return deltaCacheSize
public final int remaining() {return limit - position;},public final int remaining return limit  position
public DescribeReservedInstancesResult describeReservedInstances(DescribeReservedInstancesRequest request) {request = beforeClientExecution(request);return executeDescribeReservedInstances(request);},public DescribeReservedInstancesResult describeReservedInstancesDescribeReservedInstancesRequest request request  beforeClientExecutionrequestreturn executeDescribeReservedInstancesrequest
"public PostRealTimeDeviceDataRequest() {super(""industry-brain"", ""2018-07-12"", ""PostRealTimeDeviceData"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public PostRealTimeDeviceDataRequest superindustrybrain 20180712 PostRealTimeDeviceDatasetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public ScandinavianFoldingFilter(TokenStream input) {super(input);},public ScandinavianFoldingFilterTokenStream input superinput
public SetLoadBalancerPoliciesForBackendServerResult setLoadBalancerPoliciesForBackendServer(SetLoadBalancerPoliciesForBackendServerRequest request) {request = beforeClientExecution(request);return executeSetLoadBalancerPoliciesForBackendServer(request);},public SetLoadBalancerPoliciesForBackendServerResult setLoadBalancerPoliciesForBackendServerSetLoadBalancerPoliciesForBackendServerRequest request request  beforeClientExecutionrequestreturn executeSetLoadBalancerPoliciesForBackendServerrequest
public ImportSnapshotResult importSnapshot(ImportSnapshotRequest request) {request = beforeClientExecution(request);return executeImportSnapshot(request);},public ImportSnapshotResult importSnapshotImportSnapshotRequest request request  beforeClientExecutionrequestreturn executeImportSnapshotrequest
public void addCellRangeAddress(CellRangeAddress cra) {_list.add(cra);},public void addCellRangeAddressCellRangeAddress cra listaddcra
"public IntBuffer put(int[] src, int srcOffset, int intCount) {byteBuffer.limit(limit * SizeOf.INT);byteBuffer.position(position * SizeOf.INT);if (byteBuffer instanceof ReadWriteDirectByteBuffer) {((ReadWriteDirectByteBuffer) byteBuffer).put(src, srcOffset, intCount);} else {((ReadWriteHeapByteBuffer) byteBuffer).put(src, srcOffset, intCount);}this.position += intCount;return this;}",public IntBuffer putint src int srcOffset int intCount byteBufferlimitlimit  SizeOfINTbyteBufferpositionposition  SizeOfINTif byteBuffer instanceof ReadWriteDirectByteBuffer ReadWriteDirectByteBuffer byteBufferputsrc srcOffset intCount else ReadWriteHeapByteBuffer byteBufferputsrc srcOffset intCountthisposition  intCountreturn this
public DeleteInsightRulesResult deleteInsightRules(DeleteInsightRulesRequest request) {request = beforeClientExecution(request);return executeDeleteInsightRules(request);},public DeleteInsightRulesResult deleteInsightRulesDeleteInsightRulesRequest request request  beforeClientExecutionrequestreturn executeDeleteInsightRulesrequest
public void setStorageId(int storageId) {field_5_stream_id = storageId;},public void setStorageIdint storageId field5streamid  storageId
public StartVpcEndpointServicePrivateDnsVerificationResult startVpcEndpointServicePrivateDnsVerification(StartVpcEndpointServicePrivateDnsVerificationRequest request) {request = beforeClientExecution(request);return executeStartVpcEndpointServicePrivateDnsVerification(request);},public StartVpcEndpointServicePrivateDnsVerificationResult startVpcEndpointServicePrivateDnsVerificationStartVpcEndpointServicePrivateDnsVerificationRequest request request  beforeClientExecutionrequestreturn executeStartVpcEndpointServicePrivateDnsVerificationrequest
public SSTRecord() {field_1_num_strings = 0;field_2_num_unique_strings = 0;field_3_strings = new IntMapper<>();deserializer = new SSTDeserializer(field_3_strings);},public SSTRecord field1numstrings  0field2numuniquestrings  0field3strings  new IntMapperdeserializer  new SSTDeserializerfield3strings
public void clearData() {points.clear();},public void clearData pointsclear
"public void visitContainedRecords(RecordVisitor rv) {PositionTrackingVisitor stv = new PositionTrackingVisitor(rv, 0);final int blockCount = getRowBlockCount();for (int blockIndex = 0; blockIndex < blockCount; blockIndex++) {int pos=0;final int rowBlockSize = visitRowRecordsForBlock(blockIndex, rv);pos += rowBlockSize;final int startRowNumber = getStartRowNumberForBlock(blockIndex);final int endRowNumber = getEndRowNumberForBlock(blockIndex);final List<Short> cellOffsets = new ArrayList<>();int cellRefOffset = (rowBlockSize - RowRecord.ENCODED_SIZE);for (int row = startRowNumber; row <= endRowNumber; row++) {if (_valuesAgg.rowHasCells(row)) {stv.setPosition(0);_valuesAgg.visitCellsForRow(row, stv);int rowCellSize = stv.getPosition();pos += rowCellSize;cellOffsets.add((short)cellRefOffset);cellRefOffset = rowCellSize;}}rv.visitRecord(new DBCellRecord(pos, shortListToArray(cellOffsets)));}_unknownRecords.forEach(rv::visitRecord);}",public void visitContainedRecordsRecordVisitor rv PositionTrackingVisitor stv  new PositionTrackingVisitorrv 0final int blockCount  getRowBlockCountfor int blockIndex  0 blockIndex  blockCount blockIndex int pos0final int rowBlockSize  visitRowRecordsForBlockblockIndex rvpos  rowBlockSizefinal int startRowNumber  getStartRowNumberForBlockblockIndexfinal int endRowNumber  getEndRowNumberForBlockblockIndexfinal ListShort cellOffsets  new ArrayListint cellRefOffset  rowBlockSize  RowRecordENCODEDSIZEfor int row  startRowNumber row  endRowNumber row if valuesAggrowHasCellsrow stvsetPosition0valuesAggvisitCellsForRowrow stvint rowCellSize  stvgetPositionpos  rowCellSizecellOffsetsaddshortcellRefOffsetcellRefOffset  rowCellSizervvisitRecordnew DBCellRecordpos shortListToArraycellOffsetsunknownRecordsforEachrvvisitRecord
public ListDatasetsResult listDatasets(ListDatasetsRequest request) {request = beforeClientExecution(request);return executeListDatasets(request);},public ListDatasetsResult listDatasetsListDatasetsRequest request request  beforeClientExecutionrequestreturn executeListDatasetsrequest
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1,ValueEval arg2) {return evaluate(srcRowIndex, srcColumnIndex, arg0, arg1, arg2, DEFAULT_ARG3);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1ValueEval arg2 return evaluatesrcRowIndex srcColumnIndex arg0 arg1 arg2 DEFAULTARG3
public int size() {return a.length;},public int size return alength
"public HSSFCell getCell(int cellnum) {return getCell(cellnum, book.getMissingCellPolicy());}",public HSSFCell getCellint cellnum return getCellcellnum bookgetMissingCellPolicy
"public String toFormulaString(FormulaRenderingWorkbook book) {return ExternSheetNameResolver.prependSheetName(book, field_1_index_extern_sheet, FormulaError.REF.getString());}",public String toFormulaStringFormulaRenderingWorkbook book return ExternSheetNameResolverprependSheetNamebook field1indexexternsheet FormulaErrorREFgetString
"public int getBucket(CharSequence key) {return getExactMatchStartingFromRootArc(0, new BytesRef(key));}",public int getBucketCharSequence key return getExactMatchStartingFromRootArc0 new BytesRefkey
public DeleteAuthorizerResult deleteAuthorizer(DeleteAuthorizerRequest request) {request = beforeClientExecution(request);return executeDeleteAuthorizer(request);},public DeleteAuthorizerResult deleteAuthorizerDeleteAuthorizerRequest request request  beforeClientExecutionrequestreturn executeDeleteAuthorizerrequest
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval numberVE) {String octal = OperandResolver.coerceValueToString(numberVE);try {return new NumberEval(BaseNumberUtils.convertToDecimal(octal, OCTAL_BASE, MAX_NUMBER_OF_PLACES));}  catch (IllegalArgumentException e) {return ErrorEval.NUM_ERROR;}}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval numberVE String octal  OperandResolvercoerceValueToStringnumberVEtry return new NumberEvalBaseNumberUtilsconvertToDecimaloctal OCTALBASE MAXNUMBEROFPLACES  catch IllegalArgumentException e return ErrorEvalNUMERROR
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_hcenter);},public void serializeLittleEndianOutput out outwriteShortfield1hcenter
public EnableEnhancedMonitoringResult enableEnhancedMonitoring(EnableEnhancedMonitoringRequest request) {request = beforeClientExecution(request);return executeEnableEnhancedMonitoring(request);},public EnableEnhancedMonitoringResult enableEnhancedMonitoringEnableEnhancedMonitoringRequest request request  beforeClientExecutionrequestreturn executeEnableEnhancedMonitoringrequest
public ListDeliveryStreamsResult listDeliveryStreams(ListDeliveryStreamsRequest request) {request = beforeClientExecution(request);return executeListDeliveryStreams(request);},public ListDeliveryStreamsResult listDeliveryStreamsListDeliveryStreamsRequest request request  beforeClientExecutionrequestreturn executeListDeliveryStreamsrequest
public DetachVolumeResult detachVolume(DetachVolumeRequest request) {request = beforeClientExecution(request);return executeDetachVolume(request);},public DetachVolumeResult detachVolumeDetachVolumeRequest request request  beforeClientExecutionrequestreturn executeDetachVolumerequest
public void serialize(LittleEndianOutput out) {out.writeShort(field_15_pattern_style);out.writeShort(field_16_pattern_color_indexes);},public void serializeLittleEndianOutput out outwriteShortfield15patternstyleoutwriteShortfield16patterncolorindexes
"public void setShowSeriesKey(boolean value){field_1_options = showSeriesKey.setShortBoolean(field_1_options, value);}",public void setShowSeriesKeyboolean valuefield1options  showSeriesKeysetShortBooleanfield1options value
"public GermanNormalizationFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public GermanNormalizationFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public static boolean allSubsetsEqual(Collection<BitSet> altsets) {Iterator<BitSet> it = altsets.iterator();BitSet first = it.next();while ( it.hasNext() ) {BitSet next = it.next();if ( !next.equals(first) ) return false;}return true;},public static boolean allSubsetsEqualCollectionBitSet altsets IteratorBitSet it  altsetsiteratorBitSet first  itnextwhile  ithasNext  BitSet next  itnextif  nextequalsfirst  return falsereturn true
public CellRangeAddressList(RecordInputStream in) {this();int nItems = in.readUShort();for (int k = 0; k < nItems; k++) {_list.add(new CellRangeAddress(in));}},public CellRangeAddressListRecordInputStream in thisint nItems  inreadUShortfor int k  0 k  nItems k listaddnew CellRangeAddressin
public boolean markSupported() {return in.markSupported();},public boolean markSupported return inmarkSupported
public DBInstance restoreDBInstanceFromS3(RestoreDBInstanceFromS3Request request) {request = beforeClientExecution(request);return executeRestoreDBInstanceFromS3(request);},public DBInstance restoreDBInstanceFromS3RestoreDBInstanceFromS3Request request request  beforeClientExecutionrequestreturn executeRestoreDBInstanceFromS3request
public boolean equals(Object other) {if (!(other instanceof FloatBuffer)) {return false;}FloatBuffer otherBuffer = (FloatBuffer) other;if (remaining() != otherBuffer.remaining()) {return false;}int myPosition = position;int otherPosition = otherBuffer.position;boolean equalSoFar = true;while (equalSoFar && (myPosition < limit)) {float a = get(myPosition++);float b = otherBuffer.get(otherPosition++);equalSoFar = a == b || (a != a && b != b);}return equalSoFar;},public boolean equalsObject other if other instanceof FloatBuffer return falseFloatBuffer otherBuffer  FloatBuffer otherif remaining  otherBufferremaining return falseint myPosition  positionint otherPosition  otherBufferpositionboolean equalSoFar  truewhile equalSoFar  myPosition  limit float a  getmyPositionfloat b  otherBuffergetotherPositionequalSoFar  a  b  a  a  b  breturn equalSoFar
"public static void fill(float[] array, int start, int end, float value) {Arrays.checkStartAndEnd(array.length, start, end);for (int i = start; i < end; i++) {array[i] = value;}}",public static void fillfloat array int start int end float value ArrayscheckStartAndEndarraylength start endfor int i  start i  end i arrayi  value
public DescribeReceiptRuleResult describeReceiptRule(DescribeReceiptRuleRequest request) {request = beforeClientExecution(request);return executeDescribeReceiptRule(request);},public DescribeReceiptRuleResult describeReceiptRuleDescribeReceiptRuleRequest request request  beforeClientExecutionrequestreturn executeDescribeReceiptRulerequest
"public String toString() {return super.toString()+"" ""+prefix;}",public String toString return supertoString prefix
"public float tf(int freq, int passageLen) {float norm = k1 * ((1 - b) + b * (passageLen / pivot));return freq / (freq + norm);}",public float tfint freq int passageLen float norm  k1  1  b  b  passageLen  pivotreturn freq  freq  norm
public DescribeModelResult describeModel(DescribeModelRequest request) {request = beforeClientExecution(request);return executeDescribeModel(request);},public DescribeModelResult describeModelDescribeModelRequest request request  beforeClientExecutionrequestreturn executeDescribeModelrequest
public boolean markSupported() {return true;},public boolean markSupported return true
public ListEndpointConfigsResult listEndpointConfigs(ListEndpointConfigsRequest request) {request = beforeClientExecution(request);return executeListEndpointConfigs(request);},public ListEndpointConfigsResult listEndpointConfigsListEndpointConfigsRequest request request  beforeClientExecutionrequestreturn executeListEndpointConfigsrequest
public DescribeDBProxyTargetGroupsResult describeDBProxyTargetGroups(DescribeDBProxyTargetGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeDBProxyTargetGroups(request);},public DescribeDBProxyTargetGroupsResult describeDBProxyTargetGroupsDescribeDBProxyTargetGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeDBProxyTargetGroupsrequest
"public long size(DiffEntry.Side side, DiffEntry ent) throws IOException {switch (side) {case OLD:return oldSource.size(ent.oldPath, ent.oldId.toObjectId());case NEW:return newSource.size(ent.newPath, ent.newId.toObjectId());default:throw new IllegalArgumentException();}}",public long sizeDiffEntrySide side DiffEntry ent throws IOException switch side case OLDreturn oldSourcesizeentoldPath entoldIdtoObjectIdcase NEWreturn newSourcesizeentnewPath entnewIdtoObjectIddefaultthrow new IllegalArgumentException
public GlobalReplicationGroup disassociateGlobalReplicationGroup(DisassociateGlobalReplicationGroupRequest request) {request = beforeClientExecution(request);return executeDisassociateGlobalReplicationGroup(request);},public GlobalReplicationGroup disassociateGlobalReplicationGroupDisassociateGlobalReplicationGroupRequest request request  beforeClientExecutionrequestreturn executeDisassociateGlobalReplicationGrouprequest
"public static void writeHeader(DataOutput out, String codec, int version) throws IOException {BytesRef bytes = new BytesRef(codec);if (bytes.length != codec.length() || bytes.length >= 128) {throw new IllegalArgumentException(""codec must be simple ASCII, less than 128 characters in length [got "" + codec + ""]"");}out.writeInt(CODEC_MAGIC);out.writeString(codec);out.writeInt(version);}",public static void writeHeaderDataOutput out String codec int version throws IOException BytesRef bytes  new BytesRefcodecif byteslength  codeclength  byteslength  128 throw new IllegalArgumentExceptioncodec must be simple ASCII less than 128 characters in length got   codec  outwriteIntCODECMAGICoutwriteStringcodecoutwriteIntversion
public PagedList<DedicatedCapacityInner> listByResourceGroup(String resourceGroupName) {PageImpl<DedicatedCapacityInner> page = new PageImpl<>();page.setItems(listByResourceGroupWithServiceResponseAsync(resourceGroupName).toBlocking().single().body());page.setNextPageLink(null);return new PagedList<DedicatedCapacityInner>(page) {@Overridepublic Page<DedicatedCapacityInner> nextPage(String nextPageLink) {return null;}};},public PagedListDedicatedCapacityInner listByResourceGroupString resourceGroupName PageImplDedicatedCapacityInner page  new PageImplpagesetItemslistByResourceGroupWithServiceResponseAsyncresourceGroupNametoBlockingsinglebodypagesetNextPageLinknullreturn new PagedListDedicatedCapacityInnerpage Overridepublic PageDedicatedCapacityInner nextPageString nextPageLink return null
public DescribeIpGroupsResult describeIpGroups(DescribeIpGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeIpGroups(request);},public DescribeIpGroupsResult describeIpGroupsDescribeIpGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeIpGroupsrequest
public final CoderResult flush(ByteBuffer out) {if (status != END && status != READY) {throw new IllegalStateException();}CoderResult result = implFlush(out);if (result == CoderResult.UNDERFLOW) {status = FLUSH;}return result;},public final CoderResult flushByteBuffer out if status  END  status  READY throw new IllegalStateExceptionCoderResult result  implFlushoutif result  CoderResultUNDERFLOW status  FLUSHreturn result
public final Type getType() {if (beginA < endA) {if (beginB < endB) {return Type.REPLACE;}return Type.DELETE;}if (beginB < endB) {return Type.INSERT;}return Type.EMPTY;},public final Type getType if beginA  endA if beginB  endB return TypeREPLACEreturn TypeDELETEif beginB  endB return TypeINSERTreturn TypeEMPTY
public Builder() {this(false);},public Builder thisfalse
public DescribeHsmConfigurationsResult describeHsmConfigurations(DescribeHsmConfigurationsRequest request) {request = beforeClientExecution(request);return executeDescribeHsmConfigurations(request);},public DescribeHsmConfigurationsResult describeHsmConfigurationsDescribeHsmConfigurationsRequest request request  beforeClientExecutionrequestreturn executeDescribeHsmConfigurationsrequest
public boolean equals(Object other) {if (!(other instanceof DoubleBuffer)) {return false;}DoubleBuffer otherBuffer = (DoubleBuffer) other;if (remaining() != otherBuffer.remaining()) {return false;}int myPosition = position;int otherPosition = otherBuffer.position;boolean equalSoFar = true;while (equalSoFar && (myPosition < limit)) {double a = get(myPosition++);double b = otherBuffer.get(otherPosition++);equalSoFar = a == b || (a != a && b != b);}return equalSoFar;},public boolean equalsObject other if other instanceof DoubleBuffer return falseDoubleBuffer otherBuffer  DoubleBuffer otherif remaining  otherBufferremaining return falseint myPosition  positionint otherPosition  otherBufferpositionboolean equalSoFar  truewhile equalSoFar  myPosition  limit double a  getmyPositiondouble b  otherBuffergetotherPositionequalSoFar  a  b  a  a  b  breturn equalSoFar
public int getSize() {return length;},public int getSize return length
public FeatProtection() {securityDescriptor = new byte[0];},public FeatProtection securityDescriptor  new byte0
public DeleteNotificationConfigurationResult deleteNotificationConfiguration(DeleteNotificationConfigurationRequest request) {request = beforeClientExecution(request);return executeDeleteNotificationConfiguration(request);},public DeleteNotificationConfigurationResult deleteNotificationConfigurationDeleteNotificationConfigurationRequest request request  beforeClientExecutionrequestreturn executeDeleteNotificationConfigurationrequest
"public int get(int key) {return get(key, 0);}",public int getint key return getkey 0
"public HSSFAnchor(int dx1, int dy1, int dx2, int dy2) {createEscherAnchor();setDx1(dx1);setDy1(dy1);setDx2(dx2);setDy2(dy2);}",public HSSFAnchorint dx1 int dy1 int dx2 int dy2 createEscherAnchorsetDx1dx1setDy1dy1setDx2dx2setDy2dy2
"public ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {switch (args.length) {case 3:return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2], DEFAULT_ARG3, DEFAULT_ARG4);case 4: {ValueEval arg3 = args[3];if(arg3 == MissingArgEval.instance) {arg3 = DEFAULT_ARG3;}return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2], arg3, DEFAULT_ARG4);}case 5: {ValueEval arg3 = args[3];if(arg3 == MissingArgEval.instance) {arg3 = DEFAULT_ARG3;}ValueEval arg4 = args[4];if(arg4 == MissingArgEval.instance) {arg4 = DEFAULT_ARG4;}return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2], arg3, arg4);}default:return ErrorEval.VALUE_INVALID;}}",public ValueEval evaluateValueEval args int srcRowIndex int srcColumnIndex switch argslength case 3return evaluatesrcRowIndex srcColumnIndex args0 args1 args2 DEFAULTARG3 DEFAULTARG4case 4 ValueEval arg3  args3ifarg3  MissingArgEvalinstance arg3  DEFAULTARG3return evaluatesrcRowIndex srcColumnIndex args0 args1 args2 arg3 DEFAULTARG4case 5 ValueEval arg3  args3ifarg3  MissingArgEvalinstance arg3  DEFAULTARG3ValueEval arg4  args4ifarg4  MissingArgEvalinstance arg4  DEFAULTARG4return evaluatesrcRowIndex srcColumnIndex args0 args1 args2 arg3 arg4defaultreturn ErrorEvalVALUEINVALID
"public Toffs( int startOffset, int endOffset ){this.startOffset = startOffset;this.endOffset = endOffset;}",public Toffs int startOffset int endOffset thisstartOffset  startOffsetthisendOffset  endOffset
public GetDocumentationVersionResult getDocumentationVersion(GetDocumentationVersionRequest request) {request = beforeClientExecution(request);return executeGetDocumentationVersion(request);},public GetDocumentationVersionResult getDocumentationVersionGetDocumentationVersionRequest request request  beforeClientExecutionrequestreturn executeGetDocumentationVersionrequest
"public static <T> T[] grow(T[] array, int minSize) {assert minSize >= 0 : ""size must be positive (got "" + minSize + ""): likely integer overflow?"";if (array.length < minSize) {final int newLength = oversize(minSize, RamUsageEstimator.NUM_BYTES_OBJECT_REF);return growExact(array, newLength);} else return array;}",public static T T growT array int minSize assert minSize  0  size must be positive got   minSize   likely integer overflowif arraylength  minSize final int newLength  oversizeminSize RamUsageEstimatorNUMBYTESOBJECTREFreturn growExactarray newLength else return array
public PurchaseProvisionedCapacityResult purchaseProvisionedCapacity(PurchaseProvisionedCapacityRequest request) {request = beforeClientExecution(request);return executePurchaseProvisionedCapacity(request);},public PurchaseProvisionedCapacityResult purchaseProvisionedCapacityPurchaseProvisionedCapacityRequest request request  beforeClientExecutionrequestreturn executePurchaseProvisionedCapacityrequest
"public ListenerHandle addRefsChangedListener(RefsChangedListener listener) {return addListener(RefsChangedListener.class, listener);}",public ListenerHandle addRefsChangedListenerRefsChangedListener listener return addListenerRefsChangedListenerclass listener
"public void drawRect(int x, int y, int width, int height){if (logger.check( POILogger.WARN ))logger.log(POILogger.WARN,""drawRect not supported"");}",public void drawRectint x int y int width int heightif loggercheck POILoggerWARN loggerlogPOILoggerWARNdrawRect not supported
public DeleteGcmChannelResult deleteGcmChannel(DeleteGcmChannelRequest request) {request = beforeClientExecution(request);return executeDeleteGcmChannel(request);},public DeleteGcmChannelResult deleteGcmChannelDeleteGcmChannelRequest request request  beforeClientExecutionrequestreturn executeDeleteGcmChannelrequest
"public String toString() {return ""del="" + item;}",public String toString return del  item
"public int read(byte[] b, int off, int len) {if (ptr == data.length)return -1;int n = Math.min(available(), len);System.arraycopy(data, ptr, b, off, n);ptr += n;return n;}",public int readbyte b int off int len if ptr  datalengthreturn 1int n  Mathminavailable lenSystemarraycopydata ptr b off nptr  nreturn n
"public static String toHex(int value) {StringBuilder sb = new StringBuilder(8);writeHex(sb, value & 0xFFFFFFFFL, 8, """");return sb.toString();}",public static String toHexint value StringBuilder sb  new StringBuilder8writeHexsb value  0xFFFFFFFFL 8 return sbtoString
public DeleteFieldLevelEncryptionConfigResult deleteFieldLevelEncryptionConfig(DeleteFieldLevelEncryptionConfigRequest request) {request = beforeClientExecution(request);return executeDeleteFieldLevelEncryptionConfig(request);},public DeleteFieldLevelEncryptionConfigResult deleteFieldLevelEncryptionConfigDeleteFieldLevelEncryptionConfigRequest request request  beforeClientExecutionrequestreturn executeDeleteFieldLevelEncryptionConfigrequest
"public AmazonS3EncryptionClient(AWSCredentials credentials,EncryptionMaterials encryptionMaterials) {this(credentials, new StaticEncryptionMaterialsProvider(encryptionMaterials));}",public AmazonS3EncryptionClientAWSCredentials credentialsEncryptionMaterials encryptionMaterials thiscredentials new StaticEncryptionMaterialsProviderencryptionMaterials
"public FontDetails( String fontName, int height ){_fontName = fontName;_height = height;}",public FontDetails String fontName int height fontName  fontNameheight  height
public String toFormulaString(String[] operands){StringBuilder buffer = new StringBuilder();buffer.append(operands[ 0 ]);buffer.append(LESSTHAN);buffer.append(operands[ 1 ]);return buffer.toString();},public String toFormulaStringString operandsStringBuilder buffer  new StringBuilderbufferappendoperands 0 bufferappendLESSTHANbufferappendoperands 1 return buffertoString
"public String toString() {return new String(this.buffer, 0, this.len);}",public String toString return new Stringthisbuffer 0 thislen
public WriteRequest(PutRequest putRequest) {setPutRequest(putRequest);},public WriteRequestPutRequest putRequest setPutRequestputRequest
"public static String toHex(byte value) {StringBuilder sb = new StringBuilder(2);writeHex(sb, value & 0xFF, 2, """");return sb.toString();}",public static String toHexbyte value StringBuilder sb  new StringBuilder2writeHexsb value  0xFF 2 return sbtoString
"public int stem(char s[], int len) {return pluralStep.apply(s, len);}",public int stemchar s int len return pluralStepapplys len
"public void write(byte[] b, int off, int len) {try {super.write(b, off, len);} catch (IOException e) {throw new RuntimeException(e);}}",public void writebyte b int off int len try superwriteb off len catch IOException e throw new RuntimeExceptione
public Set<Long> idSet() {return Collections.unmodifiableSet(dictionary.keySet());},public SetLong idSet return CollectionsunmodifiableSetdictionarykeySet
public BatchGetDeploymentsResult batchGetDeployments(BatchGetDeploymentsRequest request) {request = beforeClientExecution(request);return executeBatchGetDeployments(request);},public BatchGetDeploymentsResult batchGetDeploymentsBatchGetDeploymentsRequest request request  beforeClientExecutionrequestreturn executeBatchGetDeploymentsrequest
"public QueryScorer(Query query, String field, String defaultField) {this.defaultField = defaultField;init(query, field, null, true);}",public QueryScorerQuery query String field String defaultField thisdefaultField  defaultFieldinitquery field null true
public long next() throws IOException {current = fstEnum.next();if (current == null) {return -1;} else {return current.output;}},public long next throws IOException current  fstEnumnextif current  null return 1 else return currentoutput
public GetApplicationDateRangeKpiResult getApplicationDateRangeKpi(GetApplicationDateRangeKpiRequest request) {request = beforeClientExecution(request);return executeGetApplicationDateRangeKpi(request);},public GetApplicationDateRangeKpiResult getApplicationDateRangeKpiGetApplicationDateRangeKpiRequest request request  beforeClientExecutionrequestreturn executeGetApplicationDateRangeKpirequest
public TokenStream create(TokenStream input) {return new GalicianStemFilter(input);},public TokenStream createTokenStream input return new GalicianStemFilterinput
public ListHostedZonesResult listHostedZones(ListHostedZonesRequest request) {request = beforeClientExecution(request);return executeListHostedZones(request);},public ListHostedZonesResult listHostedZonesListHostedZonesRequest request request  beforeClientExecutionrequestreturn executeListHostedZonesrequest
public int getDepth() {return depth;},public int getDepth return depth
public WindowTwoRecord(RecordInputStream in) {int size = in.remaining();field_1_options      = in.readShort();field_2_top_row      = in.readShort();field_3_left_col     = in.readShort();field_4_header_color = in.readInt();if (size > 10){field_5_page_break_zoom = in.readShort();field_6_normal_zoom     = in.readShort();}if (size > 14){   field_7_reserved = in.readInt();}},public WindowTwoRecordRecordInputStream in int size  inremainingfield1options       inreadShortfield2toprow       inreadShortfield3leftcol      inreadShortfield4headercolor  inreadIntif size  10field5pagebreakzoom  inreadShortfield6normalzoom      inreadShortif size  14   field7reserved  inreadInt
public GetUsageResult getUsage(GetUsageRequest request) {request = beforeClientExecution(request);return executeGetUsage(request);},public GetUsageResult getUsageGetUsageRequest request request  beforeClientExecutionrequestreturn executeGetUsagerequest
"public void setConfig(Config config) {super.setConfig(config);keepImages = config.get(""keep.image.only.docs"", true);String fileName = config.get(""docs.file"", null);if (fileName != null) {file = Paths.get(fileName).toAbsolutePath();}}",public void setConfigConfig config supersetConfigconfigkeepImages  configgetkeepimageonlydocs trueString fileName  configgetdocsfile nullif fileName  null file  PathsgetfileNametoAbsolutePath
public ListSubscriptionsByTopicRequest(String topicArn) {setTopicArn(topicArn);},public ListSubscriptionsByTopicRequestString topicArn setTopicArntopicArn
"public ListTablesRequest(String exclusiveStartTableName, Integer limit) {setExclusiveStartTableName(exclusiveStartTableName);setLimit(limit);}",public ListTablesRequestString exclusiveStartTableName Integer limit setExclusiveStartTableNameexclusiveStartTableNamesetLimitlimit
"public String toString() {return start + "" to "" + end;}",public String toString return start   to   end
public final float get(int index) {checkIndex(index);return backingArray[offset + index];},public final float getint index checkIndexindexreturn backingArrayoffset  index
"public LongBuffer duplicate() {return copy(this, mark);}",public LongBuffer duplicate return copythis mark
public ListManagedSchemaArnsResult listManagedSchemaArns(ListManagedSchemaArnsRequest request) {request = beforeClientExecution(request);return executeListManagedSchemaArns(request);},public ListManagedSchemaArnsResult listManagedSchemaArnsListManagedSchemaArnsRequest request request  beforeClientExecutionrequestreturn executeListManagedSchemaArnsrequest
public DescribeSpotPriceHistoryResult describeSpotPriceHistory(DescribeSpotPriceHistoryRequest request) {request = beforeClientExecution(request);return executeDescribeSpotPriceHistory(request);},public DescribeSpotPriceHistoryResult describeSpotPriceHistoryDescribeSpotPriceHistoryRequest request request  beforeClientExecutionrequestreturn executeDescribeSpotPriceHistoryrequest
public ListDevelopmentSchemaArnsResult listDevelopmentSchemaArns(ListDevelopmentSchemaArnsRequest request) {request = beforeClientExecution(request);return executeListDevelopmentSchemaArns(request);},public ListDevelopmentSchemaArnsResult listDevelopmentSchemaArnsListDevelopmentSchemaArnsRequest request request  beforeClientExecutionrequestreturn executeListDevelopmentSchemaArnsrequest
public boolean equals(Object o) {if (!(o instanceof ATNConfig)) {return false;}return this.equals((ATNConfig)o);},public boolean equalsObject o if o instanceof ATNConfig return falsereturn thisequalsATNConfigo
public DeleteEventsConfigurationResult deleteEventsConfiguration(DeleteEventsConfigurationRequest request) {request = beforeClientExecution(request);return executeDeleteEventsConfiguration(request);},public DeleteEventsConfigurationResult deleteEventsConfigurationDeleteEventsConfigurationRequest request request  beforeClientExecutionrequestreturn executeDeleteEventsConfigurationrequest
public static short sign(double d) {return (short) ((d == 0)? 0: (d < 0)? -1: 1);},public static short signdouble d return short d  0 0 d  0 1 1
public void setFillerToken(String fillerToken) {this.fillerToken = null == fillerToken ? new char[0] : fillerToken.toCharArray();},public void setFillerTokenString fillerToken thisfillerToken  null  fillerToken  new char0  fillerTokentoCharArray
public UpdateDestinationResult updateDestination(UpdateDestinationRequest request) {request = beforeClientExecution(request);return executeUpdateDestination(request);},public UpdateDestinationResult updateDestinationUpdateDestinationRequest request request  beforeClientExecutionrequestreturn executeUpdateDestinationrequest
public CreateEmailIdentityResult createEmailIdentity(CreateEmailIdentityRequest request) {request = beforeClientExecution(request);return executeCreateEmailIdentity(request);},public CreateEmailIdentityResult createEmailIdentityCreateEmailIdentityRequest request request  beforeClientExecutionrequestreturn executeCreateEmailIdentityrequest
public PersonIdent getSourceAuthor() {return outCandidate.getAuthor();},public PersonIdent getSourceAuthor return outCandidategetAuthor
public StartMonitoringMembersResult startMonitoringMembers(StartMonitoringMembersRequest request) {request = beforeClientExecution(request);return executeStartMonitoringMembers(request);},public StartMonitoringMembersResult startMonitoringMembersStartMonitoringMembersRequest request request  beforeClientExecutionrequestreturn executeStartMonitoringMembersrequest
public void setLocalPatternChars(String data) {if (data == null) {throw new NullPointerException();}localPatternChars = data;},public void setLocalPatternCharsString data if data  null throw new NullPointerExceptionlocalPatternChars  data
public PersianNormalizationFilter(TokenStream input) {super(input);},public PersianNormalizationFilterTokenStream input superinput
"public void liftUp(Row in, List<Row> nodes) {Iterator<Cell> i = in.cells.values().iterator();for (; i.hasNext();) {Cell c = i.next();if (c.ref >= 0) {Row to = nodes.get(c.ref);int sum = to.uniformCmd(changeSkip);if (sum >= 0) {if (sum == c.cmd) {if (changeSkip) {if (c.skip != to.uniformSkip + 1) {continue;}c.skip = to.uniformSkip + 1;} else {c.skip = 0;}c.cnt += to.uniformCnt;c.ref = -1;} else if (c.cmd < 0) {c.cnt = to.uniformCnt;c.cmd = sum;c.ref = -1;if (changeSkip) {c.skip = to.uniformSkip + 1;} else {c.skip = 0;}}}}}}",public void liftUpRow in ListRow nodes IteratorCell i  incellsvaluesiteratorfor  ihasNext Cell c  inextif cref  0 Row to  nodesgetcrefint sum  touniformCmdchangeSkipif sum  0 if sum  ccmd if changeSkip if cskip  touniformSkip  1 continuecskip  touniformSkip  1 else cskip  0ccnt  touniformCntcref  1 else if ccmd  0 ccnt  touniformCntccmd  sumcref  1if changeSkip cskip  touniformSkip  1 else cskip  0
"public String toString() {StringBuilder r = new StringBuilder();r.append(""SymbolicRef["");Ref cur = this;while (cur.isSymbolic()) {r.append(cur.getName());r.append("" -> "");cur = cur.getTarget();}r.append(cur.getName());r.append('=');r.append(ObjectId.toString(cur.getObjectId()));r.append(""("");r.append(updateIndex); r.append("")]"");return r.toString();}",public String toString StringBuilder r  new StringBuilderrappendSymbolicRefRef cur  thiswhile curisSymbolic rappendcurgetNamerappend  cur  curgetTargetrappendcurgetNamerappendrappendObjectIdtoStringcurgetObjectIdrappendrappendupdateIndex rappendreturn rtoString
public RemoveAllResourcePermissionsResult removeAllResourcePermissions(RemoveAllResourcePermissionsRequest request) {request = beforeClientExecution(request);return executeRemoveAllResourcePermissions(request);},public RemoveAllResourcePermissionsResult removeAllResourcePermissionsRemoveAllResourcePermissionsRequest request request  beforeClientExecutionrequestreturn executeRemoveAllResourcePermissionsrequest
public DescribeResourceGroupsResult describeResourceGroups(DescribeResourceGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeResourceGroups(request);},public DescribeResourceGroupsResult describeResourceGroupsDescribeResourceGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeResourceGroupsrequest
"public SpatialArgs parse(String v, SpatialContext ctx) throws ParseException, InvalidShapeException {int idx = v.indexOf('(');int edx = v.lastIndexOf(')');if (idx < 0 || idx > edx) {throw new ParseException(""missing parens: "" + v, -1);}SpatialOperation op = SpatialOperation.get(v.substring(0, idx).trim());String body = v.substring(idx + 1, edx).trim();if (body.length() < 1) {throw new ParseException(""missing body : "" + v, idx + 1);}Shape shape = parseShape(body, ctx);SpatialArgs args = newSpatialArgs(op, shape);if (v.length() > (edx + 1)) {body = v.substring(edx + 1).trim();if (body.length() > 0) {Map<String, String> aa = parseMap(body);readNameValuePairs(args, aa);if (!aa.isEmpty()) {throw new IllegalArgumentException(""unused parameters: "" + aa);}}}args.validate();return args;}",public SpatialArgs parseString v SpatialContext ctx throws ParseException InvalidShapeException int idx  vindexOfint edx  vlastIndexOfif idx  0  idx  edx throw new ParseExceptionmissing parens   v 1SpatialOperation op  SpatialOperationgetvsubstring0 idxtrimString body  vsubstringidx  1 edxtrimif bodylength  1 throw new ParseExceptionmissing body    v idx  1Shape shape  parseShapebody ctxSpatialArgs args  newSpatialArgsop shapeif vlength  edx  1 body  vsubstringedx  1trimif bodylength  0 MapString String aa  parseMapbodyreadNameValuePairsargs aaif aaisEmpty throw new IllegalArgumentExceptionunused parameters   aaargsvalidatereturn args
public boolean wasDeltaAttempted() {int fmt = getFormat();return fmt == PACK_DELTA || fmt == PACK_WHOLE;},public boolean wasDeltaAttempted int fmt  getFormatreturn fmt  PACKDELTA  fmt  PACKWHOLE
public PutModelResult putModel(PutModelRequest request) {request = beforeClientExecution(request);return executePutModel(request);},public PutModelResult putModelPutModelRequest request request  beforeClientExecutionrequestreturn executePutModelrequest
public String toString() {return String.valueOf(stateNumber);},public String toString return StringvalueOfstateNumber
public CreatePlayerSessionResult createPlayerSession(CreatePlayerSessionRequest request) {request = beforeClientExecution(request);return executeCreatePlayerSession(request);},public CreatePlayerSessionResult createPlayerSessionCreatePlayerSessionRequest request request  beforeClientExecutionrequestreturn executeCreatePlayerSessionrequest
public void serialize(LittleEndianOutput out) {out.writeByte(field_1_majorTickType);out.writeByte(field_2_minorTickType);out.writeByte(field_3_labelPosition);out.writeByte(field_4_background);out.writeInt(field_5_labelColorRgb);out.writeInt(field_6_zero1);out.writeInt(field_7_zero2);out.writeInt(field_8_zero3);out.writeInt(field_9_zero4);out.writeShort(field_10_options);out.writeShort(field_11_tickColor);out.writeShort(field_12_zero5);},public void serializeLittleEndianOutput out outwriteBytefield1majorTickTypeoutwriteBytefield2minorTickTypeoutwriteBytefield3labelPositionoutwriteBytefield4backgroundoutwriteIntfield5labelColorRgboutwriteIntfield6zero1outwriteIntfield7zero2outwriteIntfield8zero3outwriteIntfield9zero4outwriteShortfield10optionsoutwriteShortfield11tickColoroutwriteShortfield12zero5
public ModifyVpcTenancyResult modifyVpcTenancy(ModifyVpcTenancyRequest request) {request = beforeClientExecution(request);return executeModifyVpcTenancy(request);},public ModifyVpcTenancyResult modifyVpcTenancyModifyVpcTenancyRequest request request  beforeClientExecutionrequestreturn executeModifyVpcTenancyrequest
public GetBasePathMappingsResult getBasePathMappings(GetBasePathMappingsRequest request) {request = beforeClientExecution(request);return executeGetBasePathMappings(request);},public GetBasePathMappingsResult getBasePathMappingsGetBasePathMappingsRequest request request  beforeClientExecutionrequestreturn executeGetBasePathMappingsrequest
public void add(BytesRef utf8) {if (closed) throw new IllegalStateException();buffer.append(utf8);},public void addBytesRef utf8 if closed throw new IllegalStateExceptionbufferappendutf8
public void notifyUpdateCell(HSSFCell cell) {_bookEvaluator.notifyUpdateCell(new HSSFEvaluationCell(cell));},public void notifyUpdateCellHSSFCell cell bookEvaluatornotifyUpdateCellnew HSSFEvaluationCellcell
public AddApplicationReferenceDataSourceResult addApplicationReferenceDataSource(AddApplicationReferenceDataSourceRequest request) {request = beforeClientExecution(request);return executeAddApplicationReferenceDataSource(request);},public AddApplicationReferenceDataSourceResult addApplicationReferenceDataSourceAddApplicationReferenceDataSourceRequest request request  beforeClientExecutionrequestreturn executeAddApplicationReferenceDataSourcerequest
"public NIOFSIndexInput(String resourceDesc, FileChannel fc, long off, long length, int bufferSize) {super(resourceDesc, bufferSize);this.channel = fc;this.off = off;this.end = off + length;this.isClone = true;}",public NIOFSIndexInputString resourceDesc FileChannel fc long off long length int bufferSize superresourceDesc bufferSizethischannel  fcthisoff  offthisend  off  lengththisisClone  true
"@Override public Iterator<K> iterator() {final Iterator<Entry<K, V>> iterator = filteredEntrySet.iterator();return new UnmodifiableIterator<K>();}",Override public IteratorK iterator final IteratorEntryK V iterator  filteredEntrySetiteratorreturn new UnmodifiableIteratorK
"public TokenStream create(TokenStream input) {return new IndonesianStemFilter(input, stemDerivational);}",public TokenStream createTokenStream input return new IndonesianStemFilterinput stemDerivational
public SubmoduleStatusCommand addPath(String path) {paths.add(path);return this;},public SubmoduleStatusCommand addPathString path pathsaddpathreturn this
public PutInsightRuleResult putInsightRule(PutInsightRuleRequest request) {request = beforeClientExecution(request);return executePutInsightRule(request);},public PutInsightRuleResult putInsightRulePutInsightRuleRequest request request  beforeClientExecutionrequestreturn executePutInsightRulerequest
"public JapaneseReadingFormFilterFactory(Map<String,String> args) {super(args);useRomaji = getBoolean(args, ROMAJI_PARAM, false);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public JapaneseReadingFormFilterFactoryMapStringString args superargsuseRomaji  getBooleanargs ROMAJIPARAM falseif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public GetVpcLinkResult getVpcLink(GetVpcLinkRequest request) {request = beforeClientExecution(request);return executeGetVpcLink(request);},public GetVpcLinkResult getVpcLinkGetVpcLinkRequest request request  beforeClientExecutionrequestreturn executeGetVpcLinkrequest
"public boolean evaluate(boolean cmpResult) {switch (_code) {case NONE:case EQ:return cmpResult;case NE:return !cmpResult;}throw new RuntimeException(""Cannot call boolean evaluate on non-equality operator '""+ _representation + ""'"");}",public boolean evaluateboolean cmpResult switch code case NONEcase EQreturn cmpResultcase NEreturn cmpResultthrow new RuntimeExceptionCannot call boolean evaluate on nonequality operator  representation  
public int getEnd() {return end;},public int getEnd return end
"@Override public String toString() {if (string != null) {return string;}StringBuilder result = new StringBuilder();if (scheme != null) {result.append(scheme);result.append(':');}if (opaque) {result.append(schemeSpecificPart);} else {if (authority != null) {result.append("""");result.append(authority);}if (path != null) {result.append(path);}if (query != null) {result.append('?');result.append(query);}}if (fragment != null) {result.append('#');result.append(fragment);}string = result.toString();return string;}",Override public String toString if string  null return stringStringBuilder result  new StringBuilderif scheme  null resultappendschemeresultappendif opaque resultappendschemeSpecificPart else if authority  null resultappendresultappendauthorityif path  null resultappendpathif query  null resultappendresultappendqueryif fragment  null resultappendresultappendfragmentstring  resulttoStringreturn string
"public static final ObjectId fromRaw(byte[] bs, int p) {final int a = NB.decodeInt32(bs, p);final int b = NB.decodeInt32(bs, p + 4);final int c = NB.decodeInt32(bs, p + 8);final int d = NB.decodeInt32(bs, p + 12);final int e = NB.decodeInt32(bs, p + 16);return new ObjectId(a, b, c, d, e);}",public static final ObjectId fromRawbyte bs int p final int a  NBdecodeInt32bs pfinal int b  NBdecodeInt32bs p  4final int c  NBdecodeInt32bs p  8final int d  NBdecodeInt32bs p  12final int e  NBdecodeInt32bs p  16return new ObjectIda b c d e
public int maxRecall(QualityQuery query) {QRelJudgement qrj = judgements.get(query.getQueryID());if (qrj!=null) {return qrj.maxRecall();}return 0;},public int maxRecallQualityQuery query QRelJudgement qrj  judgementsgetquerygetQueryIDif qrjnull return qrjmaxRecallreturn 0
"public static HashFunction hashFunctionForVersion(int version) {if (version < VERSION_START) {throw new IllegalArgumentException(""Version "" + version + "" is too old, expected at least "" + VERSION_START);} else if (version > VERSION_CURRENT) {throw new IllegalArgumentException(""Version "" + version + "" is too new, expected at most "" + VERSION_CURRENT);}return MurmurHash2.INSTANCE;}",public static HashFunction hashFunctionForVersionint version if version  VERSIONSTART throw new IllegalArgumentExceptionVersion   version   is too old expected at least   VERSIONSTART else if version  VERSIONCURRENT throw new IllegalArgumentExceptionVersion   version   is too new expected at most   VERSIONCURRENTreturn MurmurHash2INSTANCE
"public void removeCell(Cell cell) {if(cell == null) {throw new IllegalArgumentException(""cell must not be null"");}removeCell((HSSFCell)cell, true);}",public void removeCellCell cell ifcell  null throw new IllegalArgumentExceptioncell must not be nullremoveCellHSSFCellcell true
"public CreatePlacementGroupRequest(String groupName, PlacementStrategy strategy) {setGroupName(groupName);setStrategy(strategy.toString());}",public CreatePlacementGroupRequestString groupName PlacementStrategy strategy setGroupNamegroupNamesetStrategystrategytoString
public PutManagedScalingPolicyResult putManagedScalingPolicy(PutManagedScalingPolicyRequest request) {request = beforeClientExecution(request);return executePutManagedScalingPolicy(request);},public PutManagedScalingPolicyResult putManagedScalingPolicyPutManagedScalingPolicyRequest request request  beforeClientExecutionrequestreturn executePutManagedScalingPolicyrequest
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[SXVS]\n"");buffer.append(""    .vs      ="").append(HexDump.shortToHex(vs)).append('\n');buffer.append(""[/SXVS]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendSXVSnbufferappend    vs      appendHexDumpshortToHexvsappendnbufferappendSXVSnreturn buffertoString
public Trie reduce(Reduce by) {return by.optimize(this);},public Trie reduceReduce by return byoptimizethis
public AbstractEscherHolderRecord clone() {return copy();},public AbstractEscherHolderRecord clone return copy
"public void setParams(String params) {super.setParams(params);commitUserData = new HashMap<>();commitUserData.put(OpenReaderTask.USER_DATA, params);}",public void setParamsString params supersetParamsparamscommitUserData  new HashMapcommitUserDataputOpenReaderTaskUSERDATA params
public String getSrcRef() {return srcRef;},public String getSrcRef return srcRef
"public final String getShortMessage() {byte[] raw = buffer;int msgB = RawParseUtils.commitMessage(raw, 0);if (msgB < 0) {return """"; }int msgE = RawParseUtils.endOfParagraph(raw, msgB);String str = RawParseUtils.decode(guessEncoding(), raw, msgB, msgE);if (hasLF(raw, msgB, msgE)) {str = StringUtils.replaceLineBreaksWithSpace(str);}return str;}",public final String getShortMessage byte raw  bufferint msgB  RawParseUtilscommitMessageraw 0if msgB  0 return  int msgE  RawParseUtilsendOfParagraphraw msgBString str  RawParseUtilsdecodeguessEncoding raw msgB msgEif hasLFraw msgB msgE str  StringUtilsreplaceLineBreaksWithSpacestrreturn str
"public static Boolean coerceValueToBoolean(ValueEval ve, boolean stringsAreBlanks) throws EvaluationException {if (ve == null || ve == BlankEval.instance) {return null;}if (ve instanceof BoolEval) {return Boolean.valueOf(((BoolEval) ve).getBooleanValue());}if (ve instanceof StringEval) {if (stringsAreBlanks) {return null;}String str = ((StringEval) ve).getStringValue();if (str.equalsIgnoreCase(""true"")) {return Boolean.TRUE;}if (str.equalsIgnoreCase(""false"")) {return Boolean.FALSE;}throw new EvaluationException(ErrorEval.VALUE_INVALID);}if (ve instanceof NumericValueEval) {NumericValueEval ne = (NumericValueEval) ve;double d = ne.getNumberValue();if (Double.isNaN(d)) {throw new EvaluationException(ErrorEval.VALUE_INVALID);}return Boolean.valueOf(d != 0);}if (ve instanceof ErrorEval) {throw new EvaluationException((ErrorEval) ve);}throw new RuntimeException(""Unexpected eval ("" + ve.getClass().getName() + "")"");}",public static Boolean coerceValueToBooleanValueEval ve boolean stringsAreBlanks throws EvaluationException if ve  null  ve  BlankEvalinstance return nullif ve instanceof BoolEval return BooleanvalueOfBoolEval vegetBooleanValueif ve instanceof StringEval if stringsAreBlanks return nullString str  StringEval vegetStringValueif strequalsIgnoreCasetrue return BooleanTRUEif strequalsIgnoreCasefalse return BooleanFALSEthrow new EvaluationExceptionErrorEvalVALUEINVALIDif ve instanceof NumericValueEval NumericValueEval ne  NumericValueEval vedouble d  negetNumberValueif DoubleisNaNd throw new EvaluationExceptionErrorEvalVALUEINVALIDreturn BooleanvalueOfd  0if ve instanceof ErrorEval throw new EvaluationExceptionErrorEval vethrow new RuntimeExceptionUnexpected eval   vegetClassgetName  
public synchronized List<IndexCommit> getSnapshots() {return new ArrayList<>(indexCommits.values());},public synchronized ListIndexCommit getSnapshots return new ArrayListindexCommitsvalues
"public static int subIndex(int n, int[] docStarts) { int size = docStarts.length;int lo = 0; int hi = size - 1; while (hi >= lo) {int mid = (lo + hi) >>> 1;int midValue = docStarts[mid];if (n < midValue)hi = mid - 1;else if (n > midValue)lo = mid + 1;else { while (mid + 1 < size && docStarts[mid + 1] == midValue) {mid++; }return mid;}}return hi;}",public static int subIndexint n int docStarts  int size  docStartslengthint lo  0 int hi  size  1 while hi  lo int mid  lo  hi  1int midValue  docStartsmidif n  midValuehi  mid  1else if n  midValuelo  mid  1else  while mid  1  size  docStartsmid  1  midValue mid return midreturn hi
"public static Date getJavaDate(double date, boolean use1904windowing) {return getJavaDate(date, use1904windowing, null, false);}",public static Date getJavaDatedouble date boolean use1904windowing return getJavaDatedate use1904windowing null false
"public CharSequence getLastOnPath(CharSequence key) {Row now = getRow(root);int w;CharSequence last = null;StrEnum e = new StrEnum(key, forward);for (int i = 0; i < key.length() - 1; i++) {Character ch = e.next();w = now.getCmd(ch);if (w >= 0) {last = cmds.get(w);}w = now.getRef(ch);if (w >= 0) {now = getRow(w);} else {return last;}}w = now.getCmd(e.next());return (w >= 0) ? cmds.get(w) : last;}",public CharSequence getLastOnPathCharSequence key Row now  getRowrootint wCharSequence last  nullStrEnum e  new StrEnumkey forwardfor int i  0 i  keylength  1 i Character ch  enextw  nowgetCmdchif w  0 last  cmdsgetww  nowgetRefchif w  0 now  getRoww else return lastw  nowgetCmdenextreturn w  0  cmdsgetw  last
"public Hashtable(int capacity) {if (capacity < 0) {throw new IllegalArgumentException(""Capacity: "" + capacity);}if (capacity == 0) {@SuppressWarnings(""unchecked"")HashtableEntry<K, V>[] tab = (HashtableEntry<K, V>[]) EMPTY_TABLE;table = tab;threshold = -1; return;}if (capacity < MINIMUM_CAPACITY) {capacity = MINIMUM_CAPACITY;} else if (capacity > MAXIMUM_CAPACITY) {capacity = MAXIMUM_CAPACITY;} else {capacity = roundUpToPowerOfTwo(capacity);}makeTable(capacity);}",public Hashtableint capacity if capacity  0 throw new IllegalArgumentExceptionCapacity   capacityif capacity  0 SuppressWarningsuncheckedHashtableEntryK V tab  HashtableEntryK V EMPTYTABLEtable  tabthreshold  1 returnif capacity  MINIMUMCAPACITY capacity  MINIMUMCAPACITY else if capacity  MAXIMUMCAPACITY capacity  MAXIMUMCAPACITY else capacity  roundUpToPowerOfTwocapacitymakeTablecapacity
public void reset() {heads.clear();heads.addAll(headsStartValue);},public void reset headsclearheadsaddAllheadsStartValue
public CreatePlacementGroupResult createPlacementGroup(CreatePlacementGroupRequest request) {request = beforeClientExecution(request);return executeCreatePlacementGroup(request);},public CreatePlacementGroupResult createPlacementGroupCreatePlacementGroupRequest request request  beforeClientExecutionrequestreturn executeCreatePlacementGrouprequest
public final float maxCharsPerByte() {return maxCharsPerByte;},public final float maxCharsPerByte return maxCharsPerByte
"public static String getRFC2616Date(Date date) {SimpleDateFormat df = new SimpleDateFormat(FORMAT_RFC2616, Locale.ENGLISH);df.setTimeZone(new SimpleTimeZone(0, TIME_ZONE));return df.format(date);}",public static String getRFC2616DateDate date SimpleDateFormat df  new SimpleDateFormatFORMATRFC2616 LocaleENGLISHdfsetTimeZonenew SimpleTimeZone0 TIMEZONEreturn dfformatdate
public ListContributorInsightsResult listContributorInsights(ListContributorInsightsRequest request) {request = beforeClientExecution(request);return executeListContributorInsights(request);},public ListContributorInsightsResult listContributorInsightsListContributorInsightsRequest request request  beforeClientExecutionrequestreturn executeListContributorInsightsrequest
public void setPackedGitOpenFiles(int fdLimit) {packedGitOpenFiles = fdLimit;},public void setPackedGitOpenFilesint fdLimit packedGitOpenFiles  fdLimit
public DBCluster failoverDBCluster(FailoverDBClusterRequest request) {request = beforeClientExecution(request);return executeFailoverDBCluster(request);},public DBCluster failoverDBClusterFailoverDBClusterRequest request request  beforeClientExecutionrequestreturn executeFailoverDBClusterrequest
"public StringBuilder insert(int offset, double d) {insert0(offset, Double.toString(d));return this;}",public StringBuilder insertint offset double d insert0offset DoubletoStringdreturn this
public void serialize(LittleEndianOutput out) {futureHeader.serialize(out);out.writeShort(isf_sharedFeatureType);out.writeByte(reserved1);out.writeInt((int)reserved2);out.writeShort(cellRefs.length);out.writeInt((int)cbFeatData);out.writeShort(reserved3);for(int i=0; i<cellRefs.length; i++) {cellRefs[i].serialize(out);}sharedFeature.serialize(out);},public void serializeLittleEndianOutput out futureHeaderserializeoutoutwriteShortisfsharedFeatureTypeoutwriteBytereserved1outwriteIntintreserved2outwriteShortcellRefslengthoutwriteIntintcbFeatDataoutwriteShortreserved3forint i0 icellRefslength i cellRefsiserializeoutsharedFeatureserializeout
public void writeDouble(double value) throws IOException {checkWritePrimitiveTypes();primitiveTypes.writeDouble(value);},public void writeDoubledouble value throws IOException checkWritePrimitiveTypesprimitiveTypeswriteDoublevalue
public DisassociateWebsiteAuthorizationProviderResult disassociateWebsiteAuthorizationProvider(DisassociateWebsiteAuthorizationProviderRequest request) {request = beforeClientExecution(request);return executeDisassociateWebsiteAuthorizationProvider(request);},public DisassociateWebsiteAuthorizationProviderResult disassociateWebsiteAuthorizationProviderDisassociateWebsiteAuthorizationProviderRequest request request  beforeClientExecutionrequestreturn executeDisassociateWebsiteAuthorizationProviderrequest
"public final byte[] serialize() {byte[] retval = new byte[ getRecordSize() ];serialize(0, retval);return retval;}",public final byte serialize byte retval  new byte getRecordSize serialize0 retvalreturn retval
"public Cell next() {if (!hasNext()) {throw new NoSuchElementException(""At last element"");}HSSFCell cell = cells[nextId];thisId = nextId;findNext();return cell;}",public Cell next if hasNext throw new NoSuchElementExceptionAt last elementHSSFCell cell  cellsnextIdthisId  nextIdfindNextreturn cell
"public static double[] grow(double[] array) {return grow(array, 1 + array.length);}",public static double growdouble array return growarray 1  arraylength
"public synchronized StringBuffer insert(int index, String string) {insert0(index, string);return this;}",public synchronized StringBuffer insertint index String string insert0index stringreturn this
public DomainDetail describeDomain(DescribeDomainRequest request) {request = beforeClientExecution(request);return executeDescribeDomain(request);},public DomainDetail describeDomainDescribeDomainRequest request request  beforeClientExecutionrequestreturn executeDescribeDomainrequest
"public void reset() {this.reset(true, true);}",public void reset thisresettrue true
public void serialize(LittleEndianOutput out) {out.writeShort(_reserved);},public void serializeLittleEndianOutput out outwriteShortreserved
public int getStartOffset() {return startOffset;},public int getStartOffset return startOffset
public synchronized String[] listAll() throws IOException {final Set<String> files = new HashSet<>();for (String f : cacheDirectory.listAll()) {files.add(f);}for (String f : in.listAll()) {files.add(f);}String[] result = files.toArray(new String[files.size()]);Arrays.sort(result);return result;},public synchronized String listAll throws IOException final SetString files  new HashSetfor String f  cacheDirectorylistAll filesaddffor String f  inlistAll filesaddfString result  filestoArraynew StringfilessizeArrayssortresultreturn result
public byte clearByte(final byte holder){return ( byte ) clear(holder);},public byte clearBytefinal byte holderreturn  byte  clearholder
public ScenarioProtectRecord getHCenter() {return _scenarioProtectRecord;},public ScenarioProtectRecord getHCenter return scenarioProtectRecord
"public HSSFRow createRow(int rownum) {HSSFRow row = new HSSFRow(_workbook, this, rownum);row.setHeight(getDefaultRowHeight());row.getRowRecord().setBadFontHeight(false);addRow(row, true);return row;}",public HSSFRow createRowint rownum HSSFRow row  new HSSFRowworkbook this rownumrowsetHeightgetDefaultRowHeightrowgetRowRecordsetBadFontHeightfalseaddRowrow truereturn row
public ListQueryExecutionsResult listQueryExecutions(ListQueryExecutionsRequest request) {request = beforeClientExecution(request);return executeListQueryExecutions(request);},public ListQueryExecutionsResult listQueryExecutionsListQueryExecutionsRequest request request  beforeClientExecutionrequestreturn executeListQueryExecutionsrequest
public DeleteSuppressedDestinationResult deleteSuppressedDestination(DeleteSuppressedDestinationRequest request) {request = beforeClientExecution(request);return executeDeleteSuppressedDestination(request);},public DeleteSuppressedDestinationResult deleteSuppressedDestinationDeleteSuppressedDestinationRequest request request  beforeClientExecutionrequestreturn executeDeleteSuppressedDestinationrequest
"public CharsRef subtract(CharsRef output, CharsRef inc) {assert output != null;assert inc != null;if (inc == NO_OUTPUT) {return output;} else if (inc.length == output.length) {return NO_OUTPUT;} else {assert inc.length < output.length: ""inc.length="" + inc.length + "" vs output.length="" + output.length;assert inc.length > 0;return new CharsRef(output.chars, output.offset + inc.length, output.length-inc.length);}}",public CharsRef subtractCharsRef output CharsRef inc assert output  nullassert inc  nullif inc  NOOUTPUT return output else if inclength  outputlength return NOOUTPUT else assert inclength  outputlength inclength  inclength   vs outputlength  outputlengthassert inclength  0return new CharsRefoutputchars outputoffset  inclength outputlengthinclength
public void requestCancelWorkflowExecution(RequestCancelWorkflowExecutionRequest request) {request = beforeClientExecution(request);executeRequestCancelWorkflowExecution(request);},public void requestCancelWorkflowExecutionRequestCancelWorkflowExecutionRequest request request  beforeClientExecutionrequestexecuteRequestCancelWorkflowExecutionrequest
public boolean equals(Object o) {if (this == o) {return true;}if (o == null || getClass() != o.getClass()) {return false;}Arn arn = (Arn) o;if (!partition.equals(arn.partition)) {return false;}if (!service.equals(arn.service)) {return false;}if (region != null ? !region.equals(arn.region) : arn.region != null) {return false;}if (accountId != null ? !accountId.equals(arn.accountId) : arn.accountId != null) {return false;}return resource.equals(arn.resource);},public boolean equalsObject o if this  o return trueif o  null  getClass  ogetClass return falseArn arn  Arn oif partitionequalsarnpartition return falseif serviceequalsarnservice return falseif region  null  regionequalsarnregion  arnregion  null return falseif accountId  null  accountIdequalsarnaccountId  arnaccountId  null return falsereturn resourceequalsarnresource
public UpdateDataSetPermissionsResult updateDataSetPermissions(UpdateDataSetPermissionsRequest request) {request = beforeClientExecution(request);return executeUpdateDataSetPermissions(request);},public UpdateDataSetPermissionsResult updateDataSetPermissionsUpdateDataSetPermissionsRequest request request  beforeClientExecutionrequestreturn executeUpdateDataSetPermissionsrequest
public DeleteCloudFrontOriginAccessIdentityResult deleteCloudFrontOriginAccessIdentity(DeleteCloudFrontOriginAccessIdentityRequest request) {request = beforeClientExecution(request);return executeDeleteCloudFrontOriginAccessIdentity(request);},public DeleteCloudFrontOriginAccessIdentityResult deleteCloudFrontOriginAccessIdentityDeleteCloudFrontOriginAccessIdentityRequest request request  beforeClientExecutionrequestreturn executeDeleteCloudFrontOriginAccessIdentityrequest
public TokenStream create(TokenStream input) {return new PortugueseMinimalStemFilter(input);},public TokenStream createTokenStream input return new PortugueseMinimalStemFilterinput
public PutDashboardResult putDashboard(PutDashboardRequest request) {request = beforeClientExecution(request);return executePutDashboard(request);},public PutDashboardResult putDashboardPutDashboardRequest request request  beforeClientExecutionrequestreturn executePutDashboardrequest
"public void addChar( char c, int width ){charWidths.put(Character.valueOf(c), Integer.valueOf(width));}",public void addChar char c int width charWidthsputCharactervalueOfc IntegervalueOfwidth
public DeleteRoomSkillParameterResult deleteRoomSkillParameter(DeleteRoomSkillParameterRequest request) {request = beforeClientExecution(request);return executeDeleteRoomSkillParameter(request);},public DeleteRoomSkillParameterResult deleteRoomSkillParameterDeleteRoomSkillParameterRequest request request  beforeClientExecutionrequestreturn executeDeleteRoomSkillParameterrequest
"public String get(String name, String dflt) {String vals[] = (String[]) valByRound.get(name);if (vals != null) {return vals[roundNumber % vals.length];}String sval = props.getProperty(name, dflt);if (sval == null) {return null;}if (sval.indexOf("":"") < 0) {return sval;} else if (sval.indexOf("":\\"") >= 0 || sval.indexOf("":/"") >= 0) {return sval;}int k = sval.indexOf("":"");String colName = sval.substring(0, k);sval = sval.substring(k + 1);colForValByRound.put(name, colName);vals = propToStringArray(sval);valByRound.put(name, vals);return vals[roundNumber % vals.length];}",public String getString name String dflt String vals  String valByRoundgetnameif vals  null return valsroundNumber  valslengthString sval  propsgetPropertyname dfltif sval  null return nullif svalindexOf  0 return sval else if svalindexOf  0  svalindexOf  0 return svalint k  svalindexOfString colName  svalsubstring0 ksval  svalsubstringk  1colForValByRoundputname colNamevals  propToStringArraysvalvalByRoundputname valsreturn valsroundNumber  valslength
public DBClusterSnapshotAttributesResult describeDBClusterSnapshotAttributes(DescribeDBClusterSnapshotAttributesRequest request) {request = beforeClientExecution(request);return executeDescribeDBClusterSnapshotAttributes(request);},public DBClusterSnapshotAttributesResult describeDBClusterSnapshotAttributesDescribeDBClusterSnapshotAttributesRequest request request  beforeClientExecutionrequestreturn executeDescribeDBClusterSnapshotAttributesrequest
public void addFile(FileHeader fh) {files.add(fh);},public void addFileFileHeader fh filesaddfh
public TokenStream create(TokenStream input) {return new ItalianLightStemFilter(input);},public TokenStream createTokenStream input return new ItalianLightStemFilterinput
public LinkedHashMap() {init();accessOrder = false;},public LinkedHashMap initaccessOrder  false
public DeleteStackInstancesResult deleteStackInstances(DeleteStackInstancesRequest request) {request = beforeClientExecution(request);return executeDeleteStackInstances(request);},public DeleteStackInstancesResult deleteStackInstancesDeleteStackInstancesRequest request request  beforeClientExecutionrequestreturn executeDeleteStackInstancesrequest
"public String toString() {return ""("" + a.toString() + "" AND "" + b.toString() + "")""; }",public String toString return   atoString   AND   btoString   
public StringWriter() {buf = new StringBuffer(16);lock = buf;},public StringWriter buf  new StringBuffer16lock  buf
public List<MatchingDocs> getOriginalMatchingDocs() {return super.getMatchingDocs();},public ListMatchingDocs getOriginalMatchingDocs return supergetMatchingDocs
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {double result;try {double d0 = singleOperandEvaluate(arg0, srcRowIndex, srcColumnIndex);double d1 = singleOperandEvaluate(arg1, srcRowIndex, srcColumnIndex);result =  evaluate(d0, d1);checkValue(result);} catch (EvaluationException e) {return e.getErrorEval();}return new NumberEval(result);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1 double resulttry double d0  singleOperandEvaluatearg0 srcRowIndex srcColumnIndexdouble d1  singleOperandEvaluatearg1 srcRowIndex srcColumnIndexresult   evaluated0 d1checkValueresult catch EvaluationException e return egetErrorEvalreturn new NumberEvalresult
"public String toString() {return ""[HCENTER]\n"" +""    .hcenter        = "" + getHCenter() +""\n"" +""[/HCENTER]\n"";}",public String toString return HCENTERn     hcenter           getHCenter n HCENTERn
public GetEbsEncryptionByDefaultResult getEbsEncryptionByDefault(GetEbsEncryptionByDefaultRequest request) {request = beforeClientExecution(request);return executeGetEbsEncryptionByDefault(request);},public GetEbsEncryptionByDefaultResult getEbsEncryptionByDefaultGetEbsEncryptionByDefaultRequest request request  beforeClientExecutionrequestreturn executeGetEbsEncryptionByDefaultrequest
"public ParseException generateParseException() {jj_expentries.clear();boolean[] la1tokens = new boolean[34];if (jj_kind >= 0) {la1tokens[jj_kind] = true;jj_kind = -1;}for (int i = 0; i < 25; i++) {if (jj_la1[i] == jj_gen) {for (int j = 0; j < 32; j++) {if ((jj_la1_0[i] & (1<<j)) != 0) {la1tokens[j] = true;}if ((jj_la1_1[i] & (1<<j)) != 0) {la1tokens[32+j] = true;}}}}for (int i = 0; i < 34; i++) {if (la1tokens[i]) {jj_expentry = new int[1];jj_expentry[0] = i;jj_expentries.add(jj_expentry);}}jj_endpos = 0;jj_rescan_token();jj_add_error_token(0, 0);int[][] exptokseq = new int[jj_expentries.size()][];for (int i = 0; i < jj_expentries.size(); i++) {exptokseq[i] = jj_expentries.get(i);}return new ParseException(token, exptokseq, tokenImage);}",public ParseException generateParseException jjexpentriesclearboolean la1tokens  new boolean34if jjkind  0 la1tokensjjkind  truejjkind  1for int i  0 i  25 i if jjla1i  jjgen for int j  0 j  32 j if jjla10i  1j  0 la1tokensj  trueif jjla11i  1j  0 la1tokens32j  truefor int i  0 i  34 i if la1tokensi jjexpentry  new int1jjexpentry0  ijjexpentriesaddjjexpentryjjendpos  0jjrescantokenjjadderrortoken0 0int exptokseq  new intjjexpentriessizefor int i  0 i  jjexpentriessize i exptokseqi  jjexpentriesgetireturn new ParseExceptiontoken exptokseq tokenImage
public int getCharWidth( char c ){Integer widthInteger = charWidths.get(Character.valueOf(c));if (widthInteger == null) {return 'W' == c ? 0 : getCharWidth('W');}return widthInteger;},public int getCharWidth char c Integer widthInteger  charWidthsgetCharactervalueOfcif widthInteger  null return W  c  0  getCharWidthWreturn widthInteger
public DescribeSecurityGroupReferencesResult describeSecurityGroupReferences(DescribeSecurityGroupReferencesRequest request) {request = beforeClientExecution(request);return executeDescribeSecurityGroupReferences(request);},public DescribeSecurityGroupReferencesResult describeSecurityGroupReferencesDescribeSecurityGroupReferencesRequest request request  beforeClientExecutionrequestreturn executeDescribeSecurityGroupReferencesrequest
public final V getValue() {return value;},public final V getValue return value
public EscherContainerRecord getEscherContainer() {for (EscherRecord er : escherRecords) {if(er instanceof EscherContainerRecord) {return (EscherContainerRecord)er;}}return null;},public EscherContainerRecord getEscherContainer for EscherRecord er  escherRecords ifer instanceof EscherContainerRecord return EscherContainerRecorderreturn null
public boolean removeShape(HSSFShape shape) {boolean  isRemoved = getEscherContainer().removeChildRecord(shape.getEscherContainer());if (isRemoved){shape.afterRemove(this.getPatriarch());shapes.remove(shape);}return isRemoved;},public boolean removeShapeHSSFShape shape boolean  isRemoved  getEscherContainerremoveChildRecordshapegetEscherContainerif isRemovedshapeafterRemovethisgetPatriarchshapesremoveshapereturn isRemoved
"public boolean changeExternalReference(String oldUrl, String newUrl) {return linkTable.changeExternalReference(oldUrl, newUrl);}",public boolean changeExternalReferenceString oldUrl String newUrl return linkTablechangeExternalReferenceoldUrl newUrl
"public String toString() {return ""BLOCK: "" + brToString(prefix);}",public String toString return BLOCK   brToStringprefix
"public static String pathToString(String[] path) {return pathToString(path, path.length);}",public static String pathToStringString path return pathToStringpath pathlength
"public final boolean isInRange(int rowIx, int colIx) {CellRangeAddress8Bit r = _range;return r.getFirstRow() <= rowIx&& r.getLastRow() >= rowIx&& r.getFirstColumn() <= colIx&& r.getLastColumn() >= colIx;}",public final boolean isInRangeint rowIx int colIx CellRangeAddress8Bit r  rangereturn rgetFirstRow  rowIx rgetLastRow  rowIx rgetFirstColumn  colIx rgetLastColumn  colIx
public RmCommand rm() {return new RmCommand(repo);},public RmCommand rm return new RmCommandrepo
public static String[] parse(String line) {boolean insideQuote = false;ArrayList<String> result = new ArrayList<>();int quoteCount = 0;StringBuilder sb = new StringBuilder();for(int i = 0; i < line.length(); i++) {char c = line.charAt(i);if(c == QUOTE) {insideQuote = !insideQuote;quoteCount++;}if(c == COMMA && !insideQuote) {String value = sb.toString();value = unQuoteUnEscape(value);result.add(value);sb.setLength(0);continue;}sb.append(c);}result.add(sb.toString());if(quoteCount % 2 != 0) {return new String[0];}return result.toArray(new String[0]);},public static String parseString line boolean insideQuote  falseArrayListString result  new ArrayListint quoteCount  0StringBuilder sb  new StringBuilderforint i  0 i  linelength i char c  linecharAtiifc  QUOTE insideQuote  insideQuotequoteCountifc  COMMA  insideQuote String value  sbtoStringvalue  unQuoteUnEscapevalueresultaddvaluesbsetLength0continuesbappendcresultaddsbtoStringifquoteCount  2  0 return new String0return resulttoArraynew String0
public long get(int index) {final int o = index / 3;final int b = index % 3;final int shift = b * 21;return (blocks[o] >>> shift) & 2097151L;},public long getint index final int o  index  3final int b  index  3final int shift  b  21return blockso  shift  2097151L
public void connect(PipedOutputStream src) throws IOException {src.connect(this);},public void connectPipedOutputStream src throws IOException srcconnectthis
"public WeightedPhraseInfo( Collection< WeightedPhraseInfo > toMerge ) {Iterator< WeightedPhraseInfo > toMergeItr = toMerge.iterator();if ( !toMergeItr.hasNext() ) {throw new IllegalArgumentException( ""toMerge must contain at least one WeightedPhraseInfo."" );}WeightedPhraseInfo first = toMergeItr.next();@SuppressWarnings( { ""rawtypes"", ""unchecked"" } )Iterator< Toffs >[] allToffs = new Iterator[ toMerge.size() ];termsInfos = new ArrayList<>();seqnum = first.seqnum;boost = first.boost;allToffs[ 0 ] = first.termsOffsets.iterator();int index = 1;while ( toMergeItr.hasNext() ) {WeightedPhraseInfo info = toMergeItr.next();boost += info.boost;termsInfos.addAll( info.termsInfos );allToffs[ index++ ] = info.termsOffsets.iterator();}MergedIterator< Toffs > itr = new MergedIterator<>( false, allToffs );termsOffsets = new ArrayList<>();if ( !itr.hasNext() ) {return;}Toffs work = itr.next();while ( itr.hasNext() ) {Toffs current = itr.next();if ( current.startOffset <= work.endOffset ) {work.endOffset = Math.max( work.endOffset, current.endOffset );} else {termsOffsets.add( work );work = current;}}termsOffsets.add( work );}",public WeightedPhraseInfo Collection WeightedPhraseInfo  toMerge  Iterator WeightedPhraseInfo  toMergeItr  toMergeiteratorif  toMergeItrhasNext  throw new IllegalArgumentException toMerge must contain at least one WeightedPhraseInfo WeightedPhraseInfo first  toMergeItrnextSuppressWarnings  rawtypes unchecked  Iterator Toffs  allToffs  new Iterator toMergesize termsInfos  new ArrayListseqnum  firstseqnumboost  firstboostallToffs 0   firsttermsOffsetsiteratorint index  1while  toMergeItrhasNext  WeightedPhraseInfo info  toMergeItrnextboost  infoboosttermsInfosaddAll infotermsInfos allToffs index   infotermsOffsetsiteratorMergedIterator Toffs  itr  new MergedIterator false allToffs termsOffsets  new ArrayListif  itrhasNext  returnToffs work  itrnextwhile  itrhasNext  Toffs current  itrnextif  currentstartOffset  workendOffset  workendOffset  Mathmax workendOffset currentendOffset  else termsOffsetsadd work work  currenttermsOffsetsadd work 
public DescribeLoadBalancerPolicyTypesResult describeLoadBalancerPolicyTypes(DescribeLoadBalancerPolicyTypesRequest request) {request = beforeClientExecution(request);return executeDescribeLoadBalancerPolicyTypes(request);},public DescribeLoadBalancerPolicyTypesResult describeLoadBalancerPolicyTypesDescribeLoadBalancerPolicyTypesRequest request request  beforeClientExecutionrequestreturn executeDescribeLoadBalancerPolicyTypesrequest
"public Entry<K, V> next() {return nextEntry();}",public EntryK V next return nextEntry
public int getCmd(Character way) {Cell c = at(way);return (c == null) ? -1 : c.cmd;},public int getCmdCharacter way Cell c  atwayreturn c  null  1  ccmd
public int readInt(){int ch1 = _in.readUByte();int ch2 = _in.readUByte();int ch3 = _in.readUByte();int ch4 = _in.readUByte();return (ch4 << 24) + (ch3 << 16) + (ch2 << 8) + (ch1 << 0);},public int readIntint ch1  inreadUByteint ch2  inreadUByteint ch3  inreadUByteint ch4  inreadUBytereturn ch4  24  ch3  16  ch2  8  ch1  0
"public String toString() {return ""Reverse"" + super.toString(); }",public String toString return Reverse  supertoString 
"public Explanation explain(Explanation freq, long norm) {return SimilarityBase.this.explain(stats, freq, getLengthValue(norm));}",public Explanation explainExplanation freq long norm return SimilarityBasethisexplainstats freq getLengthValuenorm
public static ListenerList getGlobalListenerList() {return globalListeners;},public static ListenerList getGlobalListenerList return globalListeners
public GetInvitationsCountResult getInvitationsCount(GetInvitationsCountRequest request) {request = beforeClientExecution(request);return executeGetInvitationsCount(request);},public GetInvitationsCountResult getInvitationsCountGetInvitationsCountRequest request request  beforeClientExecutionrequestreturn executeGetInvitationsCountrequest
"public static boolean equals(float[] array1, float[] array2) {if (array1 == array2) {return true;}if (array1 == null || array2 == null || array1.length != array2.length) {return false;}for (int i = 0; i < array1.length; i++) {if (Float.floatToIntBits(array1[i]) != Float.floatToIntBits(array2[i])) {return false;}}return true;}",public static boolean equalsfloat array1 float array2 if array1  array2 return trueif array1  null  array2  null  array1length  array2length return falsefor int i  0 i  array1length i if FloatfloatToIntBitsarray1i  FloatfloatToIntBitsarray2i return falsereturn true
public final V setValue(V value) {if (value == null) {throw new NullPointerException();}V oldValue = this.value;this.value = value;return oldValue;},public final V setValueV value if value  null throw new NullPointerExceptionV oldValue  thisvaluethisvalue  valuereturn oldValue
@Override public boolean isEmpty() {return Impl.this.isEmpty();},Override public boolean isEmpty return ImplthisisEmpty
"public void setCategoryLabelsCellRange(CellRangeAddressBase range) {Integer count = setVerticalCellRange(dataCategoryLabels, range);if (count == null){return;}series.setNumCategories((short)(int)count);}",public void setCategoryLabelsCellRangeCellRangeAddressBase range Integer count  setVerticalCellRangedataCategoryLabels rangeif count  nullreturnseriessetNumCategoriesshortintcount
"final public SrndQuery OrQuery() throws ParseException {SrndQuery q;ArrayList<SrndQuery> queries = null;Token oprt = null;q = AndQuery();label_2:while (true) {switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {case OR:;break;default:jj_la1[0] = jj_gen;break label_2;}oprt = jj_consume_token(OR);if (queries == null) {queries = new ArrayList<SrndQuery>();queries.add(q);}q = AndQuery();queries.add(q);}{if (true) return (queries == null) ? q : getOrQuery(queries, true , oprt);}throw new Error(""Missing return statement in function"");}",final public SrndQuery OrQuery throws ParseException SrndQuery qArrayListSrndQuery queries  nullToken oprt  nullq  AndQuerylabel2while true switch jjntk1jjntkjjntk case ORbreakdefaultjjla10  jjgenbreak label2oprt  jjconsumetokenORif queries  null queries  new ArrayListSrndQueryqueriesaddqq  AndQueryqueriesaddqif true return queries  null  q  getOrQueryqueries true  oprtthrow new ErrorMissing return statement in function
public DeleteScheduledActionResult deleteScheduledAction(DeleteScheduledActionRequest request) {request = beforeClientExecution(request);return executeDeleteScheduledAction(request);},public DeleteScheduledActionResult deleteScheduledActionDeleteScheduledActionRequest request request  beforeClientExecutionrequestreturn executeDeleteScheduledActionrequest
"public CharBuffer put(String str, int start, int end) {if (start < 0 || end < start || end > str.length()) {throw new IndexOutOfBoundsException(""str.length()="" + str.length() +"", start="" + start + "", end="" + end);}if (end - start > remaining()) {throw new BufferOverflowException();}for (int i = start; i < end; i++) {put(str.charAt(i));}return this;}",public CharBuffer putString str int start int end if start  0  end  start  end  strlength throw new IndexOutOfBoundsExceptionstrlength  strlength  start  start   end  endif end  start  remaining throw new BufferOverflowExceptionfor int i  start i  end i putstrcharAtireturn this
public void serialize(LittleEndianOutput out) {out.writeShort(rt);out.writeShort(grbitFrt);out.writeShort(iObjectKind);out.write(unused);},public void serializeLittleEndianOutput out outwriteShortrtoutwriteShortgrbitFrtoutwriteShortiObjectKindoutwriteunused
"public ChangeInfo(String id, ChangeStatus status, java.util.Date submittedAt) {setId(id);setStatus(status.toString());setSubmittedAt(submittedAt);}",public ChangeInfoString id ChangeStatus status javautilDate submittedAt setIdidsetStatusstatustoStringsetSubmittedAtsubmittedAt
"public SwedishLightStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public SwedishLightStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public ErrorMatcher(int errorCode, CmpOp operator) {super(operator);_value = errorCode;}",public ErrorMatcherint errorCode CmpOp operator superoperatorvalue  errorCode
public static Console getConsole() {return console;},public static Console getConsole return console
public UpdateTrialComponentResult updateTrialComponent(UpdateTrialComponentRequest request) {request = beforeClientExecution(request);return executeUpdateTrialComponent(request);},public UpdateTrialComponentResult updateTrialComponentUpdateTrialComponentRequest request request  beforeClientExecutionrequestreturn executeUpdateTrialComponentrequest
public AddCommand setWorkingTreeIterator(WorkingTreeIterator f) {workingTreeIterator = f;return this;},public AddCommand setWorkingTreeIteratorWorkingTreeIterator f workingTreeIterator  freturn this
"public RefWriter(Map<String, Ref> refs) {if (refs instanceof RefMap)this.refs = refs.values();elsethis.refs = RefComparator.sort(refs.values());}",public RefWriterMapString Ref refs if refs instanceof RefMapthisrefs  refsvalueselsethisrefs  RefComparatorsortrefsvalues
"public LazyAreaEval(int firstRowIndex, int firstColumnIndex, int lastRowIndex,int lastColumnIndex, SheetRangeEvaluator evaluator) {super(evaluator, firstRowIndex, firstColumnIndex, lastRowIndex, lastColumnIndex);_evaluator = evaluator;}",public LazyAreaEvalint firstRowIndex int firstColumnIndex int lastRowIndexint lastColumnIndex SheetRangeEvaluator evaluator superevaluator firstRowIndex firstColumnIndex lastRowIndex lastColumnIndexevaluator  evaluator
public BatchSuspendUserResult batchSuspendUser(BatchSuspendUserRequest request) {request = beforeClientExecution(request);return executeBatchSuspendUser(request);},public BatchSuspendUserResult batchSuspendUserBatchSuspendUserRequest request request  beforeClientExecutionrequestreturn executeBatchSuspendUserrequest
public CreateVpnGatewayRequest(GatewayType type) {setType(type.toString());},public CreateVpnGatewayRequestGatewayType type setTypetypetoString
public BundleInstanceResult bundleInstance(BundleInstanceRequest request) {request = beforeClientExecution(request);return executeBundleInstance(request);},public BundleInstanceResult bundleInstanceBundleInstanceRequest request request  beforeClientExecutionrequestreturn executeBundleInstancerequest
public ListDeploymentsResult listDeployments(ListDeploymentsRequest request) {request = beforeClientExecution(request);return executeListDeployments(request);},public ListDeploymentsResult listDeploymentsListDeploymentsRequest request request  beforeClientExecutionrequestreturn executeListDeploymentsrequest
"public String toString() {return ""(FOLLOW("" + path.toString() + "")"" + "" AND "" + ANY_DIFF.toString() + "")"";}",public String toString return FOLLOW  pathtoString     AND   ANYDIFFtoString  
public DetectFacesResult detectFaces(DetectFacesRequest request) {request = beforeClientExecution(request);return executeDetectFaces(request);},public DetectFacesResult detectFacesDetectFacesRequest request request  beforeClientExecutionrequestreturn executeDetectFacesrequest
public GetRegionsResult getRegions(GetRegionsRequest request) {request = beforeClientExecution(request);return executeGetRegions(request);},public GetRegionsResult getRegionsGetRegionsRequest request request  beforeClientExecutionrequestreturn executeGetRegionsrequest
"public WikipediaTokenizerFactory(Map<String,String> args) {super(args);tokenOutput = getInt(args, TOKEN_OUTPUT, WikipediaTokenizer.TOKENS_ONLY);untokenizedTypes = getSet(args, UNTOKENIZED_TYPES);if (untokenizedTypes == null) {untokenizedTypes = Collections.emptySet();}if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public WikipediaTokenizerFactoryMapStringString args superargstokenOutput  getIntargs TOKENOUTPUT WikipediaTokenizerTOKENSONLYuntokenizedTypes  getSetargs UNTOKENIZEDTYPESif untokenizedTypes  null untokenizedTypes  CollectionsemptySetif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public int getSheetIndex(String name) {int retval = -1;final int size = boundsheets.size();for (int k = 0; k < size; k++) {String sheet = getSheetName(k);if (sheet.equalsIgnoreCase(name)) {retval = k;break;}}return retval;},public int getSheetIndexString name int retval  1final int size  boundsheetssizefor int k  0 k  size k String sheet  getSheetNamekif sheetequalsIgnoreCasename retval  kbreakreturn retval
"public PagedBytesDataInput getDataInput() {if (!frozen) {throw new IllegalStateException(""must call freeze() before getDataInput"");}return new PagedBytesDataInput();}",public PagedBytesDataInput getDataInput if frozen throw new IllegalStateExceptionmust call freeze before getDataInputreturn new PagedBytesDataInput
public AddTagsToResourceResult addTagsToResource(AddTagsToResourceRequest request) {request = beforeClientExecution(request);return executeAddTagsToResource(request);},public AddTagsToResourceResult addTagsToResourceAddTagsToResourceRequest request request  beforeClientExecutionrequestreturn executeAddTagsToResourcerequest
"public static int oversize(int minTargetSize, int bytesPerElement) {if (minTargetSize < 0) {throw new IllegalArgumentException(""invalid array size "" + minTargetSize);}if (minTargetSize == 0) {return 0;}if (minTargetSize > MAX_ARRAY_LENGTH) {throw new IllegalArgumentException(""requested array size "" + minTargetSize + "" exceeds maximum array in java ("" + MAX_ARRAY_LENGTH + "")"");}int extra = minTargetSize >> 3;if (extra < 3) {extra = 3;}int newSize = minTargetSize + extra;if (newSize+7 < 0 || newSize+7 > MAX_ARRAY_LENGTH) {return MAX_ARRAY_LENGTH;}if (Constants.JRE_IS_64BIT) {switch(bytesPerElement) {case 4:return (newSize + 1) & 0x7ffffffe;case 2:return (newSize + 3) & 0x7ffffffc;case 1:return (newSize + 7) & 0x7ffffff8;case 8:default:return newSize;}} else {switch(bytesPerElement) {case 2:return (newSize + 1) & 0x7ffffffe;case 1:return (newSize + 3) & 0x7ffffffc;case 4:case 8:default:return newSize;}}}",public static int oversizeint minTargetSize int bytesPerElement if minTargetSize  0 throw new IllegalArgumentExceptioninvalid array size   minTargetSizeif minTargetSize  0 return 0if minTargetSize  MAXARRAYLENGTH throw new IllegalArgumentExceptionrequested array size   minTargetSize   exceeds maximum array in java   MAXARRAYLENGTH  int extra  minTargetSize  3if extra  3 extra  3int newSize  minTargetSize  extraif newSize7  0  newSize7  MAXARRAYLENGTH return MAXARRAYLENGTHif ConstantsJREIS64BIT switchbytesPerElement case 4return newSize  1  0x7ffffffecase 2return newSize  3  0x7ffffffccase 1return newSize  7  0x7ffffff8case 8defaultreturn newSize else switchbytesPerElement case 2return newSize  1  0x7ffffffecase 1return newSize  3  0x7ffffffccase 4case 8defaultreturn newSize
public IntervalSet complement(IntSet vocabulary) {if ( vocabulary==null || vocabulary.isNil() ) {return null; }IntervalSet vocabularyIS;if (vocabulary instanceof IntervalSet) {vocabularyIS = (IntervalSet)vocabulary;}else {vocabularyIS = new IntervalSet();vocabularyIS.addAll(vocabulary);}return vocabularyIS.subtract(this);},public IntervalSet complementIntSet vocabulary if  vocabularynull  vocabularyisNil  return null IntervalSet vocabularyISif vocabulary instanceof IntervalSet vocabularyIS  IntervalSetvocabularyelse vocabularyIS  new IntervalSetvocabularyISaddAllvocabularyreturn vocabularyISsubtractthis
"public BatchRefUpdate setRefLogMessage(String msg, boolean appendStatus) {if (msg == null && !appendStatus)disableRefLog();else if (msg == null && appendStatus) {refLogMessage = """"; refLogIncludeResult = true;} else {refLogMessage = msg;refLogIncludeResult = appendStatus;}return this;}",public BatchRefUpdate setRefLogMessageString msg boolean appendStatus if msg  null  appendStatusdisableRefLogelse if msg  null  appendStatus refLogMessage   refLogIncludeResult  true else refLogMessage  msgrefLogIncludeResult  appendStatusreturn this
public GetApnsVoipSandboxChannelResult getApnsVoipSandboxChannel(GetApnsVoipSandboxChannelRequest request) {request = beforeClientExecution(request);return executeGetApnsVoipSandboxChannel(request);},public GetApnsVoipSandboxChannelResult getApnsVoipSandboxChannelGetApnsVoipSandboxChannelRequest request request  beforeClientExecutionrequestreturn executeGetApnsVoipSandboxChannelrequest
public TokenStream create(TokenStream input) {return new ArabicNormalizationFilter(input);},public TokenStream createTokenStream input return new ArabicNormalizationFilterinput
@Override public boolean contains(Object o) {return Impl.this.containsValue(o);},Override public boolean containsObject o return ImplthiscontainsValueo
@Override public boolean isEmpty() {synchronized (mutex) {return c.isEmpty();}},Override public boolean isEmpty synchronized mutex return cisEmpty
public long get(int index) {return 0;},public long getint index return 0
public DescribeSecurityGroupsResult describeSecurityGroups() {return describeSecurityGroups(new DescribeSecurityGroupsRequest());},public DescribeSecurityGroupsResult describeSecurityGroups return describeSecurityGroupsnew DescribeSecurityGroupsRequest
"public ListPartsRequest(String accountId, String vaultName, String uploadId) {setAccountId(accountId);setVaultName(vaultName);setUploadId(uploadId);}",public ListPartsRequestString accountId String vaultName String uploadId setAccountIdaccountIdsetVaultNamevaultNamesetUploadIduploadId
public GetCloudFrontOriginAccessIdentityRequest(String id) {setId(id);},public GetCloudFrontOriginAccessIdentityRequestString id setIdid
public DescribeAlarmHistoryResult describeAlarmHistory(DescribeAlarmHistoryRequest request) {request = beforeClientExecution(request);return executeDescribeAlarmHistory(request);},public DescribeAlarmHistoryResult describeAlarmHistoryDescribeAlarmHistoryRequest request request  beforeClientExecutionrequestreturn executeDescribeAlarmHistoryrequest
"public DescribeJobRequest(String accountId, String vaultName, String jobId) {setAccountId(accountId);setVaultName(vaultName);setJobId(jobId);}",public DescribeJobRequestString accountId String vaultName String jobId setAccountIdaccountIdsetVaultNamevaultNamesetJobIdjobId
public DeleteTagCommand setTags(String... tags) {checkCallable();this.tags.clear();this.tags.addAll(Arrays.asList(tags));return this;},public DeleteTagCommand setTagsString tags checkCallablethistagsclearthistagsaddAllArraysasListtagsreturn this
public ListVoiceConnectorGroupsResult listVoiceConnectorGroups(ListVoiceConnectorGroupsRequest request) {request = beforeClientExecution(request);return executeListVoiceConnectorGroups(request);},public ListVoiceConnectorGroupsResult listVoiceConnectorGroupsListVoiceConnectorGroupsRequest request request  beforeClientExecutionrequestreturn executeListVoiceConnectorGroupsrequest
public Intercept() {func = new LinearRegressionFunction(FUNCTION.INTERCEPT);},public Intercept func  new LinearRegressionFunctionFUNCTIONINTERCEPT
public ProvisionByoipCidrResult provisionByoipCidr(ProvisionByoipCidrRequest request) {request = beforeClientExecution(request);return executeProvisionByoipCidr(request);},public ProvisionByoipCidrResult provisionByoipCidrProvisionByoipCidrRequest request request  beforeClientExecutionrequestreturn executeProvisionByoipCidrrequest
public BatchGetApplicationRevisionsResult batchGetApplicationRevisions(BatchGetApplicationRevisionsRequest request) {request = beforeClientExecution(request);return executeBatchGetApplicationRevisions(request);},public BatchGetApplicationRevisionsResult batchGetApplicationRevisionsBatchGetApplicationRevisionsRequest request request  beforeClientExecutionrequestreturn executeBatchGetApplicationRevisionsrequest
public void expandRow(int rowNumber) {if (rowNumber == -1)return;if (!isRowGroupCollapsed(rowNumber)) {return;}int startIdx = findStartOfRowOutlineGroup(rowNumber);RowRecord row = getRow(startIdx);int endIdx = findEndOfRowOutlineGroup(rowNumber);if (!isRowGroupHiddenByParent(rowNumber)) {for (int i = startIdx; i <= endIdx; i++) {RowRecord otherRow = getRow(i);if (row.getOutlineLevel() == otherRow.getOutlineLevel() || !isRowGroupCollapsed(i)) {otherRow.setZeroHeight(false);}}}getRow(endIdx + 1).setColapsed(false);},public void expandRowint rowNumber if rowNumber  1returnif isRowGroupCollapsedrowNumber returnint startIdx  findStartOfRowOutlineGrouprowNumberRowRecord row  getRowstartIdxint endIdx  findEndOfRowOutlineGrouprowNumberif isRowGroupHiddenByParentrowNumber for int i  startIdx i  endIdx i RowRecord otherRow  getRowiif rowgetOutlineLevel  otherRowgetOutlineLevel  isRowGroupCollapsedi otherRowsetZeroHeightfalsegetRowendIdx  1setColapsedfalse
public GetSendQuotaResult getSendQuota(GetSendQuotaRequest request) {request = beforeClientExecution(request);return executeGetSendQuota(request);},public GetSendQuotaResult getSendQuotaGetSendQuotaRequest request request  beforeClientExecutionrequestreturn executeGetSendQuotarequest
public FeatFormulaErr2(RecordInputStream in) {errorCheck = in.readInt();},public FeatFormulaErr2RecordInputStream in errorCheck  inreadInt
public DefineAnalysisSchemeResult defineAnalysisScheme(DefineAnalysisSchemeRequest request) {request = beforeClientExecution(request);return executeDefineAnalysisScheme(request);},public DefineAnalysisSchemeResult defineAnalysisSchemeDefineAnalysisSchemeRequest request request  beforeClientExecutionrequestreturn executeDefineAnalysisSchemerequest
public boolean equals( Object o ) {return o instanceof IrishStemmer;},public boolean equals Object o  return o instanceof IrishStemmer
public UTF8Sequence() {bytes = new UTF8Byte[4];for(int i=0;i<4;i++) {bytes[i] = new UTF8Byte();}},public UTF8Sequence bytes  new UTF8Byte4forint i0i4i bytesi  new UTF8Byte
"public ListPhotosRequest() {super(""CloudPhoto"", ""2017-07-11"", ""ListPhotos"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public ListPhotosRequest superCloudPhoto 20170711 ListPhotos cloudphotosetProtocolProtocolTypeHTTPS
public RegisterStreamConsumerResult registerStreamConsumer(RegisterStreamConsumerRequest request) {request = beforeClientExecution(request);return executeRegisterStreamConsumer(request);},public RegisterStreamConsumerResult registerStreamConsumerRegisterStreamConsumerRequest request request  beforeClientExecutionrequestreturn executeRegisterStreamConsumerrequest
public Formula copy() {return this;},public Formula copy return this
public boolean equals(Object obj) {if (this == obj)return true;if (obj == null)return false;if (getClass() != obj.getClass())return false;MergeInfo other = (MergeInfo) obj;if (estimatedMergeBytes != other.estimatedMergeBytes)return false;if (isExternal != other.isExternal)return false;if (mergeMaxNumSegments != other.mergeMaxNumSegments)return false;if (totalMaxDoc != other.totalMaxDoc)return false;return true;},public boolean equalsObject obj if this  objreturn trueif obj  nullreturn falseif getClass  objgetClassreturn falseMergeInfo other  MergeInfo objif estimatedMergeBytes  otherestimatedMergeBytesreturn falseif isExternal  otherisExternalreturn falseif mergeMaxNumSegments  othermergeMaxNumSegmentsreturn falseif totalMaxDoc  othertotalMaxDocreturn falsereturn true
"public float score(float freq, long norm) {float sum = 0.0f;for (SimScorer subScorer : subScorers) {sum += subScorer.score(freq, norm);}return sum;}",public float scorefloat freq long norm float sum  00ffor SimScorer subScorer  subScorers sum  subScorerscorefreq normreturn sum
"public AddTagsRequest(String resourceId, java.util.List<Tag> tags) {setResourceId(resourceId);setTags(tags);}",public AddTagsRequestString resourceId javautilListTag tags setResourceIdresourceIdsetTagstags
public DescribeEC2InstanceLimitsResult describeEC2InstanceLimits(DescribeEC2InstanceLimitsRequest request) {request = beforeClientExecution(request);return executeDescribeEC2InstanceLimits(request);},public DescribeEC2InstanceLimitsResult describeEC2InstanceLimitsDescribeEC2InstanceLimitsRequest request request  beforeClientExecutionrequestreturn executeDescribeEC2InstanceLimitsrequest
public BlameGenerator setFollowFileRenames(boolean follow) {if (follow)renameDetector = new RenameDetector(getRepository());elserenameDetector = null;return this;},public BlameGenerator setFollowFileRenamesboolean follow if followrenameDetector  new RenameDetectorgetRepositoryelserenameDetector  nullreturn this
public GetStagesResult getStages(GetStagesRequest request) {request = beforeClientExecution(request);return executeGetStages(request);},public GetStagesResult getStagesGetStagesRequest request request  beforeClientExecutionrequestreturn executeGetStagesrequest
public void setParsedExpression(Ptg[] ptgs) {field_5_name_definition = Formula.create(ptgs);},public void setParsedExpressionPtg ptgs field5namedefinition  Formulacreateptgs
public int getRightId(int wordId) {return rightIds[wordId];},public int getRightIdint wordId return rightIdswordId
public GetChangeRequest(String id) {setId(id);},public GetChangeRequestString id setIdid
"public RegisterPhotoRequest() {super(""CloudPhoto"", ""2017-07-11"", ""RegisterPhoto"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public RegisterPhotoRequest superCloudPhoto 20170711 RegisterPhoto cloudphotosetProtocolProtocolTypeHTTPS
public void more() {_type = MORE;},public void more type  MORE
public final Buffer position(int newPosition) {positionImpl(newPosition);return this;},public final Buffer positionint newPosition positionImplnewPositionreturn this
public ScenarioProtectRecord(RecordInputStream in) {field_1_protect = in.readShort();},public ScenarioProtectRecordRecordInputStream in field1protect  inreadShort
"public static TopFieldDocs merge(Sort sort, int topN, TopFieldDocs[] shardHits) {return merge(sort, 0, topN, shardHits);}",public static TopFieldDocs mergeSort sort int topN TopFieldDocs shardHits return mergesort 0 topN shardHits
public LexerModeAction(int mode) {this.mode = mode;},public LexerModeActionint mode thismode  mode
public boolean canExecute(File f) {return false;},public boolean canExecuteFile f return false
"public int preceding(int pos) {if (pos < text.getBeginIndex() || pos > text.getEndIndex()) {throw new IllegalArgumentException(""offset out of bounds"");} else if (0 == sentenceStarts.length) {text.setIndex(text.getBeginIndex());currentSentence = 0;return DONE;} else if (pos < sentenceStarts[0]) {text.setIndex(text.getBeginIndex());currentSentence = 0;return DONE;} else {currentSentence = sentenceStarts.length / 2; moveToSentenceAt(pos, 0, sentenceStarts.length - 1);if (0 == currentSentence) {text.setIndex(text.getBeginIndex());return DONE;} else {text.setIndex(sentenceStarts[--currentSentence]);return current();}}}",public int precedingint pos if pos  textgetBeginIndex  pos  textgetEndIndex throw new IllegalArgumentExceptionoffset out of bounds else if 0  sentenceStartslength textsetIndextextgetBeginIndexcurrentSentence  0return DONE else if pos  sentenceStarts0 textsetIndextextgetBeginIndexcurrentSentence  0return DONE else currentSentence  sentenceStartslength  2 moveToSentenceAtpos 0 sentenceStartslength  1if 0  currentSentence textsetIndextextgetBeginIndexreturn DONE else textsetIndexsentenceStartscurrentSentencereturn current
"public int serialize(int offset, byte[] data) {throw new RecordFormatException(""Cannot serialize a dummy record"");}",public int serializeint offset byte data throw new RecordFormatExceptionCannot serialize a dummy record
public DetachObjectResult detachObject(DetachObjectRequest request) {request = beforeClientExecution(request);return executeDetachObject(request);},public DetachObjectResult detachObjectDetachObjectRequest request request  beforeClientExecutionrequestreturn executeDetachObjectrequest
public WorkflowTypeDetail describeWorkflowType(DescribeWorkflowTypeRequest request) {request = beforeClientExecution(request);return executeDescribeWorkflowType(request);},public WorkflowTypeDetail describeWorkflowTypeDescribeWorkflowTypeRequest request request  beforeClientExecutionrequestreturn executeDescribeWorkflowTyperequest
public static void clearModels() {sentenceModels.clear();tokenizerModels.clear();posTaggerModels.clear();chunkerModels.clear();nerModels.clear();lemmaDictionaries.clear();},public static void clearModels sentenceModelscleartokenizerModelsclearposTaggerModelsclearchunkerModelsclearnerModelsclearlemmaDictionariesclear
public static String refLockFor(String name) {return name + LOCK_SUFFIX;},public static String refLockForString name return name  LOCKSUFFIX
public DeleteComponentResult deleteComponent(DeleteComponentRequest request) {request = beforeClientExecution(request);return executeDeleteComponent(request);},public DeleteComponentResult deleteComponentDeleteComponentRequest request request  beforeClientExecutionrequestreturn executeDeleteComponentrequest
"public String toString() {StringBuilder sb = new StringBuilder();sb.append(""[STYLE]\n"");sb.append(""    .xf_index_raw ="").append(HexDump.shortToHex(field_1_xf_index)).append(""\n"");sb.append(""        .type     ="").append(isBuiltin() ? ""built-in"" : ""user-defined"").append(""\n"");sb.append(""        .xf_index ="").append(HexDump.shortToHex(getXFIndex())).append(""\n"");if (isBuiltin()){sb.append(""    .builtin_style="").append(HexDump.byteToHex(field_2_builtin_style)).append(""\n"");sb.append(""    .outline_level="").append(HexDump.byteToHex(field_3_outline_style_level)).append(""\n"");} else {sb.append(""    .name        ="").append(getName()).append(""\n"");}sb.append(""[/STYLE]\n"");return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappendSTYLEnsbappend    xfindexraw appendHexDumpshortToHexfield1xfindexappendnsbappend        type     appendisBuiltin  builtin  userdefinedappendnsbappend        xfindex appendHexDumpshortToHexgetXFIndexappendnif isBuiltinsbappend    builtinstyleappendHexDumpbyteToHexfield2builtinstyleappendnsbappend    outlinelevelappendHexDumpbyteToHexfield3outlinestylelevelappendn else sbappend    name        appendgetNameappendnsbappendSTYLEnreturn sbtoString
public DescribeAuditStreamConfigurationResult describeAuditStreamConfiguration(DescribeAuditStreamConfigurationRequest request) {request = beforeClientExecution(request);return executeDescribeAuditStreamConfiguration(request);},public DescribeAuditStreamConfigurationResult describeAuditStreamConfigurationDescribeAuditStreamConfigurationRequest request request  beforeClientExecutionrequestreturn executeDescribeAuditStreamConfigurationrequest
"public String toString() {if (getChildren() == null || getChildren().size() == 0)return ""<any field='"" + this.field + ""'  matchelements=""+ this.minimumMatchingmElements + ""/>"";StringBuilder sb = new StringBuilder();sb.append(""<any field='"").append(this.field).append(""'  matchelements="").append(this.minimumMatchingmElements).append('>');for (QueryNode clause : getChildren()) {sb.append(""\n"");sb.append(clause.toString());}sb.append(""\n</any>"");return sb.toString();}",public String toString if getChildren  null  getChildrensize  0return any field  thisfield    matchelements thisminimumMatchingmElements  StringBuilder sb  new StringBuildersbappendany fieldappendthisfieldappend  matchelementsappendthisminimumMatchingmElementsappendfor QueryNode clause  getChildren sbappendnsbappendclausetoStringsbappendnanyreturn sbtoString
public AssociateSkillWithSkillGroupResult associateSkillWithSkillGroup(AssociateSkillWithSkillGroupRequest request) {request = beforeClientExecution(request);return executeAssociateSkillWithSkillGroup(request);},public AssociateSkillWithSkillGroupResult associateSkillWithSkillGroupAssociateSkillWithSkillGroupRequest request request  beforeClientExecutionrequestreturn executeAssociateSkillWithSkillGrouprequest
public String getFetchedFrom() {return this.fetchedFrom;},public String getFetchedFrom return thisfetchedFrom
public static Counter newCounter(boolean threadSafe) {return threadSafe ? new AtomicCounter() : new SerialCounter();},public static Counter newCounterboolean threadSafe return threadSafe  new AtomicCounter  new SerialCounter
"public FloatBuffer slice() {return new ReadWriteFloatArrayBuffer(remaining(), backingArray, offset + position);}",public FloatBuffer slice return new ReadWriteFloatArrayBufferremaining backingArray offset  position
public ListProcessingJobsResult listProcessingJobs(ListProcessingJobsRequest request) {request = beforeClientExecution(request);return executeListProcessingJobs(request);},public ListProcessingJobsResult listProcessingJobsListProcessingJobsRequest request request  beforeClientExecutionrequestreturn executeListProcessingJobsrequest
public void recover(RecognitionException re) {_input.consume();},public void recoverRecognitionException re inputconsume
public CreateTemplateAliasResult createTemplateAlias(CreateTemplateAliasRequest request) {request = beforeClientExecution(request);return executeCreateTemplateAlias(request);},public CreateTemplateAliasResult createTemplateAliasCreateTemplateAliasRequest request request  beforeClientExecutionrequestreturn executeCreateTemplateAliasrequest
"public final Buffer reset() {if (mark == UNSET_MARK) {throw new InvalidMarkException(""Mark not set"");}position = mark;return this;}",public final Buffer reset if mark  UNSETMARK throw new InvalidMarkExceptionMark not setposition  markreturn this
"@Override public synchronized boolean equals(Object object) {return (object instanceof Map) &&entrySet().equals(((Map<?, ?>)object).entrySet());}",Override public synchronized boolean equalsObject object return object instanceof Map entrySetequalsMap objectentrySet
public void tagResource(TagResourceRequest request) {request = beforeClientExecution(request);executeTagResource(request);},public void tagResourceTagResourceRequest request request  beforeClientExecutionrequestexecuteTagResourcerequest
"public BytesRef common(BytesRef output1, BytesRef output2) {assert output1 != null;assert output2 != null;int pos1 = output1.offset;int pos2 = output2.offset;int stopAt1 = pos1 + Math.min(output1.length, output2.length);while(pos1 < stopAt1) {if (output1.bytes[pos1] != output2.bytes[pos2]) {break;}pos1++;pos2++;}if (pos1 == output1.offset) {return NO_OUTPUT;} else if (pos1 == output1.offset + output1.length) {return output1;} else if (pos2 == output2.offset + output2.length) {return output2;} else {return new BytesRef(output1.bytes, output1.offset, pos1-output1.offset);}}",public BytesRef commonBytesRef output1 BytesRef output2 assert output1  nullassert output2  nullint pos1  output1offsetint pos2  output2offsetint stopAt1  pos1  Mathminoutput1length output2lengthwhilepos1  stopAt1 if output1bytespos1  output2bytespos2 breakpos1pos2if pos1  output1offset return NOOUTPUT else if pos1  output1offset  output1length return output1 else if pos2  output2offset  output2length return output2 else return new BytesRefoutput1bytes output1offset pos1output1offset
public E getFirst() {return getFirstImpl();},public E getFirst return getFirstImpl
"public ObjectId computeId(ObjectInserter ins) {if (buf != null)return ins.idFor(OBJ_TREE, buf, 0, ptr);final long len = overflowBuffer.length();try {return ins.idFor(OBJ_TREE, len, overflowBuffer.openInputStream());} catch (IOException e) {throw new RuntimeException(e);}}",public ObjectId computeIdObjectInserter ins if buf  nullreturn insidForOBJTREE buf 0 ptrfinal long len  overflowBufferlengthtry return insidForOBJTREE len overflowBufferopenInputStream catch IOException e throw new RuntimeExceptione
public TransferDomainResult transferDomain(TransferDomainRequest request) {request = beforeClientExecution(request);return executeTransferDomain(request);},public TransferDomainResult transferDomainTransferDomainRequest request request  beforeClientExecutionrequestreturn executeTransferDomainrequest
"public String toString() {synchronized (lock) {return new String(buf, 0, count);}}",public String toString synchronized lock return new Stringbuf 0 count
public DescribeReservedNodeOfferingsResult describeReservedNodeOfferings(DescribeReservedNodeOfferingsRequest request) {request = beforeClientExecution(request);return executeDescribeReservedNodeOfferings(request);},public DescribeReservedNodeOfferingsResult describeReservedNodeOfferingsDescribeReservedNodeOfferingsRequest request request  beforeClientExecutionrequestreturn executeDescribeReservedNodeOfferingsrequest
"public String toString(String field) {StringBuilder buffer = new StringBuilder();if (!term.field().equals(field)) {buffer.append(term.field());buffer.append("":"");}buffer.append(term.text());return buffer.toString();}",public String toStringString field StringBuilder buffer  new StringBuilderif termfieldequalsfield bufferappendtermfieldbufferappendbufferappendtermtextreturn buffertoString
public IntBuffer duplicate() {ByteBuffer bb = byteBuffer.duplicate().order(byteBuffer.order());IntToByteBufferAdapter buf = new IntToByteBufferAdapter(bb);buf.limit = limit;buf.position = position;buf.mark = mark;return buf;},public IntBuffer duplicate ByteBuffer bb  byteBufferduplicateorderbyteBufferorderIntToByteBufferAdapter buf  new IntToByteBufferAdapterbbbuflimit  limitbufposition  positionbufmark  markreturn buf
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[SERTOCRT]\n"");buffer.append(""    .chartGroupIndex      = "").append(""0x"").append(HexDump.toHex(  getChartGroupIndex ())).append("" ("").append( getChartGroupIndex() ).append("" )"");buffer.append(System.getProperty(""line.separator""));buffer.append(""[/SERTOCRT]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendSERTOCRTnbufferappend    chartGroupIndex       append0xappendHexDumptoHex  getChartGroupIndex append append getChartGroupIndex append bufferappendSystemgetPropertylineseparatorbufferappendSERTOCRTnreturn buffertoString
"public boolean canHandle(URIish uri) {return canHandle(uri, null, null);}",public boolean canHandleURIish uri return canHandleuri null null
public GetImportJobResult getImportJob(GetImportJobRequest request) {request = beforeClientExecution(request);return executeGetImportJob(request);},public GetImportJobResult getImportJobGetImportJobRequest request request  beforeClientExecutionrequestreturn executeGetImportJobrequest
public LookupDeveloperIdentityResult lookupDeveloperIdentity(LookupDeveloperIdentityRequest request) {request = beforeClientExecution(request);return executeLookupDeveloperIdentity(request);},public LookupDeveloperIdentityResult lookupDeveloperIdentityLookupDeveloperIdentityRequest request request  beforeClientExecutionrequestreturn executeLookupDeveloperIdentityrequest
public FloatBuffer put(float c) {if (position == limit) {throw new BufferOverflowException();}backingArray[offset + position++] = c;return this;},public FloatBuffer putfloat c if position  limit throw new BufferOverflowExceptionbackingArrayoffset  position  creturn this
public RefModeRecord(RecordInputStream in) {field_1_mode = in.readShort();},public RefModeRecordRecordInputStream in field1mode  inreadShort
public BulkOperationPackedSingleBlock(int bitsPerValue) {this.bitsPerValue = bitsPerValue;this.valueCount = 64 / bitsPerValue;this.mask = (1L << bitsPerValue) - 1;},public BulkOperationPackedSingleBlockint bitsPerValue thisbitsPerValue  bitsPerValuethisvalueCount  64  bitsPerValuethismask  1L  bitsPerValue  1
"public static String dateToString(Date date, Resolution resolution) {return timeToString(date.getTime(), resolution);}",public static String dateToStringDate date Resolution resolution return timeToStringdategetTime resolution
public DescribeUserHierarchyStructureResult describeUserHierarchyStructure(DescribeUserHierarchyStructureRequest request) {request = beforeClientExecution(request);return executeDescribeUserHierarchyStructure(request);},public DescribeUserHierarchyStructureResult describeUserHierarchyStructureDescribeUserHierarchyStructureRequest request request  beforeClientExecutionrequestreturn executeDescribeUserHierarchyStructurerequest
public GetDomainsResult getDomains(GetDomainsRequest request) {request = beforeClientExecution(request);return executeGetDomains(request);},public GetDomainsResult getDomainsGetDomainsRequest request request  beforeClientExecutionrequestreturn executeGetDomainsrequest
public int getStreamFileThreshold() {return streamFileThreshold;},public int getStreamFileThreshold return streamFileThreshold
public BatchGetDeploymentInstancesResult batchGetDeploymentInstances(BatchGetDeploymentInstancesRequest request) {request = beforeClientExecution(request);return executeBatchGetDeploymentInstances(request);},public BatchGetDeploymentInstancesResult batchGetDeploymentInstancesBatchGetDeploymentInstancesRequest request request  beforeClientExecutionrequestreturn executeBatchGetDeploymentInstancesrequest
public GetIdentityVerificationAttributesResult getIdentityVerificationAttributes(GetIdentityVerificationAttributesRequest request) {request = beforeClientExecution(request);return executeGetIdentityVerificationAttributes(request);},public GetIdentityVerificationAttributesResult getIdentityVerificationAttributesGetIdentityVerificationAttributesRequest request request  beforeClientExecutionrequestreturn executeGetIdentityVerificationAttributesrequest
public LittleEndianOutputStream(OutputStream out) {super(out);},public LittleEndianOutputStreamOutputStream out superout
public GetDeploymentGroupResult getDeploymentGroup(GetDeploymentGroupRequest request) {request = beforeClientExecution(request);return executeGetDeploymentGroup(request);},public GetDeploymentGroupResult getDeploymentGroupGetDeploymentGroupRequest request request  beforeClientExecutionrequestreturn executeGetDeploymentGrouprequest
"public boolean containsKey(char[] text, int off, int len) {if(text == null)throw new NullPointerException();return false;}",public boolean containsKeychar text int off int len iftext  nullthrow new NullPointerExceptionreturn false
"public void inform(ResourceLoader loader) throws IOException {clazz = registry.get(name.toUpperCase(Locale.ROOT));if( clazz == null ) {clazz = resolveEncoder(name, loader);}if (maxCodeLength != null) {try {setMaxCodeLenMethod = clazz.getMethod(""setMaxCodeLen"", int.class);} catch (Exception e) {throw new IllegalArgumentException(""Encoder "" + name + "" / "" + clazz + "" does not support "" + MAX_CODE_LENGTH, e);}}getEncoder();}",public void informResourceLoader loader throws IOException clazz  registrygetnametoUpperCaseLocaleROOTif clazz  null  clazz  resolveEncodername loaderif maxCodeLength  null try setMaxCodeLenMethod  clazzgetMethodsetMaxCodeLen intclass catch Exception e throw new IllegalArgumentExceptionEncoder   name      clazz   does not support   MAXCODELENGTH egetEncoder
public DescribeOrganizationConfigurationResult describeOrganizationConfiguration(DescribeOrganizationConfigurationRequest request) {request = beforeClientExecution(request);return executeDescribeOrganizationConfiguration(request);},public DescribeOrganizationConfigurationResult describeOrganizationConfigurationDescribeOrganizationConfigurationRequest request request  beforeClientExecutionrequestreturn executeDescribeOrganizationConfigurationrequest
public AbbreviatedObjectId getOldId() {return getOldId(0);},public AbbreviatedObjectId getOldId return getOldId0
public UpdateRuleMetadataResult updateRuleMetadata(UpdateRuleMetadataRequest request) {request = beforeClientExecution(request);return executeUpdateRuleMetadata(request);},public UpdateRuleMetadataResult updateRuleMetadataUpdateRuleMetadataRequest request request  beforeClientExecutionrequestreturn executeUpdateRuleMetadatarequest
"public K lowerKey(K key) {Entry<K, V> entry = findBounded(key, LOWER);return entry != null ? entry.getKey() : null;}",public K lowerKeyK key EntryK V entry  findBoundedkey LOWERreturn entry  null  entrygetKey  null
public FtCfSubRecord clone() {return copy();},public FtCfSubRecord clone return copy
public HCenterRecord clone() {return copy();},public HCenterRecord clone return copy
public void serialize(LittleEndianOutput out) {out.writeInt(field_1_foregroundColor);out.writeInt(field_2_backgroundColor);out.writeShort(field_3_pattern);out.writeShort(field_4_formatFlags);out.writeShort(field_5_forecolorIndex);out.writeShort(field_6_backcolorIndex);},public void serializeLittleEndianOutput out outwriteIntfield1foregroundColoroutwriteIntfield2backgroundColoroutwriteShortfield3patternoutwriteShortfield4formatFlagsoutwriteShortfield5forecolorIndexoutwriteShortfield6backcolorIndex
public GetDashboardEmbedUrlResult getDashboardEmbedUrl(GetDashboardEmbedUrlRequest request) {request = beforeClientExecution(request);return executeGetDashboardEmbedUrl(request);},public GetDashboardEmbedUrlResult getDashboardEmbedUrlGetDashboardEmbedUrlRequest request request  beforeClientExecutionrequestreturn executeGetDashboardEmbedUrlrequest
"public BinaryDocValues getBinaryDocValues(String field) {return getSortedDocValues(field, DocValuesType.BINARY);}",public BinaryDocValues getBinaryDocValuesString field return getSortedDocValuesfield DocValuesTypeBINARY
public TreeFilter clone() {final TreeFilter[] s = new TreeFilter[subfilters.length];for (int i = 0; i < s.length; i++)s[i] = subfilters[i].clone();return new List(s);},public TreeFilter clone final TreeFilter s  new TreeFiltersubfilterslengthfor int i  0 i  slength isi  subfiltersiclonereturn new Lists
public DeleteApnsVoipSandboxChannelResult deleteApnsVoipSandboxChannel(DeleteApnsVoipSandboxChannelRequest request) {request = beforeClientExecution(request);return executeDeleteApnsVoipSandboxChannel(request);},public DeleteApnsVoipSandboxChannelResult deleteApnsVoipSandboxChannelDeleteApnsVoipSandboxChannelRequest request request  beforeClientExecutionrequestreturn executeDeleteApnsVoipSandboxChannelrequest
public FreeRefFunction findFunction(String name) {return _functionsByName.get(name.toUpperCase(Locale.ROOT));},public FreeRefFunction findFunctionString name return functionsByNamegetnametoUpperCaseLocaleROOT
"public Credentials(String accessKeyId, String secretAccessKey, String sessionToken, java.util.Date expiration) {setAccessKeyId(accessKeyId);setSecretAccessKey(secretAccessKey);setSessionToken(sessionToken);setExpiration(expiration);}",public CredentialsString accessKeyId String secretAccessKey String sessionToken javautilDate expiration setAccessKeyIdaccessKeyIdsetSecretAccessKeysecretAccessKeysetSessionTokensessionTokensetExpirationexpiration
public ReadTask(PerfRunData runData) {super(runData);if (withSearch()) {queryMaker = getQueryMaker();} else {queryMaker = null;}},public ReadTaskPerfRunData runData superrunDataif withSearch queryMaker  getQueryMaker else queryMaker  null
public int getPositionIncrementGap(String fieldName) {return 0;},public int getPositionIncrementGapString fieldName return 0
"public void serialize(LittleEndianOutput out) {out.writeInt(_option_flags);serializeUnicodeString(_promptTitle, out);serializeUnicodeString(_errorTitle, out);serializeUnicodeString(_promptText, out);serializeUnicodeString(_errorText, out);out.writeShort(_formula1.getEncodedTokenSize());out.writeShort(_not_used_1);_formula1.serializeTokens(out);out.writeShort(_formula2.getEncodedTokenSize());out.writeShort(_not_used_2);_formula2.serializeTokens(out);_regions.serialize(out);}",public void serializeLittleEndianOutput out outwriteIntoptionflagsserializeUnicodeStringpromptTitle outserializeUnicodeStringerrorTitle outserializeUnicodeStringpromptText outserializeUnicodeStringerrorText outoutwriteShortformula1getEncodedTokenSizeoutwriteShortnotused1formula1serializeTokensoutoutwriteShortformula2getEncodedTokenSizeoutwriteShortnotused2formula2serializeTokensoutregionsserializeout
"public String toString() {return ""[PRINTHEADERS]\n"" +""    .printheaders   = "" + getPrintHeaders() +""\n"" +""[/PRINTHEADERS]\n"";}",public String toString return PRINTHEADERSn     printheaders      getPrintHeaders n PRINTHEADERSn
public GetConferencePreferenceResult getConferencePreference(GetConferencePreferenceRequest request) {request = beforeClientExecution(request);return executeGetConferencePreference(request);},public GetConferencePreferenceResult getConferencePreferenceGetConferencePreferenceRequest request request  beforeClientExecutionrequestreturn executeGetConferencePreferencerequest
public static BitSet getAlts(Collection<BitSet> altsets) {BitSet all = new BitSet();for (BitSet alts : altsets) {all.or(alts);}return all;},public static BitSet getAltsCollectionBitSet altsets BitSet all  new BitSetfor BitSet alts  altsets alloraltsreturn all
public ListTrafficPolicyInstancesResult listTrafficPolicyInstances(ListTrafficPolicyInstancesRequest request) {request = beforeClientExecution(request);return executeListTrafficPolicyInstances(request);},public ListTrafficPolicyInstancesResult listTrafficPolicyInstancesListTrafficPolicyInstancesRequest request request  beforeClientExecutionrequestreturn executeListTrafficPolicyInstancesrequest
public void init(Repository src) {repository = src;},public void initRepository src repository  src
public StandardSyntaxParser(StandardSyntaxParserTokenManager tm) {token_source = tm;token = new Token();jj_ntk = -1;jj_gen = 0;for (int i = 0; i < 25; i++) jj_la1[i] = -1;for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();},public StandardSyntaxParserStandardSyntaxParserTokenManager tm tokensource  tmtoken  new Tokenjjntk  1jjgen  0for int i  0 i  25 i jjla1i  1for int i  0 i  jj2rtnslength i jj2rtnsi  new JJCalls
public ModifyDBClusterEndpointResult modifyDBClusterEndpoint(ModifyDBClusterEndpointRequest request) {request = beforeClientExecution(request);return executeModifyDBClusterEndpoint(request);},public ModifyDBClusterEndpointResult modifyDBClusterEndpointModifyDBClusterEndpointRequest request request  beforeClientExecutionrequestreturn executeModifyDBClusterEndpointrequest
public DescribeTransitGatewaysResult describeTransitGateways(DescribeTransitGatewaysRequest request) {request = beforeClientExecution(request);return executeDescribeTransitGateways(request);},public DescribeTransitGatewaysResult describeTransitGatewaysDescribeTransitGatewaysRequest request request  beforeClientExecutionrequestreturn executeDescribeTransitGatewaysrequest
"public GetSimilarPhotosRequest() {super(""CloudPhoto"", ""2017-07-11"", ""GetSimilarPhotos"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public GetSimilarPhotosRequest superCloudPhoto 20170711 GetSimilarPhotos cloudphotosetProtocolProtocolTypeHTTPS
public GetProposalResult getProposal(GetProposalRequest request) {request = beforeClientExecution(request);return executeGetProposal(request);},public GetProposalResult getProposalGetProposalRequest request request  beforeClientExecutionrequestreturn executeGetProposalrequest
public AddJobFlowStepsRequest(String jobFlowId) {setJobFlowId(jobFlowId);},public AddJobFlowStepsRequestString jobFlowId setJobFlowIdjobFlowId
public StartInstancesRequest(java.util.List<String> instanceIds) {setInstanceIds(instanceIds);},public StartInstancesRequestjavautilListString instanceIds setInstanceIdsinstanceIds
public GetRawMessageContentResult getRawMessageContent(GetRawMessageContentRequest request) {request = beforeClientExecution(request);return executeGetRawMessageContent(request);},public GetRawMessageContentResult getRawMessageContentGetRawMessageContentRequest request request  beforeClientExecutionrequestreturn executeGetRawMessageContentrequest
public RevObject next() {return objItr.hasNext() ? objItr.next() : null;},public RevObject next return objItrhasNext  objItrnext  null
"final public List<SrndQuery> FieldsQueryList() throws ParseException {SrndQuery q;ArrayList<SrndQuery> queries = new ArrayList<SrndQuery>();jj_consume_token(LPAREN);q = FieldsQuery();queries.add(q);label_7:while (true) {jj_consume_token(COMMA);q = FieldsQuery();queries.add(q);switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {case COMMA:;break;default:jj_la1[7] = jj_gen;break label_7;}}jj_consume_token(RPAREN);{if (true) return queries;}throw new Error(""Missing return statement in function"");}",final public ListSrndQuery FieldsQueryList throws ParseException SrndQuery qArrayListSrndQuery queries  new ArrayListSrndQueryjjconsumetokenLPARENq  FieldsQueryqueriesaddqlabel7while true jjconsumetokenCOMMAq  FieldsQueryqueriesaddqswitch jjntk1jjntkjjntk case COMMAbreakdefaultjjla17  jjgenbreak label7jjconsumetokenRPARENif true return queriesthrow new ErrorMissing return statement in function
public boolean contains(long value) {for (int i = 0; i < count; i++)if (entries[i] == value)return true;return false;},public boolean containslong value for int i  0 i  count iif entriesi  valuereturn truereturn false
"public static boolean matchesExtension(String filename, String ext) {return filename.endsWith(""."" + ext);}",public static boolean matchesExtensionString filename String ext return filenameendsWith  ext
"public ObjectId idFor(int type, byte[] data, int off, int len) {return delegate().idFor(type, data, off, len);}",public ObjectId idForint type byte data int off int len return delegateidFortype data off len
public void remove() {parent.remove(this);},public void remove parentremovethis
public DisassociateDeviceFromRoomResult disassociateDeviceFromRoom(DisassociateDeviceFromRoomRequest request) {request = beforeClientExecution(request);return executeDisassociateDeviceFromRoom(request);},public DisassociateDeviceFromRoomResult disassociateDeviceFromRoomDisassociateDeviceFromRoomRequest request request  beforeClientExecutionrequestreturn executeDisassociateDeviceFromRoomrequest
"final public ModifierQueryNode.Modifier Modifiers() throws ParseException {ModifierQueryNode.Modifier ret = ModifierQueryNode.Modifier.MOD_NONE;switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {case NOT:case PLUS:case MINUS:switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {case PLUS:jj_consume_token(PLUS);ret = ModifierQueryNode.Modifier.MOD_REQ;break;case MINUS:jj_consume_token(MINUS);ret = ModifierQueryNode.Modifier.MOD_NOT;break;case NOT:jj_consume_token(NOT);ret = ModifierQueryNode.Modifier.MOD_NOT;break;default:jj_la1[0] = jj_gen;jj_consume_token(-1);throw new ParseException();}break;default:jj_la1[1] = jj_gen;;}{if (true) return ret;}throw new Error(""Missing return statement in function"");}",final public ModifierQueryNodeModifier Modifiers throws ParseException ModifierQueryNodeModifier ret  ModifierQueryNodeModifierMODNONEswitch jjntk1jjntkjjntk case NOTcase PLUScase MINUSswitch jjntk1jjntkjjntk case PLUSjjconsumetokenPLUSret  ModifierQueryNodeModifierMODREQbreakcase MINUSjjconsumetokenMINUSret  ModifierQueryNodeModifierMODNOTbreakcase NOTjjconsumetokenNOTret  ModifierQueryNodeModifierMODNOTbreakdefaultjjla10  jjgenjjconsumetoken1throw new ParseExceptionbreakdefaultjjla11  jjgenif true return retthrow new ErrorMissing return statement in function
public final RevCommit getParent(int nth) {return parents[nth];},public final RevCommit getParentint nth return parentsnth
public boolean hasPrevious() {return iterator.previousIndex() >= start;},public boolean hasPrevious return iteratorpreviousIndex  start
public TerminateWorkspacesResult terminateWorkspaces(TerminateWorkspacesRequest request) {request = beforeClientExecution(request);return executeTerminateWorkspaces(request);},public TerminateWorkspacesResult terminateWorkspacesTerminateWorkspacesRequest request request  beforeClientExecutionrequestreturn executeTerminateWorkspacesrequest
public long getEntryLastModified() {return current().getLastModified();},public long getEntryLastModified return currentgetLastModified
public CancelConversionTaskResult cancelConversionTask(CancelConversionTaskRequest request) {request = beforeClientExecution(request);return executeCancelConversionTask(request);},public CancelConversionTaskResult cancelConversionTaskCancelConversionTaskRequest request request  beforeClientExecutionrequestreturn executeCancelConversionTaskrequest
"public InfoSubRecord(int streamPos, int bucketSstOffset) {field_1_stream_pos        = streamPos;field_2_bucket_sst_offset = bucketSstOffset;}",public InfoSubRecordint streamPos int bucketSstOffset field1streampos         streamPosfield2bucketsstoffset  bucketSstOffset
public boolean contains(Object o) {return map.containsKey(o);},public boolean containsObject o return mapcontainsKeyo
"public String toString() {return ""'"" + ch + ""' @ "" + pos;}",public String toString return   ch      pos
"public Step(String name, Rule rules[], int min, String suffixes[]) {this.name = name;this.rules = rules;if (min == 0) {min = Integer.MAX_VALUE;for (Rule r : rules)min = Math.min(min, r.min + r.suffix.length);}this.min = min;if (suffixes == null || suffixes.length == 0) {this.suffixes = null;} else {this.suffixes = new char[suffixes.length][];for (int i = 0; i < suffixes.length; i++)this.suffixes[i] = suffixes[i].toCharArray();}}",public StepString name Rule rules int min String suffixes thisname  namethisrules  rulesif min  0 min  IntegerMAXVALUEfor Rule r  rulesmin  Mathminmin rmin  rsuffixlengththismin  minif suffixes  null  suffixeslength  0 thissuffixes  null else thissuffixes  new charsuffixeslengthfor int i  0 i  suffixeslength ithissuffixesi  suffixesitoCharArray
"public E get(int key, E valueIfKeyNotFound) {int i = binarySearch(mKeys, 0, mSize, key);if (i < 0 || mValues[i] == DELETED) {return valueIfKeyNotFound;} else {return (E) mValues[i];}}",public E getint key E valueIfKeyNotFound int i  binarySearchmKeys 0 mSize keyif i  0  mValuesi  DELETED return valueIfKeyNotFound else return E mValuesi
"public final ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {if (args.length != 0) {return ErrorEval.VALUE_INVALID;}return evaluate(srcRowIndex, srcColumnIndex);}",public final ValueEval evaluateValueEval args int srcRowIndex int srcColumnIndex if argslength  0 return ErrorEvalVALUEINVALIDreturn evaluatesrcRowIndex srcColumnIndex
"public void enterRecursionRule(ParserRuleContext localctx, int state, int ruleIndex, int precedence) {setState(state);_precedenceStack.push(precedence);_ctx = localctx;_ctx.start = _input.LT(1);if (_parseListeners != null) {triggerEnterRuleEvent(); }}",public void enterRecursionRuleParserRuleContext localctx int state int ruleIndex int precedence setStatestateprecedenceStackpushprecedencectx  localctxctxstart  inputLT1if parseListeners  null triggerEnterRuleEvent 
public GlobalReplicationGroup increaseNodeGroupsInGlobalReplicationGroup(IncreaseNodeGroupsInGlobalReplicationGroupRequest request) {request = beforeClientExecution(request);return executeIncreaseNodeGroupsInGlobalReplicationGroup(request);},public GlobalReplicationGroup increaseNodeGroupsInGlobalReplicationGroupIncreaseNodeGroupsInGlobalReplicationGroupRequest request request  beforeClientExecutionrequestreturn executeIncreaseNodeGroupsInGlobalReplicationGrouprequest
"public static String format(String rawSheetName) {StringBuilder sb = new StringBuilder((rawSheetName == null ? 0 : rawSheetName.length()) + 2);appendFormat(sb, rawSheetName);return sb.toString();}",public static String formatString rawSheetName StringBuilder sb  new StringBuilderrawSheetName  null  0  rawSheetNamelength  2appendFormatsb rawSheetNamereturn sbtoString
public DescribeTerminationPolicyTypesResult describeTerminationPolicyTypes(DescribeTerminationPolicyTypesRequest request) {request = beforeClientExecution(request);return executeDescribeTerminationPolicyTypes(request);},public DescribeTerminationPolicyTypesResult describeTerminationPolicyTypesDescribeTerminationPolicyTypesRequest request request  beforeClientExecutionrequestreturn executeDescribeTerminationPolicyTypesrequest
public DescribeScheduledActionsResult describeScheduledActions() {return describeScheduledActions(new DescribeScheduledActionsRequest());},public DescribeScheduledActionsResult describeScheduledActions return describeScheduledActionsnew DescribeScheduledActionsRequest
"public boolean hasSourceData(int start, int end) {for (; start < end; start++)if (sourceLines[start] == 0)return false;return true;}",public boolean hasSourceDataint start int end for  start  end startif sourceLinesstart  0return falsereturn true
public ListImportsResult listImports(ListImportsRequest request) {request = beforeClientExecution(request);return executeListImports(request);},public ListImportsResult listImportsListImportsRequest request request  beforeClientExecutionrequestreturn executeListImportsrequest
public DescribeInterconnectsResult describeInterconnects() {return describeInterconnects(new DescribeInterconnectsRequest());},public DescribeInterconnectsResult describeInterconnects return describeInterconnectsnew DescribeInterconnectsRequest
public DeleteEventSubscriptionResult deleteEventSubscription(DeleteEventSubscriptionRequest request) {request = beforeClientExecution(request);return executeDeleteEventSubscription(request);},public DeleteEventSubscriptionResult deleteEventSubscriptionDeleteEventSubscriptionRequest request request  beforeClientExecutionrequestreturn executeDeleteEventSubscriptionrequest
"public int serialize( int offset, byte[] data, EscherSerializationListener listener ){listener.beforeRecordSerialize( offset, getRecordId(), this );LittleEndian.putShort(data, offset, getOptions());LittleEndian.putShort(data, offset+2, getRecordId());int remainingBytes = thedata.length;LittleEndian.putInt(data, offset+4, remainingBytes);System.arraycopy(thedata, 0, data, offset+8, thedata.length);int pos = offset+8+thedata.length;listener.afterRecordSerialize( pos, getRecordId(), pos - offset, this );int size = pos - offset;if (size != getRecordSize()) {throw new RecordFormatException(size + "" bytes written but getRecordSize() reports "" + getRecordSize());}return size;}",public int serialize int offset byte data EscherSerializationListener listener listenerbeforeRecordSerialize offset getRecordId this LittleEndianputShortdata offset getOptionsLittleEndianputShortdata offset2 getRecordIdint remainingBytes  thedatalengthLittleEndianputIntdata offset4 remainingBytesSystemarraycopythedata 0 data offset8 thedatalengthint pos  offset8thedatalengthlistenerafterRecordSerialize pos getRecordId pos  offset this int size  pos  offsetif size  getRecordSize throw new RecordFormatExceptionsize   bytes written but getRecordSize reports   getRecordSizereturn size
public void write(int oneChar) {synchronized (lock) {expand(1);buf[count++] = (char) oneChar;}},public void writeint oneChar synchronized lock expand1bufcount  char oneChar
public DeletedRef3DPtg(int externSheetIndex) {field_1_index_extern_sheet = externSheetIndex;unused1 = 0;},public DeletedRef3DPtgint externSheetIndex field1indexexternsheet  externSheetIndexunused1  0
"public IndexUpgrader(Directory dir, IndexWriterConfig iwc, boolean deletePriorCommits) {this.dir = dir;this.iwc = iwc;this.deletePriorCommits = deletePriorCommits;}",public IndexUpgraderDirectory dir IndexWriterConfig iwc boolean deletePriorCommits thisdir  dirthisiwc  iwcthisdeletePriorCommits  deletePriorCommits
"public DetachVpnGatewayRequest(String vpnGatewayId, String vpcId) {setVpnGatewayId(vpnGatewayId);setVpcId(vpcId);}",public DetachVpnGatewayRequestString vpnGatewayId String vpcId setVpnGatewayIdvpnGatewayIdsetVpcIdvpcId
public RebootInstancesRequest(java.util.List<String> instanceIds) {setInstanceIds(instanceIds);},public RebootInstancesRequestjavautilListString instanceIds setInstanceIdsinstanceIds
public E remove(int index) {synchronized (mutex) {return delegate().remove(index);}},public E removeint index synchronized mutex return delegateremoveindex
public DescribeInstanceAttributeResult describeInstanceAttribute(DescribeInstanceAttributeRequest request) {request = beforeClientExecution(request);return executeDescribeInstanceAttribute(request);},public DescribeInstanceAttributeResult describeInstanceAttributeDescribeInstanceAttributeRequest request request  beforeClientExecutionrequestreturn executeDescribeInstanceAttributerequest
"public void cloneStyleFrom(CellStyle source) {if(source instanceof HSSFCellStyle) {this.cloneStyleFrom((HSSFCellStyle)source);} else {throw new IllegalArgumentException(""Can only clone from one HSSFCellStyle to another, not between HSSFCellStyle and XSSFCellStyle"");}}",public void cloneStyleFromCellStyle source ifsource instanceof HSSFCellStyle thiscloneStyleFromHSSFCellStylesource else throw new IllegalArgumentExceptionCan only clone from one HSSFCellStyle to another not between HSSFCellStyle and XSSFCellStyle
public final String readUTF() throws IOException {return decodeUTF(readUnsignedShort());},public final String readUTF throws IOException return decodeUTFreadUnsignedShort
public GetDataEndpointResult getDataEndpoint(GetDataEndpointRequest request) {request = beforeClientExecution(request);return executeGetDataEndpoint(request);},public GetDataEndpointResult getDataEndpointGetDataEndpointRequest request request  beforeClientExecutionrequestreturn executeGetDataEndpointrequest
public AddApplicationOutputResult addApplicationOutput(AddApplicationOutputRequest request) {request = beforeClientExecution(request);return executeAddApplicationOutput(request);},public AddApplicationOutputResult addApplicationOutputAddApplicationOutputRequest request request  beforeClientExecutionrequestreturn executeAddApplicationOutputrequest
public LargeObjectException(AnyObjectId id) {setObjectId(id);},public LargeObjectExceptionAnyObjectId id setObjectIdid
"public void trimToSize() {if (n < array.length) {char[] aux = new char[n];System.arraycopy(array, 0, aux, 0, n);array = aux;}}",public void trimToSize if n  arraylength char aux  new charnSystemarraycopyarray 0 aux 0 narray  aux
public UpdateFacetResult updateFacet(UpdateFacetRequest request) {request = beforeClientExecution(request);return executeUpdateFacet(request);},public UpdateFacetResult updateFacetUpdateFacetRequest request request  beforeClientExecutionrequestreturn executeUpdateFacetrequest
public DeleteDomainRequest(String domainName) {setDomainName(domainName);},public DeleteDomainRequestString domainName setDomainNamedomainName
"public String getReading() {return dictionary.getReading(wordId, surfaceForm, offset, length);}",public String getReading return dictionarygetReadingwordId surfaceForm offset length
"public FloatBuffer compact() {System.arraycopy(backingArray, position + offset, backingArray, offset, remaining());position = limit - position;limit = capacity;mark = UNSET_MARK;return this;}",public FloatBuffer compact SystemarraycopybackingArray position  offset backingArray offset remainingposition  limit  positionlimit  capacitymark  UNSETMARKreturn this
public String toString() {return super.toString();},public String toString return supertoString
"public void set(int index, long value) {ensureCapacity(value);current.set(index, value);}",public void setint index long value ensureCapacityvaluecurrentsetindex value
"public void serialize(LittleEndianOutput out) {String username = getUsername();boolean is16bit = StringUtil.hasMultibyte(username);out.writeShort(username.length());out.writeByte(is16bit ? 0x01 : 0x00);if (is16bit) {StringUtil.putUnicodeLE(username, out);} else {StringUtil.putCompressedUnicode(username, out);}int encodedByteCount = 3 + username.length() * (is16bit ? 2 : 1);int paddingSize = DATA_SIZE - encodedByteCount;out.write(PADDING, 0, paddingSize);}",public void serializeLittleEndianOutput out String username  getUsernameboolean is16bit  StringUtilhasMultibyteusernameoutwriteShortusernamelengthoutwriteByteis16bit  0x01  0x00if is16bit StringUtilputUnicodeLEusername out else StringUtilputCompressedUnicodeusername outint encodedByteCount  3  usernamelength  is16bit  2  1int paddingSize  DATASIZE  encodedByteCountoutwritePADDING 0 paddingSize
public boolean isExpired() {return false;},public boolean isExpired return false
"public ListJobsRequest(String accountId, String vaultName) {setAccountId(accountId);setVaultName(vaultName);}",public ListJobsRequestString accountId String vaultName setAccountIdaccountIdsetVaultNamevaultName
"public SheetRefEvaluator getSheetEvaluator(int sheetIndex) {if (sheetIndex < _firstSheetIndex || sheetIndex > _lastSheetIndex) {throw new IllegalArgumentException(""Invalid SheetIndex: "" + sheetIndex +"" - Outside range "" + _firstSheetIndex + "" : "" + _lastSheetIndex);}return _sheetEvaluators[sheetIndex-_firstSheetIndex];}",public SheetRefEvaluator getSheetEvaluatorint sheetIndex if sheetIndex  firstSheetIndex  sheetIndex  lastSheetIndex throw new IllegalArgumentExceptionInvalid SheetIndex   sheetIndex   Outside range   firstSheetIndex      lastSheetIndexreturn sheetEvaluatorssheetIndexfirstSheetIndex
"public static String[] stringToPath(String s) {List<String> parts = new ArrayList<>();int length = s.length();if (length == 0) {return new String[0];}char[] buffer = new char[length];int upto = 0;boolean lastEscape = false;for(int i=0;i<length;i++) {char ch = s.charAt(i);if (lastEscape) {buffer[upto++] = ch;lastEscape = false;} else if (ch == ESCAPE_CHAR) {lastEscape = true;} else if (ch == DELIM_CHAR) {parts.add(new String(buffer, 0, upto));upto = 0;} else {buffer[upto++] = ch;}}parts.add(new String(buffer, 0, upto));assert !lastEscape;return parts.toArray(new String[parts.size()]);}",public static String stringToPathString s ListString parts  new ArrayListint length  slengthif length  0 return new String0char buffer  new charlengthint upto  0boolean lastEscape  falseforint i0ilengthi char ch  scharAtiif lastEscape bufferupto  chlastEscape  false else if ch  ESCAPECHAR lastEscape  true else if ch  DELIMCHAR partsaddnew Stringbuffer 0 uptoupto  0 else bufferupto  chpartsaddnew Stringbuffer 0 uptoassert lastEscapereturn partstoArraynew Stringpartssize
public CreateDirectConnectGatewayResult createDirectConnectGateway(CreateDirectConnectGatewayRequest request) {request = beforeClientExecution(request);return executeCreateDirectConnectGateway(request);},public CreateDirectConnectGatewayResult createDirectConnectGatewayCreateDirectConnectGatewayRequest request request  beforeClientExecutionrequestreturn executeCreateDirectConnectGatewayrequest
public GetMLModelResult getMLModel(GetMLModelRequest request) {request = beforeClientExecution(request);return executeGetMLModel(request);},public GetMLModelResult getMLModelGetMLModelRequest request request  beforeClientExecutionrequestreturn executeGetMLModelrequest
"public boolean isValid() {if (bytes == null) {throw new IllegalStateException(""bytes is null"");}if (length < 0) {throw new IllegalStateException(""length is negative: "" + length);}if (length > bytes.length) {throw new IllegalStateException(""length is out of bounds: "" + length + "",bytes.length="" + bytes.length);}if (offset < 0) {throw new IllegalStateException(""offset is negative: "" + offset);}if (offset > bytes.length) {throw new IllegalStateException(""offset out of bounds: "" + offset + "",bytes.length="" + bytes.length);}if (offset + length < 0) {throw new IllegalStateException(""offset+length is negative: offset="" + offset + "",length="" + length);}if (offset + length > bytes.length) {throw new IllegalStateException(""offset+length out of bounds: offset="" + offset + "",length="" + length + "",bytes.length="" + bytes.length);}return true;}",public boolean isValid if bytes  null throw new IllegalStateExceptionbytes is nullif length  0 throw new IllegalStateExceptionlength is negative   lengthif length  byteslength throw new IllegalStateExceptionlength is out of bounds   length  byteslength  byteslengthif offset  0 throw new IllegalStateExceptionoffset is negative   offsetif offset  byteslength throw new IllegalStateExceptionoffset out of bounds   offset  byteslength  byteslengthif offset  length  0 throw new IllegalStateExceptionoffsetlength is negative offset  offset  length  lengthif offset  length  byteslength throw new IllegalStateExceptionoffsetlength out of bounds offset  offset  length  length  byteslength  byteslengthreturn true
public String toString() {return getName();},public String toString return getName
public DescribeIAMPolicyAssignmentResult describeIAMPolicyAssignment(DescribeIAMPolicyAssignmentRequest request) {request = beforeClientExecution(request);return executeDescribeIAMPolicyAssignment(request);},public DescribeIAMPolicyAssignmentResult describeIAMPolicyAssignmentDescribeIAMPolicyAssignmentRequest request request  beforeClientExecutionrequestreturn executeDescribeIAMPolicyAssignmentrequest
public boolean isRefLogIncludingResult() {return refLogIncludeResult;},public boolean isRefLogIncludingResult return refLogIncludeResult
public DeleteStreamingDistributionResult deleteStreamingDistribution(DeleteStreamingDistributionRequest request) {request = beforeClientExecution(request);return executeDeleteStreamingDistribution(request);},public DeleteStreamingDistributionResult deleteStreamingDistributionDeleteStreamingDistributionRequest request request  beforeClientExecutionrequestreturn executeDeleteStreamingDistributionrequest
public RawSubStringPattern(String patternText) {if (patternText.length() == 0)throw new IllegalArgumentException(JGitText.get().cannotMatchOnEmptyString);needleString = patternText;final byte[] b = Constants.encode(patternText);needle = new byte[b.length];for (int i = 0; i < b.length; i++)needle[i] = lc(b[i]);},public RawSubStringPatternString patternText if patternTextlength  0throw new IllegalArgumentExceptionJGitTextgetcannotMatchOnEmptyStringneedleString  patternTextfinal byte b  ConstantsencodepatternTextneedle  new byteblengthfor int i  0 i  blength ineedlei  lcbi
public ListRulesResult listRules(ListRulesRequest request) {request = beforeClientExecution(request);return executeListRules(request);},public ListRulesResult listRulesListRulesRequest request request  beforeClientExecutionrequestreturn executeListRulesrequest
"@Override public Iterator<Entry<K, V>> iterator() {final Iterator<Entry<K, V>> iterator = esDelegate.iterator();return new Iterator<Entry<K, V>>();}",Override public IteratorEntryK V iterator final IteratorEntryK V iterator  esDelegateiteratorreturn new IteratorEntryK V
"public SendMessageResult sendMessage(String queueUrl, String messageBody) {return sendMessage(new SendMessageRequest().withQueueUrl(queueUrl).withMessageBody(messageBody));}",public SendMessageResult sendMessageString queueUrl String messageBody return sendMessagenew SendMessageRequestwithQueueUrlqueueUrlwithMessageBodymessageBody
"public static double getExcelDate(Date date) {return getExcelDate(date, false);}",public static double getExcelDateDate date return getExcelDatedate false
"public String toString() {return markedUpText.subSequence(textStartPos, textEndPos).toString();}",public String toString return markedUpTextsubSequencetextStartPos textEndPostoString
public ModifyInstancePlacementResult modifyInstancePlacement(ModifyInstancePlacementRequest request) {request = beforeClientExecution(request);return executeModifyInstancePlacement(request);},public ModifyInstancePlacementResult modifyInstancePlacementModifyInstancePlacementRequest request request  beforeClientExecutionrequestreturn executeModifyInstancePlacementrequest
"public static String replaceOccupiedParameters(String url, Map<String, String> paths) {String result = url;for (Map.Entry<String, String> entry : paths.entrySet()) {String key = entry.getKey();String value = entry.getValue();String target = ""["" + key + ""]"";result = result.replace(target, value);}return result;}",public static String replaceOccupiedParametersString url MapString String paths String result  urlfor MapEntryString String entry  pathsentrySet String key  entrygetKeyString value  entrygetValueString target    key  result  resultreplacetarget valuereturn result
"public String toString() {return ""<matchAllDocs field='*' term='*'/>"";}",public String toString return matchAllDocs field term
"public DeleteMetricFilterRequest(String logGroupName, String filterName) {setLogGroupName(logGroupName);setFilterName(filterName);}",public DeleteMetricFilterRequestString logGroupName String filterName setLogGroupNamelogGroupNamesetFilterNamefilterName
public char readChar() throws IOException {return primitiveTypes.readChar();},public char readChar throws IOException return primitiveTypesreadChar
public DescribeInstanceStatusResult describeInstanceStatus(DescribeInstanceStatusRequest request) {request = beforeClientExecution(request);return executeDescribeInstanceStatus(request);},public DescribeInstanceStatusResult describeInstanceStatusDescribeInstanceStatusRequest request request  beforeClientExecutionrequestreturn executeDescribeInstanceStatusrequest
public BatchDeleteAttributesResult batchDeleteAttributes(BatchDeleteAttributesRequest request) {request = beforeClientExecution(request);return executeBatchDeleteAttributes(request);},public BatchDeleteAttributesResult batchDeleteAttributesBatchDeleteAttributesRequest request request  beforeClientExecutionrequestreturn executeBatchDeleteAttributesrequest
"public String toString() {return ""<fieldconfig name=\"""" + this.fieldName + ""\"" configurations=\""""+ super.toString() + ""\""/>"";}",public String toString return fieldconfig name  thisfieldName   configurations supertoString  
public ListDeploymentGroupsResult listDeploymentGroups(ListDeploymentGroupsRequest request) {request = beforeClientExecution(request);return executeListDeploymentGroups(request);},public ListDeploymentGroupsResult listDeploymentGroupsListDeploymentGroupsRequest request request  beforeClientExecutionrequestreturn executeListDeploymentGroupsrequest
public CellGeneralFormatter() {this(LocaleUtil.getUserLocale());},public CellGeneralFormatter thisLocaleUtilgetUserLocale
"public BloomFilteredTerms(Terms terms, FuzzySet filter) {this.delegateTerms = terms;this.filter = filter;}",public BloomFilteredTermsTerms terms FuzzySet filter thisdelegateTerms  termsthisfilter  filter
public int numBits(int idx) {return bytes[idx].bits;},public int numBitsint idx return bytesidxbits
public boolean equals(Object obj) {if (obj == this) {return true;}else if (!(obj instanceof LexerChannelAction)) {return false;}return channel == ((LexerChannelAction)obj).channel;},public boolean equalsObject obj if obj  this return trueelse if obj instanceof LexerChannelAction return falsereturn channel  LexerChannelActionobjchannel
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeShort(getValue());},public void writeLittleEndianOutput out outwriteBytesid  getPtgClassoutwriteShortgetValue
public ExecuteChangeSetResult executeChangeSet(ExecuteChangeSetRequest request) {request = beforeClientExecution(request);return executeExecuteChangeSet(request);},public ExecuteChangeSetResult executeChangeSetExecuteChangeSetRequest request request  beforeClientExecutionrequestreturn executeExecuteChangeSetrequest
public StartInstanceResult startInstance(StartInstanceRequest request) {request = beforeClientExecution(request);return executeStartInstance(request);},public StartInstanceResult startInstanceStartInstanceRequest request request  beforeClientExecutionrequestreturn executeStartInstancerequest
"public CapitalizationFilterFactory(Map<String, String> args) {super(args);boolean ignoreCase = getBoolean(args, KEEP_IGNORE_CASE, false);Set<String> k = getSet(args, KEEP);if (k != null) {keep = new CharArraySet(10, ignoreCase);keep.addAll(k);}k = getSet(args, OK_PREFIX);if (k != null) {okPrefix = new ArrayList<>();for (String item : k) {okPrefix.add(item.toCharArray());}}minWordLength = getInt(args, MIN_WORD_LENGTH, 0);maxWordCount = getInt(args, MAX_WORD_COUNT, CapitalizationFilter.DEFAULT_MAX_WORD_COUNT);maxTokenLength = getInt(args, MAX_TOKEN_LENGTH, CapitalizationFilter.DEFAULT_MAX_TOKEN_LENGTH);onlyFirstWord = getBoolean(args, ONLY_FIRST_WORD, true);forceFirstLetter = getBoolean(args, FORCE_FIRST_LETTER, true);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public CapitalizationFilterFactoryMapString String args superargsboolean ignoreCase  getBooleanargs KEEPIGNORECASE falseSetString k  getSetargs KEEPif k  null keep  new CharArraySet10 ignoreCasekeepaddAllkk  getSetargs OKPREFIXif k  null okPrefix  new ArrayListfor String item  k okPrefixadditemtoCharArrayminWordLength  getIntargs MINWORDLENGTH 0maxWordCount  getIntargs MAXWORDCOUNT CapitalizationFilterDEFAULTMAXWORDCOUNTmaxTokenLength  getIntargs MAXTOKENLENGTH CapitalizationFilterDEFAULTMAXTOKENLENGTHonlyFirstWord  getBooleanargs ONLYFIRSTWORD trueforceFirstLetter  getBooleanargs FORCEFIRSTLETTER trueif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public static long[] copyOf(long[] original, int newLength) {if (newLength < 0) {throw new NegativeArraySizeException();}return copyOfRange(original, 0, newLength);}",public static long copyOflong original int newLength if newLength  0 throw new NegativeArraySizeExceptionreturn copyOfRangeoriginal 0 newLength
public String toString() {return ref.toString();},public String toString return reftoString
public ListNetworksResult listNetworks(ListNetworksRequest request) {request = beforeClientExecution(request);return executeListNetworks(request);},public ListNetworksResult listNetworksListNetworksRequest request request  beforeClientExecutionrequestreturn executeListNetworksrequest
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {ValueEval arg = arg0;if (arg instanceof RefEval) {RefEval re = (RefEval)arg;arg = re.getInnerValueEval(re.getFirstSheetIndex());} else if (arg instanceof AreaEval) {arg = ((AreaEval) arg).getRelativeValue(0, 0);}if (arg instanceof StringEval) {return arg;}if (arg instanceof ErrorEval) {return arg;}return StringEval.EMPTY_INSTANCE;}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg  arg0if arg instanceof RefEval RefEval re  RefEvalargarg  regetInnerValueEvalregetFirstSheetIndex else if arg instanceof AreaEval arg  AreaEval arggetRelativeValue0 0if arg instanceof StringEval return argif arg instanceof ErrorEval return argreturn StringEvalEMPTYINSTANCE
public StopNotebookInstanceResult stopNotebookInstance(StopNotebookInstanceRequest request) {request = beforeClientExecution(request);return executeStopNotebookInstance(request);},public StopNotebookInstanceResult stopNotebookInstanceStopNotebookInstanceRequest request request  beforeClientExecutionrequestreturn executeStopNotebookInstancerequest
"public void applyFont(int startIndex, int endIndex, short fontIndex) {if (startIndex > endIndex)throw new IllegalArgumentException(""Start index must be less than end index."");if (startIndex < 0 || endIndex > length())throw new IllegalArgumentException(""Start and end index not in range."");if (startIndex == endIndex)return;short currentFont = NO_FONT;if (endIndex != length()) {currentFont = this.getFontAtIndex(endIndex);}_string = cloneStringIfRequired();Iterator<FormatRun> formatting = _string.formatIterator();if (formatting != null) {while (formatting.hasNext()) {FormatRun r = formatting.next();if ((r.getCharacterPos() >= startIndex) && (r.getCharacterPos() < endIndex))formatting.remove();}}_string.addFormatRun(new FormatRun((short)startIndex, fontIndex));if (endIndex != length())_string.addFormatRun(new FormatRun((short)endIndex, currentFont));addToSSTIfRequired();}",public void applyFontint startIndex int endIndex short fontIndex if startIndex  endIndexthrow new IllegalArgumentExceptionStart index must be less than end indexif startIndex  0  endIndex  lengththrow new IllegalArgumentExceptionStart and end index not in rangeif startIndex  endIndexreturnshort currentFont  NOFONTif endIndex  length currentFont  thisgetFontAtIndexendIndexstring  cloneStringIfRequiredIteratorFormatRun formatting  stringformatIteratorif formatting  null while formattinghasNext FormatRun r  formattingnextif rgetCharacterPos  startIndex  rgetCharacterPos  endIndexformattingremovestringaddFormatRunnew FormatRunshortstartIndex fontIndexif endIndex  lengthstringaddFormatRunnew FormatRunshortendIndex currentFontaddToSSTIfRequired
public int readInt() throws IOException {return primitiveTypes.readInt();},public int readInt throws IOException return primitiveTypesreadInt
"public Iterable<RevCommit> call() throws GitAPIException, NoHeadException {checkCallable();List<TreeFilter> filters = new ArrayList<>();if (!pathFilters.isEmpty()) {filters.add(AndTreeFilter.create(PathFilterGroup.create(pathFilters), TreeFilter.ANY_DIFF));}if (!excludeTreeFilters.isEmpty()) {for (TreeFilter f : excludeTreeFilters) {filters.add(AndTreeFilter.create(f, TreeFilter.ANY_DIFF));}}if (!filters.isEmpty()) {if (filters.size() == 1) {filters.add(TreeFilter.ANY_DIFF);}walk.setTreeFilter(AndTreeFilter.create(filters));}if (skip > -1 && maxCount > -1)walk.setRevFilter(AndRevFilter.create(SkipRevFilter.create(skip),MaxCountRevFilter.create(maxCount)));else if (skip > -1)walk.setRevFilter(SkipRevFilter.create(skip));else if (maxCount > -1)walk.setRevFilter(MaxCountRevFilter.create(maxCount));if (!startSpecified) {try {ObjectId headId = repo.resolve(Constants.HEAD);if (headId == null)throw new NoHeadException(JGitText.get().noHEADExistsAndNoExplicitStartingRevisionWasSpecified);add(headId);} catch (IOException e) {throw new JGitInternalException(JGitText.get().anExceptionOccurredWhileTryingToAddTheIdOfHEAD,e);}}if (this.revFilter != null) {walk.setRevFilter(this.revFilter);}setCallable(false);return walk;}",public IterableRevCommit call throws GitAPIException NoHeadException checkCallableListTreeFilter filters  new ArrayListif pathFiltersisEmpty filtersaddAndTreeFiltercreatePathFilterGroupcreatepathFilters TreeFilterANYDIFFif excludeTreeFiltersisEmpty for TreeFilter f  excludeTreeFilters filtersaddAndTreeFiltercreatef TreeFilterANYDIFFif filtersisEmpty if filterssize  1 filtersaddTreeFilterANYDIFFwalksetTreeFilterAndTreeFiltercreatefiltersif skip  1  maxCount  1walksetRevFilterAndRevFiltercreateSkipRevFiltercreateskipMaxCountRevFiltercreatemaxCountelse if skip  1walksetRevFilterSkipRevFiltercreateskipelse if maxCount  1walksetRevFilterMaxCountRevFiltercreatemaxCountif startSpecified try ObjectId headId  reporesolveConstantsHEADif headId  nullthrow new NoHeadExceptionJGitTextgetnoHEADExistsAndNoExplicitStartingRevisionWasSpecifiedaddheadId catch IOException e throw new JGitInternalExceptionJGitTextgetanExceptionOccurredWhileTryingToAddTheIdOfHEADeif thisrevFilter  null walksetRevFilterthisrevFiltersetCallablefalsereturn walk
"public HyphenationCompoundWordTokenFilterFactory(Map<String, String> args) {super(args);dictFile = get(args, ""dictionary"");encoding = get(args, ""encoding"");hypFile = require(args, ""hyphenator"");minWordSize = getInt(args, ""minWordSize"", CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE);minSubwordSize = getInt(args, ""minSubwordSize"", CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE);maxSubwordSize = getInt(args, ""maxSubwordSize"", CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE);onlyLongestMatch = getBoolean(args, ""onlyLongestMatch"", false);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public HyphenationCompoundWordTokenFilterFactoryMapString String args superargsdictFile  getargs dictionaryencoding  getargs encodinghypFile  requireargs hyphenatorminWordSize  getIntargs minWordSize CompoundWordTokenFilterBaseDEFAULTMINWORDSIZEminSubwordSize  getIntargs minSubwordSize CompoundWordTokenFilterBaseDEFAULTMINSUBWORDSIZEmaxSubwordSize  getIntargs maxSubwordSize CompoundWordTokenFilterBaseDEFAULTMAXSUBWORDSIZEonlyLongestMatch  getBooleanargs onlyLongestMatch falseif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public DeleteTerminologyResult deleteTerminology(DeleteTerminologyRequest request) {request = beforeClientExecution(request);return executeDeleteTerminology(request);},public DeleteTerminologyResult deleteTerminologyDeleteTerminologyRequest request request  beforeClientExecutionrequestreturn executeDeleteTerminologyrequest
"public boolean remove(Object o) {if (!(o instanceof Entry))return false;Entry<?, ?> e = (Entry<?, ?>)o;return removeMapping(e.getKey(), e.getValue());}",public boolean removeObject o if o instanceof Entryreturn falseEntry  e  Entry oreturn removeMappingegetKey egetValue
public GetObjectAttributesResult getObjectAttributes(GetObjectAttributesRequest request) {request = beforeClientExecution(request);return executeGetObjectAttributes(request);},public GetObjectAttributesResult getObjectAttributesGetObjectAttributesRequest request request  beforeClientExecutionrequestreturn executeGetObjectAttributesrequest
"public RevWalk getRevWalk() {throw new UnsupportedOperationException(MessageFormat.format(JGitText.get().isAStaticFlagAndHasNorevWalkInstance, toString()));}",public RevWalk getRevWalk throw new UnsupportedOperationExceptionMessageFormatformatJGitTextgetisAStaticFlagAndHasNorevWalkInstance toString
public DescribeKeyPairsResult describeKeyPairs(DescribeKeyPairsRequest request) {request = beforeClientExecution(request);return executeDescribeKeyPairs(request);},public DescribeKeyPairsResult describeKeyPairsDescribeKeyPairsRequest request request  beforeClientExecutionrequestreturn executeDescribeKeyPairsrequest
public byte[] toByteArray() {return build();},public byte toByteArray return build
public void setIndexVersion(int version) {indexVersion = version;},public void setIndexVersionint version indexVersion  version
public IgnoreNode() {rules = new ArrayList<>();},public IgnoreNode rules  new ArrayList
public TreeFilter negate() {return NotTreeFilter.create(this);},public TreeFilter negate return NotTreeFiltercreatethis
public long ramBytesUsed() {return docs.ramBytesUsed()+ RamUsageEstimator.NUM_BYTES_OBJECT_HEADER+ 2 * Integer.BYTES+ 2 + Long.BYTES+ RamUsageEstimator.NUM_BYTES_OBJECT_REF;},public long ramBytesUsed return docsramBytesUsed RamUsageEstimatorNUMBYTESOBJECTHEADER 2  IntegerBYTES 2  LongBYTES RamUsageEstimatorNUMBYTESOBJECTREF
"public String toString() {return exists() ? toObject().toString() : ""(null)"";}",public String toString return exists  toObjecttoString  null
public int available() throws IOException {checkReadPrimitiveTypes();return primitiveData.available();},public int available throws IOException checkReadPrimitiveTypesreturn primitiveDataavailable
"public UnicodeMapping(String pEntityName, String pResolvedValue) {entityName = ""&"" + pEntityName + "";"";resolvedValue = pResolvedValue;}",public UnicodeMappingString pEntityName String pResolvedValue entityName    pEntityName  resolvedValue  pResolvedValue
public final void removeBreak(int Main) {Integer rowKey = Integer.valueOf(Main);Break region = _breakMap.get(rowKey);_breaks.remove(region);_breakMap.remove(rowKey);},public final void removeBreakint Main Integer rowKey  IntegervalueOfMainBreak region  breakMapgetrowKeybreaksremoveregionbreakMapremoverowKey
"public void sort(int from, int to) {checkRange(from, to);if (to - from <= 1) {return;}reset(from, to);do {ensureInvariants();pushRunLen(nextRun());} while (runEnd(0) < to);exhaustStack();assert runEnd(0) == to;}",public void sortint from int to checkRangefrom toif to  from  1 returnresetfrom todo ensureInvariantspushRunLennextRun while runEnd0  toexhaustStackassert runEnd0  to
public File getDirectory() {return directory;},public File getDirectory return directory
"public PositionTrackingVisitor(RecordVisitor rv, int initialPosition) {_rv = rv;_position = initialPosition;}",public PositionTrackingVisitorRecordVisitor rv int initialPosition rv  rvposition  initialPosition
public T top() {return top;},public T top return top
"public String toString() {StringBuilder sb = new StringBuilder();sb.append(getClass().getName());sb.append("" ["");if (externalWorkbookNumber >= 0) {sb.append("" ["");sb.append(""workbook="").append(getExternalWorkbookNumber());sb.append(""] "");}sb.append(""sheet="").append(getSheetName());if (lastSheetName != null) {sb.append("" : "");sb.append(""sheet="").append(lastSheetName);}sb.append("" ! "");sb.append(formatReferenceAsString());sb.append(""]"");return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappendgetClassgetNamesbappend if externalWorkbookNumber  0 sbappend sbappendworkbookappendgetExternalWorkbookNumbersbappend sbappendsheetappendgetSheetNameif lastSheetName  null sbappend  sbappendsheetappendlastSheetNamesbappend  sbappendformatReferenceAsStringsbappendreturn sbtoString
public SubmoduleSyncCommand addPath(String path) {paths.add(path);return this;},public SubmoduleSyncCommand addPathString path pathsaddpathreturn this
@Override public int size() {return map.size();},Override public int size return mapsize
"public DeleteNamespaceRequest() {super(""cr"", ""2016-06-07"", ""DeleteNamespace"", ""cr"");setUriPattern(""/namespace/[Namespace]"");setMethod(MethodType.DELETE);}",public DeleteNamespaceRequest supercr 20160607 DeleteNamespace crsetUriPatternnamespaceNamespacesetMethodMethodTypeDELETE
public GeoRestriction(GeoRestrictionType restrictionType) {setRestrictionType(restrictionType.toString());},public GeoRestrictionGeoRestrictionType restrictionType setRestrictionTyperestrictionTypetoString
"public RecognizeEntityRequest() {super(""visionai-poc"", ""2020-04-08"", ""RecognizeEntity"");setMethod(MethodType.POST);}",public RecognizeEntityRequest supervisionaipoc 20200408 RecognizeEntitysetMethodMethodTypePOST
"public final int compareTo(byte[] bs, int p) {int cmp;cmp = NB.compareUInt32(w1, NB.decodeInt32(bs, p));if (cmp != 0)return cmp;cmp = NB.compareUInt32(w2, NB.decodeInt32(bs, p + 4));if (cmp != 0)return cmp;cmp = NB.compareUInt32(w3, NB.decodeInt32(bs, p + 8));if (cmp != 0)return cmp;cmp = NB.compareUInt32(w4, NB.decodeInt32(bs, p + 12));if (cmp != 0)return cmp;return NB.compareUInt32(w5, NB.decodeInt32(bs, p + 16));}",public final int compareTobyte bs int p int cmpcmp  NBcompareUInt32w1 NBdecodeInt32bs pif cmp  0return cmpcmp  NBcompareUInt32w2 NBdecodeInt32bs p  4if cmp  0return cmpcmp  NBcompareUInt32w3 NBdecodeInt32bs p  8if cmp  0return cmpcmp  NBcompareUInt32w4 NBdecodeInt32bs p  12if cmp  0return cmpreturn NBcompareUInt32w5 NBdecodeInt32bs p  16
"public SendMessageRequest() {super(""OnsMqtt"", ""2019-12-11"", ""SendMessage"", ""onsmqtt"");setMethod(MethodType.POST);}",public SendMessageRequest superOnsMqtt 20191211 SendMessage onsmqttsetMethodMethodTypePOST
public SelectRequest(String selectExpression) {setSelectExpression(selectExpression);},public SelectRequestString selectExpression setSelectExpressionselectExpression
public TopMarginRecord clone() {return copy();},public TopMarginRecord clone return copy
public GetStaticIpsResult getStaticIps(GetStaticIpsRequest request) {request = beforeClientExecution(request);return executeGetStaticIps(request);},public GetStaticIpsResult getStaticIpsGetStaticIpsRequest request request  beforeClientExecutionrequestreturn executeGetStaticIpsrequest
"public String toString() {final StringBuilder b = new StringBuilder();final int sectionCount = getSectionCount();b.append(getClass().getName());b.append('[');b.append(""byteOrder: "");b.append(getByteOrder());b.append("", classID: "");b.append(getClassID());b.append("", format: "");b.append(getFormat());b.append("", OSVersion: "");b.append(getOSVersion());b.append("", sectionCount: "");b.append(sectionCount);b.append("", sections: [\n"");for (Section section: getSections()) {b.append(section.toString(getPropertySetIDMap()));}b.append(']');b.append(']');return b.toString();}",public String toString final StringBuilder b  new StringBuilderfinal int sectionCount  getSectionCountbappendgetClassgetNamebappendbappendbyteOrder bappendgetByteOrderbappend classID bappendgetClassIDbappend format bappendgetFormatbappend OSVersion bappendgetOSVersionbappend sectionCount bappendsectionCountbappend sections nfor Section section getSections bappendsectiontoStringgetPropertySetIDMapbappendbappendreturn btoString
"public int stem(char s[], int len) {if (len < 4) return len;final int origLen = len;len = rule0(s, len);len = rule1(s, len);len = rule2(s, len);len = rule3(s, len);len = rule4(s, len);len = rule5(s, len);len = rule6(s, len);len = rule7(s, len);len = rule8(s, len);len = rule9(s, len);len = rule10(s, len);len = rule11(s, len);len = rule12(s, len);len = rule13(s, len);len = rule14(s, len);len = rule15(s, len);len = rule16(s, len);len = rule17(s, len);len = rule18(s, len);len = rule19(s, len);len = rule20(s, len);if (len == origLen)len = rule21(s, len);return rule22(s, len);}",public int stemchar s int len if len  4 return lenfinal int origLen  lenlen  rule0s lenlen  rule1s lenlen  rule2s lenlen  rule3s lenlen  rule4s lenlen  rule5s lenlen  rule6s lenlen  rule7s lenlen  rule8s lenlen  rule9s lenlen  rule10s lenlen  rule11s lenlen  rule12s lenlen  rule13s lenlen  rule14s lenlen  rule15s lenlen  rule16s lenlen  rule17s lenlen  rule18s lenlen  rule19s lenlen  rule20s lenif len  origLenlen  rule21s lenreturn rule22s len
public CreateStreamingURLResult createStreamingURL(CreateStreamingURLRequest request) {request = beforeClientExecution(request);return executeCreateStreamingURL(request);},public CreateStreamingURLResult createStreamingURLCreateStreamingURLRequest request request  beforeClientExecutionrequestreturn executeCreateStreamingURLrequest
"public IBSimilarity(Distribution distribution,Lambda lambda,Normalization normalization) {this.distribution = distribution;this.lambda = lambda;this.normalization = normalization;}",public IBSimilarityDistribution distributionLambda lambdaNormalization normalization thisdistribution  distributionthislambda  lambdathisnormalization  normalization
public GetBatchPredictionResult getBatchPrediction(GetBatchPredictionRequest request) {request = beforeClientExecution(request);return executeGetBatchPrediction(request);},public GetBatchPredictionResult getBatchPredictionGetBatchPredictionRequest request request  beforeClientExecutionrequestreturn executeGetBatchPredictionrequest
public StartInstancesResult startInstances(StartInstancesRequest request) {request = beforeClientExecution(request);return executeStartInstances(request);},public StartInstancesResult startInstancesStartInstancesRequest request request  beforeClientExecutionrequestreturn executeStartInstancesrequest
public DescribeLoadBalancerAttributesResult describeLoadBalancerAttributes(DescribeLoadBalancerAttributesRequest request) {request = beforeClientExecution(request);return executeDescribeLoadBalancerAttributes(request);},public DescribeLoadBalancerAttributesResult describeLoadBalancerAttributesDescribeLoadBalancerAttributesRequest request request  beforeClientExecutionrequestreturn executeDescribeLoadBalancerAttributesrequest
"public Filter(int type, long size, InputStream in) {this.type = type;this.size = size;this.in = in;}",public Filterint type long size InputStream in thistype  typethissize  sizethisin  in
"public String getBaseForm() {return dictionary.getBaseForm(wordId, surfaceForm, offset, length);}",public String getBaseForm return dictionarygetBaseFormwordId surfaceForm offset length
"public Query makeLuceneQueryNoBoost(BasicQueryFactory qf) {if (fieldNames.size() == 1) { return q.makeLuceneQueryFieldNoBoost(fieldNames.get(0), qf);} else { List<SrndQuery> queries = new ArrayList<>();Iterator<String> fni = getFieldNames().listIterator();SrndQuery qc;while (fni.hasNext()) {qc = q.clone();queries.add( new FieldsQuery( qc, fni.next(), fieldOp));}OrQuery oq = new OrQuery(queries,true ,OR_OPERATOR_NAME);return oq.makeLuceneQueryField(null, qf);}}",public Query makeLuceneQueryNoBoostBasicQueryFactory qf if fieldNamessize  1  return qmakeLuceneQueryFieldNoBoostfieldNamesget0 qf else  ListSrndQuery queries  new ArrayListIteratorString fni  getFieldNameslistIteratorSrndQuery qcwhile fnihasNext qc  qclonequeriesadd new FieldsQuery qc fninext fieldOpOrQuery oq  new OrQueryqueriestrue OROPERATORNAMEreturn oqmakeLuceneQueryFieldnull qf
public SetVisibleToAllUsersResult setVisibleToAllUsers(SetVisibleToAllUsersRequest request) {request = beforeClientExecution(request);return executeSetVisibleToAllUsers(request);},public SetVisibleToAllUsersResult setVisibleToAllUsersSetVisibleToAllUsersRequest request request  beforeClientExecutionrequestreturn executeSetVisibleToAllUsersrequest
public GetBotResult getBot(GetBotRequest request) {request = beforeClientExecution(request);return executeGetBot(request);},public GetBotResult getBotGetBotRequest request request  beforeClientExecutionrequestreturn executeGetBotrequest
public UpdateApnsSandboxChannelResult updateApnsSandboxChannel(UpdateApnsSandboxChannelRequest request) {request = beforeClientExecution(request);return executeUpdateApnsSandboxChannel(request);},public UpdateApnsSandboxChannelResult updateApnsSandboxChannelUpdateApnsSandboxChannelRequest request request  beforeClientExecutionrequestreturn executeUpdateApnsSandboxChannelrequest
public CreateRouteResult createRoute(CreateRouteRequest request) {request = beforeClientExecution(request);return executeCreateRoute(request);},public CreateRouteResult createRouteCreateRouteRequest request request  beforeClientExecutionrequestreturn executeCreateRouterequest
"public FreeRefFunction findFunction(String name) {FreeRefFunction func = super.findFunction(name);if (func != null) {int idx = getFunctionIndex(name);_funcMap.put(idx, name);}return func;}",public FreeRefFunction findFunctionString name FreeRefFunction func  superfindFunctionnameif func  null int idx  getFunctionIndexnamefuncMapputidx namereturn func
public boolean atMinValue() {return value == minValue;},public boolean atMinValue return value  minValue
public TerminateInstanceInAutoScalingGroupResult terminateInstanceInAutoScalingGroup(TerminateInstanceInAutoScalingGroupRequest request) {request = beforeClientExecution(request);return executeTerminateInstanceInAutoScalingGroup(request);},public TerminateInstanceInAutoScalingGroupResult terminateInstanceInAutoScalingGroupTerminateInstanceInAutoScalingGroupRequest request request  beforeClientExecutionrequestreturn executeTerminateInstanceInAutoScalingGrouprequest
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[DVAL]\n"");buffer.append(""    .options      = "").append(getOptions()).append('\n');buffer.append(""    .horizPos     = "").append(getHorizontalPos()).append('\n');buffer.append(""    .vertPos      = "").append(getVerticalPos()).append('\n');buffer.append(""    .comboObjectID   = "").append(Integer.toHexString(getObjectID())).append(""\n"");buffer.append(""    .DVRecordsNumber = "").append(Integer.toHexString(getDVRecNo())).append(""\n"");buffer.append(""[/DVAL]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendDVALnbufferappend    options       appendgetOptionsappendnbufferappend    horizPos      appendgetHorizontalPosappendnbufferappend    vertPos       appendgetVerticalPosappendnbufferappend    comboObjectID    appendIntegertoHexStringgetObjectIDappendnbufferappend    DVRecordsNumber  appendIntegertoHexStringgetDVRecNoappendnbufferappendDVALnreturn buffertoString
"public static Token newToken(int ofKind, String image){switch(ofKind){default : return new Token(ofKind, image);}}",public static Token newTokenint ofKind String imageswitchofKinddefault  return new TokenofKind image
"public ATNConfig(ATNState state,int alt,PredictionContext context,SemanticContext semanticContext){this.state = state;this.alt = alt;this.context = context;this.semanticContext = semanticContext;}",public ATNConfigATNState stateint altPredictionContext contextSemanticContext semanticContextthisstate  statethisalt  altthiscontext  contextthissemanticContext  semanticContext
public DataValidationConstraint createFormulaListConstraint(String listFormula) {return DVConstraint.createFormulaListConstraint(listFormula);},public DataValidationConstraint createFormulaListConstraintString listFormula return DVConstraintcreateFormulaListConstraintlistFormula
public GlobalReplicationGroup failoverGlobalReplicationGroup(FailoverGlobalReplicationGroupRequest request) {request = beforeClientExecution(request);return executeFailoverGlobalReplicationGroup(request);},public GlobalReplicationGroup failoverGlobalReplicationGroupFailoverGlobalReplicationGroupRequest request request  beforeClientExecutionrequestreturn executeFailoverGlobalReplicationGrouprequest
public BatchPutAttributesResult batchPutAttributes(BatchPutAttributesRequest request) {request = beforeClientExecution(request);return executeBatchPutAttributes(request);},public BatchPutAttributesResult batchPutAttributesBatchPutAttributesRequest request request  beforeClientExecutionrequestreturn executeBatchPutAttributesrequest
public long get(int index) {final int o = index >>> 1;final int b = index & 1;final int shift = b << 5;return (blocks[o] >>> shift) & 4294967295L;},public long getint index final int o  index  1final int b  index  1final int shift  b  5return blockso  shift  4294967295L
public int execute(StringBuilder buf) {return index;},public int executeStringBuilder buf return index
"public int remove(Object key) {boolean hashedOk;int index, next, hash;int result;Object object;index = next = findIndex(key, keys);if (keys[index] != key) {return -1;}result = values[index];int length = keys.length;while (true) {next = (next + 2) % length;object = keys[next];if (object == null) {break;}hash = getModuloHash(object, length);hashedOk = hash > index;if (next < index) {hashedOk = hashedOk || (hash <= next);} else {hashedOk = hashedOk && (hash <= next);}if (!hashedOk) {keys[index] = object;values[index] = values[next];index = next;}}size--;keys[index] = null;values[index] = -1;return result;}",public int removeObject key boolean hashedOkint index next hashint resultObject objectindex  next  findIndexkey keysif keysindex  key return 1result  valuesindexint length  keyslengthwhile true next  next  2  lengthobject  keysnextif object  null breakhash  getModuloHashobject lengthhashedOk  hash  indexif next  index hashedOk  hashedOk  hash  next else hashedOk  hashedOk  hash  nextif hashedOk keysindex  objectvaluesindex  valuesnextindex  nextsizekeysindex  nullvaluesindex  1return result
"public synchronized void setMaxMergesAndThreads(int maxMergeCount, int maxThreadCount) {if (maxMergeCount == AUTO_DETECT_MERGES_AND_THREADS && maxThreadCount == AUTO_DETECT_MERGES_AND_THREADS) {this.maxMergeCount = AUTO_DETECT_MERGES_AND_THREADS;this.maxThreadCount = AUTO_DETECT_MERGES_AND_THREADS;} else if (maxMergeCount == AUTO_DETECT_MERGES_AND_THREADS) {throw new IllegalArgumentException(""both maxMergeCount and maxThreadCount must be AUTO_DETECT_MERGES_AND_THREADS"");} else if (maxThreadCount == AUTO_DETECT_MERGES_AND_THREADS) {throw new IllegalArgumentException(""both maxMergeCount and maxThreadCount must be AUTO_DETECT_MERGES_AND_THREADS"");} else {if (maxThreadCount < 1) {throw new IllegalArgumentException(""maxThreadCount should be at least 1"");}if (maxMergeCount < 1) {throw new IllegalArgumentException(""maxMergeCount should be at least 1"");}if (maxThreadCount > maxMergeCount) {throw new IllegalArgumentException(""maxThreadCount should be <= maxMergeCount (= "" + maxMergeCount + "")"");}this.maxThreadCount = maxThreadCount;this.maxMergeCount = maxMergeCount;}}",public synchronized void setMaxMergesAndThreadsint maxMergeCount int maxThreadCount if maxMergeCount  AUTODETECTMERGESANDTHREADS  maxThreadCount  AUTODETECTMERGESANDTHREADS thismaxMergeCount  AUTODETECTMERGESANDTHREADSthismaxThreadCount  AUTODETECTMERGESANDTHREADS else if maxMergeCount  AUTODETECTMERGESANDTHREADS throw new IllegalArgumentExceptionboth maxMergeCount and maxThreadCount must be AUTODETECTMERGESANDTHREADS else if maxThreadCount  AUTODETECTMERGESANDTHREADS throw new IllegalArgumentExceptionboth maxMergeCount and maxThreadCount must be AUTODETECTMERGESANDTHREADS else if maxThreadCount  1 throw new IllegalArgumentExceptionmaxThreadCount should be at least 1if maxMergeCount  1 throw new IllegalArgumentExceptionmaxMergeCount should be at least 1if maxThreadCount  maxMergeCount throw new IllegalArgumentExceptionmaxThreadCount should be  maxMergeCount    maxMergeCount  thismaxThreadCount  maxThreadCountthismaxMergeCount  maxMergeCount
"public final DoubleBuffer put(double[] src) {return put(src, 0, src.length);}",public final DoubleBuffer putdouble src return putsrc 0 srclength
public final Collection<Ref> getRefs() {return advertisedRefs.values();},public final CollectionRef getRefs return advertisedRefsvalues
"public DocFreqValueSource(String field, String val, String indexedField, BytesRef indexedBytes) {this.field = field;this.val = val;this.indexedField = indexedField;this.indexedBytes = indexedBytes;}",public DocFreqValueSourceString field String val String indexedField BytesRef indexedBytes thisfield  fieldthisval  valthisindexedField  indexedFieldthisindexedBytes  indexedBytes
"public String getSegmentsFileName() {return IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,"""",lastGeneration);}",public String getSegmentsFileName return IndexFileNamesfileNameFromGenerationIndexFileNamesSEGMENTSlastGeneration
"public Listener(String protocol, Integer loadBalancerPort, Integer instancePort) {setProtocol(protocol);setLoadBalancerPort(loadBalancerPort);setInstancePort(instancePort);}",public ListenerString protocol Integer loadBalancerPort Integer instancePort setProtocolprotocolsetLoadBalancerPortloadBalancerPortsetInstancePortinstancePort
public GetCurrentUserResult getCurrentUser(GetCurrentUserRequest request) {request = beforeClientExecution(request);return executeGetCurrentUser(request);},public GetCurrentUserResult getCurrentUserGetCurrentUserRequest request request  beforeClientExecutionrequestreturn executeGetCurrentUserrequest
"public String toString() {return ""ObjectDirectory["" + getDirectory() + ""]""; }",public String toString return ObjectDirectory  getDirectory   
public IllegalFormatWidthException(int w) {this.w = w;},public IllegalFormatWidthExceptionint w thisw  w
public String toToken() {return this.token;},public String toToken return thistoken
public UpdatePhoneNumberResult updatePhoneNumber(UpdatePhoneNumberRequest request) {request = beforeClientExecution(request);return executeUpdatePhoneNumber(request);},public UpdatePhoneNumberResult updatePhoneNumberUpdatePhoneNumberRequest request request  beforeClientExecutionrequestreturn executeUpdatePhoneNumberrequest
public final IndexableField getField(String name) {for (IndexableField field : fields) {if (field.name().equals(name)) {return field;}}return null;},public final IndexableField getFieldString name for IndexableField field  fields if fieldnameequalsname return fieldreturn null
public DisableDomainTransferLockResult disableDomainTransferLock(DisableDomainTransferLockRequest request) {request = beforeClientExecution(request);return executeDisableDomainTransferLock(request);},public DisableDomainTransferLockResult disableDomainTransferLockDisableDomainTransferLockRequest request request  beforeClientExecutionrequestreturn executeDisableDomainTransferLockrequest
public PrintHeadersRecord clone() {return copy();},public PrintHeadersRecord clone return copy
public UpdateDataSourceResult updateDataSource(UpdateDataSourceRequest request) {request = beforeClientExecution(request);return executeUpdateDataSource(request);},public UpdateDataSourceResult updateDataSourceUpdateDataSourceRequest request request  beforeClientExecutionrequestreturn executeUpdateDataSourcerequest
"public int popMode() {if ( _modeStack.isEmpty() ) throw new EmptyStackException();if ( LexerATNSimulator.debug ) System.out.println(""popMode back to ""+ _modeStack.peek());mode( _modeStack.pop() );return _mode;}",public int popMode if  modeStackisEmpty  throw new EmptyStackExceptionif  LexerATNSimulatordebug  SystemoutprintlnpopMode back to  modeStackpeekmode modeStackpop return mode
"public ExternalSheet getExternalSheet(int externSheetIndex) {ExternalSheet sheet = _iBook.getExternalSheet(externSheetIndex);if (sheet == null) {int localSheetIndex = convertFromExternSheetIndex(externSheetIndex);if (localSheetIndex == -1) {return null;}if (localSheetIndex == -2) {return null;}String sheetName = getSheetName(localSheetIndex);int lastLocalSheetIndex = _iBook.getLastSheetIndexFromExternSheetIndex(externSheetIndex);if (lastLocalSheetIndex == localSheetIndex) {sheet = new ExternalSheet(null, sheetName);} else {String lastSheetName = getSheetName(lastLocalSheetIndex);sheet = new ExternalSheetRange(null, sheetName, lastSheetName);}}return sheet;}",public ExternalSheet getExternalSheetint externSheetIndex ExternalSheet sheet  iBookgetExternalSheetexternSheetIndexif sheet  null int localSheetIndex  convertFromExternSheetIndexexternSheetIndexif localSheetIndex  1 return nullif localSheetIndex  2 return nullString sheetName  getSheetNamelocalSheetIndexint lastLocalSheetIndex  iBookgetLastSheetIndexFromExternSheetIndexexternSheetIndexif lastLocalSheetIndex  localSheetIndex sheet  new ExternalSheetnull sheetName else String lastSheetName  getSheetNamelastLocalSheetIndexsheet  new ExternalSheetRangenull sheetName lastSheetNamereturn sheet
public static NoteMap newEmptyMap() {NoteMap r = new NoteMap(null );r.root = new LeafBucket(0);return r;},public static NoteMap newEmptyMap NoteMap r  new NoteMapnull rroot  new LeafBucket0return r
@Override public java.lang.Object[] toArray() {synchronized (mutex) {return c.toArray();}},Override public javalangObject toArray synchronized mutex return ctoArray
public TagCommand setObjectId(RevObject id) {this.id = id;return this;},public TagCommand setObjectIdRevObject id thisid  idreturn this
public static void clear() {cache.clearAll();},public static void clear cacheclearAll
"public final int prefixCompare(int[] bs, int p) {int cmp;cmp = NB.compareUInt32(w1, mask(1, bs[p]));if (cmp != 0)return cmp;cmp = NB.compareUInt32(w2, mask(2, bs[p + 1]));if (cmp != 0)return cmp;cmp = NB.compareUInt32(w3, mask(3, bs[p + 2]));if (cmp != 0)return cmp;cmp = NB.compareUInt32(w4, mask(4, bs[p + 3]));if (cmp != 0)return cmp;return NB.compareUInt32(w5, mask(5, bs[p + 4]));}",public final int prefixCompareint bs int p int cmpcmp  NBcompareUInt32w1 mask1 bspif cmp  0return cmpcmp  NBcompareUInt32w2 mask2 bsp  1if cmp  0return cmpcmp  NBcompareUInt32w3 mask3 bsp  2if cmp  0return cmpcmp  NBcompareUInt32w4 mask4 bsp  3if cmp  0return cmpreturn NBcompareUInt32w5 mask5 bsp  4
"public LongBuffer put(long[] src, int srcOffset, int longCount) {byteBuffer.limit(limit * SizeOf.LONG);byteBuffer.position(position * SizeOf.LONG);if (byteBuffer instanceof ReadWriteDirectByteBuffer) {((ReadWriteDirectByteBuffer) byteBuffer).put(src, srcOffset, longCount);} else {((ReadWriteHeapByteBuffer) byteBuffer).put(src, srcOffset, longCount);}this.position += longCount;return this;}",public LongBuffer putlong src int srcOffset int longCount byteBufferlimitlimit  SizeOfLONGbyteBufferpositionposition  SizeOfLONGif byteBuffer instanceof ReadWriteDirectByteBuffer ReadWriteDirectByteBuffer byteBufferputsrc srcOffset longCount else ReadWriteHeapByteBuffer byteBufferputsrc srcOffset longCountthisposition  longCountreturn this
"public MoPenDeleteGroupRequest() {super(""MoPen"", ""2018-02-11"", ""MoPenDeleteGroup"", ""mopen"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public MoPenDeleteGroupRequest superMoPen 20180211 MoPenDeleteGroup mopensetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public ApplyResult addUpdatedFile(File f) {updatedFiles.add(f);return this;},public ApplyResult addUpdatedFileFile f updatedFilesaddfreturn this
"public T insertWithOverflow(T element) {if (size < maxSize) {add(element);return null;} else if (size > 0 && !lessThan(element, heap[1])) {T ret = heap[1];heap[1] = element;updateTop();return ret;} else {return element;}}",public T insertWithOverflowT element if size  maxSize addelementreturn null else if size  0  lessThanelement heap1 T ret  heap1heap1  elementupdateTopreturn ret else return element
public boolean contains(Object object) {Iterator<E> it = iterator();if (object != null) {while (it.hasNext()) {if (object.equals(it.next())) {return true;}}} else {while (it.hasNext()) {if (it.next() == null) {return true;}}}return false;},public boolean containsObject object IteratorE it  iteratorif object  null while ithasNext if objectequalsitnext return true else while ithasNext if itnext  null return truereturn false
public UploadDocumentsResult uploadDocuments(UploadDocumentsRequest request) {request = beforeClientExecution(request);return executeUploadDocuments(request);},public UploadDocumentsResult uploadDocumentsUploadDocumentsRequest request request  beforeClientExecutionrequestreturn executeUploadDocumentsrequest
public String getAccessKeyId() {return legacyCredential.getAccessKeyId();},public String getAccessKeyId return legacyCredentialgetAccessKeyId
"public static String toHex(String value) {return (value == null || value.length() == 0)? ""[]"": toHex(value.getBytes(LocaleUtil.CHARSET_1252));}",public static String toHexString value return value  null  valuelength  0  toHexvaluegetBytesLocaleUtilCHARSET1252
"public String getText(Token start, Token stop) {if ( start!=null && stop!=null ) {return getText(Interval.of(start.getTokenIndex(), stop.getTokenIndex()));}return """";}",public String getTextToken start Token stop if  startnull  stopnull  return getTextIntervalofstartgetTokenIndex stopgetTokenIndexreturn 
"public static ValueVector createColumnVector(TwoDEval tableArray, int relativeColumnIndex) {return new ColumnVector(tableArray, relativeColumnIndex);}",public static ValueVector createColumnVectorTwoDEval tableArray int relativeColumnIndex return new ColumnVectortableArray relativeColumnIndex
public AcceptDomainTransferFromAnotherAwsAccountResult acceptDomainTransferFromAnotherAwsAccount(AcceptDomainTransferFromAnotherAwsAccountRequest request) {request = beforeClientExecution(request);return executeAcceptDomainTransferFromAnotherAwsAccount(request);},public AcceptDomainTransferFromAnotherAwsAccountResult acceptDomainTransferFromAnotherAwsAccountAcceptDomainTransferFromAnotherAwsAccountRequest request request  beforeClientExecutionrequestreturn executeAcceptDomainTransferFromAnotherAwsAccountrequest
public StartDeviceSyncResult startDeviceSync(StartDeviceSyncRequest request) {request = beforeClientExecution(request);return executeStartDeviceSync(request);},public StartDeviceSyncResult startDeviceSyncStartDeviceSyncRequest request request  beforeClientExecutionrequestreturn executeStartDeviceSyncrequest
@Override public boolean containsKey(Object key) {return isInBounds(key) && TreeMap.this.containsKey(key);},Override public boolean containsKeyObject key return isInBoundskey  TreeMapthiscontainsKeykey
public static int idealObjectArraySize(int need) {return idealByteArraySize(need * 4) / 4;},public static int idealObjectArraySizeint need return idealByteArraySizeneed  4  4
public DescribeWorkspacesResult describeWorkspaces() {return describeWorkspaces(new DescribeWorkspacesRequest());},public DescribeWorkspacesResult describeWorkspaces return describeWorkspacesnew DescribeWorkspacesRequest
"@Override public Iterator<Entry<K, V>> iterator() {return new EntryIterator();}",Override public IteratorEntryK V iterator return new EntryIterator
public GlobalCluster removeFromGlobalCluster(RemoveFromGlobalClusterRequest request) {request = beforeClientExecution(request);return executeRemoveFromGlobalCluster(request);},public GlobalCluster removeFromGlobalClusterRemoveFromGlobalClusterRequest request request  beforeClientExecutionrequestreturn executeRemoveFromGlobalClusterrequest
"public Map<String, MergeResult<? extends Sequence>> getMergeResults() {return mergeResults;}",public MapString MergeResult extends Sequence getMergeResults return mergeResults
"public static final int parseTimeZoneOffset(byte[] b, int ptr) {return parseTimeZoneOffset(b, ptr, null);}",public static final int parseTimeZoneOffsetbyte b int ptr return parseTimeZoneOffsetb ptr null
public String toString() {synchronized (Hashtable.this) {return super.toString();}},public String toString synchronized Hashtablethis return supertoString
public void reset() throws IOException {in.reset();lineNumber = markedLineNumber;lastChar = markedLastChar;},public void reset throws IOException inresetlineNumber  markedLineNumberlastChar  markedLastChar
public FS newInstance() {return new FS_Win32(this);},public FS newInstance return new FSWin32this
"public byte[] toByteArray() {if (buf != null) {byte[] r = new byte[ptr];System.arraycopy(buf, 0, r, 0, ptr);return r;}try {return overflowBuffer.toByteArray();} catch (IOException err) {throw new RuntimeException(err);}}",public byte toByteArray if buf  null byte r  new byteptrSystemarraycopybuf 0 r 0 ptrreturn rtry return overflowBuffertoByteArray catch IOException err throw new RuntimeExceptionerr
"public AreaEval offset(int relFirstRowIx, int relLastRowIx, int relFirstColIx, int relLastColIx) {AreaI area = new OffsetArea(getFirstRow(), getFirstColumn(),relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);return new LazyAreaEval(area, _evaluator);}",public AreaEval offsetint relFirstRowIx int relLastRowIx int relFirstColIx int relLastColIx AreaI area  new OffsetAreagetFirstRow getFirstColumnrelFirstRowIx relLastRowIx relFirstColIx relLastColIxreturn new LazyAreaEvalarea evaluator
public TerminateJobFlowsResult terminateJobFlows(TerminateJobFlowsRequest request) {request = beforeClientExecution(request);return executeTerminateJobFlows(request);},public TerminateJobFlowsResult terminateJobFlowsTerminateJobFlowsRequest request request  beforeClientExecutionrequestreturn executeTerminateJobFlowsrequest
public CreateTopicRequest(String name) {setName(name);},public CreateTopicRequestString name setNamename
public void freeBefore(int pos) {final int toFree = count - (nextPos - pos);assert toFree >= 0;assert toFree <= count;int index = nextWrite - count;if (index < 0) {index += positions.length;}for(int i=0;i<toFree;i++) {if (index == positions.length) {index = 0;}positions[index].reset();index++;}count -= toFree;},public void freeBeforeint pos final int toFree  count  nextPos  posassert toFree  0assert toFree  countint index  nextWrite  countif index  0 index  positionslengthforint i0itoFreei if index  positionslength index  0positionsindexresetindexcount  toFree
"public LengthFilter create(TokenStream input) {final LengthFilter filter = new LengthFilter(input,min,max);return filter;}",public LengthFilter createTokenStream input final LengthFilter filter  new LengthFilterinputminmaxreturn filter
"public StandardQueryParser() {super(new StandardQueryConfigHandler(), new StandardSyntaxParser(),new StandardQueryNodeProcessorPipeline(null),new StandardQueryTreeBuilder());setEnablePositionIncrements(true);}",public StandardQueryParser supernew StandardQueryConfigHandler new StandardSyntaxParsernew StandardQueryNodeProcessorPipelinenullnew StandardQueryTreeBuildersetEnablePositionIncrementstrue
"public GetUserSourceRepoRefListRequest() {super(""cr"", ""2016-06-07"", ""GetUserSourceRepoRefList"", ""cr"");setUriPattern(""/users/sourceAccount/[SourceAccountId]/repos/[SourceRepoNamespace]/[SourceRepoName]/refs"");setMethod(MethodType.GET);}",public GetUserSourceRepoRefListRequest supercr 20160607 GetUserSourceRepoRefList crsetUriPatternuserssourceAccountSourceAccountIdreposSourceRepoNamespaceSourceRepoNamerefssetMethodMethodTypeGET
"public static LongBuffer wrap(long[] array, int start, int longCount) {Arrays.checkOffsetAndCount(array.length, start, longCount);LongBuffer buf = new ReadWriteLongArrayBuffer(array);buf.position = start;buf.limit = start + longCount;return buf;}",public static LongBuffer wraplong array int start int longCount ArrayscheckOffsetAndCountarraylength start longCountLongBuffer buf  new ReadWriteLongArrayBufferarraybufposition  startbuflimit  start  longCountreturn buf
"public UpperCaseFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public UpperCaseFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public ListNotesCommand notesList() {return new ListNotesCommand(repo);},public ListNotesCommand notesList return new ListNotesCommandrepo
public boolean isMissingNewlineAtEnd() {final int end = lines.get(lines.size() - 1);if (end == 0)return true;return content[end - 1] != '\n';},public boolean isMissingNewlineAtEnd final int end  linesgetlinessize  1if end  0return truereturn contentend  1  n
public CreateDashboardResult createDashboard(CreateDashboardRequest request) {request = beforeClientExecution(request);return executeCreateDashboard(request);},public CreateDashboardResult createDashboardCreateDashboardRequest request request  beforeClientExecutionrequestreturn executeCreateDashboardrequest
"public void write(String str, int offset, int count) {write(str.substring(offset, offset + count).toCharArray());}",public void writeString str int offset int count writestrsubstringoffset offset  counttoCharArray
"public UpdateNamespaceAuthorizationRequest() {super(""cr"", ""2016-06-07"", ""UpdateNamespaceAuthorization"", ""cr"");setUriPattern(""/namespace/[Namespace]/authorizations/[AuthorizeId]"");setMethod(MethodType.POST);}",public UpdateNamespaceAuthorizationRequest supercr 20160607 UpdateNamespaceAuthorization crsetUriPatternnamespaceNamespaceauthorizationsAuthorizeIdsetMethodMethodTypePOST
public DescribeStreamResult describeStream(DescribeStreamRequest request) {request = beforeClientExecution(request);return executeDescribeStream(request);},public DescribeStreamResult describeStreamDescribeStreamRequest request request  beforeClientExecutionrequestreturn executeDescribeStreamrequest
public void mark(int markLimit) throws IOException {if (markLimit < 0) {throw new IllegalArgumentException();}synchronized (lock) {checkNotClosed();this.markLimit = markLimit;mark = pos;}},public void markint markLimit throws IOException if markLimit  0 throw new IllegalArgumentExceptionsynchronized lock checkNotClosedthismarkLimit  markLimitmark  pos
"public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long byte0 = blocks[blocksOffset++] & 0xFF;final long byte1 = blocks[blocksOffset++] & 0xFF;final long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 16) | (byte1 << 8) | byte2;}}",public void decodebyte blocks int blocksOffset long values int valuesOffset int iterations for int i  0 i  iterations i final long byte0  blocksblocksOffset  0xFFfinal long byte1  blocksblocksOffset  0xFFfinal long byte2  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  16  byte1  8  byte2
"public String toString() {return String.format(""channel(%d)"", channel);}",public String toString return Stringformatchanneld channel
"public String getName() {int separatorIndex = path.lastIndexOf(separator);return (separatorIndex < 0) ? path : path.substring(separatorIndex + 1, path.length());}",public String getName int separatorIndex  pathlastIndexOfseparatorreturn separatorIndex  0  path  pathsubstringseparatorIndex  1 pathlength
public TestInvokeMethodResult testInvokeMethod(TestInvokeMethodRequest request) {request = beforeClientExecution(request);return executeTestInvokeMethod(request);},public TestInvokeMethodResult testInvokeMethodTestInvokeMethodRequest request request  beforeClientExecutionrequestreturn executeTestInvokeMethodrequest
public final void clearAttributes() {for (State state = getCurrentState(); state != null; state = state.next) {state.attribute.clear();}},public final void clearAttributes for State state  getCurrentState state  null state  statenext stateattributeclear
public ListRecipesResult listRecipes(ListRecipesRequest request) {request = beforeClientExecution(request);return executeListRecipes(request);},public ListRecipesResult listRecipesListRecipesRequest request request  beforeClientExecutionrequestreturn executeListRecipesrequest
public void setText(CharacterIterator newText) {text = newText;text.setIndex(text.getBeginIndex());currentSentence = 0;Span[] spans = sentenceOp.splitSentences(characterIteratorToString());sentenceStarts = new int[spans.length];for (int i = 0; i < spans.length; ++i) {sentenceStarts[i] = spans[i].getStart() + text.getBeginIndex();}},public void setTextCharacterIterator newText text  newTexttextsetIndextextgetBeginIndexcurrentSentence  0Span spans  sentenceOpsplitSentencescharacterIteratorToStringsentenceStarts  new intspanslengthfor int i  0 i  spanslength i sentenceStartsi  spansigetStart  textgetBeginIndex
"public String formatWithConflicts(String message,List<String> conflictingPaths) {StringBuilder sb = new StringBuilder();String[] lines = message.split(""\n""); int firstFooterLine = ChangeIdUtil.indexOfFirstFooterLine(lines);for (int i = 0; i < firstFooterLine; i++)sb.append(lines[i]).append('\n');if (firstFooterLine == lines.length && message.length() != 0)sb.append('\n');addConflictsMessage(conflictingPaths, sb);if (firstFooterLine < lines.length)sb.append('\n');for (int i = firstFooterLine; i < lines.length; i++)sb.append(lines[i]).append('\n');return sb.toString();}",public String formatWithConflictsString messageListString conflictingPaths StringBuilder sb  new StringBuilderString lines  messagesplitn int firstFooterLine  ChangeIdUtilindexOfFirstFooterLinelinesfor int i  0 i  firstFooterLine isbappendlinesiappendnif firstFooterLine  lineslength  messagelength  0sbappendnaddConflictsMessageconflictingPaths sbif firstFooterLine  lineslengthsbappendnfor int i  firstFooterLine i  lineslength isbappendlinesiappendnreturn sbtoString
public boolean get(int index) {return bits.get(index);},public boolean getint index return bitsgetindex
public DescribeTaskSetsResult describeTaskSets(DescribeTaskSetsRequest request) {request = beforeClientExecution(request);return executeDescribeTaskSets(request);},public DescribeTaskSetsResult describeTaskSetsDescribeTaskSetsRequest request request  beforeClientExecutionrequestreturn executeDescribeTaskSetsrequest
"public void add(FormulaRecordAggregate agg) {if (_numberOfFormulas == 0) {if (_firstCell.getRow() != agg.getRow() || _firstCell.getCol() != agg.getColumn()) {throw new IllegalStateException(""shared formula coding error: ""+_firstCell.getCol()+'/'+_firstCell.getRow()+"" != ""+agg.getColumn()+'/'+agg.getRow());}}if (_numberOfFormulas >= _frAggs.length) {throw new RuntimeException(""Too many formula records for shared formula group"");}_frAggs[_numberOfFormulas++] = agg;}",public void addFormulaRecordAggregate agg if numberOfFormulas  0 if firstCellgetRow  agggetRow  firstCellgetCol  agggetColumn throw new IllegalStateExceptionshared formula coding error firstCellgetColfirstCellgetRow  agggetColumnagggetRowif numberOfFormulas  frAggslength throw new RuntimeExceptionToo many formula records for shared formula groupfrAggsnumberOfFormulas  agg
public PacketLineOutRefAdvertiser(PacketLineOut out) {pckOut = out;},public PacketLineOutRefAdvertiserPacketLineOut out pckOut  out
public UpdateDataSetResult updateDataSet(UpdateDataSetRequest request) {request = beforeClientExecution(request);return executeUpdateDataSet(request);},public UpdateDataSetResult updateDataSetUpdateDataSetRequest request request  beforeClientExecutionrequestreturn executeUpdateDataSetrequest
public ListKeyPhrasesDetectionJobsResult listKeyPhrasesDetectionJobs(ListKeyPhrasesDetectionJobsRequest request) {request = beforeClientExecution(request);return executeListKeyPhrasesDetectionJobs(request);},public ListKeyPhrasesDetectionJobsResult listKeyPhrasesDetectionJobsListKeyPhrasesDetectionJobsRequest request request  beforeClientExecutionrequestreturn executeListKeyPhrasesDetectionJobsrequest
@Override public void clear() {Impl.this.clear();},Override public void clear Implthisclear
"public VaultNotificationConfig(String sNSTopic, java.util.List<String> events) {setSNSTopic(sNSTopic);setEvents(events);}",public VaultNotificationConfigString sNSTopic javautilListString events setSNSTopicsNSTopicsetEventsevents
"public String[] lemmatize(String[] words, String[] postags) {String[] lemmas = null;String[] maxEntLemmas = null;if (dictionaryLemmatizer != null) {lemmas = dictionaryLemmatizer.lemmatize(words, postags);for (int i = 0; i < lemmas.length; ++i) {if (lemmas[i].equals(""O"")) {   if (lemmatizerME != null) {  if (maxEntLemmas == null) {maxEntLemmas = lemmatizerME.lemmatize(words, postags);}if (""_"".equals(maxEntLemmas[i])) {lemmas[i] = words[i];    } else {lemmas[i] = maxEntLemmas[i];}} else {                     lemmas[i] = words[i];      }}}} else {                           maxEntLemmas = lemmatizerME.lemmatize(words, postags);for (int i = 0 ; i < maxEntLemmas.length ; ++i) {if (""_"".equals(maxEntLemmas[i])) {maxEntLemmas[i] = words[i];  }}lemmas = maxEntLemmas;}return lemmas;}",public String lemmatizeString words String postags String lemmas  nullString maxEntLemmas  nullif dictionaryLemmatizer  null lemmas  dictionaryLemmatizerlemmatizewords postagsfor int i  0 i  lemmaslength i if lemmasiequalsO    if lemmatizerME  null   if maxEntLemmas  null maxEntLemmas  lemmatizerMElemmatizewords postagsif equalsmaxEntLemmasi lemmasi  wordsi     else lemmasi  maxEntLemmasi else                      lemmasi  wordsi       else                            maxEntLemmas  lemmatizerMElemmatizewords postagsfor int i  0  i  maxEntLemmaslength  i if equalsmaxEntLemmasi maxEntLemmasi  wordsi  lemmas  maxEntLemmasreturn lemmas
public PaletteRecord(RecordInputStream in) {int field_1_numcolors = in.readShort();_colors.ensureCapacity(field_1_numcolors);for (int k = 0; k < field_1_numcolors; k++) {_colors.add(new PColor(in));}},public PaletteRecordRecordInputStream in int field1numcolors  inreadShortcolorsensureCapacityfield1numcolorsfor int k  0 k  field1numcolors k colorsaddnew PColorin
"public GetJobOutputRequest(String accountId, String vaultName, String jobId, String range) {setAccountId(accountId);setVaultName(vaultName);setJobId(jobId);setRange(range);}",public GetJobOutputRequestString accountId String vaultName String jobId String range setAccountIdaccountIdsetVaultNamevaultNamesetJobIdjobIdsetRangerange
public ISigner getSigner() {return null;},public ISigner getSigner return null
public static int codePointCount(BytesRef utf8) {int pos = utf8.offset;final int limit = pos + utf8.length;final byte[] bytes = utf8.bytes;int codePointCount = 0;for (; pos < limit; codePointCount++) {int v = bytes[pos] & 0xFF;if (v <    0x80) { pos += 1; continue; }if (v >=   0xc0) {if (v <  0xe0) { pos += 2; continue; }if (v <  0xf0) { pos += 3; continue; }if (v <  0xf8) { pos += 4; continue; }}throw new IllegalArgumentException();}if (pos > limit) throw new IllegalArgumentException();return codePointCount;},public static int codePointCountBytesRef utf8 int pos  utf8offsetfinal int limit  pos  utf8lengthfinal byte bytes  utf8bytesint codePointCount  0for  pos  limit codePointCount int v  bytespos  0xFFif v     0x80  pos  1 continue if v    0xc0 if v   0xe0  pos  2 continue if v   0xf0  pos  3 continue if v   0xf8  pos  4 continue throw new IllegalArgumentExceptionif pos  limit throw new IllegalArgumentExceptionreturn codePointCount
public static Class<? extends Record> getRecordClass(int sid) {I_RecordCreator rc = _recordCreatorsById.get(Integer.valueOf(sid));if (rc == null) {return null;}return rc.getRecordClass();},public static Class extends Record getRecordClassint sid IRecordCreator rc  recordCreatorsByIdgetIntegervalueOfsidif rc  null return nullreturn rcgetRecordClass
"public WriteAccessRecord(RecordInputStream in) {if (in.remaining() > DATA_SIZE) {throw new RecordFormatException(""Expected data size ("" + DATA_SIZE + "") but got (""+ in.remaining() + "")"");}int nChars = in.readUShort();int is16BitFlag = in.readUByte();if (nChars > DATA_SIZE || (is16BitFlag & 0xFE) != 0) {byte[] data = new byte[3 + in.remaining()];LittleEndian.putUShort(data, 0, nChars);LittleEndian.putByte(data, 2, is16BitFlag);in.readFully(data, 3, data.length-3);String rawValue = new String(data, StringUtil.UTF8);setUsername(rawValue.trim());return;}String rawText;if ((is16BitFlag & 0x01) == 0x00) {rawText = StringUtil.readCompressedUnicode(in, nChars);} else {rawText = StringUtil.readUnicodeLE(in, nChars);}field_1_username = rawText.trim();int padSize = in.remaining();while (padSize > 0) {in.readUByte();padSize--;}}",public WriteAccessRecordRecordInputStream in if inremaining  DATASIZE throw new RecordFormatExceptionExpected data size   DATASIZE   but got  inremaining  int nChars  inreadUShortint is16BitFlag  inreadUByteif nChars  DATASIZE  is16BitFlag  0xFE  0 byte data  new byte3  inremainingLittleEndianputUShortdata 0 nCharsLittleEndianputBytedata 2 is16BitFlaginreadFullydata 3 datalength3String rawValue  new Stringdata StringUtilUTF8setUsernamerawValuetrimreturnString rawTextif is16BitFlag  0x01  0x00 rawText  StringUtilreadCompressedUnicodein nChars else rawText  StringUtilreadUnicodeLEin nCharsfield1username  rawTexttrimint padSize  inremainingwhile padSize  0 inreadUBytepadSize
public FontBasisRecord(RecordInputStream in){field_1_xBasis                 = in.readShort();field_2_yBasis                 = in.readShort();field_3_heightBasis            = in.readShort();field_4_scale                  = in.readShort();field_5_indexToFontTable       = in.readShort();},public FontBasisRecordRecordInputStream infield1xBasis                  inreadShortfield2yBasis                  inreadShortfield3heightBasis             inreadShortfield4scale                   inreadShortfield5indexToFontTable        inreadShort
public String encodeText(String originalText) {return originalText;},public String encodeTextString originalText return originalText
public PathEdit(String entryPath) {path = Constants.encode(entryPath);},public PathEditString entryPath path  ConstantsencodeentryPath
"public boolean add(char[] text) {return map.put(text, PLACEHOLDER) == null;}",public boolean addchar text return mapputtext PLACEHOLDER  null
public ResolveAliasResult resolveAlias(ResolveAliasRequest request) {request = beforeClientExecution(request);return executeResolveAlias(request);},public ResolveAliasResult resolveAliasResolveAliasRequest request request  beforeClientExecutionrequestreturn executeResolveAliasrequest
public TokenStream create(TokenStream input) {return new GreekStemFilter(input);},public TokenStream createTokenStream input return new GreekStemFilterinput
public DescribeCacheSecurityGroupsRequest(String cacheSecurityGroupName) {setCacheSecurityGroupName(cacheSecurityGroupName);},public DescribeCacheSecurityGroupsRequestString cacheSecurityGroupName setCacheSecurityGroupNamecacheSecurityGroupName
"public void readFully(byte[] buf, int off, int len) {if (shouldSkipEncryptionOnCurrentRecord) {readPlain(buf, off, buf.length);} else {ccis.readFully(buf, off, len);}}",public void readFullybyte buf int off int len if shouldSkipEncryptionOnCurrentRecord readPlainbuf off buflength else ccisreadFullybuf off len
"public static byte[] copyOf(byte[] original, int newLength) {if (newLength < 0) {throw new NegativeArraySizeException();}return copyOfRange(original, 0, newLength);}",public static byte copyOfbyte original int newLength if newLength  0 throw new NegativeArraySizeExceptionreturn copyOfRangeoriginal 0 newLength
public DeleteDomainNameResult deleteDomainName(DeleteDomainNameRequest request) {request = beforeClientExecution(request);return executeDeleteDomainName(request);},public DeleteDomainNameResult deleteDomainNameDeleteDomainNameRequest request request  beforeClientExecutionrequestreturn executeDeleteDomainNamerequest
public GlobalReplicationGroup decreaseNodeGroupsInGlobalReplicationGroup(DecreaseNodeGroupsInGlobalReplicationGroupRequest request) {request = beforeClientExecution(request);return executeDecreaseNodeGroupsInGlobalReplicationGroup(request);},public GlobalReplicationGroup decreaseNodeGroupsInGlobalReplicationGroupDecreaseNodeGroupsInGlobalReplicationGroupRequest request request  beforeClientExecutionrequestreturn executeDecreaseNodeGroupsInGlobalReplicationGrouprequest
"public SelectRequest(String selectExpression, Boolean consistentRead) {setSelectExpression(selectExpression);setConsistentRead(consistentRead);}",public SelectRequestString selectExpression Boolean consistentRead setSelectExpressionselectExpressionsetConsistentReadconsistentRead
public SubmoduleAddCommand setURI(String uri) {this.uri = uri;return this;},public SubmoduleAddCommand setURIString uri thisuri  urireturn this
public PutRestApiResult putRestApi(PutRestApiRequest request) {request = beforeClientExecution(request);return executePutRestApi(request);},public PutRestApiResult putRestApiPutRestApiRequest request request  beforeClientExecutionrequestreturn executePutRestApirequest
"public Ptg get3DReferencePtg(AreaReference areaRef, SheetIdentifier sheet) {int extIx = getSheetExtIx(sheet);return new Area3DPtg(areaRef, extIx);}",public Ptg get3DReferencePtgAreaReference areaRef SheetIdentifier sheet int extIx  getSheetExtIxsheetreturn new Area3DPtgareaRef extIx
public CreateRequestValidatorResult createRequestValidator(CreateRequestValidatorRequest request) {request = beforeClientExecution(request);return executeCreateRequestValidator(request);},public CreateRequestValidatorResult createRequestValidatorCreateRequestValidatorRequest request request  beforeClientExecutionrequestreturn executeCreateRequestValidatorrequest
"public ByteBuffer duplicate() {return copy(this, mark);}",public ByteBuffer duplicate return copythis mark
public void setPackedGitWindowSize(int newSize) {packedGitWindowSize = newSize;},public void setPackedGitWindowSizeint newSize packedGitWindowSize  newSize
public DisassociateMembershipResult disassociateMembership(DisassociateMembershipRequest request) {request = beforeClientExecution(request);return executeDisassociateMembership(request);},public DisassociateMembershipResult disassociateMembershipDisassociateMembershipRequest request request  beforeClientExecutionrequestreturn executeDisassociateMembershiprequest
"public void parse(Reader in) throws IOException, ParseException {LineNumberReader br = new LineNumberReader(in);try {String line = null;String lastSynSetID = """";CharsRef synset[] = new CharsRef[8];int synsetSize = 0;while ((line = br.readLine()) != null) {String synSetID = line.substring(2, 11);if (!synSetID.equals(lastSynSetID)) {addInternal(synset, synsetSize);synsetSize = 0;}synset = ArrayUtil.grow(synset, synsetSize + 1);synset[synsetSize] = parseSynonym(line, new CharsRefBuilder());synsetSize++;lastSynSetID = synSetID;}addInternal(synset, synsetSize);} catch (IllegalArgumentException e) {ParseException ex = new ParseException(""Invalid synonym rule at line "" + br.getLineNumber(), 0);ex.initCause(e);throw ex;} finally {br.close();}}",public void parseReader in throws IOException ParseException LineNumberReader br  new LineNumberReaderintry String line  nullString lastSynSetID  CharsRef synset  new CharsRef8int synsetSize  0while line  brreadLine  null String synSetID  linesubstring2 11if synSetIDequalslastSynSetID addInternalsynset synsetSizesynsetSize  0synset  ArrayUtilgrowsynset synsetSize  1synsetsynsetSize  parseSynonymline new CharsRefBuildersynsetSizelastSynSetID  synSetIDaddInternalsynset synsetSize catch IllegalArgumentException e ParseException ex  new ParseExceptionInvalid synonym rule at line   brgetLineNumber 0exinitCauseethrow ex finally brclose
public String[] list() {return listImpl(path);},public String list return listImplpath
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[ENDOBJECT]\n"");buffer.append(""    .rt         ="").append(HexDump.shortToHex(rt)).append('\n');buffer.append(""    .grbitFrt   ="").append(HexDump.shortToHex(grbitFrt)).append('\n');buffer.append(""    .iObjectKind="").append(HexDump.shortToHex(iObjectKind)).append('\n');buffer.append(""    .reserved   ="").append(HexDump.toHex(reserved)).append('\n');buffer.append(""[/ENDOBJECT]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendENDOBJECTnbufferappend    rt         appendHexDumpshortToHexrtappendnbufferappend    grbitFrt   appendHexDumpshortToHexgrbitFrtappendnbufferappend    iObjectKindappendHexDumpshortToHexiObjectKindappendnbufferappend    reserved   appendHexDumptoHexreservedappendnbufferappendENDOBJECTnreturn buffertoString
public static final RevFilter after(Date ts) {return after(ts.getTime());},public static final RevFilter afterDate ts return aftertsgetTime
public static Element getFirstChildElement(Element element) {for (Node kid = element.getFirstChild(); kid != null; kid = kid.getNextSibling()) {if (kid.getNodeType() == Node.ELEMENT_NODE) {return (Element) kid;}}return null;},public static Element getFirstChildElementElement element for Node kid  elementgetFirstChild kid  null kid  kidgetNextSibling if kidgetNodeType  NodeELEMENTNODE return Element kidreturn null
@Override public boolean add(E object) {synchronized (mutex) {return c.add(object);}},Override public boolean addE object synchronized mutex return caddobject
public LongMap() {table = createArray(64);growAt = (int) (table.length * LOAD_FACTOR);},public LongMap table  createArray64growAt  int tablelength  LOADFACTOR
public ClaimGameServerResult claimGameServer(ClaimGameServerRequest request) {request = beforeClientExecution(request);return executeClaimGameServer(request);},public ClaimGameServerResult claimGameServerClaimGameServerRequest request request  beforeClientExecutionrequestreturn executeClaimGameServerrequest
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval venumerator, ValueEval vedenominator) {double enumerator = 0;try {enumerator = OperandResolver.coerceValueToDouble(venumerator);} catch (EvaluationException e) {return ErrorEval.VALUE_INVALID;}double denominator = 0;try {denominator = OperandResolver.coerceValueToDouble(vedenominator);} catch (EvaluationException e) {return ErrorEval.VALUE_INVALID;}if (denominator == 0) {return ErrorEval.DIV_ZERO;}return new NumberEval((int)(enumerator / denominator));}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval venumerator ValueEval vedenominator double enumerator  0try enumerator  OperandResolvercoerceValueToDoublevenumerator catch EvaluationException e return ErrorEvalVALUEINVALIDdouble denominator  0try denominator  OperandResolvercoerceValueToDoublevedenominator catch EvaluationException e return ErrorEvalVALUEINVALIDif denominator  0 return ErrorEvalDIVZEROreturn new NumberEvalintenumerator  denominator
"public synchronized V put(K key, V value) {if (value == null) {throw new NullPointerException();}int hash = secondaryHash(key.hashCode());HashtableEntry<K, V>[] tab = table;int index = hash & (tab.length - 1);HashtableEntry<K, V> first = tab[index];for (HashtableEntry<K, V> e = first; e != null; e = e.next) {if (e.hash == hash && key.equals(e.key)) {V oldValue = e.value;e.value = value;return oldValue;}}modCount++;if (size++ > threshold) {rehash();  tab = doubleCapacity();index = hash & (tab.length - 1);first = tab[index];}tab[index] = new HashtableEntry<K, V>(key, value, hash, first);return null;}",public synchronized V putK key V value if value  null throw new NullPointerExceptionint hash  secondaryHashkeyhashCodeHashtableEntryK V tab  tableint index  hash  tablength  1HashtableEntryK V first  tabindexfor HashtableEntryK V e  first e  null e  enext if ehash  hash  keyequalsekey V oldValue  evalueevalue  valuereturn oldValuemodCountif size  threshold rehash  tab  doubleCapacityindex  hash  tablength  1first  tabindextabindex  new HashtableEntryK Vkey value hash firstreturn null
public DescribeAutoScalingNotificationTypesResult describeAutoScalingNotificationTypes(DescribeAutoScalingNotificationTypesRequest request) {request = beforeClientExecution(request);return executeDescribeAutoScalingNotificationTypes(request);},public DescribeAutoScalingNotificationTypesResult describeAutoScalingNotificationTypesDescribeAutoScalingNotificationTypesRequest request request  beforeClientExecutionrequestreturn executeDescribeAutoScalingNotificationTypesrequest
"public ScandinavianFoldingFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public ScandinavianFoldingFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public ContentHandler getContentHandler () {return (theContentHandler == this) ? null : theContentHandler;},public ContentHandler getContentHandler  return theContentHandler  this  null  theContentHandler
"public String toString() {return ""$"";}",public String toString return 
public ListAssessmentRunsResult listAssessmentRuns(ListAssessmentRunsRequest request) {request = beforeClientExecution(request);return executeListAssessmentRuns(request);},public ListAssessmentRunsResult listAssessmentRunsListAssessmentRunsRequest request request  beforeClientExecutionrequestreturn executeListAssessmentRunsrequest
public ShortBuffer compact() {throw new ReadOnlyBufferException();},public ShortBuffer compact throw new ReadOnlyBufferException
public DeleteAssessmentRunResult deleteAssessmentRun(DeleteAssessmentRunRequest request) {request = beforeClientExecution(request);return executeDeleteAssessmentRun(request);},public DeleteAssessmentRunResult deleteAssessmentRunDeleteAssessmentRunRequest request request  beforeClientExecutionrequestreturn executeDeleteAssessmentRunrequest
public GetAppsResult getApps(GetAppsRequest request) {request = beforeClientExecution(request);return executeGetApps(request);},public GetAppsResult getAppsGetAppsRequest request request  beforeClientExecutionrequestreturn executeGetAppsrequest
"public String highlightTerm(String originalText, TokenGroup tokenGroup){if (tokenGroup.getTotalScore() == 0)return originalText;float score = tokenGroup.getTotalScore();if (score == 0){return originalText;}StringBuilder sb = new StringBuilder();sb.append(""<font "");if (highlightForeground){sb.append(""color=\"""");sb.append(getForegroundColorString(score));sb.append(""\"" "");}if (highlightBackground){sb.append(""bgcolor=\"""");sb.append(getBackgroundColorString(score));sb.append(""\"" "");}sb.append("">"");sb.append(originalText);sb.append(""</font>"");return sb.toString();}",public String highlightTermString originalText TokenGroup tokenGroupif tokenGroupgetTotalScore  0return originalTextfloat score  tokenGroupgetTotalScoreif score  0return originalTextStringBuilder sb  new StringBuildersbappendfont if highlightForegroundsbappendcolorsbappendgetForegroundColorStringscoresbappend if highlightBackgroundsbappendbgcolorsbappendgetBackgroundColorStringscoresbappend sbappendsbappendoriginalTextsbappendfontreturn sbtoString
"public PendingTerm(BytesRef term, BlockTermState state) {super(true);this.termBytes = new byte[term.length];System.arraycopy(term.bytes, term.offset, termBytes, 0, term.length);this.state = state;}",public PendingTermBytesRef term BlockTermState state supertruethistermBytes  new bytetermlengthSystemarraycopytermbytes termoffset termBytes 0 termlengththisstate  state
public IntBuffer asReadOnlyBuffer() {IntToByteBufferAdapter buf = new IntToByteBufferAdapter(byteBuffer.asReadOnlyBuffer());buf.limit = limit;buf.position = position;buf.mark = mark;buf.byteBuffer.order = byteBuffer.order;return buf;},public IntBuffer asReadOnlyBuffer IntToByteBufferAdapter buf  new IntToByteBufferAdapterbyteBufferasReadOnlyBufferbuflimit  limitbufposition  positionbufmark  markbufbyteBufferorder  byteBufferorderreturn buf
"public final void addParents(RevCommit c, RevFlag queueControl) {final RevCommit[] pList = c.parents;if (pList == null) {return;}for (int i = 0; i < pList.length; i++) {if (firstParent && i > 0) {break;}add(pList[i], queueControl);}}",public final void addParentsRevCommit c RevFlag queueControl final RevCommit pList  cparentsif pList  null returnfor int i  0 i  pListlength i if firstParent  i  0 breakaddpListi queueControl
public IndicNormalizationFilter(TokenStream input) {super(input);},public IndicNormalizationFilterTokenStream input superinput
public ListTasksResult listTasks(ListTasksRequest request) {request = beforeClientExecution(request);return executeListTasks(request);},public ListTasksResult listTasksListTasksRequest request request  beforeClientExecutionrequestreturn executeListTasksrequest
public ListTemplateAliasesResult listTemplateAliases(ListTemplateAliasesRequest request) {request = beforeClientExecution(request);return executeListTemplateAliases(request);},public ListTemplateAliasesResult listTemplateAliasesListTemplateAliasesRequest request request  beforeClientExecutionrequestreturn executeListTemplateAliasesrequest
public DescribeEventCategoriesResult describeEventCategories() {return describeEventCategories(new DescribeEventCategoriesRequest());},public DescribeEventCategoriesResult describeEventCategories return describeEventCategoriesnew DescribeEventCategoriesRequest
"public static File createTempFile(String prefix, String suffix) throws IOException {return createTempFile(prefix, suffix, null);}",public static File createTempFileString prefix String suffix throws IOException return createTempFileprefix suffix null
"public LabelAndValue(String label, Number value) {this.label = label;this.value = value;}",public LabelAndValueString label Number value thislabel  labelthisvalue  value
"public String getReading(int wordId, char surface[], int off, int len) {return getFeature(wordId, 0);}",public String getReadingint wordId char surface int off int len return getFeaturewordId 0
"public CodepointCountFilter create(TokenStream input) {return new CodepointCountFilter(input, min, max);}",public CodepointCountFilter createTokenStream input return new CodepointCountFilterinput min max
"public String toString() {StringBuilder res = new StringBuilder(task.getName());res.append("" "");res.append(count);res.append("" "");res.append(elapsed);return res.toString();}",public String toString StringBuilder res  new StringBuildertaskgetNameresappend resappendcountresappend resappendelapsedreturn restoString
"public void build(InputIterator iterator) throws IOException {if (iterator.hasPayloads()) {throw new IllegalArgumentException(""this suggester doesn't support payloads"");}if (iterator.hasContexts()) {throw new IllegalArgumentException(""this suggester doesn't support contexts"");}root = new TernaryTreeNode();iterator = new SortedInputIterator(tempDir, tempFileNamePrefix, iterator, utf8SortedAsUTF16SortOrder);count = 0;ArrayList<String> tokens = new ArrayList<>();ArrayList<Number> vals = new ArrayList<>();BytesRef spare;CharsRefBuilder charsSpare = new CharsRefBuilder();while ((spare = iterator.next()) != null) {charsSpare.copyUTF8Bytes(spare);tokens.add(charsSpare.toString());vals.add(Long.valueOf(iterator.weight()));count++;}autocomplete.balancedTree(tokens.toArray(), vals.toArray(), 0, tokens.size() - 1, root);}",public void buildInputIterator iterator throws IOException if iteratorhasPayloads throw new IllegalArgumentExceptionthis suggester doesnt support payloadsif iteratorhasContexts throw new IllegalArgumentExceptionthis suggester doesnt support contextsroot  new TernaryTreeNodeiterator  new SortedInputIteratortempDir tempFileNamePrefix iterator utf8SortedAsUTF16SortOrdercount  0ArrayListString tokens  new ArrayListArrayListNumber vals  new ArrayListBytesRef spareCharsRefBuilder charsSpare  new CharsRefBuilderwhile spare  iteratornext  null charsSparecopyUTF8BytessparetokensaddcharsSparetoStringvalsaddLongvalueOfiteratorweightcountautocompletebalancedTreetokenstoArray valstoArray 0 tokenssize  1 root
public void setAllowThin(boolean allow) {allowThin = allow;},public void setAllowThinboolean allow allowThin  allow
"public PhRun(int phoneticTextFirstCharacterOffset,int realTextFirstCharacterOffset, int realTextLength) {this.phoneticTextFirstCharacterOffset = phoneticTextFirstCharacterOffset;this.realTextFirstCharacterOffset = realTextFirstCharacterOffset;this.realTextLength = realTextLength;}",public PhRunint phoneticTextFirstCharacterOffsetint realTextFirstCharacterOffset int realTextLength thisphoneticTextFirstCharacterOffset  phoneticTextFirstCharacterOffsetthisrealTextFirstCharacterOffset  realTextFirstCharacterOffsetthisrealTextLength  realTextLength
"public void append(String name, RevBlob blob) {append(name, REGULAR_FILE, blob);}",public void appendString name RevBlob blob appendname REGULARFILE blob
public CreateHostedZoneResult createHostedZone(CreateHostedZoneRequest request) {request = beforeClientExecution(request);return executeCreateHostedZone(request);},public CreateHostedZoneResult createHostedZoneCreateHostedZoneRequest request request  beforeClientExecutionrequestreturn executeCreateHostedZonerequest
public ListFacetAttributesResult listFacetAttributes(ListFacetAttributesRequest request) {request = beforeClientExecution(request);return executeListFacetAttributes(request);},public ListFacetAttributesResult listFacetAttributesListFacetAttributesRequest request request  beforeClientExecutionrequestreturn executeListFacetAttributesrequest
public GetTrafficPolicyInstanceCountResult getTrafficPolicyInstanceCount(GetTrafficPolicyInstanceCountRequest request) {request = beforeClientExecution(request);return executeGetTrafficPolicyInstanceCount(request);},public GetTrafficPolicyInstanceCountResult getTrafficPolicyInstanceCountGetTrafficPolicyInstanceCountRequest request request  beforeClientExecutionrequestreturn executeGetTrafficPolicyInstanceCountrequest
public ModifyTrafficMirrorSessionResult modifyTrafficMirrorSession(ModifyTrafficMirrorSessionRequest request) {request = beforeClientExecution(request);return executeModifyTrafficMirrorSession(request);},public ModifyTrafficMirrorSessionResult modifyTrafficMirrorSessionModifyTrafficMirrorSessionRequest request request  beforeClientExecutionrequestreturn executeModifyTrafficMirrorSessionrequest
public DefaultClusterParameters describeDefaultClusterParameters(DescribeDefaultClusterParametersRequest request) {request = beforeClientExecution(request);return executeDescribeDefaultClusterParameters(request);},public DefaultClusterParameters describeDefaultClusterParametersDescribeDefaultClusterParametersRequest request request  beforeClientExecutionrequestreturn executeDescribeDefaultClusterParametersrequest
"public ConsoleWriter(OutputStream out) {super(out, true);lock = CONSOLE_LOCK;}",public ConsoleWriterOutputStream out superout truelock  CONSOLELOCK
public MutableValue duplicate() {MutableValueBool v = new MutableValueBool();v.value = this.value;v.exists = this.exists;return v;},public MutableValue duplicate MutableValueBool v  new MutableValueBoolvvalue  thisvaluevexists  thisexistsreturn v
"public PatternTokenizerFactory(Map<String,String> args) {super(args);pattern = getPattern(args, PATTERN);group = getInt(args, GROUP, -1);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public PatternTokenizerFactoryMapStringString args superargspattern  getPatternargs PATTERNgroup  getIntargs GROUP 1if argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public int addConditionalFormatting(CellRangeAddress[] regions,ConditionalFormattingRule rule1,ConditionalFormattingRule rule2) {return addConditionalFormatting(regions,(HSSFConditionalFormattingRule)rule1,(HSSFConditionalFormattingRule)rule2);}",public int addConditionalFormattingCellRangeAddress regionsConditionalFormattingRule rule1ConditionalFormattingRule rule2 return addConditionalFormattingregionsHSSFConditionalFormattingRulerule1HSSFConditionalFormattingRulerule2
"public Credential(String keyId, String secret, String securityToken) {this.accessKeyId = keyId;this.accessSecret = secret;this.securityToken = securityToken;this.refreshDate = new Date();}",public CredentialString keyId String secret String securityToken thisaccessKeyId  keyIdthisaccessSecret  secretthissecurityToken  securityTokenthisrefreshDate  new Date
public void reset(int point) {this.point = point;ends.next = 0;starts.next = 0;},public void resetint point thispoint  pointendsnext  0startsnext  0
public BottomMarginRecord( RecordInputStream in ) {field_1_margin = in.readDouble();},public BottomMarginRecord RecordInputStream in  field1margin  inreadDouble
public final void removeFields(String name) {Iterator<IndexableField> it = fields.iterator();while (it.hasNext()) {IndexableField field = it.next();if (field.name().equals(name)) {it.remove();}}},public final void removeFieldsString name IteratorIndexableField it  fieldsiteratorwhile ithasNext IndexableField field  itnextif fieldnameequalsname itremove
"public Token LT(int k) {lazyInit();if ( k == 0 ) return null;if ( k < 0 ) return LB(-k);int i = p;int n = 1; while ( n<k ) {if (sync(i + 1)) {i = nextTokenOnChannel(i + 1, channel);}n++;}return tokens.get(i);}",public Token LTint k lazyInitif  k  0  return nullif  k  0  return LBkint i  pint n  1 while  nk  if synci  1 i  nextTokenOnChanneli  1 channelnreturn tokensgeti
"public FloatBuffer put(float c) {if (position == limit) {throw new BufferOverflowException();}byteBuffer.putFloat(position++ * SizeOf.FLOAT, c);return this;}",public FloatBuffer putfloat c if position  limit throw new BufferOverflowExceptionbyteBufferputFloatposition  SizeOfFLOAT creturn this
public ExternalNameEval(EvaluationName name) {_name = name;},public ExternalNameEvalEvaluationName name name  name
public GetLoadBalancerMetricDataResult getLoadBalancerMetricData(GetLoadBalancerMetricDataRequest request) {request = beforeClientExecution(request);return executeGetLoadBalancerMetricData(request);},public GetLoadBalancerMetricDataResult getLoadBalancerMetricDataGetLoadBalancerMetricDataRequest request request  beforeClientExecutionrequestreturn executeGetLoadBalancerMetricDatarequest
public String getResultPath() {return resultPath.getPath();},public String getResultPath return resultPathgetPath
public RefWriter(RefList<Ref> refs) {this.refs = refs.asList();},public RefWriterRefListRef refs thisrefs  refsasList
public HSSFWorkbook getStubHSSFWorkbook() {HSSFWorkbook wb = HSSFWorkbook.create(getStubWorkbook());for (BoundSheetRecord bsr : boundSheetRecords) {wb.createSheet(bsr.getSheetname());}return wb;},public HSSFWorkbook getStubHSSFWorkbook HSSFWorkbook wb  HSSFWorkbookcreategetStubWorkbookfor BoundSheetRecord bsr  boundSheetRecords wbcreateSheetbsrgetSheetnamereturn wb
"public static SupBookRecord createExternalReferences(String url, String[] sheetNames) {return new SupBookRecord(url, sheetNames);}",public static SupBookRecord createExternalReferencesString url String sheetNames return new SupBookRecordurl sheetNames
"public int getLevelForDistance(double dist) {if (dist == 0)return maxLevels;final int level = GeohashUtils.lookupHashLenForWidthHeight(dist, dist);return Math.max(Math.min(level, maxLevels), 1);}",public int getLevelForDistancedouble dist if dist  0return maxLevelsfinal int level  GeohashUtilslookupHashLenForWidthHeightdist distreturn MathmaxMathminlevel maxLevels 1
"public MissingCellDummyRecord(int row, int column) {this.row = row;this.column = column;}",public MissingCellDummyRecordint row int column thisrow  rowthiscolumn  column
"public static TokenizerFactory forName(String name, Map<String,String> args) {return loader.newInstance(name, args);}",public static TokenizerFactory forNameString name MapStringString args return loadernewInstancename args
"public final ByteBuffer encode(CharBuffer in) throws CharacterCodingException {if (in.remaining() == 0) {return ByteBuffer.allocate(0);}reset();int length = (int) (in.remaining() * averageBytesPerChar);ByteBuffer output = ByteBuffer.allocate(length);CoderResult result = null;while (true) {result = encode(in, output, false);if (result==CoderResult.UNDERFLOW) {break;} else if (result==CoderResult.OVERFLOW) {output = allocateMore(output);continue;}checkCoderResult(result);}result = encode(in, output, true);checkCoderResult(result);while (true) {result = flush(output);if (result==CoderResult.UNDERFLOW) {output.flip();break;} else if (result==CoderResult.OVERFLOW) {output = allocateMore(output);continue;}checkCoderResult(result);output.flip();if (result.isMalformed()) {throw new MalformedInputException(result.length());} else if (result.isUnmappable()) {throw new UnmappableCharacterException(result.length());}break;}status = READY;finished = true;return output;}",public final ByteBuffer encodeCharBuffer in throws CharacterCodingException if inremaining  0 return ByteBufferallocate0resetint length  int inremaining  averageBytesPerCharByteBuffer output  ByteBufferallocatelengthCoderResult result  nullwhile true result  encodein output falseif resultCoderResultUNDERFLOW break else if resultCoderResultOVERFLOW output  allocateMoreoutputcontinuecheckCoderResultresultresult  encodein output truecheckCoderResultresultwhile true result  flushoutputif resultCoderResultUNDERFLOW outputflipbreak else if resultCoderResultOVERFLOW output  allocateMoreoutputcontinuecheckCoderResultresultoutputflipif resultisMalformed throw new MalformedInputExceptionresultlength else if resultisUnmappable throw new UnmappableCharacterExceptionresultlengthbreakstatus  READYfinished  truereturn output
public TextProgressMonitor(Writer out) {this.out = out;this.write = true;},public TextProgressMonitorWriter out thisout  outthiswrite  true
"public double get(String name, double dflt) {double vals[] = (double[]) valByRound.get(name);if (vals != null) {return vals[roundNumber % vals.length];}String sval = props.getProperty(name, """" + dflt);if (sval.indexOf("":"") < 0) {return Double.parseDouble(sval);}int k = sval.indexOf("":"");String colName = sval.substring(0, k);sval = sval.substring(k + 1);colForValByRound.put(name, colName);vals = propToDoubleArray(sval);valByRound.put(name, vals);return vals[roundNumber % vals.length];}",public double getString name double dflt double vals  double valByRoundgetnameif vals  null return valsroundNumber  valslengthString sval  propsgetPropertyname   dfltif svalindexOf  0 return DoubleparseDoublesvalint k  svalindexOfString colName  svalsubstring0 ksval  svalsubstringk  1colForValByRoundputname colNamevals  propToDoubleArraysvalvalByRoundputname valsreturn valsroundNumber  valslength
"public LooseRef peel(ObjectIdRef newLeaf) {ObjectId peeledObjectId = newLeaf.getPeeledObjectId();ObjectId objectId = getObjectId();if (peeledObjectId != null) {return new LoosePeeledTag(snapShot, getName(),objectId, peeledObjectId);}return new LooseNonTag(snapShot, getName(), objectId);}",public LooseRef peelObjectIdRef newLeaf ObjectId peeledObjectId  newLeafgetPeeledObjectIdObjectId objectId  getObjectIdif peeledObjectId  null return new LoosePeeledTagsnapShot getNameobjectId peeledObjectIdreturn new LooseNonTagsnapShot getName objectId
"public List<Ref> call() throws GitAPIException {checkCallable();List<Ref> resultRefs;try {Collection<Ref> refs = new ArrayList<>();Ref head = repo.exactRef(HEAD);if (head != null && head.getLeaf().getName().equals(HEAD)) {refs.add(head);}if (listMode == null) {refs.addAll(repo.getRefDatabase().getRefsByPrefix(R_HEADS));} else if (listMode == ListMode.REMOTE) {refs.addAll(repo.getRefDatabase().getRefsByPrefix(R_REMOTES));} else {refs.addAll(repo.getRefDatabase().getRefsByPrefix(R_HEADS,R_REMOTES));}resultRefs = new ArrayList<>(filterRefs(refs));} catch (IOException e) {throw new JGitInternalException(e.getMessage(), e);}Collections.sort(resultRefs,(Ref o1, Ref o2) -> o1.getName().compareTo(o2.getName()));setCallable(false);return resultRefs;}",public ListRef call throws GitAPIException checkCallableListRef resultRefstry CollectionRef refs  new ArrayListRef head  repoexactRefHEADif head  null  headgetLeafgetNameequalsHEAD refsaddheadif listMode  null refsaddAllrepogetRefDatabasegetRefsByPrefixRHEADS else if listMode  ListModeREMOTE refsaddAllrepogetRefDatabasegetRefsByPrefixRREMOTES else refsaddAllrepogetRefDatabasegetRefsByPrefixRHEADSRREMOTESresultRefs  new ArrayListfilterRefsrefs catch IOException e throw new JGitInternalExceptionegetMessage eCollectionssortresultRefsRef o1 Ref o2  o1getNamecompareToo2getNamesetCallablefalsereturn resultRefs
public void writeLong(long v) {writeContinueIfRequired(8);_ulrOutput.writeLong(v);},public void writeLonglong v writeContinueIfRequired8ulrOutputwriteLongv
public UpdateSmsTemplateResult updateSmsTemplate(UpdateSmsTemplateRequest request) {request = beforeClientExecution(request);return executeUpdateSmsTemplate(request);},public UpdateSmsTemplateResult updateSmsTemplateUpdateSmsTemplateRequest request request  beforeClientExecutionrequestreturn executeUpdateSmsTemplaterequest
public DeletePlacementGroupResult deletePlacementGroup(DeletePlacementGroupRequest request) {request = beforeClientExecution(request);return executeDeletePlacementGroup(request);},public DeletePlacementGroupResult deletePlacementGroupDeletePlacementGroupRequest request request  beforeClientExecutionrequestreturn executeDeletePlacementGrouprequest
public StartApplicationResult startApplication(StartApplicationRequest request) {request = beforeClientExecution(request);return executeStartApplication(request);},public StartApplicationResult startApplicationStartApplicationRequest request request  beforeClientExecutionrequestreturn executeStartApplicationrequest
public void mark(int readlimit) throws IOException {synchronized (lock) {super.mark(readlimit);markedLineNumber = lineNumber;markedLastWasCR = lastWasCR;}},public void markint readlimit throws IOException synchronized lock supermarkreadlimitmarkedLineNumber  lineNumbermarkedLastWasCR  lastWasCR
public int getPort() {return port;},public int getPort return port
public int get() {if (position == limit) {throw new BufferUnderflowException();}return byteBuffer.getInt(position++ * SizeOf.INT);},public int get if position  limit throw new BufferUnderflowExceptionreturn byteBuffergetIntposition  SizeOfINT
"public Entry<K, V> pollLastEntry() {Node<K, V> result = endpoint(false);if (result != null) {removeInternal(result);}return immutableCopy(result);}",public EntryK V pollLastEntry NodeK V result  endpointfalseif result  null removeInternalresultreturn immutableCopyresult
public RebootRelationalDatabaseResult rebootRelationalDatabase(RebootRelationalDatabaseRequest request) {request = beforeClientExecution(request);return executeRebootRelationalDatabase(request);},public RebootRelationalDatabaseResult rebootRelationalDatabaseRebootRelationalDatabaseRequest request request  beforeClientExecutionrequestreturn executeRebootRelationalDatabaserequest
"public String toString() {return getClass().getName() + "" ["" + asFormulaString() + ""]"";}",public String toString return getClassgetName     asFormulaString  
public BulkPublishResult bulkPublish(BulkPublishRequest request) {request = beforeClientExecution(request);return executeBulkPublish(request);},public BulkPublishResult bulkPublishBulkPublishRequest request request  beforeClientExecutionrequestreturn executeBulkPublishrequest
"public static String getNewRoleSessionName() {return ""aliyun-java-sdk-"" + System.currentTimeMillis();}",public static String getNewRoleSessionName return aliyunjavasdk  SystemcurrentTimeMillis
public CompleteLifecycleActionResult completeLifecycleAction(CompleteLifecycleActionRequest request) {request = beforeClientExecution(request);return executeCompleteLifecycleAction(request);},public CompleteLifecycleActionResult completeLifecycleActionCompleteLifecycleActionRequest request request  beforeClientExecutionrequestreturn executeCompleteLifecycleActionrequest
"public ParseException generateParseException() {jj_expentries.clear();boolean[] la1tokens = new boolean[34];if (jj_kind >= 0) {la1tokens[jj_kind] = true;jj_kind = -1;}for (int i = 0; i < 25; i++) {if (jj_la1[i] == jj_gen) {for (int j = 0; j < 32; j++) {if ((jj_la1_0[i] & (1<<j)) != 0) {la1tokens[j] = true;}if ((jj_la1_1[i] & (1<<j)) != 0) {la1tokens[32+j] = true;}}}}for (int i = 0; i < 34; i++) {if (la1tokens[i]) {jj_expentry = new int[1];jj_expentry[0] = i;jj_expentries.add(jj_expentry);}}jj_endpos = 0;jj_rescan_token();jj_add_error_token(0, 0);int[][] exptokseq = new int[jj_expentries.size()][];for (int i = 0; i < jj_expentries.size(); i++) {exptokseq[i] = jj_expentries.get(i);}return new ParseException(token, exptokseq, tokenImage);}",public ParseException generateParseException jjexpentriesclearboolean la1tokens  new boolean34if jjkind  0 la1tokensjjkind  truejjkind  1for int i  0 i  25 i if jjla1i  jjgen for int j  0 j  32 j if jjla10i  1j  0 la1tokensj  trueif jjla11i  1j  0 la1tokens32j  truefor int i  0 i  34 i if la1tokensi jjexpentry  new int1jjexpentry0  ijjexpentriesaddjjexpentryjjendpos  0jjrescantokenjjadderrortoken0 0int exptokseq  new intjjexpentriessizefor int i  0 i  jjexpentriessize i exptokseqi  jjexpentriesgetireturn new ParseExceptiontoken exptokseq tokenImage
public final ObjectToPack getDeltaBase() {if (deltaBase instanceof ObjectToPack)return (ObjectToPack) deltaBase;return null;},public final ObjectToPack getDeltaBase if deltaBase instanceof ObjectToPackreturn ObjectToPack deltaBasereturn null
public GetQueryExecutionResult getQueryExecution(GetQueryExecutionRequest request) {request = beforeClientExecution(request);return executeGetQueryExecution(request);},public GetQueryExecutionResult getQueryExecutionGetQueryExecutionRequest request request  beforeClientExecutionrequestreturn executeGetQueryExecutionrequest
"public int getFontIndex(FontRecord font) {for(int i=0; i<=numfonts; i++) {FontRecord thisFont =( FontRecord ) records.get((records.getFontpos() - (numfonts - 1)) + i);if(thisFont == font) {return (i > 3) ? i+1 : i;}}throw new IllegalArgumentException(""Could not find that font!"");}",public int getFontIndexFontRecord font forint i0 inumfonts i FontRecord thisFont  FontRecord  recordsgetrecordsgetFontpos  numfonts  1  iifthisFont  font return i  3  i1  ithrow new IllegalArgumentExceptionCould not find that font
"public FieldInfo add(FieldInfo fi) {return add(fi, -1);}",public FieldInfo addFieldInfo fi return addfi 1
public DescribeDominantLanguageDetectionJobResult describeDominantLanguageDetectionJob(DescribeDominantLanguageDetectionJobRequest request) {request = beforeClientExecution(request);return executeDescribeDominantLanguageDetectionJob(request);},public DescribeDominantLanguageDetectionJobResult describeDominantLanguageDetectionJobDescribeDominantLanguageDetectionJobRequest request request  beforeClientExecutionrequestreturn executeDescribeDominantLanguageDetectionJobrequest
public DescribeReservedInstancesModificationsResult describeReservedInstancesModifications() {return describeReservedInstancesModifications(new DescribeReservedInstancesModificationsRequest());},public DescribeReservedInstancesModificationsResult describeReservedInstancesModifications return describeReservedInstancesModificationsnew DescribeReservedInstancesModificationsRequest
public DiffCommand setOutputStream(OutputStream out) {this.out = out;return this;},public DiffCommand setOutputStreamOutputStream out thisout  outreturn this
public ObjectId toObjectId() {return new ObjectId(this);},public ObjectId toObjectId return new ObjectIdthis
public static short[] getAllKnownRecordSIDs() {if (_allKnownRecordSIDs == null) {short[] results = new short[ _recordCreatorsById.size() ];int i = 0;for (Integer sid : _recordCreatorsById.keySet()) {results[i++] = sid.shortValue();}Arrays.sort(results);_allKnownRecordSIDs = results;}return _allKnownRecordSIDs.clone();},public static short getAllKnownRecordSIDs if allKnownRecordSIDs  null short results  new short recordCreatorsByIdsize int i  0for Integer sid  recordCreatorsByIdkeySet resultsi  sidshortValueArrayssortresultsallKnownRecordSIDs  resultsreturn allKnownRecordSIDsclone
"public PredictionContext getCachedContext(PredictionContext context) {if ( sharedContextCache==null ) return context;synchronized (sharedContextCache) {IdentityHashMap<PredictionContext, PredictionContext> visited =new IdentityHashMap<PredictionContext, PredictionContext>();return PredictionContext.getCachedContext(context,sharedContextCache,visited);}}",public PredictionContext getCachedContextPredictionContext context if  sharedContextCachenull  return contextsynchronized sharedContextCache IdentityHashMapPredictionContext PredictionContext visited new IdentityHashMapPredictionContext PredictionContextreturn PredictionContextgetCachedContextcontextsharedContextCachevisited
public CreateStageResult createStage(CreateStageRequest request) {request = beforeClientExecution(request);return executeCreateStage(request);},public CreateStageResult createStageCreateStageRequest request request  beforeClientExecutionrequestreturn executeCreateStagerequest
public static EditList singleton(Edit edit) {EditList res = new EditList(1);res.add(edit);return res;},public static EditList singletonEdit edit EditList res  new EditList1resaddeditreturn res
public ModifySnapshotScheduleResult modifySnapshotSchedule(ModifySnapshotScheduleRequest request) {request = beforeClientExecution(request);return executeModifySnapshotSchedule(request);},public ModifySnapshotScheduleResult modifySnapshotScheduleModifySnapshotScheduleRequest request request  beforeClientExecutionrequestreturn executeModifySnapshotSchedulerequest
public boolean isEmpty() {return elements.length == 0;},public boolean isEmpty return elementslength  0
"public void copy(BytesRef bytes, BytesRef out) {int left = blockSize - upto;if (bytes.length > left || currentBlock==null) {if (currentBlock != null) {addBlock(currentBlock);didSkipBytes = true;}currentBlock = new byte[blockSize];upto = 0;left = blockSize;assert bytes.length <= blockSize;}out.bytes = currentBlock;out.offset = upto;out.length = bytes.length;System.arraycopy(bytes.bytes, bytes.offset, currentBlock, upto, bytes.length);upto += bytes.length;}",public void copyBytesRef bytes BytesRef out int left  blockSize  uptoif byteslength  left  currentBlocknull if currentBlock  null addBlockcurrentBlockdidSkipBytes  truecurrentBlock  new byteblockSizeupto  0left  blockSizeassert byteslength  blockSizeoutbytes  currentBlockoutoffset  uptooutlength  byteslengthSystemarraycopybytesbytes bytesoffset currentBlock upto byteslengthupto  byteslength
"public void add(int location, E object) {listIterator(location).add(object);}",public void addint location E object listIteratorlocationaddobject
public CreateKeyPairRequest(String keyName) {setKeyName(keyName);},public CreateKeyPairRequestString keyName setKeyNamekeyName
"public boolean removeLastOccurrence(Object o) {Iterator<E> iter = new ReverseLinkIterator<E>(this);return removeOneOccurrence(o, iter);}",public boolean removeLastOccurrenceObject o IteratorE iter  new ReverseLinkIteratorEthisreturn removeOneOccurrenceo iter
public int keyAt(int index) {return mKeys[index];},public int keyAtint index return mKeysindex
"public synchronized void setHierarchical(String dimName, boolean v) {DimConfig ft = fieldTypes.get(dimName);if (ft == null) {ft = new DimConfig();fieldTypes.put(dimName, ft);}ft.hierarchical = v;}",public synchronized void setHierarchicalString dimName boolean v DimConfig ft  fieldTypesgetdimNameif ft  null ft  new DimConfigfieldTypesputdimName ftfthierarchical  v
public ObjectId getOldObjectId() {return oldObjectId;},public ObjectId getOldObjectId return oldObjectId
"public static String toStringTree(final Tree t, final List<String> ruleNames) {String s = Utils.escapeWhitespace(getNodeText(t, ruleNames), false);if ( t.getChildCount()==0 ) return s;StringBuilder buf = new StringBuilder();buf.append(""("");s = Utils.escapeWhitespace(getNodeText(t, ruleNames), false);buf.append(s);buf.append(' ');for (int i = 0; i<t.getChildCount(); i++) {if ( i>0 ) buf.append(' ');buf.append(toStringTree(t.getChild(i), ruleNames));}buf.append("")"");return buf.toString();}",public static String toStringTreefinal Tree t final ListString ruleNames String s  UtilsescapeWhitespacegetNodeTextt ruleNames falseif  tgetChildCount0  return sStringBuilder buf  new StringBuilderbufappends  UtilsescapeWhitespacegetNodeTextt ruleNames falsebufappendsbufappend for int i  0 itgetChildCount i if  i0  bufappend bufappendtoStringTreetgetChildi ruleNamesbufappendreturn buftoString
"public NavigableSet<E> headSet(E end, boolean endInclusive) {Comparator<? super E> c = backingMap.comparator();if (c == null) {((Comparable<E>) end).compareTo(end);} else {c.compare(end, end);}return new TreeSet<E>(backingMap.headMap(end, endInclusive));}",public NavigableSetE headSetE end boolean endInclusive Comparator super E c  backingMapcomparatorif c  null ComparableE endcompareToend else ccompareend endreturn new TreeSetEbackingMapheadMapend endInclusive
public static ContentSource create(ObjectReader Reader) {return new ObjectReaderSource(Reader);},public static ContentSource createObjectReader Reader return new ObjectReaderSourceReader
public void setReuseDeltas(boolean reuseDeltas) {this.reuseDeltas = reuseDeltas;},public void setReuseDeltasboolean reuseDeltas thisreuseDeltas  reuseDeltas
public ListSkillsStoreSkillsByCategoryResult listSkillsStoreSkillsByCategory(ListSkillsStoreSkillsByCategoryRequest request) {request = beforeClientExecution(request);return executeListSkillsStoreSkillsByCategory(request);},public ListSkillsStoreSkillsByCategoryResult listSkillsStoreSkillsByCategoryListSkillsStoreSkillsByCategoryRequest request request  beforeClientExecutionrequestreturn executeListSkillsStoreSkillsByCategoryrequest
public final Ref getRef(String name) {return advertisedRefs.get(name);},public final Ref getRefString name return advertisedRefsgetname
public ModifyInstanceGroupsResult modifyInstanceGroups(ModifyInstanceGroupsRequest request) {request = beforeClientExecution(request);return executeModifyInstanceGroups(request);},public ModifyInstanceGroupsResult modifyInstanceGroupsModifyInstanceGroupsRequest request request  beforeClientExecutionrequestreturn executeModifyInstanceGroupsrequest
public Object toObject() {return exists ? new Date(value) : null;},public Object toObject return exists  new Datevalue  null
public DescribeDBInstanceAutomatedBackupsResult describeDBInstanceAutomatedBackups(DescribeDBInstanceAutomatedBackupsRequest request) {request = beforeClientExecution(request);return executeDescribeDBInstanceAutomatedBackups(request);},public DescribeDBInstanceAutomatedBackupsResult describeDBInstanceAutomatedBackupsDescribeDBInstanceAutomatedBackupsRequest request request  beforeClientExecutionrequestreturn executeDescribeDBInstanceAutomatedBackupsrequest
public PreviewAgentsResult previewAgents(PreviewAgentsRequest request) {request = beforeClientExecution(request);return executePreviewAgents(request);},public PreviewAgentsResult previewAgentsPreviewAgentsRequest request request  beforeClientExecutionrequestreturn executePreviewAgentsrequest
"public QueryGroupUsersRequest() {super(""LinkFace"", ""2018-07-20"", ""QueryGroupUsers"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public QueryGroupUsersRequest superLinkFace 20180720 QueryGroupUserssetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public DescribeOptionGroupsResult describeOptionGroups(DescribeOptionGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeOptionGroups(request);},public DescribeOptionGroupsResult describeOptionGroupsDescribeOptionGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeOptionGroupsrequest
public UpdateGroupResult updateGroup(UpdateGroupRequest request) {request = beforeClientExecution(request);return executeUpdateGroup(request);},public UpdateGroupResult updateGroupUpdateGroupRequest request request  beforeClientExecutionrequestreturn executeUpdateGrouprequest
"public UpdateSigningCertificateRequest(String certificateId, StatusType status) {setCertificateId(certificateId);setStatus(status.toString());}",public UpdateSigningCertificateRequestString certificateId StatusType status setCertificateIdcertificateIdsetStatusstatustoString
public CreateInstancesResult createInstances(CreateInstancesRequest request) {request = beforeClientExecution(request);return executeCreateInstances(request);},public CreateInstancesResult createInstancesCreateInstancesRequest request request  beforeClientExecutionrequestreturn executeCreateInstancesrequest
public static int getRecordSizeForBlockCount(int blockCount) {return 20 + 4 * blockCount;},public static int getRecordSizeForBlockCountint blockCount return 20  4  blockCount
public StopStreamEncryptionResult stopStreamEncryption(StopStreamEncryptionRequest request) {request = beforeClientExecution(request);return executeStopStreamEncryption(request);},public StopStreamEncryptionResult stopStreamEncryptionStopStreamEncryptionRequest request request  beforeClientExecutionrequestreturn executeStopStreamEncryptionrequest
public GetPredictionResult getPrediction(GetPredictionRequest request) {request = beforeClientExecution(request);return executeGetPrediction(request);},public GetPredictionResult getPredictionGetPredictionRequest request request  beforeClientExecutionrequestreturn executeGetPredictionrequest
public ModifyWorkspacePropertiesResult modifyWorkspaceProperties(ModifyWorkspacePropertiesRequest request) {request = beforeClientExecution(request);return executeModifyWorkspaceProperties(request);},public ModifyWorkspacePropertiesResult modifyWorkspacePropertiesModifyWorkspacePropertiesRequest request request  beforeClientExecutionrequestreturn executeModifyWorkspacePropertiesrequest
"public void copyFrom(TermState _other) {assert _other instanceof BlockTermState : ""can not copy from "" + _other.getClass().getName();BlockTermState other = (BlockTermState) _other;super.copyFrom(_other);docFreq = other.docFreq;totalTermFreq = other.totalTermFreq;termBlockOrd = other.termBlockOrd;blockFilePointer = other.blockFilePointer;}",public void copyFromTermState other assert other instanceof BlockTermState  can not copy from   othergetClassgetNameBlockTermState other  BlockTermState othersupercopyFromotherdocFreq  otherdocFreqtotalTermFreq  othertotalTermFreqtermBlockOrd  othertermBlockOrdblockFilePointer  otherblockFilePointer
public String getLine() {return command.getLine();},public String getLine return commandgetLine
public static void release(Inflater i) {if (i != null) {i.reset();if (releaseImpl(i))i.end();}},public static void releaseInflater i if i  null iresetif releaseImpliiend
public EnumSet<RevSort> getRevSort() {return sorting.clone();},public EnumSetRevSort getRevSort return sortingclone
public boolean removeFetchRefSpec(RefSpec s) {return fetch.remove(s);},public boolean removeFetchRefSpecRefSpec s return fetchremoves
public CharBuffer put(char c) {if (position == limit) {throw new BufferOverflowException();}backingArray[offset + position++] = c;return this;},public CharBuffer putchar c if position  limit throw new BufferOverflowExceptionbackingArrayoffset  position  creturn this
public int getRate() {return (perMin ? rate : 60*rate);},public int getRate return perMin  rate  60rate
public DescribeDBParametersRequest(String dBParameterGroupName) {setDBParameterGroupName(dBParameterGroupName);},public DescribeDBParametersRequestString dBParameterGroupName setDBParameterGroupNamedBParameterGroupName
public DeleteNodeResult deleteNode(DeleteNodeRequest request) {request = beforeClientExecution(request);return executeDeleteNode(request);},public DeleteNodeResult deleteNodeDeleteNodeRequest request request  beforeClientExecutionrequestreturn executeDeleteNoderequest
"@Override public List<E> subList(int from, int to) {Slice slice = this.slice;if (from < 0 || from > to || to > size()) {throw new IndexOutOfBoundsException(""from="" + from + "", to="" + to +"", list size="" + size());}return new CowSubList(slice.expectedElements, slice.from + from, slice.from + to);}",Override public ListE subListint from int to Slice slice  thissliceif from  0  from  to  to  size throw new IndexOutOfBoundsExceptionfrom  from   to  to  list size  sizereturn new CowSubListsliceexpectedElements slicefrom  from slicefrom  to
"public CompositeReaderContext build() {return (CompositeReaderContext) build(null, Reader, 0, 0);}",public CompositeReaderContext build return CompositeReaderContext buildnull Reader 0 0
public Cluster rebootCluster(RebootClusterRequest request) {request = beforeClientExecution(request);return executeRebootCluster(request);},public Cluster rebootClusterRebootClusterRequest request request  beforeClientExecutionrequestreturn executeRebootClusterrequest
"public void setBorder(boolean value){field_1_options = border.setShortBoolean(field_1_options, value);}",public void setBorderboolean valuefield1options  bordersetShortBooleanfield1options value
public DescribeExportTasksResult describeExportTasks(DescribeExportTasksRequest request) {request = beforeClientExecution(request);return executeDescribeExportTasks(request);},public DescribeExportTasksResult describeExportTasksDescribeExportTasksRequest request request  beforeClientExecutionrequestreturn executeDescribeExportTasksrequest
public SeriesLabelsRecord clone() {return copy();},public SeriesLabelsRecord clone return copy
"public final String getShortMessage() {byte[] raw = buffer;int msgB = RawParseUtils.tagMessage(raw, 0);if (msgB < 0) {return """"; }int msgE = RawParseUtils.endOfParagraph(raw, msgB);String str = RawParseUtils.decode(guessEncoding(), raw, msgB, msgE);if (RevCommit.hasLF(raw, msgB, msgE)) {str = StringUtils.replaceLineBreaksWithSpace(str);}return str;}",public final String getShortMessage byte raw  bufferint msgB  RawParseUtilstagMessageraw 0if msgB  0 return  int msgE  RawParseUtilsendOfParagraphraw msgBString str  RawParseUtilsdecodeguessEncoding raw msgB msgEif RevCommithasLFraw msgB msgE str  StringUtilsreplaceLineBreaksWithSpacestrreturn str
public String toString() {StringBuilder r = new StringBuilder();if (isOperatorInfix()) {infixToString(r);} else {prefixToString(r);}weightToString(r);return r.toString();},public String toString StringBuilder r  new StringBuilderif isOperatorInfix infixToStringr else prefixToStringrweightToStringrreturn rtoString
public String getPreferredAuthentications() {return preferredAuthentications;},public String getPreferredAuthentications return preferredAuthentications
public int size() {return elements.length;},public int size return elementslength
public ListPartnerEventSourcesResult listPartnerEventSources(ListPartnerEventSourcesRequest request) {request = beforeClientExecution(request);return executeListPartnerEventSources(request);},public ListPartnerEventSourcesResult listPartnerEventSourcesListPartnerEventSourcesRequest request request  beforeClientExecutionrequestreturn executeListPartnerEventSourcesrequest
"public void write(byte[] buffer, int offset, int length) {Arrays.checkOffsetAndCount(buffer.length, offset, length);synchronized (this) {if (out == null) {setError();return;}try {out.write(buffer, offset, length);if (autoFlush) {flush();}} catch (IOException e) {setError();}}}",public void writebyte buffer int offset int length ArrayscheckOffsetAndCountbufferlength offset lengthsynchronized this if out  null setErrorreturntry outwritebuffer offset lengthif autoFlush flush catch IOException e setError
"public ListRegisteredTagsRequest() {super(""CloudPhoto"", ""2017-07-11"", ""ListRegisteredTags"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public ListRegisteredTagsRequest superCloudPhoto 20170711 ListRegisteredTags cloudphotosetProtocolProtocolTypeHTTPS
public DeleteDBSubnetGroupResult deleteDBSubnetGroup(DeleteDBSubnetGroupRequest request) {request = beforeClientExecution(request);return executeDeleteDBSubnetGroup(request);},public DeleteDBSubnetGroupResult deleteDBSubnetGroupDeleteDBSubnetGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteDBSubnetGrouprequest
public PacketLineOut(OutputStream outputStream) {out = outputStream;lenbuffer = new byte[5];flushOnEnd = true;},public PacketLineOutOutputStream outputStream out  outputStreamlenbuffer  new byte5flushOnEnd  true
"public void appendDebugInfo(StringBuilder sb) {sb.append('(');sb.append( ""isxvi="").append(HexDump.shortToHex(_isxvi));sb.append("" isxvd="").append(HexDump.shortToHex(_isxvd));sb.append("" idObj="").append(HexDump.shortToHex(_idObj));sb.append(')');}",public void appendDebugInfoStringBuilder sb sbappendsbappend isxviappendHexDumpshortToHexisxvisbappend isxvdappendHexDumpshortToHexisxvdsbappend idObjappendHexDumpshortToHexidObjsbappend
public InterfaceHdrRecord(RecordInputStream in) {_codepage = in.readShort();},public InterfaceHdrRecordRecordInputStream in codepage  inreadShort
"public DescribeVaultRequest(String accountId, String vaultName) {setAccountId(accountId);setVaultName(vaultName);}",public DescribeVaultRequestString accountId String vaultName setAccountIdaccountIdsetVaultNamevaultName
"public void add(String match, String replacement) {if (match.length() == 0 ){throw new IllegalArgumentException(""cannot match the empty string"");}if (pendingPairs.containsKey(match)) {throw new IllegalArgumentException(""match \"""" + match + ""\"" was already added"");}pendingPairs.put(match, replacement);}",public void addString match String replacement if matchlength  0 throw new IllegalArgumentExceptioncannot match the empty stringif pendingPairscontainsKeymatch throw new IllegalArgumentExceptionmatch   match   was already addedpendingPairsputmatch replacement
"public boolean equals(Object o) {if (this == o) {return true;}else if ( !(o instanceof ArrayPredictionContext) ) {return false;}if ( this.hashCode() != o.hashCode() ) {return false; }ArrayPredictionContext a = (ArrayPredictionContext)o;return Arrays.equals(returnStates, a.returnStates) &&Arrays.equals(parents, a.parents);}",public boolean equalsObject o if this  o return trueelse if  o instanceof ArrayPredictionContext  return falseif  thishashCode  ohashCode  return false ArrayPredictionContext a  ArrayPredictionContextoreturn ArraysequalsreturnStates areturnStates Arraysequalsparents aparents
"public byte[] toArray() {if (arrays.isEmpty()) {return null;} else if (arrays.size() > 1) {int totalLength = 0;for (byte[] array : arrays) {totalLength += array.length;}byte[] concatenated = new byte[totalLength];int destPos = 0;for (byte[] array : arrays) {System.arraycopy(array, 0, concatenated, destPos, array.length);destPos += array.length;}arrays.clear();arrays.add(concatenated);}return arrays.get(0);}",public byte toArray if arraysisEmpty return null else if arrayssize  1 int totalLength  0for byte array  arrays totalLength  arraylengthbyte concatenated  new bytetotalLengthint destPos  0for byte array  arrays Systemarraycopyarray 0 concatenated destPos arraylengthdestPos  arraylengtharrayscleararraysaddconcatenatedreturn arraysget0
public void serialize(LittleEndianOutput out) {int nItems = field_1_seriesNumbers.length;out.writeShort(nItems);for (int i = 0; i < nItems; i++) {out.writeShort(field_1_seriesNumbers[i]);}},public void serializeLittleEndianOutput out int nItems  field1seriesNumberslengthoutwriteShortnItemsfor int i  0 i  nItems i outwriteShortfield1seriesNumbersi
public boolean removePushURI(URIish toRemove) {return pushURIs.remove(toRemove);},public boolean removePushURIURIish toRemove return pushURIsremovetoRemove
public StringBuilder append(String str) {append0(str);return this;},public StringBuilder appendString str append0strreturn this
public synchronized void close() {flush();if (out != null) {try {out.close();out = null;} catch (IOException e) {setError();}}},public synchronized void close flushif out  null try outcloseout  null catch IOException e setError
public final BytesRef[] getBinaryValues(String name) {final List<BytesRef> result = new ArrayList<>();for (IndexableField field : fields) {if (field.name().equals(name)) {final BytesRef bytes = field.binaryValue();if (bytes != null) {result.add(bytes);}}}return result.toArray(new BytesRef[result.size()]);},public final BytesRef getBinaryValuesString name final ListBytesRef result  new ArrayListfor IndexableField field  fields if fieldnameequalsname final BytesRef bytes  fieldbinaryValueif bytes  null resultaddbytesreturn resulttoArraynew BytesRefresultsize
public final void backup(int amount) {bufferPosition -= amount;},public final void backupint amount bufferPosition  amount
public void addChildRecord(EscherRecord childRecord) {getChildRecords().add( childRecord );},public void addChildRecordEscherRecord childRecord getChildRecordsadd childRecord 
public DeleteExpressionResult deleteExpression(DeleteExpressionRequest request) {request = beforeClientExecution(request);return executeDeleteExpression(request);},public DeleteExpressionResult deleteExpressionDeleteExpressionRequest request request  beforeClientExecutionrequestreturn executeDeleteExpressionrequest
public ReorderReceiptRuleSetResult reorderReceiptRuleSet(ReorderReceiptRuleSetRequest request) {request = beforeClientExecution(request);return executeReorderReceiptRuleSet(request);},public ReorderReceiptRuleSetResult reorderReceiptRuleSetReorderReceiptRuleSetRequest request request  beforeClientExecutionrequestreturn executeReorderReceiptRuleSetrequest
public FtrHeader(RecordInputStream in) {recordType = in.readShort();grbitFrt   = in.readShort();associatedRange = new CellRangeAddress(in);},public FtrHeaderRecordInputStream in recordType  inreadShortgrbitFrt    inreadShortassociatedRange  new CellRangeAddressin
public PutVoiceConnectorProxyResult putVoiceConnectorProxy(PutVoiceConnectorProxyRequest request) {request = beforeClientExecution(request);return executePutVoiceConnectorProxy(request);},public PutVoiceConnectorProxyResult putVoiceConnectorProxyPutVoiceConnectorProxyRequest request request  beforeClientExecutionrequestreturn executePutVoiceConnectorProxyrequest
public DescribeDataSourcePermissionsResult describeDataSourcePermissions(DescribeDataSourcePermissionsRequest request) {request = beforeClientExecution(request);return executeDescribeDataSourcePermissions(request);},public DescribeDataSourcePermissionsResult describeDataSourcePermissionsDescribeDataSourcePermissionsRequest request request  beforeClientExecutionrequestreturn executeDescribeDataSourcePermissionsrequest
public final char get(int index) {checkIndex(index);return backingArray[offset + index];},public final char getint index checkIndexindexreturn backingArrayoffset  index
public final void writeByte(int val) throws IOException {out.write(val);written++;},public final void writeByteint val throws IOException outwritevalwritten
public ListTablesResult listTables(String exclusiveStartTableName) {return listTables(new ListTablesRequest().withExclusiveStartTableName(exclusiveStartTableName));},public ListTablesResult listTablesString exclusiveStartTableName return listTablesnew ListTablesRequestwithExclusiveStartTableNameexclusiveStartTableName
"public String toString() {return ""Cell(readerIndex="" + readerIndex + "" nodeID="" + index.getNodeID()+ "" isLeaf="" + index.isLeafNode() + "" distanceSquared="" + distanceSquared + "")"";}",public String toString return CellreaderIndex  readerIndex   nodeID  indexgetNodeID  isLeaf  indexisLeafNode   distanceSquared  distanceSquared  
public Result getResult() {return status;},public Result getResult return status
"public int addConditionalFormatting(CellRangeAddress[] regions,HSSFConditionalFormattingRule rule1,HSSFConditionalFormattingRule rule2) {return addConditionalFormatting(regions,new HSSFConditionalFormattingRule[] { rule1, rule2 });}",public int addConditionalFormattingCellRangeAddress regionsHSSFConditionalFormattingRule rule1HSSFConditionalFormattingRule rule2 return addConditionalFormattingregionsnew HSSFConditionalFormattingRule  rule1 rule2 
public DescribeImageBuildersResult describeImageBuilders(DescribeImageBuildersRequest request) {request = beforeClientExecution(request);return executeDescribeImageBuilders(request);},public DescribeImageBuildersResult describeImageBuildersDescribeImageBuildersRequest request request  beforeClientExecutionrequestreturn executeDescribeImageBuildersrequest
public DescribeMountTargetsResult describeMountTargets(DescribeMountTargetsRequest request) {request = beforeClientExecution(request);return executeDescribeMountTargets(request);},public DescribeMountTargetsResult describeMountTargetsDescribeMountTargetsRequest request request  beforeClientExecutionrequestreturn executeDescribeMountTargetsrequest
public UpdateClientCertificateResult updateClientCertificate(UpdateClientCertificateRequest request) {request = beforeClientExecution(request);return executeUpdateClientCertificate(request);},public UpdateClientCertificateResult updateClientCertificateUpdateClientCertificateRequest request request  beforeClientExecutionrequestreturn executeUpdateClientCertificaterequest
public String getFormatString(CellValueRecordInterface cell) {int formatIndex = getFormatIndex(cell);if (formatIndex == -1) {return null;}return getFormatString(formatIndex);},public String getFormatStringCellValueRecordInterface cell int formatIndex  getFormatIndexcellif formatIndex  1 return nullreturn getFormatStringformatIndex
public void clear() {w1 = 0;w2 = 0;w3 = 0;w4 = 0;w5 = 0;},public void clear w1  0w2  0w3  0w4  0w5  0
public boolean equals( Object o ) {return o instanceof TurkishStemmer;},public boolean equals Object o  return o instanceof TurkishStemmer
public void disableRefLog() {customRefLog = true;refLogMessage = null;refLogIncludeResult = false;},public void disableRefLog customRefLog  truerefLogMessage  nullrefLogIncludeResult  false
public ListPublicKeysResult listPublicKeys(ListPublicKeysRequest request) {request = beforeClientExecution(request);return executeListPublicKeys(request);},public ListPublicKeysResult listPublicKeysListPublicKeysRequest request request  beforeClientExecutionrequestreturn executeListPublicKeysrequest
public CreateDhcpOptionsResult createDhcpOptions(CreateDhcpOptionsRequest request) {request = beforeClientExecution(request);return executeCreateDhcpOptions(request);},public CreateDhcpOptionsResult createDhcpOptionsCreateDhcpOptionsRequest request request  beforeClientExecutionrequestreturn executeCreateDhcpOptionsrequest
"public TokenStream create(TokenStream input) {return new ASCIIFoldingFilter(input, preserveOriginal);}",public TokenStream createTokenStream input return new ASCIIFoldingFilterinput preserveOriginal
public BlockList(int capacity) {int dirSize = toDirectoryIndex(capacity);if ((capacity & BLOCK_MASK) != 0 || dirSize == 0)dirSize++;directory = BlockList.<T> newDirectory(dirSize);directory[0] = BlockList.<T> newBlock();tailBlock = directory[0];},public BlockListint capacity int dirSize  toDirectoryIndexcapacityif capacity  BLOCKMASK  0  dirSize  0dirSizedirectory  BlockListT newDirectorydirSizedirectory0  BlockListT newBlocktailBlock  directory0
@Override public int size() {return Impl.this.size();},Override public int size return Implthissize
"public void addCellRangeAddress(int firstRow, int firstCol, int lastRow, int lastCol) {CellRangeAddress region = new CellRangeAddress(firstRow, lastRow, firstCol, lastCol);addCellRangeAddress(region);}",public void addCellRangeAddressint firstRow int firstCol int lastRow int lastCol CellRangeAddress region  new CellRangeAddressfirstRow lastRow firstCol lastColaddCellRangeAddressregion
public DescribeCacheEngineVersionsResult describeCacheEngineVersions() {return describeCacheEngineVersions(new DescribeCacheEngineVersionsRequest());},public DescribeCacheEngineVersionsResult describeCacheEngineVersions return describeCacheEngineVersionsnew DescribeCacheEngineVersionsRequest
public DeleteEndpointConfigResult deleteEndpointConfig(DeleteEndpointConfigRequest request) {request = beforeClientExecution(request);return executeDeleteEndpointConfig(request);},public DeleteEndpointConfigResult deleteEndpointConfigDeleteEndpointConfigRequest request request  beforeClientExecutionrequestreturn executeDeleteEndpointConfigrequest
public String findSheetFirstNameFromExternSheet(int externSheetIndex){int indexToSheet = linkTable.getFirstInternalSheetIndexForExtIndex(externSheetIndex);return findSheetNameFromIndex(indexToSheet);},public String findSheetFirstNameFromExternSheetint externSheetIndexint indexToSheet  linkTablegetFirstInternalSheetIndexForExtIndexexternSheetIndexreturn findSheetNameFromIndexindexToSheet
public void copy(MutableValue source) {MutableValueBool s = (MutableValueBool) source;value = s.value;exists = s.exists;},public void copyMutableValue source MutableValueBool s  MutableValueBool sourcevalue  svalueexists  sexists
public void setChild(QueryNode child) {List<QueryNode> list = new ArrayList<>();list.add(child);this.set(list);},public void setChildQueryNode child ListQueryNode list  new ArrayListlistaddchildthissetlist
"public void setDateResolution(DateTools.Resolution dateResolution) {getQueryConfigHandler().set(ConfigurationKeys.DATE_RESOLUTION, dateResolution);}",public void setDateResolutionDateToolsResolution dateResolution getQueryConfigHandlersetConfigurationKeysDATERESOLUTION dateResolution
"public static <T> boolean contains(T[] array, T value) {for (T element : array) {if (element == null) {if (value == null) return true;} else {if (value != null && element.equals(value)) return true;}}return false;}",public static T boolean containsT array T value for T element  array if element  null if value  null return true else if value  null  elementequalsvalue return truereturn false
public ListLogPatternsResult listLogPatterns(ListLogPatternsRequest request) {request = beforeClientExecution(request);return executeListLogPatterns(request);},public ListLogPatternsResult listLogPatternsListLogPatternsRequest request request  beforeClientExecutionrequestreturn executeListLogPatternsrequest
public BatchDeleteImageResult batchDeleteImage(BatchDeleteImageRequest request) {request = beforeClientExecution(request);return executeBatchDeleteImage(request);},public BatchDeleteImageResult batchDeleteImageBatchDeleteImageRequest request request  beforeClientExecutionrequestreturn executeBatchDeleteImagerequest
public void seekExact(long ord) {throw new UnsupportedOperationException();},public void seekExactlong ord throw new UnsupportedOperationException
public RightMarginRecord( RecordInputStream in ) {field_1_margin = in.readDouble();},public RightMarginRecord RecordInputStream in  field1margin  inreadDouble
public boolean isAutoDetecting() {return false;},public boolean isAutoDetecting return false
public RestorePhoneNumberResult restorePhoneNumber(RestorePhoneNumberRequest request) {request = beforeClientExecution(request);return executeRestorePhoneNumber(request);},public RestorePhoneNumberResult restorePhoneNumberRestorePhoneNumberRequest request request  beforeClientExecutionrequestreturn executeRestorePhoneNumberrequest
public TestRenderTemplateResult testRenderTemplate(TestRenderTemplateRequest request) {request = beforeClientExecution(request);return executeTestRenderTemplate(request);},public TestRenderTemplateResult testRenderTemplateTestRenderTemplateRequest request request  beforeClientExecutionrequestreturn executeTestRenderTemplaterequest
public RevTag lookupTag(AnyObjectId id) {RevTag c = (RevTag) objects.get(id);if (c == null) {c = new RevTag(id);objects.add(c);}return c;},public RevTag lookupTagAnyObjectId id RevTag c  RevTag objectsgetidif c  null c  new RevTagidobjectsaddcreturn c
"public Query getQuery(Element e) throws ParserException {String text = DOMUtils.getText(e);try {Query q = null;if (unSafeParser != null) {synchronized (unSafeParser) {q = unSafeParser.parse(text);}} else {String fieldName = DOMUtils.getAttribute(e, ""fieldName"", defaultField);QueryParser parser = createQueryParser(fieldName, analyzer);q = parser.parse(text);}float boost = DOMUtils.getAttribute(e, ""boost"", 1.0f);return new BoostQuery(q, boost);} catch (ParseException e1) {throw new ParserException(e1.getMessage());}}",public Query getQueryElement e throws ParserException String text  DOMUtilsgetTextetry Query q  nullif unSafeParser  null synchronized unSafeParser q  unSafeParserparsetext else String fieldName  DOMUtilsgetAttributee fieldName defaultFieldQueryParser parser  createQueryParserfieldName analyzerq  parserparsetextfloat boost  DOMUtilsgetAttributee boost 10freturn new BoostQueryq boost catch ParseException e1 throw new ParserExceptione1getMessage
public CreateNetworkAclResult createNetworkAcl(CreateNetworkAclRequest request) {request = beforeClientExecution(request);return executeCreateNetworkAcl(request);},public CreateNetworkAclResult createNetworkAclCreateNetworkAclRequest request request  beforeClientExecutionrequestreturn executeCreateNetworkAclrequest
"public ThreeWayMerger newMerger(Repository db, boolean inCore) {return newMerger(db);}",public ThreeWayMerger newMergerRepository db boolean inCore return newMergerdb
"public BufferedWriter(Writer out, int size) {super(out);if (size <= 0) {throw new IllegalArgumentException(""size <= 0"");}this.out = out;this.buf = new char[size];}",public BufferedWriterWriter out int size superoutif size  0 throw new IllegalArgumentExceptionsize  0thisout  outthisbuf  new charsize
public ListConfigurationHistoryResult listConfigurationHistory(ListConfigurationHistoryRequest request) {request = beforeClientExecution(request);return executeListConfigurationHistory(request);},public ListConfigurationHistoryResult listConfigurationHistoryListConfigurationHistoryRequest request request  beforeClientExecutionrequestreturn executeListConfigurationHistoryrequest
"public Request<GetChangeRequest> marshall(GetChangeRequest getChangeRequest) {if (getChangeRequest == null) {throw new SdkClientException(""Invalid argument passed to marshall(...)"");}Request<GetChangeRequest> request = new DefaultRequest<GetChangeRequest>(getChangeRequest, ""AmazonRoute53"");request.setHttpMethod(HttpMethodName.GET);String uriResourcePath = ""/2013-04-01/change/{Id}"";uriResourcePath = com.amazonaws.transform.PathMarshallers.NON_GREEDY.marshall(uriResourcePath, ""Id"", getChangeRequest.getId());request.setResourcePath(uriResourcePath);return request;}",public RequestGetChangeRequest marshallGetChangeRequest getChangeRequest if getChangeRequest  null throw new SdkClientExceptionInvalid argument passed to marshallRequestGetChangeRequest request  new DefaultRequestGetChangeRequestgetChangeRequest AmazonRoute53requestsetHttpMethodHttpMethodNameGETString uriResourcePath  20130401changeIduriResourcePath  comamazonawstransformPathMarshallersNONGREEDYmarshalluriResourcePath Id getChangeRequestgetIdrequestsetResourcePathuriResourcePathreturn request
public byte[] getCachedBytes() throws LargeObjectException {throw new LargeObjectException(id);},public byte getCachedBytes throws LargeObjectException throw new LargeObjectExceptionid
public ModifyInstanceCreditSpecificationResult modifyInstanceCreditSpecification(ModifyInstanceCreditSpecificationRequest request) {request = beforeClientExecution(request);return executeModifyInstanceCreditSpecification(request);},public ModifyInstanceCreditSpecificationResult modifyInstanceCreditSpecificationModifyInstanceCreditSpecificationRequest request request  beforeClientExecutionrequestreturn executeModifyInstanceCreditSpecificationrequest
public void add(RevCommit c) {Block b = head;if (b == null || !b.canUnpop()) {b = free.newBlock();b.resetToEnd();b.next = head;head = b;}b.unpop(c);},public void addRevCommit c Block b  headif b  null  bcanUnpop b  freenewBlockbresetToEndbnext  headhead  bbunpopc
public SpanTermQuery newSpanTermQuery(Term term) throws TooManyBasicQueries {checkMax();return new SpanTermQuery(term);},public SpanTermQuery newSpanTermQueryTerm term throws TooManyBasicQueries checkMaxreturn new SpanTermQueryterm
public StringWriter(int initialSize) {if (initialSize < 0) {throw new IllegalArgumentException();}buf = new StringBuffer(initialSize);lock = buf;},public StringWriterint initialSize if initialSize  0 throw new IllegalArgumentExceptionbuf  new StringBufferinitialSizelock  buf
"public String toString() {return super.toString() + ""(\"""" + patternText + ""\"")"";}",public String toString return supertoString    patternText  
"public ATNConfig precedenceTransition(ATNConfig config,PrecedencePredicateTransition pt,boolean collectPredicates,boolean inContext,boolean fullCtx){if ( debug ) {System.out.println(""PRED (collectPredicates=""+collectPredicates+"") ""+pt.precedence+"">=_p""+"", ctx dependent=true"");if ( parser != null ) {System.out.println(""context surrounding pred is ""+parser.getRuleInvocationStack());}}ATNConfig c = null;if (collectPredicates && inContext) {if ( fullCtx ) {int currentPosition = _input.index();_input.seek(_startIndex);boolean predSucceeds = evalSemanticContext(pt.getPredicate(), _outerContext, config.alt, fullCtx);_input.seek(currentPosition);if ( predSucceeds ) {c = new ATNConfig(config, pt.target); }}else {SemanticContext newSemCtx =SemanticContext.and(config.semanticContext, pt.getPredicate());c = new ATNConfig(config, pt.target, newSemCtx);}}else {c = new ATNConfig(config, pt.target);}if ( debug ) System.out.println(""config from pred transition=""+c);return c;}",public ATNConfig precedenceTransitionATNConfig configPrecedencePredicateTransition ptboolean collectPredicatesboolean inContextboolean fullCtxif  debug  SystemoutprintlnPRED collectPredicatescollectPredicates ptprecedencep ctx dependenttrueif  parser  null  Systemoutprintlncontext surrounding pred is parsergetRuleInvocationStackATNConfig c  nullif collectPredicates  inContext if  fullCtx  int currentPosition  inputindexinputseekstartIndexboolean predSucceeds  evalSemanticContextptgetPredicate outerContext configalt fullCtxinputseekcurrentPositionif  predSucceeds  c  new ATNConfigconfig pttarget else SemanticContext newSemCtx SemanticContextandconfigsemanticContext ptgetPredicatec  new ATNConfigconfig pttarget newSemCtxelse c  new ATNConfigconfig pttargetif  debug  Systemoutprintlnconfig from pred transitioncreturn c
public GetDomainStatisticsReportResult getDomainStatisticsReport(GetDomainStatisticsReportRequest request) {request = beforeClientExecution(request);return executeGetDomainStatisticsReport(request);},public GetDomainStatisticsReportResult getDomainStatisticsReportGetDomainStatisticsReportRequest request request  beforeClientExecutionrequestreturn executeGetDomainStatisticsReportrequest
public boolean equals(Object obj) {if (this == obj)return true;if (!super.equals(obj))return false;if (getClass() != obj.getClass())return false;TermRangeQuery other = (TermRangeQuery) obj;if (includeLower != other.includeLower)return false;if (includeUpper != other.includeUpper)return false;if (lowerTerm == null) {if (other.lowerTerm != null)return false;} else if (!lowerTerm.equals(other.lowerTerm))return false;if (upperTerm == null) {if (other.upperTerm != null)return false;} else if (!upperTerm.equals(other.upperTerm))return false;return true;},public boolean equalsObject obj if this  objreturn trueif superequalsobjreturn falseif getClass  objgetClassreturn falseTermRangeQuery other  TermRangeQuery objif includeLower  otherincludeLowerreturn falseif includeUpper  otherincludeUpperreturn falseif lowerTerm  null if otherlowerTerm  nullreturn false else if lowerTermequalsotherlowerTermreturn falseif upperTerm  null if otherupperTerm  nullreturn false else if upperTermequalsotherupperTermreturn falsereturn true
public DescribeTransitGatewayRouteTablesResult describeTransitGatewayRouteTables(DescribeTransitGatewayRouteTablesRequest request) {request = beforeClientExecution(request);return executeDescribeTransitGatewayRouteTables(request);},public DescribeTransitGatewayRouteTablesResult describeTransitGatewayRouteTablesDescribeTransitGatewayRouteTablesRequest request request  beforeClientExecutionrequestreturn executeDescribeTransitGatewayRouteTablesrequest
"public BootstrapActionConfig build() {if (replace) {args.add(""--replace"");}return new BootstrapActionConfig().withName(""Configure Daemons"").withScriptBootstrapAction(new ScriptBootstrapActionConfig().withPath(""s3:"").withArgs(args));}",public BootstrapActionConfig build if replace argsaddreplacereturn new BootstrapActionConfigwithNameConfigure DaemonswithScriptBootstrapActionnew ScriptBootstrapActionConfigwithPaths3withArgsargs
"public boolean isLegalReplacement(byte[] replacement) {if (decoder == null) {decoder = cs.newDecoder();decoder.onMalformedInput(CodingErrorAction.REPORT);decoder.onUnmappableCharacter(CodingErrorAction.REPORT);}ByteBuffer in = ByteBuffer.wrap(replacement);CharBuffer out = CharBuffer.allocate((int) (replacement.length * decoder.maxCharsPerByte()));CoderResult result = decoder.decode(in, out, true);return !result.isError();}",public boolean isLegalReplacementbyte replacement if decoder  null decoder  csnewDecoderdecoderonMalformedInputCodingErrorActionREPORTdecoderonUnmappableCharacterCodingErrorActionREPORTByteBuffer in  ByteBufferwrapreplacementCharBuffer out  CharBufferallocateint replacementlength  decodermaxCharsPerByteCoderResult result  decoderdecodein out truereturn resultisError
public UpdatePipelineResult updatePipeline(UpdatePipelineRequest request) {request = beforeClientExecution(request);return executeUpdatePipeline(request);},public UpdatePipelineResult updatePipelineUpdatePipelineRequest request request  beforeClientExecutionrequestreturn executeUpdatePipelinerequest
public boolean isAboveMinRep() {int sc = _significand.bitLength() - C_64;return _significand.compareTo(BI_MIN_BASE.shiftLeft(sc)) > 0;},public boolean isAboveMinRep int sc  significandbitLength  C64return significandcompareToBIMINBASEshiftLeftsc  0
public AssociateContactWithAddressBookResult associateContactWithAddressBook(AssociateContactWithAddressBookRequest request) {request = beforeClientExecution(request);return executeAssociateContactWithAddressBook(request);},public AssociateContactWithAddressBookResult associateContactWithAddressBookAssociateContactWithAddressBookRequest request request  beforeClientExecutionrequestreturn executeAssociateContactWithAddressBookrequest
public DeleteFolderResult deleteFolder(DeleteFolderRequest request) {request = beforeClientExecution(request);return executeDeleteFolder(request);},public DeleteFolderResult deleteFolderDeleteFolderRequest request request  beforeClientExecutionrequestreturn executeDeleteFolderrequest
"public PhraseWildcardQuery build() {return new PhraseWildcardQuery(field, phraseTerms, slop, maxMultiTermExpansions, segmentOptimizationEnabled);}",public PhraseWildcardQuery build return new PhraseWildcardQueryfield phraseTerms slop maxMultiTermExpansions segmentOptimizationEnabled
public DescribeJobFlowsResult describeJobFlows() {return describeJobFlows(new DescribeJobFlowsRequest());},public DescribeJobFlowsResult describeJobFlows return describeJobFlowsnew DescribeJobFlowsRequest
public float tf(float freq) {return baselineTf(freq);},public float tffloat freq return baselineTffreq
public DescribePublishingDestinationResult describePublishingDestination(DescribePublishingDestinationRequest request) {request = beforeClientExecution(request);return executeDescribePublishingDestination(request);},public DescribePublishingDestinationResult describePublishingDestinationDescribePublishingDestinationRequest request request  beforeClientExecutionrequestreturn executeDescribePublishingDestinationrequest
public int getLeftId(int wordId) {return LEFT_ID;},public int getLeftIdint wordId return LEFTID
"public static NormalisedDecimal create(BigInteger frac, int binaryExponent) {int pow10;if (binaryExponent > 49 || binaryExponent < 46) {int x = (29 << 19) - binaryExponent * LOG_BASE_10_OF_2_TIMES_2_POW_20;x += C_2_POW_19; pow10 = -(x >> 20);} else {pow10 = 0;}MutableFPNumber cc = new MutableFPNumber(frac, binaryExponent);if (pow10 != 0) {cc.multiplyByPowerOfTen(-pow10);}switch (cc.get64BitNormalisedExponent()) {case 46:if (cc.isAboveMinRep()) {break;}case 44:case 45:cc.multiplyByPowerOfTen(1);pow10--;break;case 47:case 48:break;case 49:if (cc.isBelowMaxRep()) {break;}case 50:cc.multiplyByPowerOfTen(-1);pow10++;break;default:throw new IllegalStateException(""Bad binary exp "" + cc.get64BitNormalisedExponent() + ""."");}cc.normalise64bit();return cc.createNormalisedDecimal(pow10);}",public static NormalisedDecimal createBigInteger frac int binaryExponent int pow10if binaryExponent  49  binaryExponent  46 int x  29  19  binaryExponent  LOGBASE10OF2TIMES2POW20x  C2POW19 pow10  x  20 else pow10  0MutableFPNumber cc  new MutableFPNumberfrac binaryExponentif pow10  0 ccmultiplyByPowerOfTenpow10switch ccget64BitNormalisedExponent case 46if ccisAboveMinRep breakcase 44case 45ccmultiplyByPowerOfTen1pow10breakcase 47case 48breakcase 49if ccisBelowMaxRep breakcase 50ccmultiplyByPowerOfTen1pow10breakdefaultthrow new IllegalStateExceptionBad binary exp   ccget64BitNormalisedExponent  ccnormalise64bitreturn cccreateNormalisedDecimalpow10
"public String toString() {return ""DoubleRange("" + label + "": "" + min + "" to "" + max + "")"";}",public String toString return DoubleRange  label     min   to   max  
public void setRefLogIdent(PersonIdent pi) {destination.setRefLogIdent(pi);},public void setRefLogIdentPersonIdent pi destinationsetRefLogIdentpi
public final void yybegin(int newState) {zzLexicalState = newState;},public final void yybeginint newState zzLexicalState  newState
public Trie(boolean forward) {rows.add(new Row());root = 0;this.forward = forward;},public Trieboolean forward rowsaddnew Rowroot  0thisforward  forward
public DeleteTagsRequest(java.util.List<String> resources) {setResources(resources);},public DeleteTagsRequestjavautilListString resources setResourcesresources
public ObjectProtectRecord clone() {return copy();},public ObjectProtectRecord clone return copy
"public static FuncVarPtg create(String pName, int numArgs) {return create(numArgs, lookupIndex(pName));}",public static FuncVarPtg createString pName int numArgs return createnumArgs lookupIndexpName
public void clear() {this.processors.clear();},public void clear thisprocessorsclear
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeDouble(getValue());},public void writeLittleEndianOutput out outwriteBytesid  getPtgClassoutwriteDoublegetValue
public NullReader(int valueCount) {this.valueCount = valueCount;},public NullReaderint valueCount thisvalueCount  valueCount
public CreateVaultResult createVault(CreateVaultRequest request) {request = beforeClientExecution(request);return executeCreateVault(request);},public CreateVaultResult createVaultCreateVaultRequest request request  beforeClientExecutionrequestreturn executeCreateVaultrequest
"@Override public void add(int index, E object) {Object[] a = array;int s = size;if (index > s || index < 0) {throwIndexOutOfBoundsException(index, s);}if (s < a.length) {System.arraycopy(a, index, a, index + 1, s - index);} else {Object[] newArray = new Object[newCapacity(s)];System.arraycopy(a, 0, newArray, 0, index);System.arraycopy(a, index, newArray, index + 1, s - index);array = a = newArray;}a[index] = object;size = s + 1;modCount++;}",Override public void addint index E object Object a  arrayint s  sizeif index  s  index  0 throwIndexOutOfBoundsExceptionindex sif s  alength Systemarraycopya index a index  1 s  index else Object newArray  new ObjectnewCapacitysSystemarraycopya 0 newArray 0 indexSystemarraycopya index newArray index  1 s  indexarray  a  newArrayaindex  objectsize  s  1modCount
"public int read(char[] c, int off, int len) {if (left > len) {s.getChars(upto, upto+len, c, off);upto += len;left -= len;return len;} else if (0 == left) {return -1;} else {s.getChars(upto, upto+left, c, off);int r = left;left = 0;upto = s.length();return r;}}",public int readchar c int off int len if left  len sgetCharsupto uptolen c offupto  lenleft  lenreturn len else if 0  left return 1 else sgetCharsupto uptoleft c offint r  leftleft  0upto  slengthreturn r
public DeleteDeploymentResult deleteDeployment(DeleteDeploymentRequest request) {request = beforeClientExecution(request);return executeDeleteDeployment(request);},public DeleteDeploymentResult deleteDeploymentDeleteDeploymentRequest request request  beforeClientExecutionrequestreturn executeDeleteDeploymentrequest
"public String toString() {return getClass().getSimpleName() + ""(bitsPerValue="" + bitsPerValue+ "",size="" + size() + "",blocks="" + blocks.length + "")"";}",public String toString return getClassgetSimpleName  bitsPerValue  bitsPerValue size  size  blocks  blockslength  
public VectorValueSource(List<ValueSource> sources) {this.sources = sources;},public VectorValueSourceListValueSource sources thissources  sources
"public HSSFShape(HSSFShape parent, HSSFAnchor anchor) {this.parent = parent;this.anchor = anchor;this._escherContainer = createSpContainer();_optRecord = _escherContainer.getChildById(EscherOptRecord.RECORD_ID);_objRecord = createObjRecord();}",public HSSFShapeHSSFShape parent HSSFAnchor anchor thisparent  parentthisanchor  anchorthisescherContainer  createSpContaineroptRecord  escherContainergetChildByIdEscherOptRecordRECORDIDobjRecord  createObjRecord
"public GalicianMinimalStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public GalicianMinimalStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public DescribeFpgaImageAttributeResult describeFpgaImageAttribute(DescribeFpgaImageAttributeRequest request) {request = beforeClientExecution(request);return executeDescribeFpgaImageAttribute(request);},public DescribeFpgaImageAttributeResult describeFpgaImageAttributeDescribeFpgaImageAttributeRequest request request  beforeClientExecutionrequestreturn executeDescribeFpgaImageAttributerequest
public ValueFiller getValueFiller() {return new ValueFiller();},public ValueFiller getValueFiller return new ValueFiller
"public static int update(int hash, Object value) {return update(hash, value != null ? value.hashCode() : 0);}",public static int updateint hash Object value return updatehash value  null  valuehashCode  0
public DescribeModelVersionsResult describeModelVersions(DescribeModelVersionsRequest request) {request = beforeClientExecution(request);return executeDescribeModelVersions(request);},public DescribeModelVersionsResult describeModelVersionsDescribeModelVersionsRequest request request  beforeClientExecutionrequestreturn executeDescribeModelVersionsrequest
"public static IndexCommit findIndexCommit(Directory dir, String userData) throws IOException {Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);for (final IndexCommit ic : commits) {Map<String,String> map = ic.getUserData();String ud = null;if (map != null) {ud = map.get(USER_DATA);}if (ud != null && ud.equals(userData)) {return ic;}}throw new IOException(""index does not contain commit with userData: "" + userData);}",public static IndexCommit findIndexCommitDirectory dir String userData throws IOException CollectionIndexCommit commits  DirectoryReaderlistCommitsdirfor final IndexCommit ic  commits MapStringString map  icgetUserDataString ud  nullif map  null ud  mapgetUSERDATAif ud  null  udequalsuserData return icthrow new IOExceptionindex does not contain commit with userData   userData
public IndexEnum(FST<Long> fst) {fstEnum = new BytesRefFSTEnum<>(fst);},public IndexEnumFSTLong fst fstEnum  new BytesRefFSTEnumfst
public HSSFEvaluationSheet(HSSFSheet hs) {_hs = hs;},public HSSFEvaluationSheetHSSFSheet hs hs  hs
public void update(int b) {if (upto == buffer.length) {flush();}buffer[upto++] = (byte) b;},public void updateint b if upto  bufferlength flushbufferupto  byte b
public PutPartnerEventsResult putPartnerEvents(PutPartnerEventsRequest request) {request = beforeClientExecution(request);return executePutPartnerEvents(request);},public PutPartnerEventsResult putPartnerEventsPutPartnerEventsRequest request request  beforeClientExecutionrequestreturn executePutPartnerEventsrequest
public boolean isThin() {return thin;},public boolean isThin return thin
public String toStringTree() {return toString();},public String toStringTree return toString
public PackConfig(Repository db) {fromConfig(db.getConfig());},public PackConfigRepository db fromConfigdbgetConfig
public void setDeltaCompress(boolean deltaCompress) {this.deltaCompress = deltaCompress;},public void setDeltaCompressboolean deltaCompress thisdeltaCompress  deltaCompress
public ListTrafficPolicyInstancesByHostedZoneResult listTrafficPolicyInstancesByHostedZone(ListTrafficPolicyInstancesByHostedZoneRequest request) {request = beforeClientExecution(request);return executeListTrafficPolicyInstancesByHostedZone(request);},public ListTrafficPolicyInstancesByHostedZoneResult listTrafficPolicyInstancesByHostedZoneListTrafficPolicyInstancesByHostedZoneRequest request request  beforeClientExecutionrequestreturn executeListTrafficPolicyInstancesByHostedZonerequest
"public EscherRecord findFirstWithId(short id) {return findFirstWithId(id, getEscherRecords());}",public EscherRecord findFirstWithIdshort id return findFirstWithIdid getEscherRecords
public byte[] getEntryPathBuffer() {return path;},public byte getEntryPathBuffer return path
public void setFont(Font f){font = f;},public void setFontFont ffont  f
"public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final int byte0 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = byte0 >>> 2;final int byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte0 & 3) << 4) | (byte1 >>> 4);final int byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 15) << 2) | (byte2 >>> 6);values[valuesOffset++] = byte2 & 63;}}",public void decodebyte blocks int blocksOffset int values int valuesOffset int iterations for int i  0 i  iterations i final int byte0  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  2final int byte1  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  3  4  byte1  4final int byte2  blocksblocksOffset  0xFFvaluesvaluesOffset  byte1  15  2  byte2  6valuesvaluesOffset  byte2  63
public boolean hasAnchoringBounds() {return anchoringBounds;},public boolean hasAnchoringBounds return anchoringBounds
"public void drawPolygon(int[] xPoints, int[] yPoints,int nPoints){int right  = findBiggest(xPoints);int bottom = findBiggest(yPoints);int left   = findSmallest(xPoints);int top    = findSmallest(yPoints);HSSFPolygon shape = escherGroup.createPolygon(new HSSFChildAnchor(left,top,right,bottom) );shape.setPolygonDrawArea(right - left, bottom - top);shape.setPoints(addToAll(xPoints, -left), addToAll(yPoints, -top));shape.setLineStyleColor(foreground.getRed(), foreground.getGreen(), foreground.getBlue());shape.setLineWidth(0);shape.setNoFill(true);}",public void drawPolygonint xPoints int yPointsint nPointsint right   findBiggestxPointsint bottom  findBiggestyPointsint left    findSmallestxPointsint top     findSmallestyPointsHSSFPolygon shape  escherGroupcreatePolygonnew HSSFChildAnchorlefttoprightbottom shapesetPolygonDrawArearight  left bottom  topshapesetPointsaddToAllxPoints left addToAllyPoints topshapesetLineStyleColorforegroundgetRed foregroundgetGreen foregroundgetBlueshapesetLineWidth0shapesetNoFilltrue
public String getAccessKeyId() {return getCredentials().getAccessKeyId();},public String getAccessKeyId return getCredentialsgetAccessKeyId
public PutDedicatedIpWarmupAttributesResult putDedicatedIpWarmupAttributes(PutDedicatedIpWarmupAttributesRequest request) {request = beforeClientExecution(request);return executePutDedicatedIpWarmupAttributes(request);},public PutDedicatedIpWarmupAttributesResult putDedicatedIpWarmupAttributesPutDedicatedIpWarmupAttributesRequest request request  beforeClientExecutionrequestreturn executePutDedicatedIpWarmupAttributesrequest
public void print(char ch) {print(String.valueOf(ch));},public void printchar ch printStringvalueOfch
"public String buildExtensionField(String extensionKey) {return buildExtensionField(extensionKey, """");}",public String buildExtensionFieldString extensionKey return buildExtensionFieldextensionKey 
public CompareFacesResult compareFaces(CompareFacesRequest request) {request = beforeClientExecution(request);return executeCompareFaces(request);},public CompareFacesResult compareFacesCompareFacesRequest request request  beforeClientExecutionrequestreturn executeCompareFacesrequest
"public PatchFormatException(List<FormatError> errors) {super(MessageFormat.format(JGitText.get().patchFormatException, errors));this.errors = errors;}",public PatchFormatExceptionListFormatError errors superMessageFormatformatJGitTextgetpatchFormatException errorsthiserrors  errors
public String finish() {sb.append(formatTrailer());return sb.toString();},public String finish sbappendformatTrailerreturn sbtoString
public int getLevelForDistance(double dist) {if (dist == 0)return maxLevels;for (int i = 0; i < maxLevels-1; i++) {if(dist > levelW[i] && dist > levelH[i]) {return i+1;}}return maxLevels;},public int getLevelForDistancedouble dist if dist  0return maxLevelsfor int i  0 i  maxLevels1 i ifdist  levelWi  dist  levelHi return i1return maxLevels
"public int[] init() {final int[] ord = super.init();boost = new float[ArrayUtil.oversize(ord.length, Float.BYTES)];termState = new TermStates[ArrayUtil.oversize(ord.length, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];assert termState.length >= ord.length && boost.length >= ord.length;return ord;}",public int init final int ord  superinitboost  new floatArrayUtiloversizeordlength FloatBYTEStermState  new TermStatesArrayUtiloversizeordlength RamUsageEstimatorNUMBYTESOBJECTREFassert termStatelength  ordlength  boostlength  ordlengthreturn ord
public final void yyreset(java.io.Reader Reader) {zzReader = Reader;zzAtBOL  = true;zzAtEOF  = false;zzEOFDone = false;zzEndRead = zzStartRead = 0;zzCurrentPos = zzMarkedPos = 0;zzFinalHighSurrogate = 0;yyline = yychar = yycolumn = 0;zzLexicalState = YYINITIAL;if (zzBuffer.length > ZZ_BUFFERSIZE)zzBuffer = new char[ZZ_BUFFERSIZE];},public final void yyresetjavaioReader Reader zzReader  ReaderzzAtBOL   truezzAtEOF   falsezzEOFDone  falsezzEndRead  zzStartRead  0zzCurrentPos  zzMarkedPos  0zzFinalHighSurrogate  0yyline  yychar  yycolumn  0zzLexicalState  YYINITIALif zzBufferlength  ZZBUFFERSIZEzzBuffer  new charZZBUFFERSIZE
public void deleteFile(String name) {throw new UnsupportedOperationException();},public void deleteFileString name throw new UnsupportedOperationException
public StopTrainingDocumentClassifierResult stopTrainingDocumentClassifier(StopTrainingDocumentClassifierRequest request) {request = beforeClientExecution(request);return executeStopTrainingDocumentClassifier(request);},public StopTrainingDocumentClassifierResult stopTrainingDocumentClassifierStopTrainingDocumentClassifierRequest request request  beforeClientExecutionrequestreturn executeStopTrainingDocumentClassifierrequest
"public TermStats(int docFreq, long totalTermFreq) {this.docFreq = docFreq;this.totalTermFreq = totalTermFreq;}",public TermStatsint docFreq long totalTermFreq thisdocFreq  docFreqthistotalTermFreq  totalTermFreq
public GetAuthorizersResult getAuthorizers(GetAuthorizersRequest request) {request = beforeClientExecution(request);return executeGetAuthorizers(request);},public GetAuthorizersResult getAuthorizersGetAuthorizersRequest request request  beforeClientExecutionrequestreturn executeGetAuthorizersrequest
public void dispatch(RepositoryEvent event) {List<ListenerHandle> list = lists.get(event.getListenerType());if (list != null) {for (ListenerHandle handle : list)event.dispatch(handle.listener);}},public void dispatchRepositoryEvent event ListListenerHandle list  listsgeteventgetListenerTypeif list  null for ListenerHandle handle  listeventdispatchhandlelistener
"public String toString(String field) {StringBuilder buffer = new StringBuilder();buffer.append(""spanNot("");buffer.append(include.toString(field));buffer.append("", "");buffer.append(exclude.toString(field));buffer.append("", "");buffer.append(Integer.toString(pre));buffer.append("", "");buffer.append(Integer.toString(post));buffer.append("")"");return buffer.toString();}",public String toStringString field StringBuilder buffer  new StringBuilderbufferappendspanNotbufferappendincludetoStringfieldbufferappend bufferappendexcludetoStringfieldbufferappend bufferappendIntegertoStringprebufferappend bufferappendIntegertoStringpostbufferappendreturn buffertoString
public SearchGameSessionsResult searchGameSessions(SearchGameSessionsRequest request) {request = beforeClientExecution(request);return executeSearchGameSessions(request);},public SearchGameSessionsResult searchGameSessionsSearchGameSessionsRequest request request  beforeClientExecutionrequestreturn executeSearchGameSessionsrequest
"public int stem(char s[], int len) {if (len < 4)return len;for (int i = 0; i < len; i++)switch(s[i]) {case 'ä':case 'å': s[i] = 'a'; break;case 'ö': s[i] = 'o'; break;}len = step1(s, len);len = step2(s, len);len = step3(s, len);len = norm1(s, len);len = norm2(s, len);return len;}",public int stemchar s int len if len  4return lenfor int i  0 i  len iswitchsi case äcase å si  a breakcase ö si  o breaklen  step1s lenlen  step2s lenlen  step3s lenlen  norm1s lenlen  norm2s lenreturn len
public PutConfigurationSetReputationOptionsResult putConfigurationSetReputationOptions(PutConfigurationSetReputationOptionsRequest request) {request = beforeClientExecution(request);return executePutConfigurationSetReputationOptions(request);},public PutConfigurationSetReputationOptionsResult putConfigurationSetReputationOptionsPutConfigurationSetReputationOptionsRequest request request  beforeClientExecutionrequestreturn executePutConfigurationSetReputationOptionsrequest
public ListAttendeeTagsResult listAttendeeTags(ListAttendeeTagsRequest request) {request = beforeClientExecution(request);return executeListAttendeeTags(request);},public ListAttendeeTagsResult listAttendeeTagsListAttendeeTagsRequest request request  beforeClientExecutionrequestreturn executeListAttendeeTagsrequest
"public static void validateSheetName(String sheetName) {if (sheetName == null) {throw new IllegalArgumentException(""sheetName must not be null"");}int len = sheetName.length();if (len < 1 || len > 31) {throw new IllegalArgumentException(""sheetName '"" + sheetName+ ""' is invalid - character count MUST be greater than or equal to 1 and less than or equal to 31"");}for (int i=0; i<len; i++) {char ch = sheetName.charAt(i);switch (ch) {case '/':case '\\':case '?':case '*':case ']':case '[':case ':':break;default:continue;}throw new IllegalArgumentException(""Invalid char ("" + ch+ "") found at index ("" + i + "") in sheet name '"" + sheetName + ""'"");}if (sheetName.charAt(0) == '\'' || sheetName.charAt(len-1) == '\'') {throw new IllegalArgumentException(""Invalid sheet name '"" + sheetName+ ""'. Sheet names must not begin or end with (')."");}}",public static void validateSheetNameString sheetName if sheetName  null throw new IllegalArgumentExceptionsheetName must not be nullint len  sheetNamelengthif len  1  len  31 throw new IllegalArgumentExceptionsheetName   sheetName  is invalid  character count MUST be greater than or equal to 1 and less than or equal to 31for int i0 ilen i char ch  sheetNamecharAtiswitch ch case case case case case case case breakdefaultcontinuethrow new IllegalArgumentExceptionInvalid char   ch  found at index   i   in sheet name   sheetName  if sheetNamecharAt0    sheetNamecharAtlen1   throw new IllegalArgumentExceptionInvalid sheet name   sheetName  Sheet names must not begin or end with 
public long getPosition() {return getPointer();},public long getPosition return getPointer
public void reset(DataOutput out) {assert out != null;this.out = out;off = 0;ord = 0L;finished = false;},public void resetDataOutput out assert out  nullthisout  outoff  0ord  0Lfinished  false
"public String toString(String field) {final StringBuilder buffer = new StringBuilder();if (!term.field().equals(field)) {buffer.append(term.field());buffer.append("":"");}buffer.append(term.text());buffer.append('~');buffer.append(maxEdits);return buffer.toString();}",public String toStringString field final StringBuilder buffer  new StringBuilderif termfieldequalsfield bufferappendtermfieldbufferappendbufferappendtermtextbufferappendbufferappendmaxEditsreturn buffertoString
public RevFilter clone() {return new MaxCountRevFilter(maxCount);},public RevFilter clone return new MaxCountRevFiltermaxCount
public DisableUserResult disableUser(DisableUserRequest request) {request = beforeClientExecution(request);return executeDisableUser(request);},public DisableUserResult disableUserDisableUserRequest request request  beforeClientExecutionrequestreturn executeDisableUserrequest
public void append(String stringToMatch) {for (int i = 0; i < stringToMatch.length(); i++) {final char c = stringToMatch.charAt(i);if (!extendStringToMatchByOneCharacter(c))break;}},public void appendString stringToMatch for int i  0 i  stringToMatchlength i final char c  stringToMatchcharAtiif extendStringToMatchByOneCharactercbreak
public StopTrainingJobResult stopTrainingJob(StopTrainingJobRequest request) {request = beforeClientExecution(request);return executeStopTrainingJob(request);},public StopTrainingJobResult stopTrainingJobStopTrainingJobRequest request request  beforeClientExecutionrequestreturn executeStopTrainingJobrequest
"public IndexInput openInput(String name, IOContext context) throws IOException {ensureOpen();final String id = IndexFileNames.stripSegmentName(name);final FileEntry entry = entries.get(id);if (entry == null) {String datFileName = IndexFileNames.segmentFileName(segmentName, """", Lucene50CompoundFormat.DATA_EXTENSION);throw new FileNotFoundException(""No sub-file with id "" + id + "" found in compound file \"""" + datFileName + ""\"" (fileName="" + name + "" files: "" + entries.keySet() + "")"");}return handle.slice(name, entry.offset, entry.length);}",public IndexInput openInputString name IOContext context throws IOException ensureOpenfinal String id  IndexFileNamesstripSegmentNamenamefinal FileEntry entry  entriesgetidif entry  null String datFileName  IndexFileNamessegmentFileNamesegmentName  Lucene50CompoundFormatDATAEXTENSIONthrow new FileNotFoundExceptionNo subfile with id   id   found in compound file   datFileName   fileName  name   files   entrieskeySet  return handleslicename entryoffset entrylength
public GetSnowballUsageResult getSnowballUsage(GetSnowballUsageRequest request) {request = beforeClientExecution(request);return executeGetSnowballUsage(request);},public GetSnowballUsageResult getSnowballUsageGetSnowballUsageRequest request request  beforeClientExecutionrequestreturn executeGetSnowballUsagerequest
public DeleteUserProfileResult deleteUserProfile(DeleteUserProfileRequest request) {request = beforeClientExecution(request);return executeDeleteUserProfile(request);},public DeleteUserProfileResult deleteUserProfileDeleteUserProfileRequest request request  beforeClientExecutionrequestreturn executeDeleteUserProfilerequest
"public int compare(ConfigLine a, ConfigLine b) {return compare2(a.section, a.subsection, a.name,b.section, b.subsection, b.name);}",public int compareConfigLine a ConfigLine b return compare2asection asubsection anamebsection bsubsection bname
public LongBuffer asReadOnlyBuffer() {return duplicate();},public LongBuffer asReadOnlyBuffer return duplicate
public HSSFComment createCellComment(ClientAnchor anchor) {return createComment((HSSFAnchor) anchor);},public HSSFComment createCellCommentClientAnchor anchor return createCommentHSSFAnchor anchor
public CollatedTermAttributeImpl(Collator collator) {this.collator = (Collator) collator.clone();},public CollatedTermAttributeImplCollator collator thiscollator  Collator collatorclone
public UpdatePipelineStatusResult updatePipelineStatus(UpdatePipelineStatusRequest request) {request = beforeClientExecution(request);return executeUpdatePipelineStatus(request);},public UpdatePipelineStatusResult updatePipelineStatusUpdatePipelineStatusRequest request request  beforeClientExecutionrequestreturn executeUpdatePipelineStatusrequest
"public void copyTo(char[] tmp, StringBuilder w) {toHexCharArray(tmp);w.append(tmp, 0, Constants.OBJECT_ID_STRING_LENGTH);}",public void copyTochar tmp StringBuilder w toHexCharArraytmpwappendtmp 0 ConstantsOBJECTIDSTRINGLENGTH
public BytesReader getBytesReader() {if (fst == null) {return null;} else {return fst.getBytesReader();}},public BytesReader getBytesReader if fst  null return null else return fstgetBytesReader
public CreateRouteTableResult createRouteTable(CreateRouteTableRequest request) {request = beforeClientExecution(request);return executeCreateRouteTable(request);},public CreateRouteTableResult createRouteTableCreateRouteTableRequest request request  beforeClientExecutionrequestreturn executeCreateRouteTablerequest
"public String toString(String field) {return ""ToParentBlockJoinQuery (""+childQuery.toString()+"")"";}",public String toStringString field return ToParentBlockJoinQuery childQuerytoString
public DisassociateClientVpnTargetNetworkResult disassociateClientVpnTargetNetwork(DisassociateClientVpnTargetNetworkRequest request) {request = beforeClientExecution(request);return executeDisassociateClientVpnTargetNetwork(request);},public DisassociateClientVpnTargetNetworkResult disassociateClientVpnTargetNetworkDisassociateClientVpnTargetNetworkRequest request request  beforeClientExecutionrequestreturn executeDisassociateClientVpnTargetNetworkrequest
"public String toString() {return ""<slop value='"" + getValueString() + ""'>"" + ""\n""+ getChild().toString() + ""\n</slop>"";}",public String toString return slop value  getValueString    n getChildtoString  nslop
public GetExportJobsResult getExportJobs(GetExportJobsRequest request) {request = beforeClientExecution(request);return executeGetExportJobs(request);},public GetExportJobsResult getExportJobsGetExportJobsRequest request request  beforeClientExecutionrequestreturn executeGetExportJobsrequest
public UpdateBaiduChannelResult updateBaiduChannel(UpdateBaiduChannelRequest request) {request = beforeClientExecution(request);return executeUpdateBaiduChannel(request);},public UpdateBaiduChannelResult updateBaiduChannelUpdateBaiduChannelRequest request request  beforeClientExecutionrequestreturn executeUpdateBaiduChannelrequest
public ImportApiResult importApi(ImportApiRequest request) {request = beforeClientExecution(request);return executeImportApi(request);},public ImportApiResult importApiImportApiRequest request request  beforeClientExecutionrequestreturn executeImportApirequest
public synchronized int read() {return pos < count ? buffer.charAt(pos++) & 0xFF : -1;},public synchronized int read return pos  count  buffercharAtpos  0xFF  1
public GetUserResult getUser(GetUserRequest request) {request = beforeClientExecution(request);return executeGetUser(request);},public GetUserResult getUserGetUserRequest request request  beforeClientExecutionrequestreturn executeGetUserrequest
public GetHealthCheckLastFailureReasonResult getHealthCheckLastFailureReason(GetHealthCheckLastFailureReasonRequest request) {request = beforeClientExecution(request);return executeGetHealthCheckLastFailureReason(request);},public GetHealthCheckLastFailureReasonResult getHealthCheckLastFailureReasonGetHealthCheckLastFailureReasonRequest request request  beforeClientExecutionrequestreturn executeGetHealthCheckLastFailureReasonrequest
public String getRawQuery() {return query;},public String getRawQuery return query
"public static void fill(long[] array, int start, int end, long value) {Arrays.checkStartAndEnd(array.length, start, end);for (int i = start; i < end; i++) {array[i] = value;}}",public static void filllong array int start int end long value ArrayscheckStartAndEndarraylength start endfor int i  start i  end i arrayi  value
public boolean equals(Object obj) {if (obj instanceof StatePair) {StatePair p = (StatePair) obj;return p.s1 == s1 && p.s2 == s2;} else return false;},public boolean equalsObject obj if obj instanceof StatePair StatePair p  StatePair objreturn ps1  s1  ps2  s2 else return false
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[OLD STRING]\n"");buffer.append(""    .string            = "").append(getString()).append(""\n"");buffer.append(""[/OLD STRING]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendOLD STRINGnbufferappend    string             appendgetStringappendnbufferappendOLD STRINGnreturn buffertoString
public ExecutePolicyResult executePolicy(ExecutePolicyRequest request) {request = beforeClientExecution(request);return executeExecutePolicy(request);},public ExecutePolicyResult executePolicyExecutePolicyRequest request request  beforeClientExecutionrequestreturn executeExecutePolicyrequest
public UpdateEmailTemplateResult updateEmailTemplate(UpdateEmailTemplateRequest request) {request = beforeClientExecution(request);return executeUpdateEmailTemplate(request);},public UpdateEmailTemplateResult updateEmailTemplateUpdateEmailTemplateRequest request request  beforeClientExecutionrequestreturn executeUpdateEmailTemplaterequest
public boolean equalsContents(final Object o) {final CustomProperty c = (CustomProperty) o;final String name1 = c.getName();final String name2 = this.getName();boolean equalNames = true;if (name1 == null) {equalNames = name2 == null;} else {equalNames = name1.equals(name2);}return equalNames && c.getID() == this.getID()&& c.getType() == this.getType()&& c.getValue().equals(this.getValue());},public boolean equalsContentsfinal Object o final CustomProperty c  CustomProperty ofinal String name1  cgetNamefinal String name2  thisgetNameboolean equalNames  trueif name1  null equalNames  name2  null else equalNames  name1equalsname2return equalNames  cgetID  thisgetID cgetType  thisgetType cgetValueequalsthisgetValue
public DuplicateFormatFlagsException(String f) {if (f == null) {throw new NullPointerException();}flags = f;},public DuplicateFormatFlagsExceptionString f if f  null throw new NullPointerExceptionflags  f
public synchronized void mark(int readlimit) {marklimit = readlimit;markpos = pos;},public synchronized void markint readlimit marklimit  readlimitmarkpos  pos
"public final int prefixCompare(AnyObjectId other) {int cmp;cmp = NB.compareUInt32(w1, mask(1, other.w1));if (cmp != 0)return cmp;cmp = NB.compareUInt32(w2, mask(2, other.w2));if (cmp != 0)return cmp;cmp = NB.compareUInt32(w3, mask(3, other.w3));if (cmp != 0)return cmp;cmp = NB.compareUInt32(w4, mask(4, other.w4));if (cmp != 0)return cmp;return NB.compareUInt32(w5, mask(5, other.w5));}",public final int prefixCompareAnyObjectId other int cmpcmp  NBcompareUInt32w1 mask1 otherw1if cmp  0return cmpcmp  NBcompareUInt32w2 mask2 otherw2if cmp  0return cmpcmp  NBcompareUInt32w3 mask3 otherw3if cmp  0return cmpcmp  NBcompareUInt32w4 mask4 otherw4if cmp  0return cmpreturn NBcompareUInt32w5 mask5 otherw5
public UpdateRequestValidatorResult updateRequestValidator(UpdateRequestValidatorRequest request) {request = beforeClientExecution(request);return executeUpdateRequestValidator(request);},public UpdateRequestValidatorResult updateRequestValidatorUpdateRequestValidatorRequest request request  beforeClientExecutionrequestreturn executeUpdateRequestValidatorrequest
public Extensions(char extensionFieldDelimiter) {this.extensionFieldDelimiter = extensionFieldDelimiter;},public Extensionschar extensionFieldDelimiter thisextensionFieldDelimiter  extensionFieldDelimiter
public TokenStream create(TokenStream input) {return new EnglishMinimalStemFilter(input);},public TokenStream createTokenStream input return new EnglishMinimalStemFilterinput
public QueryText getPathElement(int index) {return values.get(index);},public QueryText getPathElementint index return valuesgetindex
public void serialize(LittleEndianOutput out) {out.writeShort(_sid);out.writeShort(_data.length);out.write(_data);},public void serializeLittleEndianOutput out outwriteShortsidoutwriteShortdatalengthoutwritedata
public void setQueryConfigHandler(QueryConfigHandler queryConfigHandler) {this.queryConfig = queryConfigHandler;for (QueryNodeProcessor processor : this.processors) {processor.setQueryConfigHandler(this.queryConfig);}},public void setQueryConfigHandlerQueryConfigHandler queryConfigHandler thisqueryConfig  queryConfigHandlerfor QueryNodeProcessor processor  thisprocessors processorsetQueryConfigHandlerthisqueryConfig
public DeleteGameSessionQueueResult deleteGameSessionQueue(DeleteGameSessionQueueRequest request) {request = beforeClientExecution(request);return executeDeleteGameSessionQueue(request);},public DeleteGameSessionQueueResult deleteGameSessionQueueDeleteGameSessionQueueRequest request request  beforeClientExecutionrequestreturn executeDeleteGameSessionQueuerequest
"public List<DFAState> getStates() {List<DFAState> result = new ArrayList<DFAState>(states.keySet());Collections.sort(result, new Comparator<DFAState>());}",public ListDFAState getStates ListDFAState result  new ArrayListDFAStatestateskeySetCollectionssortresult new ComparatorDFAState
public static CmpOp getOperator(String value) {int len = value.length();if (len < 1) {return OP_NONE;}char firstChar = value.charAt(0);switch(firstChar) {case '=':return OP_EQ;case '>':if (len > 1) {switch(value.charAt(1)) {case '=':return OP_GE;}}return OP_GT;case '<':if (len > 1) {switch(value.charAt(1)) {case '=':return OP_LE;case '>':return OP_NE;}}return OP_LT;}return OP_NONE;},public static CmpOp getOperatorString value int len  valuelengthif len  1 return OPNONEchar firstChar  valuecharAt0switchfirstChar case return OPEQcase if len  1 switchvaluecharAt1 case return OPGEreturn OPGTcase if len  1 switchvaluecharAt1 case return OPLEcase return OPNEreturn OPLTreturn OPNONE
"public void addChars( char[] characters, int[] widths ){for ( int i = 0; i < characters.length; i++ ){charWidths.put( Character.valueOf(characters[i]), Integer.valueOf(widths[i]));}}",public void addChars char characters int widths for  int i  0 i  characterslength i charWidthsput CharactervalueOfcharactersi IntegervalueOfwidthsi
"public ShortBuffer duplicate() {return copy(this, mark);}",public ShortBuffer duplicate return copythis mark
"public void setValidating(boolean validating) {features.put (XmlPullParser.FEATURE_VALIDATION, validating);}",public void setValidatingboolean validating featuresput XmlPullParserFEATUREVALIDATION validating
"public DedicatedCapacityInner create(String resourceGroupName, String dedicatedCapacityName, DedicatedCapacityInner capacityParameters) {return createWithServiceResponseAsync(resourceGroupName, dedicatedCapacityName, capacityParameters).toBlocking().last().body();}",public DedicatedCapacityInner createString resourceGroupName String dedicatedCapacityName DedicatedCapacityInner capacityParameters return createWithServiceResponseAsyncresourceGroupName dedicatedCapacityName capacityParameterstoBlockinglastbody
public CancelIngestionResult cancelIngestion(CancelIngestionRequest request) {request = beforeClientExecution(request);return executeCancelIngestion(request);},public CancelIngestionResult cancelIngestionCancelIngestionRequest request request  beforeClientExecutionrequestreturn executeCancelIngestionrequest
public void setEncoding(String encodingName) {encoding = Charset.forName(encodingName);},public void setEncodingString encodingName encoding  CharsetforNameencodingName
public DeleteTemplateAliasResult deleteTemplateAlias(DeleteTemplateAliasRequest request) {request = beforeClientExecution(request);return executeDeleteTemplateAlias(request);},public DeleteTemplateAliasResult deleteTemplateAliasDeleteTemplateAliasRequest request request  beforeClientExecutionrequestreturn executeDeleteTemplateAliasrequest
"public String resolveNameXText(int refIndex, int definedNameIndex, InternalWorkbook workbook) {int extBookIndex = _externSheetRecord.getExtbookIndexFromRefIndex(refIndex);int firstTabIndex = _externSheetRecord.getFirstSheetIndexFromRefIndex(refIndex);if (firstTabIndex == -1) {throw new RuntimeException(""Referenced sheet could not be found"");}ExternalBookBlock externalBook = _externalBookBlocks[extBookIndex];if (externalBook._externalNameRecords.length > definedNameIndex) {return _externalBookBlocks[extBookIndex].getNameText(definedNameIndex);} else if (firstTabIndex == -2) {NameRecord nr = getNameRecord(definedNameIndex);int sheetNumber = nr.getSheetNumber();StringBuilder text = new StringBuilder(64);if (sheetNumber > 0) {String sheetName = workbook.getSheetName(sheetNumber - 1);SheetNameFormatter.appendFormat(text, sheetName);text.append(""!"");}text.append(nr.getNameText());return text.toString();} else {throw new ArrayIndexOutOfBoundsException(""Ext Book Index relative but beyond the supported length, was "" +extBookIndex + "" but maximum is "" + _externalBookBlocks.length);}}",public String resolveNameXTextint refIndex int definedNameIndex InternalWorkbook workbook int extBookIndex  externSheetRecordgetExtbookIndexFromRefIndexrefIndexint firstTabIndex  externSheetRecordgetFirstSheetIndexFromRefIndexrefIndexif firstTabIndex  1 throw new RuntimeExceptionReferenced sheet could not be foundExternalBookBlock externalBook  externalBookBlocksextBookIndexif externalBookexternalNameRecordslength  definedNameIndex return externalBookBlocksextBookIndexgetNameTextdefinedNameIndex else if firstTabIndex  2 NameRecord nr  getNameRecorddefinedNameIndexint sheetNumber  nrgetSheetNumberStringBuilder text  new StringBuilder64if sheetNumber  0 String sheetName  workbookgetSheetNamesheetNumber  1SheetNameFormatterappendFormattext sheetNametextappendtextappendnrgetNameTextreturn texttoString else throw new ArrayIndexOutOfBoundsExceptionExt Book Index relative but beyond the supported length was  extBookIndex   but maximum is   externalBookBlockslength
public InetAddress getRemoteAddress() {return peer;},public InetAddress getRemoteAddress return peer
public boolean equals(Object obj) {if (obj == this) {return true;}else if (!(obj instanceof LexerTypeAction)) {return false;}return type == ((LexerTypeAction)obj).type;},public boolean equalsObject obj if obj  this return trueelse if obj instanceof LexerTypeAction return falsereturn type  LexerTypeActionobjtype
public RefValueArray(RefEval ref) {super(ref.getNumberOfSheets());_ref = ref;_width = ref.getNumberOfSheets();},public RefValueArrayRefEval ref superrefgetNumberOfSheetsref  refwidth  refgetNumberOfSheets
public static Git wrap(Repository repo) {return new Git(repo);},public static Git wrapRepository repo return new Gitrepo
public int get64BitNormalisedExponent() {return _binaryExponent + _significand.bitLength() - C_64;},public int get64BitNormalisedExponent return binaryExponent  significandbitLength  C64
"public GetRepoWebhookRequest() {super(""cr"", ""2016-06-07"", ""GetRepoWebhook"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/webhooks"");setMethod(MethodType.GET);}",public GetRepoWebhookRequest supercr 20160607 GetRepoWebhook crsetUriPatternreposRepoNamespaceRepoNamewebhookssetMethodMethodTypeGET
"public Object merge(Object first, Object second) {List<T> outputList = new ArrayList<>();if (!(first instanceof List)) {outputList.add((T) first);} else {outputList.addAll((List<T>) first);}if (!(second instanceof List)) {outputList.add((T) second);} else {outputList.addAll((List<T>) second);}return outputList;}",public Object mergeObject first Object second ListT outputList  new ArrayListif first instanceof List outputListaddT first else outputListaddAllListT firstif second instanceof List outputListaddT second else outputListaddAllListT secondreturn outputList
public UpdateThreatIntelSetResult updateThreatIntelSet(UpdateThreatIntelSetRequest request) {request = beforeClientExecution(request);return executeUpdateThreatIntelSet(request);},public UpdateThreatIntelSetResult updateThreatIntelSetUpdateThreatIntelSetRequest request request  beforeClientExecutionrequestreturn executeUpdateThreatIntelSetrequest
public final float getFloat(int index) {return Float.intBitsToFloat(getInt(index));},public final float getFloatint index return FloatintBitsToFloatgetIntindex
"public SortingFields(final Fields in, FieldInfos infos, Sorter.DocMap docMap) {super(in);this.docMap = docMap;this.infos = infos;}",public SortingFieldsfinal Fields in FieldInfos infos SorterDocMap docMap superinthisdocMap  docMapthisinfos  infos
"public static SupBookRecord createAddInFunctions() {return new SupBookRecord(true, (short)1 );}",public static SupBookRecord createAddInFunctions return new SupBookRecordtrue short1 
public ImportClientVpnClientCertificateRevocationListResult importClientVpnClientCertificateRevocationList(ImportClientVpnClientCertificateRevocationListRequest request) {request = beforeClientExecution(request);return executeImportClientVpnClientCertificateRevocationList(request);},public ImportClientVpnClientCertificateRevocationListResult importClientVpnClientCertificateRevocationListImportClientVpnClientCertificateRevocationListRequest request request  beforeClientExecutionrequestreturn executeImportClientVpnClientCertificateRevocationListrequest
public GetVoiceConnectorOriginationResult getVoiceConnectorOrigination(GetVoiceConnectorOriginationRequest request) {request = beforeClientExecution(request);return executeGetVoiceConnectorOrigination(request);},public GetVoiceConnectorOriginationResult getVoiceConnectorOriginationGetVoiceConnectorOriginationRequest request request  beforeClientExecutionrequestreturn executeGetVoiceConnectorOriginationrequest
public GetTypedLinkFacetInformationResult getTypedLinkFacetInformation(GetTypedLinkFacetInformationRequest request) {request = beforeClientExecution(request);return executeGetTypedLinkFacetInformation(request);},public GetTypedLinkFacetInformationResult getTypedLinkFacetInformationGetTypedLinkFacetInformationRequest request request  beforeClientExecutionrequestreturn executeGetTypedLinkFacetInformationrequest
"public PhraseSlopQueryNode(QueryNode query, int value) {if (query == null) {throw new QueryNodeError(new MessageImpl(QueryParserMessages.NODE_ACTION_NOT_SUPPORTED, ""query"", ""null""));}this.value = value;setLeaf(false);allocate();add(query);}",public PhraseSlopQueryNodeQueryNode query int value if query  null throw new QueryNodeErrornew MessageImplQueryParserMessagesNODEACTIONNOTSUPPORTED query nullthisvalue  valuesetLeaffalseallocateaddquery
public UpdateDeploymentGroupResult updateDeploymentGroup(UpdateDeploymentGroupRequest request) {request = beforeClientExecution(request);return executeUpdateDeploymentGroup(request);},public UpdateDeploymentGroupResult updateDeploymentGroupUpdateDeploymentGroupRequest request request  beforeClientExecutionrequestreturn executeUpdateDeploymentGrouprequest
"public DeleteVaultNotificationsRequest(String accountId, String vaultName) {setAccountId(accountId);setVaultName(vaultName);}",public DeleteVaultNotificationsRequestString accountId String vaultName setAccountIdaccountIdsetVaultNamevaultName
@Override public boolean contains(Object key) {return subMap.containsKey(key);},Override public boolean containsObject key return subMapcontainsKeykey
"public int get(String name, int dflt) {int vals[] = (int[]) valByRound.get(name);if (vals != null) {return vals[roundNumber % vals.length];}String sval = props.getProperty(name, """" + dflt);if (sval.indexOf("":"") < 0) {return Integer.parseInt(sval);}int k = sval.indexOf("":"");String colName = sval.substring(0, k);sval = sval.substring(k + 1);colForValByRound.put(name, colName);vals = propToIntArray(sval);valByRound.put(name, vals);return vals[roundNumber % vals.length];}",public int getString name int dflt int vals  int valByRoundgetnameif vals  null return valsroundNumber  valslengthString sval  propsgetPropertyname   dfltif svalindexOf  0 return IntegerparseIntsvalint k  svalindexOfString colName  svalsubstring0 ksval  svalsubstringk  1colForValByRoundputname colNamevals  propToIntArraysvalvalByRoundputname valsreturn valsroundNumber  valslength
public DeleteGitHubAccountTokenResult deleteGitHubAccountToken(DeleteGitHubAccountTokenRequest request) {request = beforeClientExecution(request);return executeDeleteGitHubAccountToken(request);},public DeleteGitHubAccountTokenResult deleteGitHubAccountTokenDeleteGitHubAccountTokenRequest request request  beforeClientExecutionrequestreturn executeDeleteGitHubAccountTokenrequest
public GetPasswordDataRequest(String instanceId) {setInstanceId(instanceId);},public GetPasswordDataRequestString instanceId setInstanceIdinstanceId
public GetCloudFrontOriginAccessIdentityConfigRequest(String id) {setId(id);},public GetCloudFrontOriginAccessIdentityConfigRequestString id setIdid
"public STSAssumeRoleSessionCredentialsProvider withRoleSessionDurationSeconds(long roleSessionDurationSeconds) {if (roleSessionDurationSeconds < 900 || roleSessionDurationSeconds > 3600) {throw new IllegalArgumentException(""Assume Role session duration should be in the range of 15min - 1Hr"");}this.roleSessionDurationSeconds = roleSessionDurationSeconds;return this;}",public STSAssumeRoleSessionCredentialsProvider withRoleSessionDurationSecondslong roleSessionDurationSeconds if roleSessionDurationSeconds  900  roleSessionDurationSeconds  3600 throw new IllegalArgumentExceptionAssume Role session duration should be in the range of 15min  1HrthisroleSessionDurationSeconds  roleSessionDurationSecondsreturn this
"final public QueryNode ModClause(CharSequence field) throws ParseException {QueryNode q;ModifierQueryNode.Modifier mods;mods = Modifiers();q = Clause(field);if (mods != ModifierQueryNode.Modifier.MOD_NONE) {q = new ModifierQueryNode(q, mods);}{if (true) return q;}throw new Error(""Missing return statement in function"");}",final public QueryNode ModClauseCharSequence field throws ParseException QueryNode qModifierQueryNodeModifier modsmods  Modifiersq  Clausefieldif mods  ModifierQueryNodeModifierMODNONE q  new ModifierQueryNodeq modsif true return qthrow new ErrorMissing return statement in function
public AbbreviatedObjectId getOldId(int nthParent) {return oldIds[nthParent];},public AbbreviatedObjectId getOldIdint nthParent return oldIdsnthParent
"public HttpRequest(String strUrl, Map<String, String> tmpHeaders) {super(strUrl);if (null != tmpHeaders) {this.headers = tmpHeaders;}}",public HttpRequestString strUrl MapString String tmpHeaders superstrUrlif null  tmpHeaders thisheaders  tmpHeaders
public AcceptInvitationResult acceptInvitation(AcceptInvitationRequest request) {request = beforeClientExecution(request);return executeAcceptInvitation(request);},public AcceptInvitationResult acceptInvitationAcceptInvitationRequest request request  beforeClientExecutionrequestreturn executeAcceptInvitationrequest
"public int getFormatIndex(CellValueRecordInterface cell) {ExtendedFormatRecord xfr = _xfRecords.get(cell.getXFIndex());if (xfr == null) {logger.log( POILogger.ERROR, ""Cell "" + cell.getRow() + "","" + cell.getColumn()+ "" uses XF with index "" + cell.getXFIndex() + "", but we don't have that"");return -1;}return xfr.getFormatIndex();}",public int getFormatIndexCellValueRecordInterface cell ExtendedFormatRecord xfr  xfRecordsgetcellgetXFIndexif xfr  null loggerlog POILoggerERROR Cell   cellgetRow    cellgetColumn  uses XF with index   cellgetXFIndex   but we dont have thatreturn 1return xfrgetFormatIndex
public final File getFile() {return path;},public final File getFile return path
"public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {final byte block = blocks[blocksOffset++];values[valuesOffset++] = (block >>> 4) & 15;values[valuesOffset++] = block & 15;}}",public void decodebyte blocks int blocksOffset int values int valuesOffset int iterations for int j  0 j  iterations j final byte block  blocksblocksOffsetvaluesvaluesOffset  block  4  15valuesvaluesOffset  block  15
"public String toString() {StringBuilder sb = new StringBuilder();sb.append(getClass().getName());sb.append("" ["");if (externalWorkbookNumber >= 0) {sb.append("" ["");sb.append(""workbook="").append(getExternalWorkbookNumber());sb.append(""] "");}sb.append(""sheet="").append(firstSheetName);if (lastSheetName != null) {sb.append("" : "");sb.append(""sheet="").append(lastSheetName);}sb.append("" ! "");sb.append(formatReferenceAsString());sb.append(""]"");return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappendgetClassgetNamesbappend if externalWorkbookNumber  0 sbappend sbappendworkbookappendgetExternalWorkbookNumbersbappend sbappendsheetappendfirstSheetNameif lastSheetName  null sbappend  sbappendsheetappendlastSheetNamesbappend  sbappendformatReferenceAsStringsbappendreturn sbtoString
public PushCommand setRefSpecs(List<RefSpec> specs) {checkCallable();this.refSpecs.clear();this.refSpecs.addAll(specs);return this;},public PushCommand setRefSpecsListRefSpec specs checkCallablethisrefSpecsclearthisrefSpecsaddAllspecsreturn this
"public static boolean isBinary(byte[] raw, int length) {if (length > FIRST_FEW_BYTES)length = FIRST_FEW_BYTES;for (int ptr = 0; ptr < length; ptr++)if (raw[ptr] == '\0')return true;return false;}",public static boolean isBinarybyte raw int length if length  FIRSTFEWBYTESlength  FIRSTFEWBYTESfor int ptr  0 ptr  length ptrif rawptr  0return truereturn false
@Override public void clear() {AbstractBiMap.this.clear();},Override public void clear AbstractBiMapthisclear
public PackingPhase getPhase() {return phase;},public PackingPhase getPhase return phase
public State clone() {State clone = new State();clone.attribute = attribute.clone();if (next != null) {clone.next = next.clone();}return clone;},public State clone State clone  new Statecloneattribute  attributecloneif next  null clonenext  nextclonereturn clone
public static double acosh(double a) {return Math.log(Math.sqrt(a * a - 1.0d) + a);},public static double acoshdouble a return MathlogMathsqrta  a  10d  a
public GetSearchSuggestionsResult getSearchSuggestions(GetSearchSuggestionsRequest request) {request = beforeClientExecution(request);return executeGetSearchSuggestions(request);},public GetSearchSuggestionsResult getSearchSuggestionsGetSearchSuggestionsRequest request request  beforeClientExecutionrequestreturn executeGetSearchSuggestionsrequest
"public static Date getJavaDate(double date, boolean use1904windowing, TimeZone tz) {return getJavaDate(date, use1904windowing, tz, false);}",public static Date getJavaDatedouble date boolean use1904windowing TimeZone tz return getJavaDatedate use1904windowing tz false
public ListVerifiedEmailAddressesResult listVerifiedEmailAddresses(ListVerifiedEmailAddressesRequest request) {request = beforeClientExecution(request);return executeListVerifiedEmailAddresses(request);},public ListVerifiedEmailAddressesResult listVerifiedEmailAddressesListVerifiedEmailAddressesRequest request request  beforeClientExecutionrequestreturn executeListVerifiedEmailAddressesrequest
public int compareTo(QualityQuery other) {try {int n = Integer.parseInt(queryID);int nOther = Integer.parseInt(other.queryID);return n - nOther;} catch (NumberFormatException e) {return queryID.compareTo(other.queryID);}},public int compareToQualityQuery other try int n  IntegerparseIntqueryIDint nOther  IntegerparseIntotherqueryIDreturn n  nOther catch NumberFormatException e return queryIDcompareTootherqueryID
public void setExportAll(boolean export) {exportAll = export;},public void setExportAllboolean export exportAll  export
"public LexerATNConfig(LexerATNConfig c, ATNState state,PredictionContext context) {super(c, state, context, c.semanticContext);this.lexerActionExecutor = c.lexerActionExecutor;this.passedThroughNonGreedyDecision = checkNonGreedyDecision(c, state);}",public LexerATNConfigLexerATNConfig c ATNState statePredictionContext context superc state context csemanticContextthislexerActionExecutor  clexerActionExecutorthispassedThroughNonGreedyDecision  checkNonGreedyDecisionc state
public DescribeScheduledActionsResult describeScheduledActions(DescribeScheduledActionsRequest request) {request = beforeClientExecution(request);return executeDescribeScheduledActions(request);},public DescribeScheduledActionsResult describeScheduledActionsDescribeScheduledActionsRequest request request  beforeClientExecutionrequestreturn executeDescribeScheduledActionsrequest
public boolean isAdjacentBefore(ColumnInfoRecord other) {return _lastCol == other._firstCol - 1;},public boolean isAdjacentBeforeColumnInfoRecord other return lastCol  otherfirstCol  1
"public QueryScorer(Query query, IndexReader Reader, String field, String defaultField) {this.defaultField = defaultField;init(query, field, Reader, true);}",public QueryScorerQuery query IndexReader Reader String field String defaultField thisdefaultField  defaultFieldinitquery field Reader true
public CreateConfigurationSetTrackingOptionsResult createConfigurationSetTrackingOptions(CreateConfigurationSetTrackingOptionsRequest request) {request = beforeClientExecution(request);return executeCreateConfigurationSetTrackingOptions(request);},public CreateConfigurationSetTrackingOptionsResult createConfigurationSetTrackingOptionsCreateConfigurationSetTrackingOptionsRequest request request  beforeClientExecutionrequestreturn executeCreateConfigurationSetTrackingOptionsrequest
"public synchronized int offsetByCodePoints(int index, int codePointOffset) {return super.offsetByCodePoints(index, codePointOffset);}",public synchronized int offsetByCodePointsint index int codePointOffset return superoffsetByCodePointsindex codePointOffset
"public void write(char[] buf) {write(buf, 0, buf.length);}",public void writechar buf writebuf 0 buflength
public GetSdkResult getSdk(GetSdkRequest request) {request = beforeClientExecution(request);return executeGetSdk(request);},public GetSdkResult getSdkGetSdkRequest request request  beforeClientExecutionrequestreturn executeGetSdkrequest
public PutEmailIdentityDkimAttributesResult putEmailIdentityDkimAttributes(PutEmailIdentityDkimAttributesRequest request) {request = beforeClientExecution(request);return executePutEmailIdentityDkimAttributes(request);},public PutEmailIdentityDkimAttributesResult putEmailIdentityDkimAttributesPutEmailIdentityDkimAttributesRequest request request  beforeClientExecutionrequestreturn executePutEmailIdentityDkimAttributesrequest
public WorkflowExecutionDetail describeWorkflowExecution(DescribeWorkflowExecutionRequest request) {request = beforeClientExecution(request);return executeDescribeWorkflowExecution(request);},public WorkflowExecutionDetail describeWorkflowExecutionDescribeWorkflowExecutionRequest request request  beforeClientExecutionrequestreturn executeDescribeWorkflowExecutionrequest
public CloudFrontOriginAccessIdentityConfig(String callerReference) {setCallerReference(callerReference);},public CloudFrontOriginAccessIdentityConfigString callerReference setCallerReferencecallerReference
"public final String validate(String uri, int start, int end, String name)throws URISyntaxException {for (int i = start; i < end; ) {char ch = uri.charAt(i);if ((ch >= 'a' && ch <= 'z')|| (ch >= 'A' && ch <= 'Z')|| (ch >= '0' && ch <= '9')|| isRetained(ch)) {i++;} else if (ch == '%') {if (i + 2 >= end) {throw new URISyntaxException(uri, ""Incomplete % sequence in "" + name, i);}int d1 = hexToInt(uri.charAt(i + 1));int d2 = hexToInt(uri.charAt(i + 2));if (d1 == -1 || d2 == -1) {throw new URISyntaxException(uri, ""Invalid % sequence: ""+ uri.substring(i, i + 3) + "" in "" + name, i);}i += 3;} else {throw new URISyntaxException(uri, ""Illegal character in "" + name, i);}}return uri.substring(start, end);}",public final String validateString uri int start int end String namethrows URISyntaxException for int i  start i  end  char ch  uricharAtiif ch  a  ch  z ch  A  ch  Z ch  0  ch  9 isRetainedch i else if ch   if i  2  end throw new URISyntaxExceptionuri Incomplete  sequence in   name iint d1  hexToInturicharAti  1int d2  hexToInturicharAti  2if d1  1  d2  1 throw new URISyntaxExceptionuri Invalid  sequence  urisubstringi i  3   in   name ii  3 else throw new URISyntaxExceptionuri Illegal character in   name ireturn urisubstringstart end
"public UnbufferedCharStream(Reader input, int bufferSize) {this(bufferSize);this.input = input;fill(1); }",public UnbufferedCharStreamReader input int bufferSize thisbufferSizethisinput  inputfill1 
public ContinuableRecordInput(RecordInputStream in){_in = in;},public ContinuableRecordInputRecordInputStream inin  in
"public StoredFieldsReader clone() {if (in == null) {throw new AlreadyClosedException(""this FieldsReader is closed"");}return new SimpleTextStoredFieldsReader(offsets, in.clone(), fieldInfos);}",public StoredFieldsReader clone if in  null throw new AlreadyClosedExceptionthis FieldsReader is closedreturn new SimpleTextStoredFieldsReaderoffsets inclone fieldInfos
public Initial(LittleEndianInput in) {_reserved0 = in.readInt();_reserved1 = in.readUShort();_reserved2 = in.readUByte();},public InitialLittleEndianInput in reserved0  inreadIntreserved1  inreadUShortreserved2  inreadUByte
public synchronized int getProgress() {return mIndeterminate ? 0 : mProgress;},public synchronized int getProgress return mIndeterminate  0  mProgress
public CreateNamedQueryResult createNamedQuery(CreateNamedQueryRequest request) {request = beforeClientExecution(request);return executeCreateNamedQuery(request);},public CreateNamedQueryResult createNamedQueryCreateNamedQueryRequest request request  beforeClientExecutionrequestreturn executeCreateNamedQueryrequest
public static DoubleBuffer allocate(int capacity) {if (capacity < 0) {throw new IllegalArgumentException();}return new ReadWriteDoubleArrayBuffer(capacity);},public static DoubleBuffer allocateint capacity if capacity  0 throw new IllegalArgumentExceptionreturn new ReadWriteDoubleArrayBuffercapacity
"public final String toString() {return getClass().getName() + "" ["" + _operator.getRepresentation() + getValueText() + ""]"";}",public final String toString return getClassgetName     operatorgetRepresentation  getValueText  
"public LongBuffer asReadOnlyBuffer() {return ReadOnlyLongArrayBuffer.copy(this, mark);}",public LongBuffer asReadOnlyBuffer return ReadOnlyLongArrayBuffercopythis mark
public CreateFlowDefinitionResult createFlowDefinition(CreateFlowDefinitionRequest request) {request = beforeClientExecution(request);return executeCreateFlowDefinition(request);},public CreateFlowDefinitionResult createFlowDefinitionCreateFlowDefinitionRequest request request  beforeClientExecutionrequestreturn executeCreateFlowDefinitionrequest
public GetOpenIdTokenResult getOpenIdToken(GetOpenIdTokenRequest request) {request = beforeClientExecution(request);return executeGetOpenIdToken(request);},public GetOpenIdTokenResult getOpenIdTokenGetOpenIdTokenRequest request request  beforeClientExecutionrequestreturn executeGetOpenIdTokenrequest
public GetDocumentationPartResult getDocumentationPart(GetDocumentationPartRequest request) {request = beforeClientExecution(request);return executeGetDocumentationPart(request);},public GetDocumentationPartResult getDocumentationPartGetDocumentationPartRequest request request  beforeClientExecutionrequestreturn executeGetDocumentationPartrequest
"public ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {int nArgs = args.length;if (nArgs < 2) {return ErrorEval.VALUE_INVALID;}try {double rate = NumericFunction.singleOperandEvaluate(args[0], srcRowIndex, srcColumnIndex);ValueEval[] vargs = new ValueEval[args.length-1];System.arraycopy(args, 1, vargs, 0, vargs.length);double[] values = AggregateFunction.ValueCollector.collectValues(vargs);double result = FinanceLib.npv(rate, values);NumericFunction.checkValue(result);return new NumberEval(result);} catch (EvaluationException e) {return e.getErrorEval();}}",public ValueEval evaluateValueEval args int srcRowIndex int srcColumnIndex int nArgs  argslengthif nArgs  2 return ErrorEvalVALUEINVALIDtry double rate  NumericFunctionsingleOperandEvaluateargs0 srcRowIndex srcColumnIndexValueEval vargs  new ValueEvalargslength1Systemarraycopyargs 1 vargs 0 vargslengthdouble values  AggregateFunctionValueCollectorcollectValuesvargsdouble result  FinanceLibnpvrate valuesNumericFunctioncheckValueresultreturn new NumberEvalresult catch EvaluationException e return egetErrorEval
"public String suggestFileExtension() {switch (EscherRecordTypes.forTypeID(blip.getRecordId())) {case BLIP_WMF:return ""wmf"";case BLIP_EMF:return ""emf"";case BLIP_PICT:return ""pict"";case BLIP_PNG:return ""png"";case BLIP_JPEG:return ""jpeg"";case BLIP_DIB:return ""dib"";default:return """";}}",public String suggestFileExtension switch EscherRecordTypesforTypeIDblipgetRecordId case BLIPWMFreturn wmfcase BLIPEMFreturn emfcase BLIPPICTreturn pictcase BLIPPNGreturn pngcase BLIPJPEGreturn jpegcase BLIPDIBreturn dibdefaultreturn 
"public AsyncResponsePostRequest() {super(""industry-brain"", ""2018-07-12"", ""AsyncResponsePost"");setMethod(MethodType.POST);}",public AsyncResponsePostRequest superindustrybrain 20180712 AsyncResponsePostsetMethodMethodTypePOST
"public static final RevFilter between(long since, long until) {return new Between(since, until);}",public static final RevFilter betweenlong since long until return new Betweensince until
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0,ValueEval arg1) {double val;double d1;try {val = singleOperandEvaluate(arg0, srcRowIndex, srcColumnIndex);d1 = singleOperandEvaluate(arg1, srcRowIndex, srcColumnIndex);} catch (EvaluationException e) {return e.getErrorEval();}int nPlaces = (int)d1;if (nPlaces > 127) {return ErrorEval.VALUE_INVALID;}return new NumberEval(val);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0ValueEval arg1 double valdouble d1try val  singleOperandEvaluatearg0 srcRowIndex srcColumnIndexd1  singleOperandEvaluatearg1 srcRowIndex srcColumnIndex catch EvaluationException e return egetErrorEvalint nPlaces  intd1if nPlaces  127 return ErrorEvalVALUEINVALIDreturn new NumberEvalval
public Iterator<T> iterator() {return new MyIterator();},public IteratorT iterator return new MyIterator
"public void reset(int[] docs, long[] offsets) {this.docs = docs;this.offsets = offsets;}",public void resetint docs long offsets thisdocs  docsthisoffsets  offsets
public ObjectId getObjectId() {return object;},public ObjectId getObjectId return object
"public String toString() {return ""fileName="" + fileName + "" size="" + size;}",public String toString return fileName  fileName   size  size
"public boolean isSubTotal(int rowIndex, int columnIndex){SheetRefEvaluator _sre = _evaluator.getSheetEvaluator(_evaluator.getFirstSheetIndex());return _sre.isSubTotal(getFirstRow() + rowIndex, getFirstColumn() + columnIndex);}",public boolean isSubTotalint rowIndex int columnIndexSheetRefEvaluator sre  evaluatorgetSheetEvaluatorevaluatorgetFirstSheetIndexreturn sreisSubTotalgetFirstRow  rowIndex getFirstColumn  columnIndex
public DeleteCollectionResult deleteCollection(DeleteCollectionRequest request) {request = beforeClientExecution(request);return executeDeleteCollection(request);},public DeleteCollectionResult deleteCollectionDeleteCollectionRequest request request  beforeClientExecutionrequestreturn executeDeleteCollectionrequest
public void write(byte[] b) {writeContinueIfRequired(b.length);_ulrOutput.write(b);},public void writebyte b writeContinueIfRequiredblengthulrOutputwriteb
public Drawable getIndeterminateDrawable() {return mIndeterminateDrawable;},public Drawable getIndeterminateDrawable return mIndeterminateDrawable
"public void write(byte[] b, int offset, int len) {checkPosition(len);System.arraycopy(b, offset, _buf, _writeIndex, len);_writeIndex += len;}",public void writebyte b int offset int len checkPositionlenSystemarraycopyb offset buf writeIndex lenwriteIndex  len
public ListWebsiteCertificateAuthoritiesResult listWebsiteCertificateAuthorities(ListWebsiteCertificateAuthoritiesRequest request) {request = beforeClientExecution(request);return executeListWebsiteCertificateAuthorities(request);},public ListWebsiteCertificateAuthoritiesResult listWebsiteCertificateAuthoritiesListWebsiteCertificateAuthoritiesRequest request request  beforeClientExecutionrequestreturn executeListWebsiteCertificateAuthoritiesrequest
"public RevWalk(ObjectReader or, int depth) {super(or);this.depth = depth;this.deepenNots = Collections.emptyList();this.UNSHALLOW = newFlag(""UNSHALLOW""); this.REINTERESTING = newFlag(""REINTERESTING""); this.DEEPEN_NOT = newFlag(""DEEPEN_NOT""); }",public RevWalkObjectReader or int depth superorthisdepth  depththisdeepenNots  CollectionsemptyListthisUNSHALLOW  newFlagUNSHALLOW thisREINTERESTING  newFlagREINTERESTING thisDEEPENNOT  newFlagDEEPENNOT 
"public DeleteLogStreamRequest(String logGroupName, String logStreamName) {setLogGroupName(logGroupName);setLogStreamName(logStreamName);}",public DeleteLogStreamRequestString logGroupName String logStreamName setLogGroupNamelogGroupNamesetLogStreamNamelogStreamName
"public PrintWriter append(CharSequence csq) {if (csq == null) {csq = ""null"";}append(csq, 0, csq.length());return this;}",public PrintWriter appendCharSequence csq if csq  null csq  nullappendcsq 0 csqlengthreturn this
"public boolean include(TreeWalk walker)throws MissingObjectException,IncorrectObjectTypeException, IOException {count++;if (count % stepSize == 0) {if (count <= total)monitor.update(stepSize);if (monitor.isCancelled())throw StopWalkException.INSTANCE;}return true;}",public boolean includeTreeWalk walkerthrows MissingObjectExceptionIncorrectObjectTypeException IOException countif count  stepSize  0 if count  totalmonitorupdatestepSizeif monitorisCancelledthrow StopWalkExceptionINSTANCEreturn true
public RevObject getObjectId() {return id;},public RevObject getObjectId return id
public void setFlushOnEnd(boolean flushOnEnd) {this.flushOnEnd = flushOnEnd;},public void setFlushOnEndboolean flushOnEnd thisflushOnEnd  flushOnEnd
public ListAutoMLJobsResult listAutoMLJobs(ListAutoMLJobsRequest request) {request = beforeClientExecution(request);return executeListAutoMLJobs(request);},public ListAutoMLJobsResult listAutoMLJobsListAutoMLJobsRequest request request  beforeClientExecutionrequestreturn executeListAutoMLJobsrequest
"public void addBuilder(String nodeName, SpanQueryBuilder builder) {builders.put(nodeName, builder);}",public void addBuilderString nodeName SpanQueryBuilder builder buildersputnodeName builder
public DescribeReplicationGroupsResult describeReplicationGroups() {return describeReplicationGroups(new DescribeReplicationGroupsRequest());},public DescribeReplicationGroupsResult describeReplicationGroups return describeReplicationGroupsnew DescribeReplicationGroupsRequest
"public void removeAllCellsValuesForRow(int rowIndex) {if (rowIndex < 0 || rowIndex > MAX_ROW_INDEX) {throw new IllegalArgumentException(""Specified rowIndex "" + rowIndex+ "" is outside the allowable range (0.."" +MAX_ROW_INDEX + "")"");}if (rowIndex >= records.length) {return;}records[rowIndex] = null;}",public void removeAllCellsValuesForRowint rowIndex if rowIndex  0  rowIndex  MAXROWINDEX throw new IllegalArgumentExceptionSpecified rowIndex   rowIndex  is outside the allowable range 0 MAXROWINDEX  if rowIndex  recordslength returnrecordsrowIndex  null
public DeleteProxySessionResult deleteProxySession(DeleteProxySessionRequest request) {request = beforeClientExecution(request);return executeDeleteProxySession(request);},public DeleteProxySessionResult deleteProxySessionDeleteProxySessionRequest request request  beforeClientExecutionrequestreturn executeDeleteProxySessionrequest
public DescribePoliciesResult describePolicies() {return describePolicies(new DescribePoliciesRequest());},public DescribePoliciesResult describePolicies return describePoliciesnew DescribePoliciesRequest
public NumberFormatIndexRecord(RecordInputStream in) {field_1_formatIndex = in.readShort();},public NumberFormatIndexRecordRecordInputStream in field1formatIndex  inreadShort
public CreatePrivateVirtualInterfaceResult createPrivateVirtualInterface(CreatePrivateVirtualInterfaceRequest request) {request = beforeClientExecution(request);return executeCreatePrivateVirtualInterface(request);},public CreatePrivateVirtualInterfaceResult createPrivateVirtualInterfaceCreatePrivateVirtualInterfaceRequest request request  beforeClientExecutionrequestreturn executeCreatePrivateVirtualInterfacerequest
@Override public E get(int location) {return list.get(location);},Override public E getint location return listgetlocation
public String getPath() {return decode(path);},public String getPath return decodepath
"public static String longToHex(long value) {StringBuilder sb = new StringBuilder(18);writeHex(sb, value, 16, ""0x"");return sb.toString();}",public static String longToHexlong value StringBuilder sb  new StringBuilder18writeHexsb value 16 0xreturn sbtoString
"public RevFilter clone() {return new Binary(a.clone(), b.clone());}",public RevFilter clone return new Binaryaclone bclone
public int compareTo( Toffs other ) {int diff = getStartOffset() - other.getStartOffset();if ( diff != 0 ) {return diff;}return getEndOffset() - other.getEndOffset();},public int compareTo Toffs other  int diff  getStartOffset  othergetStartOffsetif  diff  0  return diffreturn getEndOffset  othergetEndOffset
public UpdateNetworkProfileResult updateNetworkProfile(UpdateNetworkProfileRequest request) {request = beforeClientExecution(request);return executeUpdateNetworkProfile(request);},public UpdateNetworkProfileResult updateNetworkProfileUpdateNetworkProfileRequest request request  beforeClientExecutionrequestreturn executeUpdateNetworkProfilerequest
public GetRelationalDatabaseParametersResult getRelationalDatabaseParameters(GetRelationalDatabaseParametersRequest request) {request = beforeClientExecution(request);return executeGetRelationalDatabaseParameters(request);},public GetRelationalDatabaseParametersResult getRelationalDatabaseParametersGetRelationalDatabaseParametersRequest request request  beforeClientExecutionrequestreturn executeGetRelationalDatabaseParametersrequest
"public boolean contains(Object object) {return indexOf(object, 0) != -1;}",public boolean containsObject object return indexOfobject 0  1
public boolean remove(Object object) {return removeFirstOccurrenceImpl(object);},public boolean removeObject object return removeFirstOccurrenceImplobject
"public DConRefRecord(RecordInputStream inStream) {if (inStream.getSid() != sid) {throw new RecordFormatException(""Wrong sid: "" + inStream.getSid());}firstRow = inStream.readUShort();lastRow = inStream.readUShort();firstCol = inStream.readUByte();lastCol = inStream.readUByte();charCount = inStream.readUShort();charType = inStream.readUByte() & 0x01;final int byteLength = charCount * (charType + 1);path = IOUtils.safelyAllocate(byteLength, MAX_RECORD_LENGTH);inStream.readFully(path);if (path[0] == 0x02) {_unused = inStream.readRemainder();}}",public DConRefRecordRecordInputStream inStream if inStreamgetSid  sid throw new RecordFormatExceptionWrong sid   inStreamgetSidfirstRow  inStreamreadUShortlastRow  inStreamreadUShortfirstCol  inStreamreadUBytelastCol  inStreamreadUBytecharCount  inStreamreadUShortcharType  inStreamreadUByte  0x01final int byteLength  charCount  charType  1path  IOUtilssafelyAllocatebyteLength MAXRECORDLENGTHinStreamreadFullypathif path0  0x02 unused  inStreamreadRemainder
public int getSheetIndex(EvaluationSheet evalSheet) {HSSFSheet sheet = ((HSSFEvaluationSheet)evalSheet).getHSSFSheet();return _uBook.getSheetIndex(sheet);},public int getSheetIndexEvaluationSheet evalSheet HSSFSheet sheet  HSSFEvaluationSheetevalSheetgetHSSFSheetreturn uBookgetSheetIndexsheet
public synchronized int codePointAt(int index) {return super.codePointAt(index);},public synchronized int codePointAtint index return supercodePointAtindex
"public DeleteRepoBuildRuleRequest() {super(""cr"", ""2016-06-07"", ""DeleteRepoBuildRule"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/rules/[BuildRuleId]"");setMethod(MethodType.DELETE);}",public DeleteRepoBuildRuleRequest supercr 20160607 DeleteRepoBuildRule crsetUriPatternreposRepoNamespaceRepoNamerulesBuildRuleIdsetMethodMethodTypeDELETE
public UpdateEmailChannelResult updateEmailChannel(UpdateEmailChannelRequest request) {request = beforeClientExecution(request);return executeUpdateEmailChannel(request);},public UpdateEmailChannelResult updateEmailChannelUpdateEmailChannelRequest request request  beforeClientExecutionrequestreturn executeUpdateEmailChannelrequest
public TabIdRecord(RecordInputStream in) {int nTabs = in.remaining() / 2;_tabids = new short[nTabs];for (int i = 0; i < _tabids.length; i++) {_tabids[i] = in.readShort();}},public TabIdRecordRecordInputStream in int nTabs  inremaining  2tabids  new shortnTabsfor int i  0 i  tabidslength i tabidsi  inreadShort
"public String toFormulaString(){return "","";}",public String toFormulaStringreturn 
public CreateConnectionResult createConnection(CreateConnectionRequest request) {request = beforeClientExecution(request);return executeCreateConnection(request);},public CreateConnectionResult createConnectionCreateConnectionRequest request request  beforeClientExecutionrequestreturn executeCreateConnectionrequest
"public int calculateWorkdays(double start, double end, double[] holidays) {int saturdaysPast = this.pastDaysOfWeek(start, end, Calendar.SATURDAY);int sundaysPast = this.pastDaysOfWeek(start, end, Calendar.SUNDAY);int nonWeekendHolidays = this.calculateNonWeekendHolidays(start, end, holidays);return (int) (end - start + 1) - saturdaysPast - sundaysPast - nonWeekendHolidays;}",public int calculateWorkdaysdouble start double end double holidays int saturdaysPast  thispastDaysOfWeekstart end CalendarSATURDAYint sundaysPast  thispastDaysOfWeekstart end CalendarSUNDAYint nonWeekendHolidays  thiscalculateNonWeekendHolidaysstart end holidaysreturn int end  start  1  saturdaysPast  sundaysPast  nonWeekendHolidays
"public IndexFormatTooNewException(String resourceDescription, int version, int minVersion, int maxVersion) {super(""Format version is not supported (resource "" + resourceDescription + ""): ""+ version + "" (needs to be between "" + minVersion + "" and "" + maxVersion + "")"");this.resourceDescription = resourceDescription;this.version = version;this.minVersion = minVersion;this.maxVersion = maxVersion;}",public IndexFormatTooNewExceptionString resourceDescription int version int minVersion int maxVersion superFormat version is not supported resource   resourceDescription    version   needs to be between   minVersion   and   maxVersion  thisresourceDescription  resourceDescriptionthisversion  versionthisminVersion  minVersionthismaxVersion  maxVersion
public void apply(DirCacheEntry ent) {throw new UnsupportedOperationException(JGitText.get().noApplyInDelete);},public void applyDirCacheEntry ent throw new UnsupportedOperationExceptionJGitTextgetnoApplyInDelete
public boolean isNewFragment() {position += posIncAtt.getPositionIncrement();if (waitForPos <= position) {waitForPos = -1;} else if (waitForPos != -1) {return false;}WeightedSpanTerm wSpanTerm = queryScorer.getWeightedSpanTerm(termAtt.toString());if (wSpanTerm != null) {List<PositionSpan> positionSpans = wSpanTerm.getPositionSpans();for (PositionSpan positionSpan : positionSpans) {if (positionSpan.start == position) {waitForPos = positionSpan.end + 1;break;}}}boolean isNewFrag = offsetAtt.endOffset() >= (fragmentSize * currentNumFrags)&& (textSize - offsetAtt.endOffset()) >= (fragmentSize >>> 1);if (isNewFrag) {currentNumFrags++;}return isNewFrag;},public boolean isNewFragment position  posIncAttgetPositionIncrementif waitForPos  position waitForPos  1 else if waitForPos  1 return falseWeightedSpanTerm wSpanTerm  queryScorergetWeightedSpanTermtermAtttoStringif wSpanTerm  null ListPositionSpan positionSpans  wSpanTermgetPositionSpansfor PositionSpan positionSpan  positionSpans if positionSpanstart  position waitForPos  positionSpanend  1breakboolean isNewFrag  offsetAttendOffset  fragmentSize  currentNumFrags textSize  offsetAttendOffset  fragmentSize  1if isNewFrag currentNumFragsreturn isNewFrag
public StopMatchmakingResult stopMatchmaking(StopMatchmakingRequest request) {request = beforeClientExecution(request);return executeStopMatchmaking(request);},public StopMatchmakingResult stopMatchmakingStopMatchmakingRequest request request  beforeClientExecutionrequestreturn executeStopMatchmakingrequest
public DescribeClientVpnTargetNetworksResult describeClientVpnTargetNetworks(DescribeClientVpnTargetNetworksRequest request) {request = beforeClientExecution(request);return executeDescribeClientVpnTargetNetworks(request);},public DescribeClientVpnTargetNetworksResult describeClientVpnTargetNetworksDescribeClientVpnTargetNetworksRequest request request  beforeClientExecutionrequestreturn executeDescribeClientVpnTargetNetworksrequest
public FloatBuffer put(FloatBuffer buf) {throw new ReadOnlyBufferException();},public FloatBuffer putFloatBuffer buf throw new ReadOnlyBufferException
public final IntBuffer asIntBuffer() {return IntToByteBufferAdapter.asIntBuffer(this);},public final IntBuffer asIntBuffer return IntToByteBufferAdapterasIntBufferthis
"public RemovePermissionResult removePermission(String queueUrl, String label) {return removePermission(new RemovePermissionRequest().withQueueUrl(queueUrl).withLabel(label));}",public RemovePermissionResult removePermissionString queueUrl String label return removePermissionnew RemovePermissionRequestwithQueueUrlqueueUrlwithLabellabel
"public void inform(ResourceLoader loader) {if (encoderClass.equals(""float"")){encoder = new FloatEncoder();} else if (encoderClass.equals(""integer"")){encoder = new IntegerEncoder();} else if (encoderClass.equals(""identity"")){encoder = new IdentityEncoder();} else {encoder = loader.newInstance(encoderClass, PayloadEncoder.class);}}",public void informResourceLoader loader if encoderClassequalsfloatencoder  new FloatEncoder else if encoderClassequalsintegerencoder  new IntegerEncoder else if encoderClassequalsidentityencoder  new IdentityEncoder else encoder  loadernewInstanceencoderClass PayloadEncoderclass
public GetHealthCheckResult getHealthCheck(GetHealthCheckRequest request) {request = beforeClientExecution(request);return executeGetHealthCheck(request);},public GetHealthCheckResult getHealthCheckGetHealthCheckRequest request request  beforeClientExecutionrequestreturn executeGetHealthCheckrequest
public ListNotebookInstanceLifecycleConfigsResult listNotebookInstanceLifecycleConfigs(ListNotebookInstanceLifecycleConfigsRequest request) {request = beforeClientExecution(request);return executeListNotebookInstanceLifecycleConfigs(request);},public ListNotebookInstanceLifecycleConfigsResult listNotebookInstanceLifecycleConfigsListNotebookInstanceLifecycleConfigsRequest request request  beforeClientExecutionrequestreturn executeListNotebookInstanceLifecycleConfigsrequest
public int next(int n) {if (n < 0) {for (int i = 0; i < -n; i++) {previous();}} else {for (int i = 0; i < n; i++) {next();}}return current();},public int nextint n if n  0 for int i  0 i  n i previous else for int i  0 i  n i nextreturn current
"public static long calculateMaximumSize(final HeaderBlock header){return calculateMaximumSize(header.getBigBlockSize(), header.getBATCount());}",public static long calculateMaximumSizefinal HeaderBlock headerreturn calculateMaximumSizeheadergetBigBlockSize headergetBATCount
"public String toString() {return ""character="" + _character + "",fontIndex="" + _fontIndex;}",public String toString return character  character  fontIndex  fontIndex
"public static float[] grow(float[] array, int minSize) {assert minSize >= 0: ""size must be positive (got "" + minSize + ""): likely integer overflow?"";if (array.length < minSize) {float[] copy = new float[oversize(minSize, Float.BYTES)];System.arraycopy(array, 0, copy, 0, array.length);return copy;} else return array;}",public static float growfloat array int minSize assert minSize  0 size must be positive got   minSize   likely integer overflowif arraylength  minSize float copy  new floatoversizeminSize FloatBYTESSystemarraycopyarray 0 copy 0 arraylengthreturn copy else return array
public String getDataFormatString() {if (getDataFormatStringCache.get() != null) {if (lastDateFormat.get() == getDataFormat() && _workbook.getFormats().equals(lastFormats.get())) {return getDataFormatStringCache.get();}}lastFormats.set(_workbook.getFormats());lastDateFormat.set(getDataFormat());getDataFormatStringCache.set(getDataFormatString(_workbook));return getDataFormatStringCache.get();},public String getDataFormatString if getDataFormatStringCacheget  null if lastDateFormatget  getDataFormat  workbookgetFormatsequalslastFormatsget return getDataFormatStringCachegetlastFormatssetworkbookgetFormatslastDateFormatsetgetDataFormatgetDataFormatStringCachesetgetDataFormatStringworkbookreturn getDataFormatStringCacheget
public UpdateSignalingChannelResult updateSignalingChannel(UpdateSignalingChannelRequest request) {request = beforeClientExecution(request);return executeUpdateSignalingChannel(request);},public UpdateSignalingChannelResult updateSignalingChannelUpdateSignalingChannelRequest request request  beforeClientExecutionrequestreturn executeUpdateSignalingChannelrequest
"public MoPenSendMqttMessageRequest() {super(""MoPen"", ""2018-02-11"", ""MoPenSendMqttMessage"", ""mopen"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public MoPenSendMqttMessageRequest superMoPen 20180211 MoPenSendMqttMessage mopensetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public TreeSet(SortedSet<E> set) {this(set.comparator());Iterator<E> it = set.iterator();while (it.hasNext()) {add(it.next());}},public TreeSetSortedSetE set thissetcomparatorIteratorE it  setiteratorwhile ithasNext additnext
public DisassociateMembersResult disassociateMembers(DisassociateMembersRequest request) {request = beforeClientExecution(request);return executeDisassociateMembers(request);},public DisassociateMembersResult disassociateMembersDisassociateMembersRequest request request  beforeClientExecutionrequestreturn executeDisassociateMembersrequest
public DeleteVpcLinkResult deleteVpcLink(DeleteVpcLinkRequest request) {request = beforeClientExecution(request);return executeDeleteVpcLink(request);},public DeleteVpcLinkResult deleteVpcLinkDeleteVpcLinkRequest request request  beforeClientExecutionrequestreturn executeDeleteVpcLinkrequest
public DescribeDBSnapshotsResult describeDBSnapshots() {return describeDBSnapshots(new DescribeDBSnapshotsRequest());},public DescribeDBSnapshotsResult describeDBSnapshots return describeDBSnapshotsnew DescribeDBSnapshotsRequest
public void clear() {if(_evaluationListener != null) {_evaluationListener.onClearWholeCache();}_plainCellCache.clear();_formulaCellCache.clear();},public void clear ifevaluationListener  null evaluationListeneronClearWholeCacheplainCellCacheclearformulaCellCacheclear
public void setDiffAlgorithm(DiffAlgorithm alg) {diffAlgorithm = alg;},public void setDiffAlgorithmDiffAlgorithm alg diffAlgorithm  alg
public DVALRecord(RecordInputStream in) {field_1_options = in.readShort();field_2_horiz_pos = in.readInt();field_3_vert_pos = in.readInt();field_cbo_id = in.readInt();field_5_dv_no = in.readInt();},public DVALRecordRecordInputStream in field1options  inreadShortfield2horizpos  inreadIntfield3vertpos  inreadIntfieldcboid  inreadIntfield5dvno  inreadInt
public IndexInput clone() {throw new UnsupportedOperationException();},public IndexInput clone throw new UnsupportedOperationException
"public Appendable append(CharSequence csq, int start, int end) {reserve(end-start);for (int i=start; i<end; i++) {unsafeWrite(csq.charAt(i));}return this;}",public Appendable appendCharSequence csq int start int end reserveendstartfor int istart iend i unsafeWritecsqcharAtireturn this
public DescribeJobFlowsResult describeJobFlows(DescribeJobFlowsRequest request) {request = beforeClientExecution(request);return executeDescribeJobFlows(request);},public DescribeJobFlowsResult describeJobFlowsDescribeJobFlowsRequest request request  beforeClientExecutionrequestreturn executeDescribeJobFlowsrequest
"public LowerCaseFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public LowerCaseFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public int compareTo(Revision o) {IndexRevision other = (IndexRevision) o;return commit.compareTo(other.commit);},public int compareToRevision o IndexRevision other  IndexRevision oreturn commitcompareToothercommit
public DisassociateResolverRuleResult disassociateResolverRule(DisassociateResolverRuleRequest request) {request = beforeClientExecution(request);return executeDisassociateResolverRule(request);},public DisassociateResolverRuleResult disassociateResolverRuleDisassociateResolverRuleRequest request request  beforeClientExecutionrequestreturn executeDisassociateResolverRulerequest
"public static boolean isUnicodeString(final String value) {return !value.equals(new String(value.getBytes(ISO_8859_1), ISO_8859_1));}",public static boolean isUnicodeStringfinal String value return valueequalsnew StringvaluegetBytesISO88591 ISO88591
public DeleteApplicationCloudWatchLoggingOptionResult deleteApplicationCloudWatchLoggingOption(DeleteApplicationCloudWatchLoggingOptionRequest request) {request = beforeClientExecution(request);return executeDeleteApplicationCloudWatchLoggingOption(request);},public DeleteApplicationCloudWatchLoggingOptionResult deleteApplicationCloudWatchLoggingOptionDeleteApplicationCloudWatchLoggingOptionRequest request request  beforeClientExecutionrequestreturn executeDeleteApplicationCloudWatchLoggingOptionrequest
"public FreqProxPostingsArray(int size, boolean writeFreqs, boolean writeProx, boolean writeOffsets) {super(size);if (writeFreqs) {termFreqs = new int[size];}lastDocIDs = new int[size];lastDocCodes = new int[size];if (writeProx) {lastPositions = new int[size];if (writeOffsets) {lastOffsets = new int[size];}} else {assert !writeOffsets;}}",public FreqProxPostingsArrayint size boolean writeFreqs boolean writeProx boolean writeOffsets supersizeif writeFreqs termFreqs  new intsizelastDocIDs  new intsizelastDocCodes  new intsizeif writeProx lastPositions  new intsizeif writeOffsets lastOffsets  new intsize else assert writeOffsets
"public List<String> matchPrefix(String prefix) {return matchPrefix(prefix, defaultNumReturnValues);}",public ListString matchPrefixString prefix return matchPrefixprefix defaultNumReturnValues
public DescribeScalingPoliciesResult describeScalingPolicies(DescribeScalingPoliciesRequest request) {request = beforeClientExecution(request);return executeDescribeScalingPolicies(request);},public DescribeScalingPoliciesResult describeScalingPoliciesDescribeScalingPoliciesRequest request request  beforeClientExecutionrequestreturn executeDescribeScalingPoliciesrequest
public void serialize(LittleEndianOutput out) {out.writeInt(field_1_row_offset);for (short field_2_cell_offset : field_2_cell_offsets) {out.writeShort(field_2_cell_offset);}},public void serializeLittleEndianOutput out outwriteIntfield1rowoffsetfor short field2celloffset  field2celloffsets outwriteShortfield2celloffset
public UserSViewBegin(RecordInputStream in) {_rawData = in.readRemainder();},public UserSViewBeginRecordInputStream in rawData  inreadRemainder
public static RevFilter create(String pattern) {if (pattern.length() == 0)throw new IllegalArgumentException(JGitText.get().cannotMatchOnEmptyString);if (SubStringRevFilter.safe(pattern))return new SubStringSearch(pattern);return new PatternSearch(pattern);},public static RevFilter createString pattern if patternlength  0throw new IllegalArgumentExceptionJGitTextgetcannotMatchOnEmptyStringif SubStringRevFiltersafepatternreturn new SubStringSearchpatternreturn new PatternSearchpattern
"public void serialize(LittleEndianOutput out) {out.writeShort(getFontHeight());out.writeShort(getAttributes());out.writeShort(getColorPaletteIndex());out.writeShort(getBoldWeight());out.writeShort(getSuperSubScript());out.writeByte(getUnderline());out.writeByte(getFamily());out.writeByte(getCharset());out.writeByte(field_9_zero);int fontNameLen = field_11_font_name.length();out.writeByte(fontNameLen);boolean hasMultibyte = StringUtil.hasMultibyte(field_11_font_name);out.writeByte(hasMultibyte ? 0x01 : 0x00);if (fontNameLen > 0) {if (hasMultibyte) {StringUtil.putUnicodeLE(field_11_font_name, out);} else {StringUtil.putCompressedUnicode(field_11_font_name, out);}}}",public void serializeLittleEndianOutput out outwriteShortgetFontHeightoutwriteShortgetAttributesoutwriteShortgetColorPaletteIndexoutwriteShortgetBoldWeightoutwriteShortgetSuperSubScriptoutwriteBytegetUnderlineoutwriteBytegetFamilyoutwriteBytegetCharsetoutwriteBytefield9zeroint fontNameLen  field11fontnamelengthoutwriteBytefontNameLenboolean hasMultibyte  StringUtilhasMultibytefield11fontnameoutwriteBytehasMultibyte  0x01  0x00if fontNameLen  0 if hasMultibyte StringUtilputUnicodeLEfield11fontname out else StringUtilputCompressedUnicodefield11fontname out
public DescribeLaunchConfigurationsResult describeLaunchConfigurations(DescribeLaunchConfigurationsRequest request) {request = beforeClientExecution(request);return executeDescribeLaunchConfigurations(request);},public DescribeLaunchConfigurationsResult describeLaunchConfigurationsDescribeLaunchConfigurationsRequest request request  beforeClientExecutionrequestreturn executeDescribeLaunchConfigurationsrequest
public PathEdit(DirCacheEntry ent) {path = ent.path;},public PathEditDirCacheEntry ent path  entpath
"public static int toCodePoints(char[] src, int srcOff, int srcLen, int[] dest, int destOff) {if (srcLen < 0) {throw new IllegalArgumentException(""srcLen must be >= 0"");}int codePointCount = 0;for (int i = 0; i < srcLen; ) {final int cp = Character.codePointAt(src, srcOff + i, srcOff + srcLen);final int charCount = Character.charCount(cp);dest[destOff + codePointCount++] = cp;i += charCount;}return codePointCount;}",public static int toCodePointschar src int srcOff int srcLen int dest int destOff if srcLen  0 throw new IllegalArgumentExceptionsrcLen must be  0int codePointCount  0for int i  0 i  srcLen  final int cp  CharactercodePointAtsrc srcOff  i srcOff  srcLenfinal int charCount  CharactercharCountcpdestdestOff  codePointCount  cpi  charCountreturn codePointCount
public boolean hasNext() {return remaining != 0;},public boolean hasNext return remaining  0
"public void consume() {if (LA(1) == IntStream.EOF) {throw new IllegalStateException(""cannot consume EOF"");}lastChar = data[p];   if (p == n-1 && numMarkers==0) {n = 0;p = -1; lastCharBufferStart = lastChar;}p++;currentCharIndex++;sync(1);}",public void consume if LA1  IntStreamEOF throw new IllegalStateExceptioncannot consume EOFlastChar  datap   if p  n1  numMarkers0 n  0p  1 lastCharBufferStart  lastCharpcurrentCharIndexsync1
"public FileOutputStream(String path) throws FileNotFoundException {this(path, false);}",public FileOutputStreamString path throws FileNotFoundException thispath false
"public FieldConfig(String fieldName) {if (fieldName == null) {throw new IllegalArgumentException(""field name must not be null!"");}this.fieldName = fieldName;}",public FieldConfigString fieldName if fieldName  null throw new IllegalArgumentExceptionfield name must not be nullthisfieldName  fieldName
"public TokenFilter create(TokenStream input) {return new NGramTokenFilter(input, minGramSize, maxGramSize, preserveOriginal);}",public TokenFilter createTokenStream input return new NGramTokenFilterinput minGramSize maxGramSize preserveOriginal
public DescribeCacheParameterGroupsResult describeCacheParameterGroups(DescribeCacheParameterGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeCacheParameterGroups(request);},public DescribeCacheParameterGroupsResult describeCacheParameterGroupsDescribeCacheParameterGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeCacheParameterGroupsrequest
public ApostropheFilter(TokenStream in) {super(in);},public ApostropheFilterTokenStream in superin
public void writeShort(int v) {writeContinueIfRequired(2);_ulrOutput.writeShort(v);},public void writeShortint v writeContinueIfRequired2ulrOutputwriteShortv
public StringBuilder append(Object obj) {if (obj == null) {appendNull();} else {append0(obj.toString());}return this;},public StringBuilder appendObject obj if obj  null appendNull else append0objtoStringreturn this
public ListGatewayGroupsResult listGatewayGroups(ListGatewayGroupsRequest request) {request = beforeClientExecution(request);return executeListGatewayGroups(request);},public ListGatewayGroupsResult listGatewayGroupsListGatewayGroupsRequest request request  beforeClientExecutionrequestreturn executeListGatewayGroupsrequest
public AlibabaCloudCredentials getCredentials() throws ClientException {if (credentials == null || credentials.isExpired()) {ecsMetadataServiceFetchCount += 1;int maxRetryTimes = MAX_ECS_METADATA_FETCH_RETRY_TIMES;credentials = fetcher.fetch(maxRetryTimes);} else if (credentials.willSoonExpire() && credentials.shouldRefresh()) {try {ecsMetadataServiceFetchCount += 1;credentials = fetcher.fetch();} catch (ClientException e) {credentials.setLastFailedRefreshTime();}}return credentials;},public AlibabaCloudCredentials getCredentials throws ClientException if credentials  null  credentialsisExpired ecsMetadataServiceFetchCount  1int maxRetryTimes  MAXECSMETADATAFETCHRETRYTIMEScredentials  fetcherfetchmaxRetryTimes else if credentialswillSoonExpire  credentialsshouldRefresh try ecsMetadataServiceFetchCount  1credentials  fetcherfetch catch ClientException e credentialssetLastFailedRefreshTimereturn credentials
public DescribeVpnConnectionsResult describeVpnConnections(DescribeVpnConnectionsRequest request) {request = beforeClientExecution(request);return executeDescribeVpnConnections(request);},public DescribeVpnConnectionsResult describeVpnConnectionsDescribeVpnConnectionsRequest request request  beforeClientExecutionrequestreturn executeDescribeVpnConnectionsrequest
"public ByteBuffer put(byte[] src, int srcOffset, int byteCount) {checkPutBounds(1, src.length, srcOffset, byteCount);System.arraycopy(src, srcOffset, backingArray, offset + position, byteCount);position += byteCount;return this;}",public ByteBuffer putbyte src int srcOffset int byteCount checkPutBounds1 srclength srcOffset byteCountSystemarraycopysrc srcOffset backingArray offset  position byteCountposition  byteCountreturn this
public ListDistributionsResult listDistributions(ListDistributionsRequest request) {request = beforeClientExecution(request);return executeListDistributions(request);},public ListDistributionsResult listDistributionsListDistributionsRequest request request  beforeClientExecutionrequestreturn executeListDistributionsrequest
public String getName() {if (params==null) {return name;}return new StringBuilder(name).append('(').append(params).append(')').toString();},public String getName if paramsnull return namereturn new StringBuildernameappendappendparamsappendtoString
public DescribeTasksResult describeTasks(DescribeTasksRequest request) {request = beforeClientExecution(request);return executeDescribeTasks(request);},public DescribeTasksResult describeTasksDescribeTasksRequest request request  beforeClientExecutionrequestreturn executeDescribeTasksrequest
public DescribeCacheSubnetGroupsResult describeCacheSubnetGroups() {return describeCacheSubnetGroups(new DescribeCacheSubnetGroupsRequest());},public DescribeCacheSubnetGroupsResult describeCacheSubnetGroups return describeCacheSubnetGroupsnew DescribeCacheSubnetGroupsRequest
public float get() {if (position == limit) {throw new BufferUnderflowException();}return byteBuffer.getFloat(position++ * SizeOf.FLOAT);},public float get if position  limit throw new BufferUnderflowExceptionreturn byteBuffergetFloatposition  SizeOfFLOAT
public ShowNoteCommand setNotesRef(String notesRef) {checkCallable();this.notesRef = notesRef;return this;},public ShowNoteCommand setNotesRefString notesRef checkCallablethisnotesRef  notesRefreturn this
public UpdateAuthorizerResult updateAuthorizer(UpdateAuthorizerRequest request) {request = beforeClientExecution(request);return executeUpdateAuthorizer(request);},public UpdateAuthorizerResult updateAuthorizerUpdateAuthorizerRequest request request  beforeClientExecutionrequestreturn executeUpdateAuthorizerrequest
public int ordVal(int doc) throws IOException {throw new UnsupportedOperationException();},public int ordValint doc throws IOException throw new UnsupportedOperationException
public UnknownRecord(RecordInputStream in) {_sid = in.getSid();_rawData = in.readRemainder();},public UnknownRecordRecordInputStream in sid  ingetSidrawData  inreadRemainder
"public Matcher reset() {return reset(input, 0, input.length());}",public Matcher reset return resetinput 0 inputlength
public UpdateApnsVoipSandboxChannelResult updateApnsVoipSandboxChannel(UpdateApnsVoipSandboxChannelRequest request) {request = beforeClientExecution(request);return executeUpdateApnsVoipSandboxChannel(request);},public UpdateApnsVoipSandboxChannelResult updateApnsVoipSandboxChannelUpdateApnsVoipSandboxChannelRequest request request  beforeClientExecutionrequestreturn executeUpdateApnsVoipSandboxChannelrequest
"public IntervalSet nextTokens(ATNState s, RuleContext ctx) {LL1Analyzer anal = new LL1Analyzer(this);IntervalSet next = anal.LOOK(s, ctx);return next;}",public IntervalSet nextTokensATNState s RuleContext ctx LL1Analyzer anal  new LL1AnalyzerthisIntervalSet next  analLOOKs ctxreturn next
"public ListTablesResult listTables(String exclusiveStartTableName, Integer limit) {return listTables(new ListTablesRequest().withExclusiveStartTableName(exclusiveStartTableName).withLimit(limit));}",public ListTablesResult listTablesString exclusiveStartTableName Integer limit return listTablesnew ListTablesRequestwithExclusiveStartTableNameexclusiveStartTableNamewithLimitlimit
public DescribeIdentityResult describeIdentity(DescribeIdentityRequest request) {request = beforeClientExecution(request);return executeDescribeIdentity(request);},public DescribeIdentityResult describeIdentityDescribeIdentityRequest request request  beforeClientExecutionrequestreturn executeDescribeIdentityrequest
"final public ArrayList<String> OptionalFields() throws ParseException {Token fieldName;ArrayList<String> fieldNames = null;label_1:while (true) {if (jj_2_1(2)) {;} else {break label_1;}fieldName = jj_consume_token(TERM);jj_consume_token(COLON);if (fieldNames == null) {fieldNames = new ArrayList<String>();}fieldNames.add(fieldName.image);}{if (true) return fieldNames;}throw new Error(""Missing return statement in function"");}",final public ArrayListString OptionalFields throws ParseException Token fieldNameArrayListString fieldNames  nulllabel1while true if jj212  else break label1fieldName  jjconsumetokenTERMjjconsumetokenCOLONif fieldNames  null fieldNames  new ArrayListStringfieldNamesaddfieldNameimageif true return fieldNamesthrow new ErrorMissing return statement in function
public SubmoduleAddCommand submoduleAdd() {return new SubmoduleAddCommand(repo);},public SubmoduleAddCommand submoduleAdd return new SubmoduleAddCommandrepo
public DescribeTypeResult describeType(DescribeTypeRequest request) {request = beforeClientExecution(request);return executeDescribeType(request);},public DescribeTypeResult describeTypeDescribeTypeRequest request request  beforeClientExecutionrequestreturn executeDescribeTyperequest
public UpdateCompanyNetworkConfigurationResult updateCompanyNetworkConfiguration(UpdateCompanyNetworkConfigurationRequest request) {request = beforeClientExecution(request);return executeUpdateCompanyNetworkConfiguration(request);},public UpdateCompanyNetworkConfigurationResult updateCompanyNetworkConfigurationUpdateCompanyNetworkConfigurationRequest request request  beforeClientExecutionrequestreturn executeUpdateCompanyNetworkConfigurationrequest
public final String get(String name) {for (IndexableField field : fields) {if (field.name().equals(name) && field.stringValue() != null) {return field.stringValue();}}return null;},public final String getString name for IndexableField field  fields if fieldnameequalsname  fieldstringValue  null return fieldstringValuereturn null
public boolean equalsSameType(Object other) {assert exists || 0 == value.length();MutableValueStr b = (MutableValueStr)other;return value.get().equals(b.value.get()) && exists == b.exists;},public boolean equalsSameTypeObject other assert exists  0  valuelengthMutableValueStr b  MutableValueStrotherreturn valuegetequalsbvalueget  exists  bexists
public void read(RecordStream rs) {while (rs.peekNextClass() == MergeCellsRecord.class) {MergeCellsRecord mcr = (MergeCellsRecord) rs.getNext();int nRegions = mcr.getNumAreas();for (int i = 0; i < nRegions; i++) {CellRangeAddress cra = mcr.getAreaAt(i);_mergedRegions.add(cra);}}},public void readRecordStream rs while rspeekNextClass  MergeCellsRecordclass MergeCellsRecord mcr  MergeCellsRecord rsgetNextint nRegions  mcrgetNumAreasfor int i  0 i  nRegions i CellRangeAddress cra  mcrgetAreaAtimergedRegionsaddcra
public int available() throws IOException {return in.available() / 2 + (lastChar == -1 ? 0 : 1);},public int available throws IOException return inavailable  2  lastChar  1  0  1
public Status getStatus() {return status;},public Status getStatus return status
"public CharSequence[] decompose(CharSequence cmd) {int parts = 0;for (int i = 0; 0 <= i && i < cmd.length();) {int next = dashEven(cmd, i);if (i == next) {parts++;i = next + 2;} else {parts++;i = next;}}CharSequence part[] = new CharSequence[parts];int x = 0;for (int i = 0; 0 <= i && i < cmd.length();) {int next = dashEven(cmd, i);if (i == next) {part[x++] = cmd.subSequence(i, i + 2);i = next + 2;} else {part[x++] = (next < 0) ? cmd.subSequence(i, cmd.length()) : cmd.subSequence(i, next);i = next;}}return part;}",public CharSequence decomposeCharSequence cmd int parts  0for int i  0 0  i  i  cmdlength int next  dashEvencmd iif i  next partsi  next  2 else partsi  nextCharSequence part  new CharSequencepartsint x  0for int i  0 0  i  i  cmdlength int next  dashEvencmd iif i  next partx  cmdsubSequencei i  2i  next  2 else partx  next  0  cmdsubSequencei cmdlength  cmdsubSequencei nexti  nextreturn part
"public RevokeSecurityGroupIngressRequest(String groupName, java.util.List<IpPermission> ipPermissions) {setGroupName(groupName);setIpPermissions(ipPermissions);}",public RevokeSecurityGroupIngressRequestString groupName javautilListIpPermission ipPermissions setGroupNamegroupNamesetIpPermissionsipPermissions
public Ref remove(Object key) {String name = toRefName((String) key);Ref res = null;int idx;if (0 <= (idx = packed.find(name))) {res = packed.get(name);packed = packed.remove(idx);sizeIsValid = false;}if (0 <= (idx = loose.find(name))) {res = loose.get(name);loose = loose.remove(idx);sizeIsValid = false;}if (0 <= (idx = resolved.find(name))) {res = resolved.get(name);resolved = resolved.remove(idx);sizeIsValid = false;}return res;},public Ref removeObject key String name  toRefNameString keyRef res  nullint idxif 0  idx  packedfindname res  packedgetnamepacked  packedremoveidxsizeIsValid  falseif 0  idx  loosefindname res  loosegetnameloose  looseremoveidxsizeIsValid  falseif 0  idx  resolvedfindname res  resolvedgetnameresolved  resolvedremoveidxsizeIsValid  falsereturn res
public DescribeMLModelsResult describeMLModels(DescribeMLModelsRequest request) {request = beforeClientExecution(request);return executeDescribeMLModels(request);},public DescribeMLModelsResult describeMLModelsDescribeMLModelsRequest request request  beforeClientExecutionrequestreturn executeDescribeMLModelsrequest
public String getInflectionType(int wordId) {return null; },public String getInflectionTypeint wordId return null 
"public CreateVolumeRequest(String snapshotId, String availabilityZone) {setSnapshotId(snapshotId);setAvailabilityZone(availabilityZone);}",public CreateVolumeRequestString snapshotId String availabilityZone setSnapshotIdsnapshotIdsetAvailabilityZoneavailabilityZone
"public DataValidationConstraint createDateConstraint(int operatorType, String formula1, String formula2, String dateFormat) {return DVConstraint.createDateConstraint(operatorType, formula1, formula2, dateFormat);}",public DataValidationConstraint createDateConstraintint operatorType String formula1 String formula2 String dateFormat return DVConstraintcreateDateConstraintoperatorType formula1 formula2 dateFormat
public CloneReceiptRuleSetResult cloneReceiptRuleSet(CloneReceiptRuleSetRequest request) {request = beforeClientExecution(request);return executeCloneReceiptRuleSet(request);},public CloneReceiptRuleSetResult cloneReceiptRuleSetCloneReceiptRuleSetRequest request request  beforeClientExecutionrequestreturn executeCloneReceiptRuleSetrequest
public int getOffsetGap(String fieldName) {return 1;},public int getOffsetGapString fieldName return 1
public long hash1(char c) {final long p = 1099511628211L;long hash = 0xcbf29ce484222325L;hash = (hash ^ (c & 0x00FF)) * p;hash = (hash ^ (c >> 8)) * p;hash += hash << 13;hash ^= hash >> 7;hash += hash << 3;hash ^= hash >> 17;hash += hash << 5;return hash;},public long hash1char c final long p  1099511628211Llong hash  0xcbf29ce484222325Lhash  hash  c  0x00FF  phash  hash  c  8  phash  hash  13hash  hash  7hash  hash  3hash  hash  17hash  hash  5return hash
public final ByteBuffer order(ByteOrder byteOrder) {orderImpl(byteOrder);return this;},public final ByteBuffer orderByteOrder byteOrder orderImplbyteOrderreturn this
public DescribeAlarmsForMetricResult describeAlarmsForMetric(DescribeAlarmsForMetricRequest request) {request = beforeClientExecution(request);return executeDescribeAlarmsForMetric(request);},public DescribeAlarmsForMetricResult describeAlarmsForMetricDescribeAlarmsForMetricRequest request request  beforeClientExecutionrequestreturn executeDescribeAlarmsForMetricrequest
public void terminateWorkflowExecution(TerminateWorkflowExecutionRequest request) {request = beforeClientExecution(request);executeTerminateWorkflowExecution(request);},public void terminateWorkflowExecutionTerminateWorkflowExecutionRequest request request  beforeClientExecutionrequestexecuteTerminateWorkflowExecutionrequest
"public DistanceValueSource(PointVectorStrategy strategy, Point from, double multiplier) {this.strategy = strategy;this.from = from;this.multiplier = multiplier;this.nullValue = 180 * multiplier;}",public DistanceValueSourcePointVectorStrategy strategy Point from double multiplier thisstrategy  strategythisfrom  fromthismultiplier  multiplierthisnullValue  180  multiplier
public RenameBranchCommand branchRename() {return new RenameBranchCommand(repo);},public RenameBranchCommand branchRename return new RenameBranchCommandrepo
"public IntBuffer get(int[] dst, int dstOffset, int intCount) {byteBuffer.limit(limit * SizeOf.INT);byteBuffer.position(position * SizeOf.INT);if (byteBuffer instanceof DirectByteBuffer) {((DirectByteBuffer) byteBuffer).get(dst, dstOffset, intCount);} else {((HeapByteBuffer) byteBuffer).get(dst, dstOffset, intCount);}this.position += intCount;return this;}",public IntBuffer getint dst int dstOffset int intCount byteBufferlimitlimit  SizeOfINTbyteBufferpositionposition  SizeOfINTif byteBuffer instanceof DirectByteBuffer DirectByteBuffer byteBuffergetdst dstOffset intCount else HeapByteBuffer byteBuffergetdst dstOffset intCountthisposition  intCountreturn this
public DescribeInstanceEventNotificationAttributesResult describeInstanceEventNotificationAttributes(DescribeInstanceEventNotificationAttributesRequest request) {request = beforeClientExecution(request);return executeDescribeInstanceEventNotificationAttributes(request);},public DescribeInstanceEventNotificationAttributesResult describeInstanceEventNotificationAttributesDescribeInstanceEventNotificationAttributesRequest request request  beforeClientExecutionrequestreturn executeDescribeInstanceEventNotificationAttributesrequest
"public void appendUserAgent(String key, String value) {this.userAgentConfig.append(key, value);}",public void appendUserAgentString key String value thisuserAgentConfigappendkey value
"public String getErrorDisplay(int c) {String s = String.valueOf((char)c);switch ( c ) {case Token.EOF :s = ""<EOF>"";break;case '\n' :s = ""\\n"";break;case '\t' :s = ""\\t"";break;case '\r' :s = ""\\r"";break;}return s;}",public String getErrorDisplayint c String s  StringvalueOfcharcswitch  c  case TokenEOF s  EOFbreakcase n s  nbreakcase t s  tbreakcase r s  rbreakreturn s
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[CHARTFORMAT]\n"");buffer.append(""    .xPosition       = "").append(getXPosition()).append(""\n"");buffer.append(""    .yPosition       = "").append(getYPosition()).append(""\n"");buffer.append(""    .width           = "").append(getWidth()).append(""\n"");buffer.append(""    .height          = "").append(getHeight()).append(""\n"");buffer.append(""    .grBit           = "").append(HexDump.intToHex(field5_grbit)).append(""\n"");buffer.append(""[/CHARTFORMAT]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendCHARTFORMATnbufferappend    xPosition        appendgetXPositionappendnbufferappend    yPosition        appendgetYPositionappendnbufferappend    width            appendgetWidthappendnbufferappend    height           appendgetHeightappendnbufferappend    grBit            appendHexDumpintToHexfield5grbitappendnbufferappendCHARTFORMATnreturn buffertoString
"public GetQuotaRequest() {super(""CloudPhoto"", ""2017-07-11"", ""GetQuota"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public GetQuotaRequest superCloudPhoto 20170711 GetQuota cloudphotosetProtocolProtocolTypeHTTPS
public DeleteEventStreamResult deleteEventStream(DeleteEventStreamRequest request) {request = beforeClientExecution(request);return executeDeleteEventStream(request);},public DeleteEventStreamResult deleteEventStreamDeleteEventStreamRequest request request  beforeClientExecutionrequestreturn executeDeleteEventStreamrequest
"public GetPhotosRequest() {super(""CloudPhoto"", ""2017-07-11"", ""GetPhotos"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public GetPhotosRequest superCloudPhoto 20170711 GetPhotos cloudphotosetProtocolProtocolTypeHTTPS
public int getBegin() {return begin;},public int getBegin return begin
"public void decRef() throws IOException {if (refCount.get() <= 0) {throw new IllegalStateException(""this revision is already released"");}final int rc = refCount.decrementAndGet();if (rc == 0) {boolean success = false;try {revision.release();success = true;} finally {if (!success) {refCount.incrementAndGet();}}} else if (rc < 0) {throw new IllegalStateException(""too many decRef calls: refCount is "" + rc + "" after decrement"");}}",public void decRef throws IOException if refCountget  0 throw new IllegalStateExceptionthis revision is already releasedfinal int rc  refCountdecrementAndGetif rc  0 boolean success  falsetry revisionreleasesuccess  true finally if success refCountincrementAndGet else if rc  0 throw new IllegalStateExceptiontoo many decRef calls refCount is   rc   after decrement
public DescribeDataSetPermissionsResult describeDataSetPermissions(DescribeDataSetPermissionsRequest request) {request = beforeClientExecution(request);return executeDescribeDataSetPermissions(request);},public DescribeDataSetPermissionsResult describeDataSetPermissionsDescribeDataSetPermissionsRequest request request  beforeClientExecutionrequestreturn executeDescribeDataSetPermissionsrequest
"public SaveTaskForUpdatingRegistrantInfoByIdentityCredentialRequest() {super(""Domain"", ""2018-01-29"", ""SaveTaskForUpdatingRegistrantInfoByIdentityCredential"");setMethod(MethodType.POST);}",public SaveTaskForUpdatingRegistrantInfoByIdentityCredentialRequest superDomain 20180129 SaveTaskForUpdatingRegistrantInfoByIdentityCredentialsetMethodMethodTypePOST
public TokenStreamToAutomaton() {this.preservePositionIncrements = true;},public TokenStreamToAutomaton thispreservePositionIncrements  true
"public NameXPtg addNameXPtg(String name) {int extBlockIndex = -1;ExternalBookBlock extBlock = null;for (int i = 0; i < _externalBookBlocks.length; i++) {SupBookRecord ebr = _externalBookBlocks[i].getExternalBookRecord();if (ebr.isAddInFunctions()) {extBlock = _externalBookBlocks[i];extBlockIndex = i;break;}}if (extBlock == null) {extBlock = new ExternalBookBlock();extBlockIndex = extendExternalBookBlocks(extBlock);int idx = findFirstRecordLocBySid(ExternSheetRecord.sid);_workbookRecordList.add(idx, extBlock.getExternalBookRecord());_externSheetRecord.addRef(_externalBookBlocks.length - 1, -2, -2);}ExternalNameRecord extNameRecord = new ExternalNameRecord();extNameRecord.setText(name);extNameRecord.setParsedExpression(new Ptg[]{ErrPtg.REF_INVALID});int nameIndex = extBlock.addExternalName(extNameRecord);int supLinkIndex = 0;for (org.apache.poi.hssf.record.Record record : _workbookRecordList.getRecords()) {if (record instanceof SupBookRecord && ((SupBookRecord) record).isAddInFunctions()) {break;}supLinkIndex++;}int numberOfNames = extBlock.getNumberOfNames();_workbookRecordList.add(supLinkIndex + numberOfNames, extNameRecord);int fakeSheetIdx = -2; int ix = _externSheetRecord.getRefIxForSheet(extBlockIndex, fakeSheetIdx, fakeSheetIdx);return new NameXPtg(ix, nameIndex);}",public NameXPtg addNameXPtgString name int extBlockIndex  1ExternalBookBlock extBlock  nullfor int i  0 i  externalBookBlockslength i SupBookRecord ebr  externalBookBlocksigetExternalBookRecordif ebrisAddInFunctions extBlock  externalBookBlocksiextBlockIndex  ibreakif extBlock  null extBlock  new ExternalBookBlockextBlockIndex  extendExternalBookBlocksextBlockint idx  findFirstRecordLocBySidExternSheetRecordsidworkbookRecordListaddidx extBlockgetExternalBookRecordexternSheetRecordaddRefexternalBookBlockslength  1 2 2ExternalNameRecord extNameRecord  new ExternalNameRecordextNameRecordsetTextnameextNameRecordsetParsedExpressionnew PtgErrPtgREFINVALIDint nameIndex  extBlockaddExternalNameextNameRecordint supLinkIndex  0for orgapachepoihssfrecordRecord record  workbookRecordListgetRecords if record instanceof SupBookRecord  SupBookRecord recordisAddInFunctions breaksupLinkIndexint numberOfNames  extBlockgetNumberOfNamesworkbookRecordListaddsupLinkIndex  numberOfNames extNameRecordint fakeSheetIdx  2 int ix  externSheetRecordgetRefIxForSheetextBlockIndex fakeSheetIdx fakeSheetIdxreturn new NameXPtgix nameIndex
public static IndexReaderContext getTopLevelContext(IndexReaderContext context) {while (context.parent != null) {context = context.parent;}return context;},public static IndexReaderContext getTopLevelContextIndexReaderContext context while contextparent  null context  contextparentreturn context
public final CharBuffer put(CharBuffer src) {throw new ReadOnlyBufferException();},public final CharBuffer putCharBuffer src throw new ReadOnlyBufferException
public DeleteLabelsResult deleteLabels(DeleteLabelsRequest request) {request = beforeClientExecution(request);return executeDeleteLabels(request);},public DeleteLabelsResult deleteLabelsDeleteLabelsRequest request request  beforeClientExecutionrequestreturn executeDeleteLabelsrequest
public ListAlgorithmsResult listAlgorithms(ListAlgorithmsRequest request) {request = beforeClientExecution(request);return executeListAlgorithms(request);},public ListAlgorithmsResult listAlgorithmsListAlgorithmsRequest request request  beforeClientExecutionrequestreturn executeListAlgorithmsrequest
public DiffCommand setShowNameAndStatusOnly(boolean showNameAndStatusOnly) {this.showNameAndStatusOnly = showNameAndStatusOnly;return this;},public DiffCommand setShowNameAndStatusOnlyboolean showNameAndStatusOnly thisshowNameAndStatusOnly  showNameAndStatusOnlyreturn this
public boolean isForceUpdate() {return force;},public boolean isForceUpdate return force
public DeleteVpcEndpointServiceConfigurationsResult deleteVpcEndpointServiceConfigurations(DeleteVpcEndpointServiceConfigurationsRequest request) {request = beforeClientExecution(request);return executeDeleteVpcEndpointServiceConfigurations(request);},public DeleteVpcEndpointServiceConfigurationsResult deleteVpcEndpointServiceConfigurationsDeleteVpcEndpointServiceConfigurationsRequest request request  beforeClientExecutionrequestreturn executeDeleteVpcEndpointServiceConfigurationsrequest
"public Field(String name, TokenStream tokenStream, IndexableFieldType type) {if (name == null) {throw new IllegalArgumentException(""name must not be null"");}if (tokenStream == null) {throw new NullPointerException(""tokenStream must not be null"");}if (type.indexOptions() == IndexOptions.NONE || !type.tokenized()) {throw new IllegalArgumentException(""TokenStream fields must be indexed and tokenized"");}if (type.stored()) {throw new IllegalArgumentException(""TokenStream fields cannot be stored"");}this.name = name;this.fieldsData = null;this.tokenStream = tokenStream;this.type = type;}",public FieldString name TokenStream tokenStream IndexableFieldType type if name  null throw new IllegalArgumentExceptionname must not be nullif tokenStream  null throw new NullPointerExceptiontokenStream must not be nullif typeindexOptions  IndexOptionsNONE  typetokenized throw new IllegalArgumentExceptionTokenStream fields must be indexed and tokenizedif typestored throw new IllegalArgumentExceptionTokenStream fields cannot be storedthisname  namethisfieldsData  nullthistokenStream  tokenStreamthistype  type
public ListDeadLetterSourceQueuesResult listDeadLetterSourceQueues(ListDeadLetterSourceQueuesRequest request) {request = beforeClientExecution(request);return executeListDeadLetterSourceQueues(request);},public ListDeadLetterSourceQueuesResult listDeadLetterSourceQueuesListDeadLetterSourceQueuesRequest request request  beforeClientExecutionrequestreturn executeListDeadLetterSourceQueuesrequest
"public BinaryDocValuesField(String name, BytesRef value) {super(name, TYPE);fieldsData = value;}",public BinaryDocValuesFieldString name BytesRef value supername TYPEfieldsData  value
"public CreateVpnConnectionRequest(String type, String customerGatewayId, String vpnGatewayId) {setType(type);setCustomerGatewayId(customerGatewayId);setVpnGatewayId(vpnGatewayId);}",public CreateVpnConnectionRequestString type String customerGatewayId String vpnGatewayId setTypetypesetCustomerGatewayIdcustomerGatewayIdsetVpnGatewayIdvpnGatewayId
public OpenInstancePublicPortsResult openInstancePublicPorts(OpenInstancePublicPortsRequest request) {request = beforeClientExecution(request);return executeOpenInstancePublicPorts(request);},public OpenInstancePublicPortsResult openInstancePublicPortsOpenInstancePublicPortsRequest request request  beforeClientExecutionrequestreturn executeOpenInstancePublicPortsrequest
public Builder() {this.similarity = new BM25Similarity();},public Builder thissimilarity  new BM25Similarity
public InputIteratorWrapper(BytesRefIterator wrapped) {this.wrapped = wrapped;},public InputIteratorWrapperBytesRefIterator wrapped thiswrapped  wrapped
public CreateUserProfileResult createUserProfile(CreateUserProfileRequest request) {request = beforeClientExecution(request);return executeCreateUserProfile(request);},public CreateUserProfileResult createUserProfileCreateUserProfileRequest request request  beforeClientExecutionrequestreturn executeCreateUserProfilerequest
public ImportWorkspaceImageResult importWorkspaceImage(ImportWorkspaceImageRequest request) {request = beforeClientExecution(request);return executeImportWorkspaceImage(request);},public ImportWorkspaceImageResult importWorkspaceImageImportWorkspaceImageRequest request request  beforeClientExecutionrequestreturn executeImportWorkspaceImagerequest
public void finish() {mState = STATE_IDLE;},public void finish mState  STATEIDLE
public DescribeFleetHistoryResult describeFleetHistory(DescribeFleetHistoryRequest request) {request = beforeClientExecution(request);return executeDescribeFleetHistory(request);},public DescribeFleetHistoryResult describeFleetHistoryDescribeFleetHistoryRequest request request  beforeClientExecutionrequestreturn executeDescribeFleetHistoryrequest
public ListGatewaysResult listGateways(ListGatewaysRequest request) {request = beforeClientExecution(request);return executeListGateways(request);},public ListGatewaysResult listGatewaysListGatewaysRequest request request  beforeClientExecutionrequestreturn executeListGatewaysrequest
public CreateTrafficMirrorFilterResult createTrafficMirrorFilter(CreateTrafficMirrorFilterRequest request) {request = beforeClientExecution(request);return executeCreateTrafficMirrorFilter(request);},public CreateTrafficMirrorFilterResult createTrafficMirrorFilterCreateTrafficMirrorFilterRequest request request  beforeClientExecutionrequestreturn executeCreateTrafficMirrorFilterrequest
"public BytesRef(byte[] bytes, int offset, int length) {this.bytes = bytes;this.offset = offset;this.length = length;assert isValid();}",public BytesRefbyte bytes int offset int length thisbytes  bytesthisoffset  offsetthislength  lengthassert isValid
public void write(LittleEndianOutput out) {out.writeByte(getSid());},public void writeLittleEndianOutput out outwriteBytegetSid
"public BufferedChecksum(Checksum in, int bufferSize) {this.in = in;this.buffer = new byte[bufferSize];}",public BufferedChecksumChecksum in int bufferSize thisin  inthisbuffer  new bytebufferSize
public String toFormulaString(String[] operands) {StringBuilder buffer = new StringBuilder();buffer.append(operands[ 0 ]);buffer.append(ADD);buffer.append(operands[ 1 ]);return buffer.toString();},public String toFormulaStringString operands StringBuilder buffer  new StringBuilderbufferappendoperands 0 bufferappendADDbufferappendoperands 1 return buffertoString
public TagCommand tag() {return new TagCommand(repo);},public TagCommand tag return new TagCommandrepo
public DescribeClusterDbRevisionsResult describeClusterDbRevisions(DescribeClusterDbRevisionsRequest request) {request = beforeClientExecution(request);return executeDescribeClusterDbRevisions(request);},public DescribeClusterDbRevisionsResult describeClusterDbRevisionsDescribeClusterDbRevisionsRequest request request  beforeClientExecutionrequestreturn executeDescribeClusterDbRevisionsrequest
public StartImageScanResult startImageScan(StartImageScanRequest request) {request = beforeClientExecution(request);return executeStartImageScan(request);},public StartImageScanResult startImageScanStartImageScanRequest request request  beforeClientExecutionrequestreturn executeStartImageScanrequest
"public final String toFormulaString() {throw new RuntimeException(""toFormulaString(String[] operands) should be used for subclasses of OperationPtgs"");}",public final String toFormulaString throw new RuntimeExceptiontoFormulaStringString operands should be used for subclasses of OperationPtgs
public DBInstance restoreDBInstanceToPointInTime(RestoreDBInstanceToPointInTimeRequest request) {request = beforeClientExecution(request);return executeRestoreDBInstanceToPointInTime(request);},public DBInstance restoreDBInstanceToPointInTimeRestoreDBInstanceToPointInTimeRequest request request  beforeClientExecutionrequestreturn executeRestoreDBInstanceToPointInTimerequest
public boolean removeShape(HSSFShape shape) {boolean  isRemoved = _mainSpgrContainer.removeChildRecord(shape.getEscherContainer());if (isRemoved){shape.afterRemove(this);_shapes.remove(shape);}return isRemoved;},public boolean removeShapeHSSFShape shape boolean  isRemoved  mainSpgrContainerremoveChildRecordshapegetEscherContainerif isRemovedshapeafterRemovethisshapesremoveshapereturn isRemoved
"public static void fill(boolean[] array, boolean value) {for (int i = 0; i < array.length; i++) {array[i] = value;}}",public static void fillboolean array boolean value for int i  0 i  arraylength i arrayi  value
public DeleteAssessmentTemplateResult deleteAssessmentTemplate(DeleteAssessmentTemplateRequest request) {request = beforeClientExecution(request);return executeDeleteAssessmentTemplate(request);},public DeleteAssessmentTemplateResult deleteAssessmentTemplateDeleteAssessmentTemplateRequest request request  beforeClientExecutionrequestreturn executeDeleteAssessmentTemplaterequest
public StartMonitoringScheduleResult startMonitoringSchedule(StartMonitoringScheduleRequest request) {request = beforeClientExecution(request);return executeStartMonitoringSchedule(request);},public StartMonitoringScheduleResult startMonitoringScheduleStartMonitoringScheduleRequest request request  beforeClientExecutionrequestreturn executeStartMonitoringSchedulerequest
public void println(int i) {println(String.valueOf(i));},public void printlnint i printlnStringvalueOfi
public PutRoomSkillParameterResult putRoomSkillParameter(PutRoomSkillParameterRequest request) {request = beforeClientExecution(request);return executePutRoomSkillParameter(request);},public PutRoomSkillParameterResult putRoomSkillParameterPutRoomSkillParameterRequest request request  beforeClientExecutionrequestreturn executePutRoomSkillParameterrequest
public DeleteDomainResult deleteDomain(DeleteDomainRequest request) {request = beforeClientExecution(request);return executeDeleteDomain(request);},public DeleteDomainResult deleteDomainDeleteDomainRequest request request  beforeClientExecutionrequestreturn executeDeleteDomainrequest
public ModifyLaunchTemplateResult modifyLaunchTemplate(ModifyLaunchTemplateRequest request) {request = beforeClientExecution(request);return executeModifyLaunchTemplate(request);},public ModifyLaunchTemplateResult modifyLaunchTemplateModifyLaunchTemplateRequest request request  beforeClientExecutionrequestreturn executeModifyLaunchTemplaterequest
public final float overheadRatio(int bitsPerValue) {assert isSupported(bitsPerValue);return overheadPerValue(bitsPerValue) / bitsPerValue;},public final float overheadRatioint bitsPerValue assert isSupportedbitsPerValuereturn overheadPerValuebitsPerValue  bitsPerValue
public ObjectId getIndexId() {return indexId;},public ObjectId getIndexId return indexId
"public String toString(String field) {return ""like:"" + likeText;}",public String toStringString field return like  likeText
public long ramBytesUsed() {long sizeInBytes = BASE_RAM_BYTES_USED;sizeInBytes += (docIDs!=null)? RamUsageEstimator.sizeOf(docIDs) : 0;sizeInBytes += (freqs!=null)? RamUsageEstimator.sizeOf(freqs) : 0;if(positions != null) {sizeInBytes += RamUsageEstimator.shallowSizeOf(positions);for(int[] position : positions) {sizeInBytes += (position!=null) ? RamUsageEstimator.sizeOf(position) : 0;}}if (payloads != null) {sizeInBytes += RamUsageEstimator.shallowSizeOf(payloads);for(byte[][] payload : payloads) {if(payload != null) {sizeInBytes += RamUsageEstimator.shallowSizeOf(payload);for(byte[] pload : payload) {sizeInBytes += (pload!=null) ? RamUsageEstimator.sizeOf(pload) : 0;}}}}return sizeInBytes;},public long ramBytesUsed long sizeInBytes  BASERAMBYTESUSEDsizeInBytes  docIDsnull RamUsageEstimatorsizeOfdocIDs  0sizeInBytes  freqsnull RamUsageEstimatorsizeOffreqs  0ifpositions  null sizeInBytes  RamUsageEstimatorshallowSizeOfpositionsforint position  positions sizeInBytes  positionnull  RamUsageEstimatorsizeOfposition  0if payloads  null sizeInBytes  RamUsageEstimatorshallowSizeOfpayloadsforbyte payload  payloads ifpayload  null sizeInBytes  RamUsageEstimatorshallowSizeOfpayloadforbyte pload  payload sizeInBytes  ploadnull  RamUsageEstimatorsizeOfpload  0return sizeInBytes
public void setNeedBaseObjectIds(boolean b) {this.needBaseObjectIds = b;},public void setNeedBaseObjectIdsboolean b thisneedBaseObjectIds  b
public int getNextOrdinal() {return this.counter++;},public int getNextOrdinal return thiscounter
public FloatBuffer compact() {throw new ReadOnlyBufferException();},public FloatBuffer compact throw new ReadOnlyBufferException
public final int getLengthA() {return endA - beginA;},public final int getLengthA return endA  beginA
public SearchDevicesResult searchDevices(SearchDevicesRequest request) {request = beforeClientExecution(request);return executeSearchDevices(request);},public SearchDevicesResult searchDevicesSearchDevicesRequest request request  beforeClientExecutionrequestreturn executeSearchDevicesrequest
public String getInflectionForm() {return dictionary.getInflectionForm(wordId);},public String getInflectionForm return dictionarygetInflectionFormwordId
public RevFilter clone() {return this;},public RevFilter clone return this
public ReservedDBInstance purchaseReservedDBInstancesOffering(PurchaseReservedDBInstancesOfferingRequest request) {request = beforeClientExecution(request);return executePurchaseReservedDBInstancesOffering(request);},public ReservedDBInstance purchaseReservedDBInstancesOfferingPurchaseReservedDBInstancesOfferingRequest request request  beforeClientExecutionrequestreturn executePurchaseReservedDBInstancesOfferingrequest
public String getReason() {return super.getMessage();},public String getReason return supergetMessage
"public ParseException generateParseException() {jj_expentries.clear();boolean[] la1tokens = new boolean[24];if (jj_kind >= 0) {la1tokens[jj_kind] = true;jj_kind = -1;}for (int i = 0; i < 10; i++) {if (jj_la1[i] == jj_gen) {for (int j = 0; j < 32; j++) {if ((jj_la1_0[i] & (1<<j)) != 0) {la1tokens[j] = true;}}}}for (int i = 0; i < 24; i++) {if (la1tokens[i]) {jj_expentry = new int[1];jj_expentry[0] = i;jj_expentries.add(jj_expentry);}}jj_endpos = 0;jj_rescan_token();jj_add_error_token(0, 0);int[][] exptokseq = new int[jj_expentries.size()][];for (int i = 0; i < jj_expentries.size(); i++) {exptokseq[i] = jj_expentries.get(i);}return new ParseException(token, exptokseq, tokenImage);}",public ParseException generateParseException jjexpentriesclearboolean la1tokens  new boolean24if jjkind  0 la1tokensjjkind  truejjkind  1for int i  0 i  10 i if jjla1i  jjgen for int j  0 j  32 j if jjla10i  1j  0 la1tokensj  truefor int i  0 i  24 i if la1tokensi jjexpentry  new int1jjexpentry0  ijjexpentriesaddjjexpentryjjendpos  0jjrescantokenjjadderrortoken0 0int exptokseq  new intjjexpentriessizefor int i  0 i  jjexpentriessize i exptokseqi  jjexpentriesgetireturn new ParseExceptiontoken exptokseq tokenImage
"public int [] toArray(){int[] rval = new int[ _limit ];System.arraycopy(_array, 0, rval, 0, _limit);return rval;}",public int  toArrayint rval  new int limit Systemarraycopyarray 0 rval 0 limitreturn rval
"public ValueEval evaluate(ValueEval[] args, OperationEvaluationContext ec) {if (args.length == 1) {return evaluate(ec.getRowIndex(), ec.getColumnIndex(), args[0]);}if (args.length == 2) {return evaluate(ec.getRowIndex(), ec.getColumnIndex(), args[0], args[1]);}return ErrorEval.VALUE_INVALID;}",public ValueEval evaluateValueEval args OperationEvaluationContext ec if argslength  1 return evaluateecgetRowIndex ecgetColumnIndex args0if argslength  2 return evaluateecgetRowIndex ecgetColumnIndex args0 args1return ErrorEvalVALUEINVALID
public DescribeCustomerGatewaysResult describeCustomerGateways(DescribeCustomerGatewaysRequest request) {request = beforeClientExecution(request);return executeDescribeCustomerGateways(request);},public DescribeCustomerGatewaysResult describeCustomerGatewaysDescribeCustomerGatewaysRequest request request  beforeClientExecutionrequestreturn executeDescribeCustomerGatewaysrequest
"public String toString() {return utf8.utf8ToString() + ""/"" + bucket;}",public String toString return utf8utf8ToString    bucket
"public void clipRect(int x, int y, int width, int height){if (logger.check( POILogger.WARN ))logger.log(POILogger.WARN,""clipRect not supported"");}",public void clipRectint x int y int width int heightif loggercheck POILoggerWARN loggerlogPOILoggerWARNclipRect not supported
public void startFragment(TextFragment newFragment) {uniqueTermsInFragment = new HashSet<>();currentTextFragment = newFragment;totalScore = 0;},public void startFragmentTextFragment newFragment uniqueTermsInFragment  new HashSetcurrentTextFragment  newFragmenttotalScore  0
"public void setPolygonDrawArea(int width, int height) {setPropertyValue(new EscherSimpleProperty(EscherPropertyTypes.GEOMETRY__RIGHT, width));setPropertyValue(new EscherSimpleProperty(EscherPropertyTypes.GEOMETRY__BOTTOM, height));}",public void setPolygonDrawAreaint width int height setPropertyValuenew EscherSimplePropertyEscherPropertyTypesGEOMETRYRIGHT widthsetPropertyValuenew EscherSimplePropertyEscherPropertyTypesGEOMETRYBOTTOM height
public DeleteRouteSettingsResult deleteRouteSettings(DeleteRouteSettingsRequest request) {request = beforeClientExecution(request);return executeDeleteRouteSettings(request);},public DeleteRouteSettingsResult deleteRouteSettingsDeleteRouteSettingsRequest request request  beforeClientExecutionrequestreturn executeDeleteRouteSettingsrequest
"public CherryPickCommand include(String name, AnyObjectId commit) {return include(new ObjectIdRef.Unpeeled(Storage.LOOSE, name,commit.copy()));}",public CherryPickCommand includeString name AnyObjectId commit return includenew ObjectIdRefUnpeeledStorageLOOSE namecommitcopy
"public short getFormat(String format, boolean createIfNotFound) {for (FormatRecord r : formats) {if (r.getFormatString().equals(format)) {return (short)r.getIndexCode();}}if (createIfNotFound) {return (short)createFormat(format);}return -1;}",public short getFormatString format boolean createIfNotFound for FormatRecord r  formats if rgetFormatStringequalsformat return shortrgetIndexCodeif createIfNotFound return shortcreateFormatformatreturn 1
"public SpanNearQuery build() {return new SpanNearQuery(clauses.toArray(new SpanQuery[clauses.size()]), slop, ordered);}",public SpanNearQuery build return new SpanNearQueryclausestoArraynew SpanQueryclausessize slop ordered
"public int getRowCellBlockSize(int startRow, int endRow) {int result = 0;for(int rowIx=startRow; rowIx<=endRow && rowIx<records.length; rowIx++) {result += getRowSerializedSize(records[rowIx]);}return result;}",public int getRowCellBlockSizeint startRow int endRow int result  0forint rowIxstartRow rowIxendRow  rowIxrecordslength rowIx result  getRowSerializedSizerecordsrowIxreturn result
public final boolean incrementToken() {if (!it.hasNext()) {return false;}AttributeSource.State state = it.next();restoreState(state);return true;},public final boolean incrementToken if ithasNext return falseAttributeSourceState state  itnextrestoreStatestatereturn true
public DeleteTemplateResult deleteTemplate(DeleteTemplateRequest request) {request = beforeClientExecution(request);return executeDeleteTemplate(request);},public DeleteTemplateResult deleteTemplateDeleteTemplateRequest request request  beforeClientExecutionrequestreturn executeDeleteTemplaterequest
public StartFaceSearchResult startFaceSearch(StartFaceSearchRequest request) {request = beforeClientExecution(request);return executeStartFaceSearch(request);},public StartFaceSearchResult startFaceSearchStartFaceSearchRequest request request  beforeClientExecutionrequestreturn executeStartFaceSearchrequest
"public static int formatBase10(final byte[] b, int o, int value) {if (value == 0) {b[--o] = '0';return o;}final boolean isneg = value < 0;if (isneg)value = -value;while (value != 0) {b[--o] = base10byte[value % 10];value /= 10;}if (isneg)b[--o] = '-';return o;}",public static int formatBase10final byte b int o int value if value  0 bo  0return ofinal boolean isneg  value  0if isnegvalue  valuewhile value  0 bo  base10bytevalue  10value  10if isnegbo  return o
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[SINDEX]\n"");buffer.append(""    .index                = "").append(""0x"").append(HexDump.toHex(  getIndex ())).append("" ("").append( getIndex() ).append("" )"");buffer.append(System.getProperty(""line.separator""));buffer.append(""[/SINDEX]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendSINDEXnbufferappend    index                 append0xappendHexDumptoHex  getIndex append append getIndex append bufferappendSystemgetPropertylineseparatorbufferappendSINDEXnreturn buffertoString
public DescribeDBSecurityGroupsResult describeDBSecurityGroups(DescribeDBSecurityGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeDBSecurityGroups(request);},public DescribeDBSecurityGroupsResult describeDBSecurityGroupsDescribeDBSecurityGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeDBSecurityGroupsrequest
public DeleteTrafficMirrorSessionResult deleteTrafficMirrorSession(DeleteTrafficMirrorSessionRequest request) {request = beforeClientExecution(request);return executeDeleteTrafficMirrorSession(request);},public DeleteTrafficMirrorSessionResult deleteTrafficMirrorSessionDeleteTrafficMirrorSessionRequest request request  beforeClientExecutionrequestreturn executeDeleteTrafficMirrorSessionrequest
"public void stopWalk() {final int cur = ptr;final int cnt = cache.getEntryCount();if (cur < cnt)builder.keep(cur, cnt - cur);}",public void stopWalk final int cur  ptrfinal int cnt  cachegetEntryCountif cur  cntbuilderkeepcur cnt  cur
"public ExpandedDouble normaliseBaseTwo() {MutableFPNumber cc = new MutableFPNumber(composeFrac(), 39);cc.multiplyByPowerOfTen(_relativeDecimalExponent);cc.normalise64bit();return cc.createExpandedDouble();}",public ExpandedDouble normaliseBaseTwo MutableFPNumber cc  new MutableFPNumbercomposeFrac 39ccmultiplyByPowerOfTenrelativeDecimalExponentccnormalise64bitreturn cccreateExpandedDouble
public PutLexiconResult putLexicon(PutLexiconRequest request) {request = beforeClientExecution(request);return executePutLexicon(request);},public PutLexiconResult putLexiconPutLexiconRequest request request  beforeClientExecutionrequestreturn executePutLexiconrequest
public int[] init() {if (perField.postingsArray == null) {perField.postingsArray = perField.createPostingsArray(2);perField.newPostingsArray();bytesUsed.addAndGet(perField.postingsArray.size * perField.postingsArray.bytesPerPosting());}return perField.postingsArray.textStarts;},public int init if perFieldpostingsArray  null perFieldpostingsArray  perFieldcreatePostingsArray2perFieldnewPostingsArraybytesUsedaddAndGetperFieldpostingsArraysize  perFieldpostingsArraybytesPerPostingreturn perFieldpostingsArraytextStarts
public DirCacheEntry getDirCacheEntry() {return entry;},public DirCacheEntry getDirCacheEntry return entry
public boolean include(TreeWalk walker) {return matchFilter(walker) <= 0;},public boolean includeTreeWalk walker return matchFilterwalker  0
"public void open(String closer) {if (closer == null) {throw new NullPointerException(""closer == null"");}if (this == NOOP || !ENABLED) {return;}String message = ""Explicit termination method '"" + closer + ""' not called"";allocationSite = new Throwable(message);}",public void openString closer if closer  null throw new NullPointerExceptioncloser  nullif this  NOOP  ENABLED returnString message  Explicit termination method   closer   not calledallocationSite  new Throwablemessage
"public List<ParseTreeMatch> findAll(ParseTree tree, String xpath) {Collection<ParseTree> subtrees = XPath.findAll(tree, xpath, matcher.getParser());List<ParseTreeMatch> matches = new ArrayList<ParseTreeMatch>();for (ParseTree t : subtrees) {ParseTreeMatch match = match(t);if ( match.succeeded() ) {matches.add(match);}}return matches;}",public ListParseTreeMatch findAllParseTree tree String xpath CollectionParseTree subtrees  XPathfindAlltree xpath matchergetParserListParseTreeMatch matches  new ArrayListParseTreeMatchfor ParseTree t  subtrees ParseTreeMatch match  matchtif  matchsucceeded  matchesaddmatchreturn matches
"public static boolean hasSLLConflictTerminatingPrediction(PredictionMode mode, ATNConfigSet configs) {if (allConfigsInRuleStopStates(configs)) {return true;}if ( mode == PredictionMode.SLL ) {if ( configs.hasSemanticContext ) {ATNConfigSet dup = new ATNConfigSet();for (ATNConfig c : configs) {c = new ATNConfig(c,SemanticContext.NONE);dup.add(c);}configs = dup;}}Collection<BitSet> altsets = getConflictingAltSubsets(configs);boolean heuristic =hasConflictingAltSet(altsets) && !hasStateAssociatedWithOneAlt(configs);return heuristic;}",public static boolean hasSLLConflictTerminatingPredictionPredictionMode mode ATNConfigSet configs if allConfigsInRuleStopStatesconfigs return trueif  mode  PredictionModeSLL  if  configshasSemanticContext  ATNConfigSet dup  new ATNConfigSetfor ATNConfig c  configs c  new ATNConfigcSemanticContextNONEdupaddcconfigs  dupCollectionBitSet altsets  getConflictingAltSubsetsconfigsboolean heuristic hasConflictingAltSetaltsets  hasStateAssociatedWithOneAltconfigsreturn heuristic
public DescribeUpdateActionsResult describeUpdateActions(DescribeUpdateActionsRequest request) {request = beforeClientExecution(request);return executeDescribeUpdateActions(request);},public DescribeUpdateActionsResult describeUpdateActionsDescribeUpdateActionsRequest request request  beforeClientExecutionrequestreturn executeDescribeUpdateActionsrequest
"public HashMap() {table = (HashMapEntry<K, V>[]) EMPTY_TABLE;threshold = -1; }",public HashMap table  HashMapEntryK V EMPTYTABLEthreshold  1 
"public Trie optimize(Trie orig) {List<CharSequence> cmds = orig.cmds;List<Row> rows = new ArrayList<>();List<Row> orows = orig.rows;int remap[] = new int[orows.size()];Arrays.fill(remap, -1);rows = removeGaps(orig.root, rows, new ArrayList<Row>(), remap);return new Trie(orig.forward, remap[orig.root], cmds, rows);}",public Trie optimizeTrie orig ListCharSequence cmds  origcmdsListRow rows  new ArrayListListRow orows  origrowsint remap  new intorowssizeArraysfillremap 1rows  removeGapsorigroot rows new ArrayListRow remapreturn new Trieorigforward remaporigroot cmds rows
public CreateLifecyclePolicyResult createLifecyclePolicy(CreateLifecyclePolicyRequest request) {request = beforeClientExecution(request);return executeCreateLifecyclePolicy(request);},public CreateLifecyclePolicyResult createLifecyclePolicyCreateLifecyclePolicyRequest request request  beforeClientExecutionrequestreturn executeCreateLifecyclePolicyrequest
public void writeLong(long v) {writeInt((int)(v));writeInt((int)(v >> 32));},public void writeLonglong v writeIntintvwriteIntintv  32
"public void set(char[] arr, int end) {this.buf = arr;this.len = end;}",public void setchar arr int end thisbuf  arrthislen  end
"public HMMChineseTokenizerFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public HMMChineseTokenizerFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public String toString() {return getClass().getSimpleName()+"" field:""+fieldName+"" ctx=""+ctx;}",public String toString return getClassgetSimpleName fieldfieldName ctxctx
public ResendContactReachabilityEmailResult resendContactReachabilityEmail(ResendContactReachabilityEmailRequest request) {request = beforeClientExecution(request);return executeResendContactReachabilityEmail(request);},public ResendContactReachabilityEmailResult resendContactReachabilityEmailResendContactReachabilityEmailRequest request request  beforeClientExecutionrequestreturn executeResendContactReachabilityEmailrequest
public GetApiKeyResult getApiKey(GetApiKeyRequest request) {request = beforeClientExecution(request);return executeGetApiKey(request);},public GetApiKeyResult getApiKeyGetApiKeyRequest request request  beforeClientExecutionrequestreturn executeGetApiKeyrequest
public void advance() {previousValue = value;if (value == 1) {value = minShingleSize;} else if (value == maxShingleSize) {reset();} else {++value;}},public void advance previousValue  valueif value  1 value  minShingleSize else if value  maxShingleSize reset else value
"public int addConditionalFormatting(CellRangeAddress[] regions,ConditionalFormattingRule rule1) {return addConditionalFormatting(regions,  (HSSFConditionalFormattingRule)rule1);}",public int addConditionalFormattingCellRangeAddress regionsConditionalFormattingRule rule1 return addConditionalFormattingregions  HSSFConditionalFormattingRulerule1
public RebaseCommand setUpstream(RevCommit upstream) {this.upstreamCommit = upstream;this.upstreamCommitName = upstream.name();return this;},public RebaseCommand setUpstreamRevCommit upstream thisupstreamCommit  upstreamthisupstreamCommitName  upstreamnamereturn this
public GetDocumentTextDetectionResult getDocumentTextDetection(GetDocumentTextDetectionRequest request) {request = beforeClientExecution(request);return executeGetDocumentTextDetection(request);},public GetDocumentTextDetectionResult getDocumentTextDetectionGetDocumentTextDetectionRequest request request  beforeClientExecutionrequestreturn executeGetDocumentTextDetectionrequest
"public CreateDBSecurityGroupRequest(String dBSecurityGroupName, String dBSecurityGroupDescription) {setDBSecurityGroupName(dBSecurityGroupName);setDBSecurityGroupDescription(dBSecurityGroupDescription);}",public CreateDBSecurityGroupRequestString dBSecurityGroupName String dBSecurityGroupDescription setDBSecurityGroupNamedBSecurityGroupNamesetDBSecurityGroupDescriptiondBSecurityGroupDescription
"public Reader create(Reader input) {return new ICUNormalizer2CharFilter(input, normalizer);}",public Reader createReader input return new ICUNormalizer2CharFilterinput normalizer
"static public double pmt(double r, int nper, double pv) {return pmt(r, nper, pv, 0);}",static public double pmtdouble r int nper double pv return pmtr nper pv 0
"public void set(String name, String value) throws Exception {if (valByRound.get(name) != null) {throw new Exception(""Cannot modify a multi value property!"");}props.setProperty(name, value);}",public void setString name String value throws Exception if valByRoundgetname  null throw new ExceptionCannot modify a multi value propertypropssetPropertyname value
public DescribeFastSnapshotRestoresResult describeFastSnapshotRestores(DescribeFastSnapshotRestoresRequest request) {request = beforeClientExecution(request);return executeDescribeFastSnapshotRestores(request);},public DescribeFastSnapshotRestoresResult describeFastSnapshotRestoresDescribeFastSnapshotRestoresRequest request request  beforeClientExecutionrequestreturn executeDescribeFastSnapshotRestoresrequest
public DescribeScheduledInstanceAvailabilityResult describeScheduledInstanceAvailability(DescribeScheduledInstanceAvailabilityRequest request) {request = beforeClientExecution(request);return executeDescribeScheduledInstanceAvailability(request);},public DescribeScheduledInstanceAvailabilityResult describeScheduledInstanceAvailabilityDescribeScheduledInstanceAvailabilityRequest request request  beforeClientExecutionrequestreturn executeDescribeScheduledInstanceAvailabilityrequest
public SendBonusResult sendBonus(SendBonusRequest request) {request = beforeClientExecution(request);return executeSendBonus(request);},public SendBonusResult sendBonusSendBonusRequest request request  beforeClientExecutionrequestreturn executeSendBonusrequest
public UnpackException(Throwable why) {super(JGitText.get().unpackException);initCause(why);},public UnpackExceptionThrowable why superJGitTextgetunpackExceptioninitCausewhy
"public boolean remove(Object o) {if (!(o instanceof Map.Entry))return false;Map.Entry<?,?> e = (Map.Entry<?,?>)o;return ConcurrentHashMap.this.remove(e.getKey(), e.getValue());}",public boolean removeObject o if o instanceof MapEntryreturn falseMapEntry e  MapEntryoreturn ConcurrentHashMapthisremoveegetKey egetValue
public Iterator<V> iterator() {return newValueIterator();},public IteratorV iterator return newValueIterator
public DescribeVpcEndpointServiceConfigurationsResult describeVpcEndpointServiceConfigurations(DescribeVpcEndpointServiceConfigurationsRequest request) {request = beforeClientExecution(request);return executeDescribeVpcEndpointServiceConfigurations(request);},public DescribeVpcEndpointServiceConfigurationsResult describeVpcEndpointServiceConfigurationsDescribeVpcEndpointServiceConfigurationsRequest request request  beforeClientExecutionrequestreturn executeDescribeVpcEndpointServiceConfigurationsrequest
public void setDiffComparator(RawTextComparator cmp) {comparator = cmp;},public void setDiffComparatorRawTextComparator cmp comparator  cmp
public FilePassRecord clone() {return copy();},public FilePassRecord clone return copy
public DeleteServiceResult deleteService(DeleteServiceRequest request) {request = beforeClientExecution(request);return executeDeleteService(request);},public DeleteServiceResult deleteServiceDeleteServiceRequest request request  beforeClientExecutionrequestreturn executeDeleteServicerequest
public FormulaRecord() {field_8_parsed_expr = Formula.create(Ptg.EMPTY_PTG_ARRAY);},public FormulaRecord field8parsedexpr  FormulacreatePtgEMPTYPTGARRAY
public DescribeHsmClientCertificatesResult describeHsmClientCertificates(DescribeHsmClientCertificatesRequest request) {request = beforeClientExecution(request);return executeDescribeHsmClientCertificates(request);},public DescribeHsmClientCertificatesResult describeHsmClientCertificatesDescribeHsmClientCertificatesRequest request request  beforeClientExecutionrequestreturn executeDescribeHsmClientCertificatesrequest
"public ICUTokenizerFactory(Map<String,String> args) {super(args);tailored = new HashMap<>();String rulefilesArg = get(args, RULEFILES);if (rulefilesArg != null) {List<String> scriptAndResourcePaths = splitFileNames(rulefilesArg);for (String scriptAndResourcePath : scriptAndResourcePaths) {int colonPos = scriptAndResourcePath.indexOf("":"");String scriptCode = scriptAndResourcePath.substring(0, colonPos).trim();String resourcePath = scriptAndResourcePath.substring(colonPos+1).trim();tailored.put(UCharacter.getPropertyValueEnum(UProperty.SCRIPT, scriptCode), resourcePath);}}cjkAsWords = getBoolean(args, ""cjkAsWords"", true);myanmarAsWords = getBoolean(args, ""myanmarAsWords"", true);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public ICUTokenizerFactoryMapStringString args superargstailored  new HashMapString rulefilesArg  getargs RULEFILESif rulefilesArg  null ListString scriptAndResourcePaths  splitFileNamesrulefilesArgfor String scriptAndResourcePath  scriptAndResourcePaths int colonPos  scriptAndResourcePathindexOfString scriptCode  scriptAndResourcePathsubstring0 colonPostrimString resourcePath  scriptAndResourcePathsubstringcolonPos1trimtailoredputUCharactergetPropertyValueEnumUPropertySCRIPT scriptCode resourcePathcjkAsWords  getBooleanargs cjkAsWords truemyanmarAsWords  getBooleanargs myanmarAsWords trueif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public SuspendProcessesResult suspendProcesses(SuspendProcessesRequest request) {request = beforeClientExecution(request);return executeSuspendProcesses(request);},public SuspendProcessesResult suspendProcessesSuspendProcessesRequest request request  beforeClientExecutionrequestreturn executeSuspendProcessesrequest
public DescribeConfigurationRevisionResult describeConfigurationRevision(DescribeConfigurationRevisionRequest request) {request = beforeClientExecution(request);return executeDescribeConfigurationRevision(request);},public DescribeConfigurationRevisionResult describeConfigurationRevisionDescribeConfigurationRevisionRequest request request  beforeClientExecutionrequestreturn executeDescribeConfigurationRevisionrequest
public RevFilter clone() {final RevFilter[] s = new RevFilter[subfilters.length];for (int i = 0; i < s.length; i++)s[i] = subfilters[i].clone();return new List(s);},public RevFilter clone final RevFilter s  new RevFiltersubfilterslengthfor int i  0 i  slength isi  subfiltersiclonereturn new Lists
public TabIdRecord() {_tabids = EMPTY_SHORT_ARRAY;},public TabIdRecord tabids  EMPTYSHORTARRAY
public List<String> getConflictingPaths() {return conflictingPaths;},public ListString getConflictingPaths return conflictingPaths
public void reset() {inDegree = 0;},public void reset inDegree  0
public DescribeJobFlowsRequest(java.util.List<String> jobFlowIds) {setJobFlowIds(jobFlowIds);},public DescribeJobFlowsRequestjavautilListString jobFlowIds setJobFlowIdsjobFlowIds
"public final void decRef() throws IOException {final int rc = refCount.decrementAndGet();if (rc == 0) {boolean success = false;try {release();success = true;} finally {if (!success) {refCount.incrementAndGet();}}} else if (rc < 0) {throw new IllegalStateException(""too many decRef calls: refCount is "" + rc + "" after decrement"");}}",public final void decRef throws IOException final int rc  refCountdecrementAndGetif rc  0 boolean success  falsetry releasesuccess  true finally if success refCountincrementAndGet else if rc  0 throw new IllegalStateExceptiontoo many decRef calls refCount is   rc   after decrement
public DeleteMountTargetResult deleteMountTarget(DeleteMountTargetRequest request) {request = beforeClientExecution(request);return executeDeleteMountTarget(request);},public DeleteMountTargetResult deleteMountTargetDeleteMountTargetRequest request request  beforeClientExecutionrequestreturn executeDeleteMountTargetrequest
public void println(double d) {println(String.valueOf(d));},public void printlndouble d printlnStringvalueOfd
public DescribeDBProxyTargetsResult describeDBProxyTargets(DescribeDBProxyTargetsRequest request) {request = beforeClientExecution(request);return executeDescribeDBProxyTargets(request);},public DescribeDBProxyTargetsResult describeDBProxyTargetsDescribeDBProxyTargetsRequest request request  beforeClientExecutionrequestreturn executeDescribeDBProxyTargetsrequest
"final public SrndQuery PrefixOperatorQuery() throws ParseException {Token oprt;List<SrndQuery> queries;switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {case OR:oprt = jj_consume_token(OR);queries = FieldsQueryList();{if (true) return getOrQuery(queries, false , oprt);}break;case AND:oprt = jj_consume_token(AND);queries = FieldsQueryList();{if (true) return getAndQuery(queries, false , oprt);}break;case N:oprt = jj_consume_token(N);queries = FieldsQueryList();{if (true) return getDistanceQuery(queries, false , oprt, false );}break;case W:oprt = jj_consume_token(W);queries = FieldsQueryList();{if (true) return getDistanceQuery(queries, false  , oprt, true );}break;default:jj_la1[6] = jj_gen;jj_consume_token(-1);throw new ParseException();}throw new Error(""Missing return statement in function"");}",final public SrndQuery PrefixOperatorQuery throws ParseException Token oprtListSrndQuery queriesswitch jjntk1jjntkjjntk case ORoprt  jjconsumetokenORqueries  FieldsQueryListif true return getOrQueryqueries false  oprtbreakcase ANDoprt  jjconsumetokenANDqueries  FieldsQueryListif true return getAndQueryqueries false  oprtbreakcase Noprt  jjconsumetokenNqueries  FieldsQueryListif true return getDistanceQueryqueries false  oprt false breakcase Woprt  jjconsumetokenWqueries  FieldsQueryListif true return getDistanceQueryqueries false   oprt true breakdefaultjjla16  jjgenjjconsumetoken1throw new ParseExceptionthrow new ErrorMissing return statement in function
public DeleteInstanceSnapshotResult deleteInstanceSnapshot(DeleteInstanceSnapshotRequest request) {request = beforeClientExecution(request);return executeDeleteInstanceSnapshot(request);},public DeleteInstanceSnapshotResult deleteInstanceSnapshotDeleteInstanceSnapshotRequest request request  beforeClientExecutionrequestreturn executeDeleteInstanceSnapshotrequest
"public Entry<K, V> firstEntry() {return immutableCopy(endpoint(true));}",public EntryK V firstEntry return immutableCopyendpointtrue
public DeregisterTransitGatewayMulticastGroupSourcesResult deregisterTransitGatewayMulticastGroupSources(DeregisterTransitGatewayMulticastGroupSourcesRequest request) {request = beforeClientExecution(request);return executeDeregisterTransitGatewayMulticastGroupSources(request);},public DeregisterTransitGatewayMulticastGroupSourcesResult deregisterTransitGatewayMulticastGroupSourcesDeregisterTransitGatewayMulticastGroupSourcesRequest request request  beforeClientExecutionrequestreturn executeDeregisterTransitGatewayMulticastGroupSourcesrequest
public ImportTerminologyResult importTerminology(ImportTerminologyRequest request) {request = beforeClientExecution(request);return executeImportTerminology(request);},public ImportTerminologyResult importTerminologyImportTerminologyRequest request request  beforeClientExecutionrequestreturn executeImportTerminologyrequest
"public int serialize(int offset, byte[] data){byte[] rawData = getRawData();if (getEscherRecords().size() == 0 && rawData != null){return writeData( offset, data, rawData );}byte[] buffer = new byte[getRawDataSize()];int pos = 0;for ( Iterator<EscherRecord> iterator = getEscherRecords().iterator(); iterator.hasNext(); ){EscherRecord r = iterator.next();pos += r.serialize(pos, buffer, new NullEscherSerializationListener() );}return writeData( offset, data, buffer );}",public int serializeint offset byte databyte rawData  getRawDataif getEscherRecordssize  0  rawData  nullreturn writeData offset data rawData byte buffer  new bytegetRawDataSizeint pos  0for  IteratorEscherRecord iterator  getEscherRecordsiterator iteratorhasNext EscherRecord r  iteratornextpos  rserializepos buffer new NullEscherSerializationListener return writeData offset data buffer 
public DescribeDBParameterGroupsResult describeDBParameterGroups(DescribeDBParameterGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeDBParameterGroups(request);},public DescribeDBParameterGroupsResult describeDBParameterGroupsDescribeDBParameterGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeDBParameterGroupsrequest
"public static FuzzySet createSetBasedOnMaxMemory(int maxNumBytes){int setSize=getNearestSetSize(maxNumBytes);return new FuzzySet(new FixedBitSet(setSize+1),setSize, hashFunctionForVersion(VERSION_CURRENT));}",public static FuzzySet createSetBasedOnMaxMemoryint maxNumBytesint setSizegetNearestSetSizemaxNumBytesreturn new FuzzySetnew FixedBitSetsetSize1setSize hashFunctionForVersionVERSIONCURRENT
public BundleWriter(Repository repo) {db = repo;Reader = null;include = new TreeMap<>();assume = new HashSet<>();tagTargets = new HashSet<>();},public BundleWriterRepository repo db  repoReader  nullinclude  new TreeMapassume  new HashSettagTargets  new HashSet
public AssociateDomainResult associateDomain(AssociateDomainRequest request) {request = beforeClientExecution(request);return executeAssociateDomain(request);},public AssociateDomainResult associateDomainAssociateDomainRequest request request  beforeClientExecutionrequestreturn executeAssociateDomainrequest
public GetInstancePortStatesResult getInstancePortStates(GetInstancePortStatesRequest request) {request = beforeClientExecution(request);return executeGetInstancePortStates(request);},public GetInstancePortStatesResult getInstancePortStatesGetInstancePortStatesRequest request request  beforeClientExecutionrequestreturn executeGetInstancePortStatesrequest
"public SrndTruncQuery(String truncated, char unlimited, char mask) {super(false); this.truncated = truncated;this.unlimited = unlimited;this.mask = mask;truncatedToPrefixAndPattern();}",public SrndTruncQueryString truncated char unlimited char mask superfalse thistruncated  truncatedthisunlimited  unlimitedthismask  masktruncatedToPrefixAndPattern
"public final Explanation explain(BasicStats stats) {return Explanation.match(lambda(stats),getClass().getSimpleName()+ "", computed as (n + 1) / (N + 1) from:"",Explanation.match(stats.getDocFreq(),""n, number of documents containing term""),Explanation.match(stats.getNumberOfDocuments(),""N, total number of documents with field""));}",public final Explanation explainBasicStats stats return ExplanationmatchlambdastatsgetClassgetSimpleName  computed as n  1  N  1 fromExplanationmatchstatsgetDocFreqn number of documents containing termExplanationmatchstatsgetNumberOfDocumentsN total number of documents with field
public DeleteBaiduChannelResult deleteBaiduChannel(DeleteBaiduChannelRequest request) {request = beforeClientExecution(request);return executeDeleteBaiduChannel(request);},public DeleteBaiduChannelResult deleteBaiduChannelDeleteBaiduChannelRequest request request  beforeClientExecutionrequestreturn executeDeleteBaiduChannelrequest
public UnlinkDeveloperIdentityResult unlinkDeveloperIdentity(UnlinkDeveloperIdentityRequest request) {request = beforeClientExecution(request);return executeUnlinkDeveloperIdentity(request);},public UnlinkDeveloperIdentityResult unlinkDeveloperIdentityUnlinkDeveloperIdentityRequest request request  beforeClientExecutionrequestreturn executeUnlinkDeveloperIdentityrequest
"public SimpleBoundaryScanner( int maxScan, Character[] boundaryChars ){this.maxScan = maxScan;this.boundaryChars = new HashSet<>();this.boundaryChars.addAll(Arrays.asList(boundaryChars));}",public SimpleBoundaryScanner int maxScan Character boundaryChars thismaxScan  maxScanthisboundaryChars  new HashSetthisboundaryCharsaddAllArraysasListboundaryChars
public CreateLogGroupRequest(String logGroupName) {setLogGroupName(logGroupName);},public CreateLogGroupRequestString logGroupName setLogGroupNamelogGroupName
public static Set<String> getDefaultStopTags(){return DefaultSetHolder.DEFAULT_STOP_TAGS;},public static SetString getDefaultStopTagsreturn DefaultSetHolderDEFAULTSTOPTAGS
public ModifyInstanceFleetResult modifyInstanceFleet(ModifyInstanceFleetRequest request) {request = beforeClientExecution(request);return executeModifyInstanceFleet(request);},public ModifyInstanceFleetResult modifyInstanceFleetModifyInstanceFleetRequest request request  beforeClientExecutionrequestreturn executeModifyInstanceFleetrequest
public void addRule(ConditionalFormattingRule cfRule){addRule((HSSFConditionalFormattingRule)cfRule);},public void addRuleConditionalFormattingRule cfRuleaddRuleHSSFConditionalFormattingRulecfRule
"public void SwitchTo(int lexState){if (lexState >= 3 || lexState < 0)throw new TokenMgrError(""Error: Ignoring invalid lexical state : "" + lexState + "". State unchanged."", TokenMgrError.INVALID_LEXICAL_STATE);elsecurLexState = lexState;}",public void SwitchToint lexStateif lexState  3  lexState  0throw new TokenMgrErrorError Ignoring invalid lexical state    lexState   State unchanged TokenMgrErrorINVALIDLEXICALSTATEelsecurLexState  lexState
public void removeCharCount() {remove1stProperty(PropertyIDMap.PID_CHARCOUNT);},public void removeCharCount remove1stPropertyPropertyIDMapPIDCHARCOUNT
public CreateCapacityReservationResult createCapacityReservation(CreateCapacityReservationRequest request) {request = beforeClientExecution(request);return executeCreateCapacityReservation(request);},public CreateCapacityReservationResult createCapacityReservationCreateCapacityReservationRequest request request  beforeClientExecutionrequestreturn executeCreateCapacityReservationrequest
"public StoredField(String name, long value) {super(name, TYPE);fieldsData = value;}",public StoredFieldString name long value supername TYPEfieldsData  value
"public void sync(Parser recognizer) throws RecognitionException {ATNState s = recognizer.getInterpreter().atn.states.get(recognizer.getState());if (inErrorRecoveryMode(recognizer)) {return;}TokenStream tokens = recognizer.getInputStream();int la = tokens.LA(1);IntervalSet nextTokens = recognizer.getATN().nextTokens(s);if (nextTokens.contains(la)) {nextTokensContext = null;nextTokensState = ATNState.INVALID_STATE_NUMBER;return;}if (nextTokens.contains(Token.EPSILON)) {if (nextTokensContext == null) {nextTokensContext = recognizer.getContext();nextTokensState = recognizer.getState();}return;}switch (s.getStateType()) {case ATNState.BLOCK_START:case ATNState.STAR_BLOCK_START:case ATNState.PLUS_BLOCK_START:case ATNState.STAR_LOOP_ENTRY:if ( singleTokenDeletion(recognizer)!=null ) {return;}throw new InputMismatchException(recognizer);case ATNState.PLUS_LOOP_BACK:case ATNState.STAR_LOOP_BACK:reportUnwantedToken(recognizer);IntervalSet expecting = recognizer.getExpectedTokens();IntervalSet whatFollowsLoopIterationOrRule =expecting.or(getErrorRecoverySet(recognizer));consumeUntil(recognizer, whatFollowsLoopIterationOrRule);break;default:break;}}",public void syncParser recognizer throws RecognitionException ATNState s  recognizergetInterpreteratnstatesgetrecognizergetStateif inErrorRecoveryModerecognizer returnTokenStream tokens  recognizergetInputStreamint la  tokensLA1IntervalSet nextTokens  recognizergetATNnextTokenssif nextTokenscontainsla nextTokensContext  nullnextTokensState  ATNStateINVALIDSTATENUMBERreturnif nextTokenscontainsTokenEPSILON if nextTokensContext  null nextTokensContext  recognizergetContextnextTokensState  recognizergetStatereturnswitch sgetStateType case ATNStateBLOCKSTARTcase ATNStateSTARBLOCKSTARTcase ATNStatePLUSBLOCKSTARTcase ATNStateSTARLOOPENTRYif  singleTokenDeletionrecognizernull  returnthrow new InputMismatchExceptionrecognizercase ATNStatePLUSLOOPBACKcase ATNStateSTARLOOPBACKreportUnwantedTokenrecognizerIntervalSet expecting  recognizergetExpectedTokensIntervalSet whatFollowsLoopIterationOrRule expectingorgetErrorRecoverySetrecognizerconsumeUntilrecognizer whatFollowsLoopIterationOrRulebreakdefaultbreak
public int nextDoc() {if (!didNext) {didNext = true;return (doc = 0);} else {return (doc = NO_MORE_DOCS);}},public int nextDoc if didNext didNext  truereturn doc  0 else return doc  NOMOREDOCS
public static Charset parseEncoding(byte[] b) {String enc = parseEncodingName(b);if (enc == null) {return UTF_8;}String name = enc.trim();try {return Charset.forName(name);} catch (IllegalCharsetNameException| UnsupportedCharsetException badName) {Charset aliased = charsetForAlias(name);if (aliased != null) {return aliased;}throw badName;}},public static Charset parseEncodingbyte b String enc  parseEncodingNamebif enc  null return UTF8String name  enctrimtry return CharsetforNamename catch IllegalCharsetNameException UnsupportedCharsetException badName Charset aliased  charsetForAliasnameif aliased  null return aliasedthrow badName
"public FloatBuffer put(float[] src, int srcOffset, int floatCount) {Arrays.checkOffsetAndCount(src.length, srcOffset, floatCount);if (floatCount > remaining()) {throw new BufferOverflowException();}for (int i = srcOffset; i < srcOffset + floatCount; ++i) {put(src[i]);}return this;}",public FloatBuffer putfloat src int srcOffset int floatCount ArrayscheckOffsetAndCountsrclength srcOffset floatCountif floatCount  remaining throw new BufferOverflowExceptionfor int i  srcOffset i  srcOffset  floatCount i putsrcireturn this
public BatchGetVariableResult batchGetVariable(BatchGetVariableRequest request) {request = beforeClientExecution(request);return executeBatchGetVariable(request);},public BatchGetVariableResult batchGetVariableBatchGetVariableRequest request request  beforeClientExecutionrequestreturn executeBatchGetVariablerequest
"public void setRepetitions(int repetitions) throws Exception {fixedTime = false;this.repetitions = repetitions;if (repetitions==REPEAT_EXHAUST) {if (isParallel()) {throw new Exception(""REPEAT_EXHAUST is not allowed for parallel tasks"");}}setSequenceName();}",public void setRepetitionsint repetitions throws Exception fixedTime  falsethisrepetitions  repetitionsif repetitionsREPEATEXHAUST if isParallel throw new ExceptionREPEATEXHAUST is not allowed for parallel taskssetSequenceName
public synchronized static DefaultProfile getProfile() {if (null == profile) {profile = new DefaultProfile();}return profile;},public synchronized static DefaultProfile getProfile if null  profile profile  new DefaultProfilereturn profile
"public String dequote(byte[] in, int inPtr, int inEnd) {if (2 <= inEnd - inPtr && in[inPtr] == '""' && in[inEnd - 1] == '""')return dq(in, inPtr + 1, inEnd - 1);return RawParseUtils.decode(UTF_8, in, inPtr, inEnd);}",public String dequotebyte in int inPtr int inEnd if 2  inEnd  inPtr  ininPtr    ininEnd  1  return dqin inPtr  1 inEnd  1return RawParseUtilsdecodeUTF8 in inPtr inEnd
public CacheCluster modifyCacheCluster(ModifyCacheClusterRequest request) {request = beforeClientExecution(request);return executeModifyCacheCluster(request);},public CacheCluster modifyCacheClusterModifyCacheClusterRequest request request  beforeClientExecutionrequestreturn executeModifyCacheClusterrequest
public TreeFormatter(int size) {buf = new byte[size];},public TreeFormatterint size buf  new bytesize
public void setMaxDeltaDepth(int maxDeltaDepth) {this.maxDeltaDepth = maxDeltaDepth;},public void setMaxDeltaDepthint maxDeltaDepth thismaxDeltaDepth  maxDeltaDepth
"public int serialize(int offset, byte[] data, EscherSerializationListener listener) {listener.beforeRecordSerialize( offset, getRecordId(), this );int pos = offset;LittleEndian.putShort( data, pos, getOptions() );     pos += 2;LittleEndian.putShort( data, pos, getRecordId() );    pos += 2;int remainingBytes = getRecordSize() - 8;LittleEndian.putInt( data, pos, remainingBytes );              pos += 4;LittleEndian.putInt( data, pos, field_1_shapeIdMax );          pos += 4;LittleEndian.putInt( data, pos, getNumIdClusters() );          pos += 4;LittleEndian.putInt( data, pos, field_3_numShapesSaved );      pos += 4;LittleEndian.putInt( data, pos, field_4_drawingsSaved );       pos += 4;for (FileIdCluster fic : field_5_fileIdClusters) {LittleEndian.putInt( data, pos, fic.getDrawingGroupId() );   pos += 4;LittleEndian.putInt( data, pos, fic.getNumShapeIdsUsed() );  pos += 4;}listener.afterRecordSerialize( pos, getRecordId(), getRecordSize(), this );return getRecordSize();}",public int serializeint offset byte data EscherSerializationListener listener listenerbeforeRecordSerialize offset getRecordId this int pos  offsetLittleEndianputShort data pos getOptions      pos  2LittleEndianputShort data pos getRecordId     pos  2int remainingBytes  getRecordSize  8LittleEndianputInt data pos remainingBytes               pos  4LittleEndianputInt data pos field1shapeIdMax           pos  4LittleEndianputInt data pos getNumIdClusters           pos  4LittleEndianputInt data pos field3numShapesSaved       pos  4LittleEndianputInt data pos field4drawingsSaved        pos  4for FileIdCluster fic  field5fileIdClusters LittleEndianputInt data pos ficgetDrawingGroupId    pos  4LittleEndianputInt data pos ficgetNumShapeIdsUsed   pos  4listenerafterRecordSerialize pos getRecordId getRecordSize this return getRecordSize
public LogDocMergePolicy() {minMergeSize = DEFAULT_MIN_MERGE_DOCS;maxMergeSize = Long.MAX_VALUE;maxMergeSizeForForcedMerge = Long.MAX_VALUE;},public LogDocMergePolicy minMergeSize  DEFAULTMINMERGEDOCSmaxMergeSize  LongMAXVALUEmaxMergeSizeForForcedMerge  LongMAXVALUE
"public BM25Similarity() {this(1.2f, 0.75f);}",public BM25Similarity this12f 075f
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeShort(getExternSheetIndex());writeCoordinates(out);},public void writeLittleEndianOutput out outwriteBytesid  getPtgClassoutwriteShortgetExternSheetIndexwriteCoordinatesout
public String getAccessKeyId() {return accessKeyId;},public String getAccessKeyId return accessKeyId
public PutLifecycleHookResult putLifecycleHook(PutLifecycleHookRequest request) {request = beforeClientExecution(request);return executePutLifecycleHook(request);},public PutLifecycleHookResult putLifecycleHookPutLifecycleHookRequest request request  beforeClientExecutionrequestreturn executePutLifecycleHookrequest
"public String toString() {return ""[GRIDSET]\n"" +""    .gridset        = "" + getGridset() +""\n"" +""[/GRIDSET]\n"";}",public String toString return GRIDSETn     gridset           getGridset n GRIDSETn
public static int idealLongArraySize(int need) {return idealByteArraySize(need * 8) / 8;},public static int idealLongArraySizeint need return idealByteArraySizeneed  8  8
public int size() {return mSize;},public int size return mSize
"public String toString() {String biffName = getBiffName(_sid);if (biffName == null) {biffName = ""UNKNOWNRECORD"";}StringBuilder sb = new StringBuilder();sb.append('[').append(biffName).append(""] (0x"");sb.append(Integer.toHexString(_sid).toUpperCase(Locale.ROOT)).append("")\n"");if (_rawData.length > 0) {sb.append(""  rawData="").append(HexDump.toHex(_rawData)).append(""\n"");}sb.append(""[/"").append(biffName).append(""]\n"");return sb.toString();}",public String toString String biffName  getBiffNamesidif biffName  null biffName  UNKNOWNRECORDStringBuilder sb  new StringBuildersbappendappendbiffNameappend 0xsbappendIntegertoHexStringsidtoUpperCaseLocaleROOTappendnif rawDatalength  0 sbappend  rawDataappendHexDumptoHexrawDataappendnsbappendappendbiffNameappendnreturn sbtoString
"public int nextPosition() throws IOException {if (doc != 0) {throw new IllegalStateException();} else if (i >= termFreq - 1) {throw new IllegalStateException(""Read past last position"");}++i;if (payloadIndex != null) {payload.offset = basePayloadOffset + payloadIndex[positionIndex + i];payload.length = payloadIndex[positionIndex + i + 1] - payloadIndex[positionIndex + i];}if (positions == null) {return -1;} else {return positions[positionIndex + i];}}",public int nextPosition throws IOException if doc  0 throw new IllegalStateException else if i  termFreq  1 throw new IllegalStateExceptionRead past last positioniif payloadIndex  null payloadoffset  basePayloadOffset  payloadIndexpositionIndex  ipayloadlength  payloadIndexpositionIndex  i  1  payloadIndexpositionIndex  iif positions  null return 1 else return positionspositionIndex  i
public MergeDeveloperIdentitiesResult mergeDeveloperIdentities(MergeDeveloperIdentitiesRequest request) {request = beforeClientExecution(request);return executeMergeDeveloperIdentities(request);},public MergeDeveloperIdentitiesResult mergeDeveloperIdentitiesMergeDeveloperIdentitiesRequest request request  beforeClientExecutionrequestreturn executeMergeDeveloperIdentitiesrequest
public CreateUserRequest(String userName) {setUserName(userName);},public CreateUserRequestString userName setUserNameuserName
public ReplaceNetworkAclEntryResult replaceNetworkAclEntry(ReplaceNetworkAclEntryRequest request) {request = beforeClientExecution(request);return executeReplaceNetworkAclEntry(request);},public ReplaceNetworkAclEntryResult replaceNetworkAclEntryReplaceNetworkAclEntryRequest request request  beforeClientExecutionrequestreturn executeReplaceNetworkAclEntryrequest
public boolean isFastForward() {return fastForward;},public boolean isFastForward return fastForward
public List<Integer> getLLDecisions() {DecisionInfo[] decisions = atnSimulator.getDecisionInfo();List<Integer> LL = new ArrayList<Integer>();for (int i=0; i<decisions.length; i++) {long fallBack = decisions[i].LL_Fallback;if ( fallBack>0 ) LL.add(i);}return LL;},public ListInteger getLLDecisions DecisionInfo decisions  atnSimulatorgetDecisionInfoListInteger LL  new ArrayListIntegerfor int i0 idecisionslength i long fallBack  decisionsiLLFallbackif  fallBack0  LLaddireturn LL
public UpdateModelResult updateModel(UpdateModelRequest request) {request = beforeClientExecution(request);return executeUpdateModel(request);},public UpdateModelResult updateModelUpdateModelRequest request request  beforeClientExecutionrequestreturn executeUpdateModelrequest
public int getEndIndex() {return end;},public int getEndIndex return end
public DeleteVPCAssociationAuthorizationResult deleteVPCAssociationAuthorization(DeleteVPCAssociationAuthorizationRequest request) {request = beforeClientExecution(request);return executeDeleteVPCAssociationAuthorization(request);},public DeleteVPCAssociationAuthorizationResult deleteVPCAssociationAuthorizationDeleteVPCAssociationAuthorizationRequest request request  beforeClientExecutionrequestreturn executeDeleteVPCAssociationAuthorizationrequest
public GetMediaResult getMedia(GetMediaRequest request) {request = beforeClientExecution(request);return executeGetMedia(request);},public GetMediaResult getMediaGetMediaRequest request request  beforeClientExecutionrequestreturn executeGetMediarequest
public DeltaRecord clone() {return copy();},public DeltaRecord clone return copy
public TableRestoreStatus restoreTableFromClusterSnapshot(RestoreTableFromClusterSnapshotRequest request) {request = beforeClientExecution(request);return executeRestoreTableFromClusterSnapshot(request);},public TableRestoreStatus restoreTableFromClusterSnapshotRestoreTableFromClusterSnapshotRequest request request  beforeClientExecutionrequestreturn executeRestoreTableFromClusterSnapshotrequest
public void writeInt(int v) {int b3 = (v >>> 24) & 0xFF;int b2 = (v >>> 16) & 0xFF;int b1 = (v >>>  8) & 0xFF;int b0 = (v) & 0xFF;try {out.write(b0);out.write(b1);out.write(b2);out.write(b3);} catch (IOException e) {throw new RuntimeException(e);}},public void writeIntint v int b3  v  24  0xFFint b2  v  16  0xFFint b1  v   8  0xFFint b0  v  0xFFtry outwriteb0outwriteb1outwriteb2outwriteb3 catch IOException e throw new RuntimeExceptione
"public static Query parse(String[] queries, String[] fields, Analyzer analyzer)throws QueryNodeException {if (queries.length != fields.length)throw new IllegalArgumentException(""queries.length != fields.length"");BooleanQuery.Builder bQuery = new BooleanQuery.Builder();StandardQueryParser qp = new StandardQueryParser();qp.setAnalyzer(analyzer);for (int i = 0; i < fields.length; i++) {Query q = qp.parse(queries[i], fields[i]);if (q != null) { bQuery.add(q, BooleanClause.Occur.SHOULD);}}return bQuery.build();}",public static Query parseString queries String fields Analyzer analyzerthrows QueryNodeException if querieslength  fieldslengththrow new IllegalArgumentExceptionquerieslength  fieldslengthBooleanQueryBuilder bQuery  new BooleanQueryBuilderStandardQueryParser qp  new StandardQueryParserqpsetAnalyzeranalyzerfor int i  0 i  fieldslength i Query q  qpparsequeriesi fieldsiif q  null  bQueryaddq BooleanClauseOccurSHOULDreturn bQuerybuild
public UpdateQualificationTypeResult updateQualificationType(UpdateQualificationTypeRequest request) {request = beforeClientExecution(request);return executeUpdateQualificationType(request);},public UpdateQualificationTypeResult updateQualificationTypeUpdateQualificationTypeRequest request request  beforeClientExecutionrequestreturn executeUpdateQualificationTyperequest
public void removeTemplate() {remove1stProperty(PropertyIDMap.PID_TEMPLATE);},public void removeTemplate remove1stPropertyPropertyIDMapPIDTEMPLATE
"public ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {int nInnerArgs = args.length-1; if (nInnerArgs < 1) {return ErrorEval.VALUE_INVALID;}final Function innerFunc;int functionCode = 0;try {ValueEval ve = OperandResolver.getSingleValue(args[0], srcRowIndex, srcColumnIndex);functionCode = OperandResolver.coerceValueToInt(ve);innerFunc = findFunction(functionCode);} catch (EvaluationException e) {return e.getErrorEval();}final List<ValueEval> list = new ArrayList<>(Arrays.asList(args).subList(1, args.length));Iterator<ValueEval> it = list.iterator();while(it.hasNext()) {ValueEval eval = it.next();if(eval instanceof LazyRefEval) {LazyRefEval lazyRefEval = (LazyRefEval) eval;if(lazyRefEval.isSubTotal()) {it.remove();}if (functionCode > 100 && lazyRefEval.isRowHidden()) {it.remove();}}}return innerFunc.evaluate(list.toArray(new ValueEval[0]), srcRowIndex, srcColumnIndex);}",public ValueEval evaluateValueEval args int srcRowIndex int srcColumnIndex int nInnerArgs  argslength1 if nInnerArgs  1 return ErrorEvalVALUEINVALIDfinal Function innerFuncint functionCode  0try ValueEval ve  OperandResolvergetSingleValueargs0 srcRowIndex srcColumnIndexfunctionCode  OperandResolvercoerceValueToIntveinnerFunc  findFunctionfunctionCode catch EvaluationException e return egetErrorEvalfinal ListValueEval list  new ArrayListArraysasListargssubList1 argslengthIteratorValueEval it  listiteratorwhileithasNext ValueEval eval  itnextifeval instanceof LazyRefEval LazyRefEval lazyRefEval  LazyRefEval evaliflazyRefEvalisSubTotal itremoveif functionCode  100  lazyRefEvalisRowHidden itremovereturn innerFuncevaluatelisttoArraynew ValueEval0 srcRowIndex srcColumnIndex
"public InstanceGroupConfig(InstanceRoleType instanceRole, String instanceType, Integer instanceCount) {setInstanceRole(instanceRole.toString());setInstanceType(instanceType);setInstanceCount(instanceCount);}",public InstanceGroupConfigInstanceRoleType instanceRole String instanceType Integer instanceCount setInstanceRoleinstanceRoletoStringsetInstanceTypeinstanceTypesetInstanceCountinstanceCount
public LeftMarginRecord(RecordInputStream in) {field_1_margin = in.readDouble();},public LeftMarginRecordRecordInputStream in field1margin  inreadDouble
public DescribeTrialComponentResult describeTrialComponent(DescribeTrialComponentRequest request) {request = beforeClientExecution(request);return executeDescribeTrialComponent(request);},public DescribeTrialComponentResult describeTrialComponentDescribeTrialComponentRequest request request  beforeClientExecutionrequestreturn executeDescribeTrialComponentrequest
public AssociateSubnetCidrBlockResult associateSubnetCidrBlock(AssociateSubnetCidrBlockRequest request) {request = beforeClientExecution(request);return executeAssociateSubnetCidrBlock(request);},public AssociateSubnetCidrBlockResult associateSubnetCidrBlockAssociateSubnetCidrBlockRequest request request  beforeClientExecutionrequestreturn executeAssociateSubnetCidrBlockrequest
@Override public Iterator<E> iterator() {return new MapBasedMultisetIterator();},Override public IteratorE iterator return new MapBasedMultisetIterator
"public GetQueueAttributesResult getQueueAttributes(String queueUrl, java.util.List<String> attributeNames) {return getQueueAttributes(new GetQueueAttributesRequest().withQueueUrl(queueUrl).withAttributeNames(attributeNames));}",public GetQueueAttributesResult getQueueAttributesString queueUrl javautilListString attributeNames return getQueueAttributesnew GetQueueAttributesRequestwithQueueUrlqueueUrlwithAttributeNamesattributeNames
public final int getBeginA() {return beginA;},public final int getBeginA return beginA
"public String toString() {return ""NoLock"";}",public String toString return NoLock
public boolean contains(Object object) {return backingMap.containsKey(object);},public boolean containsObject object return backingMapcontainsKeyobject
"public String toString() {return ""arc="" + fstArc + "" state="" + fsaState;}",public String toString return arc  fstArc   state  fsaState
public void clear() {ArrayList <HSSFShape> copy = new ArrayList<>(shapes);for (HSSFShape shape: copy){removeShape(shape);}},public void clear ArrayList HSSFShape copy  new ArrayListshapesfor HSSFShape shape copyremoveShapeshape
"public String toString() {return ""PerFieldAnalyzerWrapper("" + fieldAnalyzers + "", default="" + defaultAnalyzer + "")"";}",public String toString return PerFieldAnalyzerWrapper  fieldAnalyzers   default  defaultAnalyzer  
"public int fillFields(byte[] data, int offset, EscherRecordFactory recordFactory) {int bytesRemaining = readHeader( data, offset );int available = data.length - (offset + 8);if (bytesRemaining > available) {bytesRemaining = available;}if (isContainerRecord()) {int bytesWritten = 0;thedata = new byte[0];offset += 8;bytesWritten += 8;while ( bytesRemaining > 0 ) {EscherRecord child = recordFactory.createRecord( data, offset );int childBytesWritten = child.fillFields( data, offset, recordFactory );bytesWritten += childBytesWritten;offset += childBytesWritten;bytesRemaining -= childBytesWritten;getChildRecords().add( child );}return bytesWritten;}if (bytesRemaining < 0) {bytesRemaining = 0;}thedata = IOUtils.safelyAllocate(bytesRemaining, MAX_RECORD_LENGTH);System.arraycopy( data, offset + 8, thedata, 0, bytesRemaining );return bytesRemaining + 8;}",public int fillFieldsbyte data int offset EscherRecordFactory recordFactory int bytesRemaining  readHeader data offset int available  datalength  offset  8if bytesRemaining  available bytesRemaining  availableif isContainerRecord int bytesWritten  0thedata  new byte0offset  8bytesWritten  8while  bytesRemaining  0  EscherRecord child  recordFactorycreateRecord data offset int childBytesWritten  childfillFields data offset recordFactory bytesWritten  childBytesWrittenoffset  childBytesWrittenbytesRemaining  childBytesWrittengetChildRecordsadd child return bytesWrittenif bytesRemaining  0 bytesRemaining  0thedata  IOUtilssafelyAllocatebytesRemaining MAXRECORDLENGTHSystemarraycopy data offset  8 thedata 0 bytesRemaining return bytesRemaining  8
public AssociatePhoneNumberWithUserResult associatePhoneNumberWithUser(AssociatePhoneNumberWithUserRequest request) {request = beforeClientExecution(request);return executeAssociatePhoneNumberWithUser(request);},public AssociatePhoneNumberWithUserResult associatePhoneNumberWithUserAssociatePhoneNumberWithUserRequest request request  beforeClientExecutionrequestreturn executeAssociatePhoneNumberWithUserrequest
"public FieldQuery getFieldQuery( Query query ) {try {return getFieldQuery(query, null);} catch (IOException e) {throw new RuntimeException (e);}}",public FieldQuery getFieldQuery Query query  try return getFieldQueryquery null catch IOException e throw new RuntimeException e
public int getXBATEntriesPerBlock() {return getBATEntriesPerBlock() - 1;},public int getXBATEntriesPerBlock return getBATEntriesPerBlock  1
"public static CellRangeAddress createEnclosingCellRange(CellRangeAddress crA, CellRangeAddress crB) {if( crB == null) {return crA.copy();}int minRow = lt(crB.getFirstRow(),   crA.getFirstRow())   ?crB.getFirstRow()   :crA.getFirstRow();int maxRow = gt(crB.getLastRow(),    crA.getLastRow())    ?crB.getLastRow()    :crA.getLastRow();int minCol = lt(crB.getFirstColumn(),crA.getFirstColumn())?crB.getFirstColumn():crA.getFirstColumn();int maxCol = gt(crB.getLastColumn(), crA.getLastColumn()) ?crB.getLastColumn() :crA.getLastColumn();return new CellRangeAddress(minRow, maxRow, minCol, maxCol);}",public static CellRangeAddress createEnclosingCellRangeCellRangeAddress crA CellRangeAddress crB if crB  null return crAcopyint minRow  ltcrBgetFirstRow   crAgetFirstRow   crBgetFirstRow   crAgetFirstRowint maxRow  gtcrBgetLastRow    crAgetLastRow    crBgetLastRow    crAgetLastRowint minCol  ltcrBgetFirstColumncrAgetFirstColumncrBgetFirstColumncrAgetFirstColumnint maxCol  gtcrBgetLastColumn crAgetLastColumn crBgetLastColumn crAgetLastColumnreturn new CellRangeAddressminRow maxRow minCol maxCol
"public static char[] grow(char[] array, int minSize) {assert minSize >= 0: ""size must be positive (got "" + minSize + ""): likely integer overflow?"";if (array.length < minSize) {return growExact(array, oversize(minSize, Character.BYTES));} else return array;}",public static char growchar array int minSize assert minSize  0 size must be positive got   minSize   likely integer overflowif arraylength  minSize return growExactarray oversizeminSize CharacterBYTES else return array
"public void setLineStyleColor(int red, int green, int blue) {int lineStyleColor = ((blue) << 16) | ((green) << 8) | red;setPropertyValue(new EscherRGBProperty(EscherPropertyTypes.LINESTYLE__COLOR, lineStyleColor));}",public void setLineStyleColorint red int green int blue int lineStyleColor  blue  16  green  8  redsetPropertyValuenew EscherRGBPropertyEscherPropertyTypesLINESTYLECOLOR lineStyleColor
public CreateFileSystemResult createFileSystem(CreateFileSystemRequest request) {request = beforeClientExecution(request);return executeCreateFileSystem(request);},public CreateFileSystemResult createFileSystemCreateFileSystemRequest request request  beforeClientExecutionrequestreturn executeCreateFileSystemrequest
"public DeleteVaultRequest(String accountId, String vaultName) {setAccountId(accountId);setVaultName(vaultName);}",public DeleteVaultRequestString accountId String vaultName setAccountIdaccountIdsetVaultNamevaultName
"public ByteBuffer read(int length, long position) {if(position >= size) {throw new IndexOutOfBoundsException(""Unable to read "" + length + "" bytes from "" +position + "" in stream of length "" + size);}int toRead = (int)Math.min(length, size - position);return ByteBuffer.wrap(buffer, (int)position, toRead);}",public ByteBuffer readint length long position ifposition  size throw new IndexOutOfBoundsExceptionUnable to read   length   bytes from  position   in stream of length   sizeint toRead  intMathminlength size  positionreturn ByteBufferwrapbuffer intposition toRead
public boolean addPushRefSpec(RefSpec s) {if (push.contains(s))return false;return push.add(s);},public boolean addPushRefSpecRefSpec s if pushcontainssreturn falsereturn pushadds
public ViewBillingResult viewBilling(ViewBillingRequest request) {request = beforeClientExecution(request);return executeViewBilling(request);},public ViewBillingResult viewBillingViewBillingRequest request request  beforeClientExecutionrequestreturn executeViewBillingrequest
"public final char getChar() {int newPosition = position + SizeOf.CHAR;if (newPosition > limit) {throw new BufferUnderflowException();}char result = (char) Memory.peekShort(backingArray, offset + position, order);position = newPosition;return result;}",public final char getChar int newPosition  position  SizeOfCHARif newPosition  limit throw new BufferUnderflowExceptionchar result  char MemorypeekShortbackingArray offset  position orderposition  newPositionreturn result
"public SpanQuery getSpanQuery(Element e) throws ParserException {String fieldName = DOMUtils.getAttributeWithInheritanceOrFail(e, ""fieldName"");String value = DOMUtils.getNonBlankTextOrFail(e);List<SpanQuery> clausesList = new ArrayList<>();try (TokenStream ts = analyzer.tokenStream(fieldName, value)) {TermToBytesRefAttribute termAtt = ts.addAttribute(TermToBytesRefAttribute.class);ts.reset();while (ts.incrementToken()) {SpanTermQuery stq = new SpanTermQuery(new Term(fieldName, BytesRef.deepCopyOf(termAtt.getBytesRef())));clausesList.add(stq);}ts.end();SpanOrQuery soq = new SpanOrQuery(clausesList.toArray(new SpanQuery[clausesList.size()]));float boost = DOMUtils.getAttribute(e, ""boost"", 1.0f);return new SpanBoostQuery(soq, boost);}catch (IOException ioe) {throw new ParserException(""IOException parsing value:"" + value);}}",public SpanQuery getSpanQueryElement e throws ParserException String fieldName  DOMUtilsgetAttributeWithInheritanceOrFaile fieldNameString value  DOMUtilsgetNonBlankTextOrFaileListSpanQuery clausesList  new ArrayListtry TokenStream ts  analyzertokenStreamfieldName value TermToBytesRefAttribute termAtt  tsaddAttributeTermToBytesRefAttributeclasstsresetwhile tsincrementToken SpanTermQuery stq  new SpanTermQuerynew TermfieldName BytesRefdeepCopyOftermAttgetBytesRefclausesListaddstqtsendSpanOrQuery soq  new SpanOrQueryclausesListtoArraynew SpanQueryclausesListsizefloat boost  DOMUtilsgetAttributee boost 10freturn new SpanBoostQuerysoq boostcatch IOException ioe throw new ParserExceptionIOException parsing value  value
public UpdateGatewayResult updateGateway(UpdateGatewayRequest request) {request = beforeClientExecution(request);return executeUpdateGateway(request);},public UpdateGatewayResult updateGatewayUpdateGatewayRequest request request  beforeClientExecutionrequestreturn executeUpdateGatewayrequest
public boolean getCachedBooleanValue() {return specialCachedValue.getBooleanValue();},public boolean getCachedBooleanValue return specialCachedValuegetBooleanValue
public DeleteIdentityPoolResult deleteIdentityPool(DeleteIdentityPoolRequest request) {request = beforeClientExecution(request);return executeDeleteIdentityPool(request);},public DeleteIdentityPoolResult deleteIdentityPoolDeleteIdentityPoolRequest request request  beforeClientExecutionrequestreturn executeDeleteIdentityPoolrequest
public PutSuppressedDestinationResult putSuppressedDestination(PutSuppressedDestinationRequest request) {request = beforeClientExecution(request);return executePutSuppressedDestination(request);},public PutSuppressedDestinationResult putSuppressedDestinationPutSuppressedDestinationRequest request request  beforeClientExecutionrequestreturn executePutSuppressedDestinationrequest
public PutEventsResult putEvents(PutEventsRequest request) {request = beforeClientExecution(request);return executePutEvents(request);},public PutEventsResult putEventsPutEventsRequest request request  beforeClientExecutionrequestreturn executePutEventsrequest
public GetRecommendationsResult getRecommendations(GetRecommendationsRequest request) {request = beforeClientExecution(request);return executeGetRecommendations(request);},public GetRecommendationsResult getRecommendationsGetRecommendationsRequest request request  beforeClientExecutionrequestreturn executeGetRecommendationsrequest
public boolean equals(Object obj) {if (this == obj) return true;if (obj instanceof SegmentInfo) {final SegmentInfo other = (SegmentInfo) obj;return other.dir == dir && other.name.equals(name);} else {return false;}},public boolean equalsObject obj if this  obj return trueif obj instanceof SegmentInfo final SegmentInfo other  SegmentInfo objreturn otherdir  dir  othernameequalsname else return false
public HSSFDataFormat createDataFormat() {if (formatter == null) {formatter = new HSSFDataFormat(workbook);}return formatter;},public HSSFDataFormat createDataFormat if formatter  null formatter  new HSSFDataFormatworkbookreturn formatter
"public UpdateFaceRequest() {super(""LinkFace"", ""2018-07-20"", ""UpdateFace"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public UpdateFaceRequest superLinkFace 20180720 UpdateFacesetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public void serialize(LittleEndianOutput out) {out.writeDouble(getMaxChange());},public void serializeLittleEndianOutput out outwriteDoublegetMaxChange
public ModifyVpcEndpointServicePermissionsResult modifyVpcEndpointServicePermissions(ModifyVpcEndpointServicePermissionsRequest request) {request = beforeClientExecution(request);return executeModifyVpcEndpointServicePermissions(request);},public ModifyVpcEndpointServicePermissionsResult modifyVpcEndpointServicePermissionsModifyVpcEndpointServicePermissionsRequest request request  beforeClientExecutionrequestreturn executeModifyVpcEndpointServicePermissionsrequest
"public IntervalSet nextTokens(ATNState s) {if ( s.nextTokenWithinRule != null ) return s.nextTokenWithinRule;s.nextTokenWithinRule = nextTokens(s, null);s.nextTokenWithinRule.setReadonly(true);return s.nextTokenWithinRule;}",public IntervalSet nextTokensATNState s if  snextTokenWithinRule  null  return snextTokenWithinRulesnextTokenWithinRule  nextTokenss nullsnextTokenWithinRulesetReadonlytruereturn snextTokenWithinRule
public GetResourceResult getResource(GetResourceRequest request) {request = beforeClientExecution(request);return executeGetResource(request);},public GetResourceResult getResourceGetResourceRequest request request  beforeClientExecutionrequestreturn executeGetResourcerequest
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[HYPERLINK RECORD]\n"");buffer.append(""    .range   = "").append(_range.formatAsString()).append(""\n"");buffer.append(""    .guid    = "").append(_guid.toString()).append(""\n"");buffer.append(""    .linkOpts= "").append(HexDump.intToHex(_linkOpts)).append(""\n"");buffer.append(""    .label   = "").append(getLabel()).append(""\n"");if ((_linkOpts & HLINK_TARGET_FRAME) != 0) {buffer.append(""    .targetFrame= "").append(getTargetFrame()).append(""\n"");}if((_linkOpts & HLINK_URL) != 0 && _moniker != null) {buffer.append(""    .moniker   = "").append(_moniker.toString()).append(""\n"");}if ((_linkOpts & HLINK_PLACE) != 0) {buffer.append(""    .textMark= "").append(getTextMark()).append(""\n"");}buffer.append(""    .address   = "").append(getAddress()).append(""\n"");buffer.append(""[/HYPERLINK RECORD]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendHYPERLINK RECORDnbufferappend    range    appendrangeformatAsStringappendnbufferappend    guid     appendguidtoStringappendnbufferappend    linkOpts appendHexDumpintToHexlinkOptsappendnbufferappend    label    appendgetLabelappendnif linkOpts  HLINKTARGETFRAME  0 bufferappend    targetFrame appendgetTargetFrameappendniflinkOpts  HLINKURL  0  moniker  null bufferappend    moniker    appendmonikertoStringappendnif linkOpts  HLINKPLACE  0 bufferappend    textMark appendgetTextMarkappendnbufferappend    address    appendgetAddressappendnbufferappendHYPERLINK RECORDnreturn buffertoString
public CreateFacetResult createFacet(CreateFacetRequest request) {request = beforeClientExecution(request);return executeCreateFacet(request);},public CreateFacetResult createFacetCreateFacetRequest request request  beforeClientExecutionrequestreturn executeCreateFacetrequest
@Override public int indexOf(Object object) {final int size;final Object[] array;synchronized (mutex) {size = list.size();array = new Object[size];list.toArray(array);}if (object != null) {for (int i = 0; i < size; i++) {if (object.equals(array[i])) {return i;}}} else {for (int i = 0; i < size; i++) {if (array[i] == null) {return i;}}}return -1;},Override public int indexOfObject object final int sizefinal Object arraysynchronized mutex size  listsizearray  new ObjectsizelisttoArrayarrayif object  null for int i  0 i  size i if objectequalsarrayi return i else for int i  0 i  size i if arrayi  null return ireturn 1
public static PrintOrientation valueOf(int value){return _table[value];},public static PrintOrientation valueOfint valuereturn tablevalue
public DefineExpressionResult defineExpression(DefineExpressionRequest request) {request = beforeClientExecution(request);return executeDefineExpression(request);},public DefineExpressionResult defineExpressionDefineExpressionRequest request request  beforeClientExecutionrequestreturn executeDefineExpressionrequest
public long getLastModified() {return attributes.getLastModifiedInstant().toEpochMilli();},public long getLastModified return attributesgetLastModifiedInstanttoEpochMilli
public void close() {buffer = null;size = -1;},public void close buffer  nullsize  1
public StartEntitiesDetectionJobResult startEntitiesDetectionJob(StartEntitiesDetectionJobRequest request) {request = beforeClientExecution(request);return executeStartEntitiesDetectionJob(request);},public StartEntitiesDetectionJobResult startEntitiesDetectionJobStartEntitiesDetectionJobRequest request request  beforeClientExecutionrequestreturn executeStartEntitiesDetectionJobrequest
public boolean processMatch(ValueEval eval) {if(result == null) {result = eval;}else {if(result instanceof BlankEval) {result = eval;}else {if(!(eval instanceof BlankEval)) {result = ErrorEval.NUM_ERROR;return false;}}}return true;},public boolean processMatchValueEval eval ifresult  null result  evalelse ifresult instanceof BlankEval result  evalelse ifeval instanceof BlankEval result  ErrorEvalNUMERRORreturn falsereturn true
"public TokenTagToken(String tokenName, int type, String label) {super(type);this.tokenName = tokenName;this.label = label;}",public TokenTagTokenString tokenName int type String label supertypethistokenName  tokenNamethislabel  label
"public void reset(boolean zeroFillBuffers, boolean reuseFirst) {if (bufferUpto != -1) {if (zeroFillBuffers) {for(int i=0;i<bufferUpto;i++) {Arrays.fill(buffers[i], (byte) 0);}Arrays.fill(buffers[bufferUpto], 0, byteUpto, (byte) 0);}if (bufferUpto > 0 || !reuseFirst) {final int offset = reuseFirst ? 1 : 0;allocator.recycleByteBlocks(buffers, offset, 1+bufferUpto);Arrays.fill(buffers, offset, 1+bufferUpto, null);}if (reuseFirst) {bufferUpto = 0;byteUpto = 0;byteOffset = 0;buffer = buffers[0];} else {bufferUpto = -1;byteUpto = BYTE_BLOCK_SIZE;byteOffset = -BYTE_BLOCK_SIZE;buffer = null;}}}",public void resetboolean zeroFillBuffers boolean reuseFirst if bufferUpto  1 if zeroFillBuffers forint i0ibufferUptoi Arraysfillbuffersi byte 0ArraysfillbuffersbufferUpto 0 byteUpto byte 0if bufferUpto  0  reuseFirst final int offset  reuseFirst  1  0allocatorrecycleByteBlocksbuffers offset 1bufferUptoArraysfillbuffers offset 1bufferUpto nullif reuseFirst bufferUpto  0byteUpto  0byteOffset  0buffer  buffers0 else bufferUpto  1byteUpto  BYTEBLOCKSIZEbyteOffset  BYTEBLOCKSIZEbuffer  null
public UpdateExpirationForHITResult updateExpirationForHIT(UpdateExpirationForHITRequest request) {request = beforeClientExecution(request);return executeUpdateExpirationForHIT(request);},public UpdateExpirationForHITResult updateExpirationForHITUpdateExpirationForHITRequest request request  beforeClientExecutionrequestreturn executeUpdateExpirationForHITrequest
public Policy(String id) {this.id = id;},public PolicyString id thisid  id
"public UpdateApplicationVersionRequest(String applicationName, String versionLabel) {setApplicationName(applicationName);setVersionLabel(versionLabel);}",public UpdateApplicationVersionRequestString applicationName String versionLabel setApplicationNameapplicationNamesetVersionLabelversionLabel
"public String getEmailAddress() {final int lt = RawParseUtils.nextLF(buffer, valStart, '<');if (valEnd <= lt) {final int at = RawParseUtils.nextLF(buffer, valStart, '@');if (valStart < at && at < valEnd)return getValue();return null;}final int gt = RawParseUtils.nextLF(buffer, lt, '>');if (valEnd < gt)return null;return RawParseUtils.decode(enc, buffer, lt, gt - 1);}",public String getEmailAddress final int lt  RawParseUtilsnextLFbuffer valStart if valEnd  lt final int at  RawParseUtilsnextLFbuffer valStart if valStart  at  at  valEndreturn getValuereturn nullfinal int gt  RawParseUtilsnextLFbuffer lt if valEnd  gtreturn nullreturn RawParseUtilsdecodeenc buffer lt gt  1
"public String simpleFormat(Object value) {StringBuffer sb = new StringBuffer();simpleValue(sb, value);return sb.toString();}",public String simpleFormatObject value StringBuffer sb  new StringBuffersimpleValuesb valuereturn sbtoString
public RevFilter clone() {return new NotRevFilter(a.clone());},public RevFilter clone return new NotRevFilteraclone
"public static int finish(int hash, int numberOfWords) {hash = hash ^ (numberOfWords * 4);hash = hash ^ (hash >>> 16);hash = hash * 0x85EBCA6B;hash = hash ^ (hash >>> 13);hash = hash * 0xC2B2AE35;hash = hash ^ (hash >>> 16);return hash;}",public static int finishint hash int numberOfWords hash  hash  numberOfWords  4hash  hash  hash  16hash  hash  0x85EBCA6Bhash  hash  hash  13hash  hash  0xC2B2AE35hash  hash  hash  16return hash
"public StempelFilter(TokenStream in, StempelStemmer stemmer, int minLength) {super(in);this.stemmer = stemmer;this.minLength = minLength;}",public StempelFilterTokenStream in StempelStemmer stemmer int minLength superinthisstemmer  stemmerthisminLength  minLength
public GetIntegrationResponseResult getIntegrationResponse(GetIntegrationResponseRequest request) {request = beforeClientExecution(request);return executeGetIntegrationResponse(request);},public GetIntegrationResponseResult getIntegrationResponseGetIntegrationResponseRequest request request  beforeClientExecutionrequestreturn executeGetIntegrationResponserequest
public PostToConnectionResult postToConnection(PostToConnectionRequest request) {request = beforeClientExecution(request);return executePostToConnection(request);},public PostToConnectionResult postToConnectionPostToConnectionRequest request request  beforeClientExecutionrequestreturn executePostToConnectionrequest
"public TermRangeQueryNode(FieldQueryNode lower, FieldQueryNode upper,boolean lowerInclusive, boolean upperInclusive) {setBounds(lower, upper, lowerInclusive, upperInclusive);}",public TermRangeQueryNodeFieldQueryNode lower FieldQueryNode upperboolean lowerInclusive boolean upperInclusive setBoundslower upper lowerInclusive upperInclusive
public QueryParser(CharStream stream) {token_source = new QueryParserTokenManager(stream);token = new Token();jj_ntk = -1;jj_gen = 0;for (int i = 0; i < 10; i++) jj_la1[i] = -1;for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls();},public QueryParserCharStream stream tokensource  new QueryParserTokenManagerstreamtoken  new Tokenjjntk  1jjgen  0for int i  0 i  10 i jjla1i  1for int i  0 i  jj2rtnslength i jj2rtnsi  new JJCalls
public CreateSchemaResult createSchema(CreateSchemaRequest request) {request = beforeClientExecution(request);return executeCreateSchema(request);},public CreateSchemaResult createSchemaCreateSchemaRequest request request  beforeClientExecutionrequestreturn executeCreateSchemarequest
"public V get(char[] text, int off, int len) {if(text == null)throw new NullPointerException();return null;}",public V getchar text int off int len iftext  nullthrow new NullPointerExceptionreturn null
"public List<CharsRef> stem(String word) {return stem(word.toCharArray(), word.length());}",public ListCharsRef stemString word return stemwordtoCharArray wordlength
public DeleteSmsTemplateResult deleteSmsTemplate(DeleteSmsTemplateRequest request) {request = beforeClientExecution(request);return executeDeleteSmsTemplate(request);},public DeleteSmsTemplateResult deleteSmsTemplateDeleteSmsTemplateRequest request request  beforeClientExecutionrequestreturn executeDeleteSmsTemplaterequest
public void setPassword(short pw) {field_1_password = pw;},public void setPasswordshort pw field1password  pw
public CharBuffer append(char c) {return put(c);},public CharBuffer appendchar c return putc
public PutVoiceConnectorLoggingConfigurationResult putVoiceConnectorLoggingConfiguration(PutVoiceConnectorLoggingConfigurationRequest request) {request = beforeClientExecution(request);return executePutVoiceConnectorLoggingConfiguration(request);},public PutVoiceConnectorLoggingConfigurationResult putVoiceConnectorLoggingConfigurationPutVoiceConnectorLoggingConfigurationRequest request request  beforeClientExecutionrequestreturn executePutVoiceConnectorLoggingConfigurationrequest
public boolean isAbsolute() {return path.length() > 0 && path.charAt(0) == separatorChar;},public boolean isAbsolute return pathlength  0  pathcharAt0  separatorChar
"public CreateSnapshotRequest(String volumeId, String description) {setVolumeId(volumeId);setDescription(description);}",public CreateSnapshotRequestString volumeId String description setVolumeIdvolumeIdsetDescriptiondescription
"public static ReaderIterator getReaderIteratorNoHeader(DataInput in, Format format, int version,int valueCount, int bitsPerValue, int mem) {checkVersion(version);return new PackedReaderIterator(format, version, valueCount, bitsPerValue, in, mem);}",public static ReaderIterator getReaderIteratorNoHeaderDataInput in Format format int versionint valueCount int bitsPerValue int mem checkVersionversionreturn new PackedReaderIteratorformat version valueCount bitsPerValue in mem
"public DoubleBuffer put(int index, double c) {throw new ReadOnlyBufferException();}",public DoubleBuffer putint index double c throw new ReadOnlyBufferException
public StashDropCommand stashDrop() {return new StashDropCommand(repo);},public StashDropCommand stashDrop return new StashDropCommandrepo
public boolean isUnmappable() {return this.type == TYPE_UNMAPPABLE_CHAR;},public boolean isUnmappable return thistype  TYPEUNMAPPABLECHAR
public byte readByte() {checkPosition(1);return (byte)read();},public byte readByte checkPosition1return byteread
"public void decode(long[] blocks, int blocksOffset, int[] values,int valuesOffset, int iterations) {if (bitsPerValue > 32) {throw new UnsupportedOperationException(""Cannot decode "" + bitsPerValue + ""-bits values into an int[]"");}for (int i = 0; i < iterations; ++i) {final long block = blocks[blocksOffset++];valuesOffset = decode(block, values, valuesOffset);}}",public void decodelong blocks int blocksOffset int valuesint valuesOffset int iterations if bitsPerValue  32 throw new UnsupportedOperationExceptionCannot decode   bitsPerValue  bits values into an intfor int i  0 i  iterations i final long block  blocksblocksOffsetvaluesOffset  decodeblock values valuesOffset
public CustomAnalyzerConfig build() {return new CustomAnalyzerConfig(this);},public CustomAnalyzerConfig build return new CustomAnalyzerConfigthis
public UpdateAddressBookResult updateAddressBook(UpdateAddressBookRequest request) {request = beforeClientExecution(request);return executeUpdateAddressBook(request);},public UpdateAddressBookResult updateAddressBookUpdateAddressBookRequest request request  beforeClientExecutionrequestreturn executeUpdateAddressBookrequest
"public String toString() {return String.format(""Point [%dx%d]"", x, y);}",public String toString return StringformatPoint dxd x y
public DescribeAccountAttributesResult describeAccountAttributes(DescribeAccountAttributesRequest request) {request = beforeClientExecution(request);return executeDescribeAccountAttributes(request);},public DescribeAccountAttributesResult describeAccountAttributesDescribeAccountAttributesRequest request request  beforeClientExecutionrequestreturn executeDescribeAccountAttributesrequest
public static final RevFilter before(long ts) {return new Before(ts);},public static final RevFilter beforelong ts return new Beforets
"public void seekExact(BytesRef target, TermState otherState) {if (!target.equals(term)) {state.copyFrom(otherState);term = BytesRef.deepCopyOf(target);seekPending = true;}}",public void seekExactBytesRef target TermState otherState if targetequalsterm statecopyFromotherStateterm  BytesRefdeepCopyOftargetseekPending  true
public DescribeClusterParameterGroupsResult describeClusterParameterGroups(DescribeClusterParameterGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeClusterParameterGroups(request);},public DescribeClusterParameterGroupsResult describeClusterParameterGroupsDescribeClusterParameterGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeClusterParameterGroupsrequest
public BatchGetApplicationsResult batchGetApplications(BatchGetApplicationsRequest request) {request = beforeClientExecution(request);return executeBatchGetApplications(request);},public BatchGetApplicationsResult batchGetApplicationsBatchGetApplicationsRequest request request  beforeClientExecutionrequestreturn executeBatchGetApplicationsrequest
"public String toString() {return ""dels="" + Arrays.toString(item);}",public String toString return dels  ArraystoStringitem
public FreeRefFunction findFunction(String name) {FreeRefFunction evaluatorForFunction;for (UDFFinder pack : _usedToolPacks) {evaluatorForFunction = pack.findFunction(name);if (evaluatorForFunction != null) {return evaluatorForFunction;}}return null;},public FreeRefFunction findFunctionString name FreeRefFunction evaluatorForFunctionfor UDFFinder pack  usedToolPacks evaluatorForFunction  packfindFunctionnameif evaluatorForFunction  null return evaluatorForFunctionreturn null
"public String toString(){StringBuilder sb = new StringBuilder();sb.append(""[LABEL]\n"");sb.append(""    .row       = "").append(HexDump.shortToHex(getRow())).append(""\n"");sb.append(""    .column    = "").append(HexDump.shortToHex(getColumn())).append(""\n"");sb.append(""    .xfindex   = "").append(HexDump.shortToHex(getXFIndex())).append(""\n"");sb.append(""    .string_len= "").append(HexDump.shortToHex(field_4_string_len)).append(""\n"");sb.append(""    .unicode_flag= "").append(HexDump.byteToHex(field_5_unicode_flag)).append(""\n"");sb.append(""    .value       = "").append(getValue()).append(""\n"");sb.append(""[/LABEL]\n"");return sb.toString();}",public String toStringStringBuilder sb  new StringBuildersbappendLABELnsbappend    row        appendHexDumpshortToHexgetRowappendnsbappend    column     appendHexDumpshortToHexgetColumnappendnsbappend    xfindex    appendHexDumpshortToHexgetXFIndexappendnsbappend    stringlen appendHexDumpshortToHexfield4stringlenappendnsbappend    unicodeflag appendHexDumpbyteToHexfield5unicodeflagappendnsbappend    value        appendgetValueappendnsbappendLABELnreturn sbtoString
"public static void verifyLabel(String label) {if (label == null || label.isEmpty()) {throw new IllegalArgumentException(""empty or null components not allowed; got: "" + label);}}",public static void verifyLabelString label if label  null  labelisEmpty throw new IllegalArgumentExceptionempty or null components not allowed got   label
"public boolean setReadOnly() {return setWritable(false, false);}",public boolean setReadOnly return setWritablefalse false
public CopyImageResult copyImage(CopyImageRequest request) {request = beforeClientExecution(request);return executeCopyImage(request);},public CopyImageResult copyImageCopyImageRequest request request  beforeClientExecutionrequestreturn executeCopyImagerequest
public CreateTrainingJobResult createTrainingJob(CreateTrainingJobRequest request) {request = beforeClientExecution(request);return executeCreateTrainingJob(request);},public CreateTrainingJobResult createTrainingJobCreateTrainingJobRequest request request  beforeClientExecutionrequestreturn executeCreateTrainingJobrequest
public DescribeDomainsResult describeDomains(DescribeDomainsRequest request) {request = beforeClientExecution(request);return executeDescribeDomains(request);},public DescribeDomainsResult describeDomainsDescribeDomainsRequest request request  beforeClientExecutionrequestreturn executeDescribeDomainsrequest
"public String toString() {return ""ngram("" + n + "")"";}",public String toString return ngram  n  
public boolean formatMatches(ColumnInfoRecord other) {if (_xfIndex != other._xfIndex) {return false;}if (_options != other._options) {return false;}if (_colWidth != other._colWidth) {return false;}return true;},public boolean formatMatchesColumnInfoRecord other if xfIndex  otherxfIndex return falseif options  otheroptions return falseif colWidth  othercolWidth return falsereturn true
public AddCommand add() {return new AddCommand(repo);},public AddCommand add return new AddCommandrepo
public final int limit() {return limit;},public final int limit return limit
"public CharBuffer asReadOnlyBuffer() {return ReadOnlyCharArrayBuffer.copy(this, mark);}",public CharBuffer asReadOnlyBuffer return ReadOnlyCharArrayBuffercopythis mark
public synchronized boolean add(E object) {if (elementCount == elementData.length) {growByOne();}elementData[elementCount++] = object;modCount++;return true;},public synchronized boolean addE object if elementCount  elementDatalength growByOneelementDataelementCount  objectmodCountreturn true
"public TSTNode getNode(CharSequence key) {return getNode(key, rootNode);}",public TSTNode getNodeCharSequence key return getNodekey rootNode
public GetEventStreamResult getEventStream(GetEventStreamRequest request) {request = beforeClientExecution(request);return executeGetEventStream(request);},public GetEventStreamResult getEventStreamGetEventStreamRequest request request  beforeClientExecutionrequestreturn executeGetEventStreamrequest
public SendMessageBatchResult sendMessageBatch(SendMessageBatchRequest request) {request = beforeClientExecution(request);return executeSendMessageBatch(request);},public SendMessageBatchResult sendMessageBatchSendMessageBatchRequest request request  beforeClientExecutionrequestreturn executeSendMessageBatchrequest
public DescribeDirectConnectGatewayAttachmentsResult describeDirectConnectGatewayAttachments(DescribeDirectConnectGatewayAttachmentsRequest request) {request = beforeClientExecution(request);return executeDescribeDirectConnectGatewayAttachments(request);},public DescribeDirectConnectGatewayAttachmentsResult describeDirectConnectGatewayAttachmentsDescribeDirectConnectGatewayAttachmentsRequest request request  beforeClientExecutionrequestreturn executeDescribeDirectConnectGatewayAttachmentsrequest
"public Object add(Object prefix, Object output) {assert !(prefix instanceof List);if (!(output instanceof List)) {return outputs.add((T) prefix, (T) output);} else {List<T> outputList = (List<T>) output;List<T> addedList = new ArrayList<>(outputList.size());for(T _output : outputList) {addedList.add(outputs.add((T) prefix, _output));}return addedList;}}",public Object addObject prefix Object output assert prefix instanceof Listif output instanceof List return outputsaddT prefix T output else ListT outputList  ListT outputListT addedList  new ArrayListoutputListsizeforT output  outputList addedListaddoutputsaddT prefix outputreturn addedList
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1,ValueEval arg2, ValueEval arg3) {return evaluate(srcRowIndex, srcColumnIndex, arg0, arg1, arg2, arg3, DEFAULT_ARG4);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1ValueEval arg2 ValueEval arg3 return evaluatesrcRowIndex srcColumnIndex arg0 arg1 arg2 arg3 DEFAULTARG4
"public static List<ParseTree> findAllNodes(ParseTree t, int index, boolean findTokens) {List<ParseTree> nodes = new ArrayList<ParseTree>();_findAllNodes(t, index, findTokens, nodes);return nodes;}",public static ListParseTree findAllNodesParseTree t int index boolean findTokens ListParseTree nodes  new ArrayListParseTreefindAllNodest index findTokens nodesreturn nodes
"public boolean containsChart() {EscherOptRecord optRecord = (EscherOptRecord)_boundAggregate.findFirstWithId(EscherOptRecord.RECORD_ID);if (optRecord == null) {return false;}for (EscherProperty prop : optRecord.getEscherProperties()) {if (prop.getPropertyNumber() == 896 && prop.isComplex()) {EscherComplexProperty cp = (EscherComplexProperty) prop;String str = StringUtil.getFromUnicodeLE(cp.getComplexData());if (str.equals(""Chart 1\0"")) {return true;}}}return false;}",public boolean containsChart EscherOptRecord optRecord  EscherOptRecordboundAggregatefindFirstWithIdEscherOptRecordRECORDIDif optRecord  null return falsefor EscherProperty prop  optRecordgetEscherProperties if propgetPropertyNumber  896  propisComplex EscherComplexProperty cp  EscherComplexProperty propString str  StringUtilgetFromUnicodeLEcpgetComplexDataif strequalsChart 10 return truereturn false
public int getWidth() {return w;},public int getWidth return w
public StopInstanceResult stopInstance(StopInstanceRequest request) {request = beforeClientExecution(request);return executeStopInstance(request);},public StopInstanceResult stopInstanceStopInstanceRequest request request  beforeClientExecutionrequestreturn executeStopInstancerequest
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[TABLE]\n"");buffer.append(""    .range    = "").append(getRange()).append(""\n"");buffer.append(""    .flags    = "") .append(HexDump.byteToHex(field_5_flags)).append(""\n"");buffer.append(""    .alwaysClc= "").append(isAlwaysCalc()).append(""\n"");buffer.append(""    .reserved = "").append(HexDump.intToHex(field_6_res)).append(""\n"");CellReference crRowInput = cr(field_7_rowInputRow, field_8_colInputRow);CellReference crColInput = cr(field_9_rowInputCol, field_10_colInputCol);buffer.append(""    .rowInput = "").append(crRowInput.formatAsString()).append(""\n"");buffer.append(""    .colInput = "").append(crColInput.formatAsString()).append(""\n"");buffer.append(""[/TABLE]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendTABLEnbufferappend    range     appendgetRangeappendnbufferappend    flags      appendHexDumpbyteToHexfield5flagsappendnbufferappend    alwaysClc appendisAlwaysCalcappendnbufferappend    reserved  appendHexDumpintToHexfield6resappendnCellReference crRowInput  crfield7rowInputRow field8colInputRowCellReference crColInput  crfield9rowInputCol field10colInputColbufferappend    rowInput  appendcrRowInputformatAsStringappendnbufferappend    colInput  appendcrColInputformatAsStringappendnbufferappendTABLEnreturn buffertoString
public RemoveTagsResult removeTags(RemoveTagsRequest request) {request = beforeClientExecution(request);return executeRemoveTags(request);},public RemoveTagsResult removeTagsRemoveTagsRequest request request  beforeClientExecutionrequestreturn executeRemoveTagsrequest
public boolean hasNext() {if (next == null)next = peek();return next != null;},public boolean hasNext if next  nullnext  peekreturn next  null
"public long byteCount(int packedIntsVersion, int valueCount, int bitsPerValue) {return (long) Math.ceil((double) valueCount * bitsPerValue / 8);}",public long byteCountint packedIntsVersion int valueCount int bitsPerValue return long Mathceildouble valueCount  bitsPerValue  8
public GetQueueUrlRequest(String queueName) {setQueueName(queueName);},public GetQueueUrlRequestString queueName setQueueNamequeueName
"public void addEscherRecord(int index, EscherRecord element){escherRecords.add( index, element );}",public void addEscherRecordint index EscherRecord elementescherRecordsadd index element 
public ListInstanceGroupsResult listInstanceGroups(ListInstanceGroupsRequest request) {request = beforeClientExecution(request);return executeListInstanceGroups(request);},public ListInstanceGroupsResult listInstanceGroupsListInstanceGroupsRequest request request  beforeClientExecutionrequestreturn executeListInstanceGroupsrequest
"public TruncateTokenFilterFactory(Map<String, String> args) {super(args);prefixLength = Byte.parseByte(get(args, PREFIX_LENGTH_KEY, ""5""));if (prefixLength < 1)throw new IllegalArgumentException(PREFIX_LENGTH_KEY + "" parameter must be a positive number: "" + prefixLength);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameter(s): "" + args);}}",public TruncateTokenFilterFactoryMapString String args superargsprefixLength  ByteparseBytegetargs PREFIXLENGTHKEY 5if prefixLength  1throw new IllegalArgumentExceptionPREFIXLENGTHKEY   parameter must be a positive number   prefixLengthif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public GetDetectorResult getDetector(GetDetectorRequest request) {request = beforeClientExecution(request);return executeGetDetector(request);},public GetDetectorResult getDetectorGetDetectorRequest request request  beforeClientExecutionrequestreturn executeGetDetectorrequest
"public void set(int index, int n) {if (count < index)throw new ArrayIndexOutOfBoundsException(index);else if (count == index)add(n);elseentries[index] = n;}",public void setint index int n if count  indexthrow new ArrayIndexOutOfBoundsExceptionindexelse if count  indexaddnelseentriesindex  n
"public StatePair(int s1, int s2) {this.s1 = s1;this.s2 = s2;this.s = -1;}",public StatePairint s1 int s2 thiss1  s1thiss2  s2thiss  1
public DetachDiskResult detachDisk(DetachDiskRequest request) {request = beforeClientExecution(request);return executeDetachDisk(request);},public DetachDiskResult detachDiskDetachDiskRequest request request  beforeClientExecutionrequestreturn executeDetachDiskrequest
public void clear() {count = 0;},public void clear count  0
public ListIterator<E> listIterator() {return delegate().listIterator(); },public ListIteratorE listIterator return delegatelistIterator 
"public FieldDoc(int doc, float score, Object[] fields, int shardIndex) {super(doc, score, shardIndex);this.fields = fields;}",public FieldDocint doc float score Object fields int shardIndex superdoc score shardIndexthisfields  fields
public ResourceRecord(String value) {setValue(value);},public ResourceRecordString value setValuevalue
public String getAuthority() {return decode(authority);},public String getAuthority return decodeauthority
public void flush() throws IOException {drain();output.flush();},public void flush throws IOException drainoutputflush
"public ListMultipartUploadsRequest(String accountId, String vaultName) {setAccountId(accountId);setVaultName(vaultName);}",public ListMultipartUploadsRequestString accountId String vaultName setAccountIdaccountIdsetVaultNamevaultName
public UpdateRouteResponseResult updateRouteResponse(UpdateRouteResponseRequest request) {request = beforeClientExecution(request);return executeUpdateRouteResponse(request);},public UpdateRouteResponseResult updateRouteResponseUpdateRouteResponseRequest request request  beforeClientExecutionrequestreturn executeUpdateRouteResponserequest
public boolean containsKey(Object name) {return get(name) != null;},public boolean containsKeyObject name return getname  null
public SimpleRateLimiter(double mbPerSec) {setMBPerSec(mbPerSec);lastNS = System.nanoTime();},public SimpleRateLimiterdouble mbPerSec setMBPerSecmbPerSeclastNS  SystemnanoTime
public void releaseSession(RemoteSession session) {session.disconnect();},public void releaseSessionRemoteSession session sessiondisconnect
"public SetQuotaRequest() {super(""CloudPhoto"", ""2017-07-11"", ""SetQuota"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public SetQuotaRequest superCloudPhoto 20170711 SetQuota cloudphotosetProtocolProtocolTypeHTTPS
"public ParserATNSimulator(Parser parser, ATN atn,DFA[] decisionToDFA,PredictionContextCache sharedContextCache){super(atn, sharedContextCache);this.parser = parser;this.decisionToDFA = decisionToDFA;}",public ParserATNSimulatorParser parser ATN atnDFA decisionToDFAPredictionContextCache sharedContextCachesuperatn sharedContextCachethisparser  parserthisdecisionToDFA  decisionToDFA
"public void remove() {Object[] a = array;int removalIdx = removalIndex;if (modCount != expectedModCount) {throw new ConcurrentModificationException();}if (removalIdx < 0) {throw new IllegalStateException();}System.arraycopy(a, removalIdx + 1, a, removalIdx, remaining);a[--size] = null;  removalIndex = -1;expectedModCount = ++modCount;}",public void remove Object a  arrayint removalIdx  removalIndexif modCount  expectedModCount throw new ConcurrentModificationExceptionif removalIdx  0 throw new IllegalStateExceptionSystemarraycopya removalIdx  1 a removalIdx remainingasize  null  removalIndex  1expectedModCount  modCount
public T getPointAt(int index) {return elements[index];},public T getPointAtint index return elementsindex
public StatusCommand setWorkingTreeIt(WorkingTreeIterator workingTreeIt) {this.workingTreeIt = workingTreeIt;return this;},public StatusCommand setWorkingTreeItWorkingTreeIterator workingTreeIt thisworkingTreeIt  workingTreeItreturn this
"public CharBlockArray append(CharSequence chars) {return append(chars, 0, chars.length());}",public CharBlockArray appendCharSequence chars return appendchars 0 charslength
public void clear() {current.clear();},public void clear currentclear
public String toFormulaString() {return FormulaError.forInt(field_1_error_code).getString();},public String toFormulaString return FormulaErrorforIntfield1errorcodegetString
public FtPioGrbitSubRecord clone() {return copy();},public FtPioGrbitSubRecord clone return copy
"public PositionSpan(int start, int end) {this.start = start;this.end = end;}",public PositionSpanint start int end thisstart  startthisend  end
"public void setParams(String params) {super.setParams(params);StringTokenizer st = new StringTokenizer(params, "","");while (st.hasMoreTokens()) {String param = st.nextToken();StringTokenizer expr = new StringTokenizer(param, "":"");String key = expr.nextToken();String value = expr.nextToken();if (key.equals(""impl"")) {if (value.equalsIgnoreCase(""icu"")) impl = Implementation.ICU;else if (value.equalsIgnoreCase(""jdk"")) impl = Implementation.JDK;else throw new RuntimeException(""Unknown parameter "" + param);} else {throw new RuntimeException(""Unknown parameter "" + param);}}}",public void setParamsString params supersetParamsparamsStringTokenizer st  new StringTokenizerparams while sthasMoreTokens String param  stnextTokenStringTokenizer expr  new StringTokenizerparam String key  exprnextTokenString value  exprnextTokenif keyequalsimpl if valueequalsIgnoreCaseicu impl  ImplementationICUelse if valueequalsIgnoreCasejdk impl  ImplementationJDKelse throw new RuntimeExceptionUnknown parameter   param else throw new RuntimeExceptionUnknown parameter   param
public DeleteBuildResult deleteBuild(DeleteBuildRequest request) {request = beforeClientExecution(request);return executeDeleteBuild(request);},public DeleteBuildResult deleteBuildDeleteBuildRequest request request  beforeClientExecutionrequestreturn executeDeleteBuildrequest
public DescribeVolumeStatusResult describeVolumeStatus() {return describeVolumeStatus(new DescribeVolumeStatusRequest());},public DescribeVolumeStatusResult describeVolumeStatus return describeVolumeStatusnew DescribeVolumeStatusRequest
public String getFlags() {return f;},public String getFlags return f
public ShowNoteCommand setObjectId(RevObject id) {checkCallable();this.id = id;return this;},public ShowNoteCommand setObjectIdRevObject id checkCallablethisid  idreturn this
"public PatternReplaceFilter create(TokenStream input) {return new PatternReplaceFilter(input, pattern, replacement, replaceAll);}",public PatternReplaceFilter createTokenStream input return new PatternReplaceFilterinput pattern replacement replaceAll
public void reset() throws IOException {drain();output.writeByte(TC_RESET);resetState();},public void reset throws IOException drainoutputwriteByteTCRESETresetState
"public Ptg get3DReferencePtg(CellReference cr, SheetIdentifier sheet) {int extIx = getSheetExtIx(sheet);return new Ref3DPtg(cr, extIx);}",public Ptg get3DReferencePtgCellReference cr SheetIdentifier sheet int extIx  getSheetExtIxsheetreturn new Ref3DPtgcr extIx
"public static void fill(boolean[] array, int start, int end, boolean value) {Arrays.checkStartAndEnd(array.length, start, end);for (int i = start; i < end; i++) {array[i] = value;}}",public static void fillboolean array int start int end boolean value ArrayscheckStartAndEndarraylength start endfor int i  start i  end i arrayi  value
"public TokenStream create(TokenStream input) {return new ICUFoldingFilter(input, normalizer);}",public TokenStream createTokenStream input return new ICUFoldingFilterinput normalizer
"public CharSequence toQueryString(EscapeQuerySyntax escaper) {return ""[NTF]"";}",public CharSequence toQueryStringEscapeQuerySyntax escaper return NTF
public StashCreateCommand setWorkingDirectoryMessage(String message) {workingDirectoryMessage = message;return this;},public StashCreateCommand setWorkingDirectoryMessageString message workingDirectoryMessage  messagereturn this
"public SheetRangeEvaluator(int onlySheetIndex, SheetRefEvaluator sheetEvaluator) {this(onlySheetIndex, onlySheetIndex, new SheetRefEvaluator[] {sheetEvaluator});}",public SheetRangeEvaluatorint onlySheetIndex SheetRefEvaluator sheetEvaluator thisonlySheetIndex onlySheetIndex new SheetRefEvaluator sheetEvaluator
"public static long[] grow(long[] array, int minSize) {assert minSize >= 0: ""size must be positive (got "" + minSize + ""): likely integer overflow?"";if (array.length < minSize) {return growExact(array, oversize(minSize, Long.BYTES));} else return array;}",public static long growlong array int minSize assert minSize  0 size must be positive got   minSize   likely integer overflowif arraylength  minSize return growExactarray oversizeminSize LongBYTES else return array
"public static RevFilter create(Collection<RevFilter> list) {if (list.size() < 2)throw new IllegalArgumentException(JGitText.get().atLeastTwoFiltersNeeded);final RevFilter[] subfilters = new RevFilter[list.size()];list.toArray(subfilters);if (subfilters.length == 2)return create(subfilters[0], subfilters[1]);return new List(subfilters);}",public static RevFilter createCollectionRevFilter list if listsize  2throw new IllegalArgumentExceptionJGitTextgetatLeastTwoFiltersNeededfinal RevFilter subfilters  new RevFilterlistsizelisttoArraysubfiltersif subfilterslength  2return createsubfilters0 subfilters1return new Listsubfilters
public DeregisterOnPremisesInstanceResult deregisterOnPremisesInstance(DeregisterOnPremisesInstanceRequest request) {request = beforeClientExecution(request);return executeDeregisterOnPremisesInstance(request);},public DeregisterOnPremisesInstanceResult deregisterOnPremisesInstanceDeregisterOnPremisesInstanceRequest request request  beforeClientExecutionrequestreturn executeDeregisterOnPremisesInstancerequest
public ListDeliverabilityTestReportsResult listDeliverabilityTestReports(ListDeliverabilityTestReportsRequest request) {request = beforeClientExecution(request);return executeListDeliverabilityTestReports(request);},public ListDeliverabilityTestReportsResult listDeliverabilityTestReportsListDeliverabilityTestReportsRequest request request  beforeClientExecutionrequestreturn executeListDeliverabilityTestReportsrequest
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0,ValueEval arg1) {double dn;try {ValueEval ve1 = OperandResolver.getSingleValue(arg1, srcRowIndex, srcColumnIndex);dn = OperandResolver.coerceValueToDouble(ve1);} catch (EvaluationException e1) {return ErrorEval.VALUE_INVALID;}if (dn < 1.0) {return ErrorEval.NUM_ERROR;}int k = (int) Math.ceil(dn);double result;try {double[] ds = ValueCollector.collectValues(arg0);if (k > ds.length) {return ErrorEval.NUM_ERROR;}result = _isLarge ? StatsLib.kthLargest(ds, k) : StatsLib.kthSmallest(ds, k);NumericFunction.checkValue(result);} catch (EvaluationException e) {return e.getErrorEval();}return new NumberEval(result);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0ValueEval arg1 double dntry ValueEval ve1  OperandResolvergetSingleValuearg1 srcRowIndex srcColumnIndexdn  OperandResolvercoerceValueToDoubleve1 catch EvaluationException e1 return ErrorEvalVALUEINVALIDif dn  10 return ErrorEvalNUMERRORint k  int Mathceildndouble resulttry double ds  ValueCollectorcollectValuesarg0if k  dslength return ErrorEvalNUMERRORresult  isLarge  StatsLibkthLargestds k  StatsLibkthSmallestds kNumericFunctioncheckValueresult catch EvaluationException e return egetErrorEvalreturn new NumberEvalresult
public ByteArrayDataInput() {reset(BytesRef.EMPTY_BYTES);},public ByteArrayDataInput resetBytesRefEMPTYBYTES
public ByteBuffer putDouble(double value) {throw new ReadOnlyBufferException();},public ByteBuffer putDoubledouble value throw new ReadOnlyBufferException
public ChangeMessageVisibilityResult changeMessageVisibility(ChangeMessageVisibilityRequest request) {request = beforeClientExecution(request);return executeChangeMessageVisibility(request);},public ChangeMessageVisibilityResult changeMessageVisibilityChangeMessageVisibilityRequest request request  beforeClientExecutionrequestreturn executeChangeMessageVisibilityrequest
public UpdateWorkGroupResult updateWorkGroup(UpdateWorkGroupRequest request) {request = beforeClientExecution(request);return executeUpdateWorkGroup(request);},public UpdateWorkGroupResult updateWorkGroupUpdateWorkGroupRequest request request  beforeClientExecutionrequestreturn executeUpdateWorkGrouprequest
"public NavigableMap<K, V> tailMap(K fromInclusive) {return subMap(fromInclusive, INCLUSIVE, null, NO_BOUND);}",public NavigableMapK V tailMapK fromInclusive return subMapfromInclusive INCLUSIVE null NOBOUND
"public String toString() {return ""2"";}",public String toString return 2
public BlameCommand setStartCommit(AnyObjectId commit) {this.startCommit = commit.toObjectId();return this;},public BlameCommand setStartCommitAnyObjectId commit thisstartCommit  committoObjectIdreturn this
public ModifyEbsDefaultKmsKeyIdResult modifyEbsDefaultKmsKeyId(ModifyEbsDefaultKmsKeyIdRequest request) {request = beforeClientExecution(request);return executeModifyEbsDefaultKmsKeyId(request);},public ModifyEbsDefaultKmsKeyIdResult modifyEbsDefaultKmsKeyIdModifyEbsDefaultKmsKeyIdRequest request request  beforeClientExecutionrequestreturn executeModifyEbsDefaultKmsKeyIdrequest
public void removeAuthor() {remove1stProperty(PropertyIDMap.PID_AUTHOR);},public void removeAuthor remove1stPropertyPropertyIDMapPIDAUTHOR
public Ref get(Object key) {String name = toRefName((String) key);Ref ref = resolved.get(name);if (ref == null)ref = loose.get(name);if (ref == null)ref = packed.get(name);return ref;},public Ref getObject key String name  toRefNameString keyRef ref  resolvedgetnameif ref  nullref  loosegetnameif ref  nullref  packedgetnamereturn ref
public int addConditionalFormatting( HSSFConditionalFormatting cf ) {CFRecordsAggregate cfraClone = cf.getCFRecordsAggregate().cloneCFAggregate();return _conditionalFormattingTable.add(cfraClone);},public int addConditionalFormatting HSSFConditionalFormatting cf  CFRecordsAggregate cfraClone  cfgetCFRecordsAggregatecloneCFAggregatereturn conditionalFormattingTableaddcfraClone
"public final String toString() {return getClass().getName() + ""["" + this.canonicalName + ""]"";}",public final String toString return getClassgetName    thiscanonicalName  
public void serialize(LittleEndianOutput out) {out.writeShort(getIterations());},public void serializeLittleEndianOutput out outwriteShortgetIterations
"public MatchAllDocsQuery build(QueryNode queryNode) throws QueryNodeException {if (!(queryNode instanceof MatchAllDocsQueryNode)) {throw new QueryNodeException(new MessageImpl(QueryParserMessages.LUCENE_QUERY_CONVERSION_ERROR, queryNode.toQueryString(new EscapeQuerySyntaxImpl()), queryNode.getClass().getName()));}return new MatchAllDocsQuery();}",public MatchAllDocsQuery buildQueryNode queryNode throws QueryNodeException if queryNode instanceof MatchAllDocsQueryNode throw new QueryNodeExceptionnew MessageImplQueryParserMessagesLUCENEQUERYCONVERSIONERROR queryNodetoQueryStringnew EscapeQuerySyntaxImpl queryNodegetClassgetNamereturn new MatchAllDocsQuery
"public LongBuffer get(long[] dst) {return get(dst, 0, dst.length);}",public LongBuffer getlong dst return getdst 0 dstlength
"public String toFormulaString(String[] operands) {StringBuilder buffer = new StringBuilder();buffer.append(operands[ 0 ]);buffer.append(""/"");buffer.append(operands[ 1 ]);return buffer.toString();}",public String toFormulaStringString operands StringBuilder buffer  new StringBuilderbufferappendoperands 0 bufferappendbufferappendoperands 1 return buffertoString
@Override public void clear() {countMap.clear();},Override public void clear countMapclear
"public SpatialArgs(SpatialOperation operation, Shape shape) {if (operation == null || shape == null)throw new NullPointerException(""operation and shape are required"");this.operation = operation;this.shape = shape;}",public SpatialArgsSpatialOperation operation Shape shape if operation  null  shape  nullthrow new NullPointerExceptionoperation and shape are requiredthisoperation  operationthisshape  shape
public int compareTo(Completion o) {return this.utf8.compareTo(o.utf8);},public int compareToCompletion o return thisutf8compareTooutf8
public GetInstancesResult getInstances(GetInstancesRequest request) {request = beforeClientExecution(request);return executeGetInstances(request);},public GetInstancesResult getInstancesGetInstancesRequest request request  beforeClientExecutionrequestreturn executeGetInstancesrequest
public int next() {if (text.getIndex() == text.getEndIndex() || 0 == sentenceStarts.length) {return DONE;} else if (currentSentence < sentenceStarts.length - 1) {text.setIndex(sentenceStarts[++currentSentence]);return current();} else {return last();}},public int next if textgetIndex  textgetEndIndex  0  sentenceStartslength return DONE else if currentSentence  sentenceStartslength  1 textsetIndexsentenceStartscurrentSentencereturn current else return last
"public HSSFClientAnchor getPreferredSize(double scaleX, double scaleY){ImageUtils.setPreferredSize(this, scaleX, scaleY);return getClientAnchor();}",public HSSFClientAnchor getPreferredSizedouble scaleX double scaleYImageUtilssetPreferredSizethis scaleX scaleYreturn getClientAnchor
public CreateTaskSetResult createTaskSet(CreateTaskSetRequest request) {request = beforeClientExecution(request);return executeCreateTaskSet(request);},public CreateTaskSetResult createTaskSetCreateTaskSetRequest request request  beforeClientExecutionrequestreturn executeCreateTaskSetrequest
"public ByteBuffer putFloat(int index, float value) {return putInt(index, Float.floatToRawIntBits(value));}",public ByteBuffer putFloatint index float value return putIntindex FloatfloatToRawIntBitsvalue
"public static void Main(String[] args) throws Exception {String field = null;int numTerms = DEFAULT_NUMTERMS;if (args.length == 0 || args.length > 4) {usage();System.exit(1);}Directory dir = FSDirectory.open(Paths.get(args[0]));Comparator<TermStats> comparator = new DocFreqComparator();for (int i = 1; i < args.length; i++) {if (args[i].equals(""-t"")) {comparator = new TotalTermFreqComparator();}else{try {numTerms = Integer.parseInt(args[i]);} catch (NumberFormatException e) {field=args[i];}}}IndexReader Reader = DirectoryReader.open(dir);TermStats[] terms = getHighFreqTerms(Reader, numTerms, field, comparator);for (int i = 0; i < terms.length; i++) {System.out.printf(Locale.ROOT, ""%s:%s \t totalTF = %,d \t docFreq = %,d \n"",terms[i].field, terms[i].termtext.utf8ToString(), terms[i].totalTermFreq, terms[i].docFreq);}Reader.close();}",public static void MainString args throws Exception String field  nullint numTerms  DEFAULTNUMTERMSif argslength  0  argslength  4 usageSystemexit1Directory dir  FSDirectoryopenPathsgetargs0ComparatorTermStats comparator  new DocFreqComparatorfor int i  1 i  argslength i if argsiequalst comparator  new TotalTermFreqComparatorelsetry numTerms  IntegerparseIntargsi catch NumberFormatException e fieldargsiIndexReader Reader  DirectoryReaderopendirTermStats terms  getHighFreqTermsReader numTerms field comparatorfor int i  0 i  termslength i SystemoutprintfLocaleROOT ss t totalTF  d t docFreq  d ntermsifield termsitermtextutf8ToString termsitotalTermFreq termsidocFreqReaderclose
public static Collection<String> getNotSupportedFunctionNames(){Collection<String> lst = new TreeSet<>();lst.addAll(FunctionEval.getNotSupportedFunctionNames());lst.addAll(AnalysisToolPak.getNotSupportedFunctionNames());return Collections.unmodifiableCollection(lst);},public static CollectionString getNotSupportedFunctionNamesCollectionString lst  new TreeSetlstaddAllFunctionEvalgetNotSupportedFunctionNameslstaddAllAnalysisToolPakgetNotSupportedFunctionNamesreturn CollectionsunmodifiableCollectionlst
public CreateMeetingResult createMeeting(CreateMeetingRequest request) {request = beforeClientExecution(request);return executeCreateMeeting(request);},public CreateMeetingResult createMeetingCreateMeetingRequest request request  beforeClientExecutionrequestreturn executeCreateMeetingrequest
public char get(int index) {checkIndex(index);return byteBuffer.getChar(index * SizeOf.CHAR);},public char getint index checkIndexindexreturn byteBuffergetCharindex  SizeOfCHAR
public GetInstanceSnapshotResult getInstanceSnapshot(GetInstanceSnapshotRequest request) {request = beforeClientExecution(request);return executeGetInstanceSnapshot(request);},public GetInstanceSnapshotResult getInstanceSnapshotGetInstanceSnapshotRequest request request  beforeClientExecutionrequestreturn executeGetInstanceSnapshotrequest
"public static Map<String, Integer> toMap(String[] keys) {Map<String, Integer> m = new HashMap<String, Integer>();for (int i=0; i<keys.length; i++) {m.put(keys[i], i);}return m;}",public static MapString Integer toMapString keys MapString Integer m  new HashMapString Integerfor int i0 ikeyslength i mputkeysi ireturn m
public GetHealthCheckStatusResult getHealthCheckStatus(GetHealthCheckStatusRequest request) {request = beforeClientExecution(request);return executeGetHealthCheckStatus(request);},public GetHealthCheckStatusResult getHealthCheckStatusGetHealthCheckStatusRequest request request  beforeClientExecutionrequestreturn executeGetHealthCheckStatusrequest
public GetReusableDelegationSetResult getReusableDelegationSet(GetReusableDelegationSetRequest request) {request = beforeClientExecution(request);return executeGetReusableDelegationSet(request);},public GetReusableDelegationSetResult getReusableDelegationSetGetReusableDelegationSetRequest request request  beforeClientExecutionrequestreturn executeGetReusableDelegationSetrequest
"public final ValueEval getAbsoluteValue(int row, int col) {int rowOffsetIx = row - _firstRow;int colOffsetIx = col - _firstColumn;if(rowOffsetIx < 0 || rowOffsetIx >= _nRows) {throw new IllegalArgumentException(""Specified row index ("" + row+ "") is outside the allowed range ("" + _firstRow + "".."" + _lastRow + "")"");}if(colOffsetIx < 0 || colOffsetIx >= _nColumns) {throw new IllegalArgumentException(""Specified column index ("" + col+ "") is outside the allowed range ("" + _firstColumn + "".."" + col + "")"");}return getRelativeValue(rowOffsetIx, colOffsetIx);}",public final ValueEval getAbsoluteValueint row int col int rowOffsetIx  row  firstRowint colOffsetIx  col  firstColumnifrowOffsetIx  0  rowOffsetIx  nRows throw new IllegalArgumentExceptionSpecified row index   row  is outside the allowed range   firstRow    lastRow  ifcolOffsetIx  0  colOffsetIx  nColumns throw new IllegalArgumentExceptionSpecified column index   col  is outside the allowed range   firstColumn    col  return getRelativeValuerowOffsetIx colOffsetIx
"public final LongBuffer put(long[] src, int srcOffset, int longCount) {throw new ReadOnlyBufferException();}",public final LongBuffer putlong src int srcOffset int longCount throw new ReadOnlyBufferException
"public final String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""Document<"");for (int i = 0; i < fields.size(); i++) {IndexableField field = fields.get(i);buffer.append(field.toString());if (i != fields.size()-1) {buffer.append("" "");}}buffer.append("">"");return buffer.toString();}",public final String toString StringBuilder buffer  new StringBuilderbufferappendDocumentfor int i  0 i  fieldssize i IndexableField field  fieldsgetibufferappendfieldtoStringif i  fieldssize1 bufferappend bufferappendreturn buffertoString
public StartMatchBackfillResult startMatchBackfill(StartMatchBackfillRequest request) {request = beforeClientExecution(request);return executeStartMatchBackfill(request);},public StartMatchBackfillResult startMatchBackfillStartMatchBackfillRequest request request  beforeClientExecutionrequestreturn executeStartMatchBackfillrequest
public FeatRecord clone() {return copy();},public FeatRecord clone return copy
public DeleteEmailTemplateResult deleteEmailTemplate(DeleteEmailTemplateRequest request) {request = beforeClientExecution(request);return executeDeleteEmailTemplate(request);},public DeleteEmailTemplateResult deleteEmailTemplateDeleteEmailTemplateRequest request request  beforeClientExecutionrequestreturn executeDeleteEmailTemplaterequest
public ListReceiptRuleSetsResult listReceiptRuleSets(ListReceiptRuleSetsRequest request) {request = beforeClientExecution(request);return executeListReceiptRuleSets(request);},public ListReceiptRuleSetsResult listReceiptRuleSetsListReceiptRuleSetsRequest request request  beforeClientExecutionrequestreturn executeListReceiptRuleSetsrequest
public boolean isRowGroupCollapsed(int row) {int collapseRow = findEndOfRowOutlineGroup(row) + 1;return getRow(collapseRow) != null && getRow(collapseRow).getColapsed();},public boolean isRowGroupCollapsedint row int collapseRow  findEndOfRowOutlineGrouprow  1return getRowcollapseRow  null  getRowcollapseRowgetColapsed
public void setPathFilter(TreeFilter filter) {pathFilter = filter != null ? filter : TreeFilter.ALL;},public void setPathFilterTreeFilter filter pathFilter  filter  null  filter  TreeFilterALL
public int getReturnState(int index) {assert index == 0;return returnState;},public int getReturnStateint index assert index  0return returnState
public GroupingSearch setGroupDocsLimit(int groupDocsLimit) {this.groupDocsLimit = groupDocsLimit;return this;},public GroupingSearch setGroupDocsLimitint groupDocsLimit thisgroupDocsLimit  groupDocsLimitreturn this
public final void removeField(String name) {Iterator<IndexableField> it = fields.iterator();while (it.hasNext()) {IndexableField field = it.next();if (field.name().equals(name)) {it.remove();return;}}},public final void removeFieldString name IteratorIndexableField it  fieldsiteratorwhile ithasNext IndexableField field  itnextif fieldnameequalsname itremovereturn
public Double doubleValue(String key) {String value = responseMap.get(key);if (null == value || 0 == value.length()) {return null;}return Double.valueOf(responseMap.get(key));},public Double doubleValueString key String value  responseMapgetkeyif null  value  0  valuelength return nullreturn DoublevalueOfresponseMapgetkey
public DescribeLoadBalancersResult describeLoadBalancers(DescribeLoadBalancersRequest request) {request = beforeClientExecution(request);return executeDescribeLoadBalancers(request);},public DescribeLoadBalancersResult describeLoadBalancersDescribeLoadBalancersRequest request request  beforeClientExecutionrequestreturn executeDescribeLoadBalancersrequest
public SpanQuery[] getClauses() {return clauses.toArray(new SpanQuery[clauses.size()]);},public SpanQuery getClauses return clausestoArraynew SpanQueryclausessize
public MulBlankRecord clone() {return copy();},public MulBlankRecord clone return copy
"public final PersonIdent getTaggerIdent() {final byte[] raw = buffer;final int nameB = RawParseUtils.tagger(raw, 0);if (nameB < 0)return null;return RawParseUtils.parsePersonIdent(raw, nameB);}",public final PersonIdent getTaggerIdent final byte raw  bufferfinal int nameB  RawParseUtilstaggerraw 0if nameB  0return nullreturn RawParseUtilsparsePersonIdentraw nameB
public NameRecord createName(){return addName(new NameRecord());},public NameRecord createNamereturn addNamenew NameRecord
public void setCacheMissesUntilFill(int i) {ensureOpen();cacheMissesUntilFill = i;},public void setCacheMissesUntilFillint i ensureOpencacheMissesUntilFill  i
"public final int hash(BytesRef br) {return hash32(br.bytes, br.offset, br.length);}",public final int hashBytesRef br return hash32brbytes broffset brlength
"public DoubleBuffer get(double[] dst, int dstOffset, int doubleCount) {byteBuffer.limit(limit * SizeOf.DOUBLE);byteBuffer.position(position * SizeOf.DOUBLE);if (byteBuffer instanceof DirectByteBuffer) {((DirectByteBuffer) byteBuffer).get(dst, dstOffset, doubleCount);} else {((HeapByteBuffer) byteBuffer).get(dst, dstOffset, doubleCount);}this.position += doubleCount;return this;}",public DoubleBuffer getdouble dst int dstOffset int doubleCount byteBufferlimitlimit  SizeOfDOUBLEbyteBufferpositionposition  SizeOfDOUBLEif byteBuffer instanceof DirectByteBuffer DirectByteBuffer byteBuffergetdst dstOffset doubleCount else HeapByteBuffer byteBuffergetdst dstOffset doubleCountthisposition  doubleCountreturn this
"public void append(int key, int value) {if (mSize != 0 && key <= mKeys[mSize - 1]) {put(key, value);return;}int pos = mSize;if (pos >= mKeys.length) {int n = ArrayUtils.idealIntArraySize(pos + 1);int[] nkeys = new int[n];int[] nvalues = new int[n];System.arraycopy(mKeys, 0, nkeys, 0, mKeys.length);System.arraycopy(mValues, 0, nvalues, 0, mValues.length);mKeys = nkeys;mValues = nvalues;}mKeys[pos] = key;mValues[pos] = value;mSize = pos + 1;}",public void appendint key int value if mSize  0  key  mKeysmSize  1 putkey valuereturnint pos  mSizeif pos  mKeyslength int n  ArrayUtilsidealIntArraySizepos  1int nkeys  new intnint nvalues  new intnSystemarraycopymKeys 0 nkeys 0 mKeyslengthSystemarraycopymValues 0 nvalues 0 mValueslengthmKeys  nkeysmValues  nvaluesmKeyspos  keymValuespos  valuemSize  pos  1
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1,ValueEval arg2) {try {double d0 = NumericFunction.singleOperandEvaluate(arg0, srcRowIndex, srcColumnIndex);double d1 = NumericFunction.singleOperandEvaluate(arg1, srcRowIndex, srcColumnIndex);ValueEval ve = OperandResolver.getSingleValue(arg2, srcRowIndex, srcColumnIndex);Boolean method = OperandResolver.coerceValueToBoolean(ve, false);return new NumberEval(evaluate(d0, d1, method != null && method.booleanValue()));} catch (EvaluationException e) {return e.getErrorEval();}}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1ValueEval arg2 try double d0  NumericFunctionsingleOperandEvaluatearg0 srcRowIndex srcColumnIndexdouble d1  NumericFunctionsingleOperandEvaluatearg1 srcRowIndex srcColumnIndexValueEval ve  OperandResolvergetSingleValuearg2 srcRowIndex srcColumnIndexBoolean method  OperandResolvercoerceValueToBooleanve falsereturn new NumberEvalevaluated0 d1 method  null  methodbooleanValue catch EvaluationException e return egetErrorEval
"public QueryAllGroupsRequest() {super(""LinkFace"", ""2018-07-20"", ""QueryAllGroups"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public QueryAllGroupsRequest superLinkFace 20180720 QueryAllGroupssetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
"public int replace(char s[], int len) {if (replacement.length > 0) {System.arraycopy(replacement, 0, s, len - suffix.length, replacement.length);}return len - suffix.length + replacement.length;}",public int replacechar s int len if replacementlength  0 Systemarraycopyreplacement 0 s len  suffixlength replacementlengthreturn len  suffixlength  replacementlength
public StandardSyntaxParserTokenManager(CharStream stream){input_stream = stream;},public StandardSyntaxParserTokenManagerCharStream streaminputstream  stream
"public final String getFullMessage() {byte[] raw = buffer;int msgB = RawParseUtils.commitMessage(raw, 0);if (msgB < 0) {return """"; }return RawParseUtils.decode(guessEncoding(), raw, msgB, raw.length);}",public final String getFullMessage byte raw  bufferint msgB  RawParseUtilscommitMessageraw 0if msgB  0 return  return RawParseUtilsdecodeguessEncoding raw msgB rawlength
"public Request<GetPublicAccessBlockRequest> marshall(GetPublicAccessBlockRequest getPublicAccessBlockRequest) {if (getPublicAccessBlockRequest == null) {throw new SdkClientException(""Invalid argument passed to marshall(...)"");}Request<GetPublicAccessBlockRequest> request = new DefaultRequest<GetPublicAccessBlockRequest>(getPublicAccessBlockRequest, ""AWSS3Control"");request.setHttpMethod(HttpMethodName.GET);if (getPublicAccessBlockRequest.getAccountId() != null) {request.addHeader(""x-amz-account-id"", StringUtils.fromString(getPublicAccessBlockRequest.getAccountId()));}String uriResourcePath = ""/v20180820/configuration/publicAccessBlock"";request.setResourcePath(uriResourcePath);return request;}",public RequestGetPublicAccessBlockRequest marshallGetPublicAccessBlockRequest getPublicAccessBlockRequest if getPublicAccessBlockRequest  null throw new SdkClientExceptionInvalid argument passed to marshallRequestGetPublicAccessBlockRequest request  new DefaultRequestGetPublicAccessBlockRequestgetPublicAccessBlockRequest AWSS3ControlrequestsetHttpMethodHttpMethodNameGETif getPublicAccessBlockRequestgetAccountId  null requestaddHeaderxamzaccountid StringUtilsfromStringgetPublicAccessBlockRequestgetAccountIdString uriResourcePath  v20180820configurationpublicAccessBlockrequestsetResourcePathuriResourcePathreturn request
public ChangeTagsForResourceResult changeTagsForResource(ChangeTagsForResourceRequest request) {request = beforeClientExecution(request);return executeChangeTagsForResource(request);},public ChangeTagsForResourceResult changeTagsForResourceChangeTagsForResourceRequest request request  beforeClientExecutionrequestreturn executeChangeTagsForResourcerequest
public void println(char c) {println(String.valueOf(c));},public void printlnchar c printlnStringvalueOfc
public RefUpdate.Result getResult() {return result;},public RefUpdateResult getResult return result
public HSSFRow getRow(int rowIndex) {return _rows.get(Integer.valueOf(rowIndex));},public HSSFRow getRowint rowIndex return rowsgetIntegervalueOfrowIndex
public LongBuffer slice() {byteBuffer.limit(limit * SizeOf.LONG);byteBuffer.position(position * SizeOf.LONG);ByteBuffer bb = byteBuffer.slice().order(byteBuffer.order());LongBuffer result = new LongToByteBufferAdapter(bb);byteBuffer.clear();return result;},public LongBuffer slice byteBufferlimitlimit  SizeOfLONGbyteBufferpositionposition  SizeOfLONGByteBuffer bb  byteBuffersliceorderbyteBufferorderLongBuffer result  new LongToByteBufferAdapterbbbyteBufferclearreturn result
"public void append(byte[] name, FileMode mode, AnyObjectId id) {append(name, 0, name.length, mode, id);}",public void appendbyte name FileMode mode AnyObjectId id appendname 0 namelength mode id
"public String toString() {return String.format(""mode(%d)"", mode);}",public String toString return Stringformatmoded mode
public DescribeScriptResult describeScript(DescribeScriptRequest request) {request = beforeClientExecution(request);return executeDescribeScript(request);},public DescribeScriptResult describeScriptDescribeScriptRequest request request  beforeClientExecutionrequestreturn executeDescribeScriptrequest
"public String toString() {return ""NoMergePolicy"";}",public String toString return NoMergePolicy
public CacheSecurityGroup revokeCacheSecurityGroupIngress(RevokeCacheSecurityGroupIngressRequest request) {request = beforeClientExecution(request);return executeRevokeCacheSecurityGroupIngress(request);},public CacheSecurityGroup revokeCacheSecurityGroupIngressRevokeCacheSecurityGroupIngressRequest request request  beforeClientExecutionrequestreturn executeRevokeCacheSecurityGroupIngressrequest
public final double get(int index) {checkIndex(index);return backingArray[offset + index];},public final double getint index checkIndexindexreturn backingArrayoffset  index
public DeleteVoiceConnectorTerminationResult deleteVoiceConnectorTermination(DeleteVoiceConnectorTerminationRequest request) {request = beforeClientExecution(request);return executeDeleteVoiceConnectorTermination(request);},public DeleteVoiceConnectorTerminationResult deleteVoiceConnectorTerminationDeleteVoiceConnectorTerminationRequest request request  beforeClientExecutionrequestreturn executeDeleteVoiceConnectorTerminationrequest
"public FileTreeIterator(Repository repo) {this(repo,repo.getConfig().get(WorkingTreeOptions.KEY).isDirNoGitLinks() ?NoGitlinksStrategy.INSTANCE :DefaultFileModeStrategy.INSTANCE);}",public FileTreeIteratorRepository repo thisreporepogetConfiggetWorkingTreeOptionsKEYisDirNoGitLinks NoGitlinksStrategyINSTANCE DefaultFileModeStrategyINSTANCE
"public ASCIIFoldingFilter(TokenStream input, boolean preserveOriginal){super(input);this.preserveOriginal = preserveOriginal;}",public ASCIIFoldingFilterTokenStream input boolean preserveOriginalsuperinputthispreserveOriginal  preserveOriginal
public final CharBuffer asCharBuffer() {return CharToByteBufferAdapter.asCharBuffer(this);},public final CharBuffer asCharBuffer return CharToByteBufferAdapterasCharBufferthis
public EmbeddedObjectRefSubRecord clone() {return copy();},public EmbeddedObjectRefSubRecord clone return copy
public DescribeLifecycleHookTypesResult describeLifecycleHookTypes(DescribeLifecycleHookTypesRequest request) {request = beforeClientExecution(request);return executeDescribeLifecycleHookTypes(request);},public DescribeLifecycleHookTypesResult describeLifecycleHookTypesDescribeLifecycleHookTypesRequest request request  beforeClientExecutionrequestreturn executeDescribeLifecycleHookTypesrequest
public String getEncoding() {if (!isOpen()) {return null;}return HistoricalCharsetNames.get(decoder.charset());},public String getEncoding if isOpen return nullreturn HistoricalCharsetNamesgetdecodercharset
public void respondDecisionTaskCompleted(RespondDecisionTaskCompletedRequest request) {request = beforeClientExecution(request);executeRespondDecisionTaskCompleted(request);},public void respondDecisionTaskCompletedRespondDecisionTaskCompletedRequest request request  beforeClientExecutionrequestexecuteRespondDecisionTaskCompletedrequest
public void close() {delegate().close();},public void close delegateclose
public GetStreamingDistributionRequest(String id) {setId(id);},public GetStreamingDistributionRequestString id setIdid
@Override public boolean equals(Object object) {return object instanceof Name&& ((Name) object).name.equalsIgnoreCase(name);},Override public boolean equalsObject object return object instanceof Name Name objectnameequalsIgnoreCasename
public String toString() {return snapshot().toString();},public String toString return snapshottoString
public GetDirectoryResult getDirectory(GetDirectoryRequest request) {request = beforeClientExecution(request);return executeGetDirectory(request);},public GetDirectoryResult getDirectoryGetDirectoryRequest request request  beforeClientExecutionrequestreturn executeGetDirectoryrequest
"public SoraniNormalizationFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public SoraniNormalizationFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public CreateSolutionVersionResult createSolutionVersion(CreateSolutionVersionRequest request) {request = beforeClientExecution(request);return executeCreateSolutionVersion(request);},public CreateSolutionVersionResult createSolutionVersionCreateSolutionVersionRequest request request  beforeClientExecutionrequestreturn executeCreateSolutionVersionrequest
public UpdateWorkteamResult updateWorkteam(UpdateWorkteamRequest request) {request = beforeClientExecution(request);return executeUpdateWorkteam(request);},public UpdateWorkteamResult updateWorkteamUpdateWorkteamRequest request request  beforeClientExecutionrequestreturn executeUpdateWorkteamrequest
"public Matcher region(int start, int end) {return reset(input, start, end);}",public Matcher regionint start int end return resetinput start end
public boolean containsKey(Object o) {if(o == null)throw new NullPointerException();return false;},public boolean containsKeyObject o ifo  nullthrow new NullPointerExceptionreturn false
public UpdateServerCertificateRequest(String serverCertificateName) {setServerCertificateName(serverCertificateName);},public UpdateServerCertificateRequestString serverCertificateName setServerCertificateNameserverCertificateName
public int valueAt(int index) {return mValues[index];},public int valueAtint index return mValuesindex
public byte getCharacterClass(char c) {return characterCategoryMap[c];},public byte getCharacterClasschar c return characterCategoryMapc
public int getBinaryExponent() {return _binaryExponent;},public int getBinaryExponent return binaryExponent
public long getOffset() {return offset;},public long getOffset return offset
public DescribeStackSetResult describeStackSet(DescribeStackSetRequest request) {request = beforeClientExecution(request);return executeDescribeStackSet(request);},public DescribeStackSetResult describeStackSetDescribeStackSetRequest request request  beforeClientExecutionrequestreturn executeDescribeStackSetrequest
public E get(int location) {try {return listIterator(location).next();} catch (NoSuchElementException e) {throw new IndexOutOfBoundsException();}},public E getint location try return listIteratorlocationnext catch NoSuchElementException e throw new IndexOutOfBoundsException
public static boolean isComponentRecord(int sid) {switch (sid) {case ProtectRecord.sid:case ObjectProtectRecord.sid:case ScenarioProtectRecord.sid:case PasswordRecord.sid:return true;}return false;},public static boolean isComponentRecordint sid switch sid case ProtectRecordsidcase ObjectProtectRecordsidcase ScenarioProtectRecordsidcase PasswordRecordsidreturn truereturn false
public long getFilePointer() {return Main.getFilePointer();},public long getFilePointer return MaingetFilePointer
"public String toFormulaString() {return """"; }",public String toFormulaString return  
"public boolean Run(String s) {int p = 0;int l = s.length();for (int i = 0, cp = 0; i < l; i += Character.charCount(cp)) {p = step(p, cp = s.codePointAt(i));if (p == -1) return false;}return accept.get(p);}",public boolean RunString s int p  0int l  slengthfor int i  0 cp  0 i  l i  CharactercharCountcp p  stepp cp  scodePointAtiif p  1 return falsereturn acceptgetp
public GetSchemaAsJsonResult getSchemaAsJson(GetSchemaAsJsonRequest request) {request = beforeClientExecution(request);return executeGetSchemaAsJson(request);},public GetSchemaAsJsonResult getSchemaAsJsonGetSchemaAsJsonRequest request request  beforeClientExecutionrequestreturn executeGetSchemaAsJsonrequest
"public T set(int index, T element) {if (index < 0 || size <= index)throw new IndexOutOfBoundsException(String.valueOf(index));T[] blockRef = directory[toDirectoryIndex(index)];int blockIdx = toBlockIndex(index);T old = blockRef[blockIdx];blockRef[blockIdx] = element;return old;}",public T setint index T element if index  0  size  indexthrow new IndexOutOfBoundsExceptionStringvalueOfindexT blockRef  directorytoDirectoryIndexindexint blockIdx  toBlockIndexindexT old  blockRefblockIdxblockRefblockIdx  elementreturn old
"public int get(int index, long[] arr, int off, int len) {assert len > 0 : ""len must be > 0 (got "" + len + "")"";assert index >= 0 && index < size();assert off + len <= arr.length;final int gets = Math.min(size() - index, len);for (int i = index, o = off, end = index + gets; i < end; ++i, ++o) {arr[o] = get(i);}return gets;}",public int getint index long arr int off int len assert len  0  len must be  0 got   len  assert index  0  index  sizeassert off  len  arrlengthfinal int gets  Mathminsize  index lenfor int i  index o  off end  index  gets i  end i o arro  getireturn gets
"public void addParseListener(ParseTreeListener listener) {if (listener == null) {throw new NullPointerException(""listener"");}if (_parseListeners == null) {_parseListeners = new ArrayList<ParseTreeListener>();}this._parseListeners.add(listener);}",public void addParseListenerParseTreeListener listener if listener  null throw new NullPointerExceptionlistenerif parseListeners  null parseListeners  new ArrayListParseTreeListenerthisparseListenersaddlistener
public CreateQueryLoggingConfigResult createQueryLoggingConfig(CreateQueryLoggingConfigRequest request) {request = beforeClientExecution(request);return executeCreateQueryLoggingConfig(request);},public CreateQueryLoggingConfigResult createQueryLoggingConfigCreateQueryLoggingConfigRequest request request  beforeClientExecutionrequestreturn executeCreateQueryLoggingConfigrequest
public SetIdentityFeedbackForwardingEnabledResult setIdentityFeedbackForwardingEnabled(SetIdentityFeedbackForwardingEnabledRequest request) {request = beforeClientExecution(request);return executeSetIdentityFeedbackForwardingEnabled(request);},public SetIdentityFeedbackForwardingEnabledResult setIdentityFeedbackForwardingEnabledSetIdentityFeedbackForwardingEnabledRequest request request  beforeClientExecutionrequestreturn executeSetIdentityFeedbackForwardingEnabledrequest
"public int getValueAt(int relativeOffset) {if(relativeOffset >= _values.length) {throw new ArrayIndexOutOfBoundsException(""Unable to fetch offset "" + relativeOffset + "" as the "" +""BAT only contains "" + _values.length + "" entries"");}return _values[relativeOffset];}",public int getValueAtint relativeOffset ifrelativeOffset  valueslength throw new ArrayIndexOutOfBoundsExceptionUnable to fetch offset   relativeOffset   as the  BAT only contains   valueslength   entriesreturn valuesrelativeOffset
@Override public boolean equals(Object o) {if (o == this) {return true;}if (!(o instanceof List)) {return false;}List<?> that = (List<?>) o;int s = size;if (that.size() != s) {return false;}Object[] a = array;if (that instanceof RandomAccess) {for (int i = 0; i < s; i++) {Object eThis = a[i];Object ethat = that.get(i);if (eThis == null ? ethat != null : !eThis.equals(ethat)) {return false;}}} else {  Iterator<?> it = that.iterator();for (int i = 0; i < s; i++) {Object eThis = a[i];Object eThat = it.next();if (eThis == null ? eThat != null : !eThis.equals(eThat)) {return false;}}}return true;},Override public boolean equalsObject o if o  this return trueif o instanceof List return falseList that  List oint s  sizeif thatsize  s return falseObject a  arrayif that instanceof RandomAccess for int i  0 i  s i Object eThis  aiObject ethat  thatgetiif eThis  null  ethat  null  eThisequalsethat return false else   Iterator it  thatiteratorfor int i  0 i  s i Object eThis  aiObject eThat  itnextif eThis  null  eThat  null  eThisequalseThat return falsereturn true
public boolean equals(Object o) {if ( o instanceof ATNState ) return stateNumber==((ATNState)o).stateNumber;return false;},public boolean equalsObject o if  o instanceof ATNState  return stateNumberATNStateostateNumberreturn false
"public EmptyTreeIterator createEmptyTreeIterator() {final byte[] n = new byte[Math.max(pathLen + 1, DEFAULT_PATH_SIZE)];System.arraycopy(path, 0, n, 0, pathLen);n[pathLen] = '/';return new EmptyTreeIterator(this, n, pathLen + 1);}",public EmptyTreeIterator createEmptyTreeIterator final byte n  new byteMathmaxpathLen  1 DEFAULTPATHSIZESystemarraycopypath 0 n 0 pathLennpathLen  return new EmptyTreeIteratorthis n pathLen  1
public boolean isOverflow() {return this.type == TYPE_OVERFLOW;},public boolean isOverflow return thistype  TYPEOVERFLOW
public ListQueueTagsResult listQueueTags(ListQueueTagsRequest request) {request = beforeClientExecution(request);return executeListQueueTags(request);},public ListQueueTagsResult listQueueTagsListQueueTagsRequest request request  beforeClientExecutionrequestreturn executeListQueueTagsrequest
"public BuyOriginPicturesRequest() {super(""lubancloud"", ""2018-05-09"", ""BuyOriginPictures"", ""luban"");setMethod(MethodType.POST);}",public BuyOriginPicturesRequest superlubancloud 20180509 BuyOriginPictures lubansetMethodMethodTypePOST
"public static String createSafeSheetName(final String nameProposal, char replaceChar) {if (nameProposal == null) {return ""null"";}if (nameProposal.length() < 1) {return ""empty"";}final int length = Math.min(31, nameProposal.length());final String shortenname = nameProposal.substring(0, length);final StringBuilder result = new StringBuilder(shortenname);for (int i=0; i<length; i++) {char ch = result.charAt(i);switch (ch) {case '\u0000':case '\u0003':case ':':case '/':case '\\':case '?':case '*':case ']':case '[':result.setCharAt(i, replaceChar);break;case '\'':if (i==0 || i==length-1) {result.setCharAt(i, replaceChar);}break;default:}}return result.toString();}",public static String createSafeSheetNamefinal String nameProposal char replaceChar if nameProposal  null return nullif nameProposallength  1 return emptyfinal int length  Mathmin31 nameProposallengthfinal String shortenname  nameProposalsubstring0 lengthfinal StringBuilder result  new StringBuildershortennamefor int i0 ilength i char ch  resultcharAtiswitch ch case u0000case u0003case case case case case case case resultsetCharAti replaceCharbreakcase if i0  ilength1 resultsetCharAti replaceCharbreakdefaultreturn resulttoString
public String readLine() throws IOException {return primitiveTypes.readLine();},public String readLine throws IOException return primitiveTypesreadLine
public void setParentIds(ObjectId... newParents) {parentIds = new ObjectId[newParents.length];for (int i = 0; i < newParents.length; i++)parentIds[i] = newParents[i].copy();},public void setParentIdsObjectId newParents parentIds  new ObjectIdnewParentslengthfor int i  0 i  newParentslength iparentIdsi  newParentsicopy
"public LexerATNConfig(LexerATNConfig c, ATNState state,LexerActionExecutor lexerActionExecutor){super(c, state, c.context, c.semanticContext);this.lexerActionExecutor = lexerActionExecutor;this.passedThroughNonGreedyDecision = checkNonGreedyDecision(c, state);}",public LexerATNConfigLexerATNConfig c ATNState stateLexerActionExecutor lexerActionExecutorsuperc state ccontext csemanticContextthislexerActionExecutor  lexerActionExecutorthispassedThroughNonGreedyDecision  checkNonGreedyDecisionc state
public NormValueSource(String field) {this.field = field;},public NormValueSourceString field thisfield  field
"public static boolean equalsIgnoreCase(String a, String b) {if (References.isSameObject(a, b)) {return true;}if (a.length() != b.length())return false;for (int i = 0; i < a.length(); i++) {if (toLowerCase(a.charAt(i)) != toLowerCase(b.charAt(i)))return false;}return true;}",public static boolean equalsIgnoreCaseString a String b if ReferencesisSameObjecta b return trueif alength  blengthreturn falsefor int i  0 i  alength i if toLowerCaseacharAti  toLowerCasebcharAtireturn falsereturn true
public String getName() {return attributes.getName();},public String getName return attributesgetName
"public float getDistance(String s1, String s2) {int[] mtp = matches(s1, s2);float m = mtp[0];if (m == 0) {return 0f;}float j = ((m / s1.length() + m / s2.length() + (m - mtp[1]) / m)) / 3;float jw = j < getThreshold() ? j : j + Math.min(0.1f, 1f / mtp[3]) * mtp[2]* (1 - j);return jw;}",public float getDistanceString s1 String s2 int mtp  matchess1 s2float m  mtp0if m  0 return 0ffloat j  m  s1length  m  s2length  m  mtp1  m  3float jw  j  getThreshold  j  j  Mathmin01f 1f  mtp3  mtp2 1  jreturn jw
public TokenGroup(TokenStream tokenStream) {offsetAtt = tokenStream.addAttribute(OffsetAttribute.class);termAtt = tokenStream.addAttribute(CharTermAttribute.class);},public TokenGroupTokenStream tokenStream offsetAtt  tokenStreamaddAttributeOffsetAttributeclasstermAtt  tokenStreamaddAttributeCharTermAttributeclass
"public String getString(int i) {return getString(i, i + 1, true);}",public String getStringint i return getStringi i  1 true
public int getCountRead() {return _countRead;},public int getCountRead return countRead
public CreateNetworkAclEntryResult createNetworkAclEntry(CreateNetworkAclEntryRequest request) {request = beforeClientExecution(request);return executeCreateNetworkAclEntry(request);},public CreateNetworkAclEntryResult createNetworkAclEntryCreateNetworkAclEntryRequest request request  beforeClientExecutionrequestreturn executeCreateNetworkAclEntryrequest
public BreakIteratorBoundaryScanner(BreakIterator bi){this.bi = bi;},public BreakIteratorBoundaryScannerBreakIterator bithisbi  bi
public int getOffsetGap(String fieldName) {return getWrappedAnalyzer(fieldName).getOffsetGap(fieldName);},public int getOffsetGapString fieldName return getWrappedAnalyzerfieldNamegetOffsetGapfieldName
"public static double[] grow(double[] array) {return grow(array, 1 + array.length);}",public static double growdouble array return growarray 1  arraylength
"public ParseException(Token currentTokenVal,int[][] expectedTokenSequencesVal,String[] tokenImageVal){super(initialise(currentTokenVal, expectedTokenSequencesVal, tokenImageVal));currentToken = currentTokenVal;expectedTokenSequences = expectedTokenSequencesVal;tokenImage = tokenImageVal;}",public ParseExceptionToken currentTokenValint expectedTokenSequencesValString tokenImageValsuperinitialisecurrentTokenVal expectedTokenSequencesVal tokenImageValcurrentToken  currentTokenValexpectedTokenSequences  expectedTokenSequencesValtokenImage  tokenImageVal
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[PLOTAREA]\n"");buffer.append(""[/PLOTAREA]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendPLOTAREAnbufferappendPLOTAREAnreturn buffertoString
public DescribeClustersResult describeClusters() {return describeClusters(new DescribeClustersRequest());},public DescribeClustersResult describeClusters return describeClustersnew DescribeClustersRequest
public void setDoubleValue(double value) {super.setLongValue(Double.doubleToRawLongBits(value));},public void setDoubleValuedouble value supersetLongValueDoubledoubleToRawLongBitsvalue
public CreateSolutionResult createSolution(CreateSolutionRequest request) {request = beforeClientExecution(request);return executeCreateSolution(request);},public CreateSolutionResult createSolutionCreateSolutionRequest request request  beforeClientExecutionrequestreturn executeCreateSolutionrequest
"public static Packed64SingleBlock create(int valueCount, int bitsPerValue) {switch (bitsPerValue) {case 1:return new Packed64SingleBlock1(valueCount);case 2:return new Packed64SingleBlock2(valueCount);case 3:return new Packed64SingleBlock3(valueCount);case 4:return new Packed64SingleBlock4(valueCount);case 5:return new Packed64SingleBlock5(valueCount);case 6:return new Packed64SingleBlock6(valueCount);case 7:return new Packed64SingleBlock7(valueCount);case 8:return new Packed64SingleBlock8(valueCount);case 9:return new Packed64SingleBlock9(valueCount);case 10:return new Packed64SingleBlock10(valueCount);case 12:return new Packed64SingleBlock12(valueCount);case 16:return new Packed64SingleBlock16(valueCount);case 21:return new Packed64SingleBlock21(valueCount);case 32:return new Packed64SingleBlock32(valueCount);default:throw new IllegalArgumentException(""Unsupported number of bits per value: "" + 32);}}",public static Packed64SingleBlock createint valueCount int bitsPerValue switch bitsPerValue case 1return new Packed64SingleBlock1valueCountcase 2return new Packed64SingleBlock2valueCountcase 3return new Packed64SingleBlock3valueCountcase 4return new Packed64SingleBlock4valueCountcase 5return new Packed64SingleBlock5valueCountcase 6return new Packed64SingleBlock6valueCountcase 7return new Packed64SingleBlock7valueCountcase 8return new Packed64SingleBlock8valueCountcase 9return new Packed64SingleBlock9valueCountcase 10return new Packed64SingleBlock10valueCountcase 12return new Packed64SingleBlock12valueCountcase 16return new Packed64SingleBlock16valueCountcase 21return new Packed64SingleBlock21valueCountcase 32return new Packed64SingleBlock32valueCountdefaultthrow new IllegalArgumentExceptionUnsupported number of bits per value   32
public FieldAndTerm clone() {return new FieldAndTerm(this);},public FieldAndTerm clone return new FieldAndTermthis
public DescribeAlgorithmResult describeAlgorithm(DescribeAlgorithmRequest request) {request = beforeClientExecution(request);return executeDescribeAlgorithm(request);},public DescribeAlgorithmResult describeAlgorithmDescribeAlgorithmRequest request request  beforeClientExecutionrequestreturn executeDescribeAlgorithmrequest
"public InvalidClassException(String className, String detailMessage) {super(detailMessage);this.classname = className;}",public InvalidClassExceptionString className String detailMessage superdetailMessagethisclassname  className
public ExportTransitGatewayRoutesResult exportTransitGatewayRoutes(ExportTransitGatewayRoutesRequest request) {request = beforeClientExecution(request);return executeExportTransitGatewayRoutes(request);},public ExportTransitGatewayRoutesResult exportTransitGatewayRoutesExportTransitGatewayRoutesRequest request request  beforeClientExecutionrequestreturn executeExportTransitGatewayRoutesrequest
"public TokenStream create(TokenStream input) {final TokenStream filter = new TypeTokenFilter(input, stopTypes, useWhitelist);return filter;}",public TokenStream createTokenStream input final TokenStream filter  new TypeTokenFilterinput stopTypes useWhitelistreturn filter
public final void yyreset(java.io.Reader Reader) {zzReader = Reader;zzAtBOL  = true;zzAtEOF  = false;zzEOFDone = false;zzEndRead = zzStartRead = 0;zzCurrentPos = zzMarkedPos = 0;zzFinalHighSurrogate = 0;yyline = yychar = yycolumn = 0;zzLexicalState = YYINITIAL;if (zzBuffer.length > ZZ_BUFFERSIZE)zzBuffer = new char[ZZ_BUFFERSIZE];},public final void yyresetjavaioReader Reader zzReader  ReaderzzAtBOL   truezzAtEOF   falsezzEOFDone  falsezzEndRead  zzStartRead  0zzCurrentPos  zzMarkedPos  0zzFinalHighSurrogate  0yyline  yychar  yycolumn  0zzLexicalState  YYINITIALif zzBufferlength  ZZBUFFERSIZEzzBuffer  new charZZBUFFERSIZE
"public int compareTo(SegmentInfoAndLevel other) {return Float.compare(other.level, level);}",public int compareToSegmentInfoAndLevel other return Floatcompareotherlevel level
"public FrenchMinimalStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public FrenchMinimalStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public AreaErrPtg(LittleEndianInput in)  {unused1 = in.readInt();unused2 = in.readInt();},public AreaErrPtgLittleEndianInput in  unused1  inreadIntunused2  inreadInt
public String getRemoteTrackingBranch() {return remoteTrackingBranch;},public String getRemoteTrackingBranch return remoteTrackingBranch
public boolean equals(Object obj) {if (this == obj)return true;if (obj == null)return false;if (getClass() != obj.getClass())return false;FieldVals other = (FieldVals) obj;if (fieldName == null) {if (other.fieldName != null)return false;} else if (!fieldName.equals(other.fieldName))return false;if (maxEdits != other.maxEdits) {return false;}if (prefixLength != other.prefixLength)return false;if (queryString == null) {return other.queryString == null;} else return queryString.equals(other.queryString);},public boolean equalsObject obj if this  objreturn trueif obj  nullreturn falseif getClass  objgetClassreturn falseFieldVals other  FieldVals objif fieldName  null if otherfieldName  nullreturn false else if fieldNameequalsotherfieldNamereturn falseif maxEdits  othermaxEdits return falseif prefixLength  otherprefixLengthreturn falseif queryString  null return otherqueryString  null else return queryStringequalsotherqueryString
public void setMaxChainLength(int maxLen) {maxChainLength = maxLen;},public void setMaxChainLengthint maxLen maxChainLength  maxLen
public DeleteReusableDelegationSetResult deleteReusableDelegationSet(DeleteReusableDelegationSetRequest request) {request = beforeClientExecution(request);return executeDeleteReusableDelegationSet(request);},public DeleteReusableDelegationSetResult deleteReusableDelegationSetDeleteReusableDelegationSetRequest request request  beforeClientExecutionrequestreturn executeDeleteReusableDelegationSetrequest
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[HEADER]\n"");buffer.append(""    .header = "").append(getText()).append(""\n"");buffer.append(""[/HEADER]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendHEADERnbufferappend    header  appendgetTextappendnbufferappendHEADERnreturn buffertoString
"public void writeStringData(String text) {boolean is16bitEncoded = StringUtil.hasMultibyte(text);int keepTogetherSize = 1 + 1; int optionFlags = 0x00;if (is16bitEncoded) {optionFlags |= 0x01;keepTogetherSize += 1; }writeContinueIfRequired(keepTogetherSize);writeByte(optionFlags);writeCharacterData(text, is16bitEncoded);}",public void writeStringDataString text boolean is16bitEncoded  StringUtilhasMultibytetextint keepTogetherSize  1  1 int optionFlags  0x00if is16bitEncoded optionFlags  0x01keepTogetherSize  1 writeContinueIfRequiredkeepTogetherSizewriteByteoptionFlagswriteCharacterDatatext is16bitEncoded
"public void nextBuffer() {if (1+bufferUpto == buffers.length) {byte[][] newBuffers = new byte[ArrayUtil.oversize(buffers.length+1,NUM_BYTES_OBJECT_REF)][];System.arraycopy(buffers, 0, newBuffers, 0, buffers.length);buffers = newBuffers;}buffer = buffers[1+bufferUpto] = allocator.getByteBlock();bufferUpto++;byteUpto = 0;byteOffset += BYTE_BLOCK_SIZE;}",public void nextBuffer if 1bufferUpto  bufferslength byte newBuffers  new byteArrayUtiloversizebufferslength1NUMBYTESOBJECTREFSystemarraycopybuffers 0 newBuffers 0 bufferslengthbuffers  newBuffersbuffer  buffers1bufferUpto  allocatorgetByteBlockbufferUptobyteUpto  0byteOffset  BYTEBLOCKSIZE
"public LruTaxonomyWriterCache(int cacheSize, LRUType lruType) {if (lruType == LRUType.LRU_HASHED) {this.cache = new NameHashIntCacheLRU(cacheSize);} else {this.cache = new NameIntCacheLRU(cacheSize);}}",public LruTaxonomyWriterCacheint cacheSize LRUType lruType if lruType  LRUTypeLRUHASHED thiscache  new NameHashIntCacheLRUcacheSize else thiscache  new NameIntCacheLRUcacheSize
public boolean isShowSeriesKey(){return showSeriesKey.isSet(field_1_options);},public boolean isShowSeriesKeyreturn showSeriesKeyisSetfield1options
"public static String toHex(final byte[] value){StringBuilder retVal = new StringBuilder();retVal.append('[');if (value != null && value.length > 0){for(int x = 0; x < value.length; x++){if (x>0) {retVal.append("", "");}retVal.append(toHex(value[x]));}}retVal.append(']');return retVal.toString();}",public static String toHexfinal byte valueStringBuilder retVal  new StringBuilderretValappendif value  null  valuelength  0forint x  0 x  valuelength xif x0 retValappend retValappendtoHexvaluexretValappendreturn retValtoString
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeShort(field_1_index_extern_sheet);writeCoordinates(out);},public void writeLittleEndianOutput out outwriteBytesid  getPtgClassoutwriteShortfield1indexexternsheetwriteCoordinatesout
public void flush() {writer.flush();},public void flush writerflush
"public UsernamePasswordCredentialsProvider(String username, char[] password) {this.username = username;this.password = password;}",public UsernamePasswordCredentialsProviderString username char password thisusername  usernamethispassword  password
public final List<String> getFooterLines(FooterKey keyName) {final List<FooterLine> src = getFooterLines();if (src.isEmpty())return Collections.emptyList();final ArrayList<String> r = new ArrayList<>(src.size());for (FooterLine f : src) {if (f.matches(keyName))r.add(f.getValue());}return r;},public final ListString getFooterLinesFooterKey keyName final ListFooterLine src  getFooterLinesif srcisEmptyreturn CollectionsemptyListfinal ArrayListString r  new ArrayListsrcsizefor FooterLine f  src if fmatcheskeyNameraddfgetValuereturn r
public ActivityTaskStatus recordActivityTaskHeartbeat(RecordActivityTaskHeartbeatRequest request) {request = beforeClientExecution(request);return executeRecordActivityTaskHeartbeat(request);},public ActivityTaskStatus recordActivityTaskHeartbeatRecordActivityTaskHeartbeatRequest request request  beforeClientExecutionrequestreturn executeRecordActivityTaskHeartbeatrequest
public DescribeStepResult describeStep(DescribeStepRequest request) {request = beforeClientExecution(request);return executeDescribeStep(request);},public DescribeStepResult describeStepDescribeStepRequest request request  beforeClientExecutionrequestreturn executeDescribeSteprequest
"public DeleteMessageBatchResult deleteMessageBatch(String queueUrl, java.util.List<DeleteMessageBatchRequestEntry> entries) {return deleteMessageBatch(new DeleteMessageBatchRequest().withQueueUrl(queueUrl).withEntries(entries));}",public DeleteMessageBatchResult deleteMessageBatchString queueUrl javautilListDeleteMessageBatchRequestEntry entries return deleteMessageBatchnew DeleteMessageBatchRequestwithQueueUrlqueueUrlwithEntriesentries
"public QueryScorer(Query query, IndexReader Reader, String field) {init(query, field, Reader, true);}",public QueryScorerQuery query IndexReader Reader String field initquery field Reader true
public CreateVpcPeeringAuthorizationResult createVpcPeeringAuthorization(CreateVpcPeeringAuthorizationRequest request) {request = beforeClientExecution(request);return executeCreateVpcPeeringAuthorization(request);},public CreateVpcPeeringAuthorizationResult createVpcPeeringAuthorizationCreateVpcPeeringAuthorizationRequest request request  beforeClientExecutionrequestreturn executeCreateVpcPeeringAuthorizationrequest
public boolean contains(Object object) {if (object != null) {for (E element : a) {if (object.equals(element)) {return true;}}} else {for (E element : a) {if (element == null) {return true;}}}return false;},public boolean containsObject object if object  null for E element  a if objectequalselement return true else for E element  a if element  null return truereturn false
public DescribeDBSubnetGroupsResult describeDBSubnetGroups(DescribeDBSubnetGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeDBSubnetGroups(request);},public DescribeDBSubnetGroupsResult describeDBSubnetGroupsDescribeDBSubnetGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeDBSubnetGroupsrequest
"public JobFlowExecutionStatusDetail(JobFlowExecutionState state, java.util.Date creationDateTime) {setState(state.toString());setCreationDateTime(creationDateTime);}",public JobFlowExecutionStatusDetailJobFlowExecutionState state javautilDate creationDateTime setStatestatetoStringsetCreationDateTimecreationDateTime
"public String toString() {return ""more"";}",public String toString return more
"public KeyValue(String key, String value) {setKey(key);setValue(value);}",public KeyValueString key String value setKeykeysetValuevalue
"public void balancedTree(Object[] tokens, Object[] vals, int lo, int hi,TernaryTreeNode root) {if (lo > hi) return;int mid = (lo + hi) / 2;root = insert(root, (String) tokens[mid], vals[mid], 0);balancedTree(tokens, vals, lo, mid - 1, root);balancedTree(tokens, vals, mid + 1, hi, root);}",public void balancedTreeObject tokens Object vals int lo int hiTernaryTreeNode root if lo  hi returnint mid  lo  hi  2root  insertroot String tokensmid valsmid 0balancedTreetokens vals lo mid  1 rootbalancedTreetokens vals mid  1 hi root
public PlotAreaRecord clone() {return copy();},public PlotAreaRecord clone return copy
public DeleteSecurityConfigurationResult deleteSecurityConfiguration(DeleteSecurityConfigurationRequest request) {request = beforeClientExecution(request);return executeDeleteSecurityConfiguration(request);},public DeleteSecurityConfigurationResult deleteSecurityConfigurationDeleteSecurityConfigurationRequest request request  beforeClientExecutionrequestreturn executeDeleteSecurityConfigurationrequest
@Override public String toString() {return mapEntry.toString();},Override public String toString return mapEntrytoString
"public byte[] getCachedBytes(int sizeLimit) throws LargeObjectException,MissingObjectException, IOException {if (!isLarge())return getCachedBytes();try (ObjectStream in = openStream()) {long sz = in.getSize();if (sizeLimit < sz)throw new LargeObjectException.ExceedsLimit(sizeLimit, sz);if (Integer.MAX_VALUE < sz)throw new LargeObjectException.ExceedsByteArrayLimit();byte[] buf;try {buf = new byte[(int) sz];} catch (OutOfMemoryError notEnoughHeap) {throw new LargeObjectException.OutOfMemory(notEnoughHeap);}IO.readFully(in, buf, 0, buf.length);return buf;}}",public byte getCachedBytesint sizeLimit throws LargeObjectExceptionMissingObjectException IOException if isLargereturn getCachedBytestry ObjectStream in  openStream long sz  ingetSizeif sizeLimit  szthrow new LargeObjectExceptionExceedsLimitsizeLimit szif IntegerMAXVALUE  szthrow new LargeObjectExceptionExceedsByteArrayLimitbyte buftry buf  new byteint sz catch OutOfMemoryError notEnoughHeap throw new LargeObjectExceptionOutOfMemorynotEnoughHeapIOreadFullyin buf 0 buflengthreturn buf
public ListJobsByStatusResult listJobsByStatus(ListJobsByStatusRequest request) {request = beforeClientExecution(request);return executeListJobsByStatus(request);},public ListJobsByStatusResult listJobsByStatusListJobsByStatusRequest request request  beforeClientExecutionrequestreturn executeListJobsByStatusrequest
public UpdateClusterVersionResult updateClusterVersion(UpdateClusterVersionRequest request) {request = beforeClientExecution(request);return executeUpdateClusterVersion(request);},public UpdateClusterVersionResult updateClusterVersionUpdateClusterVersionRequest request request  beforeClientExecutionrequestreturn executeUpdateClusterVersionrequest
public PushCommand setForce(boolean force) {checkCallable();this.force = force;return this;},public PushCommand setForceboolean force checkCallablethisforce  forcereturn this
public ListStreamsResult listStreams(ListStreamsRequest request) {request = beforeClientExecution(request);return executeListStreams(request);},public ListStreamsResult listStreamsListStreamsRequest request request  beforeClientExecutionrequestreturn executeListStreamsrequest
public boolean wasEscaped(int index) {return this.wasEscaped[index];},public boolean wasEscapedint index return thiswasEscapedindex
public void setNewObjectId(AnyObjectId id) {newValue = id.copy();},public void setNewObjectIdAnyObjectId id newValue  idcopy
public BatchRefUpdate newBatchUpdate() {return new BatchRefUpdate(this);},public BatchRefUpdate newBatchUpdate return new BatchRefUpdatethis
"public String toString() {return getClass().getSimpleName() + ""(fields="" + fields.size() + "",delegate="" + postingsReader + "")"";}",public String toString return getClassgetSimpleName  fields  fieldssize  delegate  postingsReader  
public CreateTrafficMirrorFilterRuleResult createTrafficMirrorFilterRule(CreateTrafficMirrorFilterRuleRequest request) {request = beforeClientExecution(request);return executeCreateTrafficMirrorFilterRule(request);},public CreateTrafficMirrorFilterRuleResult createTrafficMirrorFilterRuleCreateTrafficMirrorFilterRuleRequest request request  beforeClientExecutionrequestreturn executeCreateTrafficMirrorFilterRulerequest
public SendEventResult sendEvent(SendEventRequest request) {request = beforeClientExecution(request);return executeSendEvent(request);},public SendEventResult sendEventSendEventRequest request request  beforeClientExecutionrequestreturn executeSendEventrequest
public MissingRowDummyRecord(int rowNumber) {this.rowNumber = rowNumber;},public MissingRowDummyRecordint rowNumber thisrowNumber  rowNumber
public final int getLengthB() {return endB - beginB;},public final int getLengthB return endB  beginB
"public void decode(long[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = blocks[blocksOffset++];for (int shift = 63; shift >= 0; shift -= 1) {values[valuesOffset++] = (int) ((block >>> shift) & 1);}}}",public void decodelong blocks int blocksOffset int values int valuesOffset int iterations for int i  0 i  iterations i final long block  blocksblocksOffsetfor int shift  63 shift  0 shift  1 valuesvaluesOffset  int block  shift  1
public void writeInt(int value) throws IOException {checkWritePrimitiveTypes();primitiveTypes.writeInt(value);},public void writeIntint value throws IOException checkWritePrimitiveTypesprimitiveTypeswriteIntvalue
"public ByteBuffer putInt(int index, int value) {throw new ReadOnlyBufferException();}",public ByteBuffer putIntint index int value throw new ReadOnlyBufferException
public K next() {return super.nextEntry().getKey();},public K next return supernextEntrygetKey
public RenameDetectionType getRenameDetectionType() {return renameDetectionType;},public RenameDetectionType getRenameDetectionType return renameDetectionType
public ReplaceNetworkAclAssociationResult replaceNetworkAclAssociation(ReplaceNetworkAclAssociationRequest request) {request = beforeClientExecution(request);return executeReplaceNetworkAclAssociation(request);},public ReplaceNetworkAclAssociationResult replaceNetworkAclAssociationReplaceNetworkAclAssociationRequest request request  beforeClientExecutionrequestreturn executeReplaceNetworkAclAssociationrequest
public String getFontName(){return _fontName;},public String getFontNamereturn fontName
public ViewSourceRecord(RecordInputStream in) {vs = in.readShort();},public ViewSourceRecordRecordInputStream in vs  inreadShort
public boolean hasTrackingRefUpdate() {return trackingRefUpdate != null;},public boolean hasTrackingRefUpdate return trackingRefUpdate  null
"public boolean matches(int symbol, int minVocabSymbol, int maxVocabSymbol) {return set.contains(symbol);}",public boolean matchesint symbol int minVocabSymbol int maxVocabSymbol return setcontainssymbol
"public ValueEval evaluate(EvaluationCell srcCell) {int sheetIndex = getSheetIndex(srcCell.getSheet());return evaluateAny(srcCell, sheetIndex, srcCell.getRowIndex(), srcCell.getColumnIndex(), new EvaluationTracker(_cache));}",public ValueEval evaluateEvaluationCell srcCell int sheetIndex  getSheetIndexsrcCellgetSheetreturn evaluateAnysrcCell sheetIndex srcCellgetRowIndex srcCellgetColumnIndex new EvaluationTrackercache
public AcceptTransitGatewayVpcAttachmentResult acceptTransitGatewayVpcAttachment(AcceptTransitGatewayVpcAttachmentRequest request) {request = beforeClientExecution(request);return executeAcceptTransitGatewayVpcAttachment(request);},public AcceptTransitGatewayVpcAttachmentResult acceptTransitGatewayVpcAttachmentAcceptTransitGatewayVpcAttachmentRequest request request  beforeClientExecutionrequestreturn executeAcceptTransitGatewayVpcAttachmentrequest
"public String toString() {return ""<opaque schema='"" + this.schema + ""' value='"" + this.value + ""'/>"";}",public String toString return opaque schema  thisschema   value  thisvalue  
"public static FuzzySet createSetBasedOnQuality(int maxNumUniqueValues, float desiredMaxSaturation){int setSize=getNearestSetSize(maxNumUniqueValues,desiredMaxSaturation);return new FuzzySet(new FixedBitSet(setSize+1),setSize, hashFunctionForVersion(VERSION_CURRENT));}",public static FuzzySet createSetBasedOnQualityint maxNumUniqueValues float desiredMaxSaturationint setSizegetNearestSetSizemaxNumUniqueValuesdesiredMaxSaturationreturn new FuzzySetnew FixedBitSetsetSize1setSize hashFunctionForVersionVERSIONCURRENT
"public DeregisterInstancesFromLoadBalancerRequest(String loadBalancerName, java.util.List<Instance> instances) {setLoadBalancerName(loadBalancerName);setInstances(instances);}",public DeregisterInstancesFromLoadBalancerRequestString loadBalancerName javautilListInstance instances setLoadBalancerNameloadBalancerNamesetInstancesinstances
public DeleteIntegrationResult deleteIntegration(DeleteIntegrationRequest request) {request = beforeClientExecution(request);return executeDeleteIntegration(request);},public DeleteIntegrationResult deleteIntegrationDeleteIntegrationRequest request request  beforeClientExecutionrequestreturn executeDeleteIntegrationrequest
public Ref3DPtg(LittleEndianInput in)  {field_1_index_extern_sheet = in.readShort();readCoordinates(in);},public Ref3DPtgLittleEndianInput in  field1indexexternsheet  inreadShortreadCoordinatesin
public synchronized E peek() {try {return (E) elementData[elementCount - 1];} catch (IndexOutOfBoundsException e) {throw new EmptyStackException();}},public synchronized E peek try return E elementDataelementCount  1 catch IndexOutOfBoundsException e throw new EmptyStackException
public CheckDomainTransferabilityResult checkDomainTransferability(CheckDomainTransferabilityRequest request) {request = beforeClientExecution(request);return executeCheckDomainTransferability(request);},public CheckDomainTransferabilityResult checkDomainTransferabilityCheckDomainTransferabilityRequest request request  beforeClientExecutionrequestreturn executeCheckDomainTransferabilityrequest
@Override public Iterator<K> iterator() {return new MultisetKeyIterator();},Override public IteratorK iterator return new MultisetKeyIterator
public InitiateJobResult initiateJob(InitiateJobRequest request) {request = beforeClientExecution(request);return executeInitiateJob(request);},public InitiateJobResult initiateJobInitiateJobRequest request request  beforeClientExecutionrequestreturn executeInitiateJobrequest
"public StempelPolishStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public StempelPolishStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public void removeLastAuthor() {remove1stProperty(PropertyIDMap.PID_LASTAUTHOR);},public void removeLastAuthor remove1stPropertyPropertyIDMapPIDLASTAUTHOR
"public void decRef() {final int rc = refCount.decrementAndGet();assert rc >= 0: ""seg="" + info;}",public void decRef final int rc  refCountdecrementAndGetassert rc  0 seg  info
"public String toString() {return ""<fuzzy field='"" + this.field + ""' similarity='"" + this.similarity+ ""' term='"" + this.text + ""'/>"";}",public String toString return fuzzy field  thisfield   similarity  thissimilarity  term  thistext  
"public static void putCompressedUnicode(String input, LittleEndianOutput out) {byte[] bytes = input.getBytes(ISO_8859_1);out.write(bytes);}",public static void putCompressedUnicodeString input LittleEndianOutput out byte bytes  inputgetBytesISO88591outwritebytes
"public void append(final BytesRef bytes) {int bytesLeft = bytes.length;int offset = bytes.offset;while (bytesLeft > 0) {int bufferLeft = BYTE_BLOCK_SIZE - byteUpto;if (bytesLeft < bufferLeft) {System.arraycopy(bytes.bytes, offset, buffer, byteUpto, bytesLeft);byteUpto += bytesLeft;break;} else {if (bufferLeft > 0) {System.arraycopy(bytes.bytes, offset, buffer, byteUpto, bufferLeft);}nextBuffer();bytesLeft -= bufferLeft;offset += bufferLeft;}}}",public void appendfinal BytesRef bytes int bytesLeft  byteslengthint offset  bytesoffsetwhile bytesLeft  0 int bufferLeft  BYTEBLOCKSIZE  byteUptoif bytesLeft  bufferLeft Systemarraycopybytesbytes offset buffer byteUpto bytesLeftbyteUpto  bytesLeftbreak else if bufferLeft  0 Systemarraycopybytesbytes offset buffer byteUpto bufferLeftnextBufferbytesLeft  bufferLeftoffset  bufferLeft
public GetBundlesResult getBundles(GetBundlesRequest request) {request = beforeClientExecution(request);return executeGetBundles(request);},public GetBundlesResult getBundlesGetBundlesRequest request request  beforeClientExecutionrequestreturn executeGetBundlesrequest
public StopAssessmentRunResult stopAssessmentRun(StopAssessmentRunRequest request) {request = beforeClientExecution(request);return executeStopAssessmentRun(request);},public StopAssessmentRunResult stopAssessmentRunStopAssessmentRunRequest request request  beforeClientExecutionrequestreturn executeStopAssessmentRunrequest
public CreateFolderResult createFolder(CreateFolderRequest request) {request = beforeClientExecution(request);return executeCreateFolder(request);},public CreateFolderResult createFolderCreateFolderRequest request request  beforeClientExecutionrequestreturn executeCreateFolderrequest
"public ChangeResourceRecordSetsRequest(String hostedZoneId, ChangeBatch changeBatch) {setHostedZoneId(hostedZoneId);setChangeBatch(changeBatch);}",public ChangeResourceRecordSetsRequestString hostedZoneId ChangeBatch changeBatch setHostedZoneIdhostedZoneIdsetChangeBatchchangeBatch
public CreateDeploymentStrategyResult createDeploymentStrategy(CreateDeploymentStrategyRequest request) {request = beforeClientExecution(request);return executeCreateDeploymentStrategy(request);},public CreateDeploymentStrategyResult createDeploymentStrategyCreateDeploymentStrategyRequest request request  beforeClientExecutionrequestreturn executeCreateDeploymentStrategyrequest
public DeleteCacheClusterRequest(String cacheClusterId) {setCacheClusterId(cacheClusterId);},public DeleteCacheClusterRequestString cacheClusterId setCacheClusterIdcacheClusterId
"public final ValueEval evaluate(ValueEval[] args, int srcRowIndex, int srcColumnIndex) {switch (args.length) {case 2:return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1]);case 3:return evaluate(srcRowIndex, srcColumnIndex, args[0], args[1], args[2]);}return ErrorEval.VALUE_INVALID;}",public final ValueEval evaluateValueEval args int srcRowIndex int srcColumnIndex switch argslength case 2return evaluatesrcRowIndex srcColumnIndex args0 args1case 3return evaluatesrcRowIndex srcColumnIndex args0 args1 args2return ErrorEvalVALUEINVALID
public GroupingSearch setAllGroupHeads(boolean allGroupHeads) {this.allGroupHeads = allGroupHeads;return this;},public GroupingSearch setAllGroupHeadsboolean allGroupHeads thisallGroupHeads  allGroupHeadsreturn this
"public String dequote(String in) {final byte[] b = Constants.encode(in);return dequote(b, 0, b.length);}",public String dequoteString in final byte b  Constantsencodeinreturn dequoteb 0 blength
public boolean isEmpty() {return entrySet().isEmpty();},public boolean isEmpty return entrySetisEmpty
"public Query makeLuceneQueryFieldNoBoost(String fieldName, BasicQueryFactory qf) {return SrndBooleanQuery.makeBooleanQuery( makeLuceneSubQueriesField(fieldName, qf), BooleanClause.Occur.MUST);}",public Query makeLuceneQueryFieldNoBoostString fieldName BasicQueryFactory qf return SrndBooleanQuerymakeBooleanQuery makeLuceneSubQueriesFieldfieldName qf BooleanClauseOccurMUST
public long getSize() {return data.length;},public long getSize return datalength
public CreatePhoneNumberOrderResult createPhoneNumberOrder(CreatePhoneNumberOrderRequest request) {request = beforeClientExecution(request);return executeCreatePhoneNumberOrder(request);},public CreatePhoneNumberOrderResult createPhoneNumberOrderCreatePhoneNumberOrderRequest request request  beforeClientExecutionrequestreturn executeCreatePhoneNumberOrderrequest
"public ShortBuffer get(short[] dst, int dstOffset, int shortCount) {byteBuffer.limit(limit * SizeOf.SHORT);byteBuffer.position(position * SizeOf.SHORT);if (byteBuffer instanceof DirectByteBuffer) {((DirectByteBuffer) byteBuffer).get(dst, dstOffset, shortCount);} else {((HeapByteBuffer) byteBuffer).get(dst, dstOffset, shortCount);}this.position += shortCount;return this;}",public ShortBuffer getshort dst int dstOffset int shortCount byteBufferlimitlimit  SizeOfSHORTbyteBufferpositionposition  SizeOfSHORTif byteBuffer instanceof DirectByteBuffer DirectByteBuffer byteBuffergetdst dstOffset shortCount else HeapByteBuffer byteBuffergetdst dstOffset shortCountthisposition  shortCountreturn this
public DetectModerationLabelsResult detectModerationLabels(DetectModerationLabelsRequest request) {request = beforeClientExecution(request);return executeDetectModerationLabels(request);},public DetectModerationLabelsResult detectModerationLabelsDetectModerationLabelsRequest request request  beforeClientExecutionrequestreturn executeDetectModerationLabelsrequest
public UncalcedRecord(RecordInputStream in) {_reserved = in.readShort(); },public UncalcedRecordRecordInputStream in reserved  inreadShort 
"public String handlePart(Matcher m, String part, CellFormatType type,StringBuffer desc) {int pos = desc.length();char firstCh = part.charAt(0);switch (firstCh) {case '[':if (part.length() < 3)break;if (topmost != null)throw new IllegalArgumentException(""Duplicate '[' times in format"");part = part.toLowerCase(Locale.ROOT);int specLen = part.length() - 2;topmost = assignSpec(part.charAt(1), pos, specLen);return part.substring(1, 1 + specLen);case 'h':case 'm':case 's':case '0':part = part.toLowerCase(Locale.ROOT);assignSpec(part.charAt(0), pos, part.length());return part;case '\n':return ""%n"";case '\""':part = part.substring(1, part.length() - 1);break;case '\\':part = part.substring(1);break;case '*':if (part.length() > 1)part = CellFormatPart.expandChar(part);break;case '_':return null;}return PERCENTS.matcher(part).replaceAll(""%%"");}",public String handlePartMatcher m String part CellFormatType typeStringBuffer desc int pos  desclengthchar firstCh  partcharAt0switch firstCh case if partlength  3breakif topmost  nullthrow new IllegalArgumentExceptionDuplicate  times in formatpart  parttoLowerCaseLocaleROOTint specLen  partlength  2topmost  assignSpecpartcharAt1 pos specLenreturn partsubstring1 1  specLencase hcase mcase scase 0part  parttoLowerCaseLocaleROOTassignSpecpartcharAt0 pos partlengthreturn partcase nreturn ncase part  partsubstring1 partlength  1breakcase part  partsubstring1breakcase if partlength  1part  CellFormatPartexpandCharpartbreakcase return nullreturn PERCENTSmatcherpartreplaceAll
"public long ramBytesUsed() {long sizeInBytes =  ((delegateFieldsProducer!=null) ? delegateFieldsProducer.ramBytesUsed() : 0);for(Map.Entry<String,FuzzySet> entry: bloomsByFieldName.entrySet()) {sizeInBytes += entry.getKey().length() * Character.BYTES;sizeInBytes += entry.getValue().ramBytesUsed();}return sizeInBytes;}",public long ramBytesUsed long sizeInBytes   delegateFieldsProducernull  delegateFieldsProducerramBytesUsed  0forMapEntryStringFuzzySet entry bloomsByFieldNameentrySet sizeInBytes  entrygetKeylength  CharacterBYTESsizeInBytes  entrygetValueramBytesUsedreturn sizeInBytes
"public CreateImageRequest(String instanceId, String name) {setInstanceId(instanceId);setName(name);}",public CreateImageRequestString instanceId String name setInstanceIdinstanceIdsetNamename
public SendDiagnosticInterruptResult sendDiagnosticInterrupt(SendDiagnosticInterruptRequest request) {request = beforeClientExecution(request);return executeSendDiagnosticInterrupt(request);},public SendDiagnosticInterruptResult sendDiagnosticInterruptSendDiagnosticInterruptRequest request request  beforeClientExecutionrequestreturn executeSendDiagnosticInterruptrequest
"public int lastIndexOf(Object object) {Object[] snapshot = elements;return lastIndexOf(object, snapshot, 0, snapshot.length);}",public int lastIndexOfObject object Object snapshot  elementsreturn lastIndexOfobject snapshot 0 snapshotlength
public AbortDocumentVersionUploadResult abortDocumentVersionUpload(AbortDocumentVersionUploadRequest request) {request = beforeClientExecution(request);return executeAbortDocumentVersionUpload(request);},public AbortDocumentVersionUploadResult abortDocumentVersionUploadAbortDocumentVersionUploadRequest request request  beforeClientExecutionrequestreturn executeAbortDocumentVersionUploadrequest
"public PaneInformation(short x, short y, short top, short left, byte active, boolean frozen) {this.x = x;this.y = y;this.topRow = top;this.leftColumn = left;this.activePane = active;this.frozen = frozen;}",public PaneInformationshort x short y short top short left byte active boolean frozen thisx  xthisy  ythistopRow  topthisleftColumn  leftthisactivePane  activethisfrozen  frozen
public DescribeScalingProcessTypesResult describeScalingProcessTypes(DescribeScalingProcessTypesRequest request) {request = beforeClientExecution(request);return executeDescribeScalingProcessTypes(request);},public DescribeScalingProcessTypesResult describeScalingProcessTypesDescribeScalingProcessTypesRequest request request  beforeClientExecutionrequestreturn executeDescribeScalingProcessTypesrequest
"public static boolean endsWith(char s[], int len, char suffix[]) {final int suffixLen = suffix.length;if (suffixLen > len)return false;for (int i = suffixLen - 1; i >= 0; i--)if (s[len -(suffixLen - i)] != suffix[i])return false;return true;}",public static boolean endsWithchar s int len char suffix final int suffixLen  suffixlengthif suffixLen  lenreturn falsefor int i  suffixLen  1 i  0 iif slen suffixLen  i  suffixireturn falsereturn true
"public void warnIfOpen() {if (allocationSite == null || !ENABLED) {return;}String message =(""A resource was acquired at attached stack trace but never released. ""+ ""See java.io.Closeable for information on avoiding resource leaks."");REPORTER.report(message, allocationSite);}",public void warnIfOpen if allocationSite  null  ENABLED returnString message A resource was acquired at attached stack trace but never released  See javaioCloseable for information on avoiding resource leaksREPORTERreportmessage allocationSite
"public GetImageScanRequest() {super(""cr"", ""2016-06-07"", ""GetImageScan"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/tags/[Tag]/scan"");setMethod(MethodType.GET);}",public GetImageScanRequest supercr 20160607 GetImageScan crsetUriPatternreposRepoNamespaceRepoNametagsTagscansetMethodMethodTypeGET
public ListSkillsStoreCategoriesResult listSkillsStoreCategories(ListSkillsStoreCategoriesRequest request) {request = beforeClientExecution(request);return executeListSkillsStoreCategories(request);},public ListSkillsStoreCategoriesResult listSkillsStoreCategoriesListSkillsStoreCategoriesRequest request request  beforeClientExecutionrequestreturn executeListSkillsStoreCategoriesrequest
public int getHeight() {return mImage.getHeight();},public int getHeight return mImagegetHeight
"public void applyFont(Font font) {applyFont(0, _string.getCharCount(), font);}",public void applyFontFont font applyFont0 stringgetCharCount font
public DetectEntitiesResult detectEntities(DetectEntitiesRequest request) {request = beforeClientExecution(request);return executeDetectEntities(request);},public DetectEntitiesResult detectEntitiesDetectEntitiesRequest request request  beforeClientExecutionrequestreturn executeDetectEntitiesrequest
public void copyRawTo(ByteBuffer w) {w.putInt(w1);w.putInt(w2);w.putInt(w3);w.putInt(w4);w.putInt(w5);},public void copyRawToByteBuffer w wputIntw1wputIntw2wputIntw3wputIntw4wputIntw5
public final char[] array() {return protectedArray();},public final char array return protectedArray
"public void seekExact(long ord) throws IOException {if (indexEnum == null) {throw new IllegalStateException(""terms index was not loaded"");}assert ord < numTerms;in.seek(indexEnum.seek(ord));boolean result = nextBlock();assert result;indexIsCurrent = true;didIndexNext = false;seekPending = false;state.ord = indexEnum.ord()-1;assert state.ord >= -1: ""ord="" + state.ord;term.copyBytes(indexEnum.term());int left = (int) (ord - state.ord);while(left > 0) {final BytesRef term = _next();assert term != null;left--;assert indexIsCurrent;}}",public void seekExactlong ord throws IOException if indexEnum  null throw new IllegalStateExceptionterms index was not loadedassert ord  numTermsinseekindexEnumseekordboolean result  nextBlockassert resultindexIsCurrent  truedidIndexNext  falseseekPending  falsestateord  indexEnumord1assert stateord  1 ord  stateordtermcopyBytesindexEnumtermint left  int ord  stateordwhileleft  0 final BytesRef term  nextassert term  nullleftassert indexIsCurrent
public String toString() {StringBuilder sb = new StringBuilder();sb.append('[');final int end = offset + length;for(int i=offset;i<end;i++) {if (i > offset) {sb.append(' ');}sb.append(Integer.toHexString(bytes[i]&0xff));}sb.append(']');return sb.toString();},public String toString StringBuilder sb  new StringBuildersbappendfinal int end  offset  lengthforint ioffsetiendi if i  offset sbappend sbappendIntegertoHexStringbytesi0xffsbappendreturn sbtoString
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("" [FEATURE PROTECTION]\n"");buffer.append(""   Self Relative = "" + fSD);buffer.append(""   Password Verifier = "" + passwordVerifier);buffer.append(""   Title = "" + title);buffer.append(""   Security Descriptor Size = "" + securityDescriptor.length);buffer.append("" [/FEATURE PROTECTION]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappend FEATURE PROTECTIONnbufferappend   Self Relative    fSDbufferappend   Password Verifier    passwordVerifierbufferappend   Title    titlebufferappend   Security Descriptor Size    securityDescriptorlengthbufferappend FEATURE PROTECTIONnreturn buffertoString
public void setCRC(int crc32) {crc = crc32;},public void setCRCint crc32 crc  crc32
"public DoubleRange(String label, double minIn, boolean minInclusive, double maxIn, boolean maxInclusive) {super(label);if (Double.isNaN(minIn)) {throw new IllegalArgumentException(""min cannot be NaN"");}if (!minInclusive) {minIn = Math.nextUp(minIn);}if (Double.isNaN(maxIn)) {throw new IllegalArgumentException(""max cannot be NaN"");}if (!maxInclusive) {maxIn = Math.nextAfter(maxIn, Double.NEGATIVE_INFINITY);}if (minIn > maxIn) {failNoMatch();}this.min = minIn;this.max = maxIn;}",public DoubleRangeString label double minIn boolean minInclusive double maxIn boolean maxInclusive superlabelif DoubleisNaNminIn throw new IllegalArgumentExceptionmin cannot be NaNif minInclusive minIn  MathnextUpminInif DoubleisNaNmaxIn throw new IllegalArgumentExceptionmax cannot be NaNif maxInclusive maxIn  MathnextAftermaxIn DoubleNEGATIVEINFINITYif minIn  maxIn failNoMatchthismin  minInthismax  maxIn
public int getBATEntriesPerBlock() {return bigBlockSize / LittleEndianConsts.INT_SIZE;},public int getBATEntriesPerBlock return bigBlockSize  LittleEndianConstsINTSIZE
public CreatePublishingDestinationResult createPublishingDestination(CreatePublishingDestinationRequest request) {request = beforeClientExecution(request);return executeCreatePublishingDestination(request);},public CreatePublishingDestinationResult createPublishingDestinationCreatePublishingDestinationRequest request request  beforeClientExecutionrequestreturn executeCreatePublishingDestinationrequest
public void skipBytes(long count) {pos += count;},public void skipByteslong count pos  count
"public String toString() {return ""jarowinkler("" + threshold + "")"";}",public String toString return jarowinkler  threshold  
public DeleteInvitationsResult deleteInvitations(DeleteInvitationsRequest request) {request = beforeClientExecution(request);return executeDeleteInvitations(request);},public DeleteInvitationsResult deleteInvitationsDeleteInvitationsRequest request request  beforeClientExecutionrequestreturn executeDeleteInvitationsrequest
"public DelimitedPayloadTokenFilterFactory(Map<String, String> args) {super(args);encoderClass = require(args, ENCODER_ATTR);delimiter = getChar(args, DELIMITER_ATTR, '|');if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public DelimitedPayloadTokenFilterFactoryMapString String args superargsencoderClass  requireargs ENCODERATTRdelimiter  getCharargs DELIMITERATTR if argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public ListSmartHomeAppliancesResult listSmartHomeAppliances(ListSmartHomeAppliancesRequest request) {request = beforeClientExecution(request);return executeListSmartHomeAppliances(request);},public ListSmartHomeAppliancesResult listSmartHomeAppliancesListSmartHomeAppliancesRequest request request  beforeClientExecutionrequestreturn executeListSmartHomeAppliancesrequest
public void dispatch(ConfigChangedListener listener) {listener.onConfigChanged(this);},public void dispatchConfigChangedListener listener listeneronConfigChangedthis
public File[] listFiles() {return filenamesToFiles(list());},public File listFiles return filenamesToFileslist
"public DedicatedCapacityInner getByResourceGroup(String resourceGroupName, String dedicatedCapacityName) {return getByResourceGroupWithServiceResponseAsync(resourceGroupName, dedicatedCapacityName).toBlocking().single().body();}",public DedicatedCapacityInner getByResourceGroupString resourceGroupName String dedicatedCapacityName return getByResourceGroupWithServiceResponseAsyncresourceGroupName dedicatedCapacityNametoBlockingsinglebody
"public void seekExact(long ord) {assert ord < info.terms.size();termUpto = (int) ord;info.terms.get(info.sortedTerms[termUpto], br);}",public void seekExactlong ord assert ord  infotermssizetermUpto  int ordinfotermsgetinfosortedTermstermUpto br
public CreateTrialComponentResult createTrialComponent(CreateTrialComponentRequest request) {request = beforeClientExecution(request);return executeCreateTrialComponent(request);},public CreateTrialComponentResult createTrialComponentCreateTrialComponentRequest request request  beforeClientExecutionrequestreturn executeCreateTrialComponentrequest
public UpdateResourceResult updateResource(UpdateResourceRequest request) {request = beforeClientExecution(request);return executeUpdateResource(request);},public UpdateResourceResult updateResourceUpdateResourceRequest request request  beforeClientExecutionrequestreturn executeUpdateResourcerequest
"public long length() {try {return channel.size();} catch (IOException ioe) {throw new RuntimeException(""IOException during length(): "" + this, ioe);}}",public long length try return channelsize catch IOException ioe throw new RuntimeExceptionIOException during length   this ioe
"public char setIndex(int position) {if (position < getBeginIndex() || position > getEndIndex())throw new IllegalArgumentException(""Illegal Position: "" + position);index = start + position;return current();}",public char setIndexint position if position  getBeginIndex  position  getEndIndexthrow new IllegalArgumentExceptionIllegal Position   positionindex  start  positionreturn current
"public static boolean isContainer(short options, short recordId){if(recordId >= EscherContainerRecord.DGG_CONTAINER &&  recordId<= EscherContainerRecord.SOLVER_CONTAINER){return true;} else {if (recordId == EscherTextboxRecord.RECORD_ID) {return false;} else {return ( options & (short) 0x000F ) == (short) 0x000F;}}}",public static boolean isContainershort options short recordIdifrecordId  EscherContainerRecordDGGCONTAINER   recordId EscherContainerRecordSOLVERCONTAINERreturn true else if recordId  EscherTextboxRecordRECORDID return false else return  options  short 0x000F   short 0x000F
public boolean exists(String fileName) {assert locked();if (!refCounts.containsKey(fileName)) {return false;} else {return getRefCount(fileName).count > 0;}},public boolean existsString fileName assert lockedif refCountscontainsKeyfileName return false else return getRefCountfileNamecount  0
public STSAssumeRoleSessionCredentialsProvider withSTSClient(IAcsClient client) {this.stsClient = client;return this;},public STSAssumeRoleSessionCredentialsProvider withSTSClientIAcsClient client thisstsClient  clientreturn this
public AcceptMatchResult acceptMatch(AcceptMatchRequest request) {request = beforeClientExecution(request);return executeAcceptMatch(request);},public AcceptMatchResult acceptMatchAcceptMatchRequest request request  beforeClientExecutionrequestreturn executeAcceptMatchrequest
public static RevFilter create(int skip) {if (skip < 0)throw new IllegalArgumentException(JGitText.get().skipMustBeNonNegative);return new SkipRevFilter(skip);},public static RevFilter createint skip if skip  0throw new IllegalArgumentExceptionJGitTextgetskipMustBeNonNegativereturn new SkipRevFilterskip
public GetHITResult getHIT(GetHITRequest request) {request = beforeClientExecution(request);return executeGetHIT(request);},public GetHITResult getHITGetHITRequest request request  beforeClientExecutionrequestreturn executeGetHITrequest
public StopStreamProcessorResult stopStreamProcessor(StopStreamProcessorRequest request) {request = beforeClientExecution(request);return executeStopStreamProcessor(request);},public StopStreamProcessorResult stopStreamProcessorStopStreamProcessorRequest request request  beforeClientExecutionrequestreturn executeStopStreamProcessorrequest
"public static AttrPtg createIf(int dist) {return new AttrPtg(optiIf.set(0), dist, null, -1);}",public static AttrPtg createIfint dist return new AttrPtgoptiIfset0 dist null 1
public DeleteIAMPolicyAssignmentResult deleteIAMPolicyAssignment(DeleteIAMPolicyAssignmentRequest request) {request = beforeClientExecution(request);return executeDeleteIAMPolicyAssignment(request);},public DeleteIAMPolicyAssignmentResult deleteIAMPolicyAssignmentDeleteIAMPolicyAssignmentRequest request request  beforeClientExecutionrequestreturn executeDeleteIAMPolicyAssignmentrequest
public UpdateCampaignResult updateCampaign(UpdateCampaignRequest request) {request = beforeClientExecution(request);return executeUpdateCampaign(request);},public UpdateCampaignResult updateCampaignUpdateCampaignRequest request request  beforeClientExecutionrequestreturn executeUpdateCampaignrequest
"public LexerActionExecutor fixOffsetBeforeMatch(int offset) {LexerAction[] updatedLexerActions = null;for (int i = 0; i < lexerActions.length; i++) {if (lexerActions[i].isPositionDependent() && !(lexerActions[i] instanceof LexerIndexedCustomAction)) {if (updatedLexerActions == null) {updatedLexerActions = lexerActions.clone();}updatedLexerActions[i] = new LexerIndexedCustomAction(offset, lexerActions[i]);}}if (updatedLexerActions == null) {return this;}return new LexerActionExecutor(updatedLexerActions);}",public LexerActionExecutor fixOffsetBeforeMatchint offset LexerAction updatedLexerActions  nullfor int i  0 i  lexerActionslength i if lexerActionsiisPositionDependent  lexerActionsi instanceof LexerIndexedCustomAction if updatedLexerActions  null updatedLexerActions  lexerActionscloneupdatedLexerActionsi  new LexerIndexedCustomActionoffset lexerActionsiif updatedLexerActions  null return thisreturn new LexerActionExecutorupdatedLexerActions
"public void protectSheet(String password, boolean shouldProtectObjects,boolean shouldProtectScenarios) {if (password == null) {_passwordRecord = null;_protectRecord = null;_objectProtectRecord = null;_scenarioProtectRecord = null;return;}ProtectRecord prec = getProtect();PasswordRecord pass = getPassword();prec.setProtect(true);pass.setPassword((short)CryptoFunctions.createXorVerifier1(password));if (_objectProtectRecord == null && shouldProtectObjects) {ObjectProtectRecord rec = createObjectProtect();rec.setProtect(true);_objectProtectRecord = rec;}if (_scenarioProtectRecord == null && shouldProtectScenarios) {ScenarioProtectRecord srec = createScenarioProtect();srec.setProtect(true);_scenarioProtectRecord = srec;}}",public void protectSheetString password boolean shouldProtectObjectsboolean shouldProtectScenarios if password  null passwordRecord  nullprotectRecord  nullobjectProtectRecord  nullscenarioProtectRecord  nullreturnProtectRecord prec  getProtectPasswordRecord pass  getPasswordprecsetProtecttruepasssetPasswordshortCryptoFunctionscreateXorVerifier1passwordif objectProtectRecord  null  shouldProtectObjects ObjectProtectRecord rec  createObjectProtectrecsetProtecttrueobjectProtectRecord  recif scenarioProtectRecord  null  shouldProtectScenarios ScenarioProtectRecord srec  createScenarioProtectsrecsetProtecttruescenarioProtectRecord  srec
public PackedDataOutput(DataOutput out) {this.out = out;current = 0;remainingBits = 8;},public PackedDataOutputDataOutput out thisout  outcurrent  0remainingBits  8
public CFRuleBase getRule(int idx) {checkRuleIndex(idx);return rules.get(idx);},public CFRuleBase getRuleint idx checkRuleIndexidxreturn rulesgetidx
public FieldCacheSource(String field) {this.field=field;},public FieldCacheSourceString field thisfieldfield
"public IndonesianStemFilterFactory(Map<String,String> args) {super(args);stemDerivational = getBoolean(args, ""stemDerivational"", true);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public IndonesianStemFilterFactoryMapStringString args superargsstemDerivational  getBooleanargs stemDerivational trueif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public boolean isOffsetOverlap( WeightedPhraseInfo other ){int so = getStartOffset();int eo = getEndOffset();int oso = other.getStartOffset();int oeo = other.getEndOffset();if( so <= oso && oso < eo ) return true;if( so < oeo && oeo <= eo ) return true;if( oso <= so && so < oeo ) return true;if( oso < eo && eo <= oeo ) return true;return false;},public boolean isOffsetOverlap WeightedPhraseInfo other int so  getStartOffsetint eo  getEndOffsetint oso  othergetStartOffsetint oeo  othergetEndOffsetif so  oso  oso  eo  return trueif so  oeo  oeo  eo  return trueif oso  so  so  oeo  return trueif oso  eo  eo  oeo  return truereturn false
public MergeAlgorithm(DiffAlgorithm diff) {this.diffAlg = diff;},public MergeAlgorithmDiffAlgorithm diff thisdiffAlg  diff
public void serialize(LittleEndianOutput out) {out.writeInt(field_1_xAxisUpperLeft);out.writeInt(field_2_yAxisUpperLeft);out.writeInt(field_3_xSize);out.writeInt(field_4_ySize);out.writeByte(field_5_type);out.writeByte(field_6_spacing);out.writeShort(field_7_options);},public void serializeLittleEndianOutput out outwriteIntfield1xAxisUpperLeftoutwriteIntfield2yAxisUpperLeftoutwriteIntfield3xSizeoutwriteIntfield4ySizeoutwriteBytefield5typeoutwriteBytefield6spacingoutwriteShortfield7options
public long get(int index) {final int o = index / 21;final int b = index % 21;final int shift = b * 3;return (blocks[o] >>> shift) & 7L;},public long getint index final int o  index  21final int b  index  21final int shift  b  3return blockso  shift  7L
public CodingErrorAction unmappableCharacterAction() {return unmappableCharacterAction;},public CodingErrorAction unmappableCharacterAction return unmappableCharacterAction
"public Set<String> getSet(Map<String,String> args, String name) {String s = args.remove(name);if (s == null) {return null;} else {Set<String> set = null;Matcher matcher = ITEM_PATTERN.matcher(s);if (matcher.find()) {set = new HashSet<>();set.add(matcher.group(0));while (matcher.find()) {set.add(matcher.group(0));}}return set;}}",public SetString getSetMapStringString args String name String s  argsremovenameif s  null return null else SetString set  nullMatcher matcher  ITEMPATTERNmatchersif matcherfind set  new HashSetsetaddmatchergroup0while matcherfind setaddmatchergroup0return set
"public AbstractTreeIterator createSubtreeIterator(ObjectReader Reader)throws IncorrectObjectTypeException, IOException {if (currentSubtree == null)throw new IncorrectObjectTypeException(getEntryObjectId(),Constants.TYPE_TREE);return new DirCacheIterator(this, currentSubtree);}",public AbstractTreeIterator createSubtreeIteratorObjectReader Readerthrows IncorrectObjectTypeException IOException if currentSubtree  nullthrow new IncorrectObjectTypeExceptiongetEntryObjectIdConstantsTYPETREEreturn new DirCacheIteratorthis currentSubtree
public Explanation[] getDetails() {return details.toArray(new Explanation[0]);},public Explanation getDetails return detailstoArraynew Explanation0
"public String toString() {if ( text==null ) {return ""<DeleteOp@""+tokens.get(index)+""..""+tokens.get(lastIndex)+"">"";}return ""<ReplaceOp@""+tokens.get(index)+""..""+tokens.get(lastIndex)+"":\""""+text+""\"">"";}",public String toString if  textnull  return DeleteOptokensgetindextokensgetlastIndexreturn ReplaceOptokensgetindextokensgetlastIndextext
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append( ""[TopMargin]\n"" );buffer.append( ""    .margin               = "" ).append( "" ("" ).append( getMargin() ).append( "" )\n"" );buffer.append( ""[/TopMargin]\n"" );return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappend TopMarginn bufferappend     margin                 append   append getMargin append  n bufferappend TopMarginn return buffertoString
"static public double fv(double r, int nper, double c, double pv) {return fv(r, nper, c, pv, 0);}",static public double fvdouble r int nper double c double pv return fvr nper c pv 0
"@Override public boolean remove(Object object) {Object[] a = array;int s = size;if (object != null) {for (int i = 0; i < s; i++) {if (object.equals(a[i])) {System.arraycopy(a, i + 1, a, i, --s - i);a[s] = null;  size = s;modCount++;return true;}}} else {for (int i = 0; i < s; i++) {if (a[i] == null) {System.arraycopy(a, i + 1, a, i, --s - i);a[s] = null;  size = s;modCount++;return true;}}}return false;}",Override public boolean removeObject object Object a  arrayint s  sizeif object  null for int i  0 i  s i if objectequalsai Systemarraycopya i  1 a i s  ias  null  size  smodCountreturn true else for int i  0 i  s i if ai  null Systemarraycopya i  1 a i s  ias  null  size  smodCountreturn truereturn false
"public MergeCellsRecord(CellRangeAddress[] regions, int startIndex, int numberOfRegions) {_regions = regions;_startIndex = startIndex;_numberOfRegions = numberOfRegions;}",public MergeCellsRecordCellRangeAddress regions int startIndex int numberOfRegions regions  regionsstartIndex  startIndexnumberOfRegions  numberOfRegions
public Cluster resizeCluster(ResizeClusterRequest request) {request = beforeClientExecution(request);return executeResizeCluster(request);},public Cluster resizeClusterResizeClusterRequest request request  beforeClientExecutionrequestreturn executeResizeClusterrequest
"public int getParent(int ordinal) throws IOException {ensureOpen();Objects.checkIndex(ordinal, nextID);int[] parents = getTaxoArrays().parents();assert ordinal < parents.length : ""requested ordinal ("" + ordinal + ""); parents.length ("" + parents.length + "") !"";return parents[ordinal];}",public int getParentint ordinal throws IOException ensureOpenObjectscheckIndexordinal nextIDint parents  getTaxoArraysparentsassert ordinal  parentslength  requested ordinal   ordinal   parentslength   parentslength   return parentsordinal
"@Override public Iterator<Multiset.Entry<E>> iterator() {final Iterator<Map.Entry<E, AtomicInteger>> backingEntries= backingMap.entrySet().iterator();return new Iterator<Multiset.Entry<E>>();}",Override public IteratorMultisetEntryE iterator final IteratorMapEntryE AtomicInteger backingEntries backingMapentrySetiteratorreturn new IteratorMultisetEntryE
"public int alloc(int size) {int index = n;int len = array.length;if (n + size >= len) {char[] aux = new char[len + blockSize];System.arraycopy(array, 0, aux, 0, len);array = aux;}n += size;return index;}",public int allocint size int index  nint len  arraylengthif n  size  len char aux  new charlen  blockSizeSystemarraycopyarray 0 aux 0 lenarray  auxn  sizereturn index
public static String getInflectionTypeTranslation(String s) {return inflTypeTranslations.get(s);},public static String getInflectionTypeTranslationString s return inflTypeTranslationsgets
"public Note call() throws GitAPIException {checkCallable();try (RevWalk walk = new RevWalk(repo);ObjectInserter inserter = repo.newObjectInserter()) {NoteMap map = NoteMap.newEmptyMap();RevCommit notesCommit = null;Ref ref = repo.exactRef(notesRef);if (ref != null) {notesCommit = walk.parseCommit(ref.getObjectId());map = NoteMap.read(walk.getObjectReader(), notesCommit);}map.set(id, null, inserter);AddNoteCommand.commitNoteMap(repo, notesRef, walk, map, notesCommit,inserter,""Notes removed by 'git notes remove'""); return map.getNote(id);} catch (IOException e) {throw new JGitInternalException(e.getMessage(), e);}}",public Note call throws GitAPIException checkCallabletry RevWalk walk  new RevWalkrepoObjectInserter inserter  reponewObjectInserter NoteMap map  NoteMapnewEmptyMapRevCommit notesCommit  nullRef ref  repoexactRefnotesRefif ref  null notesCommit  walkparseCommitrefgetObjectIdmap  NoteMapreadwalkgetObjectReader notesCommitmapsetid null inserterAddNoteCommandcommitNoteMaprepo notesRef walk map notesCommitinserterNotes removed by git notes remove return mapgetNoteid catch IOException e throw new JGitInternalExceptionegetMessage e
public String getNewPath() {return newPath;},public String getNewPath return newPath
public UserSViewBegin(byte[] data) {_rawData = data;},public UserSViewBeginbyte data rawData  data
public CreateMountTargetResult createMountTarget(CreateMountTargetRequest request) {request = beforeClientExecution(request);return executeCreateMountTarget(request);},public CreateMountTargetResult createMountTargetCreateMountTargetRequest request request  beforeClientExecutionrequestreturn executeCreateMountTargetrequest
public DeleteSubnetRequest(String subnetId) {setSubnetId(subnetId);},public DeleteSubnetRequestString subnetId setSubnetIdsubnetId
public void setTitle(String title) {this.title = title;},public void setTitleString title thistitle  title
public char current() {if (offset == end) {return DONE;}return string.charAt(offset);},public char current if offset  end return DONEreturn stringcharAtoffset
public void add(long n) {if (count == entries.length)grow();entries[count++] = n;},public void addlong n if count  entrieslengthgrowentriescount  n
"public FloatBuffer put(int index, float c) {checkIndex(index);backingArray[offset + index] = c;return this;}",public FloatBuffer putint index float c checkIndexindexbackingArrayoffset  index  creturn this
public ListGroupPoliciesRequest(String groupName) {setGroupName(groupName);},public ListGroupPoliciesRequestString groupName setGroupNamegroupName
public void setDeltaSearchWindowSize(int objectCount) {if (objectCount <= 2)setDeltaCompress(false);elsedeltaSearchWindowSize = objectCount;},public void setDeltaSearchWindowSizeint objectCount if objectCount  2setDeltaCompressfalseelsedeltaSearchWindowSize  objectCount
"public int nextDoc() {while (true) {if (queue.size() == 0) {doc = NO_MORE_DOCS;break;}int newDoc = queue.top().docID();if (newDoc != doc) {assert newDoc > doc: ""doc="" + doc + "" newDoc="" + newDoc;doc = newDoc;break;}if (queue.top().nextDoc() == NO_MORE_DOCS) {queue.pop();} else {queue.updateTop();}}return doc;}",public int nextDoc while true if queuesize  0 doc  NOMOREDOCSbreakint newDoc  queuetopdocIDif newDoc  doc assert newDoc  doc doc  doc   newDoc  newDocdoc  newDocbreakif queuetopnextDoc  NOMOREDOCS queuepop else queueupdateTopreturn doc
"public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {final byte block = blocks[blocksOffset++];values[valuesOffset++] = (block >>> 4) & 15;values[valuesOffset++] = block & 15;}}",public void decodebyte blocks int blocksOffset long values int valuesOffset int iterations for int j  0 j  iterations j final byte block  blocksblocksOffsetvaluesvaluesOffset  block  4  15valuesvaluesOffset  block  15
public int getNameIndex(String name) {for (int k = 0; k < names.size(); k++) {String nameName = getNameName(k);if (nameName.equalsIgnoreCase(name)) {return k;}}return -1;},public int getNameIndexString name for int k  0 k  namessize k String nameName  getNameNamekif nameNameequalsIgnoreCasename return kreturn 1
"public void seek(int index) {if (index == currentCharIndex) {return;}if (index > currentCharIndex) {sync(index - currentCharIndex);index = Math.min(index, getBufferStartIndex() + n - 1);}int i = index - getBufferStartIndex();if ( i < 0 ) {throw new IllegalArgumentException(""cannot seek to negative index "" + index);}else if (i >= n) {throw new UnsupportedOperationException(""seek to index outside buffer: ""+index+"" not in ""+getBufferStartIndex()+""..""+(getBufferStartIndex()+n));}p = i;currentCharIndex = index;if (p == 0) {lastChar = lastCharBufferStart;}else {lastChar = data[p-1];}}",public void seekint index if index  currentCharIndex returnif index  currentCharIndex syncindex  currentCharIndexindex  Mathminindex getBufferStartIndex  n  1int i  index  getBufferStartIndexif  i  0  throw new IllegalArgumentExceptioncannot seek to negative index   indexelse if i  n throw new UnsupportedOperationExceptionseek to index outside buffer index not in getBufferStartIndexgetBufferStartIndexnp  icurrentCharIndex  indexif p  0 lastChar  lastCharBufferStartelse lastChar  datap1
"public void readBytes(byte[] b, int offset, int len) {System.arraycopy(data, pos, b, offset, len);pos += len;}",public void readBytesbyte b int offset int len Systemarraycopydata pos b offset lenpos  len
public ListGraphsResult listGraphs(ListGraphsRequest request) {request = beforeClientExecution(request);return executeListGraphs(request);},public ListGraphsResult listGraphsListGraphsRequest request request  beforeClientExecutionrequestreturn executeListGraphsrequest
public ATNDeserializer(ATNDeserializationOptions deserializationOptions) {if (deserializationOptions == null) {deserializationOptions = ATNDeserializationOptions.getDefaultOptions();}this.deserializationOptions = deserializationOptions;},public ATNDeserializerATNDeserializationOptions deserializationOptions if deserializationOptions  null deserializationOptions  ATNDeserializationOptionsgetDefaultOptionsthisdeserializationOptions  deserializationOptions
"public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int j = 0; j < iterations; ++j) {values[valuesOffset++] = ((blocks[blocksOffset++] & 0xFF) << 8) | (blocks[blocksOffset++] & 0xFF);}}",public void decodebyte blocks int blocksOffset int values int valuesOffset int iterations for int j  0 j  iterations j valuesvaluesOffset  blocksblocksOffset  0xFF  8  blocksblocksOffset  0xFF
public CanonicalTreeParser getParent() {return (CanonicalTreeParser) parent;},public CanonicalTreeParser getParent return CanonicalTreeParser parent
public DetectDominantLanguageResult detectDominantLanguage(DetectDominantLanguageRequest request) {request = beforeClientExecution(request);return executeDetectDominantLanguage(request);},public DetectDominantLanguageResult detectDominantLanguageDetectDominantLanguageRequest request request  beforeClientExecutionrequestreturn executeDetectDominantLanguagerequest
public void removePageCount() {remove1stProperty(PropertyIDMap.PID_PAGECOUNT);},public void removePageCount remove1stPropertyPropertyIDMapPIDPAGECOUNT
public E previous() {if (expectedModCount == modCount) {try {E result = get(pos);lastPosition = pos;pos--;return result;} catch (IndexOutOfBoundsException e) {throw new NoSuchElementException();}}throw new ConcurrentModificationException();},public E previous if expectedModCount  modCount try E result  getposlastPosition  posposreturn result catch IndexOutOfBoundsException e throw new NoSuchElementExceptionthrow new ConcurrentModificationException
"public String toString() {final StringBuilder r = new StringBuilder();r.append(""("");for (int i = 0; i < subfilters.length; i++) {if (i > 0)r.append("" AND "");r.append(subfilters[i].toString());}r.append("")"");return r.toString();}",public String toString final StringBuilder r  new StringBuilderrappendfor int i  0 i  subfilterslength i if i  0rappend AND rappendsubfiltersitoStringrappendreturn rtoString
public FooterRecord clone() {return copy();},public FooterRecord clone return copy
"public int stem(final char s[], int len) {if (len < 4) return len;if (len > 5 && endsWith(s, len, ""ища""))return len - 3;len = removeArticle(s, len);len = removePlural(s, len);if (len > 3) {if (endsWith(s, len, ""я""))len--;if (endsWith(s, len, ""а"") ||endsWith(s, len, ""о"") ||endsWith(s, len, ""е""))len--;}if (len > 4 && endsWith(s, len, ""ен"")) {s[len - 2] = 'н'; len--;}if (len > 5 && s[len - 2] == 'ъ') {s[len - 2] = s[len - 1]; len--;}return len;}",public int stemfinal char s int len if len  4 return lenif len  5  endsWiths len ищаreturn len  3len  removeArticles lenlen  removePlurals lenif len  3 if endsWiths len яlenif endsWiths len а endsWiths len о endsWiths len еlenif len  4  endsWiths len ен slen  2  н lenif len  5  slen  2  ъ slen  2  slen  1 lenreturn len
"public synchronized CharSequence subSequence(int start, int end) {return super.substring(start, end);}",public synchronized CharSequence subSequenceint start int end return supersubstringstart end
public DisableVpcClassicLinkDnsSupportResult disableVpcClassicLinkDnsSupport(DisableVpcClassicLinkDnsSupportRequest request) {request = beforeClientExecution(request);return executeDisableVpcClassicLinkDnsSupport(request);},public DisableVpcClassicLinkDnsSupportResult disableVpcClassicLinkDnsSupportDisableVpcClassicLinkDnsSupportRequest request request  beforeClientExecutionrequestreturn executeDisableVpcClassicLinkDnsSupportrequest
"public static FormulaError forInt(byte type) throws IllegalArgumentException {FormulaError err = bmap.get(type);if(err == null) throw new IllegalArgumentException(""Unknown error type: "" + type);return err;}",public static FormulaError forIntbyte type throws IllegalArgumentException FormulaError err  bmapgettypeiferr  null throw new IllegalArgumentExceptionUnknown error type   typereturn err
public void remove() {if (index == 0)throw new IllegalStateException();BlockList.this.remove(--index);dirIdx = toDirectoryIndex(index);blkIdx = toBlockIndex(index);block = directory[dirIdx];},public void remove if index  0throw new IllegalStateExceptionBlockListthisremoveindexdirIdx  toDirectoryIndexindexblkIdx  toBlockIndexindexblock  directorydirIdx
"public String formatNumberDateCell(CellValueRecordInterface cell) {double value;if (cell instanceof NumberRecord) {value = ((NumberRecord) cell).getValue();} else if (cell instanceof FormulaRecord) {value = ((FormulaRecord) cell).getValue();} else {throw new IllegalArgumentException(""Unsupported CellValue Record passed in "" + cell);}int formatIndex = getFormatIndex(cell);String formatString = getFormatString(cell);if (formatString == null) {return _defaultFormat.format(value);}return _formatter.formatRawCellContents(value, formatIndex, formatString);}",public String formatNumberDateCellCellValueRecordInterface cell double valueif cell instanceof NumberRecord value  NumberRecord cellgetValue else if cell instanceof FormulaRecord value  FormulaRecord cellgetValue else throw new IllegalArgumentExceptionUnsupported CellValue Record passed in   cellint formatIndex  getFormatIndexcellString formatString  getFormatStringcellif formatString  null return defaultFormatformatvaluereturn formatterformatRawCellContentsvalue formatIndex formatString
public synchronized StringBuffer append(Object obj) {if (obj == null) {appendNull();} else {append0(obj.toString());}return this;},public synchronized StringBuffer appendObject obj if obj  null appendNull else append0objtoStringreturn this
public String getUser() {return user;},public String getUser return user
public CreateGraphResult createGraph(CreateGraphRequest request) {request = beforeClientExecution(request);return executeCreateGraph(request);},public CreateGraphResult createGraphCreateGraphRequest request request  beforeClientExecutionrequestreturn executeCreateGraphrequest
"public static BytesRef toBytesRef(IntsRef input, BytesRefBuilder scratch) {scratch.grow(input.length);for(int i=0;i<input.length;i++) {int value = input.ints[i+input.offset];assert value >= Byte.MIN_VALUE && value <= 255: ""value "" + value + "" doesn't fit into byte"";scratch.setByteAt(i, (byte) value);}scratch.setLength(input.length);return scratch.get();}",public static BytesRef toBytesRefIntsRef input BytesRefBuilder scratch scratchgrowinputlengthforint i0iinputlengthi int value  inputintsiinputoffsetassert value  ByteMINVALUE  value  255 value   value   doesnt fit into bytescratchsetByteAti byte valuescratchsetLengthinputlengthreturn scratchget
public final DoubleBuffer asDoubleBuffer() {return DoubleToByteBufferAdapter.asDoubleBuffer(this);},public final DoubleBuffer asDoubleBuffer return DoubleToByteBufferAdapterasDoubleBufferthis
"public static final RevFilter between(Date since, Date until) {return between(since.getTime(), until.getTime());}",public static final RevFilter betweenDate since Date until return betweensincegetTime untilgetTime
"public AreaEval offset(int relFirstRowIx, int relLastRowIx, int relFirstColIx, int relLastColIx) {AreaI area = new OffsetArea(getRow(), getColumn(),relFirstRowIx, relLastRowIx, relFirstColIx, relLastColIx);return new LazyAreaEval(area, _evaluator);}",public AreaEval offsetint relFirstRowIx int relLastRowIx int relFirstColIx int relLastColIx AreaI area  new OffsetAreagetRow getColumnrelFirstRowIx relLastRowIx relFirstColIx relLastColIxreturn new LazyAreaEvalarea evaluator
"public static void registerFunction(String name, FreeRefFunction func){AnalysisToolPak.registerFunction(name, func);}",public static void registerFunctionString name FreeRefFunction funcAnalysisToolPakregisterFunctionname func
public CreateAutoMLJobResult createAutoMLJob(CreateAutoMLJobRequest request) {request = beforeClientExecution(request);return executeCreateAutoMLJob(request);},public CreateAutoMLJobResult createAutoMLJobCreateAutoMLJobRequest request request  beforeClientExecutionrequestreturn executeCreateAutoMLJobrequest
public DefineIndexFieldResult defineIndexField(DefineIndexFieldRequest request) {request = beforeClientExecution(request);return executeDefineIndexField(request);},public DefineIndexFieldResult defineIndexFieldDefineIndexFieldRequest request request  beforeClientExecutionrequestreturn executeDefineIndexFieldrequest
public ListDomainNamesResult listDomainNames(ListDomainNamesRequest request) {request = beforeClientExecution(request);return executeListDomainNames(request);},public ListDomainNamesResult listDomainNamesListDomainNamesRequest request request  beforeClientExecutionrequestreturn executeListDomainNamesrequest
"public CharBuffer put(char c) {if (position == limit) {throw new BufferOverflowException();}byteBuffer.putChar(position++ * SizeOf.CHAR, c);return this;}",public CharBuffer putchar c if position  limit throw new BufferOverflowExceptionbyteBufferputCharposition  SizeOfCHAR creturn this
"public static PathFilter create(String path) {while (path.endsWith(""/"")) path = path.substring(0, path.length() - 1);if (path.length() == 0)throw new IllegalArgumentException(JGitText.get().emptyPathNotPermitted);return new PathFilter(path);}",public static PathFilter createString path while pathendsWith path  pathsubstring0 pathlength  1if pathlength  0throw new IllegalArgumentExceptionJGitTextgetemptyPathNotPermittedreturn new PathFilterpath
"public final String toString() {return String.copyValueOf(backingArray, offset + position, remaining());}",public final String toString return StringcopyValueOfbackingArray offset  position remaining
public char first() {index = start;return current();},public char first index  startreturn current
"public void growForward() {forwardPos = ArrayUtil.grow(forwardPos, 1+forwardCount);forwardID = ArrayUtil.grow(forwardID, 1+forwardCount);forwardIndex = ArrayUtil.grow(forwardIndex, 1+forwardCount);final Type[] newForwardType = new Type[forwardPos.length];System.arraycopy(forwardType, 0, newForwardType, 0, forwardType.length);forwardType = newForwardType;}",public void growForward forwardPos  ArrayUtilgrowforwardPos 1forwardCountforwardID  ArrayUtilgrowforwardID 1forwardCountforwardIndex  ArrayUtilgrowforwardIndex 1forwardCountfinal Type newForwardType  new TypeforwardPoslengthSystemarraycopyforwardType 0 newForwardType 0 forwardTypelengthforwardType  newForwardType
public DescribeReplicationGroupsResult describeReplicationGroups(DescribeReplicationGroupsRequest request) {request = beforeClientExecution(request);return executeDescribeReplicationGroups(request);},public DescribeReplicationGroupsResult describeReplicationGroupsDescribeReplicationGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribeReplicationGroupsrequest
"public int getIndex(T o) {return valueKeyMap.getOrDefault(o, -1);}",public int getIndexT o return valueKeyMapgetOrDefaulto 1
"public String toString() {return ""(""+pred+"", ""+alt+ "")"";}",public String toString return pred alt 
public DescribeRegionsResult describeRegions() {return describeRegions(new DescribeRegionsRequest());},public DescribeRegionsResult describeRegions return describeRegionsnew DescribeRegionsRequest
public ModifyVpcEndpointConnectionNotificationResult modifyVpcEndpointConnectionNotification(ModifyVpcEndpointConnectionNotificationRequest request) {request = beforeClientExecution(request);return executeModifyVpcEndpointConnectionNotification(request);},public ModifyVpcEndpointConnectionNotificationResult modifyVpcEndpointConnectionNotificationModifyVpcEndpointConnectionNotificationRequest request request  beforeClientExecutionrequestreturn executeModifyVpcEndpointConnectionNotificationrequest
public QueryPhraseMap( FieldQuery fieldQuery ){this.fieldQuery = fieldQuery;},public QueryPhraseMap FieldQuery fieldQuery thisfieldQuery  fieldQuery
public DescribeAssessmentTemplatesResult describeAssessmentTemplates(DescribeAssessmentTemplatesRequest request) {request = beforeClientExecution(request);return executeDescribeAssessmentTemplates(request);},public DescribeAssessmentTemplatesResult describeAssessmentTemplatesDescribeAssessmentTemplatesRequest request request  beforeClientExecutionrequestreturn executeDescribeAssessmentTemplatesrequest
"public HunspellStemFilter(TokenStream input, Dictionary dictionary, boolean dedup,  boolean longestOnly) {super(input);this.dedup = dedup && longestOnly == false; this.stemmer = new Stemmer(dictionary);this.longestOnly = longestOnly;}",public HunspellStemFilterTokenStream input Dictionary dictionary boolean dedup  boolean longestOnly superinputthisdedup  dedup  longestOnly  false thisstemmer  new StemmerdictionarythislongestOnly  longestOnly
public NameCommentRecord getNameCommentRecord(final NameRecord nameRecord){return commentRecords.get(nameRecord.getNameText());},public NameCommentRecord getNameCommentRecordfinal NameRecord nameRecordreturn commentRecordsgetnameRecordgetNameText
public ScanRequest(String tableName) {setTableName(tableName);},public ScanRequestString tableName setTableNametableName
"public AliasTarget(String hostedZoneId, String dNSName) {setHostedZoneId(hostedZoneId);setDNSName(dNSName);}",public AliasTargetString hostedZoneId String dNSName setHostedZoneIdhostedZoneIdsetDNSNamedNSName
public ListOutgoingTypedLinksResult listOutgoingTypedLinks(ListOutgoingTypedLinksRequest request) {request = beforeClientExecution(request);return executeListOutgoingTypedLinks(request);},public ListOutgoingTypedLinksResult listOutgoingTypedLinksListOutgoingTypedLinksRequest request request  beforeClientExecutionrequestreturn executeListOutgoingTypedLinksrequest
public HsmConfiguration createHsmConfiguration(CreateHsmConfigurationRequest request) {request = beforeClientExecution(request);return executeCreateHsmConfiguration(request);},public HsmConfiguration createHsmConfigurationCreateHsmConfigurationRequest request request  beforeClientExecutionrequestreturn executeCreateHsmConfigurationrequest
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[BEGIN]\n"");buffer.append(""[/BEGIN]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendBEGINnbufferappendBEGINnreturn buffertoString
public DisableDomainAutoRenewResult disableDomainAutoRenew(DisableDomainAutoRenewRequest request) {request = beforeClientExecution(request);return executeDisableDomainAutoRenew(request);},public DisableDomainAutoRenewResult disableDomainAutoRenewDisableDomainAutoRenewRequest request request  beforeClientExecutionrequestreturn executeDisableDomainAutoRenewrequest
"@Override public boolean remove(Object o) {if (!(o instanceof Entry)) {return false;}Entry<?, ?> e = (Entry<?, ?>) o;Object key = e.getKey();return key != null && Impl.this.remove(key, e.getValue());}",Override public boolean removeObject o if o instanceof Entry return falseEntry  e  Entry  oObject key  egetKeyreturn key  null  Implthisremovekey egetValue
public UpdateFindingsFeedbackResult updateFindingsFeedback(UpdateFindingsFeedbackRequest request) {request = beforeClientExecution(request);return executeUpdateFindingsFeedback(request);},public UpdateFindingsFeedbackResult updateFindingsFeedbackUpdateFindingsFeedbackRequest request request  beforeClientExecutionrequestreturn executeUpdateFindingsFeedbackrequest
"public void setColorAtIndex(short index, byte red, byte green, byte blue){_palette.setColor(index, red, green, blue);}",public void setColorAtIndexshort index byte red byte green byte bluepalettesetColorindex red green blue
public void serialize(LittleEndianOutput out) {out.writeShort(rt);out.writeShort(grbitFrt);out.writeByte(verOriginator);out.writeByte(verWriter);out.writeShort(rgCFRTID.length);for (CFRTID cfrtid : rgCFRTID) {cfrtid.serialize(out);}},public void serializeLittleEndianOutput out outwriteShortrtoutwriteShortgrbitFrtoutwriteByteverOriginatoroutwriteByteverWriteroutwriteShortrgCFRTIDlengthfor CFRTID cfrtid  rgCFRTID cfrtidserializeout
public RevokeInvitationResult revokeInvitation(RevokeInvitationRequest request) {request = beforeClientExecution(request);return executeRevokeInvitation(request);},public RevokeInvitationResult revokeInvitationRevokeInvitationRequest request request  beforeClientExecutionrequestreturn executeRevokeInvitationrequest
public GetTextDetectionResult getTextDetection(GetTextDetectionRequest request) {request = beforeClientExecution(request);return executeGetTextDetection(request);},public GetTextDetectionResult getTextDetectionGetTextDetectionRequest request request  beforeClientExecutionrequestreturn executeGetTextDetectionrequest
"public void ensureCapacity(int min) {if (min > value.length) {int ourMin = value.length*2 + 2;enlargeBuffer(Math.max(ourMin, min));}}",public void ensureCapacityint min if min  valuelength int ourMin  valuelength2  2enlargeBufferMathmaxourMin min
"public void write(byte[] buffer, int byteOffset, int byteCount) throws IOException {IoBridge.write(fd, buffer, byteOffset, byteCount);}",public void writebyte buffer int byteOffset int byteCount throws IOException IoBridgewritefd buffer byteOffset byteCount
public DisassociateAddressResult disassociateAddress(DisassociateAddressRequest request) {request = beforeClientExecution(request);return executeDisassociateAddress(request);},public DisassociateAddressResult disassociateAddressDisassociateAddressRequest request request  beforeClientExecutionrequestreturn executeDisassociateAddressrequest
public TagCommand setForceUpdate(boolean forceUpdate) {this.forceUpdate = forceUpdate;return this;},public TagCommand setForceUpdateboolean forceUpdate thisforceUpdate  forceUpdatereturn this
"public PageItemRecord(RecordInputStream in) {int dataSize = in.remaining();if (dataSize % FieldInfo.ENCODED_SIZE != 0) {throw new RecordFormatException(""Bad data size "" + dataSize);}int nItems = dataSize / FieldInfo.ENCODED_SIZE;FieldInfo[] fis = new FieldInfo[nItems];for (int i = 0; i < fis.length; i++) {fis[i] = new FieldInfo(in);}_fieldInfos = fis;}",public PageItemRecordRecordInputStream in int dataSize  inremainingif dataSize  FieldInfoENCODEDSIZE  0 throw new RecordFormatExceptionBad data size   dataSizeint nItems  dataSize  FieldInfoENCODEDSIZEFieldInfo fis  new FieldInfonItemsfor int i  0 i  fislength i fisi  new FieldInfoinfieldInfos  fis
"public XPathTokenElement(String tokenName, int tokenType) {super(tokenName);this.tokenType = tokenType;}",public XPathTokenElementString tokenName int tokenType supertokenNamethistokenType  tokenType
@Override public boolean contains(Object object) {return indexOf(object) != -1;},Override public boolean containsObject object return indexOfobject  1
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_x);out.writeShort(field_2_y);out.writeShort(field_3_topRow);out.writeShort(field_4_leftColumn);out.writeShort(field_5_activePane);},public void serializeLittleEndianOutput out outwriteShortfield1xoutwriteShortfield2youtwriteShortfield3topRowoutwriteShortfield4leftColumnoutwriteShortfield5activePane
"public StepExecutionStatusDetail(StepExecutionState state, java.util.Date creationDateTime) {setState(state.toString());setCreationDateTime(creationDateTime);}",public StepExecutionStatusDetailStepExecutionState state javautilDate creationDateTime setStatestatetoStringsetCreationDateTimecreationDateTime
"public EditEventRequest() {super(""CloudPhoto"", ""2017-07-11"", ""EditEvent"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public EditEventRequest superCloudPhoto 20170711 EditEvent cloudphotosetProtocolProtocolTypeHTTPS
public PurchaseHostReservationResult purchaseHostReservation(PurchaseHostReservationRequest request) {request = beforeClientExecution(request);return executePurchaseHostReservation(request);},public PurchaseHostReservationResult purchaseHostReservationPurchaseHostReservationRequest request request  beforeClientExecutionrequestreturn executePurchaseHostReservationrequest
public ConfirmPrivateVirtualInterfaceResult confirmPrivateVirtualInterface(ConfirmPrivateVirtualInterfaceRequest request) {request = beforeClientExecution(request);return executeConfirmPrivateVirtualInterface(request);},public ConfirmPrivateVirtualInterfaceResult confirmPrivateVirtualInterfaceConfirmPrivateVirtualInterfaceRequest request request  beforeClientExecutionrequestreturn executeConfirmPrivateVirtualInterfacerequest
public static int getVariantLength(final long variantType) {final Integer length = numberToLength.get(variantType);return (length != null) ? length : LENGTH_UNKNOWN;},public static int getVariantLengthfinal long variantType final Integer length  numberToLengthgetvariantTypereturn length  null  length  LENGTHUNKNOWN
public UnknownFormatFlagsException(String f) {if (f == null) {throw new NullPointerException();}flags = f;},public UnknownFormatFlagsExceptionString f if f  null throw new NullPointerExceptionflags  f
public boolean isFreezePane() {return frozen;},public boolean isFreezePane return frozen
public PurchaseReservedDBInstancesOfferingRequest(String reservedDBInstancesOfferingId) {setReservedDBInstancesOfferingId(reservedDBInstancesOfferingId);},public PurchaseReservedDBInstancesOfferingRequestString reservedDBInstancesOfferingId setReservedDBInstancesOfferingIdreservedDBInstancesOfferingId
"public HeaderBlock(POIFSBigBlockSize bigBlockSize){this.bigBlockSize = bigBlockSize;_data = new byte[ POIFSConstants.SMALLER_BIG_BLOCK_SIZE ];Arrays.fill(_data, _default_value);new LongField(_signature_offset, _signature, _data);new IntegerField(0x08, 0, _data);new IntegerField(0x0c, 0, _data);new IntegerField(0x10, 0, _data);new IntegerField(0x14, 0, _data);new ShortField(0x18, ( short ) 0x3b, _data);new ShortField(0x1a, ( short ) 0x3, _data);new ShortField(0x1c, ( short ) -2, _data);new ShortField(0x1e, bigBlockSize.getHeaderValue(), _data);new IntegerField(0x20, 0x6, _data);new IntegerField(0x24, 0, _data);new IntegerField(0x28, 0, _data);new IntegerField(0x34, 0, _data);new IntegerField(0x38, 0x1000, _data);_bat_count = 0;_sbat_count = 0;_xbat_count = 0;_property_start = POIFSConstants.END_OF_CHAIN;_sbat_start = POIFSConstants.END_OF_CHAIN;_xbat_start = POIFSConstants.END_OF_CHAIN;}",public HeaderBlockPOIFSBigBlockSize bigBlockSizethisbigBlockSize  bigBlockSizedata  new byte POIFSConstantsSMALLERBIGBLOCKSIZE Arraysfilldata defaultvaluenew LongFieldsignatureoffset signature datanew IntegerField0x08 0 datanew IntegerField0x0c 0 datanew IntegerField0x10 0 datanew IntegerField0x14 0 datanew ShortField0x18  short  0x3b datanew ShortField0x1a  short  0x3 datanew ShortField0x1c  short  2 datanew ShortField0x1e bigBlockSizegetHeaderValue datanew IntegerField0x20 0x6 datanew IntegerField0x24 0 datanew IntegerField0x28 0 datanew IntegerField0x34 0 datanew IntegerField0x38 0x1000 databatcount  0sbatcount  0xbatcount  0propertystart  POIFSConstantsENDOFCHAINsbatstart  POIFSConstantsENDOFCHAINxbatstart  POIFSConstantsENDOFCHAIN
public ListEventSubscriptionsResult listEventSubscriptions(ListEventSubscriptionsRequest request) {request = beforeClientExecution(request);return executeListEventSubscriptions(request);},public ListEventSubscriptionsResult listEventSubscriptionsListEventSubscriptionsRequest request request  beforeClientExecutionrequestreturn executeListEventSubscriptionsrequest
public ListProxySessionsResult listProxySessions(ListProxySessionsRequest request) {request = beforeClientExecution(request);return executeListProxySessions(request);},public ListProxySessionsResult listProxySessionsListProxySessionsRequest request request  beforeClientExecutionrequestreturn executeListProxySessionsrequest
"public SimpleBoundaryScanner( int maxScan, Set<Character> boundaryChars ){this.maxScan = maxScan;this.boundaryChars = boundaryChars;}",public SimpleBoundaryScanner int maxScan SetCharacter boundaryChars thismaxScan  maxScanthisboundaryChars  boundaryChars
public ObjectId getObjectId() {return getLeaf().getObjectId();},public ObjectId getObjectId return getLeafgetObjectId
"public void drawLine(int x1, int y1, int x2, int y2, int width){HSSFSimpleShape shape = escherGroup.createShape(new HSSFChildAnchor(x1, y1, x2, y2) );shape.setShapeType(HSSFSimpleShape.OBJECT_TYPE_LINE);shape.setLineWidth(width);shape.setLineStyleColor(foreground.getRed(), foreground.getGreen(), foreground.getBlue());}",public void drawLineint x1 int y1 int x2 int y2 int widthHSSFSimpleShape shape  escherGroupcreateShapenew HSSFChildAnchorx1 y1 x2 y2 shapesetShapeTypeHSSFSimpleShapeOBJECTTYPELINEshapesetLineWidthwidthshapesetLineStyleColorforegroundgetRed foregroundgetGreen foregroundgetBlue
public ReverseBytesReader(byte[] bytes) {this.bytes = bytes;},public ReverseBytesReaderbyte bytes thisbytes  bytes
public GetActiveNamesResult getActiveNames(GetActiveNamesRequest request) {request = beforeClientExecution(request);return executeGetActiveNames(request);},public GetActiveNamesResult getActiveNamesGetActiveNamesRequest request request  beforeClientExecutionrequestreturn executeGetActiveNamesrequest
public MergeResult getFailingResult() {return failingResult;},public MergeResult getFailingResult return failingResult
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[AREA]\n"");buffer.append(""    .formatFlags          = "").append(""0x"").append(HexDump.toHex(  getFormatFlags ())).append("" ("").append( getFormatFlags() ).append("" )"");buffer.append(System.getProperty(""line.separator""));buffer.append(""         .stacked                  = "").append(isStacked()).append('\n');buffer.append(""         .displayAsPercentage      = "").append(isDisplayAsPercentage()).append('\n');buffer.append(""         .shadow                   = "").append(isShadow()).append('\n');buffer.append(""[/AREA]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendAREAnbufferappend    formatFlags           append0xappendHexDumptoHex  getFormatFlags append append getFormatFlags append bufferappendSystemgetPropertylineseparatorbufferappend         stacked                   appendisStackedappendnbufferappend         displayAsPercentage       appendisDisplayAsPercentageappendnbufferappend         shadow                    appendisShadowappendnbufferappendAREAnreturn buffertoString
public BatchCreateVariableResult batchCreateVariable(BatchCreateVariableRequest request) {request = beforeClientExecution(request);return executeBatchCreateVariable(request);},public BatchCreateVariableResult batchCreateVariableBatchCreateVariableRequest request request  beforeClientExecutionrequestreturn executeBatchCreateVariablerequest
public final boolean isReuseAsIs() {return (flags & REUSE_AS_IS) != 0;},public final boolean isReuseAsIs return flags  REUSEASIS  0
"public String toString() {return ""[PRINTGRIDLINES]\n"" +""    .printgridlines = "" + getPrintGridlines() +""\n"" +""[/PRINTGRIDLINES]\n"";}",public String toString return PRINTGRIDLINESn     printgridlines    getPrintGridlines n PRINTGRIDLINESn
public ApplySecurityGroupsToClientVpnTargetNetworkResult applySecurityGroupsToClientVpnTargetNetwork(ApplySecurityGroupsToClientVpnTargetNetworkRequest request) {request = beforeClientExecution(request);return executeApplySecurityGroupsToClientVpnTargetNetwork(request);},public ApplySecurityGroupsToClientVpnTargetNetworkResult applySecurityGroupsToClientVpnTargetNetworkApplySecurityGroupsToClientVpnTargetNetworkRequest request request  beforeClientExecutionrequestreturn executeApplySecurityGroupsToClientVpnTargetNetworkrequest
public DetachInternetGatewayResult detachInternetGateway(DetachInternetGatewayRequest request) {request = beforeClientExecution(request);return executeDetachInternetGateway(request);},public DetachInternetGatewayResult detachInternetGatewayDetachInternetGatewayRequest request request  beforeClientExecutionrequestreturn executeDetachInternetGatewayrequest
public static final RevFilter after(long ts) {return new After(ts);},public static final RevFilter afterlong ts return new Afterts
public DescribeCampaignResult describeCampaign(DescribeCampaignRequest request) {request = beforeClientExecution(request);return executeDescribeCampaign(request);},public DescribeCampaignResult describeCampaignDescribeCampaignRequest request request  beforeClientExecutionrequestreturn executeDescribeCampaignrequest
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[INDEX]\n"");buffer.append(""    .firstrow       = "").append(Integer.toHexString(getFirstRow())).append(""\n"");buffer.append(""    .lastrowadd1    = "").append(Integer.toHexString(getLastRowAdd1())).append(""\n"");for (int k = 0; k < getNumDbcells(); k++) {buffer.append(""    .dbcell_"").append(k).append("" = "").append(Integer.toHexString(getDbcellAt(k))).append(""\n"");}buffer.append(""[/INDEX]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendINDEXnbufferappend    firstrow        appendIntegertoHexStringgetFirstRowappendnbufferappend    lastrowadd1     appendIntegertoHexStringgetLastRowAdd1appendnfor int k  0 k  getNumDbcells k bufferappend    dbcellappendkappend  appendIntegertoHexStringgetDbcellAtkappendnbufferappendINDEXnreturn buffertoString
public UserSViewEnd clone() {return copy();},public UserSViewEnd clone return copy
public final float averageCharsPerByte() {return averageCharsPerByte;},public final float averageCharsPerByte return averageCharsPerByte
"public ListTimeLinePhotosRequest() {super(""CloudPhoto"", ""2017-07-11"", ""ListTimeLinePhotos"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public ListTimeLinePhotosRequest superCloudPhoto 20170711 ListTimeLinePhotos cloudphotosetProtocolProtocolTypeHTTPS
"public String toString() {return getClass().getName() + "" ["" +formatAsString() +""]"";}",public String toString return getClassgetName    formatAsString 
public RunTaskResult runTask(RunTaskRequest request) {request = beforeClientExecution(request);return executeRunTask(request);},public RunTaskResult runTaskRunTaskRequest request request  beforeClientExecutionrequestreturn executeRunTaskrequest
public void setCollector(Collector collector) {this.collector = collector;},public void setCollectorCollector collector thiscollector  collector
"public String toString() {return slice.toString()+"":""+ postingsEnum;}",public String toString return slicetoString postingsEnum
public void addFieldConfigListener(FieldConfigListener listener) {this.listeners.add(listener);},public void addFieldConfigListenerFieldConfigListener listener thislistenersaddlistener
public Result getResult() {return result;},public Result getResult return result
public ListNamedQueriesResult listNamedQueries(ListNamedQueriesRequest request) {request = beforeClientExecution(request);return executeListNamedQueries(request);},public ListNamedQueriesResult listNamedQueriesListNamedQueriesRequest request request  beforeClientExecutionrequestreturn executeListNamedQueriesrequest
public URIish setPort(int n) {final URIish r = new URIish(this);r.port = n > 0 ? n : -1;return r;},public URIish setPortint n final URIish r  new URIishthisrport  n  0  n  1return r
public void serialize(LittleEndianOutput out) {out.writeShort(_flags);},public void serializeLittleEndianOutput out outwriteShortflags
public byte[] getBuffer() {return buf;},public byte getBuffer return buf
"public String getSignerVersion() {return ""1.0"";}",public String getSignerVersion return 10
public DBParameterGroup copyDBParameterGroup(CopyDBParameterGroupRequest request) {request = beforeClientExecution(request);return executeCopyDBParameterGroup(request);},public DBParameterGroup copyDBParameterGroupCopyDBParameterGroupRequest request request  beforeClientExecutionrequestreturn executeCopyDBParameterGrouprequest
public PackedObjectInfo getObject(int nth) {return entries[nth];},public PackedObjectInfo getObjectint nth return entriesnth
"public CreateUserSourceAccountRequest() {super(""cr"", ""2016-06-07"", ""CreateUserSourceAccount"", ""cr"");setUriPattern(""/users/sourceAccount"");setMethod(MethodType.PUT);}",public CreateUserSourceAccountRequest supercr 20160607 CreateUserSourceAccount crsetUriPatternuserssourceAccountsetMethodMethodTypePUT
public DeleteApplicationVpcConfigurationResult deleteApplicationVpcConfiguration(DeleteApplicationVpcConfigurationRequest request) {request = beforeClientExecution(request);return executeDeleteApplicationVpcConfiguration(request);},public DeleteApplicationVpcConfigurationResult deleteApplicationVpcConfigurationDeleteApplicationVpcConfigurationRequest request request  beforeClientExecutionrequestreturn executeDeleteApplicationVpcConfigurationrequest
public final short[] array() {return protectedArray();},public final short array return protectedArray
"public ByteBuffer putLong(int index, long value) {throw new ReadOnlyBufferException();}",public ByteBuffer putLongint index long value throw new ReadOnlyBufferException
public void removeSubject() {remove1stProperty(PropertyIDMap.PID_SUBJECT);},public void removeSubject remove1stPropertyPropertyIDMapPIDSUBJECT
public BatchGetDeploymentGroupsResult batchGetDeploymentGroups(BatchGetDeploymentGroupsRequest request) {request = beforeClientExecution(request);return executeBatchGetDeploymentGroups(request);},public BatchGetDeploymentGroupsResult batchGetDeploymentGroupsBatchGetDeploymentGroupsRequest request request  beforeClientExecutionrequestreturn executeBatchGetDeploymentGroupsrequest
public DisassociateRepositoryResult disassociateRepository(DisassociateRepositoryRequest request) {request = beforeClientExecution(request);return executeDisassociateRepository(request);},public DisassociateRepositoryResult disassociateRepositoryDisassociateRepositoryRequest request request  beforeClientExecutionrequestreturn executeDisassociateRepositoryrequest
public DescribeSpotPriceHistoryResult describeSpotPriceHistory() {return describeSpotPriceHistory(new DescribeSpotPriceHistoryRequest());},public DescribeSpotPriceHistoryResult describeSpotPriceHistory return describeSpotPriceHistorynew DescribeSpotPriceHistoryRequest
"public UpdateRepoSourceRepoRequest() {super(""cr"", ""2016-06-07"", ""UpdateRepoSourceRepo"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/sourceRepo"");setMethod(MethodType.POST);}",public UpdateRepoSourceRepoRequest supercr 20160607 UpdateRepoSourceRepo crsetUriPatternreposRepoNamespaceRepoNamesourceReposetMethodMethodTypePOST
"public boolean isHidden() {if (path.isEmpty()) {return false;}return getName().startsWith(""."");}",public boolean isHidden if pathisEmpty return falsereturn getNamestartsWith
public PaneRecord(RecordInputStream in) {field_1_x          = in.readShort();field_2_y          = in.readShort();field_3_topRow     = in.readShort();field_4_leftColumn = in.readShort();field_5_activePane = in.readShort();},public PaneRecordRecordInputStream in field1x           inreadShortfield2y           inreadShortfield3topRow      inreadShortfield4leftColumn  inreadShortfield5activePane  inreadShort
public StartGameSessionPlacementResult startGameSessionPlacement(StartGameSessionPlacementRequest request) {request = beforeClientExecution(request);return executeStartGameSessionPlacement(request);},public StartGameSessionPlacementResult startGameSessionPlacementStartGameSessionPlacementRequest request request  beforeClientExecutionrequestreturn executeStartGameSessionPlacementrequest
public int getDFASize(int decision) {DFA decisionToDFA = atnSimulator.decisionToDFA[decision];return decisionToDFA.states.size();},public int getDFASizeint decision DFA decisionToDFA  atnSimulatordecisionToDFAdecisionreturn decisionToDFAstatessize
"public int fillFields(byte[] data, int offset, EscherRecordFactory recordFactory) {int bytesRemaining = readHeader( data, offset );int pos            = offset + 8;remainingData = (bytesRemaining == 0) ? EMPTY : IOUtils.safelyAllocate(bytesRemaining, MAX_RECORD_LENGTH);System.arraycopy( data, pos, remainingData, 0, bytesRemaining );return 8 + bytesRemaining;}",public int fillFieldsbyte data int offset EscherRecordFactory recordFactory int bytesRemaining  readHeader data offset int pos             offset  8remainingData  bytesRemaining  0  EMPTY  IOUtilssafelyAllocatebytesRemaining MAXRECORDLENGTHSystemarraycopy data pos remainingData 0 bytesRemaining return 8  bytesRemaining
public void startFragment(TextFragment newFragment) {foundTerms = new HashSet<>();totalScore = 0;},public void startFragmentTextFragment newFragment foundTerms  new HashSettotalScore  0
"public boolean equals(ATNConfig other) {if (this == other) {return true;}else if (!(other instanceof LexerATNConfig)) {return false;}LexerATNConfig lexerOther = (LexerATNConfig)other;if (passedThroughNonGreedyDecision != lexerOther.passedThroughNonGreedyDecision) {return false;}if (!ObjectEqualityComparator.INSTANCE.equals(lexerActionExecutor, lexerOther.lexerActionExecutor)) {return false;}return super.equals(other);}",public boolean equalsATNConfig other if this  other return trueelse if other instanceof LexerATNConfig return falseLexerATNConfig lexerOther  LexerATNConfigotherif passedThroughNonGreedyDecision  lexerOtherpassedThroughNonGreedyDecision return falseif ObjectEqualityComparatorINSTANCEequalslexerActionExecutor lexerOtherlexerActionExecutor return falsereturn superequalsother
public DescribeCacheParameterGroupsRequest(String cacheParameterGroupName) {setCacheParameterGroupName(cacheParameterGroupName);},public DescribeCacheParameterGroupsRequestString cacheParameterGroupName setCacheParameterGroupNamecacheParameterGroupName
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""    [Pattern Formatting]\n"");buffer.append(""          .fillpattern= "").append(Integer.toHexString(getFillPattern())).append(""\n"");buffer.append(""          .fgcoloridx= "").append(Integer.toHexString(getFillForegroundColor())).append(""\n"");buffer.append(""          .bgcoloridx= "").append(Integer.toHexString(getFillBackgroundColor())).append(""\n"");buffer.append(""    [/Pattern Formatting]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappend    Pattern Formattingnbufferappend          fillpattern appendIntegertoHexStringgetFillPatternappendnbufferappend          fgcoloridx appendIntegertoHexStringgetFillForegroundColorappendnbufferappend          bgcoloridx appendIntegertoHexStringgetFillBackgroundColorappendnbufferappend    Pattern Formattingnreturn buffertoString
public boolean equals(Object o) {return o instanceof FileKey && path.equals(((FileKey) o).path);},public boolean equalsObject o return o instanceof FileKey  pathequalsFileKey opath
public UntagAttendeeResult untagAttendee(UntagAttendeeRequest request) {request = beforeClientExecution(request);return executeUntagAttendee(request);},public UntagAttendeeResult untagAttendeeUntagAttendeeRequest request request  beforeClientExecutionrequestreturn executeUntagAttendeerequest
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[END]\n"");buffer.append(""[/END]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendENDnbufferappendENDnreturn buffertoString
"public MultiTerms(Terms[] subs, ReaderSlice[] subSlices) throws IOException { this.subs = subs;this.subSlices = subSlices;assert subs.length > 0 : ""inefficient: don't use MultiTerms over one sub"";boolean _hasFreqs = true;boolean _hasOffsets = true;boolean _hasPositions = true;boolean _hasPayloads = false;for(int i=0;i<subs.length;i++) {_hasFreqs &= subs[i].hasFreqs();_hasOffsets &= subs[i].hasOffsets();_hasPositions &= subs[i].hasPositions();_hasPayloads |= subs[i].hasPayloads();}hasFreqs = _hasFreqs;hasOffsets = _hasOffsets;hasPositions = _hasPositions;hasPayloads = hasPositions && _hasPayloads; }",public MultiTermsTerms subs ReaderSlice subSlices throws IOException  thissubs  substhissubSlices  subSlicesassert subslength  0  inefficient dont use MultiTerms over one subboolean hasFreqs  trueboolean hasOffsets  trueboolean hasPositions  trueboolean hasPayloads  falseforint i0isubslengthi hasFreqs  subsihasFreqshasOffsets  subsihasOffsetshasPositions  subsihasPositionshasPayloads  subsihasPayloadshasFreqs  hasFreqshasOffsets  hasOffsetshasPositions  hasPositionshasPayloads  hasPositions  hasPayloads 
public DescribeGameSessionPlacementResult describeGameSessionPlacement(DescribeGameSessionPlacementRequest request) {request = beforeClientExecution(request);return executeDescribeGameSessionPlacement(request);},public DescribeGameSessionPlacementResult describeGameSessionPlacementDescribeGameSessionPlacementRequest request request  beforeClientExecutionrequestreturn executeDescribeGameSessionPlacementrequest
"public SynonymMap(FST<BytesRef> fst, BytesRefHash words, int maxHorizontalContext) {this.fst = fst;this.words = words;this.maxHorizontalContext = maxHorizontalContext;}",public SynonymMapFSTBytesRef fst BytesRefHash words int maxHorizontalContext thisfst  fstthiswords  wordsthismaxHorizontalContext  maxHorizontalContext
public DeleteTrialComponentResult deleteTrialComponent(DeleteTrialComponentRequest request) {request = beforeClientExecution(request);return executeDeleteTrialComponent(request);},public DeleteTrialComponentResult deleteTrialComponentDeleteTrialComponentRequest request request  beforeClientExecutionrequestreturn executeDeleteTrialComponentrequest
public RevisionSyntaxException(String revstr) {this.revstr = revstr;},public RevisionSyntaxExceptionString revstr thisrevstr  revstr
public void startWorker() {startWorkers(1);},public void startWorker startWorkers1
public SubscribeToEventResult subscribeToEvent(SubscribeToEventRequest request) {request = beforeClientExecution(request);return executeSubscribeToEvent(request);},public SubscribeToEventResult subscribeToEventSubscribeToEventRequest request request  beforeClientExecutionrequestreturn executeSubscribeToEventrequest
public PutScheduledUpdateGroupActionResult putScheduledUpdateGroupAction(PutScheduledUpdateGroupActionRequest request) {request = beforeClientExecution(request);return executePutScheduledUpdateGroupAction(request);},public PutScheduledUpdateGroupActionResult putScheduledUpdateGroupActionPutScheduledUpdateGroupActionRequest request request  beforeClientExecutionrequestreturn executePutScheduledUpdateGroupActionrequest
"public int doLogic() throws Exception {if (maxNumSegments == -1) {throw new IllegalStateException(""required argument (maxNumSegments) was not specified"");}IndexWriter iw = getRunData().getIndexWriter();iw.forceMerge(maxNumSegments);return 1;}",public int doLogic throws Exception if maxNumSegments  1 throw new IllegalStateExceptionrequired argument maxNumSegments was not specifiedIndexWriter iw  getRunDatagetIndexWriteriwforceMergemaxNumSegmentsreturn 1
public String getSheetName(int sheetIndex) {return _uBook.getSheetName(sheetIndex);},public String getSheetNameint sheetIndex return uBookgetSheetNamesheetIndex
public DescribeConnectionLoaResult describeConnectionLoa(DescribeConnectionLoaRequest request) {request = beforeClientExecution(request);return executeDescribeConnectionLoa(request);},public DescribeConnectionLoaResult describeConnectionLoaDescribeConnectionLoaRequest request request  beforeClientExecutionrequestreturn executeDescribeConnectionLoarequest
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[NOTE]\n"");buffer.append(""    .row    = "").append(field_1_row).append(""\n"");buffer.append(""    .col    = "").append(field_2_col).append(""\n"");buffer.append(""    .flags  = "").append(field_3_flags).append(""\n"");buffer.append(""    .shapeid= "").append(field_4_shapeid).append(""\n"");buffer.append(""    .author = "").append(field_6_author).append(""\n"");buffer.append(""[/NOTE]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendNOTEnbufferappend    row     appendfield1rowappendnbufferappend    col     appendfield2colappendnbufferappend    flags   appendfield3flagsappendnbufferappend    shapeid appendfield4shapeidappendnbufferappend    author  appendfield6authorappendnbufferappendNOTEnreturn buffertoString
"public PipedInputStream(PipedOutputStream out, int pipeSize) throws IOException {this(pipeSize);connect(out);}",public PipedInputStreamPipedOutputStream out int pipeSize throws IOException thispipeSizeconnectout
public String toString() {return description();},public String toString return description
public synchronized Credential getCredential() {if (null == credential && null != icredential) {credential = icredential.fresh();}return credential;},public synchronized Credential getCredential if null  credential  null  icredential credential  icredentialfreshreturn credential
public OptionGroup copyOptionGroup(CopyOptionGroupRequest request) {request = beforeClientExecution(request);return executeCopyOptionGroup(request);},public OptionGroup copyOptionGroupCopyOptionGroupRequest request request  beforeClientExecutionrequestreturn executeCopyOptionGrouprequest
public InfoSubRecord(RecordInputStream in){field_1_stream_pos        = in.readInt();field_2_bucket_sst_offset = in.readShort();field_3_zero              = in.readShort();},public InfoSubRecordRecordInputStream infield1streampos         inreadIntfield2bucketsstoffset  inreadShortfield3zero               inreadShort
public TreeFilter clone() {final TreeFilter[] s = new TreeFilter[subfilters.length];for (int i = 0; i < s.length; i++)s[i] = subfilters[i].clone();return new List(s);},public TreeFilter clone final TreeFilter s  new TreeFiltersubfilterslengthfor int i  0 i  slength isi  subfiltersiclonereturn new Lists
public SendAlexaOfferToMasterResult sendAlexaOfferToMaster(SendAlexaOfferToMasterRequest request) {request = beforeClientExecution(request);return executeSendAlexaOfferToMaster(request);},public SendAlexaOfferToMasterResult sendAlexaOfferToMasterSendAlexaOfferToMasterRequest request request  beforeClientExecutionrequestreturn executeSendAlexaOfferToMasterrequest
public DescribeEndpointConfigResult describeEndpointConfig(DescribeEndpointConfigRequest request) {request = beforeClientExecution(request);return executeDescribeEndpointConfig(request);},public DescribeEndpointConfigResult describeEndpointConfigDescribeEndpointConfigRequest request request  beforeClientExecutionrequestreturn executeDescribeEndpointConfigrequest
public PushCommand setProgressMonitor(ProgressMonitor monitor) {checkCallable();if (monitor == null) {monitor = NullProgressMonitor.INSTANCE;}this.monitor = monitor;return this;},public PushCommand setProgressMonitorProgressMonitor monitor checkCallableif monitor  null monitor  NullProgressMonitorINSTANCEthismonitor  monitorreturn this
"public FloatBuffer get(float[] dst, int dstOffset, int floatCount) {byteBuffer.limit(limit * SizeOf.FLOAT);byteBuffer.position(position * SizeOf.FLOAT);if (byteBuffer instanceof DirectByteBuffer) {((DirectByteBuffer) byteBuffer).get(dst, dstOffset, floatCount);} else {((HeapByteBuffer) byteBuffer).get(dst, dstOffset, floatCount);}this.position += floatCount;return this;}",public FloatBuffer getfloat dst int dstOffset int floatCount byteBufferlimitlimit  SizeOfFLOATbyteBufferpositionposition  SizeOfFLOATif byteBuffer instanceof DirectByteBuffer DirectByteBuffer byteBuffergetdst dstOffset floatCount else HeapByteBuffer byteBuffergetdst dstOffset floatCountthisposition  floatCountreturn this
public boolean shouldBeRecursive() {for (TreeFilter f : subfilters)if (f.shouldBeRecursive())return true;return false;},public boolean shouldBeRecursive for TreeFilter f  subfiltersif fshouldBeRecursivereturn truereturn false
"public static void putUnicodeLE(String input, LittleEndianOutput out) {byte[] bytes = input.getBytes(UTF16LE);out.write(bytes);}",public static void putUnicodeLEString input LittleEndianOutput out byte bytes  inputgetBytesUTF16LEoutwritebytes
public ReservedNode acceptReservedNodeExchange(AcceptReservedNodeExchangeRequest request) {request = beforeClientExecution(request);return executeAcceptReservedNodeExchange(request);},public ReservedNode acceptReservedNodeExchangeAcceptReservedNodeExchangeRequest request request  beforeClientExecutionrequestreturn executeAcceptReservedNodeExchangerequest
public ClusterSecurityGroup authorizeClusterSecurityGroupIngress(AuthorizeClusterSecurityGroupIngressRequest request) {request = beforeClientExecution(request);return executeAuthorizeClusterSecurityGroupIngress(request);},public ClusterSecurityGroup authorizeClusterSecurityGroupIngressAuthorizeClusterSecurityGroupIngressRequest request request  beforeClientExecutionrequestreturn executeAuthorizeClusterSecurityGroupIngressrequest
public ListVaultsResult listVaults(ListVaultsRequest request) {request = beforeClientExecution(request);return executeListVaults(request);},public ListVaultsResult listVaultsListVaultsRequest request request  beforeClientExecutionrequestreturn executeListVaultsrequest
public void add(UDFFinder toolPack){_usedToolPacks.add(toolPack);},public void addUDFFinder toolPackusedToolPacksaddtoolPack
public CreateRealtimeEndpointResult createRealtimeEndpoint(CreateRealtimeEndpointRequest request) {request = beforeClientExecution(request);return executeCreateRealtimeEndpoint(request);},public CreateRealtimeEndpointResult createRealtimeEndpointCreateRealtimeEndpointRequest request request  beforeClientExecutionrequestreturn executeCreateRealtimeEndpointrequest
"public final void recurseClearCachedFormulaResults(IEvaluationListener listener) {if (listener == null) {recurseClearCachedFormulaResults();} else {listener.onClearCachedValue(this);recurseClearCachedFormulaResults(listener, 1);}}",public final void recurseClearCachedFormulaResultsIEvaluationListener listener if listener  null recurseClearCachedFormulaResults else listeneronClearCachedValuethisrecurseClearCachedFormulaResultslistener 1
public PageBreakRecord(RecordInputStream in) {final int nBreaks = in.readShort();_breaks.ensureCapacity(nBreaks + 2);for(int k = 0; k < nBreaks; k++) {_breaks.add(new Break(in));}initMap();},public PageBreakRecordRecordInputStream in final int nBreaks  inreadShortbreaksensureCapacitynBreaks  2forint k  0 k  nBreaks k breaksaddnew BreakininitMap
public String toString() {return attSource.toString();},public String toString return attSourcetoString
public void add(double value) {ensureCapacity(_count + 1);_array[_count] = value;_count++;},public void adddouble value ensureCapacitycount  1arraycount  valuecount
public FileInputStream(String path) throws FileNotFoundException {this(new File(path));},public FileInputStreamString path throws FileNotFoundException thisnew Filepath
public SetDataRetrievalPolicyResult setDataRetrievalPolicy(SetDataRetrievalPolicyRequest request) {request = beforeClientExecution(request);return executeSetDataRetrievalPolicy(request);},public SetDataRetrievalPolicyResult setDataRetrievalPolicySetDataRetrievalPolicyRequest request request  beforeClientExecutionrequestreturn executeSetDataRetrievalPolicyrequest
"public ScoreDoc(int doc, float score, int shardIndex) {this.doc = doc;this.score = score;this.shardIndex = shardIndex;}",public ScoreDocint doc float score int shardIndex thisdoc  docthisscore  scorethisshardIndex  shardIndex
"public SpanNotQuery(SpanQuery include, SpanQuery exclude, int pre, int post) {this.include = Objects.requireNonNull(include);this.exclude = Objects.requireNonNull(exclude);this.pre = pre;this.post = post;if (include.getField() != null && exclude.getField() != null && !include.getField().equals(exclude.getField()))throw new IllegalArgumentException(""Clauses must have same field."");}",public SpanNotQuerySpanQuery include SpanQuery exclude int pre int post thisinclude  ObjectsrequireNonNullincludethisexclude  ObjectsrequireNonNullexcludethispre  prethispost  postif includegetField  null  excludegetField  null  includegetFieldequalsexcludegetFieldthrow new IllegalArgumentExceptionClauses must have same field
public void visitContainedRecords(RecordVisitor rv) {if (_validationList.isEmpty()) {return;}rv.visitRecord(_headerRec);_validationList.forEach(rv::visitRecord);},public void visitContainedRecordsRecordVisitor rv if validationListisEmpty returnrvvisitRecordheaderRecvalidationListforEachrvvisitRecord
"public void addArea(int rowFrom, int colFrom, int rowTo, int colTo) {_mergedRegions.add(new CellRangeAddress(rowFrom, rowTo, colFrom, colTo));}",public void addAreaint rowFrom int colFrom int rowTo int colTo mergedRegionsaddnew CellRangeAddressrowFrom rowTo colFrom colTo
"public HungarianLightStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public HungarianLightStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public int readDataSize() {return _lei.readUShort();},public int readDataSize return leireadUShort
public DescribeAdjustmentTypesResult describeAdjustmentTypes(DescribeAdjustmentTypesRequest request) {request = beforeClientExecution(request);return executeDescribeAdjustmentTypes(request);},public DescribeAdjustmentTypesResult describeAdjustmentTypesDescribeAdjustmentTypesRequest request request  beforeClientExecutionrequestreturn executeDescribeAdjustmentTypesrequest
public DefineSuggesterResult defineSuggester(DefineSuggesterRequest request) {request = beforeClientExecution(request);return executeDefineSuggester(request);},public DefineSuggesterResult defineSuggesterDefineSuggesterRequest request request  beforeClientExecutionrequestreturn executeDefineSuggesterrequest
public GetJourneyDateRangeKpiResult getJourneyDateRangeKpi(GetJourneyDateRangeKpiRequest request) {request = beforeClientExecution(request);return executeGetJourneyDateRangeKpi(request);},public GetJourneyDateRangeKpiResult getJourneyDateRangeKpiGetJourneyDateRangeKpiRequest request request  beforeClientExecutionrequestreturn executeGetJourneyDateRangeKpirequest
"public PushCommand add(String nameOrSpec) {if (0 <= nameOrSpec.indexOf(':')) {refSpecs.add(new RefSpec(nameOrSpec));} else {Ref src;try {src = repo.findRef(nameOrSpec);} catch (IOException e) {throw new JGitInternalException(JGitText.get().exceptionCaughtDuringExecutionOfPushCommand,e);}if (src != null)add(src);}return this;}",public PushCommand addString nameOrSpec if 0  nameOrSpecindexOf refSpecsaddnew RefSpecnameOrSpec else Ref srctry src  repofindRefnameOrSpec catch IOException e throw new JGitInternalExceptionJGitTextgetexceptionCaughtDuringExecutionOfPushCommandeif src  nulladdsrcreturn this
public DescribeDataSourceResult describeDataSource(DescribeDataSourceRequest request) {request = beforeClientExecution(request);return executeDescribeDataSource(request);},public DescribeDataSourceResult describeDataSourceDescribeDataSourceRequest request request  beforeClientExecutionrequestreturn executeDescribeDataSourcerequest
"public AutoCRLFInputStream(InputStream in, boolean detectBinary) {this.in = in;this.detectBinary = detectBinary;}",public AutoCRLFInputStreamInputStream in boolean detectBinary thisin  inthisdetectBinary  detectBinary
public byte[] getRawRecord(){return _rawData;},public byte getRawRecordreturn rawData
public LongBuffer put(LongBuffer buf) {throw new ReadOnlyBufferException();},public LongBuffer putLongBuffer buf throw new ReadOnlyBufferException
"@Override public E set(int location, E object) {synchronized (mutex) {return list.set(location, object);}}",Override public E setint location E object synchronized mutex return listsetlocation object
public void jumpDrawablesToCurrentState() {super.jumpDrawablesToCurrentState();if (mProgressDrawable != null) mProgressDrawable.jumpToCurrentState();if (mIndeterminateDrawable != null) mIndeterminateDrawable.jumpToCurrentState();},public void jumpDrawablesToCurrentState superjumpDrawablesToCurrentStateif mProgressDrawable  null mProgressDrawablejumpToCurrentStateif mIndeterminateDrawable  null mIndeterminateDrawablejumpToCurrentState
public boolean contains(Object object) {Link<E> link = voidLink.next;if (object != null) {while (link != voidLink) {if (object.equals(link.data)) {return true;}link = link.next;}} else {while (link != voidLink) {if (link.data == null) {return true;}link = link.next;}}return false;},public boolean containsObject object LinkE link  voidLinknextif object  null while link  voidLink if objectequalslinkdata return truelink  linknext else while link  voidLink if linkdata  null return truelink  linknextreturn false
"public static double[] copyOf(double[] original, int newLength) {if (newLength < 0) {throw new NegativeArraySizeException();}return copyOfRange(original, 0, newLength);}",public static double copyOfdouble original int newLength if newLength  0 throw new NegativeArraySizeExceptionreturn copyOfRangeoriginal 0 newLength
public IndexSearcher acquire(long version) {ensureOpen();final SearcherTracker tracker = searchers.get(version);if (tracker != null &&tracker.searcher.getIndexReader().tryIncRef()) {return tracker.searcher;}return null;},public IndexSearcher acquirelong version ensureOpenfinal SearcherTracker tracker  searchersgetversionif tracker  null trackersearchergetIndexReadertryIncRef return trackersearcherreturn null
public void setDateToBeFormatted(double date) {this.dateToBeFormatted = date;},public void setDateToBeFormatteddouble date thisdateToBeFormatted  date
public CreateIntegrationResponseResult createIntegrationResponse(CreateIntegrationResponseRequest request) {request = beforeClientExecution(request);return executeCreateIntegrationResponse(request);},public CreateIntegrationResponseResult createIntegrationResponseCreateIntegrationResponseRequest request request  beforeClientExecutionrequestreturn executeCreateIntegrationResponserequest
"public PhraseWildcardQuery build() {return new PhraseWildcardQuery(field, phraseTerms, slop, maxMultiTermExpansions, segmentOptimizationEnabled);}",public PhraseWildcardQuery build return new PhraseWildcardQueryfield phraseTerms slop maxMultiTermExpansions segmentOptimizationEnabled
public synchronized void dropChanges() {pendingDeletes.dropChanges();dropMergingUpdates();},public synchronized void dropChanges pendingDeletesdropChangesdropMergingUpdates
public static int footerLength() {return 16;},public static int footerLength return 16
public DeleteDBParameterGroupRequest(String dBParameterGroupName) {setDBParameterGroupName(dBParameterGroupName);},public DeleteDBParameterGroupRequestString dBParameterGroupName setDBParameterGroupNamedBParameterGroupName
public GetDedicatedIpsResult getDedicatedIps(GetDedicatedIpsRequest request) {request = beforeClientExecution(request);return executeGetDedicatedIps(request);},public GetDedicatedIpsResult getDedicatedIpsGetDedicatedIpsRequest request request  beforeClientExecutionrequestreturn executeGetDedicatedIpsrequest
public DeleteArchiveResult deleteArchive(DeleteArchiveRequest request) {request = beforeClientExecution(request);return executeDeleteArchive(request);},public DeleteArchiveResult deleteArchiveDeleteArchiveRequest request request  beforeClientExecutionrequestreturn executeDeleteArchiverequest
"public ResourceRecordSet(String name, RRType type) {setName(name);setType(type.toString());}",public ResourceRecordSetString name RRType type setNamenamesetTypetypetoString
public ArabicNormalizationFilter(TokenStream input) {super(input);},public ArabicNormalizationFilterTokenStream input superinput
public ReceiveMessageResult receiveMessage(ReceiveMessageRequest request) {request = beforeClientExecution(request);return executeReceiveMessage(request);},public ReceiveMessageResult receiveMessageReceiveMessageRequest request request  beforeClientExecutionrequestreturn executeReceiveMessagerequest
"public CharSequence getFully(CharSequence key) {Row now = getRow(root);int w;Cell c;int cmd = -1;StrEnum e = new StrEnum(key, forward);Character ch = null;Character aux = null;for (int i = 0; i < key.length();) {ch = e.next();i++;c = now.at(ch);if (c == null) {return null;}cmd = c.cmd;for (int skip = c.skip; skip > 0; skip--) {if (i < key.length()) {aux = e.next();} else {return null;}i++;}w = now.getRef(ch);if (w >= 0) {now = getRow(w);} else if (i < key.length()) {return null;}}return (cmd == -1) ? null : cmds.get(cmd);}",public CharSequence getFullyCharSequence key Row now  getRowrootint wCell cint cmd  1StrEnum e  new StrEnumkey forwardCharacter ch  nullCharacter aux  nullfor int i  0 i  keylength ch  enextic  nowatchif c  null return nullcmd  ccmdfor int skip  cskip skip  0 skip if i  keylength aux  enext else return nulliw  nowgetRefchif w  0 now  getRoww else if i  keylength return nullreturn cmd  1  null  cmdsgetcmd
public Span[] getNames(String[] words) {Span[] names = nameFinder.find(words);return names;},public Span getNamesString words Span names  nameFinderfindwordsreturn names
public void reset() {used = false;},public void reset used  false
public AnalyticsPrefixPredicate(String prefix) {this.prefix = prefix;},public AnalyticsPrefixPredicateString prefix thisprefix  prefix
public byte readByte() {return (byte) readUByte();},public byte readByte return byte readUByte
public CreateImportJobResult createImportJob(CreateImportJobRequest request) {request = beforeClientExecution(request);return executeCreateImportJob(request);},public CreateImportJobResult createImportJobCreateImportJobRequest request request  beforeClientExecutionrequestreturn executeCreateImportJobrequest
"public byte[] build() {ByteArrayOutputStream os = new ByteArrayOutputStream();try (OutputStreamWriter w = new OutputStreamWriter(os,UTF_8)) {w.write(""object ""); getObjectId().copyTo(w);w.write('\n');w.write(""type ""); w.write(Constants.typeString(getObjectType()));w.write(""\n""); w.write(""tag ""); w.write(getTag());w.write(""\n""); if (getTagger() != null) {w.write(""tagger ""); w.write(getTagger().toExternalString());w.write('\n');}w.write('\n');if (getMessage() != null)w.write(getMessage());} catch (IOException err) {throw new RuntimeException(err);}return os.toByteArray();}",public byte build ByteArrayOutputStream os  new ByteArrayOutputStreamtry OutputStreamWriter w  new OutputStreamWriterosUTF8 wwriteobject  getObjectIdcopyTowwwritenwwritetype  wwriteConstantstypeStringgetObjectTypewwriten wwritetag  wwritegetTagwwriten if getTagger  null wwritetagger  wwritegetTaggertoExternalStringwwritenwwritenif getMessage  nullwwritegetMessage catch IOException err throw new RuntimeExceptionerrreturn ostoByteArray
"public boolean equals(ATNConfig a, ATNConfig b) {if ( a==b ) return true;if ( a==null || b==null ) return false;return a.state.stateNumber==b.state.stateNumber&& a.alt==b.alt&& a.semanticContext.equals(b.semanticContext);}",public boolean equalsATNConfig a ATNConfig b if  ab  return trueif  anull  bnull  return falsereturn astatestateNumberbstatestateNumber aaltbalt asemanticContextequalsbsemanticContext
public CreateMemberResult createMember(CreateMemberRequest request) {request = beforeClientExecution(request);return executeCreateMember(request);},public CreateMemberResult createMemberCreateMemberRequest request request  beforeClientExecutionrequestreturn executeCreateMemberrequest
public void removeParCount() {remove1stProperty(PropertyIDMap.PID_PARCOUNT);},public void removeParCount remove1stPropertyPropertyIDMapPIDPARCOUNT
public DeleteDeliveryStreamResult deleteDeliveryStream(DeleteDeliveryStreamRequest request) {request = beforeClientExecution(request);return executeDeleteDeliveryStream(request);},public DeleteDeliveryStreamResult deleteDeliveryStreamDeleteDeliveryStreamRequest request request  beforeClientExecutionrequestreturn executeDeleteDeliveryStreamrequest
public static RevFilter create(int maxCount) {if (maxCount < 0)throw new IllegalArgumentException(JGitText.get().maxCountMustBeNonNegative);return new MaxCountRevFilter(maxCount);},public static RevFilter createint maxCount if maxCount  0throw new IllegalArgumentExceptionJGitTextgetmaxCountMustBeNonNegativereturn new MaxCountRevFiltermaxCount
public PeerVpcResult peerVpc(PeerVpcRequest request) {request = beforeClientExecution(request);return executePeerVpc(request);},public PeerVpcResult peerVpcPeerVpcRequest request request  beforeClientExecutionrequestreturn executePeerVpcrequest
public GetResolverRuleResult getResolverRule(GetResolverRuleRequest request) {request = beforeClientExecution(request);return executeGetResolverRule(request);},public GetResolverRuleResult getResolverRuleGetResolverRuleRequest request request  beforeClientExecutionrequestreturn executeGetResolverRulerequest
public DeleteScalingPolicyResult deleteScalingPolicy(DeleteScalingPolicyRequest request) {request = beforeClientExecution(request);return executeDeleteScalingPolicy(request);},public DeleteScalingPolicyResult deleteScalingPolicyDeleteScalingPolicyRequest request request  beforeClientExecutionrequestreturn executeDeleteScalingPolicyrequest
public TokenStream create(TokenStream input) {return new SwedishLightStemFilter(input);},public TokenStream createTokenStream input return new SwedishLightStemFilterinput
public void serialize(LittleEndianOutput out) {out.writeShort(getRowNumber());out.writeShort(getFirstCol() == -1 ? (short)0 : getFirstCol());out.writeShort(getLastCol() == -1 ? (short)0 : getLastCol());out.writeShort(getHeight());out.writeShort(getOptimize());out.writeShort(field_6_reserved);out.writeShort(getOptionFlags());out.writeShort(getOptionFlags2());},public void serializeLittleEndianOutput out outwriteShortgetRowNumberoutwriteShortgetFirstCol  1  short0  getFirstColoutwriteShortgetLastCol  1  short0  getLastColoutwriteShortgetHeightoutwriteShortgetOptimizeoutwriteShortfield6reservedoutwriteShortgetOptionFlagsoutwriteShortgetOptionFlags2
public GetCredentialsForIdentityResult getCredentialsForIdentity(GetCredentialsForIdentityRequest request) {request = beforeClientExecution(request);return executeGetCredentialsForIdentity(request);},public GetCredentialsForIdentityResult getCredentialsForIdentityGetCredentialsForIdentityRequest request request  beforeClientExecutionrequestreturn executeGetCredentialsForIdentityrequest
public DeleteFileSystemResult deleteFileSystem(DeleteFileSystemRequest request) {request = beforeClientExecution(request);return executeDeleteFileSystem(request);},public DeleteFileSystemResult deleteFileSystemDeleteFileSystemRequest request request  beforeClientExecutionrequestreturn executeDeleteFileSystemrequest
public DeleteGameServerGroupResult deleteGameServerGroup(DeleteGameServerGroupRequest request) {request = beforeClientExecution(request);return executeDeleteGameServerGroup(request);},public DeleteGameServerGroupResult deleteGameServerGroupDeleteGameServerGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteGameServerGrouprequest
"public AutoCRLFOutputStream(OutputStream out) {this(out, true);}",public AutoCRLFOutputStreamOutputStream out thisout true
public DescribeLocationsResult describeLocations(DescribeLocationsRequest request) {request = beforeClientExecution(request);return executeDescribeLocations(request);},public DescribeLocationsResult describeLocationsDescribeLocationsRequest request request  beforeClientExecutionrequestreturn executeDescribeLocationsrequest
public CopyWorkspaceImageResult copyWorkspaceImage(CopyWorkspaceImageRequest request) {request = beforeClientExecution(request);return executeCopyWorkspaceImage(request);},public CopyWorkspaceImageResult copyWorkspaceImageCopyWorkspaceImageRequest request request  beforeClientExecutionrequestreturn executeCopyWorkspaceImagerequest
public UpdateAliasResult updateAlias(UpdateAliasRequest request) {request = beforeClientExecution(request);return executeUpdateAlias(request);},public UpdateAliasResult updateAliasUpdateAliasRequest request request  beforeClientExecutionrequestreturn executeUpdateAliasrequest
"public static final int nextLF(byte[] b, int ptr, char chrA) {final int sz = b.length;while (ptr < sz) {final byte c = b[ptr++];if (c == chrA || c == '\n')return ptr;}return ptr;}",public static final int nextLFbyte b int ptr char chrA final int sz  blengthwhile ptr  sz final byte c  bptrif c  chrA  c  nreturn ptrreturn ptr
"public static long checkFooter(ChecksumIndexInput in) throws IOException {validateFooter(in);long actualChecksum = in.getChecksum();long expectedChecksum = readCRC(in);if (expectedChecksum != actualChecksum) {throw new CorruptIndexException(""checksum failed (hardware problem?) : expected="" + Long.toHexString(expectedChecksum) +"" actual="" + Long.toHexString(actualChecksum), in);}return actualChecksum;}",public static long checkFooterChecksumIndexInput in throws IOException validateFooterinlong actualChecksum  ingetChecksumlong expectedChecksum  readCRCinif expectedChecksum  actualChecksum throw new CorruptIndexExceptionchecksum failed hardware problem  expected  LongtoHexStringexpectedChecksum  actual  LongtoHexStringactualChecksum inreturn actualChecksum
public GetLoadBalancersResult getLoadBalancers(GetLoadBalancersRequest request) {request = beforeClientExecution(request);return executeGetLoadBalancers(request);},public GetLoadBalancersResult getLoadBalancersGetLoadBalancersRequest request request  beforeClientExecutionrequestreturn executeGetLoadBalancersrequest
"public GetRepoListByNamespaceRequest() {super(""cr"", ""2016-06-07"", ""GetRepoListByNamespace"", ""cr"");setUriPattern(""/repos/[RepoNamespace]"");setMethod(MethodType.GET);}",public GetRepoListByNamespaceRequest supercr 20160607 GetRepoListByNamespace crsetUriPatternreposRepoNamespacesetMethodMethodTypeGET
public boolean add(QueryNodeProcessor processor) {boolean added = this.processors.add(processor);if (added) {processor.setQueryConfigHandler(this.queryConfig);}return added;},public boolean addQueryNodeProcessor processor boolean added  thisprocessorsaddprocessorif added processorsetQueryConfigHandlerthisqueryConfigreturn added
public PutEventStreamResult putEventStream(PutEventStreamRequest request) {request = beforeClientExecution(request);return executePutEventStream(request);},public PutEventStreamResult putEventStreamPutEventStreamRequest request request  beforeClientExecutionrequestreturn executePutEventStreamrequest
public int getRenameLimit() {return renameLimit;},public int getRenameLimit return renameLimit
public char next() {if (++index >= limit) {index = limit;return DONE;} else {return current();}},public char next if index  limit index  limitreturn DONE else return current
public final ObjectId getDeltaBaseId() {return deltaBase;},public final ObjectId getDeltaBaseId return deltaBase
public FieldType(IndexableFieldType ref) {this.stored = ref.stored();this.tokenized = ref.tokenized();this.storeTermVectors = ref.storeTermVectors();this.storeTermVectorOffsets = ref.storeTermVectorOffsets();this.storeTermVectorPositions = ref.storeTermVectorPositions();this.storeTermVectorPayloads = ref.storeTermVectorPayloads();this.omitNorms = ref.omitNorms();this.indexOptions = ref.indexOptions();this.docValuesType = ref.docValuesType();this.dimensionCount = ref.pointDimensionCount();this.indexDimensionCount = ref.pointIndexDimensionCount();this.dimensionNumBytes = ref.pointNumBytes();if (ref.getAttributes() != null) {this.attributes = new HashMap<>(ref.getAttributes());}},public FieldTypeIndexableFieldType ref thisstored  refstoredthistokenized  reftokenizedthisstoreTermVectors  refstoreTermVectorsthisstoreTermVectorOffsets  refstoreTermVectorOffsetsthisstoreTermVectorPositions  refstoreTermVectorPositionsthisstoreTermVectorPayloads  refstoreTermVectorPayloadsthisomitNorms  refomitNormsthisindexOptions  refindexOptionsthisdocValuesType  refdocValuesTypethisdimensionCount  refpointDimensionCountthisindexDimensionCount  refpointIndexDimensionCountthisdimensionNumBytes  refpointNumBytesif refgetAttributes  null thisattributes  new HashMaprefgetAttributes
public RestoreWorkspaceResult restoreWorkspace(RestoreWorkspaceRequest request) {request = beforeClientExecution(request);return executeRestoreWorkspace(request);},public RestoreWorkspaceResult restoreWorkspaceRestoreWorkspaceRequest request request  beforeClientExecutionrequestreturn executeRestoreWorkspacerequest
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[CODEPAGE]\n"");buffer.append(""    .codepage        = "").append(Integer.toHexString(getCodepage())).append(""\n"");buffer.append(""[/CODEPAGE]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendCODEPAGEnbufferappend    codepage         appendIntegertoHexStringgetCodepageappendnbufferappendCODEPAGEnreturn buffertoString
"public GetRepoTagsRequest() {super(""cr"", ""2016-06-07"", ""GetRepoTags"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/tags"");setMethod(MethodType.GET);}",public GetRepoTagsRequest supercr 20160607 GetRepoTags crsetUriPatternreposRepoNamespaceRepoNametagssetMethodMethodTypeGET
public ProtectRecord clone() {return copy();},public ProtectRecord clone return copy
public ModifyDBParameterGroupResult modifyDBParameterGroup(ModifyDBParameterGroupRequest request) {request = beforeClientExecution(request);return executeModifyDBParameterGroup(request);},public ModifyDBParameterGroupResult modifyDBParameterGroupModifyDBParameterGroupRequest request request  beforeClientExecutionrequestreturn executeModifyDBParameterGrouprequest
public QueryParserConfig build() {return new QueryParserConfig(this);},public QueryParserConfig build return new QueryParserConfigthis
public Set<String> getSections() {return getState().getSections();},public SetString getSections return getStategetSections
public UpdateProxySessionResult updateProxySession(UpdateProxySessionRequest request) {request = beforeClientExecution(request);return executeUpdateProxySession(request);},public UpdateProxySessionResult updateProxySessionUpdateProxySessionRequest request request  beforeClientExecutionrequestreturn executeUpdateProxySessionrequest
public double getAvp() {return maxGoodPoints==0 ? 0 : pReleventSum/maxGoodPoints;},public double getAvp return maxGoodPoints0  0  pReleventSummaxGoodPoints
public ListCompatibleImagesResult listCompatibleImages(ListCompatibleImagesRequest request) {request = beforeClientExecution(request);return executeListCompatibleImages(request);},public ListCompatibleImagesResult listCompatibleImagesListCompatibleImagesRequest request request  beforeClientExecutionrequestreturn executeListCompatibleImagesrequest
public int getSourceEnd() {Region r = outRegion;return r.sourceStart + r.length;},public int getSourceEnd Region r  outRegionreturn rsourceStart  rlength
public int read() {if (pos < size) {return s.charAt(pos++);} else {s = null;return -1;}},public int read if pos  size return scharAtpos else s  nullreturn 1
public GetMediaForFragmentListResult getMediaForFragmentList(GetMediaForFragmentListRequest request) {request = beforeClientExecution(request);return executeGetMediaForFragmentList(request);},public GetMediaForFragmentListResult getMediaForFragmentListGetMediaForFragmentListRequest request request  beforeClientExecutionrequestreturn executeGetMediaForFragmentListrequest
"public BlendedTermQuery build() {return new BlendedTermQuery(ArrayUtil.copyOfSubArray(terms, 0, numTerms),ArrayUtil.copyOfSubArray(boosts, 0, numTerms),ArrayUtil.copyOfSubArray(contexts, 0, numTerms),rewriteMethod);}",public BlendedTermQuery build return new BlendedTermQueryArrayUtilcopyOfSubArrayterms 0 numTermsArrayUtilcopyOfSubArrayboosts 0 numTermsArrayUtilcopyOfSubArraycontexts 0 numTermsrewriteMethod
"public void write(byte[] buffer, int offset, int length) throws IOException {checkWritePrimitiveTypes();primitiveTypes.write(buffer, offset, length);}",public void writebyte buffer int offset int length throws IOException checkWritePrimitiveTypesprimitiveTypeswritebuffer offset length
public ModifyScheduledActionResult modifyScheduledAction(ModifyScheduledActionRequest request) {request = beforeClientExecution(request);return executeModifyScheduledAction(request);},public ModifyScheduledActionResult modifyScheduledActionModifyScheduledActionRequest request request  beforeClientExecutionrequestreturn executeModifyScheduledActionrequest
"public CreateEventRequest() {super(""CloudPhoto"", ""2017-07-11"", ""CreateEvent"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public CreateEventRequest superCloudPhoto 20170711 CreateEvent cloudphotosetProtocolProtocolTypeHTTPS
public DeleteDirectoryResult deleteDirectory(DeleteDirectoryRequest request) {request = beforeClientExecution(request);return executeDeleteDirectory(request);},public DeleteDirectoryResult deleteDirectoryDeleteDirectoryRequest request request  beforeClientExecutionrequestreturn executeDeleteDirectoryrequest
"public static RevFilter create(RevFilter a, RevFilter b) {if (a == ALL)return b;if (b == ALL)return a;return new Binary(a, b);}",public static RevFilter createRevFilter a RevFilter b if a  ALLreturn bif b  ALLreturn areturn new Binarya b
public PasswordRecord(int password) {field_1_password = password;},public PasswordRecordint password field1password  password
"public CzechStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public CzechStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public CloseIgnoringInputStream(InputStream in) {super(in);},public CloseIgnoringInputStreamInputStream in superin
public Snapshot modifyClusterSnapshot(ModifyClusterSnapshotRequest request) {request = beforeClientExecution(request);return executeModifyClusterSnapshot(request);},public Snapshot modifyClusterSnapshotModifyClusterSnapshotRequest request request  beforeClientExecutionrequestreturn executeModifyClusterSnapshotrequest
public boolean inErrorRecoveryMode(Parser recognizer) {return errorRecoveryMode;},public boolean inErrorRecoveryModeParser recognizer return errorRecoveryMode
"public FacetLabel(String dim, String[] path) {components = new String[1+path.length];components[0] = dim;System.arraycopy(path, 0, components, 1, path.length);length = components.length;checkComponents();}",public FacetLabelString dim String path components  new String1pathlengthcomponents0  dimSystemarraycopypath 0 components 1 pathlengthlength  componentslengthcheckComponents
public UntagStreamResult untagStream(UntagStreamRequest request) {request = beforeClientExecution(request);return executeUntagStream(request);},public UntagStreamResult untagStreamUntagStreamRequest request request  beforeClientExecutionrequestreturn executeUntagStreamrequest
public long addAndGet(long delta) {return count += delta;},public long addAndGetlong delta return count  delta
"public int read() throws IOException {synchronized (lock) {if (!isOpen()) {throw new IOException(""InputStreamReader is closed"");}char[] buf = new char[1];return read(buf, 0, 1) != -1 ? buf[0] : -1;}}",public int read throws IOException synchronized lock if isOpen throw new IOExceptionInputStreamReader is closedchar buf  new char1return readbuf 0 1  1  buf0  1
public static int getEncodedSize(int numberOfItems) {return numberOfItems * ENCODED_SIZE;},public static int getEncodedSizeint numberOfItems return numberOfItems  ENCODEDSIZE
"public PrintStream(File file, String csn) throws FileNotFoundException,UnsupportedEncodingException {super(new FileOutputStream(file));if (csn == null) {throw new NullPointerException();}if (!Charset.isSupported(csn)) {throw new UnsupportedEncodingException(csn);}encoding = csn;}",public PrintStreamFile file String csn throws FileNotFoundExceptionUnsupportedEncodingException supernew FileOutputStreamfileif csn  null throw new NullPointerExceptionif CharsetisSupportedcsn throw new UnsupportedEncodingExceptioncsnencoding  csn
public E poll() {return size == 0 ? null : removeFirst();},public E poll return size  0  null  removeFirst
"public void write(char[] cbuf, int offset, int count) throws IOException {synchronized (lock) {checkNotClosed();if (cbuf == null) {throw new NullPointerException(""buffer == null"");}Arrays.checkOffsetAndCount(cbuf.length, offset, count);if (pos == 0 && count >= this.buf.length) {out.write(cbuf, offset, count);return;}int available = this.buf.length - pos;if (count < available) {available = count;}if (available > 0) {System.arraycopy(cbuf, offset, this.buf, pos, available);pos += available;}if (pos == this.buf.length) {out.write(this.buf, 0, this.buf.length);pos = 0;if (count > available) {offset += available;available = count - available;if (available >= this.buf.length) {out.write(cbuf, offset, available);return;}System.arraycopy(cbuf, offset, this.buf, pos, available);pos += available;}}}}",public void writechar cbuf int offset int count throws IOException synchronized lock checkNotClosedif cbuf  null throw new NullPointerExceptionbuffer  nullArrayscheckOffsetAndCountcbuflength offset countif pos  0  count  thisbuflength outwritecbuf offset countreturnint available  thisbuflength  posif count  available available  countif available  0 Systemarraycopycbuf offset thisbuf pos availablepos  availableif pos  thisbuflength outwritethisbuf 0 thisbuflengthpos  0if count  available offset  availableavailable  count  availableif available  thisbuflength outwritecbuf offset availablereturnSystemarraycopycbuf offset thisbuf pos availablepos  available
"public String toString(String enc) throws UnsupportedEncodingException {return new String(toByteArray(), enc);}",public String toStringString enc throws UnsupportedEncodingException return new StringtoByteArray enc
public CreateRoomMembershipResult createRoomMembership(CreateRoomMembershipRequest request) {request = beforeClientExecution(request);return executeCreateRoomMembership(request);},public CreateRoomMembershipResult createRoomMembershipCreateRoomMembershipRequest request request  beforeClientExecutionrequestreturn executeCreateRoomMembershiprequest
"public long ramBytesUsed() {long size = 0;for (Map.Entry<String,DocValuesProducer> entry : formats.entrySet()) {size += (entry.getKey().length() * Character.BYTES) + entry.getValue().ramBytesUsed();}return size;}",public long ramBytesUsed long size  0for MapEntryStringDocValuesProducer entry  formatsentrySet size  entrygetKeylength  CharacterBYTES  entrygetValueramBytesUsedreturn size
public int getDFASize() {int n = 0;DFA[] decisionToDFA = atnSimulator.decisionToDFA;for (int i = 0; i < decisionToDFA.length; i++) {n += getDFASize(i);}return n;},public int getDFASize int n  0DFA decisionToDFA  atnSimulatordecisionToDFAfor int i  0 i  decisionToDFAlength i n  getDFASizeireturn n
"public static CodePointCharStream fromString(String s) {return fromString(s, IntStream.UNKNOWN_SOURCE_NAME);}",public static CodePointCharStream fromStringString s return fromStrings IntStreamUNKNOWNSOURCENAME
"public DeleteUserSourceAccountRequest() {super(""cr"", ""2016-06-07"", ""DeleteUserSourceAccount"", ""cr"");setUriPattern(""/users/sourceAccount/[SourceAccountId]"");setMethod(MethodType.DELETE);}",public DeleteUserSourceAccountRequest supercr 20160607 DeleteUserSourceAccount crsetUriPatternuserssourceAccountSourceAccountIdsetMethodMethodTypeDELETE
"public static Proxy proxyFor(ProxySelector proxySelector, URL u)throws ConnectException {try {URI uri = new URI(u.getProtocol(), null, u.getHost(), u.getPort(),null, null, null);return proxySelector.select(uri).get(0);} catch (URISyntaxException e) {final ConnectException err;err = new ConnectException(MessageFormat.format(JGitText.get().cannotDetermineProxyFor, u));err.initCause(e);throw err;}}",public static Proxy proxyForProxySelector proxySelector URL uthrows ConnectException try URI uri  new URIugetProtocol null ugetHost ugetPortnull null nullreturn proxySelectorselecturiget0 catch URISyntaxException e final ConnectException errerr  new ConnectExceptionMessageFormatformatJGitTextgetcannotDetermineProxyFor uerrinitCauseethrow err
"public String toString() {String dsc = null;switch (this.type) {case TYPE_UNDERFLOW:dsc = ""UNDERFLOW error"";break;case TYPE_OVERFLOW:dsc = ""OVERFLOW error"";break;case TYPE_UNMAPPABLE_CHAR:dsc = ""Unmappable-character error with erroneous input length ""+ this.length;break;case TYPE_MALFORMED_INPUT:dsc = ""Malformed-input error with erroneous input length ""+ this.length;break;default:dsc = """";break;}return getClass().getName() + ""["" + dsc + ""]"";}",public String toString String dsc  nullswitch thistype case TYPEUNDERFLOWdsc  UNDERFLOW errorbreakcase TYPEOVERFLOWdsc  OVERFLOW errorbreakcase TYPEUNMAPPABLECHARdsc  Unmappablecharacter error with erroneous input length  thislengthbreakcase TYPEMALFORMEDINPUTdsc  Malformedinput error with erroneous input length  thislengthbreakdefaultdsc  breakreturn getClassgetName    dsc  
public PredictResult predict(PredictRequest request) {request = beforeClientExecution(request);return executePredict(request);},public PredictResult predictPredictRequest request request  beforeClientExecutionrequestreturn executePredictrequest
"public Ptg get3DReferencePtg(AreaReference areaRef, SheetIdentifier sheet) {int extIx = getSheetExtIx(sheet);return new Area3DPtg(areaRef, extIx);}",public Ptg get3DReferencePtgAreaReference areaRef SheetIdentifier sheet int extIx  getSheetExtIxsheetreturn new Area3DPtgareaRef extIx
public DescribeMatchmakingResult describeMatchmaking(DescribeMatchmakingRequest request) {request = beforeClientExecution(request);return executeDescribeMatchmaking(request);},public DescribeMatchmakingResult describeMatchmakingDescribeMatchmakingRequest request request  beforeClientExecutionrequestreturn executeDescribeMatchmakingrequest
public DeleteDeviceUsageDataResult deleteDeviceUsageData(DeleteDeviceUsageDataRequest request) {request = beforeClientExecution(request);return executeDeleteDeviceUsageData(request);},public DeleteDeviceUsageDataResult deleteDeviceUsageDataDeleteDeviceUsageDataRequest request request  beforeClientExecutionrequestreturn executeDeleteDeviceUsageDatarequest
public void removeHyperlink() {for (Iterator<RecordBase> it = _sheet.getSheet().getRecords().iterator(); it.hasNext();) {RecordBase rec = it.next();if (rec instanceof HyperlinkRecord) {HyperlinkRecord link = (HyperlinkRecord) rec;if (link.getFirstColumn() == _record.getColumn() && link.getFirstRow() == _record.getRow()) {it.remove();return;}}}},public void removeHyperlink for IteratorRecordBase it  sheetgetSheetgetRecordsiterator ithasNext RecordBase rec  itnextif rec instanceof HyperlinkRecord HyperlinkRecord link  HyperlinkRecord recif linkgetFirstColumn  recordgetColumn  linkgetFirstRow  recordgetRow itremovereturn
"public RegisterInstancesWithLoadBalancerRequest(String loadBalancerName, java.util.List<Instance> instances) {setLoadBalancerName(loadBalancerName);setInstances(instances);}",public RegisterInstancesWithLoadBalancerRequestString loadBalancerName javautilListInstance instances setLoadBalancerNameloadBalancerNamesetInstancesinstances
public AssociateResolverRuleResult associateResolverRule(AssociateResolverRuleRequest request) {request = beforeClientExecution(request);return executeAssociateResolverRule(request);},public AssociateResolverRuleResult associateResolverRuleAssociateResolverRuleRequest request request  beforeClientExecutionrequestreturn executeAssociateResolverRulerequest
"@Override public Set<Entry<K, V>> entrySet() {throw new UnsupportedOperationException();}",Override public SetEntryK V entrySet throw new UnsupportedOperationException
public TreeFilter negate() {return a;},public TreeFilter negate return a
public SearchProfilesResult searchProfiles(SearchProfilesRequest request) {request = beforeClientExecution(request);return executeSearchProfiles(request);},public SearchProfilesResult searchProfilesSearchProfilesRequest request request  beforeClientExecutionrequestreturn executeSearchProfilesrequest
public DBSubnetGroup modifyDBSubnetGroup(ModifyDBSubnetGroupRequest request) {request = beforeClientExecution(request);return executeModifyDBSubnetGroup(request);},public DBSubnetGroup modifyDBSubnetGroupModifyDBSubnetGroupRequest request request  beforeClientExecutionrequestreturn executeModifyDBSubnetGrouprequest
"public int compareTo(String version) {final String[] parts = version.split("":"");final long indexGen = Long.parseLong(parts[0], RADIX);final long taxoGen = Long.parseLong(parts[1], RADIX);final long indexCommitGen = indexCommit.getGeneration();final long taxoCommitGen = taxoCommit.getGeneration();if (indexCommitGen < indexGen) {return -1;} else if (indexCommitGen > indexGen) {return 1;} else {return taxoCommitGen < taxoGen ? -1 : (taxoCommitGen > taxoGen ? 1 : 0);}}",public int compareToString version final String parts  versionsplitfinal long indexGen  LongparseLongparts0 RADIXfinal long taxoGen  LongparseLongparts1 RADIXfinal long indexCommitGen  indexCommitgetGenerationfinal long taxoCommitGen  taxoCommitgetGenerationif indexCommitGen  indexGen return 1 else if indexCommitGen  indexGen return 1 else return taxoCommitGen  taxoGen  1  taxoCommitGen  taxoGen  1  0
public LiteralValueSource(String string) {this.string = string;this.bytesRef = new BytesRef(string);},public LiteralValueSourceString string thisstring  stringthisbytesRef  new BytesRefstring
public int getValue(final int holder){return getRawValue(holder) >>> _shift_count;},public int getValuefinal int holderreturn getRawValueholder  shiftcount
"public HSSFShapeGroup(HSSFShape parent, HSSFAnchor anchor) {super(parent, anchor);_spgrRecord = ((EscherContainerRecord)getEscherContainer().getChild(0)).getChildById(EscherSpgrRecord.RECORD_ID);}",public HSSFShapeGroupHSSFShape parent HSSFAnchor anchor superparent anchorspgrRecord  EscherContainerRecordgetEscherContainergetChild0getChildByIdEscherSpgrRecordRECORDID
"public String toString() {return ""Note["" + name() + "" -> "" + data.name() + ""]"";}",public String toString return Note  name      dataname  
public DeleteFpgaImageResult deleteFpgaImage(DeleteFpgaImageRequest request) {request = beforeClientExecution(request);return executeDeleteFpgaImage(request);},public DeleteFpgaImageResult deleteFpgaImageDeleteFpgaImageRequest request request  beforeClientExecutionrequestreturn executeDeleteFpgaImagerequest
public CreateAppCookieStickinessPolicyResult createAppCookieStickinessPolicy(CreateAppCookieStickinessPolicyRequest request) {request = beforeClientExecution(request);return executeCreateAppCookieStickinessPolicy(request);},public CreateAppCookieStickinessPolicyResult createAppCookieStickinessPolicyCreateAppCookieStickinessPolicyRequest request request  beforeClientExecutionrequestreturn executeCreateAppCookieStickinessPolicyrequest
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[FNGROUPCOUNT]\n"");buffer.append(""    .count            = "").append(getCount()).append(""\n"");buffer.append(""[/FNGROUPCOUNT]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendFNGROUPCOUNTnbufferappend    count             appendgetCountappendnbufferappendFNGROUPCOUNTnreturn buffertoString
"public final void sort(int from, int to) {checkRange(from, to);quicksort(from, to, 2 * MathUtil.log(to - from, 2));}",public final void sortint from int to checkRangefrom toquicksortfrom to 2  MathUtillogto  from 2
public DescribeMonitoringScheduleResult describeMonitoringSchedule(DescribeMonitoringScheduleRequest request) {request = beforeClientExecution(request);return executeDescribeMonitoringSchedule(request);},public DescribeMonitoringScheduleResult describeMonitoringScheduleDescribeMonitoringScheduleRequest request request  beforeClientExecutionrequestreturn executeDescribeMonitoringSchedulerequest
public HeaderLineParser(String[] header) {super(header);posToF = new FieldName[header.length];for (int i=0; i<header.length; i++) {String f = header[i];if (DocMaker.NAME_FIELD.equals(f)) {posToF[i] = FieldName.NAME;} else if (DocMaker.TITLE_FIELD.equals(f)) {posToF[i] = FieldName.TITLE;} else if (DocMaker.DATE_FIELD.equals(f)) {posToF[i] = FieldName.DATE;} else if (DocMaker.BODY_FIELD.equals(f)) {posToF[i] = FieldName.BODY;} else {posToF[i] = FieldName.PROP;}}},public HeaderLineParserString header superheaderposToF  new FieldNameheaderlengthfor int i0 iheaderlength i String f  headeriif DocMakerNAMEFIELDequalsf posToFi  FieldNameNAME else if DocMakerTITLEFIELDequalsf posToFi  FieldNameTITLE else if DocMakerDATEFIELDequalsf posToFi  FieldNameDATE else if DocMakerBODYFIELDequalsf posToFi  FieldNameBODY else posToFi  FieldNamePROP
public void reset() {if (useHash) {map.clear();useHash = false;}count = 0;},public void reset if useHash mapclearuseHash  falsecount  0
"public StandardTokenizerFactory(Map<String,String> args) {super(args);maxTokenLength = getInt(args, ""maxTokenLength"", StandardAnalyzer.DEFAULT_MAX_TOKEN_LENGTH);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public StandardTokenizerFactoryMapStringString args superargsmaxTokenLength  getIntargs maxTokenLength StandardAnalyzerDEFAULTMAXTOKENLENGTHif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long byte0 = blocks[blocksOffset++] & 0xFF;final long byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 6) | (byte1 >>> 2);final long byte2 = blocks[blocksOffset++] & 0xFF;final long byte3 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 3) << 12) | (byte2 << 4) | (byte3 >>> 4);final long byte4 = blocks[blocksOffset++] & 0xFF;final long byte5 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte3 & 15) << 10) | (byte4 << 2) | (byte5 >>> 6);final long byte6 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte5 & 63) << 8) | byte6;}}",public void decodebyte blocks int blocksOffset long values int valuesOffset int iterations for int i  0 i  iterations i final long byte0  blocksblocksOffset  0xFFfinal long byte1  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  6  byte1  2final long byte2  blocksblocksOffset  0xFFfinal long byte3  blocksblocksOffset  0xFFvaluesvaluesOffset  byte1  3  12  byte2  4  byte3  4final long byte4  blocksblocksOffset  0xFFfinal long byte5  blocksblocksOffset  0xFFvaluesvaluesOffset  byte3  15  10  byte4  2  byte5  6final long byte6  blocksblocksOffset  0xFFvaluesvaluesOffset  byte5  63  8  byte6
"public boolean precpred(RuleContext localctx, int precedence) {return true;}",public boolean precpredRuleContext localctx int precedence return true
public int getFSD() {return fSD;},public int getFSD return fSD
public static FunctionMetadata getFunctionByIndex(int index) {return getInstance().getFunctionByIndexInternal(index);},public static FunctionMetadata getFunctionByIndexint index return getInstancegetFunctionByIndexInternalindex
public Object toObject() {assert exists || 0 == value.length();return exists ? value.get().utf8ToString() : null;},public Object toObject assert exists  0  valuelengthreturn exists  valuegetutf8ToString  null
public GetDisksResult getDisks(GetDisksRequest request) {request = beforeClientExecution(request);return executeGetDisks(request);},public GetDisksResult getDisksGetDisksRequest request request  beforeClientExecutionrequestreturn executeGetDisksrequest
"public String toString() {return getClass().getSimpleName() + ""(compressionMode="" + compressionMode+ "", chunkSize="" + chunkSize + "", maxDocsPerChunk="" + maxDocsPerChunk + "", blockShift="" + blockShift + "")"";}",public String toString return getClassgetSimpleName  compressionMode  compressionMode  chunkSize  chunkSize   maxDocsPerChunk  maxDocsPerChunk   blockShift  blockShift  
public DescribeVolumesModificationsResult describeVolumesModifications(DescribeVolumesModificationsRequest request) {request = beforeClientExecution(request);return executeDescribeVolumesModifications(request);},public DescribeVolumesModificationsResult describeVolumesModificationsDescribeVolumesModificationsRequest request request  beforeClientExecutionrequestreturn executeDescribeVolumesModificationsrequest
"public float currentScore(int docId, String field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore) {return currentPayloadScore + currentScore;}",public float currentScoreint docId String field int start int end int numPayloadsSeen float currentScore float currentPayloadScore return currentPayloadScore  currentScore
"public StartRepoBuildRequest() {super(""cr"", ""2016-06-07"", ""StartRepoBuild"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/build"");setMethod(MethodType.PUT);}",public StartRepoBuildRequest supercr 20160607 StartRepoBuild crsetUriPatternreposRepoNamespaceRepoNamebuildsetMethodMethodTypePUT
public Instance(String instanceId) {setInstanceId(instanceId);},public InstanceString instanceId setInstanceIdinstanceId
"public int getEntryPathHashCode() {int hash = 0;for (int i = Math.max(0, pathLen - 16); i < pathLen; i++) {byte c = path[i];if (c != ' ')hash = (hash >>> 2) + (c << 24);}return hash;}",public int getEntryPathHashCode int hash  0for int i  Mathmax0 pathLen  16 i  pathLen i byte c  pathiif c   hash  hash  2  c  24return hash
public CreateBranchCommand setName(String name) {checkCallable();this.name = name;return this;},public CreateBranchCommand setNameString name checkCallablethisname  namereturn this
public static Reporter getReporter() {return REPORTER;},public static Reporter getReporter return REPORTER
"public void getChars(int start, int end, char[] dst, int dstStart) {if (start > count || end > count || start > end) {throw startEndAndLength(start, end);}System.arraycopy(value, start, dst, dstStart, end - start);}",public void getCharsint start int end char dst int dstStart if start  count  end  count  start  end throw startEndAndLengthstart endSystemarraycopyvalue start dst dstStart end  start
"public LongBuffer put(long[] src, int srcOffset, int longCount) {if (longCount > remaining()) {throw new BufferOverflowException();}System.arraycopy(src, srcOffset, backingArray, offset + position, longCount);position += longCount;return this;}",public LongBuffer putlong src int srcOffset int longCount if longCount  remaining throw new BufferOverflowExceptionSystemarraycopysrc srcOffset backingArray offset  position longCountposition  longCountreturn this
public long getSourceSize() {return src.length;},public long getSourceSize return srclength
public void setID(String id) {if (id == null) {throw new NullPointerException();}ID = id;},public void setIDString id if id  null throw new NullPointerExceptionID  id
public GetCampaignVersionsResult getCampaignVersions(GetCampaignVersionsRequest request) {request = beforeClientExecution(request);return executeGetCampaignVersions(request);},public GetCampaignVersionsResult getCampaignVersionsGetCampaignVersionsRequest request request  beforeClientExecutionrequestreturn executeGetCampaignVersionsrequest
public long getTotalSLLLookaheadOps() {DecisionInfo[] decisions = atnSimulator.getDecisionInfo();long k = 0;for (int i = 0; i < decisions.length; i++) {k += decisions[i].SLL_TotalLook;}return k;},public long getTotalSLLLookaheadOps DecisionInfo decisions  atnSimulatorgetDecisionInfolong k  0for int i  0 i  decisionslength i k  decisionsiSLLTotalLookreturn k
"public static Row getRow(int rowIndex, Sheet sheet) {Row row = sheet.getRow(rowIndex);if (row == null) {row = sheet.createRow(rowIndex);}return row;}",public static Row getRowint rowIndex Sheet sheet Row row  sheetgetRowrowIndexif row  null row  sheetcreateRowrowIndexreturn row
public void clear() {doc = null;analyzer = null;},public void clear doc  nullanalyzer  null
"public KeyPairCredentials(String publicKeyId, String privateKeySecret) {if (publicKeyId == null || privateKeySecret == null) {throw new IllegalArgumentException(""You must provide a valid pair of Public Key ID and Private Key Secret."");}this.publicKeyId = publicKeyId;this.privateKeySecret = privateKeySecret;}",public KeyPairCredentialsString publicKeyId String privateKeySecret if publicKeyId  null  privateKeySecret  null throw new IllegalArgumentExceptionYou must provide a valid pair of Public Key ID and Private Key SecretthispublicKeyId  publicKeyIdthisprivateKeySecret  privateKeySecret
public PredictionContext getParent(int index) {return parents[index];},public PredictionContext getParentint index return parentsindex
public synchronized StringBuffer append(String string) {append0(string);return this;},public synchronized StringBuffer appendString string append0stringreturn this
"public void removeBuiltinRecord(byte name, int sheetIndex) {NameRecord record = getSpecificBuiltinRecord(name, sheetIndex);if (record != null) {_definedNames.remove(record);}}",public void removeBuiltinRecordbyte name int sheetIndex NameRecord record  getSpecificBuiltinRecordname sheetIndexif record  null definedNamesremoverecord
"public SharedFormulaGroup(SharedFormulaRecord sfr, CellReference firstCell) {if (!sfr.isInRange(firstCell.getRow(), firstCell.getCol())) {throw new IllegalArgumentException(""First formula cell "" + firstCell.formatAsString()+ "" is not shared formula range "" + sfr.getRange() + ""."");}_sfr = sfr;_firstCell = firstCell;int width = sfr.getLastColumn() - sfr.getFirstColumn() + 1;int height = sfr.getLastRow() - sfr.getFirstRow() + 1;_frAggs = new FormulaRecordAggregate[width * height];_numberOfFormulas = 0;}",public SharedFormulaGroupSharedFormulaRecord sfr CellReference firstCell if sfrisInRangefirstCellgetRow firstCellgetCol throw new IllegalArgumentExceptionFirst formula cell   firstCellformatAsString  is not shared formula range   sfrgetRange  sfr  sfrfirstCell  firstCellint width  sfrgetLastColumn  sfrgetFirstColumn  1int height  sfrgetLastRow  sfrgetFirstRow  1frAggs  new FormulaRecordAggregatewidth  heightnumberOfFormulas  0
"public void modifyFormatRun(short oldPos, short newLen) {int shift = 0;for(int i=0; i < _formats.length; i++) {CTFormat ctf = _formats[i];if (shift != 0) {ctf.setOffset(ctf.getOffset() + shift);} else if (oldPos == ctf.getOffset() && i < _formats.length - 1){CTFormat nextCTF = _formats[i + 1];shift = newLen - (nextCTF.getOffset() - ctf.getOffset());}}}",public void modifyFormatRunshort oldPos short newLen int shift  0forint i0 i  formatslength i CTFormat ctf  formatsiif shift  0 ctfsetOffsetctfgetOffset  shift else if oldPos  ctfgetOffset  i  formatslength  1CTFormat nextCTF  formatsi  1shift  newLen  nextCTFgetOffset  ctfgetOffset
public AddInstanceGroupsResult addInstanceGroups(AddInstanceGroupsRequest request) {request = beforeClientExecution(request);return executeAddInstanceGroups(request);},public AddInstanceGroupsResult addInstanceGroupsAddInstanceGroupsRequest request request  beforeClientExecutionrequestreturn executeAddInstanceGroupsrequest
"public String getText() {if (getChildCount() == 0) {return """";}StringBuilder builder = new StringBuilder();for (int i = 0; i < getChildCount(); i++) {builder.append(getChild(i).getText());}return builder.toString();}",public String getText if getChildCount  0 return StringBuilder builder  new StringBuilderfor int i  0 i  getChildCount i builderappendgetChildigetTextreturn buildertoString
public ListCodeRepositoriesResult listCodeRepositories(ListCodeRepositoriesRequest request) {request = beforeClientExecution(request);return executeListCodeRepositories(request);},public ListCodeRepositoriesResult listCodeRepositoriesListCodeRepositoriesRequest request request  beforeClientExecutionrequestreturn executeListCodeRepositoriesrequest
"public LexerATNConfig(ATNState state,int alt,PredictionContext context){super(state, alt, context, SemanticContext.NONE);this.passedThroughNonGreedyDecision = false;this.lexerActionExecutor = null;}",public LexerATNConfigATNState stateint altPredictionContext contextsuperstate alt context SemanticContextNONEthispassedThroughNonGreedyDecision  falsethislexerActionExecutor  null
"public int serialize(int offset, byte [] data) {throw new RecordFormatException(""Old Label Records are supported READ ONLY"");}",public int serializeint offset byte  data throw new RecordFormatExceptionOld Label Records are supported READ ONLY
public GetSmsChannelResult getSmsChannel(GetSmsChannelRequest request) {request = beforeClientExecution(request);return executeGetSmsChannel(request);},public GetSmsChannelResult getSmsChannelGetSmsChannelRequest request request  beforeClientExecutionrequestreturn executeGetSmsChannelrequest
public Placement(String availabilityZone) {setAvailabilityZone(availabilityZone);},public PlacementString availabilityZone setAvailabilityZoneavailabilityZone
public ListStacksResult listStacks(ListStacksRequest request) {request = beforeClientExecution(request);return executeListStacks(request);},public ListStacksResult listStacksListStacksRequest request request  beforeClientExecutionrequestreturn executeListStacksrequest
public ListFieldLevelEncryptionConfigsResult listFieldLevelEncryptionConfigs(ListFieldLevelEncryptionConfigsRequest request) {request = beforeClientExecution(request);return executeListFieldLevelEncryptionConfigs(request);},public ListFieldLevelEncryptionConfigsResult listFieldLevelEncryptionConfigsListFieldLevelEncryptionConfigsRequest request request  beforeClientExecutionrequestreturn executeListFieldLevelEncryptionConfigsrequest
public CloseInstancePublicPortsResult closeInstancePublicPorts(CloseInstancePublicPortsRequest request) {request = beforeClientExecution(request);return executeCloseInstancePublicPorts(request);},public CloseInstancePublicPortsResult closeInstancePublicPortsCloseInstancePublicPortsRequest request request  beforeClientExecutionrequestreturn executeCloseInstancePublicPortsrequest
public DeleteTransitGatewayRouteTableResult deleteTransitGatewayRouteTable(DeleteTransitGatewayRouteTableRequest request) {request = beforeClientExecution(request);return executeDeleteTransitGatewayRouteTable(request);},public DeleteTransitGatewayRouteTableResult deleteTransitGatewayRouteTableDeleteTransitGatewayRouteTableRequest request request  beforeClientExecutionrequestreturn executeDeleteTransitGatewayRouteTablerequest
"public TokenStream create(TokenStream input) {return new StempelFilter(input, new StempelStemmer(PolishAnalyzer.getDefaultTable()));}",public TokenStream createTokenStream input return new StempelFilterinput new StempelStemmerPolishAnalyzergetDefaultTable
"public static byte[] grow(byte[] array) {return grow(array, 1 + array.length);}",public static byte growbyte array return growarray 1  arraylength
public DocFreqSorter(int maxDoc) {super(maxDoc / 64);this.tmpDocs = new int[maxDoc / 64];},public DocFreqSorterint maxDoc supermaxDoc  64thistmpDocs  new intmaxDoc  64
"public void add(int a, int b) {add(Interval.of(a, b));}",public void addint a int b addIntervalofa b
"public void cloneStyleFrom(HSSFCellStyle source) {_format.cloneStyleFrom(source._format);if(_workbook != source._workbook) {lastDateFormat.set(Short.MIN_VALUE);lastFormats.remove();getDataFormatStringCache.remove();short fmt = (short)_workbook.createFormat(source.getDataFormatString() );setDataFormat(fmt);FontRecord fr = _workbook.createNewFont();fr.cloneStyleFrom(source._workbook.getFontRecordAt(source.getFontIndexAsInt()));HSSFFont font = new HSSFFont((short)_workbook.getFontIndex(fr), fr);setFont(font);}}",public void cloneStyleFromHSSFCellStyle source formatcloneStyleFromsourceformatifworkbook  sourceworkbook lastDateFormatsetShortMINVALUElastFormatsremovegetDataFormatStringCacheremoveshort fmt  shortworkbookcreateFormatsourcegetDataFormatString setDataFormatfmtFontRecord fr  workbookcreateNewFontfrcloneStyleFromsourceworkbookgetFontRecordAtsourcegetFontIndexAsIntHSSFFont font  new HSSFFontshortworkbookgetFontIndexfr frsetFontfont
public DeleteIdentitiesResult deleteIdentities(DeleteIdentitiesRequest request) {request = beforeClientExecution(request);return executeDeleteIdentities(request);},public DeleteIdentitiesResult deleteIdentitiesDeleteIdentitiesRequest request request  beforeClientExecutionrequestreturn executeDeleteIdentitiesrequest
public void nextSlice() {final int nextIndex = ((buffer[limit]&0xff)<<24) + ((buffer[1+limit]&0xff)<<16) + ((buffer[2+limit]&0xff)<<8) + (buffer[3+limit]&0xff);level = ByteBlockPool.NEXT_LEVEL_ARRAY[level];final int newSize = ByteBlockPool.LEVEL_SIZE_ARRAY[level];bufferUpto = nextIndex / ByteBlockPool.BYTE_BLOCK_SIZE;bufferOffset = bufferUpto * ByteBlockPool.BYTE_BLOCK_SIZE;buffer = pool.buffers[bufferUpto];upto = nextIndex & ByteBlockPool.BYTE_BLOCK_MASK;if (nextIndex + newSize >= endIndex) {assert endIndex - nextIndex > 0;limit = endIndex - bufferOffset;} else {limit = upto+newSize-4;}},public void nextSlice final int nextIndex  bufferlimit0xff24  buffer1limit0xff16  buffer2limit0xff8  buffer3limit0xfflevel  ByteBlockPoolNEXTLEVELARRAYlevelfinal int newSize  ByteBlockPoolLEVELSIZEARRAYlevelbufferUpto  nextIndex  ByteBlockPoolBYTEBLOCKSIZEbufferOffset  bufferUpto  ByteBlockPoolBYTEBLOCKSIZEbuffer  poolbuffersbufferUptoupto  nextIndex  ByteBlockPoolBYTEBLOCKMASKif nextIndex  newSize  endIndex assert endIndex  nextIndex  0limit  endIndex  bufferOffset else limit  uptonewSize4
"public DeleteMessageBatchRequest(String queueUrl, java.util.List<DeleteMessageBatchRequestEntry> entries) {setQueueUrl(queueUrl);setEntries(entries);}",public DeleteMessageBatchRequestString queueUrl javautilListDeleteMessageBatchRequestEntry entries setQueueUrlqueueUrlsetEntriesentries
public ReservedCacheNode purchaseReservedCacheNodesOffering(PurchaseReservedCacheNodesOfferingRequest request) {request = beforeClientExecution(request);return executePurchaseReservedCacheNodesOffering(request);},public ReservedCacheNode purchaseReservedCacheNodesOfferingPurchaseReservedCacheNodesOfferingRequest request request  beforeClientExecutionrequestreturn executePurchaseReservedCacheNodesOfferingrequest
"public String getLineText() {final int eol = RawParseUtils.nextLF(buf, offset);return RawParseUtils.decode(UTF_8, buf, offset, eol);}",public String getLineText final int eol  RawParseUtilsnextLFbuf offsetreturn RawParseUtilsdecodeUTF8 buf offset eol
public DescribeNotificationConfigurationsResult describeNotificationConfigurations(DescribeNotificationConfigurationsRequest request) {request = beforeClientExecution(request);return executeDescribeNotificationConfigurations(request);},public DescribeNotificationConfigurationsResult describeNotificationConfigurationsDescribeNotificationConfigurationsRequest request request  beforeClientExecutionrequestreturn executeDescribeNotificationConfigurationsrequest
"@Override public boolean remove(Object object) {if (!esDelegate.remove(object)) {return false;}Entry<?, ?> entry = (Entry<?, ?>) object;inverse.delegate.remove(entry.getValue());return true;}",Override public boolean removeObject object if esDelegateremoveobject return falseEntry  entry  Entry  objectinversedelegateremoveentrygetValuereturn true
"public static byte[] grow(byte[] array) {return grow(array, 1 + array.length);}",public static byte growbyte array return growarray 1  arraylength
"public IndexAndTaxonomyRevision(IndexWriter indexWriter, SnapshotDirectoryTaxonomyWriter taxoWriter)throws IOException {IndexDeletionPolicy delPolicy = indexWriter.getConfig().getIndexDeletionPolicy();if (!(delPolicy instanceof SnapshotDeletionPolicy)) {throw new IllegalArgumentException(""IndexWriter must be created with SnapshotDeletionPolicy"");}this.indexWriter = indexWriter;this.taxoWriter = taxoWriter;this.indexSDP = (SnapshotDeletionPolicy) delPolicy;this.taxoSDP = taxoWriter.getDeletionPolicy();this.indexCommit = indexSDP.snapshot();this.taxoCommit = taxoSDP.snapshot();this.version = revisionVersion(indexCommit, taxoCommit);this.sourceFiles = revisionFiles(indexCommit, taxoCommit);}",public IndexAndTaxonomyRevisionIndexWriter indexWriter SnapshotDirectoryTaxonomyWriter taxoWriterthrows IOException IndexDeletionPolicy delPolicy  indexWritergetConfiggetIndexDeletionPolicyif delPolicy instanceof SnapshotDeletionPolicy throw new IllegalArgumentExceptionIndexWriter must be created with SnapshotDeletionPolicythisindexWriter  indexWriterthistaxoWriter  taxoWriterthisindexSDP  SnapshotDeletionPolicy delPolicythistaxoSDP  taxoWritergetDeletionPolicythisindexCommit  indexSDPsnapshotthistaxoCommit  taxoSDPsnapshotthisversion  revisionVersionindexCommit taxoCommitthissourceFiles  revisionFilesindexCommit taxoCommit
public synchronized String toString() {return super.toString();},public synchronized String toString return supertoString
public static int hashCode(Object o) {return (o == null) ? 0 : o.hashCode();},public static int hashCodeObject o return o  null  0  ohashCode
public GetModelTemplateResult getModelTemplate(GetModelTemplateRequest request) {request = beforeClientExecution(request);return executeGetModelTemplate(request);},public GetModelTemplateResult getModelTemplateGetModelTemplateRequest request request  beforeClientExecutionrequestreturn executeGetModelTemplaterequest
public XORShift64Random(long seed) {x = seed == 0 ? 0xdeadbeef : seed;},public XORShift64Randomlong seed x  seed  0  0xdeadbeef  seed
public HeaderFooterRecord(RecordInputStream in) {_rawData = in.readRemainder();},public HeaderFooterRecordRecordInputStream in rawData  inreadRemainder
"public HSSFPolygon createPolygon(HSSFClientAnchor anchor) {HSSFPolygon shape = new HSSFPolygon(null, anchor);addShape(shape);onCreate(shape);return shape;}",public HSSFPolygon createPolygonHSSFClientAnchor anchor HSSFPolygon shape  new HSSFPolygonnull anchoraddShapeshapeonCreateshapereturn shape
public boolean equals(Object other) {if (other == null) {return false;}if (other instanceof BytesRef) {return this.bytesEquals((BytesRef) other);}return false;},public boolean equalsObject other if other  null return falseif other instanceof BytesRef return thisbytesEqualsBytesRef otherreturn false
"public void decode(long[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long block = blocks[blocksOffset++];for (int shift = 48; shift >= 0; shift -= 16) {values[valuesOffset++] = (block >>> shift) & 65535;}}}",public void decodelong blocks int blocksOffset long values int valuesOffset int iterations for int i  0 i  iterations i final long block  blocksblocksOffsetfor int shift  48 shift  0 shift  16 valuesvaluesOffset  block  shift  65535
"public int serialize(int offset, byte[] data, EscherSerializationListener listener) {listener.beforeRecordSerialize( offset, getRecordId(), this );if (remainingData == null) {remainingData = EMPTY;}LittleEndian.putShort( data, offset, getOptions() );LittleEndian.putShort( data, offset + 2, getRecordId() );LittleEndian.putInt( data, offset + 4, remainingData.length );System.arraycopy( remainingData, 0, data, offset + 8, remainingData.length );int pos = offset + 8 + remainingData.length;listener.afterRecordSerialize( pos, getRecordId(), pos - offset, this );return pos - offset;}",public int serializeint offset byte data EscherSerializationListener listener listenerbeforeRecordSerialize offset getRecordId this if remainingData  null remainingData  EMPTYLittleEndianputShort data offset getOptions LittleEndianputShort data offset  2 getRecordId LittleEndianputInt data offset  4 remainingDatalength Systemarraycopy remainingData 0 data offset  8 remainingDatalength int pos  offset  8  remainingDatalengthlistenerafterRecordSerialize pos getRecordId pos  offset this return pos  offset
public boolean equals(Object o) {if (! super.equals(o)) {return false;}SpanPositionRangeQuery other = (SpanPositionRangeQuery)o;return this.end == other.end && this.start == other.start;},public boolean equalsObject o if  superequalso return falseSpanPositionRangeQuery other  SpanPositionRangeQueryoreturn thisend  otherend  thisstart  otherstart
public CreateSignalingChannelResult createSignalingChannel(CreateSignalingChannelRequest request) {request = beforeClientExecution(request);return executeCreateSignalingChannel(request);},public CreateSignalingChannelResult createSignalingChannelCreateSignalingChannelRequest request request  beforeClientExecutionrequestreturn executeCreateSignalingChannelrequest
"public IndexDiffFilter(int dirCacheIndex, int workingTreeIndex,boolean honorIgnores) {this.dirCache = dirCacheIndex;this.workingTree = workingTreeIndex;this.honorIgnores = honorIgnores;}",public IndexDiffFilterint dirCacheIndex int workingTreeIndexboolean honorIgnores thisdirCache  dirCacheIndexthisworkingTree  workingTreeIndexthishonorIgnores  honorIgnores
"public String toString() {StringBuilder sb = new StringBuilder(""["" + getClass().getSimpleName() + "": "");sb.append(""minMergeSize="").append(minMergeSize).append("", "");sb.append(""mergeFactor="").append(mergeFactor).append("", "");sb.append(""maxMergeSize="").append(maxMergeSize).append("", "");sb.append(""maxMergeSizeForForcedMerge="").append(maxMergeSizeForForcedMerge).append("", "");sb.append(""calibrateSizeByDeletes="").append(calibrateSizeByDeletes).append("", "");sb.append(""maxMergeDocs="").append(maxMergeDocs).append("", "");sb.append(""maxCFSSegmentSizeMB="").append(getMaxCFSSegmentSizeMB()).append("", "");sb.append(""noCFSRatio="").append(noCFSRatio);sb.append(""]"");return sb.toString();}",public String toString StringBuilder sb  new StringBuilder  getClassgetSimpleName   sbappendminMergeSizeappendminMergeSizeappend sbappendmergeFactorappendmergeFactorappend sbappendmaxMergeSizeappendmaxMergeSizeappend sbappendmaxMergeSizeForForcedMergeappendmaxMergeSizeForForcedMergeappend sbappendcalibrateSizeByDeletesappendcalibrateSizeByDeletesappend sbappendmaxMergeDocsappendmaxMergeDocsappend sbappendmaxCFSSegmentSizeMBappendgetMaxCFSSegmentSizeMBappend sbappendnoCFSRatioappendnoCFSRatiosbappendreturn sbtoString
"public static void encode(StringBuilder urlstr, String key) {if (key == null || key.length() == 0)return;try {urlstr.append(URLEncoder.encode(key, UTF_8.name()));} catch (UnsupportedEncodingException e) {throw new RuntimeException(JGitText.get().couldNotURLEncodeToUTF8, e);}}",public static void encodeStringBuilder urlstr String key if key  null  keylength  0returntry urlstrappendURLEncoderencodekey UTF8name catch UnsupportedEncodingException e throw new RuntimeExceptionJGitTextgetcouldNotURLEncodeToUTF8 e
public DescribeTemplateResult describeTemplate(DescribeTemplateRequest request) {request = beforeClientExecution(request);return executeDescribeTemplate(request);},public DescribeTemplateResult describeTemplateDescribeTemplateRequest request request  beforeClientExecutionrequestreturn executeDescribeTemplaterequest
public boolean mkdirs() {if (exists()) {return false;}if (mkdir()) {return true;}String parentDir = getParent();if (parentDir == null) {return false;}return (new File(parentDir).mkdirs() && mkdir());},public boolean mkdirs if exists return falseif mkdir return trueString parentDir  getParentif parentDir  null return falsereturn new FileparentDirmkdirs  mkdir
"public HeaderBlock(InputStream stream) throws IOException {this(readFirst512(stream));if(bigBlockSize.getBigBlockSize() != 512) {int rest = bigBlockSize.getBigBlockSize() - 512;byte[] tmp = IOUtils.safelyAllocate(rest, MAX_RECORD_LENGTH);IOUtils.readFully(stream, tmp);}}",public HeaderBlockInputStream stream throws IOException thisreadFirst512streamifbigBlockSizegetBigBlockSize  512 int rest  bigBlockSizegetBigBlockSize  512byte tmp  IOUtilssafelyAllocaterest MAXRECORDLENGTHIOUtilsreadFullystream tmp
public void recover(LexerNoViableAltException e) {if (_input.LA(1) != IntStream.EOF) {getInterpreter().consume(_input);}},public void recoverLexerNoViableAltException e if inputLA1  IntStreamEOF getInterpreterconsumeinput
public E valueAt(int index) {if (mGarbage) {gc();}return (E) mValues[index];},public E valueAtint index if mGarbage gcreturn E mValuesindex
public AttachToIndexResult attachToIndex(AttachToIndexRequest request) {request = beforeClientExecution(request);return executeAttachToIndex(request);},public AttachToIndexResult attachToIndexAttachToIndexRequest request request  beforeClientExecutionrequestreturn executeAttachToIndexrequest
public CreateMembersResult createMembers(CreateMembersRequest request) {request = beforeClientExecution(request);return executeCreateMembers(request);},public CreateMembersResult createMembersCreateMembersRequest request request  beforeClientExecutionrequestreturn executeCreateMembersrequest
public double get() {if (position == limit) {throw new BufferUnderflowException();}return byteBuffer.getDouble(position++ * SizeOf.DOUBLE);},public double get if position  limit throw new BufferUnderflowExceptionreturn byteBuffergetDoubleposition  SizeOfDOUBLE
public WorkflowExecutionInfos listOpenWorkflowExecutions(ListOpenWorkflowExecutionsRequest request) {request = beforeClientExecution(request);return executeListOpenWorkflowExecutions(request);},public WorkflowExecutionInfos listOpenWorkflowExecutionsListOpenWorkflowExecutionsRequest request request  beforeClientExecutionrequestreturn executeListOpenWorkflowExecutionsrequest
public CharSequence getFirstPathElement() {return values.get(0).value;},public CharSequence getFirstPathElement return valuesget0value
public static int toEMU(double points){return (int)Math.rint(EMU_PER_POINT*points);},public static int toEMUdouble pointsreturn intMathrintEMUPERPOINTpoints
public DeleteRequestValidatorResult deleteRequestValidator(DeleteRequestValidatorRequest request) {request = beforeClientExecution(request);return executeDeleteRequestValidator(request);},public DeleteRequestValidatorResult deleteRequestValidatorDeleteRequestValidatorRequest request request  beforeClientExecutionrequestreturn executeDeleteRequestValidatorrequest
"public Repository open(boolean mustExist) throws IOException {if (mustExist && !isGitRepository(path, fs))throw new RepositoryNotFoundException(path);return new FileRepository(path);}",public Repository openboolean mustExist throws IOException if mustExist  isGitRepositorypath fsthrow new RepositoryNotFoundExceptionpathreturn new FileRepositorypath
public GetOnPremisesInstanceResult getOnPremisesInstance(GetOnPremisesInstanceRequest request) {request = beforeClientExecution(request);return executeGetOnPremisesInstance(request);},public GetOnPremisesInstanceResult getOnPremisesInstanceGetOnPremisesInstanceRequest request request  beforeClientExecutionrequestreturn executeGetOnPremisesInstancerequest
"public String toString(){StringBuilder sb = new StringBuilder();sb.append( '(' ).append( startOffset ).append( ',' ).append( endOffset ).append( ')' );return sb.toString();}",public String toStringStringBuilder sb  new StringBuildersbappend  append startOffset append  append endOffset append  return sbtoString
public short getFontAtIndex( int index ) {int size = _string.getFormatRunCount();FormatRun currentRun = null;for (int i=0;i<size;i++) {FormatRun r = _string.getFormatRun(i);if (r.getCharacterPos() > index) {break;}currentRun = r;}if (currentRun == null) {return NO_FONT;}return currentRun.getFontIndex();},public short getFontAtIndex int index  int size  stringgetFormatRunCountFormatRun currentRun  nullfor int i0isizei FormatRun r  stringgetFormatRuniif rgetCharacterPos  index breakcurrentRun  rif currentRun  null return NOFONTreturn currentRungetFontIndex
public StopMonitoringMembersResult stopMonitoringMembers(StopMonitoringMembersRequest request) {request = beforeClientExecution(request);return executeStopMonitoringMembers(request);},public StopMonitoringMembersResult stopMonitoringMembersStopMonitoringMembersRequest request request  beforeClientExecutionrequestreturn executeStopMonitoringMembersrequest
public DetachLoadBalancerFromSubnetsResult detachLoadBalancerFromSubnets(DetachLoadBalancerFromSubnetsRequest request) {request = beforeClientExecution(request);return executeDetachLoadBalancerFromSubnets(request);},public DetachLoadBalancerFromSubnetsResult detachLoadBalancerFromSubnetsDetachLoadBalancerFromSubnetsRequest request request  beforeClientExecutionrequestreturn executeDetachLoadBalancerFromSubnetsrequest
"public HSSFCell getCell(int cellnum, MissingCellPolicy policy) {HSSFCell cell = retrieveCell(cellnum);switch (policy) {case RETURN_NULL_AND_BLANK:return cell;case RETURN_BLANK_AS_NULL:boolean isBlank = (cell != null && cell.getCellType() == CellType.BLANK);return (isBlank) ? null : cell;case CREATE_NULL_AS_BLANK:return (cell == null) ? createCell(cellnum, CellType.BLANK) : cell;default:throw new IllegalArgumentException(""Illegal policy "" + policy);}}",public HSSFCell getCellint cellnum MissingCellPolicy policy HSSFCell cell  retrieveCellcellnumswitch policy case RETURNNULLANDBLANKreturn cellcase RETURNBLANKASNULLboolean isBlank  cell  null  cellgetCellType  CellTypeBLANKreturn isBlank  null  cellcase CREATENULLASBLANKreturn cell  null  createCellcellnum CellTypeBLANK  celldefaultthrow new IllegalArgumentExceptionIllegal policy   policy
"public SimpleQQParser(String qqName, String indexField) {this(new String[] { qqName }, indexField);}",public SimpleQQParserString qqName String indexField thisnew String  qqName  indexField
"public Query makeQuery(int size) throws Exception {throw new Exception(this+"".makeQuery(int size) is not supported!"");}",public Query makeQueryint size throws Exception throw new ExceptionthismakeQueryint size is not supported
"public StringBuilder insert(int offset, float f) {insert0(offset, Float.toString(f));return this;}",public StringBuilder insertint offset float f insert0offset FloattoStringfreturn this
public Class<ConfigChangedListener> getListenerType() {return ConfigChangedListener.class;},public ClassConfigChangedListener getListenerType return ConfigChangedListenerclass
public AddPermissionResult addPermission(AddPermissionRequest request) {request = beforeClientExecution(request);return executeAddPermission(request);},public AddPermissionResult addPermissionAddPermissionRequest request request  beforeClientExecutionrequestreturn executeAddPermissionrequest
public double get(int index) {checkIndex(index);return byteBuffer.getDouble(index * SizeOf.DOUBLE);},public double getint index checkIndexindexreturn byteBuffergetDoubleindex  SizeOfDOUBLE
public HSSFDataFormat createDataFormat() {return workbook.createDataFormat();},public HSSFDataFormat createDataFormat return workbookcreateDataFormat
"public TermData add(TermData t1, TermData t2) {if (t1 == NO_OUTPUT) {return t2;} else if (t2 == NO_OUTPUT) {return t1;}TermData ret;if (t2.bytes != null || t2.docFreq > 0) {ret = new TermData(t2.bytes, t2.docFreq, t2.totalTermFreq);} else {ret = new TermData(t1.bytes, t1.docFreq, t1.totalTermFreq);}return ret;}",public TermData addTermData t1 TermData t2 if t1  NOOUTPUT return t2 else if t2  NOOUTPUT return t1TermData retif t2bytes  null  t2docFreq  0 ret  new TermDatat2bytes t2docFreq t2totalTermFreq else ret  new TermDatat1bytes t1docFreq t1totalTermFreqreturn ret
"public FileSharingRecord(RecordInputStream in) {field_1_readonly = in.readShort();field_2_password = in.readShort();int nameLen = in.readShort();if(nameLen > 0) {field_3_username_unicode_options = in.readByte();field_3_username_value = in.readCompressedUnicode(nameLen);} else {field_3_username_value = """";}}",public FileSharingRecordRecordInputStream in field1readonly  inreadShortfield2password  inreadShortint nameLen  inreadShortifnameLen  0 field3usernameunicodeoptions  inreadBytefield3usernamevalue  inreadCompressedUnicodenameLen else field3usernamevalue  
public double computeProbability(BasicStats stats) {return (stats.getTotalTermFreq()+1D) / (stats.getNumberOfFieldTokens()+1D);},public double computeProbabilityBasicStats stats return statsgetTotalTermFreq1D  statsgetNumberOfFieldTokens1D
public StringCharacterIterator(String value) {string = value;start = offset = 0;end = string.length();},public StringCharacterIteratorString value string  valuestart  offset  0end  stringlength
"public void start(String originalText, TokenStream tokenStream) {position = -1;currentNumFrags = 1;textSize = originalText.length();termAtt = tokenStream.addAttribute(CharTermAttribute.class);posIncAtt = tokenStream.addAttribute(PositionIncrementAttribute.class);offsetAtt = tokenStream.addAttribute(OffsetAttribute.class);}",public void startString originalText TokenStream tokenStream position  1currentNumFrags  1textSize  originalTextlengthtermAtt  tokenStreamaddAttributeCharTermAttributeclassposIncAtt  tokenStreamaddAttributePositionIncrementAttributeclassoffsetAtt  tokenStreamaddAttributeOffsetAttributeclass
public String getSignerVersion() {return null;},public String getSignerVersion return null
"public String toString() {StringBuilder b = new StringBuilder();b.append(""initial state: 0\n"");for (int i = 0; i < size; i++) {b.append(""state "").append(i);if (accept.get(i)) b.append("" [accept]:\n"");else b.append("" [reject]:\n"");for (int j = 0; j < points.length; j++) {int k = transitions[i * points.length + j];if (k != -1) {int min = points[j];int max;if (j + 1 < points.length) max = (points[j + 1] - 1);else max = alphabetSize;b.append("" "");Automaton.appendCharString(min, b);if (min != max) {b.append(""-"");Automaton.appendCharString(max, b);}b.append("" -> "").append(k).append(""\n"");}}}return b.toString();}",public String toString StringBuilder b  new StringBuilderbappendinitial state 0nfor int i  0 i  size i bappendstate appendiif acceptgeti bappend acceptnelse bappend rejectnfor int j  0 j  pointslength j int k  transitionsi  pointslength  jif k  1 int min  pointsjint maxif j  1  pointslength max  pointsj  1  1else max  alphabetSizebappend AutomatonappendCharStringmin bif min  max bappendAutomatonappendCharStringmax bbappend  appendkappendnreturn btoString
public synchronized long skip(long charCount) {if (charCount <= 0) {return 0;}int numskipped;if (this.count - pos < charCount) {numskipped = this.count - pos;pos = this.count;} else {numskipped = (int) charCount;pos += charCount;}return numskipped;},public synchronized long skiplong charCount if charCount  0 return 0int numskippedif thiscount  pos  charCount numskipped  thiscount  pospos  thiscount else numskipped  int charCountpos  charCountreturn numskipped
@Override public ListIterator<E> listIterator(int location) {synchronized (mutex) {return list.listIterator(location);}},Override public ListIteratorE listIteratorint location synchronized mutex return listlistIteratorlocation
public CreateAddressBookResult createAddressBook(CreateAddressBookRequest request) {request = beforeClientExecution(request);return executeCreateAddressBook(request);},public CreateAddressBookResult createAddressBookCreateAddressBookRequest request request  beforeClientExecutionrequestreturn executeCreateAddressBookrequest
"public StreamCopyThread(InputStream i, OutputStream o) {setName(Thread.currentThread().getName() + ""-StreamCopy""); src = i;dst = o;writeLock = new Object();}",public StreamCopyThreadInputStream i OutputStream o setNameThreadcurrentThreadgetName  StreamCopy src  idst  owriteLock  new Object
public AxisParentRecord(RecordInputStream in) {field_1_axisType = in.readShort();field_2_x        = in.readInt();field_3_y        = in.readInt();field_4_width    = in.readInt();field_5_height   = in.readInt();},public AxisParentRecordRecordInputStream in field1axisType  inreadShortfield2x         inreadIntfield3y         inreadIntfield4width     inreadIntfield5height    inreadInt
"public FieldFragList createFieldFragList( FieldPhraseList fieldPhraseList, int fragCharSize ){return createFieldFragList( fieldPhraseList, new WeightedFieldFragList( fragCharSize ), fragCharSize );}",public FieldFragList createFieldFragList FieldPhraseList fieldPhraseList int fragCharSize return createFieldFragList fieldPhraseList new WeightedFieldFragList fragCharSize  fragCharSize 
"public TrimFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public TrimFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public void push( TermInfo termInfo ){termList.push( termInfo );},public void push TermInfo termInfo termListpush termInfo 
public DescribeNotebookInstanceResult describeNotebookInstance(DescribeNotebookInstanceRequest request) {request = beforeClientExecution(request);return executeDescribeNotebookInstance(request);},public DescribeNotebookInstanceResult describeNotebookInstanceDescribeNotebookInstanceRequest request request  beforeClientExecutionrequestreturn executeDescribeNotebookInstancerequest
"public String toFormulaString(){return "":"";}",public String toFormulaStringreturn 
public ApplyCommand setPatch(InputStream in) {checkCallable();this.in = in;return this;},public ApplyCommand setPatchInputStream in checkCallablethisin  inreturn this
"public void setCreationTime(long when) {encodeTS(P_CTIME, when);}",public void setCreationTimelong when encodeTSPCTIME when
public static final RevFilter before(Date ts) {return before(ts.getTime());},public static final RevFilter beforeDate ts return beforetsgetTime
public void advertiseCapability(String name) {capablities.add(name);},public void advertiseCapabilityString name capablitiesaddname
public StopInstancesRequest(java.util.List<String> instanceIds) {setInstanceIds(instanceIds);},public StopInstancesRequestjavautilListString instanceIds setInstanceIdsinstanceIds
public CreateVpnGatewayResult createVpnGateway(CreateVpnGatewayRequest request) {request = beforeClientExecution(request);return executeCreateVpnGateway(request);},public CreateVpnGatewayResult createVpnGatewayCreateVpnGatewayRequest request request  beforeClientExecutionrequestreturn executeCreateVpnGatewayrequest
public ResetCacheParameterGroupResult resetCacheParameterGroup(ResetCacheParameterGroupRequest request) {request = beforeClientExecution(request);return executeResetCacheParameterGroup(request);},public ResetCacheParameterGroupResult resetCacheParameterGroupResetCacheParameterGroupRequest request request  beforeClientExecutionrequestreturn executeResetCacheParameterGrouprequest
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {double result;try {double d0 = singleOperandEvaluate(arg0, srcRowIndex, srcColumnIndex);double d1 = singleOperandEvaluate(arg1, srcRowIndex, srcColumnIndex);result = evaluate(d0, d1);if (result == 0.0) { if (!(this instanceof SubtractEvalClass)) {return NumberEval.ZERO;}}if (Double.isNaN(result) || Double.isInfinite(result)) {return ErrorEval.NUM_ERROR;}} catch (EvaluationException e) {return e.getErrorEval();}return new NumberEval(result);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1 double resulttry double d0  singleOperandEvaluatearg0 srcRowIndex srcColumnIndexdouble d1  singleOperandEvaluatearg1 srcRowIndex srcColumnIndexresult  evaluated0 d1if result  00  if this instanceof SubtractEvalClass return NumberEvalZEROif DoubleisNaNresult  DoubleisInfiniteresult return ErrorEvalNUMERROR catch EvaluationException e return egetErrorEvalreturn new NumberEvalresult
"public PutMetricFilterRequest(String logGroupName, String filterName, String filterPattern, java.util.List<MetricTransformation> metricTransformations) {setLogGroupName(logGroupName);setFilterName(filterName);setFilterPattern(filterPattern);setMetricTransformations(metricTransformations);}",public PutMetricFilterRequestString logGroupName String filterName String filterPattern javautilListMetricTransformation metricTransformations setLogGroupNamelogGroupNamesetFilterNamefilterNamesetFilterPatternfilterPatternsetMetricTransformationsmetricTransformations
@Override public E get(int location) {synchronized (mutex) {return list.get(location);}},Override public E getint location synchronized mutex return listgetlocation
"public IntPtg(int value) {if (!isInRange(value)) {throw new IllegalArgumentException(""value is out of range: "" + value);}field_1_value = value;}",public IntPtgint value if isInRangevalue throw new IllegalArgumentExceptionvalue is out of range   valuefield1value  value
"public Builder() {this(16, 16);}",public Builder this16 16
public long getItemId(int position) {return position;},public long getItemIdint position return position
"public ByteBuffer putDouble(int index, double value) {return putLong(index, Double.doubleToRawLongBits(value));}",public ByteBuffer putDoubleint index double value return putLongindex DoubledoubleToRawLongBitsvalue
public void clear() {value = false;},public void clear value  false
public CharVector(char[] a) {blockSize = DEFAULT_BLOCK_SIZE;array = a;n = a.length;},public CharVectorchar a blockSize  DEFAULTBLOCKSIZEarray  an  alength
"public UAX29URLEmailTokenizerFactory(Map<String,String> args) {super(args);maxTokenLength = getInt(args, ""maxTokenLength"", StandardAnalyzer.DEFAULT_MAX_TOKEN_LENGTH);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public UAX29URLEmailTokenizerFactoryMapStringString args superargsmaxTokenLength  getIntargs maxTokenLength StandardAnalyzerDEFAULTMAXTOKENLENGTHif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public long ramBytesUsed() {long sizeInBytes = 0;for(FieldIndexData entry : fields.values()) {sizeInBytes += entry.ramBytesUsed();}return sizeInBytes;},public long ramBytesUsed long sizeInBytes  0forFieldIndexData entry  fieldsvalues sizeInBytes  entryramBytesUsedreturn sizeInBytes
public boolean equals(Object other) {if (!(other instanceof CharBuffer)) {return false;}CharBuffer otherBuffer = (CharBuffer) other;if (remaining() != otherBuffer.remaining()) {return false;}int myPosition = position;int otherPosition = otherBuffer.position;boolean equalSoFar = true;while (equalSoFar && (myPosition < limit)) {equalSoFar = get(myPosition++) == otherBuffer.get(otherPosition++);}return equalSoFar;},public boolean equalsObject other if other instanceof CharBuffer return falseCharBuffer otherBuffer  CharBuffer otherif remaining  otherBufferremaining return falseint myPosition  positionint otherPosition  otherBufferpositionboolean equalSoFar  truewhile equalSoFar  myPosition  limit equalSoFar  getmyPosition  otherBuffergetotherPositionreturn equalSoFar
public StartDeploymentResult startDeployment(StartDeploymentRequest request) {request = beforeClientExecution(request);return executeStartDeployment(request);},public StartDeploymentResult startDeploymentStartDeploymentRequest request request  beforeClientExecutionrequestreturn executeStartDeploymentrequest
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[1904]\n"");buffer.append(""    .is1904          = "").append(Integer.toHexString(getWindowing())).append(""\n"");buffer.append(""[/1904]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappend1904nbufferappend    is1904           appendIntegertoHexStringgetWindowingappendnbufferappend1904nreturn buffertoString
public CreateModelResult createModel(CreateModelRequest request) {request = beforeClientExecution(request);return executeCreateModel(request);},public CreateModelResult createModelCreateModelRequest request request  beforeClientExecutionrequestreturn executeCreateModelrequest
public DoubleBuffer put(double c) {if (position == limit) {throw new BufferOverflowException();}backingArray[offset + position++] = c;return this;},public DoubleBuffer putdouble c if position  limit throw new BufferOverflowExceptionbackingArrayoffset  position  creturn this
"public SimpleFacetsExample() {config.setHierarchical(""Publish Date"", true);}",public SimpleFacetsExample configsetHierarchicalPublish Date true
public DeleteConnectionResult deleteConnection(DeleteConnectionRequest request) {request = beforeClientExecution(request);return executeDeleteConnection(request);},public DeleteConnectionResult deleteConnectionDeleteConnectionRequest request request  beforeClientExecutionrequestreturn executeDeleteConnectionrequest
public String getSheetFirstNameByExternSheet(int externSheetIndex) {return _iBook.findSheetFirstNameFromExternSheet(externSheetIndex);},public String getSheetFirstNameByExternSheetint externSheetIndex return iBookfindSheetFirstNameFromExternSheetexternSheetIndex
"public void begin(int timeout) {if (timeout <= 0)throw new IllegalArgumentException(MessageFormat.format(JGitText.get().invalidTimeout, Integer.valueOf(timeout)));Thread.interrupted();state.begin(timeout);}",public void beginint timeout if timeout  0throw new IllegalArgumentExceptionMessageFormatformatJGitTextgetinvalidTimeout IntegervalueOftimeoutThreadinterruptedstatebegintimeout
public final T updateTop() {downHeap(1);return heap[1];},public final T updateTop downHeap1return heap1
public QueryNodeException(Message message) {super(message.getKey());this.message = message;},public QueryNodeExceptionMessage message supermessagegetKeythismessage  message
public static double factorial(int n) {double d = 1;if (n >= 0) {if (n <= 170) {for (int i=1; i<=n; i++) {d *= i;}}else {d = Double.POSITIVE_INFINITY;}}else {d = Double.NaN;}return d;},public static double factorialint n double d  1if n  0 if n  170 for int i1 in i d  ielse d  DoublePOSITIVEINFINITYelse d  DoubleNaNreturn d
public void sort(RevSort s) {assertNotStarted();sorting.clear();sorting.add(s);},public void sortRevSort s assertNotStartedsortingclearsortingadds
public CreateAuthorizerResult createAuthorizer(CreateAuthorizerRequest request) {request = beforeClientExecution(request);return executeCreateAuthorizer(request);},public CreateAuthorizerResult createAuthorizerCreateAuthorizerRequest request request  beforeClientExecutionrequestreturn executeCreateAuthorizerrequest
public boolean isDeltaCompress() {return deltaCompress;},public boolean isDeltaCompress return deltaCompress
public CreateWorkGroupResult createWorkGroup(CreateWorkGroupRequest request) {request = beforeClientExecution(request);return executeCreateWorkGroup(request);},public CreateWorkGroupResult createWorkGroupCreateWorkGroupRequest request request  beforeClientExecutionrequestreturn executeCreateWorkGrouprequest
public BatchDetectSyntaxResult batchDetectSyntax(BatchDetectSyntaxRequest request) {request = beforeClientExecution(request);return executeBatchDetectSyntax(request);},public BatchDetectSyntaxResult batchDetectSyntaxBatchDetectSyntaxRequest request request  beforeClientExecutionrequestreturn executeBatchDetectSyntaxrequest
public void removeManager() {remove1stProperty(PropertyIDMap.PID_MANAGER);},public void removeManager remove1stPropertyPropertyIDMapPIDMANAGER
public Set keySet() {return Collections.unmodifiableSet(dictionary.values());},public Set keySet return CollectionsunmodifiableSetdictionaryvalues
public long hash1(char carray[]) {final long p = 1099511628211L;long hash = 0xcbf29ce484222325L;for (int i = 0; i < carray.length; i++) {char d = carray[i];hash = (hash ^ (d & 0x00FF)) * p;hash = (hash ^ (d >> 8)) * p;}return hash;},public long hash1char carray final long p  1099511628211Llong hash  0xcbf29ce484222325Lfor int i  0 i  carraylength i char d  carrayihash  hash  d  0x00FF  phash  hash  d  8  preturn hash
public PutScalingPolicyResult putScalingPolicy(PutScalingPolicyRequest request) {request = beforeClientExecution(request);return executePutScalingPolicy(request);},public PutScalingPolicyResult putScalingPolicyPutScalingPolicyRequest request request  beforeClientExecutionrequestreturn executePutScalingPolicyrequest
"public KeywordRepeatFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public KeywordRepeatFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public void recycleByteBlocks(List<byte[]> blocks) {final byte[][] b = blocks.toArray(new byte[blocks.size()][]);recycleByteBlocks(b, 0, b.length);}",public void recycleByteBlocksListbyte blocks final byte b  blockstoArraynew byteblockssizerecycleByteBlocksb 0 blength
"public List<Token> get(int start, int stop) {if ( start<0 || stop<0 ) return null;lazyInit();List<Token> subset = new ArrayList<Token>();if ( stop>=tokens.size() ) stop = tokens.size()-1;for (int i = start; i <= stop; i++) {Token t = tokens.get(i);if ( t.getType()==Token.EOF ) break;subset.add(t);}return subset;}",public ListToken getint start int stop if  start0  stop0  return nulllazyInitListToken subset  new ArrayListTokenif  stoptokenssize  stop  tokenssize1for int i  start i  stop i Token t  tokensgetiif  tgetTypeTokenEOF  breaksubsetaddtreturn subset
"public String toString() {return tokenName + "":"" + type;}",public String toString return tokenName    type
"public static Automaton build(Collection<BytesRef> input) {final DaciukMihovAutomatonBuilder builder = new DaciukMihovAutomatonBuilder();char[] chars = new char[0];CharsRef ref = new CharsRef();for (BytesRef b : input) {chars = ArrayUtil.grow(chars, b.length);final int len = UnicodeUtil.UTF8toUTF16(b, chars);ref.chars = chars;ref.length = len;builder.add(ref);}Automaton.Builder a = new Automaton.Builder();convert(a,builder.complete(),new IdentityHashMap<State,Integer>());return a.finish();}",public static Automaton buildCollectionBytesRef input final DaciukMihovAutomatonBuilder builder  new DaciukMihovAutomatonBuilderchar chars  new char0CharsRef ref  new CharsReffor BytesRef b  input chars  ArrayUtilgrowchars blengthfinal int len  UnicodeUtilUTF8toUTF16b charsrefchars  charsreflength  lenbuilderaddrefAutomatonBuilder a  new AutomatonBuilderconvertabuildercompletenew IdentityHashMapStateIntegerreturn afinish
"public Row merge(Row master, Row existing) {Iterator<Character> i = master.cells.keySet().iterator();Row n = new Row();for (; i.hasNext();) {Character ch = i.next();Cell a = master.cells.get(ch);Cell b = existing.cells.get(ch);Cell s = (b == null) ? new Cell(a) : merge(a, b);if (s == null) {return null;}n.cells.put(ch, s);}i = existing.cells.keySet().iterator();for (; i.hasNext();) {Character ch = i.next();if (master.at(ch) != null) {continue;}n.cells.put(ch, existing.at(ch));}return n;}",public Row mergeRow master Row existing IteratorCharacter i  mastercellskeySetiteratorRow n  new Rowfor  ihasNext Character ch  inextCell a  mastercellsgetchCell b  existingcellsgetchCell s  b  null  new Cella  mergea bif s  null return nullncellsputch si  existingcellskeySetiteratorfor  ihasNext Character ch  inextif masteratch  null continuencellsputch existingatchreturn n
public E peekFirst() {return peekFirstImpl();},public E peekFirst return peekFirstImpl
"public static int response(HttpConnection c) throws IOException {try {return c.getResponseCode();} catch (ConnectException ce) {final URL url = c.getURL();final String host = (url == null) ? ""<null>"" : url.getHost(); if (""Connection timed out: connect"".equals(ce.getMessage())) throw new ConnectException(MessageFormat.format(JGitText.get().connectionTimeOut, host));throw new ConnectException(ce.getMessage() + "" "" + host); }}",public static int responseHttpConnection c throws IOException try return cgetResponseCode catch ConnectException ce final URL url  cgetURLfinal String host  url  null  null  urlgetHost if Connection timed out connectequalscegetMessage throw new ConnectExceptionMessageFormatformatJGitTextgetconnectionTimeOut hostthrow new ConnectExceptioncegetMessage     host 
public GetConfigurationResult getConfiguration(GetConfigurationRequest request) {request = beforeClientExecution(request);return executeGetConfiguration(request);},public GetConfigurationResult getConfigurationGetConfigurationRequest request request  beforeClientExecutionrequestreturn executeGetConfigurationrequest
public static Collection<String> getSupportedFunctionNames(){Collection<String> lst = new TreeSet<>();lst.addAll(FunctionEval.getSupportedFunctionNames());lst.addAll(AnalysisToolPak.getSupportedFunctionNames());return Collections.unmodifiableCollection(lst);},public static CollectionString getSupportedFunctionNamesCollectionString lst  new TreeSetlstaddAllFunctionEvalgetSupportedFunctionNameslstaddAllAnalysisToolPakgetSupportedFunctionNamesreturn CollectionsunmodifiableCollectionlst
"public PerFieldAnalyzerWrapper(Analyzer defaultAnalyzer,Map<String, Analyzer> fieldAnalyzers) {super(PER_FIELD_REUSE_STRATEGY);this.defaultAnalyzer = defaultAnalyzer;this.fieldAnalyzers = (fieldAnalyzers != null) ? fieldAnalyzers : Collections.<String, Analyzer>emptyMap();}",public PerFieldAnalyzerWrapperAnalyzer defaultAnalyzerMapString Analyzer fieldAnalyzers superPERFIELDREUSESTRATEGYthisdefaultAnalyzer  defaultAnalyzerthisfieldAnalyzers  fieldAnalyzers  null  fieldAnalyzers  CollectionsString AnalyzeremptyMap
public DeletePublishingDestinationResult deletePublishingDestination(DeletePublishingDestinationRequest request) {request = beforeClientExecution(request);return executeDeletePublishingDestination(request);},public DeletePublishingDestinationResult deletePublishingDestinationDeletePublishingDestinationRequest request request  beforeClientExecutionrequestreturn executeDeletePublishingDestinationrequest
public GetSendStatisticsResult getSendStatistics(GetSendStatisticsRequest request) {request = beforeClientExecution(request);return executeGetSendStatistics(request);},public GetSendStatisticsResult getSendStatisticsGetSendStatisticsRequest request request  beforeClientExecutionrequestreturn executeGetSendStatisticsrequest
"public void copyArea(int x, int y, int width, int height, int dx, int dy){if (logger.check( POILogger.WARN ))logger.log(POILogger.WARN,""copyArea not supported"");}",public void copyAreaint x int y int width int height int dx int dyif loggercheck POILoggerWARN loggerlogPOILoggerWARNcopyArea not supported
public AreaErrPtg() {unused1 = 0;unused2 = 0;},public AreaErrPtg unused1  0unused2  0
public GetUserSettingsResult getUserSettings(GetUserSettingsRequest request) {request = beforeClientExecution(request);return executeGetUserSettings(request);},public GetUserSettingsResult getUserSettingsGetUserSettingsRequest request request  beforeClientExecutionrequestreturn executeGetUserSettingsrequest
public static String toString(Object obj) {if (obj != null) {return obj.toString();} else {return null;}},public static String toStringObject obj if obj  null return objtoString else return null
public String getAccessKeySecret() {return accessKeySecret;},public String getAccessKeySecret return accessKeySecret
public Collection<ParseTree> evaluate(ParseTree t) {List<ParseTree> nodes = new ArrayList<ParseTree>();for (Tree c : Trees.getChildren(t)) {if ( c instanceof TerminalNode ) {TerminalNode tnode = (TerminalNode)c;if ( (tnode.getSymbol().getType() == tokenType && !invert) ||(tnode.getSymbol().getType() != tokenType && invert) ){nodes.add(tnode);}}}return nodes;},public CollectionParseTree evaluateParseTree t ListParseTree nodes  new ArrayListParseTreefor Tree c  TreesgetChildrent if  c instanceof TerminalNode  TerminalNode tnode  TerminalNodecif  tnodegetSymbolgetType  tokenType  invert tnodegetSymbolgetType  tokenType  invert nodesaddtnodereturn nodes
public IsVpcPeeredResult isVpcPeered(IsVpcPeeredRequest request) {request = beforeClientExecution(request);return executeIsVpcPeered(request);},public IsVpcPeeredResult isVpcPeeredIsVpcPeeredRequest request request  beforeClientExecutionrequestreturn executeIsVpcPeeredrequest
"public String toString() {return ""ShardRef(shardIndex="" + shardIndex + "" hitIndex="" + hitIndex + "")"";}",public String toString return ShardRefshardIndex  shardIndex   hitIndex  hitIndex  
public TerminateJobFlowsRequest(java.util.List<String> jobFlowIds) {setJobFlowIds(jobFlowIds);},public TerminateJobFlowsRequestjavautilListString jobFlowIds setJobFlowIdsjobFlowIds
public DatRecord(RecordInputStream in) {field_1_options = in.readShort();},public DatRecordRecordInputStream in field1options  inreadShort
public void removeExFormatRecord(int index) {int xfptr = records.getXfpos() - (numxfs - 1) + index;records.remove(xfptr); numxfs--;},public void removeExFormatRecordint index int xfptr  recordsgetXfpos  numxfs  1  indexrecordsremovexfptr numxfs
"public double get(String name, double dflt) {double vals[] = (double[]) valByRound.get(name);if (vals != null) {return vals[roundNumber % vals.length];}String sval = props.getProperty(name, """" + dflt);if (sval.indexOf("":"") < 0) {return Double.parseDouble(sval);}int k = sval.indexOf("":"");String colName = sval.substring(0, k);sval = sval.substring(k + 1);colForValByRound.put(name, colName);vals = propToDoubleArray(sval);valByRound.put(name, vals);return vals[roundNumber % vals.length];}",public double getString name double dflt double vals  double valByRoundgetnameif vals  null return valsroundNumber  valslengthString sval  propsgetPropertyname   dfltif svalindexOf  0 return DoubleparseDoublesvalint k  svalindexOfString colName  svalsubstring0 ksval  svalsubstringk  1colForValByRoundputname colNamevals  propToDoubleArraysvalvalByRoundputname valsreturn valsroundNumber  valslength
"public BlockPackedReaderIterator(DataInput in, int packedIntsVersion, int blockSize, long valueCount) {checkBlockSize(blockSize, MIN_BLOCK_SIZE, MAX_BLOCK_SIZE);this.packedIntsVersion = packedIntsVersion;this.blockSize = blockSize;this.values = new long[blockSize];this.valuesRef = new LongsRef(this.values, 0, 0);reset(in, valueCount);}",public BlockPackedReaderIteratorDataInput in int packedIntsVersion int blockSize long valueCount checkBlockSizeblockSize MINBLOCKSIZE MAXBLOCKSIZEthispackedIntsVersion  packedIntsVersionthisblockSize  blockSizethisvalues  new longblockSizethisvaluesRef  new LongsRefthisvalues 0 0resetin valueCount
public void reset() {if (!first()) {ptr = treeStart;nextSubtreePos = 0;currentEntry = null;currentSubtree = null;if (!eof())parseEntry();}},public void reset if first ptr  treeStartnextSubtreePos  0currentEntry  nullcurrentSubtree  nullif eofparseEntry
public BytesRef getPayload() {if (payloadLength == 0) {return null;} else {return payload;}},public BytesRef getPayload if payloadLength  0 return null else return payload
public synchronized void setIndeterminate(boolean indeterminate) {if ((!mOnlyIndeterminate || !mIndeterminate) && indeterminate != mIndeterminate) {mIndeterminate = indeterminate;if (indeterminate) {mCurrentDrawable = mIndeterminateDrawable;startAnimation();} else {mCurrentDrawable = mProgressDrawable;stopAnimation();}}},public synchronized void setIndeterminateboolean indeterminate if mOnlyIndeterminate  mIndeterminate  indeterminate  mIndeterminate mIndeterminate  indeterminateif indeterminate mCurrentDrawable  mIndeterminateDrawablestartAnimation else mCurrentDrawable  mProgressDrawablestopAnimation
public void notifyDeleteCell(HSSFCell cell) {_bookEvaluator.notifyDeleteCell(new HSSFEvaluationCell(cell));},public void notifyDeleteCellHSSFCell cell bookEvaluatornotifyDeleteCellnew HSSFEvaluationCellcell
public boolean equals(Object o) {if (!(o instanceof FieldCacheSource)) return false;FieldCacheSource other = (FieldCacheSource)o;return this.field.equals(other.field);},public boolean equalsObject o if o instanceof FieldCacheSource return falseFieldCacheSource other  FieldCacheSourceoreturn thisfieldequalsotherfield
public DescribeLoaResult describeLoa(DescribeLoaRequest request) {request = beforeClientExecution(request);return executeDescribeLoa(request);},public DescribeLoaResult describeLoaDescribeLoaRequest request request  beforeClientExecutionrequestreturn executeDescribeLoarequest
public final K next() { return nextEntry().key; },public final K next  return nextEntrykey 
public ListFleetsResult listFleets(ListFleetsRequest request) {request = beforeClientExecution(request);return executeListFleets(request);},public ListFleetsResult listFleetsListFleetsRequest request request  beforeClientExecutionrequestreturn executeListFleetsrequest
public DelegationSet(java.util.List<String> nameServers) {setNameServers(nameServers);},public DelegationSetjavautilListString nameServers setNameServersnameServers
public GetKeyPairsResult getKeyPairs(GetKeyPairsRequest request) {request = beforeClientExecution(request);return executeGetKeyPairs(request);},public GetKeyPairsResult getKeyPairsGetKeyPairsRequest request request  beforeClientExecutionrequestreturn executeGetKeyPairsrequest
public ReservedNode purchaseReservedNodeOffering(PurchaseReservedNodeOfferingRequest request) {request = beforeClientExecution(request);return executePurchaseReservedNodeOffering(request);},public ReservedNode purchaseReservedNodeOfferingPurchaseReservedNodeOfferingRequest request request  beforeClientExecutionrequestreturn executePurchaseReservedNodeOfferingrequest
public String getPassword() {return password;},public String getPassword return password
public String getValue(String name) {return nameValPairs.get(name);},public String getValueString name return nameValPairsgetname
"public static String format(byte[] delta) {return format(delta, true);}",public static String formatbyte delta return formatdelta true
"public Token(int kind, String image){this.kind = kind;this.image = image;}",public Tokenint kind String imagethiskind  kindthisimage  image
"public ArrayRecord(RecordInputStream in) {super(in);_options = in.readUShort();_field3notUsed = in.readInt();int formulaTokenLen = in.readUShort();int totalFormulaLen = in.available();_formula = Formula.read(formulaTokenLen, in, totalFormulaLen);}",public ArrayRecordRecordInputStream in superinoptions  inreadUShortfield3notUsed  inreadIntint formulaTokenLen  inreadUShortint totalFormulaLen  inavailableformula  FormulareadformulaTokenLen in totalFormulaLen
"public BootstrapActionConfig(String name, ScriptBootstrapActionConfig scriptBootstrapAction) {setName(name);setScriptBootstrapAction(scriptBootstrapAction);}",public BootstrapActionConfigString name ScriptBootstrapActionConfig scriptBootstrapAction setNamenamesetScriptBootstrapActionscriptBootstrapAction
public CreateLoadBalancerPolicyResult createLoadBalancerPolicy(CreateLoadBalancerPolicyRequest request) {request = beforeClientExecution(request);return executeCreateLoadBalancerPolicy(request);},public CreateLoadBalancerPolicyResult createLoadBalancerPolicyCreateLoadBalancerPolicyRequest request request  beforeClientExecutionrequestreturn executeCreateLoadBalancerPolicyrequest
"public static String toHex(short value) {StringBuilder sb = new StringBuilder(4);writeHex(sb, value & 0xFFFF, 4, """");return sb.toString();}",public static String toHexshort value StringBuilder sb  new StringBuilder4writeHexsb value  0xFFFF 4 return sbtoString
"public String toString() {return ""MultiTermsEnum("" + Arrays.toString(subs) + "")"";}",public String toString return MultiTermsEnum  ArraystoStringsubs  
public PayloadSpanUtil(IndexReaderContext context) {this.context = context;},public PayloadSpanUtilIndexReaderContext context thiscontext  context
public List<FormatError> getErrors() {return errors;},public ListFormatError getErrors return errors
"public NormalisedDecimal createNormalisedDecimal(int pow10) {int missingUnderBits = _binaryExponent-39;int fracPart = (_significand.intValue() << missingUnderBits) & 0xFFFF80;long wholePart = _significand.shiftRight(C_64-_binaryExponent-1).longValue();return new NormalisedDecimal(wholePart, fracPart, pow10);}",public NormalisedDecimal createNormalisedDecimalint pow10 int missingUnderBits  binaryExponent39int fracPart  significandintValue  missingUnderBits  0xFFFF80long wholePart  significandshiftRightC64binaryExponent1longValuereturn new NormalisedDecimalwholePart fracPart pow10
public String toFormulaString(String[] operands) {StringBuilder buffer = new StringBuilder();buffer.append(MINUS);buffer.append(operands[ 0]);return buffer.toString();},public String toFormulaStringString operands StringBuilder buffer  new StringBuilderbufferappendMINUSbufferappendoperands 0return buffertoString
public ListStackSetOperationResultsResult listStackSetOperationResults(ListStackSetOperationResultsRequest request) {request = beforeClientExecution(request);return executeListStackSetOperationResults(request);},public ListStackSetOperationResultsResult listStackSetOperationResultsListStackSetOperationResultsRequest request request  beforeClientExecutionrequestreturn executeListStackSetOperationResultsrequest
"public static String getLocalizedMessage(String key, Object... args) {return getLocalizedMessage(key, Locale.getDefault(), args);}",public static String getLocalizedMessageString key Object args return getLocalizedMessagekey LocalegetDefault args
public final String reflectAsString(final boolean prependAttClass) {final StringBuilder buffer = new StringBuilder();reflectWith(new AttributeReflector());},public final String reflectAsStringfinal boolean prependAttClass final StringBuilder buffer  new StringBuilderreflectWithnew AttributeReflector
public CellRangeAddressBase getValuesCellRange() {return getCellRange(dataValues);},public CellRangeAddressBase getValuesCellRange return getCellRangedataValues
public DescribeMatchmakingConfigurationsResult describeMatchmakingConfigurations(DescribeMatchmakingConfigurationsRequest request) {request = beforeClientExecution(request);return executeDescribeMatchmakingConfigurations(request);},public DescribeMatchmakingConfigurationsResult describeMatchmakingConfigurationsDescribeMatchmakingConfigurationsRequest request request  beforeClientExecutionrequestreturn executeDescribeMatchmakingConfigurationsrequest
public char get() {if (position == limit) {throw new BufferUnderflowException();}return byteBuffer.getChar(position++ * SizeOf.CHAR);},public char get if position  limit throw new BufferUnderflowExceptionreturn byteBuffergetCharposition  SizeOfCHAR
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[FtCf ]\n"");buffer.append(""  size     = "").append(length).append(""\n"");buffer.append(""  flags    = "").append(HexDump.toHex(flags)).append(""\n"");buffer.append(""[/FtCf ]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendFtCf nbufferappend  size      appendlengthappendnbufferappend  flags     appendHexDumptoHexflagsappendnbufferappendFtCf nreturn buffertoString
public PutConfigurationSetSuppressionOptionsResult putConfigurationSetSuppressionOptions(PutConfigurationSetSuppressionOptionsRequest request) {request = beforeClientExecution(request);return executePutConfigurationSetSuppressionOptions(request);},public PutConfigurationSetSuppressionOptionsResult putConfigurationSetSuppressionOptionsPutConfigurationSetSuppressionOptionsRequest request request  beforeClientExecutionrequestreturn executePutConfigurationSetSuppressionOptionsrequest
public ListProposalVotesResult listProposalVotes(ListProposalVotesRequest request) {request = beforeClientExecution(request);return executeListProposalVotes(request);},public ListProposalVotesResult listProposalVotesListProposalVotesRequest request request  beforeClientExecutionrequestreturn executeListProposalVotesrequest
"public SheetRangeEvaluator getRefEvaluatorForCurrentSheet() {SheetRefEvaluator sre = new SheetRefEvaluator(_bookEvaluator, _tracker, _sheetIndex);return new SheetRangeEvaluator(_sheetIndex, sre);}",public SheetRangeEvaluator getRefEvaluatorForCurrentSheet SheetRefEvaluator sre  new SheetRefEvaluatorbookEvaluator tracker sheetIndexreturn new SheetRangeEvaluatorsheetIndex sre
public long ramBytesUsed() {return fst == null ? 0 : fst.ramBytesUsed();},public long ramBytesUsed return fst  null  0  fstramBytesUsed
public DataLabelExtensionRecord(RecordInputStream in) {rt = in.readShort();grbitFrt = in.readShort();in.readFully(unused);},public DataLabelExtensionRecordRecordInputStream in rt  inreadShortgrbitFrt  inreadShortinreadFullyunused
public ArchiveFindingsResult archiveFindings(ArchiveFindingsRequest request) {request = beforeClientExecution(request);return executeArchiveFindings(request);},public ArchiveFindingsResult archiveFindingsArchiveFindingsRequest request request  beforeClientExecutionrequestreturn executeArchiveFindingsrequest
"public ChartSubstreamRecordAggregate(RecordStream rs) {_bofRec = (BOFRecord) rs.getNext();List<RecordBase> temp = new ArrayList<>();while (rs.peekNextClass() != EOFRecord.class) {if (PageSettingsBlock.isComponentRecord(rs.peekNextSid())) {if (_psBlock != null) {if (rs.peekNextSid() == HeaderFooterRecord.sid) {_psBlock.addLateHeaderFooter((HeaderFooterRecord)rs.getNext());continue;}throw new IllegalStateException(""Found more than one PageSettingsBlock in chart sub-stream, had sid: "" + rs.peekNextSid());}_psBlock = new PageSettingsBlock(rs);temp.add(_psBlock);continue;}temp.add(rs.getNext());}_recs = temp;org.apache.poi.hssf.record.Record eof = rs.getNext(); if (!(eof instanceof EOFRecord)) {throw new IllegalStateException(""Bad chart EOF"");}}",public ChartSubstreamRecordAggregateRecordStream rs bofRec  BOFRecord rsgetNextListRecordBase temp  new ArrayListwhile rspeekNextClass  EOFRecordclass if PageSettingsBlockisComponentRecordrspeekNextSid if psBlock  null if rspeekNextSid  HeaderFooterRecordsid psBlockaddLateHeaderFooterHeaderFooterRecordrsgetNextcontinuethrow new IllegalStateExceptionFound more than one PageSettingsBlock in chart substream had sid   rspeekNextSidpsBlock  new PageSettingsBlockrstempaddpsBlockcontinuetempaddrsgetNextrecs  temporgapachepoihssfrecordRecord eof  rsgetNext if eof instanceof EOFRecord throw new IllegalStateExceptionBad chart EOF
public CreateSnapshotsResult createSnapshots(CreateSnapshotsRequest request) {request = beforeClientExecution(request);return executeCreateSnapshots(request);},public CreateSnapshotsResult createSnapshotsCreateSnapshotsRequest request request  beforeClientExecutionrequestreturn executeCreateSnapshotsrequest
"public String toFormulaString() {return ""()"";}",public String toFormulaString return 
"@Override public Iterator<Entry<K, V>> iterator() {final Iterator<Entry<K, V>> iterator = filteredEntrySet.iterator();return new UnmodifiableIterator<Entry<K, V>>();}",Override public IteratorEntryK V iterator final IteratorEntryK V iterator  filteredEntrySetiteratorreturn new UnmodifiableIteratorEntryK V
public UnmonitorInstancesRequest(java.util.List<String> instanceIds) {setInstanceIds(instanceIds);},public UnmonitorInstancesRequestjavautilListString instanceIds setInstanceIdsinstanceIds
public static Inflater get() {final Inflater r = getImpl();return r != null ? r : new Inflater(false);},public static Inflater get final Inflater r  getImplreturn r  null  r  new Inflaterfalse
public long get(int index) {checkIndex(index);return byteBuffer.getLong(index * SizeOf.LONG);},public long getint index checkIndexindexreturn byteBuffergetLongindex  SizeOfLONG
"public IntervalSet complement(int minElement, int maxElement) {return this.complement(IntervalSet.of(minElement,maxElement));}",public IntervalSet complementint minElement int maxElement return thiscomplementIntervalSetofminElementmaxElement
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""<sortedset"" + "": \"""").append(getField()).append(""\"">"");if (getReverse()) buffer.append('!');if (missingValue != null) {buffer.append("" missingValue="");buffer.append(missingValue);}buffer.append("" selector="");buffer.append(selector);return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendsortedset   appendgetFieldappendif getReverse bufferappendif missingValue  null bufferappend missingValuebufferappendmissingValuebufferappend selectorbufferappendselectorreturn buffertoString
public DescribeTrafficMirrorSessionsResult describeTrafficMirrorSessions(DescribeTrafficMirrorSessionsRequest request) {request = beforeClientExecution(request);return executeDescribeTrafficMirrorSessions(request);},public DescribeTrafficMirrorSessionsResult describeTrafficMirrorSessionsDescribeTrafficMirrorSessionsRequest request request  beforeClientExecutionrequestreturn executeDescribeTrafficMirrorSessionsrequest
public boolean isDirect() {return byteBuffer.isDirect();},public boolean isDirect return byteBufferisDirect
public Set<String> getConflicting() {return Collections.unmodifiableSet(diff.getConflicting());},public SetString getConflicting return CollectionsunmodifiableSetdiffgetConflicting
public ListDeviceEventsResult listDeviceEvents(ListDeviceEventsRequest request) {request = beforeClientExecution(request);return executeListDeviceEvents(request);},public ListDeviceEventsResult listDeviceEventsListDeviceEventsRequest request request  beforeClientExecutionrequestreturn executeListDeviceEventsrequest
@Override public boolean isEmpty() {return BoundedMap.this.isEmpty();},Override public boolean isEmpty return BoundedMapthisisEmpty
"public EscherSimpleProperty( short id, int propertyValue ) {super( id );this.propertyValue = propertyValue;}",public EscherSimpleProperty short id int propertyValue  super id thispropertyValue  propertyValue
"public PointPrefixTreeFieldCacheProvider(SpatialPrefixTree grid, String shapeField, int defaultSize) {super( shapeField, defaultSize );this.grid = grid;}",public PointPrefixTreeFieldCacheProviderSpatialPrefixTree grid String shapeField int defaultSize super shapeField defaultSize thisgrid  grid
public void writeByte(byte b) {assert pos < limit;bytes[pos++] = b;},public void writeBytebyte b assert pos  limitbytespos  b
public DescribeTransitGatewayPeeringAttachmentsResult describeTransitGatewayPeeringAttachments(DescribeTransitGatewayPeeringAttachmentsRequest request) {request = beforeClientExecution(request);return executeDescribeTransitGatewayPeeringAttachments(request);},public DescribeTransitGatewayPeeringAttachmentsResult describeTransitGatewayPeeringAttachmentsDescribeTransitGatewayPeeringAttachmentsRequest request request  beforeClientExecutionrequestreturn executeDescribeTransitGatewayPeeringAttachmentsrequest
"public Set<Entry<String, Ref>> entrySet() {if (entrySet == null) {entrySet = new AbstractSet<Entry<String, Ref>>();}}",public SetEntryString Ref entrySet if entrySet  null entrySet  new AbstractSetEntryString Ref
"public final ValueEval evaluate(ValueEval[] args, int srcCellRow, int srcCellCol) {try {return evaluateFunc(args, srcCellRow, srcCellCol);} catch (EvaluationException e) {return e.getErrorEval();}}",public final ValueEval evaluateValueEval args int srcCellRow int srcCellCol try return evaluateFuncargs srcCellRow srcCellCol catch EvaluationException e return egetErrorEval
"public CreateConfigurationTemplateRequest(String applicationName, String templateName) {setApplicationName(applicationName);setTemplateName(templateName);}",public CreateConfigurationTemplateRequestString applicationName String templateName setApplicationNameapplicationNamesetTemplateNametemplateName
public GetUsagePlansResult getUsagePlans(GetUsagePlansRequest request) {request = beforeClientExecution(request);return executeGetUsagePlans(request);},public GetUsagePlansResult getUsagePlansGetUsagePlansRequest request request  beforeClientExecutionrequestreturn executeGetUsagePlansrequest
"public static int serializePtgs(Ptg[] ptgs, byte[] array, int offset) {LittleEndianByteArrayOutputStream out = new LittleEndianByteArrayOutputStream(array, offset); List<Ptg> arrayPtgs = null;for (Ptg ptg : ptgs) {ptg.write(out);if (ptg instanceof ArrayPtg) {if (arrayPtgs == null) {arrayPtgs = new ArrayList<>(5);}arrayPtgs.add(ptg);}}if (arrayPtgs != null) {for (Ptg arrayPtg : arrayPtgs) {ArrayPtg p = (ArrayPtg) arrayPtg;p.writeTokenValueBytes(out);}}return out.getWriteIndex() - offset;}",public static int serializePtgsPtg ptgs byte array int offset LittleEndianByteArrayOutputStream out  new LittleEndianByteArrayOutputStreamarray offset ListPtg arrayPtgs  nullfor Ptg ptg  ptgs ptgwriteoutif ptg instanceof ArrayPtg if arrayPtgs  null arrayPtgs  new ArrayList5arrayPtgsaddptgif arrayPtgs  null for Ptg arrayPtg  arrayPtgs ArrayPtg p  ArrayPtg arrayPtgpwriteTokenValueBytesoutreturn outgetWriteIndex  offset
public int size() {return lines.size() - 2;},public int size return linessize  2
public NumberRecord(RecordInputStream in) {super(in);field_4_value = in.readDouble();},public NumberRecordRecordInputStream in superinfield4value  inreadDouble
public UnpeerVpcResult unpeerVpc(UnpeerVpcRequest request) {request = beforeClientExecution(request);return executeUnpeerVpc(request);},public UnpeerVpcResult unpeerVpcUnpeerVpcRequest request request  beforeClientExecutionrequestreturn executeUnpeerVpcrequest
public DescribeTransitGatewayMulticastDomainsResult describeTransitGatewayMulticastDomains(DescribeTransitGatewayMulticastDomainsRequest request) {request = beforeClientExecution(request);return executeDescribeTransitGatewayMulticastDomains(request);},public DescribeTransitGatewayMulticastDomainsResult describeTransitGatewayMulticastDomainsDescribeTransitGatewayMulticastDomainsRequest request request  beforeClientExecutionrequestreturn executeDescribeTransitGatewayMulticastDomainsrequest
public final Break getBreak(int Main) {Integer rowKey = Integer.valueOf(Main);return _breakMap.get(rowKey);},public final Break getBreakint Main Integer rowKey  IntegervalueOfMainreturn breakMapgetrowKey
public HSSFPatternFormatting getPatternFormatting(){return getPatternFormatting(false);},public HSSFPatternFormatting getPatternFormattingreturn getPatternFormattingfalse
public FileMode getMode(Side side) {return side == Side.OLD ? getOldMode() : getNewMode();},public FileMode getModeSide side return side  SideOLD  getOldMode  getNewMode
"public StringBuffer append(int i) {IntegralToString.appendInt(this, i);return this;}",public StringBuffer appendint i IntegralToStringappendIntthis ireturn this
public boolean requiresCommitBody() {return true;},public boolean requiresCommitBody return true
public boolean remove(Object object) {Iterator<?> it = iterator();if (object != null) {while (it.hasNext()) {if (object.equals(it.next())) {it.remove();return true;}}} else {while (it.hasNext()) {if (it.next() == null) {it.remove();return true;}}}return false;},public boolean removeObject object Iterator it  iteratorif object  null while ithasNext if objectequalsitnext itremovereturn true else while ithasNext if itnext  null itremovereturn truereturn false
public Object get(CharSequence key) {return trie.get(key);},public Object getCharSequence key return triegetkey
public SubmoduleInitCommand submoduleInit() {return new SubmoduleInitCommand(repo);},public SubmoduleInitCommand submoduleInit return new SubmoduleInitCommandrepo
public GetRepositoryPolicyResult getRepositoryPolicy(GetRepositoryPolicyRequest request) {request = beforeClientExecution(request);return executeGetRepositoryPolicy(request);},public GetRepositoryPolicyResult getRepositoryPolicyGetRepositoryPolicyRequest request request  beforeClientExecutionrequestreturn executeGetRepositoryPolicyrequest
"public HSSFPicture createPicture(ClientAnchor anchor, int pictureIndex) {return createPicture((HSSFClientAnchor) anchor, pictureIndex);}",public HSSFPicture createPictureClientAnchor anchor int pictureIndex return createPictureHSSFClientAnchor anchor pictureIndex
"public int fillFields(byte[] data, int pOffset, EscherRecordFactory recordFactory) {int bytesRemaining = readHeader(data, pOffset);int bytesWritten = 8;int offset = pOffset + 8;while (bytesRemaining > 0 && offset < data.length) {EscherRecord child = recordFactory.createRecord(data, offset);int childBytesWritten = child.fillFields(data, offset, recordFactory);bytesWritten += childBytesWritten;offset += childBytesWritten;bytesRemaining -= childBytesWritten;addChildRecord(child);if (offset >= data.length && bytesRemaining > 0) {_remainingLength = bytesRemaining;if (log.check(POILogger.WARN)) {log.log(POILogger.WARN, ""Not enough Escher data: "" + bytesRemaining + "" bytes remaining but no space left"");}}}return bytesWritten;}",public int fillFieldsbyte data int pOffset EscherRecordFactory recordFactory int bytesRemaining  readHeaderdata pOffsetint bytesWritten  8int offset  pOffset  8while bytesRemaining  0  offset  datalength EscherRecord child  recordFactorycreateRecorddata offsetint childBytesWritten  childfillFieldsdata offset recordFactorybytesWritten  childBytesWrittenoffset  childBytesWrittenbytesRemaining  childBytesWrittenaddChildRecordchildif offset  datalength  bytesRemaining  0 remainingLength  bytesRemainingif logcheckPOILoggerWARN loglogPOILoggerWARN Not enough Escher data   bytesRemaining   bytes remaining but no space leftreturn bytesWritten
"public void startElement(String namespace, String simple, String qualified,Attributes attributes) {int elemType = getElementType(qualified);switch (elemType) {case PAGE:title = null;body = null;time = null;id = null;break;case BODY:case DATE:case TITLE:case ID:contents.setLength(0);break;default:}}",public void startElementString namespace String simple String qualifiedAttributes attributes int elemType  getElementTypequalifiedswitch elemType case PAGEtitle  nullbody  nulltime  nullid  nullbreakcase BODYcase DATEcase TITLEcase IDcontentssetLength0breakdefault
"public AbbreviatedObjectId abbreviate(int len) {final int a = AbbreviatedObjectId.mask(len, 1, w1);final int b = AbbreviatedObjectId.mask(len, 2, w2);final int c = AbbreviatedObjectId.mask(len, 3, w3);final int d = AbbreviatedObjectId.mask(len, 4, w4);final int e = AbbreviatedObjectId.mask(len, 5, w5);return new AbbreviatedObjectId(len, a, b, c, d, e);}",public AbbreviatedObjectId abbreviateint len final int a  AbbreviatedObjectIdmasklen 1 w1final int b  AbbreviatedObjectIdmasklen 2 w2final int c  AbbreviatedObjectIdmasklen 3 w3final int d  AbbreviatedObjectIdmasklen 4 w4final int e  AbbreviatedObjectIdmasklen 5 w5return new AbbreviatedObjectIdlen a b c d e
"public String toString() {return ""{""+precedence+"">=prec}?"";}",public String toString return precedenceprec
public IntBuffer put(IntBuffer buf) {throw new ReadOnlyBufferException();},public IntBuffer putIntBuffer buf throw new ReadOnlyBufferException
public static PathSuffixFilter create(String path) {if (path.length() == 0)throw new IllegalArgumentException(JGitText.get().emptyPathNotPermitted);return new PathSuffixFilter(path);},public static PathSuffixFilter createString path if pathlength  0throw new IllegalArgumentExceptionJGitTextgetemptyPathNotPermittedreturn new PathSuffixFilterpath
"public static Cell getCell(Row row, int columnIndex) {Cell cell = row.getCell(columnIndex);if (cell == null) {cell = row.createCell(columnIndex);}return cell;}",public static Cell getCellRow row int columnIndex Cell cell  rowgetCellcolumnIndexif cell  null cell  rowcreateCellcolumnIndexreturn cell
"public void write(ByteBuffer src, long position) {long endPosition = position + src.capacity();if(endPosition > buffer.length) {extend(endPosition);}src.get(buffer, (int)position, src.capacity());if(endPosition > size) {size = endPosition;}}",public void writeByteBuffer src long position long endPosition  position  srccapacityifendPosition  bufferlength extendendPositionsrcgetbuffer intposition srccapacityifendPosition  size size  endPosition
public void print(int i) {print(String.valueOf(i));},public void printint i printStringvalueOfi
"public ICUNormalizer2CharFilterFactory(Map<String,String> args) {super(args);String form = get(args, ""form"", ""nfkc_cf"");String mode = get(args, ""mode"", Arrays.asList(""compose"", ""decompose""), ""compose"");Normalizer2 normalizer = Normalizer2.getInstance(null, form, ""compose"".equals(mode) ? Normalizer2.Mode.COMPOSE : Normalizer2.Mode.DECOMPOSE);String filter = get(args, ""filter"");if (filter != null) {UnicodeSet set = new UnicodeSet(filter);if (!set.isEmpty()) {set.freeze();normalizer = new FilteredNormalizer2(normalizer, set);}}if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}this.normalizer = normalizer;}",public ICUNormalizer2CharFilterFactoryMapStringString args superargsString form  getargs form nfkccfString mode  getargs mode ArraysasListcompose decompose composeNormalizer2 normalizer  Normalizer2getInstancenull form composeequalsmode  Normalizer2ModeCOMPOSE  Normalizer2ModeDECOMPOSEString filter  getargs filterif filter  null UnicodeSet set  new UnicodeSetfilterif setisEmpty setfreezenormalizer  new FilteredNormalizer2normalizer setif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   argsthisnormalizer  normalizer
public CreateAdditionalAssignmentsForHITResult createAdditionalAssignmentsForHIT(CreateAdditionalAssignmentsForHITRequest request) {request = beforeClientExecution(request);return executeCreateAdditionalAssignmentsForHIT(request);},public CreateAdditionalAssignmentsForHITResult createAdditionalAssignmentsForHITCreateAdditionalAssignmentsForHITRequest request request  beforeClientExecutionrequestreturn executeCreateAdditionalAssignmentsForHITrequest
"public DeleteEventRequest() {super(""CloudPhoto"", ""2017-07-11"", ""DeleteEvent"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public DeleteEventRequest superCloudPhoto 20170711 DeleteEvent cloudphotosetProtocolProtocolTypeHTTPS
public long getSize() {return size;},public long getSize return size
public void undeprecateWorkflowType(UndeprecateWorkflowTypeRequest request) {request = beforeClientExecution(request);executeUndeprecateWorkflowType(request);},public void undeprecateWorkflowTypeUndeprecateWorkflowTypeRequest request request  beforeClientExecutionrequestexecuteUndeprecateWorkflowTyperequest
"public boolean removeValue(final int o){boolean rval = false;for (int j = 0; !rval && (j < _limit); j++){if (o == _array[ j ]){if (j+1 < _limit) {System.arraycopy(_array, j + 1, _array, j, _limit - j);}_limit--;rval = true;}}return rval;}",public boolean removeValuefinal int oboolean rval  falsefor int j  0 rval  j  limit jif o  array j if j1  limit Systemarraycopyarray j  1 array j limit  jlimitrval  truereturn rval
"public String toString() {return new String(buf, 0, size());}",public String toString return new Stringbuf 0 size
"public void setDirCacheIterator(TreeWalk walk, int treeId) {state.walk = walk;state.dirCacheTree = treeId;}",public void setDirCacheIteratorTreeWalk walk int treeId statewalk  walkstatedirCacheTree  treeId
public DescribeOrganizationResult describeOrganization(DescribeOrganizationRequest request) {request = beforeClientExecution(request);return executeDescribeOrganization(request);},public DescribeOrganizationResult describeOrganizationDescribeOrganizationRequest request request  beforeClientExecutionrequestreturn executeDescribeOrganizationrequest
public CharsRef(int capacity) {chars = new char[capacity];},public CharsRefint capacity chars  new charcapacity
public RebootInstanceResult rebootInstance(RebootInstanceRequest request) {request = beforeClientExecution(request);return executeRebootInstance(request);},public RebootInstanceResult rebootInstanceRebootInstanceRequest request request  beforeClientExecutionrequestreturn executeRebootInstancerequest
"public static TreeFilter create(Collection<TreeFilter> list) {if (list.size() < 2)throw new IllegalArgumentException(JGitText.get().atLeastTwoFiltersNeeded);final TreeFilter[] subfilters = new TreeFilter[list.size()];list.toArray(subfilters);if (subfilters.length == 2)return create(subfilters[0], subfilters[1]);return new List(subfilters);}",public static TreeFilter createCollectionTreeFilter list if listsize  2throw new IllegalArgumentExceptionJGitTextgetatLeastTwoFiltersNeededfinal TreeFilter subfilters  new TreeFilterlistsizelisttoArraysubfiltersif subfilterslength  2return createsubfilters0 subfilters1return new Listsubfilters
"public long ramBytesUsed() {long ramBytesUsed = BASE_RAM_BYTES_USED;ramBytesUsed += fields.size() * 2L * RamUsageEstimator.NUM_BYTES_OBJECT_REF;ramBytesUsed += formats.size() * 2L * RamUsageEstimator.NUM_BYTES_OBJECT_REF;for(Map.Entry<String,FieldsProducer> entry: formats.entrySet()) {ramBytesUsed += entry.getValue().ramBytesUsed();}return ramBytesUsed;}",public long ramBytesUsed long ramBytesUsed  BASERAMBYTESUSEDramBytesUsed  fieldssize  2L  RamUsageEstimatorNUMBYTESOBJECTREFramBytesUsed  formatssize  2L  RamUsageEstimatorNUMBYTESOBJECTREFforMapEntryStringFieldsProducer entry formatsentrySet ramBytesUsed  entrygetValueramBytesUsedreturn ramBytesUsed
public ExportApiResult exportApi(ExportApiRequest request) {request = beforeClientExecution(request);return executeExportApi(request);},public ExportApiResult exportApiExportApiRequest request request  beforeClientExecutionrequestreturn executeExportApirequest
public void setExpectedOldObjectId(AnyObjectId id) {expValue = id != null ? id.toObjectId() : null;},public void setExpectedOldObjectIdAnyObjectId id expValue  id  null  idtoObjectId  null
public void skipBytes(long count) {pos += count;},public void skipByteslong count pos  count
public String toString(){return String.valueOf(_value);},public String toStringreturn StringvalueOfvalue
public boolean isPopupShowing() {return mPopup.isShowing();},public boolean isPopupShowing return mPopupisShowing
public DBClusterSnapshot deleteDBClusterSnapshot(DeleteDBClusterSnapshotRequest request) {request = beforeClientExecution(request);return executeDeleteDBClusterSnapshot(request);},public DBClusterSnapshot deleteDBClusterSnapshotDeleteDBClusterSnapshotRequest request request  beforeClientExecutionrequestreturn executeDeleteDBClusterSnapshotrequest
"public Filter(String name, java.util.List<String> values) {setName(name);setValues(values);}",public FilterString name javautilListString values setNamenamesetValuesvalues
public SearchRoomsResult searchRooms(SearchRoomsRequest request) {request = beforeClientExecution(request);return executeSearchRooms(request);},public SearchRoomsResult searchRoomsSearchRoomsRequest request request  beforeClientExecutionrequestreturn executeSearchRoomsrequest
"public int read(byte[] buf, int off, int cnt) throws IOException {try {beginRead();return super.read(buf, off, cnt);} catch (InterruptedIOException e) {throw readTimedOut(e);} finally {endRead();}}",public int readbyte buf int off int cnt throws IOException try beginReadreturn superreadbuf off cnt catch InterruptedIOException e throw readTimedOute finally endRead
public DeleteLoadBalancerTlsCertificateResult deleteLoadBalancerTlsCertificate(DeleteLoadBalancerTlsCertificateRequest request) {request = beforeClientExecution(request);return executeDeleteLoadBalancerTlsCertificate(request);},public DeleteLoadBalancerTlsCertificateResult deleteLoadBalancerTlsCertificateDeleteLoadBalancerTlsCertificateRequest request request  beforeClientExecutionrequestreturn executeDeleteLoadBalancerTlsCertificaterequest
"public static MessageDigest newMessageDigest() {try {return MessageDigest.getInstance(HASH_FUNCTION);} catch (NoSuchAlgorithmException nsae) {throw new RuntimeException(MessageFormat.format(JGitText.get().requiredHashFunctionNotAvailable, HASH_FUNCTION), nsae);}}",public static MessageDigest newMessageDigest try return MessageDigestgetInstanceHASHFUNCTION catch NoSuchAlgorithmException nsae throw new RuntimeExceptionMessageFormatformatJGitTextgetrequiredHashFunctionNotAvailable HASHFUNCTION nsae
"public IfFunction(ValueSource ifSource, ValueSource trueSource, ValueSource falseSource) {this.ifSource = ifSource;this.trueSource = trueSource;this.falseSource = falseSource;}",public IfFunctionValueSource ifSource ValueSource trueSource ValueSource falseSource thisifSource  ifSourcethistrueSource  trueSourcethisfalseSource  falseSource
"public static double npv(double r, double[] cfs) {double npv = 0;double r1 = r + 1;double trate = r1;for (int i=0, iSize=cfs.length; i<iSize; i++) {npv += cfs[i] / trate;trate *= r1;}return npv;}",public static double npvdouble r double cfs double npv  0double r1  r  1double trate  r1for int i0 iSizecfslength iiSize i npv  cfsi  tratetrate  r1return npv
"public StandardQueryTreeBuilder() {setBuilder(GroupQueryNode.class, new GroupQueryNodeBuilder());setBuilder(FieldQueryNode.class, new FieldQueryNodeBuilder());setBuilder(BooleanQueryNode.class, new BooleanQueryNodeBuilder());setBuilder(FuzzyQueryNode.class, new FuzzyQueryNodeBuilder());setBuilder(PointQueryNode.class, new DummyQueryNodeBuilder());setBuilder(PointRangeQueryNode.class, new PointRangeQueryNodeBuilder());setBuilder(BoostQueryNode.class, new BoostQueryNodeBuilder());setBuilder(ModifierQueryNode.class, new ModifierQueryNodeBuilder());setBuilder(WildcardQueryNode.class, new WildcardQueryNodeBuilder());setBuilder(TokenizedPhraseQueryNode.class, new PhraseQueryNodeBuilder());setBuilder(MatchNoDocsQueryNode.class, new MatchNoDocsQueryNodeBuilder());setBuilder(PrefixWildcardQueryNode.class,new PrefixWildcardQueryNodeBuilder());setBuilder(TermRangeQueryNode.class, new TermRangeQueryNodeBuilder());setBuilder(RegexpQueryNode.class, new RegexpQueryNodeBuilder());setBuilder(SlopQueryNode.class, new SlopQueryNodeBuilder());setBuilder(SynonymQueryNode.class,new SynonymQueryNodeBuilder());setBuilder(MultiPhraseQueryNode.class, new MultiPhraseQueryNodeBuilder());setBuilder(MatchAllDocsQueryNode.class, new MatchAllDocsQueryNodeBuilder());}",public StandardQueryTreeBuilder setBuilderGroupQueryNodeclass new GroupQueryNodeBuildersetBuilderFieldQueryNodeclass new FieldQueryNodeBuildersetBuilderBooleanQueryNodeclass new BooleanQueryNodeBuildersetBuilderFuzzyQueryNodeclass new FuzzyQueryNodeBuildersetBuilderPointQueryNodeclass new DummyQueryNodeBuildersetBuilderPointRangeQueryNodeclass new PointRangeQueryNodeBuildersetBuilderBoostQueryNodeclass new BoostQueryNodeBuildersetBuilderModifierQueryNodeclass new ModifierQueryNodeBuildersetBuilderWildcardQueryNodeclass new WildcardQueryNodeBuildersetBuilderTokenizedPhraseQueryNodeclass new PhraseQueryNodeBuildersetBuilderMatchNoDocsQueryNodeclass new MatchNoDocsQueryNodeBuildersetBuilderPrefixWildcardQueryNodeclassnew PrefixWildcardQueryNodeBuildersetBuilderTermRangeQueryNodeclass new TermRangeQueryNodeBuildersetBuilderRegexpQueryNodeclass new RegexpQueryNodeBuildersetBuilderSlopQueryNodeclass new SlopQueryNodeBuildersetBuilderSynonymQueryNodeclassnew SynonymQueryNodeBuildersetBuilderMultiPhraseQueryNodeclass new MultiPhraseQueryNodeBuildersetBuilderMatchAllDocsQueryNodeclass new MatchAllDocsQueryNodeBuilder
"public StringBuilder append(double d) {RealToString.getInstance().appendDouble(this, d);return this;}",public StringBuilder appenddouble d RealToStringgetInstanceappendDoublethis dreturn this
"public Tag(String key, String value) {setKey(key);setValue(value);}",public TagString key String value setKeykeysetValuevalue
"public FederatedUser(String federatedUserId, String arn) {setFederatedUserId(federatedUserId);setArn(arn);}",public FederatedUserString federatedUserId String arn setFederatedUserIdfederatedUserIdsetArnarn
public QueryRescorer(Query query) {this.query = query;},public QueryRescorerQuery query thisquery  query
"public void setRule(int idx, HSSFConditionalFormattingRule cfRule) {cfAggregate.setRule(idx, cfRule.getCfRuleRecord());}",public void setRuleint idx HSSFConditionalFormattingRule cfRule cfAggregatesetRuleidx cfRulegetCfRuleRecord
public RenameDetector getRenameDetector() {return renameDetector;},public RenameDetector getRenameDetector return renameDetector
public UpdateTemplatePermissionsResult updateTemplatePermissions(UpdateTemplatePermissionsRequest request) {request = beforeClientExecution(request);return executeUpdateTemplatePermissions(request);},public UpdateTemplatePermissionsResult updateTemplatePermissionsUpdateTemplatePermissionsRequest request request  beforeClientExecutionrequestreturn executeUpdateTemplatePermissionsrequest
"public DoubleBuffer put(int index, double c) {checkIndex(index);byteBuffer.putDouble(index * SizeOf.DOUBLE, c);return this;}",public DoubleBuffer putint index double c checkIndexindexbyteBufferputDoubleindex  SizeOfDOUBLE creturn this
public ResetInstanceAttributeResult resetInstanceAttribute(ResetInstanceAttributeRequest request) {request = beforeClientExecution(request);return executeResetInstanceAttribute(request);},public ResetInstanceAttributeResult resetInstanceAttributeResetInstanceAttributeRequest request request  beforeClientExecutionrequestreturn executeResetInstanceAttributerequest
"public DirectoryEntry getDirectory() throws IOException {EmbeddedObjectRefSubRecord subRecord = findObjectRecord();int streamId = subRecord.getStreamId().intValue();String streamName = ""MBD"" + HexDump.toHex(streamId);Entry entry = _root.getEntry(streamName);if (entry instanceof DirectoryEntry) {return (DirectoryEntry) entry;}throw new IOException(""Stream "" + streamName + "" was not an OLE2 directory"");}",public DirectoryEntry getDirectory throws IOException EmbeddedObjectRefSubRecord subRecord  findObjectRecordint streamId  subRecordgetStreamIdintValueString streamName  MBD  HexDumptoHexstreamIdEntry entry  rootgetEntrystreamNameif entry instanceof DirectoryEntry return DirectoryEntry entrythrow new IOExceptionStream   streamName   was not an OLE2 directory
"public HashMap(int capacity) {if (capacity < 0) {throw new IllegalArgumentException(""Capacity: "" + capacity);}if (capacity == 0) {@SuppressWarnings(""unchecked"")HashMapEntry<K, V>[] tab = (HashMapEntry<K, V>[]) EMPTY_TABLE;table = tab;threshold = -1; return;}if (capacity < MINIMUM_CAPACITY) {capacity = MINIMUM_CAPACITY;} else if (capacity > MAXIMUM_CAPACITY) {capacity = MAXIMUM_CAPACITY;} else {capacity = roundUpToPowerOfTwo(capacity);}makeTable(capacity);}",public HashMapint capacity if capacity  0 throw new IllegalArgumentExceptionCapacity   capacityif capacity  0 SuppressWarningsuncheckedHashMapEntryK V tab  HashMapEntryK V EMPTYTABLEtable  tabthreshold  1 returnif capacity  MINIMUMCAPACITY capacity  MINIMUMCAPACITY else if capacity  MAXIMUMCAPACITY capacity  MAXIMUMCAPACITY else capacity  roundUpToPowerOfTwocapacitymakeTablecapacity
public int getCachedErrorValue() {return specialCachedValue.getErrorValue();},public int getCachedErrorValue return specialCachedValuegetErrorValue
public void add(BytesRef utf8) throws IOException {if (writer == null) {throw new IllegalStateException();}writer.write(utf8);},public void addBytesRef utf8 throws IOException if writer  null throw new IllegalStateExceptionwriterwriteutf8
public UpdateHITReviewStatusResult updateHITReviewStatus(UpdateHITReviewStatusRequest request) {request = beforeClientExecution(request);return executeUpdateHITReviewStatus(request);},public UpdateHITReviewStatusResult updateHITReviewStatusUpdateHITReviewStatusRequest request request  beforeClientExecutionrequestreturn executeUpdateHITReviewStatusrequest
"public ScandinavianNormalizationFilterFactory(Map<String, String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public ScandinavianNormalizationFilterFactoryMapString String args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public DBSnapshotAttributesResult describeDBSnapshotAttributes(DescribeDBSnapshotAttributesRequest request) {request = beforeClientExecution(request);return executeDescribeDBSnapshotAttributes(request);},public DBSnapshotAttributesResult describeDBSnapshotAttributesDescribeDBSnapshotAttributesRequest request request  beforeClientExecutionrequestreturn executeDescribeDBSnapshotAttributesrequest
"public GetNamespaceAuthorizationListRequest() {super(""cr"", ""2016-06-07"", ""GetNamespaceAuthorizationList"", ""cr"");setUriPattern(""/namespace/[Namespace]/authorizations"");setMethod(MethodType.GET);}",public GetNamespaceAuthorizationListRequest supercr 20160607 GetNamespaceAuthorizationList crsetUriPatternnamespaceNamespaceauthorizationssetMethodMethodTypeGET
"public LowFreqTerm(int[] postings, byte[] payloads, int docFreq, int totalTermFreq) {this.postings = postings;this.payloads = payloads;this.docFreq = docFreq;this.totalTermFreq = totalTermFreq;}",public LowFreqTermint postings byte payloads int docFreq int totalTermFreq thispostings  postingsthispayloads  payloadsthisdocFreq  docFreqthistotalTermFreq  totalTermFreq
public void reset() {state = null;consumed = true;keepOrig = false;matched = false;},public void reset state  nullconsumed  truekeepOrig  falsematched  false
public static final boolean isId(String id) {if (id.length() < 2 || Constants.OBJECT_ID_STRING_LENGTH < id.length())return false;try {for (int i = 0; i < id.length(); i++)RawParseUtils.parseHexInt4((byte) id.charAt(i));return true;} catch (ArrayIndexOutOfBoundsException e) {return false;}},public static final boolean isIdString id if idlength  2  ConstantsOBJECTIDSTRINGLENGTH  idlengthreturn falsetry for int i  0 i  idlength iRawParseUtilsparseHexInt4byte idcharAtireturn true catch ArrayIndexOutOfBoundsException e return false
"public static int entrySize(FileMode mode, int nameLen) {return mode.copyToLength() + nameLen + OBJECT_ID_LENGTH + 2;}",public static int entrySizeFileMode mode int nameLen return modecopyToLength  nameLen  OBJECTIDLENGTH  2
"public void exitEveryRule(ParserRuleContext ctx) {System.out.println(""exit    ""+getRuleNames()[ctx.getRuleIndex()]+"", LT(1)=""+_input.LT(1).getText());}",public void exitEveryRuleParserRuleContext ctx Systemoutprintlnexit    getRuleNamesctxgetRuleIndex LT1inputLT1getText
public EventSubscription modifyEventSubscription(ModifyEventSubscriptionRequest request) {request = beforeClientExecution(request);return executeModifyEventSubscription(request);},public EventSubscription modifyEventSubscriptionModifyEventSubscriptionRequest request request  beforeClientExecutionrequestreturn executeModifyEventSubscriptionrequest
"public NormalizeCharMap build() {final FST<CharsRef> map;try {final Outputs<CharsRef> outputs = CharSequenceOutputs.getSingleton();final FSTCompiler<CharsRef> fstCompiler = new FSTCompiler<>(FST.INPUT_TYPE.BYTE2, outputs);final IntsRefBuilder scratch = new IntsRefBuilder();for(Map.Entry<String,String> ent : pendingPairs.entrySet()) {fstCompiler.add(Util.toUTF16(ent.getKey(), scratch),new CharsRef(ent.getValue()));}map = fstCompiler.compile();pendingPairs.clear();} catch (IOException ioe) {throw new RuntimeException(ioe);}return new NormalizeCharMap(map);}",public NormalizeCharMap build final FSTCharsRef maptry final OutputsCharsRef outputs  CharSequenceOutputsgetSingletonfinal FSTCompilerCharsRef fstCompiler  new FSTCompilerFSTINPUTTYPEBYTE2 outputsfinal IntsRefBuilder scratch  new IntsRefBuilderforMapEntryStringString ent  pendingPairsentrySet fstCompileraddUtiltoUTF16entgetKey scratchnew CharsRefentgetValuemap  fstCompilercompilependingPairsclear catch IOException ioe throw new RuntimeExceptionioereturn new NormalizeCharMapmap
public BootstrapActions(String bucket) {this.bucket = bucket;},public BootstrapActionsString bucket thisbucket  bucket
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {ValueEval ve;try {ve = OperandResolver.getSingleValue(arg0, srcRowIndex, srcColumnIndex);} catch (EvaluationException e) {ve = e.getErrorEval();}return BoolEval.valueOf(evaluate(ve));}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval vetry ve  OperandResolvergetSingleValuearg0 srcRowIndex srcColumnIndex catch EvaluationException e ve  egetErrorEvalreturn BoolEvalvalueOfevaluateve
"public static IndexDeletionPolicy getIndexDeletionPolicy(Config config) {String deletionPolicyName = config.get(""deletion.policy"", ""org.apache.lucene.index.KeepOnlyLastCommitDeletionPolicy"");if (deletionPolicyName.equals(NoDeletionPolicy.class.getName())) {return NoDeletionPolicy.INSTANCE;} else {try {return Class.forName(deletionPolicyName).asSubclass(IndexDeletionPolicy.class).getConstructor().newInstance();} catch (Exception e) {}}}",public static IndexDeletionPolicy getIndexDeletionPolicyConfig config String deletionPolicyName  configgetdeletionpolicy orgapacheluceneindexKeepOnlyLastCommitDeletionPolicyif deletionPolicyNameequalsNoDeletionPolicyclassgetName return NoDeletionPolicyINSTANCE else try return ClassforNamedeletionPolicyNameasSubclassIndexDeletionPolicyclassgetConstructornewInstance catch Exception e 
"public FontRecord(RecordInputStream in) {field_1_font_height         = in.readShort();field_2_attributes          = in.readShort();field_3_color_palette_index = in.readShort();field_4_bold_weight         = in.readShort();field_5_super_sub_script    = in.readShort();field_6_underline           = in.readByte();field_7_family              = in.readByte();field_8_charset             = in.readByte();field_9_zero                = in.readByte();int field_10_font_name_len  = in.readUByte();int unicodeFlags            = in.readUByte(); if (field_10_font_name_len > 0) {if (unicodeFlags == 0) {   field_11_font_name = in.readCompressedUnicode(field_10_font_name_len);} else {   field_11_font_name = in.readUnicodeLEString(field_10_font_name_len);}} else {field_11_font_name = """";}}",public FontRecordRecordInputStream in field1fontheight          inreadShortfield2attributes           inreadShortfield3colorpaletteindex  inreadShortfield4boldweight          inreadShortfield5supersubscript     inreadShortfield6underline            inreadBytefield7family               inreadBytefield8charset              inreadBytefield9zero                 inreadByteint field10fontnamelen   inreadUByteint unicodeFlags             inreadUByte if field10fontnamelen  0 if unicodeFlags  0    field11fontname  inreadCompressedUnicodefield10fontnamelen else    field11fontname  inreadUnicodeLEStringfield10fontnamelen else field11fontname  
public String getRefLogMessage() {return destination.getRefLogMessage();},public String getRefLogMessage return destinationgetRefLogMessage
"public String toString() {return subSlice.toString()+"":""+terms;}",public String toString return subSlicetoStringterms
"public IntBuffer asReadOnlyBuffer() {return ReadOnlyIntArrayBuffer.copy(this, mark);}",public IntBuffer asReadOnlyBuffer return ReadOnlyIntArrayBuffercopythis mark
public void clear() {super.clear();},public void clear superclear
"public static void fill(double[] array, int start, int end, double value) {Arrays.checkStartAndEnd(array.length, start, end);for (int i = start; i < end; i++) {array[i] = value;}}",public static void filldouble array int start int end double value ArrayscheckStartAndEndarraylength start endfor int i  start i  end i arrayi  value
"public ByteBuffer next() {if(nextBlock == POIFSConstants.END_OF_CHAIN) {throw new IndexOutOfBoundsException(""Can't read past the end of the stream"");}try {loopDetector.claim(nextBlock);ByteBuffer data = blockStore.getBlockAt(nextBlock);nextBlock = blockStore.getNextBlock(nextBlock);return data;} catch(IOException e) {throw new RuntimeException(e);}}",public ByteBuffer next ifnextBlock  POIFSConstantsENDOFCHAIN throw new IndexOutOfBoundsExceptionCant read past the end of the streamtry loopDetectorclaimnextBlockByteBuffer data  blockStoregetBlockAtnextBlocknextBlock  blockStoregetNextBlocknextBlockreturn data catchIOException e throw new RuntimeExceptione
public DFAState getCurrentState() {return currentState;},public DFAState getCurrentState return currentState
public E lower(E e) {return backingMap.lowerKey(e);},public E lowerE e return backingMaplowerKeye
"public FinnishLightStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public FinnishLightStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
"public String toString() {StringBuilder retval = new StringBuilder();retval.append(""[MERGEDCELLS]"").append(""\n"");retval.append(""     .numregions ="").append(getNumAreas()).append(""\n"");for (int k = 0; k < _numberOfRegions; k++) {CellRangeAddress r = _regions[_startIndex + k];retval.append(""     .rowfrom ="").append(r.getFirstRow()).append(""\n"");retval.append(""     .rowto   ="").append(r.getLastRow()).append(""\n"");retval.append(""     .colfrom ="").append(r.getFirstColumn()).append(""\n"");retval.append(""     .colto   ="").append(r.getLastColumn()).append(""\n"");}retval.append(""[MERGEDCELLS]"").append(""\n"");return retval.toString();}",public String toString StringBuilder retval  new StringBuilderretvalappendMERGEDCELLSappendnretvalappend     numregions appendgetNumAreasappendnfor int k  0 k  numberOfRegions k CellRangeAddress r  regionsstartIndex  kretvalappend     rowfrom appendrgetFirstRowappendnretvalappend     rowto   appendrgetLastRowappendnretvalappend     colfrom appendrgetFirstColumnappendnretvalappend     colto   appendrgetLastColumnappendnretvalappendMERGEDCELLSappendnreturn retvaltoString
"public String getString(int begin, int end, boolean dropLF) {if (begin == end)return """"; int s = getStart(begin);int e = getEnd(end - 1);if (dropLF && content[e - 1] == '\n')e--;return decode(s, e);}",public String getStringint begin int end boolean dropLF if begin  endreturn  int s  getStartbeginint e  getEndend  1if dropLF  contente  1  nereturn decodes e
public RevokeDomainAccessResult revokeDomainAccess(RevokeDomainAccessRequest request) {request = beforeClientExecution(request);return executeRevokeDomainAccess(request);},public RevokeDomainAccessResult revokeDomainAccessRevokeDomainAccessRequest request request  beforeClientExecutionrequestreturn executeRevokeDomainAccessrequest
"public GetPhotoStoreRequest() {super(""CloudPhoto"", ""2017-07-11"", ""GetPhotoStore"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public GetPhotoStoreRequest superCloudPhoto 20170711 GetPhotoStore cloudphotosetProtocolProtocolTypeHTTPS
public DescribeVirtualInterfacesResult describeVirtualInterfaces(DescribeVirtualInterfacesRequest request) {request = beforeClientExecution(request);return executeDescribeVirtualInterfaces(request);},public DescribeVirtualInterfacesResult describeVirtualInterfacesDescribeVirtualInterfacesRequest request request  beforeClientExecutionrequestreturn executeDescribeVirtualInterfacesrequest
public EmptyTreeIterator createEmptyTreeIterator() {return new EmptyTreeIterator(this);},public EmptyTreeIterator createEmptyTreeIterator return new EmptyTreeIteratorthis
public File[] listFiles(FileFilter filter) {File[] files = listFiles();if (filter == null || files == null) {return files;}List<File> result = new ArrayList<File>(files.length);for (File file : files) {if (filter.accept(file)) {result.add(file);}}return result.toArray(new File[result.size()]);},public File listFilesFileFilter filter File files  listFilesif filter  null  files  null return filesListFile result  new ArrayListFilefileslengthfor File file  files if filteracceptfile resultaddfilereturn resulttoArraynew Fileresultsize
"public CharSequence toQueryString(EscapeQuerySyntax escaper) {if (isDefaultField(this.field)) {return this.text;} else {return this.field + "":"" + this.text;}}",public CharSequence toQueryStringEscapeQuerySyntax escaper if isDefaultFieldthisfield return thistext else return thisfield    thistext
public WithdrawByoipCidrResult withdrawByoipCidr(WithdrawByoipCidrRequest request) {request = beforeClientExecution(request);return executeWithdrawByoipCidr(request);},public WithdrawByoipCidrResult withdrawByoipCidrWithdrawByoipCidrRequest request request  beforeClientExecutionrequestreturn executeWithdrawByoipCidrrequest
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_formatFlags);},public void serializeLittleEndianOutput out outwriteShortfield1formatFlags
"public CharBuffer put(int index, char c) {checkIndex(index);byteBuffer.putChar(index * SizeOf.CHAR, c);return this;}",public CharBuffer putint index char c checkIndexindexbyteBufferputCharindex  SizeOfCHAR creturn this
"public ICUTransformFilterFactory(Map<String,String> args) {super(args);String id = require(args, ""id"");String direction = get(args, ""direction"", Arrays.asList(""forward"", ""reverse""), ""forward"", false);int dir = ""forward"".equals(direction) ? Transliterator.FORWARD : Transliterator.REVERSE;transliterator = Transliterator.getInstance(id, dir);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public ICUTransformFilterFactoryMapStringString args superargsString id  requireargs idString direction  getargs direction ArraysasListforward reverse forward falseint dir  forwardequalsdirection  TransliteratorFORWARD  TransliteratorREVERSEtransliterator  TransliteratorgetInstanceid dirif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public UpdateFilterResult updateFilter(UpdateFilterRequest request) {request = beforeClientExecution(request);return executeUpdateFilter(request);},public UpdateFilterResult updateFilterUpdateFilterRequest request request  beforeClientExecutionrequestreturn executeUpdateFilterrequest
"public StoredField(String name, float value) {super(name, TYPE);fieldsData = value;}",public StoredFieldString name float value supername TYPEfieldsData  value
public final int compareTo(Term other) {if (field.equals(other.field)) {return bytes.compareTo(other.bytes);} else {return field.compareTo(other.field);}},public final int compareToTerm other if fieldequalsotherfield return bytescompareTootherbytes else return fieldcompareTootherfield
public ErrorHandler getErrorHandler () {return (theErrorHandler == this) ? null : theErrorHandler;},public ErrorHandler getErrorHandler  return theErrorHandler  this  null  theErrorHandler
public float getSaturation() {int numBitsSet = filter.cardinality();return (float) numBitsSet / (float) bloomSize;},public float getSaturation int numBitsSet  filtercardinalityreturn float numBitsSet  float bloomSize
public DeleteResolverEndpointResult deleteResolverEndpoint(DeleteResolverEndpointRequest request) {request = beforeClientExecution(request);return executeDeleteResolverEndpoint(request);},public DeleteResolverEndpointResult deleteResolverEndpointDeleteResolverEndpointRequest request request  beforeClientExecutionrequestreturn executeDeleteResolverEndpointrequest
public AssociateHostedConnectionResult associateHostedConnection(AssociateHostedConnectionRequest request) {request = beforeClientExecution(request);return executeAssociateHostedConnection(request);},public AssociateHostedConnectionResult associateHostedConnectionAssociateHostedConnectionRequest request request  beforeClientExecutionrequestreturn executeAssociateHostedConnectionrequest
public final String name() {return this.canonicalName;},public final String name return thiscanonicalName
"public static void registerFunction(String name, Function func){FunctionEval.registerFunction(name, func);}",public static void registerFunctionString name Function funcFunctionEvalregisterFunctionname func
"public GetRepoBuildStatusRequest() {super(""cr"", ""2016-06-07"", ""GetRepoBuildStatus"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/build/[BuildId]/status"");setMethod(MethodType.GET);}",public GetRepoBuildStatusRequest supercr 20160607 GetRepoBuildStatus crsetUriPatternreposRepoNamespaceRepoNamebuildBuildIdstatussetMethodMethodTypeGET
"public GetFramedPhotoUrlsRequest() {super(""CloudPhoto"", ""2017-07-11"", ""GetFramedPhotoUrls"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public GetFramedPhotoUrlsRequest superCloudPhoto 20170711 GetFramedPhotoUrls cloudphotosetProtocolProtocolTypeHTTPS
"public SimpleHTMLFormatter(String preTag, String postTag) {this.preTag = preTag;this.postTag = postTag;}",public SimpleHTMLFormatterString preTag String postTag thispreTag  preTagthispostTag  postTag
"public void setData(byte[] b, int start, int length){thedata = IOUtils.safelyAllocate(length, MAX_RECORD_LENGTH);System.arraycopy(b,start,thedata,0,length);}",public void setDatabyte b int start int lengththedata  IOUtilssafelyAllocatelength MAXRECORDLENGTHSystemarraycopybstartthedata0length
public String getKey() {return key;},public String getKey return key
"public AttachVolumeRequest(String volumeId, String instanceId, String device) {setVolumeId(volumeId);setInstanceId(instanceId);setDevice(device);}",public AttachVolumeRequestString volumeId String instanceId String device setVolumeIdvolumeIdsetInstanceIdinstanceIdsetDevicedevice
public long ramBytesUsed() {long size = BASE_RAM_BYTES_USED + RamUsageEstimator.shallowSizeOf(blocks);if (blocks.length > 0) {size += (blocks.length - 1) * bytesUsedPerBlock;size += RamUsageEstimator.sizeOf(blocks[blocks.length - 1]);}return size;},public long ramBytesUsed long size  BASERAMBYTESUSED  RamUsageEstimatorshallowSizeOfblocksif blockslength  0 size  blockslength  1  bytesUsedPerBlocksize  RamUsageEstimatorsizeOfblocksblockslength  1return size
@Override public Object[] toArray() {return Lists.newArrayList(iterator()).toArray();},Override public Object toArray return ListsnewArrayListiteratortoArray
"public RevWalk(Repository repo, int depth) {super(repo);this.depth = depth;this.deepenNots = Collections.emptyList();this.UNSHALLOW = newFlag(""UNSHALLOW""); this.REINTERESTING = newFlag(""REINTERESTING""); this.DEEPEN_NOT = newFlag(""DEEPEN_NOT""); }",public RevWalkRepository repo int depth superrepothisdepth  depththisdeepenNots  CollectionsemptyListthisUNSHALLOW  newFlagUNSHALLOW thisREINTERESTING  newFlagREINTERESTING thisDEEPENNOT  newFlagDEEPENNOT 
public boolean equals(Object o) {return this == o;},public boolean equalsObject o return this  o
public ChangeResourceRecordSetsResult changeResourceRecordSets(ChangeResourceRecordSetsRequest request) {request = beforeClientExecution(request);return executeChangeResourceRecordSets(request);},public ChangeResourceRecordSetsResult changeResourceRecordSetsChangeResourceRecordSetsRequest request request  beforeClientExecutionrequestreturn executeChangeResourceRecordSetsrequest
public Iterator<K> iterator() {return newKeyIterator();},public IteratorK iterator return newKeyIterator
@Override public boolean equals(Object o) {return o instanceof ReverseComparator2&& ((ReverseComparator2) o).cmp.equals(cmp);},Override public boolean equalsObject o return o instanceof ReverseComparator2 ReverseComparator2 ocmpequalscmp
public boolean isCheckEofAfterPackFooter() {return checkEofAfterPackFooter;},public boolean isCheckEofAfterPackFooter return checkEofAfterPackFooter
public DescribeDirectConnectGatewayAssociationProposalsResult describeDirectConnectGatewayAssociationProposals(DescribeDirectConnectGatewayAssociationProposalsRequest request) {request = beforeClientExecution(request);return executeDescribeDirectConnectGatewayAssociationProposals(request);},public DescribeDirectConnectGatewayAssociationProposalsResult describeDirectConnectGatewayAssociationProposalsDescribeDirectConnectGatewayAssociationProposalsRequest request request  beforeClientExecutionrequestreturn executeDescribeDirectConnectGatewayAssociationProposalsrequest
"public void reset(byte[] bytes, int offset, int len) {this.bytes = bytes;pos = offset;limit = offset + len;}",public void resetbyte bytes int offset int len thisbytes  bytespos  offsetlimit  offset  len
"public ByteBuffer putFloat(int index, float value) {throw new ReadOnlyBufferException();}",public ByteBuffer putFloatint index float value throw new ReadOnlyBufferException
public boolean equals(Object obj) {if (obj == null)return false;if (! getClass().equals(obj.getClass()))return false;return toString().equals(obj.toString());},public boolean equalsObject obj if obj  nullreturn falseif  getClassequalsobjgetClassreturn falsereturn toStringequalsobjtoString
public PutSchemaFromJsonResult putSchemaFromJson(PutSchemaFromJsonRequest request) {request = beforeClientExecution(request);return executePutSchemaFromJson(request);},public PutSchemaFromJsonResult putSchemaFromJsonPutSchemaFromJsonRequest request request  beforeClientExecutionrequestreturn executePutSchemaFromJsonrequest
public UnassignPrivateIpAddressesResult unassignPrivateIpAddresses(UnassignPrivateIpAddressesRequest request) {request = beforeClientExecution(request);return executeUnassignPrivateIpAddresses(request);},public UnassignPrivateIpAddressesResult unassignPrivateIpAddressesUnassignPrivateIpAddressesRequest request request  beforeClientExecutionrequestreturn executeUnassignPrivateIpAddressesrequest
"public ArrayPtg finishReading(LittleEndianInput in) {int nColumns = in.readUByte();short nRows = in.readShort();nColumns++;nRows++;int totalCount = nRows * nColumns;Object[] arrayValues = ConstantValueParser.parse(in, totalCount);ArrayPtg result = new ArrayPtg(_reserved0, _reserved1, _reserved2, nColumns, nRows, arrayValues);result.setClass(getPtgClass());return result;}",public ArrayPtg finishReadingLittleEndianInput in int nColumns  inreadUByteshort nRows  inreadShortnColumnsnRowsint totalCount  nRows  nColumnsObject arrayValues  ConstantValueParserparsein totalCountArrayPtg result  new ArrayPtgreserved0 reserved1 reserved2 nColumns nRows arrayValuesresultsetClassgetPtgClassreturn result
"public NativeUnixDirectory(Path path, Directory delegate) throws IOException {this(path, DEFAULT_MERGE_BUFFER_SIZE, DEFAULT_MIN_BYTES_DIRECT, FSLockFactory.getDefault(), delegate);}",public NativeUnixDirectoryPath path Directory delegate throws IOException thispath DEFAULTMERGEBUFFERSIZE DEFAULTMINBYTESDIRECT FSLockFactorygetDefault delegate
public CreateRestApiResult createRestApi(CreateRestApiRequest request) {request = beforeClientExecution(request);return executeCreateRestApi(request);},public CreateRestApiResult createRestApiCreateRestApiRequest request request  beforeClientExecutionrequestreturn executeCreateRestApirequest
"public ValueEval getRef3DEval(Ref3DPtg rptg) {SheetRangeEvaluator sre = createExternSheetRefEvaluator(rptg.getExternSheetIndex());return new LazyRefEval(rptg.getRow(), rptg.getColumn(), sre);}",public ValueEval getRef3DEvalRef3DPtg rptg SheetRangeEvaluator sre  createExternSheetRefEvaluatorrptggetExternSheetIndexreturn new LazyRefEvalrptggetRow rptggetColumn sre
public void add(FieldInfos other) {assert assertNotFinished();for(FieldInfo fieldInfo : other){add(fieldInfo);}},public void addFieldInfos other assert assertNotFinishedforFieldInfo fieldInfo  otheraddfieldInfo
public static CloseGuard get() {if (!ENABLED) {return NOOP;}return new CloseGuard();},public static CloseGuard get if ENABLED return NOOPreturn new CloseGuard
public void print(long lnum) {print(String.valueOf(lnum));},public void printlong lnum printStringvalueOflnum
"public static String fileNameFromGeneration(String base, String ext, long gen) {if (gen == -1) {return null;} else if (gen == 0) {return segmentFileName(base, """", ext);} else {assert gen > 0;StringBuilder res = new StringBuilder(base.length() + 6 + ext.length()).append(base).append('_').append(Long.toString(gen, Character.MAX_RADIX));if (ext.length() > 0) {res.append('.').append(ext);}return res.toString();}}",public static String fileNameFromGenerationString base String ext long gen if gen  1 return null else if gen  0 return segmentFileNamebase  ext else assert gen  0StringBuilder res  new StringBuilderbaselength  6  extlengthappendbaseappendappendLongtoStringgen CharacterMAXRADIXif extlength  0 resappendappendextreturn restoString
public String getText() { return symbol.getText(); },public String getText  return symbolgetText 
public long getSize() {return delegate().getSize();},public long getSize return delegategetSize
public FileMode getNewMode() {return newMode;},public FileMode getNewMode return newMode
public boolean isOpaque() {return opaque;},public boolean isOpaque return opaque
public boolean requireEnd() {return requireEndImpl(address);},public boolean requireEnd return requireEndImpladdress
"public static InternalWorkbook createStubWorkbook(ExternSheetRecord[] externs,BoundSheetRecord[] bounds, SSTRecord sst) {List<org.apache.poi.hssf.record.Record> wbRecords = new ArrayList<>();if(bounds != null) {Collections.addAll(wbRecords, bounds);}if(sst != null) {wbRecords.add(sst);}if(externs != null) {wbRecords.add(SupBookRecord.createInternalReferences((short)externs.length));Collections.addAll(wbRecords, externs);}wbRecords.add(EOFRecord.instance);return InternalWorkbook.createWorkbook(wbRecords);}",public static InternalWorkbook createStubWorkbookExternSheetRecord externsBoundSheetRecord bounds SSTRecord sst ListorgapachepoihssfrecordRecord wbRecords  new ArrayListifbounds  null CollectionsaddAllwbRecords boundsifsst  null wbRecordsaddsstifexterns  null wbRecordsaddSupBookRecordcreateInternalReferencesshortexternslengthCollectionsaddAllwbRecords externswbRecordsaddEOFRecordinstancereturn InternalWorkbookcreateWorkbookwbRecords
public String getName() {return null;},public String getName return null
public UpdateNotebookInstanceLifecycleConfigResult updateNotebookInstanceLifecycleConfig(UpdateNotebookInstanceLifecycleConfigRequest request) {request = beforeClientExecution(request);return executeUpdateNotebookInstanceLifecycleConfig(request);},public UpdateNotebookInstanceLifecycleConfigResult updateNotebookInstanceLifecycleConfigUpdateNotebookInstanceLifecycleConfigRequest request request  beforeClientExecutionrequestreturn executeUpdateNotebookInstanceLifecycleConfigrequest
public void visitContainedRecords(RecordVisitor rv) {rv.visitRecord(_pls);for (ContinueRecord _plsContinue : _plsContinues) {rv.visitRecord(_plsContinue);}},public void visitContainedRecordsRecordVisitor rv rvvisitRecordplsfor ContinueRecord plsContinue  plsContinues rvvisitRecordplsContinue
public static BoolEval valueOf(boolean b) {return b ? TRUE : FALSE;},public static BoolEval valueOfboolean b return b  TRUE  FALSE
"public EvaluationName getName(String name, int sheetIndex) {for(int i=0; i < _iBook.getNumNames(); i++) {NameRecord nr = _iBook.getNameRecord(i);if (nr.getSheetNumber() == sheetIndex+1 && name.equalsIgnoreCase(nr.getNameText())) {return new Name(nr, i);}}return sheetIndex == -1 ? null : getName(name, -1);}",public EvaluationName getNameString name int sheetIndex forint i0 i  iBookgetNumNames i NameRecord nr  iBookgetNameRecordiif nrgetSheetNumber  sheetIndex1  nameequalsIgnoreCasenrgetNameText return new Namenr ireturn sheetIndex  1  null  getNamename 1
"public String getPIDString(final long pid) {Map<Long,String> dic = getDictionary();if (dic == null || !dic.containsKey(pid)) {ClassID fmt = getFormatID();if (SummaryInformation.FORMAT_ID.equals(fmt)) {dic = PropertyIDMap.getSummaryInformationProperties();} else if (DocumentSummaryInformation.FORMAT_ID[0].equals(fmt)) {dic = PropertyIDMap.getDocumentSummaryInformationProperties();}}return (dic != null && dic.containsKey(pid)) ? dic.get(pid) : PropertyIDMap.UNDEFINED;}",public String getPIDStringfinal long pid MapLongString dic  getDictionaryif dic  null  diccontainsKeypid ClassID fmt  getFormatIDif SummaryInformationFORMATIDequalsfmt dic  PropertyIDMapgetSummaryInformationProperties else if DocumentSummaryInformationFORMATID0equalsfmt dic  PropertyIDMapgetDocumentSummaryInformationPropertiesreturn dic  null  diccontainsKeypid  dicgetpid  PropertyIDMapUNDEFINED
public BatchCreateRoomMembershipResult batchCreateRoomMembership(BatchCreateRoomMembershipRequest request) {request = beforeClientExecution(request);return executeBatchCreateRoomMembership(request);},public BatchCreateRoomMembershipResult batchCreateRoomMembershipBatchCreateRoomMembershipRequest request request  beforeClientExecutionrequestreturn executeBatchCreateRoomMembershiprequest
public V getValue() {return value;},public V getValue return value
public DeleteQueueResult deleteQueue(DeleteQueueRequest request) {request = beforeClientExecution(request);return executeDeleteQueue(request);},public DeleteQueueResult deleteQueueDeleteQueueRequest request request  beforeClientExecutionrequestreturn executeDeleteQueuerequest
public Builder() {this.field = null;this.termArrays = new ArrayList<>();this.positions = new ArrayList<>();this.slop = 0;},public Builder thisfield  nullthistermArrays  new ArrayListthispositions  new ArrayListthisslop  0
public BatchRefUpdate addCommand(ReceiveCommand cmd) {commands.add(cmd);return this;},public BatchRefUpdate addCommandReceiveCommand cmd commandsaddcmdreturn this
public DetachLoadBalancerTargetGroupsResult detachLoadBalancerTargetGroups(DetachLoadBalancerTargetGroupsRequest request) {request = beforeClientExecution(request);return executeDetachLoadBalancerTargetGroups(request);},public DetachLoadBalancerTargetGroupsResult detachLoadBalancerTargetGroupsDetachLoadBalancerTargetGroupsRequest request request  beforeClientExecutionrequestreturn executeDetachLoadBalancerTargetGroupsrequest
public FrameRecord(RecordInputStream in) {field_1_borderType = in.readShort();field_2_options = in.readShort();},public FrameRecordRecordInputStream in field1borderType  inreadShortfield2options  inreadShort
"public final Explanation explain(BasicStats stats) {return Explanation.match(lambda(stats),getClass().getSimpleName()+ "", computed as (F + 1) / (N + 1) from:"",Explanation.match(stats.getTotalTermFreq(),""F, total number of occurrences of term across all documents""),Explanation.match(stats.getNumberOfDocuments(),""N, total number of documents with field""));}",public final Explanation explainBasicStats stats return ExplanationmatchlambdastatsgetClassgetSimpleName  computed as F  1  N  1 fromExplanationmatchstatsgetTotalTermFreqF total number of occurrences of term across all documentsExplanationmatchstatsgetNumberOfDocumentsN total number of documents with field
public boolean matches(ValueEval x) {if(x instanceof ErrorEval) {int testValue = ((ErrorEval)x).getErrorCode();return evaluate(testValue - _value);}return false;},public boolean matchesValueEval x ifx instanceof ErrorEval int testValue  ErrorEvalxgetErrorCodereturn evaluatetestValue  valuereturn false
public S3Signer() {this.httpVerb = null;this.resourcePath = null;this.additionalQueryParamsToSign = null;},public S3Signer thishttpVerb  nullthisresourcePath  nullthisadditionalQueryParamsToSign  null
public RejectDomainTransferFromAnotherAwsAccountResult rejectDomainTransferFromAnotherAwsAccount(RejectDomainTransferFromAnotherAwsAccountRequest request) {request = beforeClientExecution(request);return executeRejectDomainTransferFromAnotherAwsAccount(request);},public RejectDomainTransferFromAnotherAwsAccountResult rejectDomainTransferFromAnotherAwsAccountRejectDomainTransferFromAnotherAwsAccountRequest request request  beforeClientExecutionrequestreturn executeRejectDomainTransferFromAnotherAwsAccountrequest
"public String toString() {return ""[STRING]\n"" +""    .string            = "" + _text + ""\n"" +""[/STRING]\n"";}",public String toString return STRINGn     string               text  n STRINGn
public GetIdentityNotificationAttributesResult getIdentityNotificationAttributes(GetIdentityNotificationAttributesRequest request) {request = beforeClientExecution(request);return executeGetIdentityNotificationAttributes(request);},public GetIdentityNotificationAttributesResult getIdentityNotificationAttributesGetIdentityNotificationAttributesRequest request request  beforeClientExecutionrequestreturn executeGetIdentityNotificationAttributesrequest
"public DoubleBuffer slice() {return new ReadOnlyDoubleArrayBuffer(remaining(), backingArray, offset + position);}",public DoubleBuffer slice return new ReadOnlyDoubleArrayBufferremaining backingArray offset  position
"public void append(int key, E value) {if (mSize != 0 && key <= mKeys[mSize - 1]) {put(key, value);return;}if (mGarbage && mSize >= mKeys.length) {gc();}int pos = mSize;if (pos >= mKeys.length) {int n = ArrayUtils.idealIntArraySize(pos + 1);int[] nkeys = new int[n];Object[] nvalues = new Object[n];System.arraycopy(mKeys, 0, nkeys, 0, mKeys.length);System.arraycopy(mValues, 0, nvalues, 0, mValues.length);mKeys = nkeys;mValues = nvalues;}mKeys[pos] = key;mValues[pos] = value;mSize = pos + 1;}",public void appendint key E value if mSize  0  key  mKeysmSize  1 putkey valuereturnif mGarbage  mSize  mKeyslength gcint pos  mSizeif pos  mKeyslength int n  ArrayUtilsidealIntArraySizepos  1int nkeys  new intnObject nvalues  new ObjectnSystemarraycopymKeys 0 nkeys 0 mKeyslengthSystemarraycopymValues 0 nvalues 0 mValueslengthmKeys  nkeysmValues  nvaluesmKeyspos  keymValuespos  valuemSize  pos  1
"public String toString() {return ""INDEX_DIFF_FILTER""; }",public String toString return INDEXDIFFFILTER 
public long ramBytesUsed() {return docs.ramBytesUsed()+ RamUsageEstimator.NUM_BYTES_OBJECT_HEADER+ 2 * Integer.BYTES+ 2 + Long.BYTES+ RamUsageEstimator.NUM_BYTES_OBJECT_REF;},public long ramBytesUsed return docsramBytesUsed RamUsageEstimatorNUMBYTESOBJECTHEADER 2  IntegerBYTES 2  LongBYTES RamUsageEstimatorNUMBYTESOBJECTREF
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append( ""[LeftMargin]\n"" );buffer.append( ""    .margin               = "" ).append( "" ("" ).append( getMargin() ).append( "" )\n"" );buffer.append( ""[/LeftMargin]\n"" );return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappend LeftMarginn bufferappend     margin                 append   append getMargin append  n bufferappend LeftMarginn return buffertoString
"public FreeTextSuggester(Analyzer indexAnalyzer, Analyzer queryAnalyzer, int grams, byte separator) {this.grams = grams;this.indexAnalyzer = addShingles(indexAnalyzer);this.queryAnalyzer = addShingles(queryAnalyzer);if (grams < 1) {throw new IllegalArgumentException(""grams must be >= 1"");}if ((separator & 0x80) != 0) {throw new IllegalArgumentException(""separator must be simple ascii character"");}this.separator = separator;}",public FreeTextSuggesterAnalyzer indexAnalyzer Analyzer queryAnalyzer int grams byte separator thisgrams  gramsthisindexAnalyzer  addShinglesindexAnalyzerthisqueryAnalyzer  addShinglesqueryAnalyzerif grams  1 throw new IllegalArgumentExceptiongrams must be  1if separator  0x80  0 throw new IllegalArgumentExceptionseparator must be simple ascii characterthisseparator  separator
public CJKWidthFilter(TokenStream input) {super(input);},public CJKWidthFilterTokenStream input superinput
public ModifyVpnTunnelOptionsResult modifyVpnTunnelOptions(ModifyVpnTunnelOptionsRequest request) {request = beforeClientExecution(request);return executeModifyVpnTunnelOptions(request);},public ModifyVpnTunnelOptionsResult modifyVpnTunnelOptionsModifyVpnTunnelOptionsRequest request request  beforeClientExecutionrequestreturn executeModifyVpnTunnelOptionsrequest
"public int nextDoc() {while (true) {if (queue.size() == 0) {doc = NO_MORE_DOCS;break;}int newDoc = queue.top().docID();if (newDoc != doc) {assert newDoc > doc: ""doc="" + doc + "" newDoc="" + newDoc;doc = newDoc;break;}if (queue.top().nextDoc() == NO_MORE_DOCS) {queue.pop();} else {queue.updateTop();}}return doc;}",public int nextDoc while true if queuesize  0 doc  NOMOREDOCSbreakint newDoc  queuetopdocIDif newDoc  doc assert newDoc  doc doc  doc   newDoc  newDocdoc  newDocbreakif queuetopnextDoc  NOMOREDOCS queuepop else queueupdateTopreturn doc
public GetTransitGatewayRouteTableAssociationsResult getTransitGatewayRouteTableAssociations(GetTransitGatewayRouteTableAssociationsRequest request) {request = beforeClientExecution(request);return executeGetTransitGatewayRouteTableAssociations(request);},public GetTransitGatewayRouteTableAssociationsResult getTransitGatewayRouteTableAssociationsGetTransitGatewayRouteTableAssociationsRequest request request  beforeClientExecutionrequestreturn executeGetTransitGatewayRouteTableAssociationsrequest
public DescribeLoggingStatusResult describeLoggingStatus(DescribeLoggingStatusRequest request) {request = beforeClientExecution(request);return executeDescribeLoggingStatus(request);},public DescribeLoggingStatusResult describeLoggingStatusDescribeLoggingStatusRequest request request  beforeClientExecutionrequestreturn executeDescribeLoggingStatusrequest
"public PorterStemFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public PorterStemFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public Storage getStorage() {return storage;},public Storage getStorage return storage
"public static CharBuffer wrap(char[] array) {return wrap(array, 0, array.length);}",public static CharBuffer wrapchar array return wraparray 0 arraylength
public CreateVoiceConnectorResult createVoiceConnector(CreateVoiceConnectorRequest request) {request = beforeClientExecution(request);return executeCreateVoiceConnector(request);},public CreateVoiceConnectorResult createVoiceConnectorCreateVoiceConnectorRequest request request  beforeClientExecutionrequestreturn executeCreateVoiceConnectorrequest
"public ParseException generateParseException() {jj_expentries.clear();boolean[] la1tokens = new boolean[24];if (jj_kind >= 0) {la1tokens[jj_kind] = true;jj_kind = -1;}for (int i = 0; i < 10; i++) {if (jj_la1[i] == jj_gen) {for (int j = 0; j < 32; j++) {if ((jj_la1_0[i] & (1<<j)) != 0) {la1tokens[j] = true;}}}}for (int i = 0; i < 24; i++) {if (la1tokens[i]) {jj_expentry = new int[1];jj_expentry[0] = i;jj_expentries.add(jj_expentry);}}jj_endpos = 0;jj_rescan_token();jj_add_error_token(0, 0);int[][] exptokseq = new int[jj_expentries.size()][];for (int i = 0; i < jj_expentries.size(); i++) {exptokseq[i] = jj_expentries.get(i);}return new ParseException(token, exptokseq, tokenImage);}",public ParseException generateParseException jjexpentriesclearboolean la1tokens  new boolean24if jjkind  0 la1tokensjjkind  truejjkind  1for int i  0 i  10 i if jjla1i  jjgen for int j  0 j  32 j if jjla10i  1j  0 la1tokensj  truefor int i  0 i  24 i if la1tokensi jjexpentry  new int1jjexpentry0  ijjexpentriesaddjjexpentryjjendpos  0jjrescantokenjjadderrortoken0 0int exptokseq  new intjjexpentriessizefor int i  0 i  jjexpentriessize i exptokseqi  jjexpentriesgetireturn new ParseExceptiontoken exptokseq tokenImage
"public void setSheetOrder(String sheetname, int pos ) {int sheetNumber = getSheetIndex(sheetname);boundsheets.add(pos, boundsheets.remove(sheetNumber));int initialBspos = records.getBspos();int pos0 = initialBspos - (boundsheets.size() - 1);org.apache.poi.hssf.record.Record removed = records.get(pos0 + sheetNumber);records.remove(pos0 + sheetNumber);records.add(pos0 + pos, removed);records.setBspos(initialBspos);}",public void setSheetOrderString sheetname int pos  int sheetNumber  getSheetIndexsheetnameboundsheetsaddpos boundsheetsremovesheetNumberint initialBspos  recordsgetBsposint pos0  initialBspos  boundsheetssize  1orgapachepoihssfrecordRecord removed  recordsgetpos0  sheetNumberrecordsremovepos0  sheetNumberrecordsaddpos0  pos removedrecordssetBsposinitialBspos
"public UpdateRepoBuildRuleRequest() {super(""cr"", ""2016-06-07"", ""UpdateRepoBuildRule"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/rules/[BuildRuleId]"");setMethod(MethodType.POST);}",public UpdateRepoBuildRuleRequest supercr 20160607 UpdateRepoBuildRule crsetUriPatternreposRepoNamespaceRepoNamerulesBuildRuleIdsetMethodMethodTypePOST
public boolean contains(Object o) {return map.containsKey(o);},public boolean containsObject o return mapcontainsKeyo
public DescribeAutoScalingInstancesResult describeAutoScalingInstances() {return describeAutoScalingInstances(new DescribeAutoScalingInstancesRequest());},public DescribeAutoScalingInstancesResult describeAutoScalingInstances return describeAutoScalingInstancesnew DescribeAutoScalingInstancesRequest
public NLPTokenizerOp() {tokenizer = null;},public NLPTokenizerOp tokenizer  null
public int size() {synchronized (mutex) {return delegate().size();}},public int size synchronized mutex return delegatesize
public boolean retainAll(final IntList c){boolean rval = false;for (int j = 0; j < _limit; ){if (!c.contains(_array[ j ])){remove(j);rval = true;}else{j++;}}return rval;},public boolean retainAllfinal IntList cboolean rval  falsefor int j  0 j  limit if ccontainsarray j removejrval  trueelsejreturn rval
public String getPath() {return path.getPath();},public String getPath return pathgetPath
public UpdateSecurityGroupRuleDescriptionsEgressResult updateSecurityGroupRuleDescriptionsEgress(UpdateSecurityGroupRuleDescriptionsEgressRequest request) {request = beforeClientExecution(request);return executeUpdateSecurityGroupRuleDescriptionsEgress(request);},public UpdateSecurityGroupRuleDescriptionsEgressResult updateSecurityGroupRuleDescriptionsEgressUpdateSecurityGroupRuleDescriptionsEgressRequest request request  beforeClientExecutionrequestreturn executeUpdateSecurityGroupRuleDescriptionsEgressrequest
public SetVaultAccessPolicyResult setVaultAccessPolicy(SetVaultAccessPolicyRequest request) {request = beforeClientExecution(request);return executeSetVaultAccessPolicy(request);},public SetVaultAccessPolicyResult setVaultAccessPolicySetVaultAccessPolicyRequest request request  beforeClientExecutionrequestreturn executeSetVaultAccessPolicyrequest
public PutAutoScalingPolicyResult putAutoScalingPolicy(PutAutoScalingPolicyRequest request) {request = beforeClientExecution(request);return executePutAutoScalingPolicy(request);},public PutAutoScalingPolicyResult putAutoScalingPolicyPutAutoScalingPolicyRequest request request  beforeClientExecutionrequestreturn executePutAutoScalingPolicyrequest
public CancelReservedInstancesListingResult cancelReservedInstancesListing(CancelReservedInstancesListingRequest request) {request = beforeClientExecution(request);return executeCancelReservedInstancesListing(request);},public CancelReservedInstancesListingResult cancelReservedInstancesListingCancelReservedInstancesListingRequest request request  beforeClientExecutionrequestreturn executeCancelReservedInstancesListingrequest
public String getSignerName() {return null;},public String getSignerName return null
public ListTagsForDeliveryStreamResult listTagsForDeliveryStream(ListTagsForDeliveryStreamRequest request) {request = beforeClientExecution(request);return executeListTagsForDeliveryStream(request);},public ListTagsForDeliveryStreamResult listTagsForDeliveryStreamListTagsForDeliveryStreamRequest request request  beforeClientExecutionrequestreturn executeListTagsForDeliveryStreamrequest
public RegisterDomainResult registerDomain(RegisterDomainRequest request) {request = beforeClientExecution(request);return executeRegisterDomain(request);},public RegisterDomainResult registerDomainRegisterDomainRequest request request  beforeClientExecutionrequestreturn executeRegisterDomainrequest
public ListEntityRecognizersResult listEntityRecognizers(ListEntityRecognizersRequest request) {request = beforeClientExecution(request);return executeListEntityRecognizers(request);},public ListEntityRecognizersResult listEntityRecognizersListEntityRecognizersRequest request request  beforeClientExecutionrequestreturn executeListEntityRecognizersrequest
"public void setTimeout(int millis) {if (millis < 0)throw new IllegalArgumentException(MessageFormat.format(JGitText.get().invalidTimeout, Integer.valueOf(millis)));timeout = millis;}",public void setTimeoutint millis if millis  0throw new IllegalArgumentExceptionMessageFormatformatJGitTextgetinvalidTimeout IntegervalueOfmillistimeout  millis
"public GetRepoSourceRepoRequest() {super(""cr"", ""2016-06-07"", ""GetRepoSourceRepo"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/sourceRepo"");setMethod(MethodType.GET);}",public GetRepoSourceRepoRequest supercr 20160607 GetRepoSourceRepo crsetUriPatternreposRepoNamespaceRepoNamesourceReposetMethodMethodTypeGET
public DescribeBatchInferenceJobResult describeBatchInferenceJob(DescribeBatchInferenceJobRequest request) {request = beforeClientExecution(request);return executeDescribeBatchInferenceJob(request);},public DescribeBatchInferenceJobResult describeBatchInferenceJobDescribeBatchInferenceJobRequest request request  beforeClientExecutionrequestreturn executeDescribeBatchInferenceJobrequest
"public CreateSecurityGroupRequest(String groupName, String description) {setGroupName(groupName);setDescription(description);}",public CreateSecurityGroupRequestString groupName String description setGroupNamegroupNamesetDescriptiondescription
"public final int serialize(int offset, byte[] data) {SerializingRecordVisitor srv = new SerializingRecordVisitor(data, offset);visitContainedRecords(srv);return srv.countBytesWritten();}",public final int serializeint offset byte data SerializingRecordVisitor srv  new SerializingRecordVisitordata offsetvisitContainedRecordssrvreturn srvcountBytesWritten
public BatchGetImageResult batchGetImage(BatchGetImageRequest request) {request = beforeClientExecution(request);return executeBatchGetImage(request);},public BatchGetImageResult batchGetImageBatchGetImageRequest request request  beforeClientExecutionrequestreturn executeBatchGetImagerequest
public int read() throws IOException {try {beginRead();return super.read();} catch (InterruptedIOException e) {throw readTimedOut(e);} finally {endRead();}},public int read throws IOException try beginReadreturn superread catch InterruptedIOException e throw readTimedOute finally endRead
public ActivityTask pollForActivityTask(PollForActivityTaskRequest request) {request = beforeClientExecution(request);return executePollForActivityTask(request);},public ActivityTask pollForActivityTaskPollForActivityTaskRequest request request  beforeClientExecutionrequestreturn executePollForActivityTaskrequest
public int execute(StringBuilder buf) {if ( text!=null ) {buf.append(text);}return lastIndex+1;},public int executeStringBuilder buf if  textnull  bufappendtextreturn lastIndex1
public float overheadPerValue(int bitsPerValue) {assert isSupported(bitsPerValue);return 0f;},public float overheadPerValueint bitsPerValue assert isSupportedbitsPerValuereturn 0f
public String toString() {return buf.toString();},public String toString return buftoString
public PrecedenceQueryParser(Analyzer analyer) {super(analyer);setQueryNodeProcessor(new PrecedenceQueryNodeProcessorPipeline(getQueryConfigHandler()));},public PrecedenceQueryParserAnalyzer analyer superanalyersetQueryNodeProcessornew PrecedenceQueryNodeProcessorPipelinegetQueryConfigHandler
public final int position() {return position;},public final int position return position
public boolean equals(Object o) {return this.getClass() == o.getClass();},public boolean equalsObject o return thisgetClass  ogetClass
public IntBuffer compact() {throw new ReadOnlyBufferException();},public IntBuffer compact throw new ReadOnlyBufferException
public void writeByte(int v) {writeContinueIfRequired(1);_ulrOutput.writeByte(v);},public void writeByteint v writeContinueIfRequired1ulrOutputwriteBytev
public ExpireSessionResult expireSession(ExpireSessionRequest request) {request = beforeClientExecution(request);return executeExpireSession(request);},public ExpireSessionResult expireSessionExpireSessionRequest request request  beforeClientExecutionrequestreturn executeExpireSessionrequest
public GetSubscriptionAttributesRequest(String subscriptionArn) {setSubscriptionArn(subscriptionArn);},public GetSubscriptionAttributesRequestString subscriptionArn setSubscriptionArnsubscriptionArn
public GetMetricDataResult getMetricData(GetMetricDataRequest request) {request = beforeClientExecution(request);return executeGetMetricData(request);},public GetMetricDataResult getMetricDataGetMetricDataRequest request request  beforeClientExecutionrequestreturn executeGetMetricDatarequest
public DescribeDhcpOptionsResult describeDhcpOptions(DescribeDhcpOptionsRequest request) {request = beforeClientExecution(request);return executeDescribeDhcpOptions(request);},public DescribeDhcpOptionsResult describeDhcpOptionsDescribeDhcpOptionsRequest request request  beforeClientExecutionrequestreturn executeDescribeDhcpOptionsrequest
"public NavigableSet<E> subSet(E start, boolean startInclusive, E end,boolean endInclusive) {Comparator<? super E> c = backingMap.comparator();int compare = (c == null) ? ((Comparable<E>) start).compareTo(end) : c.compare(start, end);if (compare <= 0) {return new TreeSet<E>(backingMap.subMap(start, startInclusive, end,endInclusive));}throw new IllegalArgumentException();}",public NavigableSetE subSetE start boolean startInclusive E endboolean endInclusive Comparator super E c  backingMapcomparatorint compare  c  null  ComparableE startcompareToend  ccomparestart endif compare  0 return new TreeSetEbackingMapsubMapstart startInclusive endendInclusivethrow new IllegalArgumentException
public SendEmailResult sendEmail(SendEmailRequest request) {request = beforeClientExecution(request);return executeSendEmail(request);},public SendEmailResult sendEmailSendEmailRequest request request  beforeClientExecutionrequestreturn executeSendEmailrequest
public String toString(){return String.valueOf(_value);},public String toStringreturn StringvalueOfvalue
"public static double getExcelDate(LocalDate date) {return getExcelDate(date, false);}",public static double getExcelDateLocalDate date return getExcelDatedate false
public boolean equals( Object o ) {return o instanceof ItalianStemmer;},public boolean equals Object o  return o instanceof ItalianStemmer
"public ListenerHandle addIndexChangedListener(IndexChangedListener listener) {return addListener(IndexChangedListener.class, listener);}",public ListenerHandle addIndexChangedListenerIndexChangedListener listener return addListenerIndexChangedListenerclass listener
public SynthesizeSpeechResult synthesizeSpeech(SynthesizeSpeechRequest request) {request = beforeClientExecution(request);return executeSynthesizeSpeech(request);},public SynthesizeSpeechResult synthesizeSpeechSynthesizeSpeechRequest request request  beforeClientExecutionrequestreturn executeSynthesizeSpeechrequest
"public void merge(TextFragment frag2){textEndPos = frag2.textEndPos;score=Math.max(score,frag2.score);}",public void mergeTextFragment frag2textEndPos  frag2textEndPosscoreMathmaxscorefrag2score
public CreateLedgerResult createLedger(CreateLedgerRequest request) {request = beforeClientExecution(request);return executeCreateLedger(request);},public CreateLedgerResult createLedgerCreateLedgerRequest request request  beforeClientExecutionrequestreturn executeCreateLedgerrequest
public DescribeFleetPortSettingsResult describeFleetPortSettings(DescribeFleetPortSettingsRequest request) {request = beforeClientExecution(request);return executeDescribeFleetPortSettings(request);},public DescribeFleetPortSettingsResult describeFleetPortSettingsDescribeFleetPortSettingsRequest request request  beforeClientExecutionrequestreturn executeDescribeFleetPortSettingsrequest
public String getHost() {return host;},public String getHost return host
public short get() {if (position == limit) {throw new BufferUnderflowException();}return byteBuffer.getShort(position++ * SizeOf.SHORT);},public short get if position  limit throw new BufferUnderflowExceptionreturn byteBuffergetShortposition  SizeOfSHORT
public void ReInit(CharStream stream){jjmatchedPos = jjnewStateCnt = 0;curLexState = defaultLexState;input_stream = stream;ReInitRounds();},public void ReInitCharStream streamjjmatchedPos  jjnewStateCnt  0curLexState  defaultLexStateinputstream  streamReInitRounds
"public void set(int index, long value) {final int o = index / 12;final int b = index % 12;final int shift = b * 5;blocks[o] = (blocks[o] & ~(31L << shift)) | (value << shift);}",public void setint index long value final int o  index  12final int b  index  12final int shift  b  5blockso  blockso  31L  shift  value  shift
public ByteSequencesWriter(IndexOutput out) {this.out = out;},public ByteSequencesWriterIndexOutput out thisout  out
"public MultiTermsEnum(ReaderSlice[] slices) {queue = new TermMergeQueue(slices.length);top = new TermsEnumWithSlice[slices.length];subs = new TermsEnumWithSlice[slices.length];subDocs = new MultiPostingsEnum.EnumWithSlice[slices.length];for(int i=0;i<slices.length;i++) {subs[i] = new TermsEnumWithSlice(i, slices[i]);subDocs[i] = new MultiPostingsEnum.EnumWithSlice();subDocs[i].slice = slices[i];}currentSubs = new TermsEnumWithSlice[slices.length];}",public MultiTermsEnumReaderSlice slices queue  new TermMergeQueuesliceslengthtop  new TermsEnumWithSlicesliceslengthsubs  new TermsEnumWithSlicesliceslengthsubDocs  new MultiPostingsEnumEnumWithSlicesliceslengthforint i0isliceslengthi subsi  new TermsEnumWithSlicei slicesisubDocsi  new MultiPostingsEnumEnumWithSlicesubDocsislice  slicesicurrentSubs  new TermsEnumWithSlicesliceslength
public char last() {if (start == end) {return DONE;}offset = end - 1;return string.charAt(offset);},public char last if start  end return DONEoffset  end  1return stringcharAtoffset
"public AttributeSource(AttributeFactory factory) {this.attributes = new LinkedHashMap<>();this.attributeImpls = new LinkedHashMap<>();this.currentState = new State[1];this.factory = Objects.requireNonNull(factory, ""AttributeFactory must not be null"");}",public AttributeSourceAttributeFactory factory thisattributes  new LinkedHashMapthisattributeImpls  new LinkedHashMapthiscurrentState  new State1thisfactory  ObjectsrequireNonNullfactory AttributeFactory must not be null
"public Matcher reset(CharSequence input) {return reset(input, 0, input.length());}",public Matcher resetCharSequence input return resetinput 0 inputlength
public GetConfigurationProfileResult getConfigurationProfile(GetConfigurationProfileRequest request) {request = beforeClientExecution(request);return executeGetConfigurationProfile(request);},public GetConfigurationProfileResult getConfigurationProfileGetConfigurationProfileRequest request request  beforeClientExecutionrequestreturn executeGetConfigurationProfilerequest
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex) {return new NumberEval(srcColumnIndex+1);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex return new NumberEvalsrcColumnIndex1
"public static double[] grow(double[] array, int minSize) {assert minSize >= 0: ""size must be positive (got "" + minSize + ""): likely integer overflow?"";if (array.length < minSize) {return growExact(array, oversize(minSize, Double.BYTES));} else return array;}",public static double growdouble array int minSize assert minSize  0 size must be positive got   minSize   likely integer overflowif arraylength  minSize return growExactarray oversizeminSize DoubleBYTES else return array
public DescribeVpcPeeringConnectionsResult describeVpcPeeringConnections(DescribeVpcPeeringConnectionsRequest request) {request = beforeClientExecution(request);return executeDescribeVpcPeeringConnections(request);},public DescribeVpcPeeringConnectionsResult describeVpcPeeringConnectionsDescribeVpcPeeringConnectionsRequest request request  beforeClientExecutionrequestreturn executeDescribeVpcPeeringConnectionsrequest
public FloatBuffer put(float c) {throw new ReadOnlyBufferException();},public FloatBuffer putfloat c throw new ReadOnlyBufferException
"public int sumTokenSizes(int fromIx, int toIx) {int result = 0;for (int i=fromIx; i<toIx; i++) {result += _ptgs[i].getSize();}return result;}",public int sumTokenSizesint fromIx int toIx int result  0for int ifromIx itoIx i result  ptgsigetSizereturn result
"public DirectBytesStartArray(int initSize, Counter counter) {this.bytesUsed = counter;this.initSize = initSize;}",public DirectBytesStartArrayint initSize Counter counter thisbytesUsed  counterthisinitSize  initSize
"public void clear() {for (T[] block : directory) {if (block != null)Arrays.fill(block, null);}size = 0;tailDirIdx = 0;tailBlkIdx = 0;tailBlock = directory[0];}",public void clear for T block  directory if block  nullArraysfillblock nullsize  0tailDirIdx  0tailBlkIdx  0tailBlock  directory0
public UploadMultipartPartResult uploadMultipartPart(UploadMultipartPartRequest request) {request = beforeClientExecution(request);return executeUploadMultipartPart(request);},public UploadMultipartPartResult uploadMultipartPartUploadMultipartPartRequest request request  beforeClientExecutionrequestreturn executeUploadMultipartPartrequest
public HCenterRecord(RecordInputStream in) {field_1_hcenter = in.readShort();},public HCenterRecordRecordInputStream in field1hcenter  inreadShort
public CreateDBClusterEndpointResult createDBClusterEndpoint(CreateDBClusterEndpointRequest request) {request = beforeClientExecution(request);return executeCreateDBClusterEndpoint(request);},public CreateDBClusterEndpointResult createDBClusterEndpointCreateDBClusterEndpointRequest request request  beforeClientExecutionrequestreturn executeCreateDBClusterEndpointrequest
public boolean hasNext() {return iterator.nextIndex() < end;},public boolean hasNext return iteratornextIndex  end
"public CredentialItem(String promptText, boolean maskValue) {this.promptText = promptText;this.valueSecure = maskValue;}",public CredentialItemString promptText boolean maskValue thispromptText  promptTextthisvalueSecure  maskValue
public DescribeCustomAvailabilityZonesResult describeCustomAvailabilityZones(DescribeCustomAvailabilityZonesRequest request) {request = beforeClientExecution(request);return executeDescribeCustomAvailabilityZones(request);},public DescribeCustomAvailabilityZonesResult describeCustomAvailabilityZonesDescribeCustomAvailabilityZonesRequest request request  beforeClientExecutionrequestreturn executeDescribeCustomAvailabilityZonesrequest
public DescribeClusterParameterGroupsResult describeClusterParameterGroups() {return describeClusterParameterGroups(new DescribeClusterParameterGroupsRequest());},public DescribeClusterParameterGroupsResult describeClusterParameterGroups return describeClusterParameterGroupsnew DescribeClusterParameterGroupsRequest
"public Item(char p, char c) {parent = p;child = c;}",public Itemchar p char c parent  pchild  c
"public void reset(int[] docs, int[] freqs) {this.docs = docs;this.freqs = freqs;if (freqs != null && tmpFreqs == null) {tmpFreqs = new int[tmpDocs.length];}}",public void resetint docs int freqs thisdocs  docsthisfreqs  freqsif freqs  null  tmpFreqs  null tmpFreqs  new inttmpDocslength
"public ChangeMessageVisibilityResult changeMessageVisibility(String queueUrl, String receiptHandle, Integer visibilityTimeout) {return changeMessageVisibility(new ChangeMessageVisibilityRequest().withQueueUrl(queueUrl).withReceiptHandle(receiptHandle).withVisibilityTimeout(visibilityTimeout));}",public ChangeMessageVisibilityResult changeMessageVisibilityString queueUrl String receiptHandle Integer visibilityTimeout return changeMessageVisibilitynew ChangeMessageVisibilityRequestwithQueueUrlqueueUrlwithReceiptHandlereceiptHandlewithVisibilityTimeoutvisibilityTimeout
public boolean contains(Object o) {return this.processors.contains(o);},public boolean containsObject o return thisprocessorscontainso
public int getReturnState(int index) {return returnState;},public int getReturnStateint index return returnState
public ModifyVolumeAttributeResult modifyVolumeAttribute(ModifyVolumeAttributeRequest request) {request = beforeClientExecution(request);return executeModifyVolumeAttribute(request);},public ModifyVolumeAttributeResult modifyVolumeAttributeModifyVolumeAttributeRequest request request  beforeClientExecutionrequestreturn executeModifyVolumeAttributerequest
public DeleteVolumeResult deleteVolume(DeleteVolumeRequest request) {request = beforeClientExecution(request);return executeDeleteVolume(request);},public DeleteVolumeResult deleteVolumeDeleteVolumeRequest request request  beforeClientExecutionrequestreturn executeDeleteVolumerequest
"public ByteBuffer putLong(int index, long value) {checkIndex(index, SizeOf.LONG);Memory.pokeLong(backingArray, offset + index, value, order);return this;}",public ByteBuffer putLongint index long value checkIndexindex SizeOfLONGMemorypokeLongbackingArray offset  index value orderreturn this
public boolean hasMetaDataChanges() {return changeType != ChangeType.MODIFY || newMode != oldMode;},public boolean hasMetaDataChanges return changeType  ChangeTypeMODIFY  newMode  oldMode
public void newField(FieldInfo fieldInfo) {count = interval;},public void newFieldFieldInfo fieldInfo count  interval
"public TokenStream create(TokenStream input) {return new JapaneseReadingFormFilter(input, useRomaji);}",public TokenStream createTokenStream input return new JapaneseReadingFormFilterinput useRomaji
"public static CellRangeAddress valueOf(String ref) {int sep = ref.indexOf("":"");CellReference a;CellReference b;if (sep == -1) {a = new CellReference(ref);b = a;} else {a = new CellReference(ref.substring(0, sep));b = new CellReference(ref.substring(sep + 1));}return new CellRangeAddress(a.getRow(), b.getRow(), a.getCol(), b.getCol());}",public static CellRangeAddress valueOfString ref int sep  refindexOfCellReference aCellReference bif sep  1 a  new CellReferencerefb  a else a  new CellReferencerefsubstring0 sepb  new CellReferencerefsubstringsep  1return new CellRangeAddressagetRow bgetRow agetCol bgetCol
public ModifySelfservicePermissionsResult modifySelfservicePermissions(ModifySelfservicePermissionsRequest request) {request = beforeClientExecution(request);return executeModifySelfservicePermissions(request);},public ModifySelfservicePermissionsResult modifySelfservicePermissionsModifySelfservicePermissionsRequest request request  beforeClientExecutionrequestreturn executeModifySelfservicePermissionsrequest
public int getTokenType(String tokenName) {Integer ttype = getTokenTypeMap().get(tokenName);if ( ttype!=null ) return ttype;return Token.INVALID_TYPE;},public int getTokenTypeString tokenName Integer ttype  getTokenTypeMapgettokenNameif  ttypenull  return ttypereturn TokenINVALIDTYPE
"public int compareTo(LongBuffer otherBuffer) {int compareRemaining = (remaining() < otherBuffer.remaining()) ? remaining(): otherBuffer.remaining();int thisPos = position;int otherPos = otherBuffer.position;long thisLong, otherLong;while (compareRemaining > 0) {thisLong = get(thisPos);otherLong = otherBuffer.get(otherPos);if (thisLong != otherLong) {return thisLong < otherLong ? -1 : 1;}thisPos++;otherPos++;compareRemaining--;}return remaining() - otherBuffer.remaining();}",public int compareToLongBuffer otherBuffer int compareRemaining  remaining  otherBufferremaining  remaining otherBufferremainingint thisPos  positionint otherPos  otherBufferpositionlong thisLong otherLongwhile compareRemaining  0 thisLong  getthisPosotherLong  otherBuffergetotherPosif thisLong  otherLong return thisLong  otherLong  1  1thisPosotherPoscompareRemainingreturn remaining  otherBufferremaining
public ApproveSkillResult approveSkill(ApproveSkillRequest request) {request = beforeClientExecution(request);return executeApproveSkill(request);},public ApproveSkillResult approveSkillApproveSkillRequest request request  beforeClientExecutionrequestreturn executeApproveSkillrequest
public void writeContinueIfRequired(int requiredContinuousSize) {if (_ulrOutput.getAvailableSpace() < requiredContinuousSize) {writeContinue();}},public void writeContinueIfRequiredint requiredContinuousSize if ulrOutputgetAvailableSpace  requiredContinuousSize writeContinue
public GetApiKeysResult getApiKeys(GetApiKeysRequest request) {request = beforeClientExecution(request);return executeGetApiKeys(request);},public GetApiKeysResult getApiKeysGetApiKeysRequest request request  beforeClientExecutionrequestreturn executeGetApiKeysrequest
"public Iterator<Entry<K, V>> iterator() {return newEntryIterator();}",public IteratorEntryK V iterator return newEntryIterator
public int compareTo(RowColKey o) {int cmp = _rowIndex - o._rowIndex;if (cmp != 0) {return cmp;}return _columnIndex - o._columnIndex;},public int compareToRowColKey o int cmp  rowIndex  orowIndexif cmp  0 return cmpreturn columnIndex  ocolumnIndex
"public ATNConfig(ATNConfig c, ATNState state,PredictionContext context,SemanticContext semanticContext){this.state = state;this.alt = c.alt;this.context = context;this.semanticContext = semanticContext;this.reachesIntoOuterContext = c.reachesIntoOuterContext;}",public ATNConfigATNConfig c ATNState statePredictionContext contextSemanticContext semanticContextthisstate  statethisalt  caltthiscontext  contextthissemanticContext  semanticContextthisreachesIntoOuterContext  creachesIntoOuterContext
"public void updateNamesAfterCellShift(FormulaShifter shifter) {for (int i = 0 ; i < getNumNames() ; ++i){NameRecord nr = getNameRecord(i);Ptg[] ptgs = nr.getNameDefinition();if (shifter.adjustFormula(ptgs, nr.getSheetNumber())) {nr.setNameDefinition(ptgs);}}}",public void updateNamesAfterCellShiftFormulaShifter shifter for int i  0  i  getNumNames  iNameRecord nr  getNameRecordiPtg ptgs  nrgetNameDefinitionif shifteradjustFormulaptgs nrgetSheetNumber nrsetNameDefinitionptgs
public ListReviewPolicyResultsForHITResult listReviewPolicyResultsForHIT(ListReviewPolicyResultsForHITRequest request) {request = beforeClientExecution(request);return executeListReviewPolicyResultsForHIT(request);},public ListReviewPolicyResultsForHITResult listReviewPolicyResultsForHITListReviewPolicyResultsForHITRequest request request  beforeClientExecutionrequestreturn executeListReviewPolicyResultsForHITrequest
public GetExportResult getExport(GetExportRequest request) {request = beforeClientExecution(request);return executeGetExport(request);},public GetExportResult getExportGetExportRequest request request  beforeClientExecutionrequestreturn executeGetExportrequest
"public void setHyperbolicTfFactors(float min, float max,double base, float xoffset) {tf_hyper_min = min;tf_hyper_max = max;tf_hyper_base = base;tf_hyper_xoffset = xoffset;}",public void setHyperbolicTfFactorsfloat min float maxdouble base float xoffset tfhypermin  mintfhypermax  maxtfhyperbase  basetfhyperxoffset  xoffset
"public CharBuffer slice() {return new ReadWriteCharArrayBuffer(remaining(), backingArray, offset + position);}",public CharBuffer slice return new ReadWriteCharArrayBufferremaining backingArray offset  position
"public LexerNoViableAltException(Lexer lexer,CharStream input,int startIndex,ATNConfigSet deadEndConfigs) {super(lexer, input, null);this.startIndex = startIndex;this.deadEndConfigs = deadEndConfigs;}",public LexerNoViableAltExceptionLexer lexerCharStream inputint startIndexATNConfigSet deadEndConfigs superlexer input nullthisstartIndex  startIndexthisdeadEndConfigs  deadEndConfigs
public CreateCompilationJobResult createCompilationJob(CreateCompilationJobRequest request) {request = beforeClientExecution(request);return executeCreateCompilationJob(request);},public CreateCompilationJobResult createCompilationJobCreateCompilationJobRequest request request  beforeClientExecutionrequestreturn executeCreateCompilationJobrequest
public int getPosition() {return position;},public int getPosition return position
public boolean canEncode(CharSequence sequence) {CharBuffer cb;if (sequence instanceof CharBuffer) {cb = ((CharBuffer) sequence).duplicate();} else {cb = CharBuffer.wrap(sequence);}return implCanEncode(cb);},public boolean canEncodeCharSequence sequence CharBuffer cbif sequence instanceof CharBuffer cb  CharBuffer sequenceduplicate else cb  CharBufferwrapsequencereturn implCanEncodecb
"public synchronized void add(int index, E e) {Object[] newElements = new Object[elements.length + 1];System.arraycopy(elements, 0, newElements, 0, index);newElements[index] = e;System.arraycopy(elements, index, newElements, index + 1, elements.length - index);elements = newElements;}",public synchronized void addint index E e Object newElements  new Objectelementslength  1Systemarraycopyelements 0 newElements 0 indexnewElementsindex  eSystemarraycopyelements index newElements index  1 elementslength  indexelements  newElements
public StopMonitoringScheduleResult stopMonitoringSchedule(StopMonitoringScheduleRequest request) {request = beforeClientExecution(request);return executeStopMonitoringSchedule(request);},public StopMonitoringScheduleResult stopMonitoringScheduleStopMonitoringScheduleRequest request request  beforeClientExecutionrequestreturn executeStopMonitoringSchedulerequest
public int getDbcellAt(int cellnum){return field_5_dbcells.get(cellnum);},public int getDbcellAtint cellnumreturn field5dbcellsgetcellnum
"public final int read(byte[] buffer, int offset, int length) throws IOException {return in.read(buffer, offset, length);}",public final int readbyte buffer int offset int length throws IOException return inreadbuffer offset length
"public synchronized String[] getChunks(String[] words, String[] tags, double[] probs) {String[] chunks = chunker.chunk(words, tags);if (probs != null)chunker.probs(probs);return chunks;}",public synchronized String getChunksString words String tags double probs String chunks  chunkerchunkwords tagsif probs  nullchunkerprobsprobsreturn chunks
public Ref getTarget() {return this;},public Ref getTarget return this
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[DEFAULTROWHEIGHT]\n"");buffer.append(""    .optionflags    = "").append(Integer.toHexString(getOptionFlags())).append(""\n"");buffer.append(""    .rowheight      = "").append(Integer.toHexString(getRowHeight())).append(""\n"");buffer.append(""[/DEFAULTROWHEIGHT]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendDEFAULTROWHEIGHTnbufferappend    optionflags     appendIntegertoHexStringgetOptionFlagsappendnbufferappend    rowheight       appendIntegertoHexStringgetRowHeightappendnbufferappendDEFAULTROWHEIGHTnreturn buffertoString
public AlibabaCloudCredentials getCredentials() {return this.credentials;},public AlibabaCloudCredentials getCredentials return thiscredentials
public SeekStatus seekCeil(BytesRef term) {throw new UnsupportedOperationException();},public SeekStatus seekCeilBytesRef term throw new UnsupportedOperationException
public NavigableSet<K> navigableKeySet() {BoundedKeySet result = keySet;return result != null ? result : (keySet = new BoundedKeySet());},public NavigableSetK navigableKeySet BoundedKeySet result  keySetreturn result  null  result  keySet  new BoundedKeySet
"public ListEventsRequest() {super(""CloudPhoto"", ""2017-07-11"", ""ListEvents"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public ListEventsRequest superCloudPhoto 20170711 ListEvents cloudphotosetProtocolProtocolTypeHTTPS
"public String toString(){StringBuilder sb = new StringBuilder();sb.append(""[LbsDropData]\n"");sb.append(""  ._wStyle:  "").append(_wStyle).append('\n');sb.append(""  ._cLine:  "").append(_cLine).append('\n');sb.append(""  ._dxMin:  "").append(_dxMin).append('\n');sb.append(""  ._str:  "").append(_str).append('\n');if(_unused != null) {sb.append(""  ._unused:  "").append(_unused).append('\n');}sb.append(""[/LbsDropData]\n"");return sb.toString();}",public String toStringStringBuilder sb  new StringBuildersbappendLbsDropDatansbappend  wStyle  appendwStyleappendnsbappend  cLine  appendcLineappendnsbappend  dxMin  appenddxMinappendnsbappend  str  appendstrappendnifunused  null sbappend  unused  appendunusedappendnsbappendLbsDropDatanreturn sbtoString
"public String toString() {return ""PackWriter.State["" + phase + "", memory="" + bytesUsed + ""]"";}",public String toString return PackWriterState  phase   memory  bytesUsed  
public RemoteRefUpdate getRemoteUpdate(String refName) {return remoteUpdates.get(refName);},public RemoteRefUpdate getRemoteUpdateString refName return remoteUpdatesgetrefName
@Override public Iterator<E> iterator() {return listIterator(0);},Override public IteratorE iterator return listIterator0
public TerminateInstancesRequest(java.util.List<String> instanceIds) {setInstanceIds(instanceIds);},public TerminateInstancesRequestjavautilListString instanceIds setInstanceIdsinstanceIds
public CreateDataRepositoryTaskResult createDataRepositoryTask(CreateDataRepositoryTaskRequest request) {request = beforeClientExecution(request);return executeCreateDataRepositoryTask(request);},public CreateDataRepositoryTaskResult createDataRepositoryTaskCreateDataRepositoryTaskRequest request request  beforeClientExecutionrequestreturn executeCreateDataRepositoryTaskrequest
public void undeprecateActivityType(UndeprecateActivityTypeRequest request) {request = beforeClientExecution(request);executeUndeprecateActivityType(request);},public void undeprecateActivityTypeUndeprecateActivityTypeRequest request request  beforeClientExecutionrequestexecuteUndeprecateActivityTyperequest
public EndRecord clone() {return copy();},public EndRecord clone return copy
public ListLabelingJobsResult listLabelingJobs(ListLabelingJobsRequest request) {request = beforeClientExecution(request);return executeListLabelingJobs(request);},public ListLabelingJobsResult listLabelingJobsListLabelingJobsRequest request request  beforeClientExecutionrequestreturn executeListLabelingJobsrequest
public void setTag(String shortName) {this.tag = shortName;},public void setTagString shortName thistag  shortName
public String getNameText(NamePtg namePtg) {return _iBook.getNameRecord(namePtg.getIndex()).getNameText();},public String getNameTextNamePtg namePtg return iBookgetNameRecordnamePtggetIndexgetNameText
public Builder() {slop = 0;terms = new ArrayList<>();positions = new ArrayList<>();},public Builder slop  0terms  new ArrayListpositions  new ArrayList
"public SpanPositionRangeQuery(SpanQuery match, int start, int end) {super(match);this.start = start;this.end = end;}",public SpanPositionRangeQuerySpanQuery match int start int end supermatchthisstart  startthisend  end
public CreateDBProxyResult createDBProxy(CreateDBProxyRequest request) {request = beforeClientExecution(request);return executeCreateDBProxy(request);},public CreateDBProxyResult createDBProxyCreateDBProxyRequest request request  beforeClientExecutionrequestreturn executeCreateDBProxyrequest
public boolean equals( Object o ) {return o instanceof LovinsStemmer;},public boolean equals Object o  return o instanceof LovinsStemmer
public ReplicationGroup modifyReplicationGroupShardConfiguration(ModifyReplicationGroupShardConfigurationRequest request) {request = beforeClientExecution(request);return executeModifyReplicationGroupShardConfiguration(request);},public ReplicationGroup modifyReplicationGroupShardConfigurationModifyReplicationGroupShardConfigurationRequest request request  beforeClientExecutionrequestreturn executeModifyReplicationGroupShardConfigurationrequest
public DeleteFacesResult deleteFaces(DeleteFacesRequest request) {request = beforeClientExecution(request);return executeDeleteFaces(request);},public DeleteFacesResult deleteFacesDeleteFacesRequest request request  beforeClientExecutionrequestreturn executeDeleteFacesrequest
"public SSTSerializer( IntMapper<UnicodeString> strings, int numStrings, int numUniqueStrings ){this.strings = strings;_numStrings = numStrings;_numUniqueStrings = numUniqueStrings;int infoRecs = ExtSSTRecord.getNumberOfInfoRecsForStrings(strings.size());this.bucketAbsoluteOffsets = new int[infoRecs];this.bucketRelativeOffsets = new int[infoRecs];}",public SSTSerializer IntMapperUnicodeString strings int numStrings int numUniqueStrings thisstrings  stringsnumStrings  numStringsnumUniqueStrings  numUniqueStringsint infoRecs  ExtSSTRecordgetNumberOfInfoRecsForStringsstringssizethisbucketAbsoluteOffsets  new intinfoRecsthisbucketRelativeOffsets  new intinfoRecs
"public URISyntaxException(String input, String reason, int index) {super(reason);if (input == null || reason == null) {throw new NullPointerException();}if (index < -1) {throw new IllegalArgumentException();}this.input = input;this.index = index;}",public URISyntaxExceptionString input String reason int index superreasonif input  null  reason  null throw new NullPointerExceptionif index  1 throw new IllegalArgumentExceptionthisinput  inputthisindex  index
"public String toString() {return ""AssociationFacetField(dim="" + dim + "" path="" + Arrays.toString(path) + "" bytes="" + assoc + "")"";}",public String toString return AssociationFacetFielddim  dim   path  ArraystoStringpath   bytes  assoc  
public boolean requiresCommitBody() {return false;},public boolean requiresCommitBody return false
"public static AttrPtg getSumSingle() {return new AttrPtg(optiSum.set(0), 0, null, -1);}",public static AttrPtg getSumSingle return new AttrPtgoptiSumset0 0 null 1
public GetModelsResult getModels(GetModelsRequest request) {request = beforeClientExecution(request);return executeGetModels(request);},public GetModelsResult getModelsGetModelsRequest request request  beforeClientExecutionrequestreturn executeGetModelsrequest
public Storage getStorage() {return Storage.LOOSE;},public Storage getStorage return StorageLOOSE
public ForwardBytesReader(byte[] bytes) {this.bytes = bytes;},public ForwardBytesReaderbyte bytes thisbytes  bytes
public long ramBytesUsed() {return fst == null ? 0 : fst.ramBytesUsed();},public long ramBytesUsed return fst  null  0  fstramBytesUsed
"public ShortBuffer asReadOnlyBuffer() {return ReadOnlyShortArrayBuffer.copy(this, mark);}",public ShortBuffer asReadOnlyBuffer return ReadOnlyShortArrayBuffercopythis mark
public ListFiltersResult listFilters(ListFiltersRequest request) {request = beforeClientExecution(request);return executeListFilters(request);},public ListFiltersResult listFiltersListFiltersRequest request request  beforeClientExecutionrequestreturn executeListFiltersrequest
"public HSSFRichTextString(String string) {if (string == null) {_string = new UnicodeString("""");} else {_string = new UnicodeString(string);}}",public HSSFRichTextStringString string if string  null string  new UnicodeString else string  new UnicodeStringstring
"public void readBytes(byte[] b, int offset, int len) {System.arraycopy(bytes, pos, b, offset, len);pos += len;}",public void readBytesbyte b int offset int len Systemarraycopybytes pos b offset lenpos  len
public UpdateDomainNameserversResult updateDomainNameservers(UpdateDomainNameserversRequest request) {request = beforeClientExecution(request);return executeUpdateDomainNameservers(request);},public UpdateDomainNameserversResult updateDomainNameserversUpdateDomainNameserversRequest request request  beforeClientExecutionrequestreturn executeUpdateDomainNameserversrequest
public ListWorkersWithQualificationTypeResult listWorkersWithQualificationType(ListWorkersWithQualificationTypeRequest request) {request = beforeClientExecution(request);return executeListWorkersWithQualificationType(request);},public ListWorkersWithQualificationTypeResult listWorkersWithQualificationTypeListWorkersWithQualificationTypeRequest request request  beforeClientExecutionrequestreturn executeListWorkersWithQualificationTyperequest
"public ResetCacheParameterGroupRequest(String cacheParameterGroupName, java.util.List<ParameterNameValue> parameterNameValues) {setCacheParameterGroupName(cacheParameterGroupName);setParameterNameValues(parameterNameValues);}",public ResetCacheParameterGroupRequestString cacheParameterGroupName javautilListParameterNameValue parameterNameValues setCacheParameterGroupNamecacheParameterGroupNamesetParameterNameValuesparameterNameValues
public EscherPropertyMetaData( String description ){this.description = description;},public EscherPropertyMetaData String description thisdescription  description
"public UserInputQueryBuilder(String defaultField, Analyzer analyzer) {this.analyzer = analyzer;this.defaultField = defaultField;}",public UserInputQueryBuilderString defaultField Analyzer analyzer thisanalyzer  analyzerthisdefaultField  defaultField
"public final CharsetDecoder replaceWith(String replacement) {if (replacement == null) {throw new IllegalArgumentException(""replacement == null"");}if (replacement.isEmpty()) {throw new IllegalArgumentException(""replacement.isEmpty()"");}if (replacement.length() > maxCharsPerByte()) {throw new IllegalArgumentException(""replacement length > maxCharsPerByte: "" +replacement.length() + "" > "" + maxCharsPerByte());}replacementChars = replacement;implReplaceWith(replacement);return this;}",public final CharsetDecoder replaceWithString replacement if replacement  null throw new IllegalArgumentExceptionreplacement  nullif replacementisEmpty throw new IllegalArgumentExceptionreplacementisEmptyif replacementlength  maxCharsPerByte throw new IllegalArgumentExceptionreplacement length  maxCharsPerByte  replacementlength      maxCharsPerBytereplacementChars  replacementimplReplaceWithreplacementreturn this
public void reset() throws IOException {throw new IOException();},public void reset throws IOException throw new IOException
public UpdateFileSystemResult updateFileSystem(UpdateFileSystemRequest request) {request = beforeClientExecution(request);return executeUpdateFileSystem(request);},public UpdateFileSystemResult updateFileSystemUpdateFileSystemRequest request request  beforeClientExecutionrequestreturn executeUpdateFileSystemrequest
public int readUByte(){return _in.readUByte();},public int readUBytereturn inreadUByte
"public String toString() {return ""[WSBOOL]\n"" +""    .wsbool1        = "" + Integer.toHexString(getWSBool1()) + ""\n"" +""        .autobreaks = "" + getAutobreaks() + ""\n"" +""        .dialog     = "" + getDialog() + ""\n"" +""        .rowsumsbelw= "" + getRowSumsBelow() + ""\n"" +""        .rowsumsrigt= "" + getRowSumsRight() + ""\n"" +""    .wsbool2        = "" + Integer.toHexString(getWSBool2()) + ""\n"" +""        .fittopage  = "" + getFitToPage() + ""\n"" +""        .displayguts= "" + getDisplayGuts() + ""\n"" +""        .alternateex= "" + getAlternateExpression() + ""\n"" +""        .alternatefo= "" + getAlternateFormula() + ""\n"" +""[/WSBOOL]\n"";}",public String toString return WSBOOLn     wsbool1           IntegertoHexStringgetWSBool1  n         autobreaks    getAutobreaks  n         dialog        getDialog  n         rowsumsbelw   getRowSumsBelow  n         rowsumsrigt   getRowSumsRight  n     wsbool2           IntegertoHexStringgetWSBool2  n         fittopage     getFitToPage  n         displayguts   getDisplayGuts  n         alternateex   getAlternateExpression  n         alternatefo   getAlternateFormula  n WSBOOLn
public PutGatewayResponseResult putGatewayResponse(PutGatewayResponseRequest request) {request = beforeClientExecution(request);return executePutGatewayResponse(request);},public PutGatewayResponseResult putGatewayResponsePutGatewayResponseRequest request request  beforeClientExecutionrequestreturn executePutGatewayResponserequest
"public Term[] getStopWords() {List<Term> allStopWords = new ArrayList<>();for (Map.Entry<String, Set<String>> entry : stopWordsPerField.entrySet()) {String field = entry.getKey();Set<String> stopWords = entry.getValue();for (String text : stopWords) {allStopWords.add(new Term(field, text));}}return allStopWords.toArray(new Term[allStopWords.size()]);}",public Term getStopWords ListTerm allStopWords  new ArrayListfor MapEntryString SetString entry  stopWordsPerFieldentrySet String field  entrygetKeySetString stopWords  entrygetValuefor String text  stopWords allStopWordsaddnew Termfield textreturn allStopWordstoArraynew TermallStopWordssize
public boolean isUpdate() {return update;},public boolean isUpdate return update
public static InternalSheet createSheet(RecordStream rs) {return new InternalSheet(rs);},public static InternalSheet createSheetRecordStream rs return new InternalSheetrs
"public final IntBuffer get(int[] dst, int dstOffset, int intCount) {if (intCount > remaining()) {throw new BufferUnderflowException();}System.arraycopy(backingArray, offset + position, dst, dstOffset, intCount);position += intCount;return this;}",public final IntBuffer getint dst int dstOffset int intCount if intCount  remaining throw new BufferUnderflowExceptionSystemarraycopybackingArray offset  position dst dstOffset intCountposition  intCountreturn this
public DisassociateVpcCidrBlockResult disassociateVpcCidrBlock(DisassociateVpcCidrBlockRequest request) {request = beforeClientExecution(request);return executeDisassociateVpcCidrBlock(request);},public DisassociateVpcCidrBlockResult disassociateVpcCidrBlockDisassociateVpcCidrBlockRequest request request  beforeClientExecutionrequestreturn executeDisassociateVpcCidrBlockrequest
"public void add(TaskStats stat2) {numRuns += stat2.getNumRuns();elapsed += stat2.getElapsed();maxTotMem += stat2.getMaxTotMem();maxUsedMem += stat2.getMaxUsedMem();count += stat2.getCount();if (round != stat2.round) {round = -1; }if (countsByTime != null && stat2.countsByTime != null) {if (countsByTimeStepMSec != stat2.countsByTimeStepMSec) {throw new IllegalStateException(""different by-time msec step"");}if (countsByTime.length != stat2.countsByTime.length) {throw new IllegalStateException(""different by-time msec count"");}for(int i=0;i<stat2.countsByTime.length;i++) {countsByTime[i] += stat2.countsByTime[i];}}}",public void addTaskStats stat2 numRuns  stat2getNumRunselapsed  stat2getElapsedmaxTotMem  stat2getMaxTotMemmaxUsedMem  stat2getMaxUsedMemcount  stat2getCountif round  stat2round round  1 if countsByTime  null  stat2countsByTime  null if countsByTimeStepMSec  stat2countsByTimeStepMSec throw new IllegalStateExceptiondifferent bytime msec stepif countsByTimelength  stat2countsByTimelength throw new IllegalStateExceptiondifferent bytime msec countforint i0istat2countsByTimelengthi countsByTimei  stat2countsByTimei
public StartStreamProcessorResult startStreamProcessor(StartStreamProcessorRequest request) {request = beforeClientExecution(request);return executeStartStreamProcessor(request);},public StartStreamProcessorResult startStreamProcessorStartStreamProcessorRequest request request  beforeClientExecutionrequestreturn executeStartStreamProcessorrequest
public void print(char c) {print(String.valueOf(c));},public void printchar c printStringvalueOfc
"public StepConfig(String name, HadoopJarStepConfig hadoopJarStep) {setName(name);setHadoopJarStep(hadoopJarStep);}",public StepConfigString name HadoopJarStepConfig hadoopJarStep setNamenamesetHadoopJarStephadoopJarStep
public GetIdentityPoliciesResult getIdentityPolicies(GetIdentityPoliciesRequest request) {request = beforeClientExecution(request);return executeGetIdentityPolicies(request);},public GetIdentityPoliciesResult getIdentityPoliciesGetIdentityPoliciesRequest request request  beforeClientExecutionrequestreturn executeGetIdentityPoliciesrequest
public ListAccountsResult listAccounts(ListAccountsRequest request) {request = beforeClientExecution(request);return executeListAccounts(request);},public ListAccountsResult listAccountsListAccountsRequest request request  beforeClientExecutionrequestreturn executeListAccountsrequest
public int getCompressionLevel() {return compressionLevel;},public int getCompressionLevel return compressionLevel
"public synchronized StringBuffer append(CharSequence s) {if (s == null) {appendNull();} else {append0(s, 0, s.length());}return this;}",public synchronized StringBuffer appendCharSequence s if s  null appendNull else append0s 0 slengthreturn this
"@Override public String toString() {return key + ""="" + value;}",Override public String toString return key    value
"public long skip(long byteCount) throws IOException {if (byteCount < 0) {throw new IllegalArgumentException(""byteCount < 0: "" + byteCount);}synchronized (lock) {checkNotClosed();if (byteCount < 1) {return 0;}if (end - pos >= byteCount) {pos += byteCount;return byteCount;}long read = end - pos;pos = end;while (read < byteCount) {if (fillBuf() == -1) {return read;}if (end - pos >= byteCount - read) {pos += byteCount - read;return byteCount;}read += (end - pos);pos = end;}return byteCount;}}",public long skiplong byteCount throws IOException if byteCount  0 throw new IllegalArgumentExceptionbyteCount  0   byteCountsynchronized lock checkNotClosedif byteCount  1 return 0if end  pos  byteCount pos  byteCountreturn byteCountlong read  end  pospos  endwhile read  byteCount if fillBuf  1 return readif end  pos  byteCount  read pos  byteCount  readreturn byteCountread  end  pospos  endreturn byteCount
"public void updateFormulasAfterRowShift(FormulaShifter formulaShifter, int currentExternSheetIndex) {_valuesAgg.updateFormulasAfterRowShift(formulaShifter, currentExternSheetIndex);}",public void updateFormulasAfterRowShiftFormulaShifter formulaShifter int currentExternSheetIndex valuesAggupdateFormulasAfterRowShiftformulaShifter currentExternSheetIndex
public void close() {synchronized (lock) {if (isOpen()) {buf = null;}}},public void close synchronized lock if isOpen buf  null
public void seek(long pos) {this.pos =  (int) (pos - pointer);},public void seeklong pos thispos   int pos  pointer
"public String toFormulaString() {StringBuilder sb = new StringBuilder(64);boolean needsExclamation = false;if (externalWorkbookNumber >= 0) {sb.append('[');sb.append(externalWorkbookNumber);sb.append(']');needsExclamation = true;}if (sheetName != null) {SheetNameFormatter.appendFormat(sb, sheetName);needsExclamation = true;}if (needsExclamation) {sb.append('!');}sb.append(nameName);return sb.toString();}",public String toFormulaString StringBuilder sb  new StringBuilder64boolean needsExclamation  falseif externalWorkbookNumber  0 sbappendsbappendexternalWorkbookNumbersbappendneedsExclamation  trueif sheetName  null SheetNameFormatterappendFormatsb sheetNameneedsExclamation  trueif needsExclamation sbappendsbappendnameNamereturn sbtoString
public boolean isFinished() {return mState == STATE_IDLE;},public boolean isFinished return mState  STATEIDLE
"public static Transport open(Repository local, URIish uri, String remoteName)throws NotSupportedException, TransportException {for (WeakReference<TransportProtocol> ref : protocols) {TransportProtocol proto = ref.get();if (proto == null) {protocols.remove(ref);continue;}if (proto.canHandle(uri, local, remoteName)) {Transport tn = proto.open(uri, local, remoteName);tn.prePush = Hooks.prePush(local, tn.hookOutRedirect);tn.prePush.setRemoteLocation(uri.toString());tn.prePush.setRemoteName(remoteName);return tn;}}throw new NotSupportedException(MessageFormat.format(JGitText.get().URINotSupported, uri));}",public static Transport openRepository local URIish uri String remoteNamethrows NotSupportedException TransportException for WeakReferenceTransportProtocol ref  protocols TransportProtocol proto  refgetif proto  null protocolsremoverefcontinueif protocanHandleuri local remoteName Transport tn  protoopenuri local remoteNametnprePush  HooksprePushlocal tnhookOutRedirecttnprePushsetRemoteLocationuritoStringtnprePushsetRemoteNameremoteNamereturn tnthrow new NotSupportedExceptionMessageFormatformatJGitTextgetURINotSupported uri
public void setColor(Color color){foreground = color;},public void setColorColor colorforeground  color
public DeleteAliasResult deleteAlias(DeleteAliasRequest request) {request = beforeClientExecution(request);return executeDeleteAlias(request);},public DeleteAliasResult deleteAliasDeleteAliasRequest request request  beforeClientExecutionrequestreturn executeDeleteAliasrequest
"public SeekStatus seekCeil(BytesRef text) {termUpto = binarySearch(text, br, 0, info.terms.size()-1, info.terms, info.sortedTerms);if (termUpto < 0) { termUpto = -termUpto-1;if (termUpto >= info.terms.size()) {return SeekStatus.END;} else {info.terms.get(info.sortedTerms[termUpto], br);return SeekStatus.NOT_FOUND;}} else {return SeekStatus.FOUND;}}",public SeekStatus seekCeilBytesRef text termUpto  binarySearchtext br 0 infotermssize1 infoterms infosortedTermsif termUpto  0  termUpto  termUpto1if termUpto  infotermssize return SeekStatusEND else infotermsgetinfosortedTermstermUpto brreturn SeekStatusNOTFOUND else return SeekStatusFOUND
"public CreateApplicationVersionRequest(String applicationName, String versionLabel) {setApplicationName(applicationName);setVersionLabel(versionLabel);}",public CreateApplicationVersionRequestString applicationName String versionLabel setApplicationNameapplicationNamesetVersionLabelversionLabel
"public String toString() {return ruleName + "":"" + bypassTokenType;}",public String toString return ruleName    bypassTokenType
"public int indexOf(Object object) {Object[] snapshot = elements;return indexOf(object, snapshot, 0, snapshot.length);}",public int indexOfObject object Object snapshot  elementsreturn indexOfobject snapshot 0 snapshotlength
"public int compareTo(ShortBuffer otherBuffer) {int compareRemaining = (remaining() < otherBuffer.remaining()) ? remaining(): otherBuffer.remaining();int thisPos = position;int otherPos = otherBuffer.position;short thisByte, otherByte;while (compareRemaining > 0) {thisByte = get(thisPos);otherByte = otherBuffer.get(otherPos);if (thisByte != otherByte) {return thisByte < otherByte ? -1 : 1;}thisPos++;otherPos++;compareRemaining--;}return remaining() - otherBuffer.remaining();}",public int compareToShortBuffer otherBuffer int compareRemaining  remaining  otherBufferremaining  remaining otherBufferremainingint thisPos  positionint otherPos  otherBufferpositionshort thisByte otherBytewhile compareRemaining  0 thisByte  getthisPosotherByte  otherBuffergetotherPosif thisByte  otherByte return thisByte  otherByte  1  1thisPosotherPoscompareRemainingreturn remaining  otherBufferremaining
public DescribeSecurityConfigurationResult describeSecurityConfiguration(DescribeSecurityConfigurationRequest request) {request = beforeClientExecution(request);return executeDescribeSecurityConfiguration(request);},public DescribeSecurityConfigurationResult describeSecurityConfigurationDescribeSecurityConfigurationRequest request request  beforeClientExecutionrequestreturn executeDescribeSecurityConfigurationrequest
"public void add(int location, E object) {insertElementAt(object, location);}",public void addint location E object insertElementAtobject location
public GetDownloadUrlForLayerResult getDownloadUrlForLayer(GetDownloadUrlForLayerRequest request) {request = beforeClientExecution(request);return executeGetDownloadUrlForLayer(request);},public GetDownloadUrlForLayerResult getDownloadUrlForLayerGetDownloadUrlForLayerRequest request request  beforeClientExecutionrequestreturn executeGetDownloadUrlForLayerrequest
"public StringWriter append(CharSequence csq) {if (csq == null) {csq = ""null"";}write(csq.toString());return this;}",public StringWriter appendCharSequence csq if csq  null csq  nullwritecsqtoStringreturn this
public RevWalk getRevWalk() {return walker;},public RevWalk getRevWalk return walker
"@Override public int lastIndexOf(Object object) {Slice slice = this.slice;Object[] snapshot = elements;slice.checkConcurrentModification(snapshot);int result = CopyOnWriteArrayList.lastIndexOf(object, snapshot, slice.from, slice.to);return (result != -1) ? (result - slice.from) : -1;}",Override public int lastIndexOfObject object Slice slice  thissliceObject snapshot  elementsslicecheckConcurrentModificationsnapshotint result  CopyOnWriteArrayListlastIndexOfobject snapshot slicefrom slicetoreturn result  1  result  slicefrom  1
"public IntBuffer put(int index, int c) {checkIndex(index);backingArray[offset + index] = c;return this;}",public IntBuffer putint index int c checkIndexindexbackingArrayoffset  index  creturn this
"public HSSFTextbox(HSSFShape parent, HSSFAnchor anchor) {super(parent, anchor);setHorizontalAlignment(HORIZONTAL_ALIGNMENT_LEFT);setVerticalAlignment(VERTICAL_ALIGNMENT_TOP);setString(new HSSFRichTextString(""""));}",public HSSFTextboxHSSFShape parent HSSFAnchor anchor superparent anchorsetHorizontalAlignmentHORIZONTALALIGNMENTLEFTsetVerticalAlignmentVERTICALALIGNMENTTOPsetStringnew HSSFRichTextString
"public GetRegionRequest() {super(""cr"", ""2016-06-07"", ""GetRegion"", ""cr"");setUriPattern(""/regions"");setMethod(MethodType.GET);}",public GetRegionRequest supercr 20160607 GetRegion crsetUriPatternregionssetMethodMethodTypeGET
public ListObjectChildrenResult listObjectChildren(ListObjectChildrenRequest request) {request = beforeClientExecution(request);return executeListObjectChildren(request);},public ListObjectChildrenResult listObjectChildrenListObjectChildrenRequest request request  beforeClientExecutionrequestreturn executeListObjectChildrenrequest
public GetIdResult getId(GetIdRequest request) {request = beforeClientExecution(request);return executeGetId(request);},public GetIdResult getIdGetIdRequest request request  beforeClientExecutionrequestreturn executeGetIdrequest
public String getPassphrase() {return passphrase;},public String getPassphrase return passphrase
"public Map<String, Ref> getAllRefs() {try {return getRefDatabase().getRefs(RefDatabase.ALL);} catch (IOException e) {throw new UncheckedIOException(e);}}",public MapString Ref getAllRefs try return getRefDatabasegetRefsRefDatabaseALL catch IOException e throw new UncheckedIOExceptione
public boolean hasMoreElements() { return hasNext(); },public boolean hasMoreElements  return hasNext 
public int numDataNodes() {return numDataNodes(rootNode);},public int numDataNodes return numDataNodesrootNode
"public HadoopJarStepConfig toHadoopJarStepConfig() {List<String> args = new ArrayList<String>();if (reducer == null) {hadoopConfig.put(""mapred.reduce.tasks"", ""0"");}for (Map.Entry<String, String> entry : hadoopConfig.entrySet()) {args.add(""-D"");args.add(entry.getKey() + ""="" + entry.getValue());}for (String input : inputs) {args.add(""-input"");args.add(input);}if (output != null) {args.add(""-output"");args.add(output);}if (mapper != null) {args.add(""-mapper"");args.add(mapper);}if (reducer != null) {args.add(""-reducer"");args.add(reducer);}return new HadoopJarStepConfig().withJar(""/home/hadoop/contrib/streaming/hadoop-streaming.jar"").withArgs(args);}",public HadoopJarStepConfig toHadoopJarStepConfig ListString args  new ArrayListStringif reducer  null hadoopConfigputmapredreducetasks 0for MapEntryString String entry  hadoopConfigentrySet argsaddDargsaddentrygetKey    entrygetValuefor String input  inputs argsaddinputargsaddinputif output  null argsaddoutputargsaddoutputif mapper  null argsaddmapperargsaddmapperif reducer  null argsaddreducerargsaddreducerreturn new HadoopJarStepConfigwithJarhomehadoopcontribstreaminghadoopstreamingjarwithArgsargs
public GetRelationalDatabaseEventsResult getRelationalDatabaseEvents(GetRelationalDatabaseEventsRequest request) {request = beforeClientExecution(request);return executeGetRelationalDatabaseEvents(request);},public GetRelationalDatabaseEventsResult getRelationalDatabaseEventsGetRelationalDatabaseEventsRequest request request  beforeClientExecutionrequestreturn executeGetRelationalDatabaseEventsrequest
"public void drawLine(int x1, int y1, int x2, int y2){drawLine(x1,y1,x2,y2,0);}",public void drawLineint x1 int y1 int x2 int y2drawLinex1y1x2y20
public UpdateUserSecurityProfilesResult updateUserSecurityProfiles(UpdateUserSecurityProfilesRequest request) {request = beforeClientExecution(request);return executeUpdateUserSecurityProfiles(request);},public UpdateUserSecurityProfilesResult updateUserSecurityProfilesUpdateUserSecurityProfilesRequest request request  beforeClientExecutionrequestreturn executeUpdateUserSecurityProfilesrequest
"public String toString() {return ""Action: "" + this.action;}",public String toString return Action   thisaction
"public CreateVolumeRequest(Integer size, String availabilityZone) {setSize(size);setAvailabilityZone(availabilityZone);}",public CreateVolumeRequestInteger size String availabilityZone setSizesizesetAvailabilityZoneavailabilityZone
"public final void setPrecedenceStartState(int precedence, DFAState startState) {if (!isPrecedenceDfa()) {throw new IllegalStateException(""Only precedence DFAs may contain a precedence start state."");}if (precedence < 0) {return;}synchronized (s0) {if (precedence >= s0.edges.length) {s0.edges = Arrays.copyOf(s0.edges, precedence + 1);}s0.edges[precedence] = startState;}}",public final void setPrecedenceStartStateint precedence DFAState startState if isPrecedenceDfa throw new IllegalStateExceptionOnly precedence DFAs may contain a precedence start stateif precedence  0 returnsynchronized s0 if precedence  s0edgeslength s0edges  ArrayscopyOfs0edges precedence  1s0edgesprecedence  startState
"public EditPhotosRequest() {super(""CloudPhoto"", ""2017-07-11"", ""EditPhotos"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public EditPhotosRequest superCloudPhoto 20170711 EditPhotos cloudphotosetProtocolProtocolTypeHTTPS
"public Builder() {PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton();fstCompiler = new FSTCompiler<>(FST.INPUT_TYPE.BYTE1, outputs);scratchInts = new IntsRefBuilder();}",public Builder PositiveIntOutputs outputs  PositiveIntOutputsgetSingletonfstCompiler  new FSTCompilerFSTINPUTTYPEBYTE1 outputsscratchInts  new IntsRefBuilder
public DeleteFlowDefinitionResult deleteFlowDefinition(DeleteFlowDefinitionRequest request) {request = beforeClientExecution(request);return executeDeleteFlowDefinition(request);},public DeleteFlowDefinitionResult deleteFlowDefinitionDeleteFlowDefinitionRequest request request  beforeClientExecutionrequestreturn executeDeleteFlowDefinitionrequest
public void setLastFailedRefreshTime() {lastFailedRefreshTime = System.currentTimeMillis();},public void setLastFailedRefreshTime lastFailedRefreshTime  SystemcurrentTimeMillis
public ModifyDBInstanceRequest(String dBInstanceIdentifier) {setDBInstanceIdentifier(dBInstanceIdentifier);},public ModifyDBInstanceRequestString dBInstanceIdentifier setDBInstanceIdentifierdBInstanceIdentifier
public GetTemplateSummaryResult getTemplateSummary(GetTemplateSummaryRequest request) {request = beforeClientExecution(request);return executeGetTemplateSummary(request);},public GetTemplateSummaryResult getTemplateSummaryGetTemplateSummaryRequest request request  beforeClientExecutionrequestreturn executeGetTemplateSummaryrequest
public Snapshot revokeSnapshotAccess(RevokeSnapshotAccessRequest request) {request = beforeClientExecution(request);return executeRevokeSnapshotAccess(request);},public Snapshot revokeSnapshotAccessRevokeSnapshotAccessRequest request request  beforeClientExecutionrequestreturn executeRevokeSnapshotAccessrequest
"public void serialize(final LittleEndianOutput out) {final int field_4_name_length = field_6_name_text.length();final int field_5_comment_length = field_7_comment_text.length();out.writeShort(field_1_record_type);out.writeShort(field_2_frt_cell_ref_flag);out.writeLong(field_3_reserved);out.writeShort(field_4_name_length);out.writeShort(field_5_comment_length);boolean isNameMultiByte = StringUtil.hasMultibyte(field_6_name_text);out.writeByte(isNameMultiByte ? 1 : 0);if (isNameMultiByte) {StringUtil.putUnicodeLE(field_6_name_text, out);} else {StringUtil.putCompressedUnicode(field_6_name_text, out);}boolean isCommentMultiByte = StringUtil.hasMultibyte(field_7_comment_text);out.writeByte(isCommentMultiByte ? 1 : 0);if (isCommentMultiByte) {StringUtil.putUnicodeLE(field_7_comment_text, out);} else {StringUtil.putCompressedUnicode(field_7_comment_text, out);}}",public void serializefinal LittleEndianOutput out final int field4namelength  field6nametextlengthfinal int field5commentlength  field7commenttextlengthoutwriteShortfield1recordtypeoutwriteShortfield2frtcellrefflagoutwriteLongfield3reservedoutwriteShortfield4namelengthoutwriteShortfield5commentlengthboolean isNameMultiByte  StringUtilhasMultibytefield6nametextoutwriteByteisNameMultiByte  1  0if isNameMultiByte StringUtilputUnicodeLEfield6nametext out else StringUtilputCompressedUnicodefield6nametext outboolean isCommentMultiByte  StringUtilhasMultibytefield7commenttextoutwriteByteisCommentMultiByte  1  0if isCommentMultiByte StringUtilputUnicodeLEfield7commenttext out else StringUtilputCompressedUnicodefield7commenttext out
public StartProjectVersionResult startProjectVersion(StartProjectVersionRequest request) {request = beforeClientExecution(request);return executeStartProjectVersion(request);},public StartProjectVersionResult startProjectVersionStartProjectVersionRequest request request  beforeClientExecutionrequestreturn executeStartProjectVersionrequest
"public MoPenDeleteGroupMemberRequest() {super(""MoPen"", ""2018-02-11"", ""MoPenDeleteGroupMember"", ""mopen"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public MoPenDeleteGroupMemberRequest superMoPen 20180211 MoPenDeleteGroupMember mopensetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public synchronized int getMax() {return mMax;},public synchronized int getMax return mMax
public DiffCommand setSourcePrefix(String sourcePrefix) {this.sourcePrefix = sourcePrefix;return this;},public DiffCommand setSourcePrefixString sourcePrefix thissourcePrefix  sourcePrefixreturn this
public CreateFlowLogsResult createFlowLogs(CreateFlowLogsRequest request) {request = beforeClientExecution(request);return executeCreateFlowLogs(request);},public CreateFlowLogsResult createFlowLogsCreateFlowLogsRequest request request  beforeClientExecutionrequestreturn executeCreateFlowLogsrequest
"public void writeString(String text, int numberOfRichTextRuns, int extendedDataSize) {boolean is16bitEncoded = StringUtil.hasMultibyte(text);int keepTogetherSize = 2 + 1 + 1; int optionFlags = 0x00;if (is16bitEncoded) {optionFlags |= 0x01;keepTogetherSize += 1; }if (numberOfRichTextRuns > 0) {optionFlags |= 0x08;keepTogetherSize += 2;}if (extendedDataSize > 0) {optionFlags |= 0x04;keepTogetherSize += 4;}writeContinueIfRequired(keepTogetherSize);writeShort(text.length());writeByte(optionFlags);if (numberOfRichTextRuns > 0) {writeShort(numberOfRichTextRuns);}if (extendedDataSize > 0) {writeInt(extendedDataSize);}writeCharacterData(text, is16bitEncoded);}",public void writeStringString text int numberOfRichTextRuns int extendedDataSize boolean is16bitEncoded  StringUtilhasMultibytetextint keepTogetherSize  2  1  1 int optionFlags  0x00if is16bitEncoded optionFlags  0x01keepTogetherSize  1 if numberOfRichTextRuns  0 optionFlags  0x08keepTogetherSize  2if extendedDataSize  0 optionFlags  0x04keepTogetherSize  4writeContinueIfRequiredkeepTogetherSizewriteShorttextlengthwriteByteoptionFlagsif numberOfRichTextRuns  0 writeShortnumberOfRichTextRunsif extendedDataSize  0 writeIntextendedDataSizewriteCharacterDatatext is16bitEncoded
"public String toFormulaString(String[] operands) {StringBuilder buf = new StringBuilder();if(isExternalFunction()) {buf.append(operands[0]); appendArgs(buf, 1, operands);} else {buf.append(getName());appendArgs(buf, 0, operands);}return buf.toString();}",public String toFormulaStringString operands StringBuilder buf  new StringBuilderifisExternalFunction bufappendoperands0 appendArgsbuf 1 operands else bufappendgetNameappendArgsbuf 0 operandsreturn buftoString
public DetectStackDriftResult detectStackDrift(DetectStackDriftRequest request) {request = beforeClientExecution(request);return executeDetectStackDrift(request);},public DetectStackDriftResult detectStackDriftDetectStackDriftRequest request request  beforeClientExecutionrequestreturn executeDetectStackDriftrequest
public ObjectId idFor(TreeFormatter formatter) {return delegate().idFor(formatter);},public ObjectId idForTreeFormatter formatter return delegateidForformatter
"public CharSequence toQueryString(EscapeQuerySyntax escaper) {if (isDefaultField(this.field)) {return getTermEscaped(escaper);} else {return this.field + "":"" + getTermEscaped(escaper);}}",public CharSequence toQueryStringEscapeQuerySyntax escaper if isDefaultFieldthisfield return getTermEscapedescaper else return thisfield    getTermEscapedescaper
public RenderUiTemplateResult renderUiTemplate(RenderUiTemplateRequest request) {request = beforeClientExecution(request);return executeRenderUiTemplate(request);},public RenderUiTemplateResult renderUiTemplateRenderUiTemplateRequest request request  beforeClientExecutionrequestreturn executeRenderUiTemplaterequest
public final LongBuffer asLongBuffer() {return LongToByteBufferAdapter.asLongBuffer(this);},public final LongBuffer asLongBuffer return LongToByteBufferAdapterasLongBufferthis
public DescribeLimitsResult describeLimits(DescribeLimitsRequest request) {request = beforeClientExecution(request);return executeDescribeLimits(request);},public DescribeLimitsResult describeLimitsDescribeLimitsRequest request request  beforeClientExecutionrequestreturn executeDescribeLimitsrequest
public DescribeAssessmentTargetsResult describeAssessmentTargets(DescribeAssessmentTargetsRequest request) {request = beforeClientExecution(request);return executeDescribeAssessmentTargets(request);},public DescribeAssessmentTargetsResult describeAssessmentTargetsDescribeAssessmentTargetsRequest request request  beforeClientExecutionrequestreturn executeDescribeAssessmentTargetsrequest
public DeleteClientVpnRouteResult deleteClientVpnRoute(DeleteClientVpnRouteRequest request) {request = beforeClientExecution(request);return executeDeleteClientVpnRoute(request);},public DeleteClientVpnRouteResult deleteClientVpnRouteDeleteClientVpnRouteRequest request request  beforeClientExecutionrequestreturn executeDeleteClientVpnRouterequest
"public RebaseCommand setUpstream(AnyObjectId upstream) {try {this.upstreamCommit = walk.parseCommit(upstream);this.upstreamCommitName = upstream.name();} catch (IOException e) {throw new JGitInternalException(MessageFormat.format(JGitText.get().couldNotReadObjectWhileParsingCommit,upstream.name()), e);}return this;}",public RebaseCommand setUpstreamAnyObjectId upstream try thisupstreamCommit  walkparseCommitupstreamthisupstreamCommitName  upstreamname catch IOException e throw new JGitInternalExceptionMessageFormatformatJGitTextgetcouldNotReadObjectWhileParsingCommitupstreamname ereturn this
"public Collection<ChildScorable> getChildren() {return Collections.singleton(new ChildScorable(in, ""CACHED""));}",public CollectionChildScorable getChildren return Collectionssingletonnew ChildScorablein CACHED
public synchronized String substring(int start) {return super.substring(start);},public synchronized String substringint start return supersubstringstart
public static double sum(double[] values) {double sum = 0;for (double value : values) {sum += value;}return sum;},public static double sumdouble values double sum  0for double value  values sum  valuereturn sum
public static BlankRecord[] convertBlankRecords(MulBlankRecord mbk) {BlankRecord[] mulRecs = new BlankRecord[mbk.getNumColumns()];for (int k = 0; k < mbk.getNumColumns(); k++) {BlankRecord br = new BlankRecord();br.setColumn((short) (k + mbk.getFirstColumn()));br.setRow(mbk.getRow());br.setXFIndex(mbk.getXFAt(k));mulRecs[k] = br;}return mulRecs;},public static BlankRecord convertBlankRecordsMulBlankRecord mbk BlankRecord mulRecs  new BlankRecordmbkgetNumColumnsfor int k  0 k  mbkgetNumColumns k BlankRecord br  new BlankRecordbrsetColumnshort k  mbkgetFirstColumnbrsetRowmbkgetRowbrsetXFIndexmbkgetXFAtkmulRecsk  brreturn mulRecs
public DeregisterDBProxyTargetsResult deregisterDBProxyTargets(DeregisterDBProxyTargetsRequest request) {request = beforeClientExecution(request);return executeDeregisterDBProxyTargets(request);},public DeregisterDBProxyTargetsResult deregisterDBProxyTargetsDeregisterDBProxyTargetsRequest request request  beforeClientExecutionrequestreturn executeDeregisterDBProxyTargetsrequest
"public SummaryInformation(final PropertySet ps) throws UnexpectedPropertySetTypeException {super(ps);if (!isSummaryInformation()) {throw new UnexpectedPropertySetTypeException(""Not a "" + getClass().getName());}}",public SummaryInformationfinal PropertySet ps throws UnexpectedPropertySetTypeException superpsif isSummaryInformation throw new UnexpectedPropertySetTypeExceptionNot a   getClassgetName
public void setCredentialsProvider(AlibabaCloudCredentialsProvider credentialsProvider) {if (credential != null) {return;}credential = new CredentialsBackupCompatibilityAdaptor(credentialsProvider);},public void setCredentialsProviderAlibabaCloudCredentialsProvider credentialsProvider if credential  null returncredential  new CredentialsBackupCompatibilityAdaptorcredentialsProvider
"public CharArrayReader(char[] buf, int offset, int length) {if (offset < 0 || offset > buf.length || length < 0 || offset + length < 0) {throw new IllegalArgumentException();}this.buf = buf;this.pos = offset;this.markedPos = offset;int bufferLength = buf.length;this.count = offset + length < bufferLength ? length : bufferLength;}",public CharArrayReaderchar buf int offset int length if offset  0  offset  buflength  length  0  offset  length  0 throw new IllegalArgumentExceptionthisbuf  bufthispos  offsetthismarkedPos  offsetint bufferLength  buflengththiscount  offset  length  bufferLength  length  bufferLength
public Object getProperty(final long id) {wasNull = !properties.containsKey(id);return (wasNull) ? null : properties.get(id).getValue();},public Object getPropertyfinal long id wasNull  propertiescontainsKeyidreturn wasNull  null  propertiesgetidgetValue
"public BufferedOutputStream(OutputStream out, int size) {super(out);if (size <= 0) {throw new IllegalArgumentException(""size <= 0"");}buf = new byte[size];}",public BufferedOutputStreamOutputStream out int size superoutif size  0 throw new IllegalArgumentExceptionsize  0buf  new bytesize
public AuthorizeDBSecurityGroupIngressRequest(String dBSecurityGroupName) {setDBSecurityGroupName(dBSecurityGroupName);},public AuthorizeDBSecurityGroupIngressRequestString dBSecurityGroupName setDBSecurityGroupNamedBSecurityGroupName
public ArrayDataSource(T[] elements) {this.elements = elements.clone();},public ArrayDataSourceT elements thiselements  elementsclone
public CreateDeploymentResult createDeployment(CreateDeploymentRequest request) {request = beforeClientExecution(request);return executeCreateDeployment(request);},public CreateDeploymentResult createDeploymentCreateDeploymentRequest request request  beforeClientExecutionrequestreturn executeCreateDeploymentrequest
"public final int getInt() {int newPosition = position + SizeOf.INT;if (newPosition > limit) {throw new BufferUnderflowException();}int result = Memory.peekInt(backingArray, offset + position, order);position = newPosition;return result;}",public final int getInt int newPosition  position  SizeOfINTif newPosition  limit throw new BufferUnderflowExceptionint result  MemorypeekIntbackingArray offset  position orderposition  newPositionreturn result
public DeleteTransitGatewayRouteResult deleteTransitGatewayRoute(DeleteTransitGatewayRouteRequest request) {request = beforeClientExecution(request);return executeDeleteTransitGatewayRoute(request);},public DeleteTransitGatewayRouteResult deleteTransitGatewayRouteDeleteTransitGatewayRouteRequest request request  beforeClientExecutionrequestreturn executeDeleteTransitGatewayRouterequest
public ListMultipartUploadsRequest(String bucketName) {this.bucketName = bucketName;},public ListMultipartUploadsRequestString bucketName thisbucketName  bucketName
"public float score(float freq, long norm) {return (float) SimilarityBase.this.score(stats, freq, getLengthValue(norm));}",public float scorefloat freq long norm return float SimilarityBasethisscorestats freq getLengthValuenorm
public char next() {if (offset >= (end - 1)) {offset = end;return DONE;}return string.charAt(++offset);},public char next if offset  end  1 offset  endreturn DONEreturn stringcharAtoffset
"public CherryPickResult(RevCommit newHead, List<Ref> cherryPickedRefs) {this.status = CherryPickStatus.OK;this.newHead = newHead;this.cherryPickedRefs = cherryPickedRefs;this.failingPaths = null;}",public CherryPickResultRevCommit newHead ListRef cherryPickedRefs thisstatus  CherryPickStatusOKthisnewHead  newHeadthischerryPickedRefs  cherryPickedRefsthisfailingPaths  null
"public static Token newToken(int ofKind){return newToken(ofKind, null);}",public static Token newTokenint ofKindreturn newTokenofKind null
"public HSSFClientAnchor getPreferredSize(double scale){return getPreferredSize(scale, scale);}",public HSSFClientAnchor getPreferredSizedouble scalereturn getPreferredSizescale scale
"public UpdateInstanceRequest() {super(""Ots"", ""2016-06-20"", ""UpdateInstance"", ""ots"");setMethod(MethodType.POST);}",public UpdateInstanceRequest superOts 20160620 UpdateInstance otssetMethodMethodTypePOST
"public ByteBuffer putInt(int index, int value) {checkIndex(index, SizeOf.INT);Memory.pokeInt(backingArray, offset + index, value, order);return this;}",public ByteBuffer putIntint index int value checkIndexindex SizeOfINTMemorypokeIntbackingArray offset  index value orderreturn this
"public byte[] serialize() {int size = getDataSize() + 4;ByteArrayOutputStream baos = new ByteArrayOutputStream(size);serialize(new LittleEndianOutputStream(baos));if (baos.size() != size) {throw new RuntimeException(""write size mismatch"");}return baos.toByteArray();}",public byte serialize int size  getDataSize  4ByteArrayOutputStream baos  new ByteArrayOutputStreamsizeserializenew LittleEndianOutputStreambaosif baossize  size throw new RuntimeExceptionwrite size mismatchreturn baostoByteArray
public GetFieldLevelEncryptionProfileResult getFieldLevelEncryptionProfile(GetFieldLevelEncryptionProfileRequest request) {request = beforeClientExecution(request);return executeGetFieldLevelEncryptionProfile(request);},public GetFieldLevelEncryptionProfileResult getFieldLevelEncryptionProfileGetFieldLevelEncryptionProfileRequest request request  beforeClientExecutionrequestreturn executeGetFieldLevelEncryptionProfilerequest
"public void serialize(LittleEndianOutput out) {out.writeShort(field_1_number_of_sheets);if(isExternalReferences()) {StringUtil.writeUnicodeString(out, field_2_encoded_url);for (String field_3_sheet_name : field_3_sheet_names) {StringUtil.writeUnicodeString(out, field_3_sheet_name);}} else {int field2val = _isAddInFunctions ? TAG_ADD_IN_FUNCTIONS : TAG_INTERNAL_REFERENCES;out.writeShort(field2val);}}",public void serializeLittleEndianOutput out outwriteShortfield1numberofsheetsifisExternalReferences StringUtilwriteUnicodeStringout field2encodedurlfor String field3sheetname  field3sheetnames StringUtilwriteUnicodeStringout field3sheetname else int field2val  isAddInFunctions  TAGADDINFUNCTIONS  TAGINTERNALREFERENCESoutwriteShortfield2val
"public BitsSlice(Bits parent, ReaderSlice slice) {this.parent = parent;this.start = slice.start;this.length = slice.length;assert length >= 0: ""length="" + length;}",public BitsSliceBits parent ReaderSlice slice thisparent  parentthisstart  slicestartthislength  slicelengthassert length  0 length  length
public void removeName(Name name) {int index = getNameIndex((HSSFName) name);removeName(index);},public void removeNameName name int index  getNameIndexHSSFName nameremoveNameindex
public ListConfigurationRevisionsResult listConfigurationRevisions(ListConfigurationRevisionsRequest request) {request = beforeClientExecution(request);return executeListConfigurationRevisions(request);},public ListConfigurationRevisionsResult listConfigurationRevisionsListConfigurationRevisionsRequest request request  beforeClientExecutionrequestreturn executeListConfigurationRevisionsrequest
public ObjectStream openStream() {return new ObjectStream.SmallStream(this);},public ObjectStream openStream return new ObjectStreamSmallStreamthis
public boolean delete() {return directory.delete();},public boolean delete return directorydelete
public void clear(){_limit = 0;},public void clearlimit  0
public void setMaxObjectSizeLimit(long limit) {maxObjectSizeLimit = limit;},public void setMaxObjectSizeLimitlong limit maxObjectSizeLimit  limit
public DescribeEventSubscriptionsResult describeEventSubscriptions(DescribeEventSubscriptionsRequest request) {request = beforeClientExecution(request);return executeDescribeEventSubscriptions(request);},public DescribeEventSubscriptionsResult describeEventSubscriptionsDescribeEventSubscriptionsRequest request request  beforeClientExecutionrequestreturn executeDescribeEventSubscriptionsrequest
"public boolean startEvaluate(FormulaCellCacheEntry cce) {if (cce == null) {throw new IllegalArgumentException(""cellLoc must not be null"");}if (_currentlyEvaluatingCells.contains(cce)) {return false;}_currentlyEvaluatingCells.add(cce);_evaluationFrames.add(new CellEvaluationFrame(cce));return true;}",public boolean startEvaluateFormulaCellCacheEntry cce if cce  null throw new IllegalArgumentExceptioncellLoc must not be nullif currentlyEvaluatingCellscontainscce return falsecurrentlyEvaluatingCellsaddcceevaluationFramesaddnew CellEvaluationFrameccereturn true
"public void serialize(LittleEndianOutput out) {out.writeShort(sid);out.writeShort(_cbFContinued);if (_linkPtg == null) {out.writeShort(0);} else {int formulaSize = _linkPtg.getSize();int linkSize = formulaSize + 6;if (_unknownPostFormulaByte != null) {linkSize++;}out.writeShort(linkSize);out.writeShort(formulaSize);out.writeInt(_unknownPreFormulaInt);_linkPtg.write(out);if (_unknownPostFormulaByte != null) {out.writeByte(_unknownPostFormulaByte.intValue());}}out.writeShort(_cLines);out.writeShort(_iSel);out.writeShort(_flags);out.writeShort(_idEdit);if(_dropData != null) {_dropData.serialize(out);}if(_rgLines != null) {for(String str : _rgLines){StringUtil.writeUnicodeString(out, str);}}if(_bsels != null) {for(boolean val : _bsels){out.writeByte(val ? 1 : 0);}}}",public void serializeLittleEndianOutput out outwriteShortsidoutwriteShortcbFContinuedif linkPtg  null outwriteShort0 else int formulaSize  linkPtggetSizeint linkSize  formulaSize  6if unknownPostFormulaByte  null linkSizeoutwriteShortlinkSizeoutwriteShortformulaSizeoutwriteIntunknownPreFormulaIntlinkPtgwriteoutif unknownPostFormulaByte  null outwriteByteunknownPostFormulaByteintValueoutwriteShortcLinesoutwriteShortiSeloutwriteShortflagsoutwriteShortidEditifdropData  null dropDataserializeoutifrgLines  null forString str  rgLinesStringUtilwriteUnicodeStringout strifbsels  null forboolean val  bselsoutwriteByteval  1  0
"public void remove(int el) {if ( readonly ) throw new IllegalStateException(""can't alter readonly IntervalSet"");int n = intervals.size();for (int i = 0; i < n; i++) {Interval I = intervals.get(i);int a = I.a;int b = I.b;if ( el<a ) {break; }if ( el==a && el==b ) {intervals.remove(i);break;}if ( el==a ) {I.a++;break;}if ( el==b ) {I.b--;break;}if ( el>a && el<b ) { int oldb = I.b;I.b = el-1;      add(el+1, oldb); }}}",public void removeint el if  readonly  throw new IllegalStateExceptioncant alter readonly IntervalSetint n  intervalssizefor int i  0 i  n i Interval I  intervalsgetiint a  Iaint b  Ibif  ela  break if  ela  elb  intervalsremoveibreakif  ela  Iabreakif  elb  Ibbreakif  ela  elb   int oldb  IbIb  el1      addel1 oldb 
public IntegerList toIntegerList() {IntegerList values = new IntegerList(size());int n = intervals.size();for (int i = 0; i < n; i++) {Interval I = intervals.get(i);int a = I.a;int b = I.b;for (int v=a; v<=b; v++) {values.add(v);}}return values;},public IntegerList toIntegerList IntegerList values  new IntegerListsizeint n  intervalssizefor int i  0 i  n i Interval I  intervalsgetiint a  Iaint b  Ibfor int va vb v valuesaddvreturn values
@Override public void clear() {AbstractMultimap.this.clear();},Override public void clear AbstractMultimapthisclear
public CharsRef pullNext() {assert upto < count;lastEndOffset = endOffsets[upto];lastPosLength = posLengths[upto];final CharsRefBuilder result = outputs[upto++];posIncr = 0;if (upto == count) {reset();}return result.get();},public CharsRef pullNext assert upto  countlastEndOffset  endOffsetsuptolastPosLength  posLengthsuptofinal CharsRefBuilder result  outputsuptoposIncr  0if upto  count resetreturn resultget
"public FSTTermsWriter(SegmentWriteState state, PostingsWriterBase postingsWriter) throws IOException {final String termsFileName = IndexFileNames.segmentFileName(state.segmentInfo.name, state.segmentSuffix, TERMS_EXTENSION);this.postingsWriter = postingsWriter;this.fieldInfos = state.fieldInfos;this.out = state.directory.createOutput(termsFileName, state.context);this.maxDoc = state.segmentInfo.maxDoc();boolean success = false;try {CodecUtil.writeIndexHeader(out, TERMS_CODEC_NAME, TERMS_VERSION_CURRENT,state.segmentInfo.getId(), state.segmentSuffix);this.postingsWriter.init(out, state);success = true;} finally {if (!success) {IOUtils.closeWhileHandlingException(out);}}}",public FSTTermsWriterSegmentWriteState state PostingsWriterBase postingsWriter throws IOException final String termsFileName  IndexFileNamessegmentFileNamestatesegmentInfoname statesegmentSuffix TERMSEXTENSIONthispostingsWriter  postingsWriterthisfieldInfos  statefieldInfosthisout  statedirectorycreateOutputtermsFileName statecontextthismaxDoc  statesegmentInfomaxDocboolean success  falsetry CodecUtilwriteIndexHeaderout TERMSCODECNAME TERMSVERSIONCURRENTstatesegmentInfogetId statesegmentSuffixthispostingsWriterinitout statesuccess  true finally if success IOUtilscloseWhileHandlingExceptionout
"public int compareTo(Cell other) {return Double.compare(distanceSortKey, other.distanceSortKey);}",public int compareToCell other return DoublecomparedistanceSortKey otherdistanceSortKey
public ListAccountSettingsResult listAccountSettings(ListAccountSettingsRequest request) {request = beforeClientExecution(request);return executeListAccountSettings(request);},public ListAccountSettingsResult listAccountSettingsListAccountSettingsRequest request request  beforeClientExecutionrequestreturn executeListAccountSettingsrequest
"public boolean find() {matchFound = findNextImpl(address, input, matchOffsets);if (matchFound) {findPos = matchOffsets[1];}return matchFound;}",public boolean find matchFound  findNextImpladdress input matchOffsetsif matchFound findPos  matchOffsets1return matchFound
public V next()        { return super.nextEntry().value; },public V next         return supernextEntryvalue 
public DescribeLocalGatewaysResult describeLocalGateways(DescribeLocalGatewaysRequest request) {request = beforeClientExecution(request);return executeDescribeLocalGateways(request);},public DescribeLocalGatewaysResult describeLocalGatewaysDescribeLocalGatewaysRequest request request  beforeClientExecutionrequestreturn executeDescribeLocalGatewaysrequest
"public ByteArrayDataInput(byte[] bytes, int offset, int len) {reset(bytes, offset, len);}",public ByteArrayDataInputbyte bytes int offset int len resetbytes offset len
"public String toString() {return super.toString() + "":"" + revstr; }",public String toString return supertoString    revstr 
public RegisterCrossAccountAccessRoleResult registerCrossAccountAccessRole(RegisterCrossAccountAccessRoleRequest request) {request = beforeClientExecution(request);return executeRegisterCrossAccountAccessRole(request);},public RegisterCrossAccountAccessRoleResult registerCrossAccountAccessRoleRegisterCrossAccountAccessRoleRequest request request  beforeClientExecutionrequestreturn executeRegisterCrossAccountAccessRolerequest
public void clear() {ConcurrentHashMap.this.clear();},public void clear ConcurrentHashMapthisclear
public DescribeFileSystemsResult describeFileSystems(DescribeFileSystemsRequest request) {request = beforeClientExecution(request);return executeDescribeFileSystems(request);},public DescribeFileSystemsResult describeFileSystemsDescribeFileSystemsRequest request request  beforeClientExecutionrequestreturn executeDescribeFileSystemsrequest
"public ReverseStringFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public ReverseStringFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public Builder() {this(true);},public Builder thistrue
public TokenStream create(TokenStream input) {return new IrishLowerCaseFilter(input);},public TokenStream createTokenStream input return new IrishLowerCaseFilterinput
public GetQualificationTypeResult getQualificationType(GetQualificationTypeRequest request) {request = beforeClientExecution(request);return executeGetQualificationType(request);},public GetQualificationTypeResult getQualificationTypeGetQualificationTypeRequest request request  beforeClientExecutionrequestreturn executeGetQualificationTyperequest
"public ThreeWayMerger newMerger(Repository db, boolean inCore) {return new ResolveMerger(db, inCore);}",public ThreeWayMerger newMergerRepository db boolean inCore return new ResolveMergerdb inCore
public String getNameText(int definedNameIndex) {return _externalNameRecords[definedNameIndex].getText();},public String getNameTextint definedNameIndex return externalNameRecordsdefinedNameIndexgetText
"public PlotWalk(Repository repo) {super(repo);super.sort(RevSort.TOPO, true);additionalRefMap = new HashMap<>();repository = repo;}",public PlotWalkRepository repo superreposupersortRevSortTOPO trueadditionalRefMap  new HashMaprepository  repo
public SubscribeToDatasetResult subscribeToDataset(SubscribeToDatasetRequest request) {request = beforeClientExecution(request);return executeSubscribeToDataset(request);},public SubscribeToDatasetResult subscribeToDatasetSubscribeToDatasetRequest request request  beforeClientExecutionrequestreturn executeSubscribeToDatasetrequest
"public StringBuilder append(char[] str, int offset, int len) {append0(str, offset, len);return this;}",public StringBuilder appendchar str int offset int len append0str offset lenreturn this
"public synchronized int indexOf(String subString, int start) {return super.indexOf(subString, start);}",public synchronized int indexOfString subString int start return superindexOfsubString start
"public List<E> subList(int from, int to) {Object[] snapshot = elements;if (from < 0 || from > to || to > snapshot.length) {throw new IndexOutOfBoundsException(""from="" + from + "", to="" + to +"", list size="" + snapshot.length);}return new CowSubList(snapshot, from, to);}",public ListE subListint from int to Object snapshot  elementsif from  0  from  to  to  snapshotlength throw new IndexOutOfBoundsExceptionfrom  from   to  to  list size  snapshotlengthreturn new CowSubListsnapshot from to
public Severity getSeverity() {return severity;},public Severity getSeverity return severity
public DescribeBundleTasksResult describeBundleTasks() {return describeBundleTasks(new DescribeBundleTasksRequest());},public DescribeBundleTasksResult describeBundleTasks return describeBundleTasksnew DescribeBundleTasksRequest
"public BooleanQuery build() {return new BooleanQuery(minimumNumberShouldMatch, clauses.toArray(new BooleanClause[0]));}",public BooleanQuery build return new BooleanQueryminimumNumberShouldMatch clausestoArraynew BooleanClause0
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[HIDEOBJ]\n"");buffer.append(""    .hideobj         = "").append(Integer.toHexString(getHideObj())).append(""\n"");buffer.append(""[/HIDEOBJ]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendHIDEOBJnbufferappend    hideobj          appendIntegertoHexStringgetHideObjappendnbufferappendHIDEOBJnreturn buffertoString
"public UseSelFSRecord(boolean b) {this(0);_options = useNaturalLanguageFormulasFlag.setBoolean(_options, b);}",public UseSelFSRecordboolean b this0options  useNaturalLanguageFormulasFlagsetBooleanoptions b
public boolean equals( Object o ) {return o instanceof RomanianStemmer;},public boolean equals Object o  return o instanceof RomanianStemmer
public AbortMultipartUploadResult abortMultipartUpload(AbortMultipartUploadRequest request) {request = beforeClientExecution(request);return executeAbortMultipartUpload(request);},public AbortMultipartUploadResult abortMultipartUploadAbortMultipartUploadRequest request request  beforeClientExecutionrequestreturn executeAbortMultipartUploadrequest
public void reportMatch(Parser recognizer) {endErrorCondition(recognizer);},public void reportMatchParser recognizer endErrorConditionrecognizer
public ModifyVpnConnectionResult modifyVpnConnection(ModifyVpnConnectionRequest request) {request = beforeClientExecution(request);return executeModifyVpnConnection(request);},public ModifyVpnConnectionResult modifyVpnConnectionModifyVpnConnectionRequest request request  beforeClientExecutionrequestreturn executeModifyVpnConnectionrequest
public GetSendStatisticsResult getSendStatistics() {return getSendStatistics(new GetSendStatisticsRequest());},public GetSendStatisticsResult getSendStatistics return getSendStatisticsnew GetSendStatisticsRequest
public CreateVoiceConnectorGroupResult createVoiceConnectorGroup(CreateVoiceConnectorGroupRequest request) {request = beforeClientExecution(request);return executeCreateVoiceConnectorGroup(request);},public CreateVoiceConnectorGroupResult createVoiceConnectorGroupCreateVoiceConnectorGroupRequest request request  beforeClientExecutionrequestreturn executeCreateVoiceConnectorGrouprequest
"public InitiateJobRequest(String vaultName, JobParameters jobParameters) {setVaultName(vaultName);setJobParameters(jobParameters);}",public InitiateJobRequestString vaultName JobParameters jobParameters setVaultNamevaultNamesetJobParametersjobParameters
"public MatchResult toMatchResult() {ensureMatch();return new MatchResultImpl(input, matchOffsets);}",public MatchResult toMatchResult ensureMatchreturn new MatchResultImplinput matchOffsets
public static String getInflectedFormTranslation(String s) {return inflFormTranslations.get(s);},public static String getInflectedFormTranslationString s return inflFormTranslationsgets
"public static ErrPtg valueOf(int code) {switch(FormulaError.forInt(code)) {case DIV0: return DIV_ZERO;case NA: return N_A;case NAME: return NAME_INVALID;case NULL: return NULL_INTERSECTION;case NUM: return NUM_ERROR;case REF: return REF_INVALID;case VALUE: return VALUE_INVALID;default:throw new RuntimeException(""Unexpected error code ("" + code + "")"");}}",public static ErrPtg valueOfint code switchFormulaErrorforIntcode case DIV0 return DIVZEROcase NA return NAcase NAME return NAMEINVALIDcase NULL return NULLINTERSECTIONcase NUM return NUMERRORcase REF return REFINVALIDcase VALUE return VALUEINVALIDdefaultthrow new RuntimeExceptionUnexpected error code   code  
public GetBasePathMappingResult getBasePathMapping(GetBasePathMappingRequest request) {request = beforeClientExecution(request);return executeGetBasePathMapping(request);},public GetBasePathMappingResult getBasePathMappingGetBasePathMappingRequest request request  beforeClientExecutionrequestreturn executeGetBasePathMappingrequest
public void fromObjectId(AnyObjectId src) {this.w1 = src.w1;this.w2 = src.w2;this.w3 = src.w3;this.w4 = src.w4;this.w5 = src.w5;},public void fromObjectIdAnyObjectId src thisw1  srcw1thisw2  srcw2thisw3  srcw3thisw4  srcw4thisw5  srcw5
"public static List<? extends Tree> getAncestors(Tree t) {if ( t.getParent()==null ) return Collections.emptyList();List<Tree> ancestors = new ArrayList<Tree>();t = t.getParent();while ( t!=null ) {ancestors.add(0, t); t = t.getParent();}return ancestors;}",public static List extends Tree getAncestorsTree t if  tgetParentnull  return CollectionsemptyListListTree ancestors  new ArrayListTreet  tgetParentwhile  tnull  ancestorsadd0 t t  tgetParentreturn ancestors
public GetUsagePlanResult getUsagePlan(GetUsagePlanRequest request) {request = beforeClientExecution(request);return executeGetUsagePlan(request);},public GetUsagePlanResult getUsagePlanGetUsagePlanRequest request request  beforeClientExecutionrequestreturn executeGetUsagePlanrequest
public UpdateLoadBalancerAttributeResult updateLoadBalancerAttribute(UpdateLoadBalancerAttributeRequest request) {request = beforeClientExecution(request);return executeUpdateLoadBalancerAttribute(request);},public UpdateLoadBalancerAttributeResult updateLoadBalancerAttributeUpdateLoadBalancerAttributeRequest request request  beforeClientExecutionrequestreturn executeUpdateLoadBalancerAttributerequest
"public void addResult(int n, boolean isRelevant, long docNameExtractTime) {if (Math.abs(numPoints+1 - n) > 1E-6) {throw new IllegalArgumentException(""point ""+n+"" illegal after ""+numPoints+"" points!"");}if (isRelevant) {numGoodPoints+=1;recallPoints.add(new RecallPoint(n,numGoodPoints));if (recallPoints.size()==1 && n<=5) { mrr =  1.0 / n;}}numPoints = n;double p = numGoodPoints / numPoints;if (isRelevant) {pReleventSum += p;}if (n<pAt.length) {pAt[n] = p;}recall = maxGoodPoints<=0 ? p : numGoodPoints/maxGoodPoints;docNamesExtractTime += docNameExtractTime;}",public void addResultint n boolean isRelevant long docNameExtractTime if MathabsnumPoints1  n  1E6 throw new IllegalArgumentExceptionpoint n illegal after numPoints pointsif isRelevant numGoodPoints1recallPointsaddnew RecallPointnnumGoodPointsif recallPointssize1  n5  mrr   10  nnumPoints  ndouble p  numGoodPoints  numPointsif isRelevant pReleventSum  pif npAtlength pAtn  precall  maxGoodPoints0  p  numGoodPointsmaxGoodPointsdocNamesExtractTime  docNameExtractTime
public UpdateExperimentResult updateExperiment(UpdateExperimentRequest request) {request = beforeClientExecution(request);return executeUpdateExperiment(request);},public UpdateExperimentResult updateExperimentUpdateExperimentRequest request request  beforeClientExecutionrequestreturn executeUpdateExperimentrequest
"public String toString() {return ""("" + a.toString() + "" AND "" + b.toString() + "")"";}",public String toString return   atoString   AND   btoString  
public String getAccessKeyId() {return accessKeyId;},public String getAccessKeyId return accessKeyId
public GetBulkPublishDetailsResult getBulkPublishDetails(GetBulkPublishDetailsRequest request) {request = beforeClientExecution(request);return executeGetBulkPublishDetails(request);},public GetBulkPublishDetailsResult getBulkPublishDetailsGetBulkPublishDetailsRequest request request  beforeClientExecutionrequestreturn executeGetBulkPublishDetailsrequest
"public static byte[] grow(byte[] array) {return grow(array, 1 + array.length);}",public static byte growbyte array return growarray 1  arraylength
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1,ValueEval arg2) {double result;try {result = evaluate(evalArg(arg0, srcRowIndex, srcColumnIndex), evalArg(arg1, srcRowIndex, srcColumnIndex), evalArg(arg2, srcRowIndex, srcColumnIndex));} catch (EvaluationException e) {return e.getErrorEval();}return new NumberEval(result);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1ValueEval arg2 double resulttry result  evaluateevalArgarg0 srcRowIndex srcColumnIndex evalArgarg1 srcRowIndex srcColumnIndex evalArgarg2 srcRowIndex srcColumnIndex catch EvaluationException e return egetErrorEvalreturn new NumberEvalresult
"public static final int hash32(final byte[] data, int offset, int len) {return MurmurHash2.hash(data, 0x9747b28c, offset, len);}",public static final int hash32final byte data int offset int len return MurmurHash2hashdata 0x9747b28c offset len
"public static Formula create(Ptg[] ptgs) {if (ptgs == null || ptgs.length < 1) {return EMPTY;}int totalSize = Ptg.getEncodedSize(ptgs);byte[] encodedData = new byte[totalSize];Ptg.serializePtgs(ptgs, encodedData, 0);int encodedTokenLen = Ptg.getEncodedSizeWithoutArrayData(ptgs);return new Formula(encodedData, encodedTokenLen);}",public static Formula createPtg ptgs if ptgs  null  ptgslength  1 return EMPTYint totalSize  PtggetEncodedSizeptgsbyte encodedData  new bytetotalSizePtgserializePtgsptgs encodedData 0int encodedTokenLen  PtggetEncodedSizeWithoutArrayDataptgsreturn new FormulaencodedData encodedTokenLen
public String toString(String field){return null;},public String toStringString fieldreturn null
"public static int deleteN(char s[], int pos, int len, int nChars) {assert pos + nChars <= len;if (pos + nChars < len) { System.arraycopy(s, pos + nChars, s, pos, len - pos - nChars);}return len - nChars;}",public static int deleteNchar s int pos int len int nChars assert pos  nChars  lenif pos  nChars  len  Systemarraycopys pos  nChars s pos len  pos  nCharsreturn len  nChars
public ThreadSafeProgressMonitor(ProgressMonitor pm) {this.pm = pm;this.lock = new ReentrantLock();this.mainThread = Thread.currentThread();this.workers = new AtomicInteger(0);this.pendingUpdates = new AtomicInteger(0);this.process = new Semaphore(0);},public ThreadSafeProgressMonitorProgressMonitor pm thispm  pmthislock  new ReentrantLockthismainThread  ThreadcurrentThreadthisworkers  new AtomicInteger0thispendingUpdates  new AtomicInteger0thisprocess  new Semaphore0
"public SendMessageBatchRequestEntry(String id, String messageBody) {setId(id);setMessageBody(messageBody);}",public SendMessageBatchRequestEntryString id String messageBody setIdidsetMessageBodymessageBody
public DescribeAddressResult describeAddress(DescribeAddressRequest request) {request = beforeClientExecution(request);return executeDescribeAddress(request);},public DescribeAddressResult describeAddressDescribeAddressRequest request request  beforeClientExecutionrequestreturn executeDescribeAddressrequest
"public GetEventRequest() {super(""CloudPhoto"", ""2017-07-11"", ""GetEvent"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public GetEventRequest superCloudPhoto 20170711 GetEvent cloudphotosetProtocolProtocolTypeHTTPS
public DescribeRuleResult describeRule(DescribeRuleRequest request) {request = beforeClientExecution(request);return executeDescribeRule(request);},public DescribeRuleResult describeRuleDescribeRuleRequest request request  beforeClientExecutionrequestreturn executeDescribeRulerequest
public final RevObject getObject() {return object;},public final RevObject getObject return object
"public JapaneseIterationMarkCharFilterFactory(Map<String,String> args) {super(args);normalizeKanji = getBoolean(args, NORMALIZE_KANJI_PARAM, JapaneseIterationMarkCharFilter.NORMALIZE_KANJI_DEFAULT);normalizeKana = getBoolean(args, NORMALIZE_KANA_PARAM, JapaneseIterationMarkCharFilter.NORMALIZE_KANA_DEFAULT);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public JapaneseIterationMarkCharFilterFactoryMapStringString args superargsnormalizeKanji  getBooleanargs NORMALIZEKANJIPARAM JapaneseIterationMarkCharFilterNORMALIZEKANJIDEFAULTnormalizeKana  getBooleanargs NORMALIZEKANAPARAM JapaneseIterationMarkCharFilterNORMALIZEKANADEFAULTif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public char previous() {if (--index < start) {index = start;return DONE;} else {return current();}},public char previous if index  start index  startreturn DONE else return current
"public LoggingConfig(String bucket, String prefix) {setBucket(bucket);setPrefix(prefix);}",public LoggingConfigString bucket String prefix setBucketbucketsetPrefixprefix
"public static String createSafeSheetName(final String nameProposal) {return createSafeSheetName(nameProposal, ' ');}",public static String createSafeSheetNamefinal String nameProposal return createSafeSheetNamenameProposal  
public PutMetricAlarmResult putMetricAlarm(PutMetricAlarmRequest request) {request = beforeClientExecution(request);return executePutMetricAlarm(request);},public PutMetricAlarmResult putMetricAlarmPutMetricAlarmRequest request request  beforeClientExecutionrequestreturn executePutMetricAlarmrequest
public CreateExclusionsPreviewResult createExclusionsPreview(CreateExclusionsPreviewRequest request) {request = beforeClientExecution(request);return executeCreateExclusionsPreview(request);},public CreateExclusionsPreviewResult createExclusionsPreviewCreateExclusionsPreviewRequest request request  beforeClientExecutionrequestreturn executeCreateExclusionsPreviewrequest
public OutputStream getRawStream() {return buf;},public OutputStream getRawStream return buf
public int getThreads() {return threads;},public int getThreads return threads
"public void decode(byte[] blocks, int blocksOffset, int[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final int byte0 = blocks[blocksOffset++] & 0xFF;final int byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 6) | (byte1 >>> 2);final int byte2 = blocks[blocksOffset++] & 0xFF;final int byte3 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 3) << 12) | (byte2 << 4) | (byte3 >>> 4);final int byte4 = blocks[blocksOffset++] & 0xFF;final int byte5 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte3 & 15) << 10) | (byte4 << 2) | (byte5 >>> 6);final int byte6 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte5 & 63) << 8) | byte6;}}",public void decodebyte blocks int blocksOffset int values int valuesOffset int iterations for int i  0 i  iterations i final int byte0  blocksblocksOffset  0xFFfinal int byte1  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  6  byte1  2final int byte2  blocksblocksOffset  0xFFfinal int byte3  blocksblocksOffset  0xFFvaluesvaluesOffset  byte1  3  12  byte2  4  byte3  4final int byte4  blocksblocksOffset  0xFFfinal int byte5  blocksblocksOffset  0xFFvaluesvaluesOffset  byte3  15  10  byte4  2  byte5  6final int byte6  blocksblocksOffset  0xFFvaluesvaluesOffset  byte5  63  8  byte6
public boolean eof() {assert upto + bufferOffset <= endIndex;return upto + bufferOffset == endIndex;},public boolean eof assert upto  bufferOffset  endIndexreturn upto  bufferOffset  endIndex
public ClientException(String message) {super(message);this.setErrorType(ErrorType.Client);},public ClientExceptionString message supermessagethissetErrorTypeErrorTypeClient
public static NumberRecord[] convertRKRecords(MulRKRecord mrk) {NumberRecord[] mulRecs = new NumberRecord[mrk.getNumColumns()];for (int k = 0; k < mrk.getNumColumns(); k++) {NumberRecord nr = new NumberRecord();nr.setColumn((short) (k + mrk.getFirstColumn()));nr.setRow(mrk.getRow());nr.setXFIndex(mrk.getXFAt(k));nr.setValue(mrk.getRKNumberAt(k));mulRecs[k] = nr;}return mulRecs;},public static NumberRecord convertRKRecordsMulRKRecord mrk NumberRecord mulRecs  new NumberRecordmrkgetNumColumnsfor int k  0 k  mrkgetNumColumns k NumberRecord nr  new NumberRecordnrsetColumnshort k  mrkgetFirstColumnnrsetRowmrkgetRownrsetXFIndexmrkgetXFAtknrsetValuemrkgetRKNumberAtkmulRecsk  nrreturn mulRecs
public List<ReceiveCommand> getCommands() {return Collections.unmodifiableList(commands);},public ListReceiveCommand getCommands return CollectionsunmodifiableListcommands
public UpdateVoiceConnectorResult updateVoiceConnector(UpdateVoiceConnectorRequest request) {request = beforeClientExecution(request);return executeUpdateVoiceConnector(request);},public UpdateVoiceConnectorResult updateVoiceConnectorUpdateVoiceConnectorRequest request request  beforeClientExecutionrequestreturn executeUpdateVoiceConnectorrequest
"public static String getText(int errorCode) {if(FormulaError.isValidCode(errorCode)) {return FormulaError.forInt(errorCode).getString();}return ""~non~std~err("" + errorCode + "")~"";}",public static String getTextint errorCode ifFormulaErrorisValidCodeerrorCode return FormulaErrorforInterrorCodegetStringreturn nonstderr  errorCode  
public long nextOrd() {long v = ord;ord = NO_MORE_ORDS;return v;},public long nextOrd long v  ordord  NOMOREORDSreturn v
public EntityResolver getEntityResolver () {return (theEntityResolver == this) ? null : theEntityResolver;},public EntityResolver getEntityResolver  return theEntityResolver  this  null  theEntityResolver
"public SheetRefEvaluator(WorkbookEvaluator bookEvaluator, EvaluationTracker tracker, int sheetIndex) {if (sheetIndex < 0) {throw new IllegalArgumentException(""Invalid sheetIndex: "" + sheetIndex + ""."");}_bookEvaluator = bookEvaluator;_tracker = tracker;_sheetIndex = sheetIndex;}",public SheetRefEvaluatorWorkbookEvaluator bookEvaluator EvaluationTracker tracker int sheetIndex if sheetIndex  0 throw new IllegalArgumentExceptionInvalid sheetIndex   sheetIndex  bookEvaluator  bookEvaluatortracker  trackersheetIndex  sheetIndex
public DBSecurityGroup authorizeDBSecurityGroupIngress(AuthorizeDBSecurityGroupIngressRequest request) {request = beforeClientExecution(request);return executeAuthorizeDBSecurityGroupIngress(request);},public DBSecurityGroup authorizeDBSecurityGroupIngressAuthorizeDBSecurityGroupIngressRequest request request  beforeClientExecutionrequestreturn executeAuthorizeDBSecurityGroupIngressrequest
"@Override public V put(K key, V value) {if (key == null) {return putValueForNullKey(value);}int hash = secondaryHash(key.hashCode());HashMapEntry<K, V>[] tab = table;int index = hash & (tab.length - 1);for (HashMapEntry<K, V> e = tab[index]; e != null; e = e.next) {if (e.hash == hash && key.equals(e.key)) {preModify(e);V oldValue = e.value;e.value = value;return oldValue;}}modCount++;if (size++ > threshold) {tab = doubleCapacity();index = hash & (tab.length - 1);}addNewEntry(key, value, hash, index);return null;}",Override public V putK key V value if key  null return putValueForNullKeyvalueint hash  secondaryHashkeyhashCodeHashMapEntryK V tab  tableint index  hash  tablength  1for HashMapEntryK V e  tabindex e  null e  enext if ehash  hash  keyequalsekey preModifyeV oldValue  evalueevalue  valuereturn oldValuemodCountif size  threshold tab  doubleCapacityindex  hash  tablength  1addNewEntrykey value hash indexreturn null
public GetTrafficPolicyInstanceResult getTrafficPolicyInstance(GetTrafficPolicyInstanceRequest request) {request = beforeClientExecution(request);return executeGetTrafficPolicyInstance(request);},public GetTrafficPolicyInstanceResult getTrafficPolicyInstanceGetTrafficPolicyInstanceRequest request request  beforeClientExecutionrequestreturn executeGetTrafficPolicyInstancerequest
"public Message(Content subject, Body body) {setSubject(subject);setBody(body);}",public MessageContent subject Body body setSubjectsubjectsetBodybody
"public LbsDropData() {_str = """";_unused = 0;}",public LbsDropData str  unused  0
"public Deleted3DPxg(String sheetName) {this(-1, sheetName);}",public Deleted3DPxgString sheetName this1 sheetName
"public String getName() {return ""simple-two-way-in-core""; }",public String getName return simpletwowayincore 
"public RevTree parseTree(AnyObjectId id)throws MissingObjectException, IncorrectObjectTypeException,IOException {RevObject c = peel(parseAny(id));final RevTree t;if (c instanceof RevCommit)t = ((RevCommit) c).getTree();else if (!(c instanceof RevTree))throw new IncorrectObjectTypeException(id.toObjectId(),Constants.TYPE_TREE);elset = (RevTree) c;parseHeaders(t);return t;}",public RevTree parseTreeAnyObjectId idthrows MissingObjectException IncorrectObjectTypeExceptionIOException RevObject c  peelparseAnyidfinal RevTree tif c instanceof RevCommitt  RevCommit cgetTreeelse if c instanceof RevTreethrow new IncorrectObjectTypeExceptionidtoObjectIdConstantsTYPETREEelset  RevTree cparseHeaderstreturn t
public DisableFastSnapshotRestoresResult disableFastSnapshotRestores(DisableFastSnapshotRestoresRequest request) {request = beforeClientExecution(request);return executeDisableFastSnapshotRestores(request);},public DisableFastSnapshotRestoresResult disableFastSnapshotRestoresDisableFastSnapshotRestoresRequest request request  beforeClientExecutionrequestreturn executeDisableFastSnapshotRestoresrequest
public int size() {return size;},public int size return size
public CreateStreamResult createStream(CreateStreamRequest request) {request = beforeClientExecution(request);return executeCreateStream(request);},public CreateStreamResult createStreamCreateStreamRequest request request  beforeClientExecutionrequestreturn executeCreateStreamrequest
"public String replaceAll(String replacement) {reset();StringBuffer buffer = new StringBuffer(input.length());while (find()) {appendReplacement(buffer, replacement);}return appendTail(buffer).toString();}",public String replaceAllString replacement resetStringBuffer buffer  new StringBufferinputlengthwhile find appendReplacementbuffer replacementreturn appendTailbuffertoString
public DeregisterInstanceEventNotificationAttributesResult deregisterInstanceEventNotificationAttributes(DeregisterInstanceEventNotificationAttributesRequest request) {request = beforeClientExecution(request);return executeDeregisterInstanceEventNotificationAttributes(request);},public DeregisterInstanceEventNotificationAttributesResult deregisterInstanceEventNotificationAttributesDeregisterInstanceEventNotificationAttributesRequest request request  beforeClientExecutionrequestreturn executeDeregisterInstanceEventNotificationAttributesrequest
public int getDepth() {return depth;},public int getDepth return depth
public long get() {if (position == limit) {throw new BufferUnderflowException();}return byteBuffer.getLong(position++ * SizeOf.LONG);},public long get if position  limit throw new BufferUnderflowExceptionreturn byteBuffergetLongposition  SizeOfLONG
public boolean isEmpty() {return ConcurrentHashMap.this.isEmpty();},public boolean isEmpty return ConcurrentHashMapthisisEmpty
"public void addName(NameRecord name) {_definedNames.add(name);int idx = findFirstRecordLocBySid(ExternSheetRecord.sid);if (idx == -1) idx = findFirstRecordLocBySid(SupBookRecord.sid);if (idx == -1) idx = findFirstRecordLocBySid(CountryRecord.sid);int countNames = _definedNames.size();_workbookRecordList.add(idx + countNames, name);}",public void addNameNameRecord name definedNamesaddnameint idx  findFirstRecordLocBySidExternSheetRecordsidif idx  1 idx  findFirstRecordLocBySidSupBookRecordsidif idx  1 idx  findFirstRecordLocBySidCountryRecordsidint countNames  definedNamessizeworkbookRecordListaddidx  countNames name
"public void sort(RevSort s, boolean use) {assertNotStarted();if (use)sorting.add(s);elsesorting.remove(s);if (sorting.size() > 1)sorting.remove(RevSort.NONE);else if (sorting.isEmpty())sorting.add(RevSort.NONE);}",public void sortRevSort s boolean use assertNotStartedif usesortingaddselsesortingremovesif sortingsize  1sortingremoveRevSortNONEelse if sortingisEmptysortingaddRevSortNONE
"public String toString() {return ""D"";}",public String toString return D
public DisassociateSkillGroupFromRoomResult disassociateSkillGroupFromRoom(DisassociateSkillGroupFromRoomRequest request) {request = beforeClientExecution(request);return executeDisassociateSkillGroupFromRoom(request);},public DisassociateSkillGroupFromRoomResult disassociateSkillGroupFromRoomDisassociateSkillGroupFromRoomRequest request request  beforeClientExecutionrequestreturn executeDisassociateSkillGroupFromRoomrequest
public static byte[] encodeASCII(long s) {return encodeASCII(Long.toString(s));},public static byte encodeASCIIlong s return encodeASCIILongtoStrings
"public void setData(byte[] b) {setData(b,0,b.length);}",public void setDatabyte b setDatab0blength
public void removeLinksDirty() {remove1stProperty(PropertyIDMap.PID_LINKSDIRTY);},public void removeLinksDirty remove1stPropertyPropertyIDMapPIDLINKSDIRTY
"final public void OptionalWeights(SrndQuery q) throws ParseException {Token weight=null;label_8:while (true) {switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {case CARAT:;break;default:jj_la1[9] = jj_gen;break label_8;}jj_consume_token(CARAT);weight = jj_consume_token(NUMBER);float f;try {f = Float.parseFloat(weight.image);} catch (Exception floatExc) {{if (true) throw new ParseException(BOOST_ERROR_MESSAGE + weight.image + "" ("" + floatExc + "")"");}}if (f <= 0.0) {{if (true) throw new ParseException(BOOST_ERROR_MESSAGE + weight.image);}}q.setWeight(f * q.getWeight()); }}",final public void OptionalWeightsSrndQuery q throws ParseException Token weightnulllabel8while true switch jjntk1jjntkjjntk case CARATbreakdefaultjjla19  jjgenbreak label8jjconsumetokenCARATweight  jjconsumetokenNUMBERfloat ftry f  FloatparseFloatweightimage catch Exception floatExc if true throw new ParseExceptionBOOSTERRORMESSAGE  weightimage     floatExc  if f  00 if true throw new ParseExceptionBOOSTERRORMESSAGE  weightimageqsetWeightf  qgetWeight 
public ListLogPatternSetsResult listLogPatternSets(ListLogPatternSetsRequest request) {request = beforeClientExecution(request);return executeListLogPatternSets(request);},public ListLogPatternSetsResult listLogPatternSetsListLogPatternSetsRequest request request  beforeClientExecutionrequestreturn executeListLogPatternSetsrequest
"public String toString() {return ""<field start='"" + this.begin + ""' end='"" + this.end + ""' field='""+ this.field + ""' text='"" + this.text + ""'/>"";}",public String toString return field start  thisbegin   end  thisend   field thisfield   text  thistext  
public ListAssessmentTargetsResult listAssessmentTargets(ListAssessmentTargetsRequest request) {request = beforeClientExecution(request);return executeListAssessmentTargets(request);},public ListAssessmentTargetsResult listAssessmentTargetsListAssessmentTargetsRequest request request  beforeClientExecutionrequestreturn executeListAssessmentTargetsrequest
public HSSFFontFormatting getFontFormatting() {return getFontFormatting(false);},public HSSFFontFormatting getFontFormatting return getFontFormattingfalse
public UpdateRoomResult updateRoom(UpdateRoomRequest request) {request = beforeClientExecution(request);return executeUpdateRoom(request);},public UpdateRoomResult updateRoomUpdateRoomRequest request request  beforeClientExecutionrequestreturn executeUpdateRoomrequest
public ListLexiconsResult listLexicons(ListLexiconsRequest request) {request = beforeClientExecution(request);return executeListLexicons(request);},public ListLexiconsResult listLexiconsListLexiconsRequest request request  beforeClientExecutionrequestreturn executeListLexiconsrequest
public boolean equals( Object o ) {return o instanceof KpStemmer;},public boolean equals Object o  return o instanceof KpStemmer
"public void write(String str, int offset, int count) {String sub = str.substring(offset, offset + count);buf.append(sub);}",public void writeString str int offset int count String sub  strsubstringoffset offset  countbufappendsub
"public PackLock(File packFile, FS fs) {final File p = packFile.getParentFile();final String n = packFile.getName();keepFile = new File(p, n.substring(0, n.length() - 5) + "".keep""); }",public PackLockFile packFile FS fs final File p  packFilegetParentFilefinal String n  packFilegetNamekeepFile  new Filep nsubstring0 nlength  5  keep 
public CreatePublicKeyResult createPublicKey(CreatePublicKeyRequest request) {request = beforeClientExecution(request);return executeCreatePublicKey(request);},public CreatePublicKeyResult createPublicKeyCreatePublicKeyRequest request request  beforeClientExecutionrequestreturn executeCreatePublicKeyrequest
public PersonIdent getRefLogIdent() {return refLogIdent;},public PersonIdent getRefLogIdent return refLogIdent
"public boolean equals(Object o) {if (this == o) {return true;}if (!(o instanceof EscherComplexProperty)) {return false;}EscherComplexProperty escherComplexProperty = (EscherComplexProperty) o;return Arrays.equals(complexData, escherComplexProperty.complexData);}",public boolean equalsObject o if this  o return trueif o instanceof EscherComplexProperty return falseEscherComplexProperty escherComplexProperty  EscherComplexProperty oreturn ArraysequalscomplexData escherComplexPropertycomplexData
"public void unread(int oneByte) throws IOException {if (buf == null) {throw new IOException();}if (pos == 0) {throw new IOException(""Pushback buffer full"");}buf[--pos] = (byte) oneByte;}",public void unreadint oneByte throws IOException if buf  null throw new IOExceptionif pos  0 throw new IOExceptionPushback buffer fullbufpos  byte oneByte
public GetSegmentImportJobsResult getSegmentImportJobs(GetSegmentImportJobsRequest request) {request = beforeClientExecution(request);return executeGetSegmentImportJobs(request);},public GetSegmentImportJobsResult getSegmentImportJobsGetSegmentImportJobsRequest request request  beforeClientExecutionrequestreturn executeGetSegmentImportJobsrequest
public VerifyEmailAddressResult verifyEmailAddress(VerifyEmailAddressRequest request) {request = beforeClientExecution(request);return executeVerifyEmailAddress(request);},public VerifyEmailAddressResult verifyEmailAddressVerifyEmailAddressRequest request request  beforeClientExecutionrequestreturn executeVerifyEmailAddressrequest
public GetTagsResult getTags(GetTagsRequest request) {request = beforeClientExecution(request);return executeGetTags(request);},public GetTagsResult getTagsGetTagsRequest request request  beforeClientExecutionrequestreturn executeGetTagsrequest
public String toString(){StringBuilder sb = new StringBuilder();sb.append( text ).append( '(' );for( Toffs to : termsOffsets )sb.append( to.toString() );sb.append( ')' );return sb.toString();},public String toStringStringBuilder sb  new StringBuildersbappend text append  for Toffs to  termsOffsets sbappend totoString sbappend  return sbtoString
"public RevFilter clone() {return new Binary(a.clone(), b.clone());}",public RevFilter clone return new Binaryaclone bclone
public StandardTokenizerImpl(java.io.Reader in) {this.zzReader = in;},public StandardTokenizerImpljavaioReader in thiszzReader  in
"public MoPenFindGroupRequest() {super(""MoPen"", ""2018-02-11"", ""MoPenFindGroup"", ""mopen"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public MoPenFindGroupRequest superMoPen 20180211 MoPenFindGroup mopensetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
public static BreakIterator getLineInstance() {return getLineInstance(Locale.getDefault());},public static BreakIterator getLineInstance return getLineInstanceLocalegetDefault
public boolean exists() {return true;},public boolean exists return true
public LongBuffer asReadOnlyBuffer() {LongToByteBufferAdapter buf = new LongToByteBufferAdapter(byteBuffer.asReadOnlyBuffer());buf.limit = limit;buf.position = position;buf.mark = mark;buf.byteBuffer.order = byteBuffer.order;return buf;},public LongBuffer asReadOnlyBuffer LongToByteBufferAdapter buf  new LongToByteBufferAdapterbyteBufferasReadOnlyBufferbuflimit  limitbufposition  positionbufmark  markbufbyteBufferorder  byteBufferorderreturn buf
"public void writeBytes(byte[] b, int offset, int length) {assert b.length >= offset + length;if (length == 0) {return;}if (upto == blockSize) {if (currentBlock != null) {addBlock(currentBlock);}currentBlock = new byte[blockSize];upto = 0;}final int offsetEnd = offset + length;while(true) {final int left = offsetEnd - offset;final int blockLeft = blockSize - upto;if (blockLeft < left) {System.arraycopy(b, offset, currentBlock, upto, blockLeft);addBlock(currentBlock);currentBlock = new byte[blockSize];upto = 0;offset += blockLeft;} else {System.arraycopy(b, offset, currentBlock, upto, left);upto += left;break;}}}",public void writeBytesbyte b int offset int length assert blength  offset  lengthif length  0 returnif upto  blockSize if currentBlock  null addBlockcurrentBlockcurrentBlock  new byteblockSizeupto  0final int offsetEnd  offset  lengthwhiletrue final int left  offsetEnd  offsetfinal int blockLeft  blockSize  uptoif blockLeft  left Systemarraycopyb offset currentBlock upto blockLeftaddBlockcurrentBlockcurrentBlock  new byteblockSizeupto  0offset  blockLeft else Systemarraycopyb offset currentBlock upto leftupto  leftbreak
public ByteBuffer putFloat(float value) {throw new ReadOnlyBufferException();},public ByteBuffer putFloatfloat value throw new ReadOnlyBufferException
public Class<?> getArgumentClass() {return arg;},public Class getArgumentClass return arg
public GetVaultAccessPolicyResult getVaultAccessPolicy(GetVaultAccessPolicyRequest request) {request = beforeClientExecution(request);return executeGetVaultAccessPolicy(request);},public GetVaultAccessPolicyResult getVaultAccessPolicyGetVaultAccessPolicyRequest request request  beforeClientExecutionrequestreturn executeGetVaultAccessPolicyrequest
public GetReusableDelegationSetLimitResult getReusableDelegationSetLimit(GetReusableDelegationSetLimitRequest request) {request = beforeClientExecution(request);return executeGetReusableDelegationSetLimit(request);},public GetReusableDelegationSetLimitResult getReusableDelegationSetLimitGetReusableDelegationSetLimitRequest request request  beforeClientExecutionrequestreturn executeGetReusableDelegationSetLimitrequest
public int compareTo( WeightedPhraseInfo other ) {int diff = getStartOffset() - other.getStartOffset();if ( diff != 0 ) {return diff;}diff = getEndOffset() - other.getEndOffset();if ( diff != 0 ) {return diff;}return (int) Math.signum( getBoost() - other.getBoost() );},public int compareTo WeightedPhraseInfo other  int diff  getStartOffset  othergetStartOffsetif  diff  0  return diffdiff  getEndOffset  othergetEndOffsetif  diff  0  return diffreturn int Mathsignum getBoost  othergetBoost 
public StopRelationalDatabaseResult stopRelationalDatabase(StopRelationalDatabaseRequest request) {request = beforeClientExecution(request);return executeStopRelationalDatabase(request);},public StopRelationalDatabaseResult stopRelationalDatabaseStopRelationalDatabaseRequest request request  beforeClientExecutionrequestreturn executeStopRelationalDatabaserequest
"public void clear() {Arrays.fill(blocks, 0L);}",public void clear Arraysfillblocks 0L
public UpdateScriptResult updateScript(UpdateScriptRequest request) {request = beforeClientExecution(request);return executeUpdateScript(request);},public UpdateScriptResult updateScriptUpdateScriptRequest request request  beforeClientExecutionrequestreturn executeUpdateScriptrequest
"public InterpreterRuleContext(ParserRuleContext parent,int invokingStateNumber,int ruleIndex){super(parent, invokingStateNumber);this.ruleIndex = ruleIndex;}",public InterpreterRuleContextParserRuleContext parentint invokingStateNumberint ruleIndexsuperparent invokingStateNumberthisruleIndex  ruleIndex
public CreateFileSystemFromBackupResult createFileSystemFromBackup(CreateFileSystemFromBackupRequest request) {request = beforeClientExecution(request);return executeCreateFileSystemFromBackup(request);},public CreateFileSystemFromBackupResult createFileSystemFromBackupCreateFileSystemFromBackupRequest request request  beforeClientExecutionrequestreturn executeCreateFileSystemFromBackuprequest
"public int getLevelForDistance(double dist) {if (dist == 0){return maxLevels;}int level =  S2Projections.MAX_WIDTH.getMinLevel(dist * DistanceUtils.DEGREES_TO_RADIANS);int roundLevel = level % arity != 0 ? 1 : 0;level = level/arity + roundLevel;return Math.min(maxLevels, level + 1);}",public int getLevelForDistancedouble dist if dist  0return maxLevelsint level   S2ProjectionsMAXWIDTHgetMinLeveldist  DistanceUtilsDEGREESTORADIANSint roundLevel  level  arity  0  1  0level  levelarity  roundLevelreturn MathminmaxLevels level  1
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {ValueEval ve0;ValueEval ve1;try {ve0 = OperandResolver.getSingleValue(arg0, srcRowIndex, srcColumnIndex);ve1 = OperandResolver.getSingleValue(arg1, srcRowIndex, srcColumnIndex);} catch (EvaluationException e) {return e.getErrorEval();}StringBuilder sb = new StringBuilder();sb.append(getText(ve0));sb.append(getText(ve1));return new StringEval(sb.toString());}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1 ValueEval ve0ValueEval ve1try ve0  OperandResolvergetSingleValuearg0 srcRowIndex srcColumnIndexve1  OperandResolvergetSingleValuearg1 srcRowIndex srcColumnIndex catch EvaluationException e return egetErrorEvalStringBuilder sb  new StringBuildersbappendgetTextve0sbappendgetTextve1return new StringEvalsbtoString
"public static ChartDataSource<Number> fromNumericCellRange(Sheet sheet, CellRangeAddress cellRangeAddress) {return new AbstractCellRangeDataSource<Number>(sheet, cellRangeAddress);}",public static ChartDataSourceNumber fromNumericCellRangeSheet sheet CellRangeAddress cellRangeAddress return new AbstractCellRangeDataSourceNumbersheet cellRangeAddress
public static FuncPtg create(LittleEndianInput in) {return create(in.readUShort());},public static FuncPtg createLittleEndianInput in return createinreadUShort
public InitiateVaultLockResult initiateVaultLock(InitiateVaultLockRequest request) {request = beforeClientExecution(request);return executeInitiateVaultLock(request);},public InitiateVaultLockResult initiateVaultLockInitiateVaultLockRequest request request  beforeClientExecutionrequestreturn executeInitiateVaultLockrequest
public final K getKey() {return key;},public final K getKey return key
public boolean isSet(final int holder){return (holder & _mask) != 0;},public boolean isSetfinal int holderreturn holder  mask  0
"public DoubleMetaphoneFilter(TokenStream input, int maxCodeLength, boolean inject) {super(input);this.encoder.setMaxCodeLen(maxCodeLength);this.inject = inject;}",public DoubleMetaphoneFilterTokenStream input int maxCodeLength boolean inject superinputthisencodersetMaxCodeLenmaxCodeLengththisinject  inject
"public boolean changeExternalReference(String oldUrl, String newUrl) {return workbook.changeExternalReference(oldUrl, newUrl);}",public boolean changeExternalReferenceString oldUrl String newUrl return workbookchangeExternalReferenceoldUrl newUrl
public DescribeEngineDefaultParametersRequest(String cacheParameterGroupFamily) {setCacheParameterGroupFamily(cacheParameterGroupFamily);},public DescribeEngineDefaultParametersRequestString cacheParameterGroupFamily setCacheParameterGroupFamilycacheParameterGroupFamily
public void extendB() {endB++;},public void extendB endB
"public JapaneseReadingFormFilter(TokenStream input, boolean useRomaji) {super(input);this.useRomaji = useRomaji;}",public JapaneseReadingFormFilterTokenStream input boolean useRomaji superinputthisuseRomaji  useRomaji
public DeleteContactResult deleteContact(DeleteContactRequest request) {request = beforeClientExecution(request);return executeDeleteContact(request);},public DeleteContactResult deleteContactDeleteContactRequest request request  beforeClientExecutionrequestreturn executeDeleteContactrequest
"public static final int next(byte[] b, int ptr, char chrA) {final int sz = b.length;while (ptr < sz) {if (b[ptr++] == chrA)return ptr;}return ptr;}",public static final int nextbyte b int ptr char chrA final int sz  blengthwhile ptr  sz if bptr  chrAreturn ptrreturn ptr
public InvokeEndpointResult invokeEndpoint(InvokeEndpointRequest request) {request = beforeClientExecution(request);return executeInvokeEndpoint(request);},public InvokeEndpointResult invokeEndpointInvokeEndpointRequest request request  beforeClientExecutionrequestreturn executeInvokeEndpointrequest
public PutAccountSettingDefaultResult putAccountSettingDefault(PutAccountSettingDefaultRequest request) {request = beforeClientExecution(request);return executePutAccountSettingDefault(request);},public PutAccountSettingDefaultResult putAccountSettingDefaultPutAccountSettingDefaultRequest request request  beforeClientExecutionrequestreturn executePutAccountSettingDefaultrequest
"public static Path categoriesLineFile(Path f) {Path dir = f.toAbsolutePath().getParent();String categoriesName = ""categories-""+f.getFileName();return dir.resolve(categoriesName);}",public static Path categoriesLineFilePath f Path dir  ftoAbsolutePathgetParentString categoriesName  categoriesfgetFileNamereturn dirresolvecategoriesName
public String toJson() {return new JsonPolicyWriter().writePolicyToString(this);},public String toJson return new JsonPolicyWriterwritePolicyToStringthis
public String getFunctionName(int idx) {return _funcMap.get(idx);},public String getFunctionNameint idx return funcMapgetidx
public RecordHandlerProgressResult recordHandlerProgress(RecordHandlerProgressRequest request) {request = beforeClientExecution(request);return executeRecordHandlerProgress(request);},public RecordHandlerProgressResult recordHandlerProgressRecordHandlerProgressRequest request request  beforeClientExecutionrequestreturn executeRecordHandlerProgressrequest
"public synchronized StringBuffer insert(int index, char[] chars, int start, int length) {insert0(index, chars, start, length);return this;}",public synchronized StringBuffer insertint index char chars int start int length insert0index chars start lengthreturn this
"public RevObject lookupAny(AnyObjectId id, int type) {RevObject r = objects.get(id);if (r == null) {switch (type) {case Constants.OBJ_COMMIT:r = createCommit(id);break;case Constants.OBJ_TREE:r = new RevTree(id);break;case Constants.OBJ_BLOB:r = new RevBlob(id);break;case Constants.OBJ_TAG:r = new RevTag(id);break;default:throw new IllegalArgumentException(MessageFormat.format(JGitText.get().invalidGitType, Integer.valueOf(type)));}objects.add(r);}return r;}",public RevObject lookupAnyAnyObjectId id int type RevObject r  objectsgetidif r  null switch type case ConstantsOBJCOMMITr  createCommitidbreakcase ConstantsOBJTREEr  new RevTreeidbreakcase ConstantsOBJBLOBr  new RevBlobidbreakcase ConstantsOBJTAGr  new RevTagidbreakdefaultthrow new IllegalArgumentExceptionMessageFormatformatJGitTextgetinvalidGitType IntegervalueOftypeobjectsaddrreturn r
"public BytesRef encode(char[] buffer) {return encode(buffer, 0, buffer.length);}",public BytesRef encodechar buffer return encodebuffer 0 bufferlength
"public StringBuilder append(int i) {IntegralToString.appendInt(this, i);return this;}",public StringBuilder appendint i IntegralToStringappendIntthis ireturn this
public void removeName(Name name) {int index = getNameIndex((HSSFName) name);removeName(index);},public void removeNameName name int index  getNameIndexHSSFName nameremoveNameindex
public WrappedPositionArray() {for(int i=0;i<positions.length;i++) {positions[i] = new Position();}},public WrappedPositionArray forint i0ipositionslengthi positionsi  new Position
public PasswordRev4Record(int pw) {field_1_password = pw;},public PasswordRev4Recordint pw field1password  pw
"public static String intToHex(int value) {StringBuilder sb = new StringBuilder(10);writeHex(sb, value & 0xFFFFFFFFL, 8, ""0x"");return sb.toString();}",public static String intToHexint value StringBuilder sb  new StringBuilder10writeHexsb value  0xFFFFFFFFL 8 0xreturn sbtoString
"public RemovePermissionRequest(String topicArn, String label) {setTopicArn(topicArn);setLabel(label);}",public RemovePermissionRequestString topicArn String label setTopicArntopicArnsetLabellabel
public UpdateOrganizationConfigurationResult updateOrganizationConfiguration(UpdateOrganizationConfigurationRequest request) {request = beforeClientExecution(request);return executeUpdateOrganizationConfiguration(request);},public UpdateOrganizationConfigurationResult updateOrganizationConfigurationUpdateOrganizationConfigurationRequest request request  beforeClientExecutionrequestreturn executeUpdateOrganizationConfigurationrequest
"public void seekExact(BytesRef target, TermState otherState) {assert otherState != null && otherState instanceof BlockTermState;assert !doOrd || ((BlockTermState) otherState).ord < numTerms;state.copyFrom(otherState);seekPending = true;indexIsCurrent = false;term.copyBytes(target);}",public void seekExactBytesRef target TermState otherState assert otherState  null  otherState instanceof BlockTermStateassert doOrd  BlockTermState otherStateord  numTermsstatecopyFromotherStateseekPending  trueindexIsCurrent  falsetermcopyBytestarget
public void println() {newline();},public void println newline
"public String toString() {return ""NRTCachingDirectory("" + in + ""; maxCacheMB="" + (maxCachedBytes/1024/1024.) + "" maxMergeSizeMB="" + (maxMergeSizeBytes/1024/1024.) + "")"";}",public String toString return NRTCachingDirectory  in   maxCacheMB  maxCachedBytes10241024   maxMergeSizeMB  maxMergeSizeBytes10241024  
public DescribeWorkforceResult describeWorkforce(DescribeWorkforceRequest request) {request = beforeClientExecution(request);return executeDescribeWorkforce(request);},public DescribeWorkforceResult describeWorkforceDescribeWorkforceRequest request request  beforeClientExecutionrequestreturn executeDescribeWorkforcerequest
"public ToggleFeaturesRequest() {super(""CloudPhoto"", ""2017-07-11"", ""ToggleFeatures"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public ToggleFeaturesRequest superCloudPhoto 20170711 ToggleFeatures cloudphotosetProtocolProtocolTypeHTTPS
"public synchronized StringBuffer append(char[] chars, int start, int length) {append0(chars, start, length);return this;}",public synchronized StringBuffer appendchar chars int start int length append0chars start lengthreturn this
"public ShortBuffer put(short c) {if (position == limit) {throw new BufferOverflowException();}byteBuffer.putShort(position++ * SizeOf.SHORT, c);return this;}",public ShortBuffer putshort c if position  limit throw new BufferOverflowExceptionbyteBufferputShortposition  SizeOfSHORT creturn this
public char last() {index = (limit == start) ? limit : limit - 1;return current();},public char last index  limit  start  limit  limit  1return current
public WeightedSpanTermExtractor(String defaultField) {this.defaultField = defaultField;},public WeightedSpanTermExtractorString defaultField thisdefaultField  defaultField
public StringReader(String str) {this.str = str;this.count = str.length();},public StringReaderString str thisstr  strthiscount  strlength
"public GetThumbnailsRequest() {super(""CloudPhoto"", ""2017-07-11"", ""GetThumbnails"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public GetThumbnailsRequest superCloudPhoto 20170711 GetThumbnails cloudphotosetProtocolProtocolTypeHTTPS
public TagCommand setName(String name) {checkCallable();this.name = name;return this;},public TagCommand setNameString name checkCallablethisname  namereturn this
@Override public String toString() {synchronized (mutex) {return c.toString();}},Override public String toString synchronized mutex return ctoString
"public String toString() {return toString((List<String>)null, (RuleContext)null);}",public String toString return toStringListStringnull RuleContextnull
"public String toString() {return ""StandardDirectoryReader.ReaderCommit("" + segmentsFileName + "" files="" + files + "")"";}",public String toString return StandardDirectoryReaderReaderCommit  segmentsFileName   files  files  
"public int fillFields(byte[] data, int offset, EscherRecordFactory recordFactory) {int bytesAfterHeader = readHeader( data, offset );int pos              = offset + HEADER_SIZE;field_pictureData = IOUtils.safelyAllocate(bytesAfterHeader, MAX_RECORD_LENGTH);System.arraycopy(data, pos, field_pictureData, 0, bytesAfterHeader);return bytesAfterHeader + 8;}",public int fillFieldsbyte data int offset EscherRecordFactory recordFactory int bytesAfterHeader  readHeader data offset int pos               offset  HEADERSIZEfieldpictureData  IOUtilssafelyAllocatebytesAfterHeader MAXRECORDLENGTHSystemarraycopydata pos fieldpictureData 0 bytesAfterHeaderreturn bytesAfterHeader  8
"public static int[] copyOf(int[] original, int newLength) {if (newLength < 0) {throw new NegativeArraySizeException();}return copyOfRange(original, 0, newLength);}",public static int copyOfint original int newLength if newLength  0 throw new NegativeArraySizeExceptionreturn copyOfRangeoriginal 0 newLength
public void serialize(LittleEndianOutput out) {out.write(data);},public void serializeLittleEndianOutput out outwritedata
public E get(int location) {if (location >= 0 && location < size) {Link<E> link = voidLink;if (location < (size / 2)) {for (int i = 0; i <= location; i++) {link = link.next;}} else {for (int i = size; i > location; i--) {link = link.previous;}}return link.data;}throw new IndexOutOfBoundsException();},public E getint location if location  0  location  size LinkE link  voidLinkif location  size  2 for int i  0 i  location i link  linknext else for int i  size i  location i link  linkpreviousreturn linkdatathrow new IndexOutOfBoundsException
"public static boolean hasExactSharedBorder(CellRangeAddress crA, CellRangeAddress crB) {int oFirstRow = crB.getFirstRow();int oLastRow  = crB.getLastRow();int oFirstCol = crB.getFirstColumn();int oLastCol  = crB.getLastColumn();if (crA.getFirstRow() > 0 && crA.getFirstRow()-1 == oLastRow ||oFirstRow > 0 && oFirstRow-1 == crA.getLastRow()) {return crA.getFirstColumn() == oFirstCol && crA.getLastColumn() == oLastCol;}if (crA.getFirstColumn()>0 && crA.getFirstColumn() - 1 == oLastCol ||oFirstCol>0 && crA.getLastColumn() == oFirstCol -1) {return crA.getFirstRow() == oFirstRow && crA.getLastRow() == oLastRow;}return false;}",public static boolean hasExactSharedBorderCellRangeAddress crA CellRangeAddress crB int oFirstRow  crBgetFirstRowint oLastRow   crBgetLastRowint oFirstCol  crBgetFirstColumnint oLastCol   crBgetLastColumnif crAgetFirstRow  0  crAgetFirstRow1  oLastRow oFirstRow  0  oFirstRow1  crAgetLastRow return crAgetFirstColumn  oFirstCol  crAgetLastColumn  oLastColif crAgetFirstColumn0  crAgetFirstColumn  1  oLastCol oFirstCol0  crAgetLastColumn  oFirstCol 1 return crAgetFirstRow  oFirstRow  crAgetLastRow  oLastRowreturn false
"public void visitCellsForRow(int rowIndex, RecordVisitor rv) {CellValueRecordInterface[] rowCells = records[rowIndex];if(rowCells == null) {throw new IllegalArgumentException(""Row ["" + rowIndex + ""] is empty"");}for (int i = 0; i < rowCells.length; i++) {RecordBase cvr = (RecordBase) rowCells[i];if(cvr == null) {continue;}int nBlank = countBlanks(rowCells, i);if (nBlank > 1) {rv.visitRecord(createMBR(rowCells, i, nBlank));i+=nBlank-1;} else if (cvr instanceof RecordAggregate) {RecordAggregate agg = (RecordAggregate) cvr;agg.visitContainedRecords(rv);} else {rv.visitRecord((org.apache.poi.hssf.record.Record) cvr);}}}",public void visitCellsForRowint rowIndex RecordVisitor rv CellValueRecordInterface rowCells  recordsrowIndexifrowCells  null throw new IllegalArgumentExceptionRow   rowIndex   is emptyfor int i  0 i  rowCellslength i RecordBase cvr  RecordBase rowCellsiifcvr  null continueint nBlank  countBlanksrowCells iif nBlank  1 rvvisitRecordcreateMBRrowCells i nBlankinBlank1 else if cvr instanceof RecordAggregate RecordAggregate agg  RecordAggregate cvraggvisitContainedRecordsrv else rvvisitRecordorgapachepoihssfrecordRecord cvr
public DeleteVpnConnectionResult deleteVpnConnection(DeleteVpnConnectionRequest request) {request = beforeClientExecution(request);return executeDeleteVpnConnection(request);},public DeleteVpnConnectionResult deleteVpnConnectionDeleteVpnConnectionRequest request request  beforeClientExecutionrequestreturn executeDeleteVpnConnectionrequest
"public void clear() {username = null;if (password != null) {Arrays.fill(password, (char) 0);password = null;}}",public void clear username  nullif password  null Arraysfillpassword char 0password  null
"public String toString() {return String.format(Locale.ROOT,""time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB"",totalTimeMS / 1000.0d, readTimeMS / 1000.0d, sortTimeMS.get() / 1000.0d, mergeTimeMS.get() / 1000.0d,lineCount, tempMergeFiles, mergeRounds,(double) bufferSize / MB);}",public String toString return StringformatLocaleROOTtime2f sec total 2f reading 2f sorting 2f merging linesd temp filesd mergesd soft ram limit2f MBtotalTimeMS  10000d readTimeMS  10000d sortTimeMSget  10000d mergeTimeMSget  10000dlineCount tempMergeFiles mergeRoundsdouble bufferSize  MB
public DetachLoadBalancersResult detachLoadBalancers(DetachLoadBalancersRequest request) {request = beforeClientExecution(request);return executeDetachLoadBalancers(request);},public DetachLoadBalancersResult detachLoadBalancersDetachLoadBalancersRequest request request  beforeClientExecutionrequestreturn executeDetachLoadBalancersrequest
"public synchronized Span[] splitSentences(String line) {if (sentenceSplitter != null) {return sentenceSplitter.sentPosDetect(line);} else {Span[] shorty = new Span[1];shorty[0] = new Span(0, line.length());return shorty;}}",public synchronized Span splitSentencesString line if sentenceSplitter  null return sentenceSplittersentPosDetectline else Span shorty  new Span1shorty0  new Span0 linelengthreturn shorty
public boolean isRemote() {return getHost() != null;},public boolean isRemote return getHost  null
public void setBuiltinStyle(int builtinStyleId) {field_1_xf_index = isBuiltinFlag.set(field_1_xf_index);field_2_builtin_style = builtinStyleId;},public void setBuiltinStyleint builtinStyleId field1xfindex  isBuiltinFlagsetfield1xfindexfield2builtinstyle  builtinStyleId
public ObjectReader getObjectReader() {return Reader;},public ObjectReader getObjectReader return Reader
public void addEscherProperty( EscherProperty prop ){properties.add( prop );},public void addEscherProperty EscherProperty prop propertiesadd prop 
"public String toString() {StringBuilder sb = new StringBuilder();sb.append(""["").append(""USERSVIEWBEGIN"").append(""] (0x"");sb.append(Integer.toHexString(sid).toUpperCase(Locale.ROOT)).append("")\n"");sb.append(""  rawData="").append(HexDump.toHex(_rawData)).append(""\n"");sb.append(""[/"").append(""USERSVIEWBEGIN"").append(""]\n"");return sb.toString();}",public String toString StringBuilder sb  new StringBuildersbappendappendUSERSVIEWBEGINappend 0xsbappendIntegertoHexStringsidtoUpperCaseLocaleROOTappendnsbappend  rawDataappendHexDumptoHexrawDataappendnsbappendappendUSERSVIEWBEGINappendnreturn sbtoString
"public String group(int group) {ensureMatch();int from = matchOffsets[group * 2];int to = matchOffsets[(group * 2) + 1];if (from == -1 || to == -1) {return null;} else {return input.substring(from, to);}}",public String groupint group ensureMatchint from  matchOffsetsgroup  2int to  matchOffsetsgroup  2  1if from  1  to  1 return null else return inputsubstringfrom to
public void removeCompany() {remove1stProperty(PropertyIDMap.PID_COMPANY);},public void removeCompany remove1stPropertyPropertyIDMapPIDCOMPANY
public RevFilter clone() {final RevFilter[] s = new RevFilter[subfilters.length];for (int i = 0; i < s.length; i++)s[i] = subfilters[i].clone();return new List(s);},public RevFilter clone final RevFilter s  new RevFiltersubfilterslengthfor int i  0 i  slength isi  subfiltersiclonereturn new Lists
public static Charset defaultCharset() {return DEFAULT_CHARSET;},public static Charset defaultCharset return DEFAULTCHARSET
public void removeName(Name name) {int index = getNameIndex((HSSFName) name);removeName(index);},public void removeNameName name int index  getNameIndexHSSFName nameremoveNameindex
"public AttributeValueUpdate(AttributeValue value, AttributeAction action) {setValue(value);setAction(action.toString());}",public AttributeValueUpdateAttributeValue value AttributeAction action setValuevaluesetActionactiontoString
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[FOOTER]\n"");buffer.append(""    .footer = "").append(getText()).append(""\n"");buffer.append(""[/FOOTER]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendFOOTERnbufferappend    footer  appendgetTextappendnbufferappendFOOTERnreturn buffertoString
public DisassociateSkillFromSkillGroupResult disassociateSkillFromSkillGroup(DisassociateSkillFromSkillGroupRequest request) {request = beforeClientExecution(request);return executeDisassociateSkillFromSkillGroup(request);},public DisassociateSkillFromSkillGroupResult disassociateSkillFromSkillGroupDisassociateSkillFromSkillGroupRequest request request  beforeClientExecutionrequestreturn executeDisassociateSkillFromSkillGrouprequest
public String toString(String field) {StringBuilder buffer = new StringBuilder();if (!getField().equals(field)) {buffer.append(getField());buffer.append(':');}buffer.append(term.text());buffer.append('*');return buffer.toString();},public String toStringString field StringBuilder buffer  new StringBuilderif getFieldequalsfield bufferappendgetFieldbufferappendbufferappendtermtextbufferappendreturn buffertoString
public NameRecord getNameRecord(int index) {return _definedNames.get(index);},public NameRecord getNameRecordint index return definedNamesgetindex
public BottomMarginRecord clone() {return copy();},public BottomMarginRecord clone return copy
@Override public V setValue(V object) {throw new UnsupportedOperationException();},Override public V setValueV object throw new UnsupportedOperationException
"public QuadPrefixTree(SpatialContext ctx, Rectangle bounds, int maxLevels) {super(ctx, maxLevels);this.xmin = bounds.getMinX();this.xmax = bounds.getMaxX();this.ymin = bounds.getMinY();this.ymax = bounds.getMaxY();levelW = new double[maxLevels + 1];levelH = new double[maxLevels + 1];gridW = xmax - xmin;gridH = ymax - ymin;this.xmid = xmin + gridW/2.0;this.ymid = ymin + gridH/2.0;levelW[0] = gridW/2.0;levelH[0] = gridH/2.0;for (int i = 1; i < levelW.length; i++) {levelW[i] = levelW[i - 1] / 2.0;levelH[i] = levelH[i - 1] / 2.0;}}",public QuadPrefixTreeSpatialContext ctx Rectangle bounds int maxLevels superctx maxLevelsthisxmin  boundsgetMinXthisxmax  boundsgetMaxXthisymin  boundsgetMinYthisymax  boundsgetMaxYlevelW  new doublemaxLevels  1levelH  new doublemaxLevels  1gridW  xmax  xmingridH  ymax  yminthisxmid  xmin  gridW20thisymid  ymin  gridH20levelW0  gridW20levelH0  gridH20for int i  1 i  levelWlength i levelWi  levelWi  1  20levelHi  levelHi  1  20
public static HSSFAnchor createAnchorFromEscher(EscherContainerRecord container){if (null != container.getChildById(EscherChildAnchorRecord.RECORD_ID)){return new HSSFChildAnchor(container.getChildById(EscherChildAnchorRecord.RECORD_ID));} else {if (null != container.getChildById(EscherClientAnchorRecord.RECORD_ID)){return new HSSFClientAnchor(container.getChildById(EscherClientAnchorRecord.RECORD_ID));}return null;}},public static HSSFAnchor createAnchorFromEscherEscherContainerRecord containerif null  containergetChildByIdEscherChildAnchorRecordRECORDIDreturn new HSSFChildAnchorcontainergetChildByIdEscherChildAnchorRecordRECORDID else if null  containergetChildByIdEscherClientAnchorRecordRECORDIDreturn new HSSFClientAnchorcontainergetChildByIdEscherClientAnchorRecordRECORDIDreturn null
public void reset() {if ( _input !=null ) {_input.seek(0); }_token = null;_type = Token.INVALID_TYPE;_channel = Token.DEFAULT_CHANNEL;_tokenStartCharIndex = -1;_tokenStartCharPositionInLine = -1;_tokenStartLine = -1;_text = null;_hitEOF = false;_mode = Lexer.DEFAULT_MODE;_modeStack.clear();getInterpreter().reset();},public void reset if  input null  inputseek0 token  nulltype  TokenINVALIDTYPEchannel  TokenDEFAULTCHANNELtokenStartCharIndex  1tokenStartCharPositionInLine  1tokenStartLine  1text  nullhitEOF  falsemode  LexerDEFAULTMODEmodeStackcleargetInterpreterreset
public ShortBuffer slice() {byteBuffer.limit(limit * SizeOf.SHORT);byteBuffer.position(position * SizeOf.SHORT);ByteBuffer bb = byteBuffer.slice().order(byteBuffer.order());ShortBuffer result = new ShortToByteBufferAdapter(bb);byteBuffer.clear();return result;},public ShortBuffer slice byteBufferlimitlimit  SizeOfSHORTbyteBufferpositionposition  SizeOfSHORTByteBuffer bb  byteBuffersliceorderbyteBufferorderShortBuffer result  new ShortToByteBufferAdapterbbbyteBufferclearreturn result
public boolean isPackedGitMMAP() {return packedGitMMAP;},public boolean isPackedGitMMAP return packedGitMMAP
public boolean equalsSameType(Object other) {assert exists || 0.0D == value;MutableValueDouble b = (MutableValueDouble)other;return value == b.value && exists == b.exists;},public boolean equalsSameTypeObject other assert exists  00D  valueMutableValueDouble b  MutableValueDoubleotherreturn value  bvalue  exists  bexists
public PurchaseReservedInstancesOfferingResult purchaseReservedInstancesOffering(PurchaseReservedInstancesOfferingRequest request) {request = beforeClientExecution(request);return executePurchaseReservedInstancesOffering(request);},public PurchaseReservedInstancesOfferingResult purchaseReservedInstancesOfferingPurchaseReservedInstancesOfferingRequest request request  beforeClientExecutionrequestreturn executePurchaseReservedInstancesOfferingrequest
public final char readChar() throws IOException {return (char) readShort();},public final char readChar throws IOException return char readShort
public AssociateRepositoryResult associateRepository(AssociateRepositoryRequest request) {request = beforeClientExecution(request);return executeAssociateRepository(request);},public AssociateRepositoryResult associateRepositoryAssociateRepositoryRequest request request  beforeClientExecutionrequestreturn executeAssociateRepositoryrequest
public ImportApiKeysResult importApiKeys(ImportApiKeysRequest request) {request = beforeClientExecution(request);return executeImportApiKeys(request);},public ImportApiKeysResult importApiKeysImportApiKeysRequest request request  beforeClientExecutionrequestreturn executeImportApiKeysrequest
public void write(LittleEndianOutput out) {out.writeByte(sid + getPtgClass());out.writeShort(field_1_index_extern_sheet);out.writeInt(unused1);out.writeInt(unused2);},public void writeLittleEndianOutput out outwriteBytesid  getPtgClassoutwriteShortfield1indexexternsheetoutwriteIntunused1outwriteIntunused2
public Type getType() {return type;},public Type getType return type
"public static Calendar getJavaCalendar(double date, boolean use1904windowing) {return getJavaCalendar(date, use1904windowing, null, false);}",public static Calendar getJavaCalendardouble date boolean use1904windowing return getJavaCalendardate use1904windowing null false
public DeleteSnapshotScheduleResult deleteSnapshotSchedule(DeleteSnapshotScheduleRequest request) {request = beforeClientExecution(request);return executeDeleteSnapshotSchedule(request);},public DeleteSnapshotScheduleResult deleteSnapshotScheduleDeleteSnapshotScheduleRequest request request  beforeClientExecutionrequestreturn executeDeleteSnapshotSchedulerequest
"public void writeProtectWorkbook( String password, String username ) {this.workbook.writeProtectWorkbook(password, username);}",public void writeProtectWorkbook String password String username  thisworkbookwriteProtectWorkbookpassword username
public CreateCloudFormationStackResult createCloudFormationStack(CreateCloudFormationStackRequest request) {request = beforeClientExecution(request);return executeCreateCloudFormationStack(request);},public CreateCloudFormationStackResult createCloudFormationStackCreateCloudFormationStackRequest request request  beforeClientExecutionrequestreturn executeCreateCloudFormationStackrequest
"public void writeByte(byte b) throws IOException {assert bufferPos == buffer.position(): ""bufferPos="" + bufferPos + "" vs buffer.position()="" + buffer.position();buffer.put(b);if (++bufferPos == bufferSize) {dump();}}",public void writeBytebyte b throws IOException assert bufferPos  bufferposition bufferPos  bufferPos   vs bufferposition  bufferpositionbufferputbif bufferPos  bufferSize dump
public ExtendedFormatRecord(RecordInputStream in) {field_1_font_index           = in.readShort();field_2_format_index         = in.readShort();field_3_cell_options         = in.readShort();field_4_alignment_options    = in.readShort();field_5_indention_options    = in.readShort();field_6_border_options       = in.readShort();field_7_palette_options      = in.readShort();field_8_adtl_palette_options = in.readInt();field_9_fill_palette_options = in.readShort();},public ExtendedFormatRecordRecordInputStream in field1fontindex            inreadShortfield2formatindex          inreadShortfield3celloptions          inreadShortfield4alignmentoptions     inreadShortfield5indentionoptions     inreadShortfield6borderoptions        inreadShortfield7paletteoptions       inreadShortfield8adtlpaletteoptions  inreadIntfield9fillpaletteoptions  inreadShort
"public int getExternalSheetIndex(String workbookName, String sheetName) {return _iBook.getExternalSheetIndex(workbookName, sheetName);}",public int getExternalSheetIndexString workbookName String sheetName return iBookgetExternalSheetIndexworkbookName sheetName
"public HSSFObjectData(EscherContainerRecord spContainer, ObjRecord objRecord, DirectoryEntry _root) {super(spContainer, objRecord);this._root = _root;}",public HSSFObjectDataEscherContainerRecord spContainer ObjRecord objRecord DirectoryEntry root superspContainer objRecordthisroot  root
public long ramBytesUsed() {return super.ramBytesUsed()+ offsets.ramBytesUsed()+ lengths.ramBytesUsed()+ RamUsageEstimator.NUM_BYTES_OBJECT_HEADER+ 2 * Integer.BYTES+ 3 * RamUsageEstimator.NUM_BYTES_OBJECT_REF+ values.bytes().length;},public long ramBytesUsed return superramBytesUsed offsetsramBytesUsed lengthsramBytesUsed RamUsageEstimatorNUMBYTESOBJECTHEADER 2  IntegerBYTES 3  RamUsageEstimatorNUMBYTESOBJECTREF valuesbyteslength
public UpdateApnsVoipChannelResult updateApnsVoipChannel(UpdateApnsVoipChannelRequest request) {request = beforeClientExecution(request);return executeUpdateApnsVoipChannel(request);},public UpdateApnsVoipChannelResult updateApnsVoipChannelUpdateApnsVoipChannelRequest request request  beforeClientExecutionrequestreturn executeUpdateApnsVoipChannelrequest
public String[] getNames() {return nameValPairs.keySet().toArray(new String[0]);},public String getNames return nameValPairskeySettoArraynew String0
public DeleteAutoSnapshotResult deleteAutoSnapshot(DeleteAutoSnapshotRequest request) {request = beforeClientExecution(request);return executeDeleteAutoSnapshot(request);},public DeleteAutoSnapshotResult deleteAutoSnapshotDeleteAutoSnapshotRequest request request  beforeClientExecutionrequestreturn executeDeleteAutoSnapshotrequest
public int getLowIx() {return _lowIx;},public int getLowIx return lowIx
public DescribeSubscribedWorkteamResult describeSubscribedWorkteam(DescribeSubscribedWorkteamRequest request) {request = beforeClientExecution(request);return executeDescribeSubscribedWorkteam(request);},public DescribeSubscribedWorkteamResult describeSubscribedWorkteamDescribeSubscribedWorkteamRequest request request  beforeClientExecutionrequestreturn executeDescribeSubscribedWorkteamrequest
public DeleteVpnGatewayResult deleteVpnGateway(DeleteVpnGatewayRequest request) {request = beforeClientExecution(request);return executeDeleteVpnGateway(request);},public DeleteVpnGatewayResult deleteVpnGatewayDeleteVpnGatewayRequest request request  beforeClientExecutionrequestreturn executeDeleteVpnGatewayrequest
public boolean get(int index) {return intSet.exists(index);},public boolean getint index return intSetexistsindex
public String constantName() {return constantName;},public String constantName return constantName
public void serialize(LittleEndianOutput out) {out.writeShort(field_1_formatIndex);},public void serializeLittleEndianOutput out outwriteShortfield1formatIndex
public boolean isEmpty() {return size() == 0;},public boolean isEmpty return size  0
public DescribeCacheParametersResult describeCacheParameters(DescribeCacheParametersRequest request) {request = beforeClientExecution(request);return executeDescribeCacheParameters(request);},public DescribeCacheParametersResult describeCacheParametersDescribeCacheParametersRequest request request  beforeClientExecutionrequestreturn executeDescribeCacheParametersrequest
"public SimpleFraction(int numerator, int denominator){this.numerator = numerator;this.denominator = denominator;}",public SimpleFractionint numerator int denominatorthisnumerator  numeratorthisdenominator  denominator
public static int idealBooleanArraySize(int need) {return idealByteArraySize(need);},public static int idealBooleanArraySizeint need return idealByteArraySizeneed
public SubmoduleStatusCommand submoduleStatus() {return new SubmoduleStatusCommand(repo);},public SubmoduleStatusCommand submoduleStatus return new SubmoduleStatusCommandrepo
public PutRecordBatchResult putRecordBatch(PutRecordBatchRequest request) {request = beforeClientExecution(request);return executePutRecordBatch(request);},public PutRecordBatchResult putRecordBatchPutRecordBatchRequest request request  beforeClientExecutionrequestreturn executePutRecordBatchrequest
"public QueryTermScorer(WeightedTerm[] weightedTerms) {termsToFind = new HashMap<>();for (int i = 0; i < weightedTerms.length; i++) {WeightedTerm existingTerm = termsToFind.get(weightedTerms[i].term);if ((existingTerm == null)|| (existingTerm.weight < weightedTerms[i].weight)) {termsToFind.put(weightedTerms[i].term, weightedTerms[i]);maxTermWeight = Math.max(maxTermWeight, weightedTerms[i].getWeight());}}}",public QueryTermScorerWeightedTerm weightedTerms termsToFind  new HashMapfor int i  0 i  weightedTermslength i WeightedTerm existingTerm  termsToFindgetweightedTermsitermif existingTerm  null existingTermweight  weightedTermsiweight termsToFindputweightedTermsiterm weightedTermsimaxTermWeight  MathmaxmaxTermWeight weightedTermsigetWeight
public static boolean allSubsetsConflict(Collection<BitSet> altsets) {return !hasNonConflictingAltSet(altsets);},public static boolean allSubsetsConflictCollectionBitSet altsets return hasNonConflictingAltSetaltsets
public DescribeRuntimeConfigurationResult describeRuntimeConfiguration(DescribeRuntimeConfigurationRequest request) {request = beforeClientExecution(request);return executeDescribeRuntimeConfiguration(request);},public DescribeRuntimeConfigurationResult describeRuntimeConfigurationDescribeRuntimeConfigurationRequest request request  beforeClientExecutionrequestreturn executeDescribeRuntimeConfigurationrequest
"public RevCommit parseCommit(AnyObjectId id)throws MissingObjectException, IncorrectObjectTypeException,IOException {RevObject c = peel(parseAny(id));if (!(c instanceof RevCommit))throw new IncorrectObjectTypeException(id.toObjectId(),Constants.TYPE_COMMIT);return (RevCommit) c;}",public RevCommit parseCommitAnyObjectId idthrows MissingObjectException IncorrectObjectTypeExceptionIOException RevObject c  peelparseAnyidif c instanceof RevCommitthrow new IncorrectObjectTypeExceptionidtoObjectIdConstantsTYPECOMMITreturn RevCommit c
public short readShort() {return (short)readUShort();},public short readShort return shortreadUShort
public final void clear() {for (int i = 0; i <= size; i++) {heap[i] = null;}size = 0;},public final void clear for int i  0 i  size i heapi  nullsize  0
public CreateVPCAssociationAuthorizationResult createVPCAssociationAuthorization(CreateVPCAssociationAuthorizationRequest request) {request = beforeClientExecution(request);return executeCreateVPCAssociationAuthorization(request);},public CreateVPCAssociationAuthorizationResult createVPCAssociationAuthorizationCreateVPCAssociationAuthorizationRequest request request  beforeClientExecutionrequestreturn executeCreateVPCAssociationAuthorizationrequest
"public ModifyCacheParameterGroupRequest(String cacheParameterGroupName, java.util.List<ParameterNameValue> parameterNameValues) {setCacheParameterGroupName(cacheParameterGroupName);setParameterNameValues(parameterNameValues);}",public ModifyCacheParameterGroupRequestString cacheParameterGroupName javautilListParameterNameValue parameterNameValues setCacheParameterGroupNamecacheParameterGroupNamesetParameterNameValuesparameterNameValues
public boolean equals( Object o ) {return o instanceof CatalanStemmer;},public boolean equals Object o  return o instanceof CatalanStemmer
"public AutomatonQuery(final Term term, Automaton automaton) {this(term, automaton, Operations.DEFAULT_MAX_DETERMINIZED_STATES);}",public AutomatonQueryfinal Term term Automaton automaton thisterm automaton OperationsDEFAULTMAXDETERMINIZEDSTATES
public String getPattern() {return pattern;},public String getPattern return pattern
"public int compareTo(IntBuffer otherBuffer) {int compareRemaining = (remaining() < otherBuffer.remaining()) ? remaining(): otherBuffer.remaining();int thisPos = position;int otherPos = otherBuffer.position;int thisInt, otherInt;while (compareRemaining > 0) {thisInt = get(thisPos);otherInt = otherBuffer.get(otherPos);if (thisInt != otherInt) {return thisInt < otherInt ? -1 : 1;}thisPos++;otherPos++;compareRemaining--;}return remaining() - otherBuffer.remaining();}",public int compareToIntBuffer otherBuffer int compareRemaining  remaining  otherBufferremaining  remaining otherBufferremainingint thisPos  positionint otherPos  otherBufferpositionint thisInt otherIntwhile compareRemaining  0 thisInt  getthisPosotherInt  otherBuffergetotherPosif thisInt  otherInt return thisInt  otherInt  1  1thisPosotherPoscompareRemainingreturn remaining  otherBufferremaining
public final boolean hasNext() {return next != header;},public final boolean hasNext return next  header
public Class<IndexChangedListener> getListenerType() {return IndexChangedListener.class;},public ClassIndexChangedListener getListenerType return IndexChangedListenerclass
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[OBJECTLINK]\n"");buffer.append(""    .anchorId             = "").append(""0x"").append(HexDump.toHex(  getAnchorId ())).append("" ("").append( getAnchorId() ).append("" )"");buffer.append(System.getProperty(""line.separator""));buffer.append(""    .link1                = "").append(""0x"").append(HexDump.toHex(  getLink1 ())).append("" ("").append( getLink1() ).append("" )"");buffer.append(System.getProperty(""line.separator""));buffer.append(""    .link2                = "").append(""0x"").append(HexDump.toHex(  getLink2 ())).append("" ("").append( getLink2() ).append("" )"");buffer.append(System.getProperty(""line.separator""));buffer.append(""[/OBJECTLINK]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendOBJECTLINKnbufferappend    anchorId              append0xappendHexDumptoHex  getAnchorId append append getAnchorId append bufferappendSystemgetPropertylineseparatorbufferappend    link1                 append0xappendHexDumptoHex  getLink1 append append getLink1 append bufferappendSystemgetPropertylineseparatorbufferappend    link2                 append0xappendHexDumptoHex  getLink2 append append getLink2 append bufferappendSystemgetPropertylineseparatorbufferappendOBJECTLINKnreturn buffertoString
"public void setDetectRenames(boolean on) {if (on && renameDetector == null) {assertHaveReader();renameDetector = new RenameDetector(Reader, diffCfg);} else if (!on)renameDetector = null;}",public void setDetectRenamesboolean on if on  renameDetector  null assertHaveReaderrenameDetector  new RenameDetectorReader diffCfg else if onrenameDetector  null
public boolean isSupported(int bitsPerValue) {return Packed64SingleBlock.isSupported(bitsPerValue);},public boolean isSupportedint bitsPerValue return Packed64SingleBlockisSupportedbitsPerValue
public void setOutputUnigrams(boolean outputUnigrams) {this.outputUnigrams = outputUnigrams;gramSize = new CircularSequence();},public void setOutputUnigramsboolean outputUnigrams thisoutputUnigrams  outputUnigramsgramSize  new CircularSequence
public TypeAsPayloadTokenFilter create(TokenStream input) {return new TypeAsPayloadTokenFilter(input);},public TypeAsPayloadTokenFilter createTokenStream input return new TypeAsPayloadTokenFilterinput
public CreateIndexResult createIndex(CreateIndexRequest request) {request = beforeClientExecution(request);return executeCreateIndex(request);},public CreateIndexResult createIndexCreateIndexRequest request request  beforeClientExecutionrequestreturn executeCreateIndexrequest
"public QualityQuery(String queryID, Map<String,String> nameValPairs) {this.queryID = queryID;this.nameValPairs = nameValPairs;}",public QualityQueryString queryID MapStringString nameValPairs thisqueryID  queryIDthisnameValPairs  nameValPairs
public void addFirst(E object) {addFirstImpl(object);},public void addFirstE object addFirstImplobject
"public ValidateConfigurationSettingsRequest(String applicationName, java.util.List<ConfigurationOptionSetting> optionSettings) {setApplicationName(applicationName);setOptionSettings(optionSettings);}",public ValidateConfigurationSettingsRequestString applicationName javautilListConfigurationOptionSetting optionSettings setApplicationNameapplicationNamesetOptionSettingsoptionSettings
"public static FileKey exact(File directory, FS fs) {return new FileKey(directory, fs);}",public static FileKey exactFile directory FS fs return new FileKeydirectory fs
public void removeScale() {remove1stProperty(PropertyIDMap.PID_SCALE);},public void removeScale remove1stPropertyPropertyIDMapPIDSCALE
"public DocumentDictionary(IndexReader Reader, String field, String weightField, String payloadField, String contextsField) {this.Reader = Reader;this.field = field;this.weightField = weightField;this.payloadField = payloadField;this.contextsField = contextsField;}",public DocumentDictionaryIndexReader Reader String field String weightField String payloadField String contextsField thisReader  Readerthisfield  fieldthisweightField  weightFieldthispayloadField  payloadFieldthiscontextsField  contextsField
public long get(int index) {final int o = index / 5;final int b = index % 5;final int shift = b * 12;return (blocks[o] >>> shift) & 4095L;},public long getint index final int o  index  5final int b  index  5final int shift  b  12return blockso  shift  4095L
@Override public void clear() {synchronized (mutex) {c.clear();}},Override public void clear synchronized mutex cclear
public boolean hasNext() {return _nextIndex < _endIx;},public boolean hasNext return nextIndex  endIx
public AssociateVirtualInterfaceResult associateVirtualInterface(AssociateVirtualInterfaceRequest request) {request = beforeClientExecution(request);return executeAssociateVirtualInterface(request);},public AssociateVirtualInterfaceResult associateVirtualInterfaceAssociateVirtualInterfaceRequest request request  beforeClientExecutionrequestreturn executeAssociateVirtualInterfacerequest
"public DoubleValuesSource makeDistanceValueSource(Point queryPoint) {return makeDistanceValueSource(queryPoint, 1.0);}",public DoubleValuesSource makeDistanceValueSourcePoint queryPoint return makeDistanceValueSourcequeryPoint 10
public float getTokenScore() {position += posIncAtt.getPositionIncrement();String termText = termAtt.toString();WeightedSpanTerm weightedSpanTerm;if ((weightedSpanTerm = fieldWeightedSpanTerms.get(termText)) == null) {return 0;}if (weightedSpanTerm.positionSensitive &&!weightedSpanTerm.checkPosition(position)) {return 0;}float score = weightedSpanTerm.getWeight();if (!foundTerms.contains(termText)) {totalScore += score;foundTerms.add(termText);}return score;},public float getTokenScore position  posIncAttgetPositionIncrementString termText  termAtttoStringWeightedSpanTerm weightedSpanTermif weightedSpanTerm  fieldWeightedSpanTermsgettermText  null return 0if weightedSpanTermpositionSensitive weightedSpanTermcheckPositionposition return 0float score  weightedSpanTermgetWeightif foundTermscontainstermText totalScore  scorefoundTermsaddtermTextreturn score
"public E pollFirst() {Map.Entry<E, Object> entry = backingMap.pollFirstEntry();return (entry == null) ? null : entry.getKey();}",public E pollFirst MapEntryE Object entry  backingMappollFirstEntryreturn entry  null  null  entrygetKey
"public void enterEveryRule(ParserRuleContext ctx) {System.out.println(""enter   "" + getRuleNames()[ctx.getRuleIndex()] +"", LT(1)="" + _input.LT(1).getText());}",public void enterEveryRuleParserRuleContext ctx Systemoutprintlnenter     getRuleNamesctxgetRuleIndex  LT1  inputLT1getText
"public ShortBuffer put(int index, short c) {checkIndex(index);byteBuffer.putShort(index * SizeOf.SHORT, c);return this;}",public ShortBuffer putint index short c checkIndexindexbyteBufferputShortindex  SizeOfSHORT creturn this
public void notifyUpdateCell(Cell cell) {_bookEvaluator.notifyUpdateCell(new HSSFEvaluationCell((HSSFCell)cell));},public void notifyUpdateCellCell cell bookEvaluatornotifyUpdateCellnew HSSFEvaluationCellHSSFCellcell
"public void moveCell(HSSFCell cell, short newColumn) {if(cells.length > newColumn && cells[newColumn] != null) {throw new IllegalArgumentException(""Asked to move cell to column "" + newColumn + "" but there's already a cell there"");}if(! cells[cell.getColumnIndex()].equals(cell)) {throw new IllegalArgumentException(""Asked to move a cell, but it didn't belong to our row"");}removeCell(cell, false);cell.updateCellNum(newColumn);addCell(cell);}",public void moveCellHSSFCell cell short newColumn ifcellslength  newColumn  cellsnewColumn  null throw new IllegalArgumentExceptionAsked to move cell to column   newColumn   but theres already a cell thereif cellscellgetColumnIndexequalscell throw new IllegalArgumentExceptionAsked to move a cell but it didnt belong to our rowremoveCellcell falsecellupdateCellNumnewColumnaddCellcell
public void connect(PipedWriter src) throws IOException {src.connect(this);},public void connectPipedWriter src throws IOException srcconnectthis
public void serialize(LittleEndianOutput out) {out.writeShort(getFirstColumn());out.writeShort(getLastColumn());out.writeShort(getColumnWidth());out.writeShort(getXFIndex());out.writeShort(_options);out.writeShort(field_6_reserved);},public void serializeLittleEndianOutput out outwriteShortgetFirstColumnoutwriteShortgetLastColumnoutwriteShortgetColumnWidthoutwriteShortgetXFIndexoutwriteShortoptionsoutwriteShortfield6reserved
public ModifyWorkspaceCreationPropertiesResult modifyWorkspaceCreationProperties(ModifyWorkspaceCreationPropertiesRequest request) {request = beforeClientExecution(request);return executeModifyWorkspaceCreationProperties(request);},public ModifyWorkspaceCreationPropertiesResult modifyWorkspaceCreationPropertiesModifyWorkspaceCreationPropertiesRequest request request  beforeClientExecutionrequestreturn executeModifyWorkspaceCreationPropertiesrequest
public BoolDocValues(ValueSource vs) {this.vs = vs;},public BoolDocValuesValueSource vs thisvs  vs
public void reset() {nextWrite--;while(count > 0) {if (nextWrite == -1) {nextWrite = positions.length - 1;}positions[nextWrite--].reset();count--;}nextWrite = 0;nextPos = 0;count = 0;},public void reset nextWritewhilecount  0 if nextWrite  1 nextWrite  positionslength  1positionsnextWriteresetcountnextWrite  0nextPos  0count  0
public UpdateDirectConnectGatewayAssociationResult updateDirectConnectGatewayAssociation(UpdateDirectConnectGatewayAssociationRequest request) {request = beforeClientExecution(request);return executeUpdateDirectConnectGatewayAssociation(request);},public UpdateDirectConnectGatewayAssociationResult updateDirectConnectGatewayAssociationUpdateDirectConnectGatewayAssociationRequest request request  beforeClientExecutionrequestreturn executeUpdateDirectConnectGatewayAssociationrequest
"public EditPhotoStoreRequest() {super(""CloudPhoto"", ""2017-07-11"", ""EditPhotoStore"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public EditPhotoStoreRequest superCloudPhoto 20170711 EditPhotoStore cloudphotosetProtocolProtocolTypeHTTPS
"public String toString() {return ""<matchNoDocsQueryNode/>"";}",public String toString return matchNoDocsQueryNode
public AddCommand addFilepattern(String filepattern) {checkCallable();filepatterns.add(filepattern);return this;},public AddCommand addFilepatternString filepattern checkCallablefilepatternsaddfilepatternreturn this
"public String toString() {return '[' + ""HEADERFOOTER"" + ""] (0x"" +Integer.toHexString(sid).toUpperCase(Locale.ROOT) + "")\n"" +""  rawData="" + HexDump.toHex(_rawData) + ""\n"" +""[/"" + ""HEADERFOOTER"" + ""]\n"";}",public String toString return   HEADERFOOTER   0x IntegertoHexStringsidtoUpperCaseLocaleROOT  n   rawData  HexDumptoHexrawData  n   HEADERFOOTER  n
public UpdateBrokerResult updateBroker(UpdateBrokerRequest request) {request = beforeClientExecution(request);return executeUpdateBroker(request);},public UpdateBrokerResult updateBrokerUpdateBrokerRequest request request  beforeClientExecutionrequestreturn executeUpdateBrokerrequest
public FormatRecord clone() {return copy();},public FormatRecord clone return copy
public AssociateS3ResourcesResult associateS3Resources(AssociateS3ResourcesRequest request) {request = beforeClientExecution(request);return executeAssociateS3Resources(request);},public AssociateS3ResourcesResult associateS3ResourcesAssociateS3ResourcesRequest request request  beforeClientExecutionrequestreturn executeAssociateS3Resourcesrequest
"public UnknownRecord(int id, byte[] data) {_sid = id & 0xFFFF;_rawData = data;}",public UnknownRecordint id byte data sid  id  0xFFFFrawData  data
"public TreeFilter clone() {return new Binary(a.clone(), b.clone());}",public TreeFilter clone return new Binaryaclone bclone
public int getRawValue(final int holder){return (holder & _mask);},public int getRawValuefinal int holderreturn holder  mask
public CancelResizeResult cancelResize(CancelResizeRequest request) {request = beforeClientExecution(request);return executeCancelResize(request);},public CancelResizeResult cancelResizeCancelResizeRequest request request  beforeClientExecutionrequestreturn executeCancelResizerequest
public CreateTransitGatewayRouteResult createTransitGatewayRoute(CreateTransitGatewayRouteRequest request) {request = beforeClientExecution(request);return executeCreateTransitGatewayRoute(request);},public CreateTransitGatewayRouteResult createTransitGatewayRouteCreateTransitGatewayRouteRequest request request  beforeClientExecutionrequestreturn executeCreateTransitGatewayRouterequest
"public FastVectorHighlighter( boolean phraseHighlight, boolean fieldMatch,FragListBuilder fragListBuilder, FragmentsBuilder fragmentsBuilder ){this.phraseHighlight = phraseHighlight;this.fieldMatch = fieldMatch;this.fragListBuilder = fragListBuilder;this.fragmentsBuilder = fragmentsBuilder;}",public FastVectorHighlighter boolean phraseHighlight boolean fieldMatchFragListBuilder fragListBuilder FragmentsBuilder fragmentsBuilder thisphraseHighlight  phraseHighlightthisfieldMatch  fieldMatchthisfragListBuilder  fragListBuilderthisfragmentsBuilder  fragmentsBuilder
public SetTypeDefaultVersionResult setTypeDefaultVersion(SetTypeDefaultVersionRequest request) {request = beforeClientExecution(request);return executeSetTypeDefaultVersion(request);},public SetTypeDefaultVersionResult setTypeDefaultVersionSetTypeDefaultVersionRequest request request  beforeClientExecutionrequestreturn executeSetTypeDefaultVersionrequest
public final long computeNorm(FieldInvertState state) {return get(state.getName()).computeNorm(state);},public final long computeNormFieldInvertState state return getstategetNamecomputeNormstate
public CreateCustomVerificationEmailTemplateResult createCustomVerificationEmailTemplate(CreateCustomVerificationEmailTemplateRequest request) {request = beforeClientExecution(request);return executeCreateCustomVerificationEmailTemplate(request);},public CreateCustomVerificationEmailTemplateResult createCustomVerificationEmailTemplateCreateCustomVerificationEmailTemplateRequest request request  beforeClientExecutionrequestreturn executeCreateCustomVerificationEmailTemplaterequest
public static double median(double[] v) {double r = Double.NaN;if (v!=null && v.length >= 1) {int n = v.length;Arrays.sort(v);r = (n % 2 == 0)? (v[n / 2] + v[n / 2 - 1]) / 2: v[n / 2];}return r;},public static double mediandouble v double r  DoubleNaNif vnull  vlength  1 int n  vlengthArrayssortvr  n  2  0 vn  2  vn  2  1  2 vn  2return r
"public void walk(ParseTreeListener listener, ParseTree t) {if ( t instanceof ErrorNode) {listener.visitErrorNode((ErrorNode)t);return;}else if ( t instanceof TerminalNode) {listener.visitTerminal((TerminalNode)t);return;}RuleNode r = (RuleNode)t;enterRule(listener, r);int n = r.getChildCount();for (int i = 0; i<n; i++) {walk(listener, r.getChild(i));}exitRule(listener, r);}",public void walkParseTreeListener listener ParseTree t if  t instanceof ErrorNode listenervisitErrorNodeErrorNodetreturnelse if  t instanceof TerminalNode listenervisitTerminalTerminalNodetreturnRuleNode r  RuleNodetenterRulelistener rint n  rgetChildCountfor int i  0 in i walklistener rgetChildiexitRulelistener r
public SCLRecord(RecordInputStream in) {field_1_numerator              = in.readShort();field_2_denominator            = in.readShort();},public SCLRecordRecordInputStream in field1numerator               inreadShortfield2denominator             inreadShort
"public boolean add(final T value) {int index = elements.size();elements.add(value);valueKeyMap.put(value, index);return true;}",public boolean addfinal T value int index  elementssizeelementsaddvaluevalueKeyMapputvalue indexreturn true
"public RawText(byte[] input) {this(input, RawParseUtils.lineMap(input, 0, input.length));}",public RawTextbyte input thisinput RawParseUtilslineMapinput 0 inputlength
public void writeInt(int v) {checkPosition(4);int i = _writeIndex;_buf[i++] = (byte)((v >>>  0) & 0xFF);_buf[i++] = (byte)((v >>>  8) & 0xFF);_buf[i++] = (byte)((v >>> 16) & 0xFF);_buf[i++] = (byte)((v >>> 24) & 0xFF);_writeIndex = i;},public void writeIntint v checkPosition4int i  writeIndexbufi  bytev   0  0xFFbufi  bytev   8  0xFFbufi  bytev  16  0xFFbufi  bytev  24  0xFFwriteIndex  i
"public GetRepoBatchRequest() {super(""cr"", ""2016-06-07"", ""GetRepoBatch"", ""cr"");setUriPattern(""/batchsearch"");setMethod(MethodType.GET);}",public GetRepoBatchRequest supercr 20160607 GetRepoBatch crsetUriPatternbatchsearchsetMethodMethodTypeGET
"public MoPenDoRecognizeRequest() {super(""MoPen"", ""2018-02-11"", ""MoPenDoRecognize"", ""mopen"");setProtocol(ProtocolType.HTTPS);setMethod(MethodType.POST);}",public MoPenDoRecognizeRequest superMoPen 20180211 MoPenDoRecognize mopensetProtocolProtocolTypeHTTPSsetMethodMethodTypePOST
"public Iterator<Map.Entry<K,V>> iterator() {return new EntryIterator();}",public IteratorMapEntryKV iterator return new EntryIterator
public DeleteApnsSandboxChannelResult deleteApnsSandboxChannel(DeleteApnsSandboxChannelRequest request) {request = beforeClientExecution(request);return executeDeleteApnsSandboxChannel(request);},public DeleteApnsSandboxChannelResult deleteApnsSandboxChannelDeleteApnsSandboxChannelRequest request request  beforeClientExecutionrequestreturn executeDeleteApnsSandboxChannelrequest
"public short readShort() {if (shouldSkipEncryptionOnCurrentRecord) {readPlain(buffer, 0, LittleEndianConsts.SHORT_SIZE);return LittleEndian.getShort(buffer);} else {return ccis.readShort();}}",public short readShort if shouldSkipEncryptionOnCurrentRecord readPlainbuffer 0 LittleEndianConstsSHORTSIZEreturn LittleEndiangetShortbuffer else return ccisreadShort
public DeleteEndpointResult deleteEndpoint(DeleteEndpointRequest request) {request = beforeClientExecution(request);return executeDeleteEndpoint(request);},public DeleteEndpointResult deleteEndpointDeleteEndpointRequest request request  beforeClientExecutionrequestreturn executeDeleteEndpointrequest
@Override public int lastIndexOf(Object object) {return list.lastIndexOf(object);},Override public int lastIndexOfObject object return listlastIndexOfobject
"public void SwitchTo(int lexState){if (lexState >= 3 || lexState < 0)throw new TokenMgrError(""Error: Ignoring invalid lexical state : "" + lexState + "". State unchanged."", TokenMgrError.INVALID_LEXICAL_STATE);elsecurLexState = lexState;}",public void SwitchToint lexStateif lexState  3  lexState  0throw new TokenMgrErrorError Ignoring invalid lexical state    lexState   State unchanged TokenMgrErrorINVALIDLEXICALSTATEelsecurLexState  lexState
"public GetIndustryInfoChildrenListRequest() {super(""industry-brain"", ""2018-07-12"", ""GetIndustryInfoChildrenList"");setProtocol(ProtocolType.HTTPS);}",public GetIndustryInfoChildrenListRequest superindustrybrain 20180712 GetIndustryInfoChildrenListsetProtocolProtocolTypeHTTPS
"public Credential(String keyId, String secret, int expiredHours) {this.accessKeyId = keyId;this.accessSecret = secret;this.refreshDate = new Date();setExpiredDate(expiredHours);}",public CredentialString keyId String secret int expiredHours thisaccessKeyId  keyIdthisaccessSecret  secretthisrefreshDate  new DatesetExpiredDateexpiredHours
"public KeywordMarkerFilterFactory(Map<String,String> args) {super(args);wordFiles = get(args, PROTECTED_TOKENS);stringPattern = get(args, PATTERN);ignoreCase = getBoolean(args, ""ignoreCase"", false);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public KeywordMarkerFilterFactoryMapStringString args superargswordFiles  getargs PROTECTEDTOKENSstringPattern  getargs PATTERNignoreCase  getBooleanargs ignoreCase falseif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public CellRangeAddress getAreaAt(int index) {return _regions[_startIndex + index];},public CellRangeAddress getAreaAtint index return regionsstartIndex  index
public PutEmailIdentityDkimSigningAttributesResult putEmailIdentityDkimSigningAttributes(PutEmailIdentityDkimSigningAttributesRequest request) {request = beforeClientExecution(request);return executePutEmailIdentityDkimSigningAttributes(request);},public PutEmailIdentityDkimSigningAttributesResult putEmailIdentityDkimSigningAttributesPutEmailIdentityDkimSigningAttributesRequest request request  beforeClientExecutionrequestreturn executePutEmailIdentityDkimSigningAttributesrequest
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("" [FEATURE SMART TAGS]\n"");buffer.append("" [/FEATURE SMART TAGS]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappend FEATURE SMART TAGSnbufferappend FEATURE SMART TAGSnreturn buffertoString
"public static void checkStartAndEnd(int len, int start, int end) {if (start < 0 || end > len) {throw new ArrayIndexOutOfBoundsException(""start < 0 || end > len.""+ "" start="" + start + "", end="" + end + "", len="" + len);}if (start > end) {throw new IllegalArgumentException(""start > end: "" + start + "" > "" + end);}}",public static void checkStartAndEndint len int start int end if start  0  end  len throw new ArrayIndexOutOfBoundsExceptionstart  0  end  len  start  start   end  end   len  lenif start  end throw new IllegalArgumentExceptionstart  end   start      end
"public Loc(int bookIndex, int sheetIndex, int rowIndex, int columnIndex) {_bookSheetColumn = toBookSheetColumn(bookIndex, sheetIndex, columnIndex);_rowIndex = rowIndex;}",public Locint bookIndex int sheetIndex int rowIndex int columnIndex bookSheetColumn  toBookSheetColumnbookIndex sheetIndex columnIndexrowIndex  rowIndex
"public BoolErrRecord(RecordInputStream in) {super(in);switch (in.remaining()) {case 2:_value = in.readByte();break;case 3:_value = in.readUShort();break;default:throw new RecordFormatException(""Unexpected size (""+ in.remaining() + "") for BOOLERR record."");}int flag = in.readUByte();switch (flag) {case 0:_isError = false;break;case 1:_isError = true;break;default:throw new RecordFormatException(""Unexpected isError flag (""+ flag + "") for BOOLERR record."");}}",public BoolErrRecordRecordInputStream in superinswitch inremaining case 2value  inreadBytebreakcase 3value  inreadUShortbreakdefaultthrow new RecordFormatExceptionUnexpected size  inremaining   for BOOLERR recordint flag  inreadUByteswitch flag case 0isError  falsebreakcase 1isError  truebreakdefaultthrow new RecordFormatExceptionUnexpected isError flag  flag   for BOOLERR record
"public String toString() {return ""OrdTermState ord="" + ord;}",public String toString return OrdTermState ord  ord
"public Note(AnyObjectId noteOn, ObjectId noteData) {super(noteOn);data = noteData;}",public NoteAnyObjectId noteOn ObjectId noteData supernoteOndata  noteData
public GetModelVersionResult getModelVersion(GetModelVersionRequest request) {request = beforeClientExecution(request);return executeGetModelVersion(request);},public GetModelVersionResult getModelVersionGetModelVersionRequest request request  beforeClientExecutionrequestreturn executeGetModelVersionrequest
"public void addBreak(int Main, int subFrom, int subTo) {Integer key = Integer.valueOf(Main);Break region = _breakMap.get(key);if(region == null) {region = new Break(Main, subFrom, subTo);_breakMap.put(key, region);_breaks.add(region);} else {region.Main = Main;region.subFrom = subFrom;region.subTo = subTo;}}",public void addBreakint Main int subFrom int subTo Integer key  IntegervalueOfMainBreak region  breakMapgetkeyifregion  null region  new BreakMain subFrom subTobreakMapputkey regionbreaksaddregion else regionMain  MainregionsubFrom  subFromregionsubTo  subTo
public DescribeUsageReportSubscriptionsResult describeUsageReportSubscriptions(DescribeUsageReportSubscriptionsRequest request) {request = beforeClientExecution(request);return executeDescribeUsageReportSubscriptions(request);},public DescribeUsageReportSubscriptionsResult describeUsageReportSubscriptionsDescribeUsageReportSubscriptionsRequest request request  beforeClientExecutionrequestreturn executeDescribeUsageReportSubscriptionsrequest
public boolean offerLast(E e) {return addLastImpl(e);},public boolean offerLastE e return addLastImple
"public RegistrantProfileRealNameVerificationRequest() {super(""Domain"", ""2018-01-29"", ""RegistrantProfileRealNameVerification"");setMethod(MethodType.POST);}",public RegistrantProfileRealNameVerificationRequest superDomain 20180129 RegistrantProfileRealNameVerificationsetMethodMethodTypePOST
"public RowColKey(int rowIndex, int columnIndex) {_rowIndex = rowIndex;_columnIndex = columnIndex;}",public RowColKeyint rowIndex int columnIndex rowIndex  rowIndexcolumnIndex  columnIndex
public DisassociateTransitGatewayMulticastDomainResult disassociateTransitGatewayMulticastDomain(DisassociateTransitGatewayMulticastDomainRequest request) {request = beforeClientExecution(request);return executeDisassociateTransitGatewayMulticastDomain(request);},public DisassociateTransitGatewayMulticastDomainResult disassociateTransitGatewayMulticastDomainDisassociateTransitGatewayMulticastDomainRequest request request  beforeClientExecutionrequestreturn executeDisassociateTransitGatewayMulticastDomainrequest
public Charset detectedCharset() {throw new UnsupportedOperationException();},public Charset detectedCharset throw new UnsupportedOperationException
public RightMarginRecord clone() {return copy();},public RightMarginRecord clone return copy
public ListTrafficPoliciesResult listTrafficPolicies(ListTrafficPoliciesRequest request) {request = beforeClientExecution(request);return executeListTrafficPolicies(request);},public ListTrafficPoliciesResult listTrafficPoliciesListTrafficPoliciesRequest request request  beforeClientExecutionrequestreturn executeListTrafficPoliciesrequest
public DeleteKeyPairRequest(String keyName) {setKeyName(keyName);},public DeleteKeyPairRequestString keyName setKeyNamekeyName
"public void setElement(int index, byte[] element) {if (emptyComplexPart) {return;}int actualSize = getActualSizeOfElements(getSizeOfElements());System.arraycopy( element, 0, getComplexData(), FIXED_SIZE + index * actualSize, actualSize);}",public void setElementint index byte element if emptyComplexPart returnint actualSize  getActualSizeOfElementsgetSizeOfElementsSystemarraycopy element 0 getComplexData FIXEDSIZE  index  actualSize actualSize
"public FieldDoc(int doc, float score, Object[] fields) {super(doc, score);this.fields = fields;}",public FieldDocint doc float score Object fields superdoc scorethisfields  fields
"public TreeFilter clone() {return new Binary(a.clone(), b.clone());}",public TreeFilter clone return new Binaryaclone bclone
"public void fillTo(int toIndex, long val) {while (count < toIndex)add(val);}",public void fillToint toIndex long val while count  toIndexaddval
"public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long byte0 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = byte0 >>> 5;values[valuesOffset++] = (byte0 >>> 2) & 7;final long byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte0 & 3) << 1) | (byte1 >>> 7);values[valuesOffset++] = (byte1 >>> 4) & 7;values[valuesOffset++] = (byte1 >>> 1) & 7;final long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 1) << 2) | (byte2 >>> 6);values[valuesOffset++] = (byte2 >>> 3) & 7;values[valuesOffset++] = byte2 & 7;}}",public void decodebyte blocks int blocksOffset long values int valuesOffset int iterations for int i  0 i  iterations i final long byte0  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  5valuesvaluesOffset  byte0  2  7final long byte1  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  3  1  byte1  7valuesvaluesOffset  byte1  4  7valuesvaluesOffset  byte1  1  7final long byte2  blocksblocksOffset  0xFFvaluesvaluesOffset  byte1  1  2  byte2  6valuesvaluesOffset  byte2  3  7valuesvaluesOffset  byte2  7
public RawText getResultContents() {return resultContents;},public RawText getResultContents return resultContents
"public void setMaxShingleSize(int maxShingleSize) {if (maxShingleSize < 2) {throw new IllegalArgumentException(""Max shingle size must be >= 2"");}this.maxShingleSize = maxShingleSize;}",public void setMaxShingleSizeint maxShingleSize if maxShingleSize  2 throw new IllegalArgumentExceptionMax shingle size must be  2thismaxShingleSize  maxShingleSize
public FieldInfo(RecordInputStream in) {_isxvi = in.readShort();_isxvd = in.readShort();_idObj = in.readShort();},public FieldInfoRecordInputStream in isxvi  inreadShortisxvd  inreadShortidObj  inreadShort
public DescribeDBEngineVersionsResult describeDBEngineVersions(DescribeDBEngineVersionsRequest request) {request = beforeClientExecution(request);return executeDescribeDBEngineVersions(request);},public DescribeDBEngineVersionsResult describeDBEngineVersionsDescribeDBEngineVersionsRequest request request  beforeClientExecutionrequestreturn executeDescribeDBEngineVersionsrequest
public DBSnapshot copyDBSnapshot(CopyDBSnapshotRequest request) {request = beforeClientExecution(request);return executeCopyDBSnapshot(request);},public DBSnapshot copyDBSnapshotCopyDBSnapshotRequest request request  beforeClientExecutionrequestreturn executeCopyDBSnapshotrequest
"public DFA(DecisionState atnStartState, int decision) {this.atnStartState = atnStartState;this.decision = decision;boolean precedenceDfa = false;if (atnStartState instanceof StarLoopEntryState) {if (((StarLoopEntryState)atnStartState).isPrecedenceDecision) {precedenceDfa = true;DFAState precedenceState = new DFAState(new ATNConfigSet());precedenceState.edges = new DFAState[0];precedenceState.isAcceptState = false;precedenceState.requiresFullContext = false;this.s0 = precedenceState;}}this.precedenceDfa = precedenceDfa;}",public DFADecisionState atnStartState int decision thisatnStartState  atnStartStatethisdecision  decisionboolean precedenceDfa  falseif atnStartState instanceof StarLoopEntryState if StarLoopEntryStateatnStartStateisPrecedenceDecision precedenceDfa  trueDFAState precedenceState  new DFAStatenew ATNConfigSetprecedenceStateedges  new DFAState0precedenceStateisAcceptState  falseprecedenceStaterequiresFullContext  falsethiss0  precedenceStatethisprecedenceDfa  precedenceDfa
public QueryParserTokenManager(CharStream stream){input_stream = stream;},public QueryParserTokenManagerCharStream streaminputstream  stream
"public String toString() {return ""<group>"" + ""\n"" + getChild().toString() + ""\n</group>"";}",public String toString return group  n  getChildtoString  ngroup
public UpdateResolverRuleResult updateResolverRule(UpdateResolverRuleRequest request) {request = beforeClientExecution(request);return executeUpdateResolverRule(request);},public UpdateResolverRuleResult updateResolverRuleUpdateResolverRuleRequest request request  beforeClientExecutionrequestreturn executeUpdateResolverRulerequest
"public int compareTo(BytesRef other) {return Arrays.compareUnsigned(this.bytes, this.offset, this.offset + this.length,other.bytes, other.offset, other.offset + other.length);}",public int compareToBytesRef other return ArrayscompareUnsignedthisbytes thisoffset thisoffset  thislengthotherbytes otheroffset otheroffset  otherlength
public void rewind() {ns.removeAllElements();ks.setLength(0);cur = root;Run();},public void rewind nsremoveAllElementskssetLength0cur  rootRun
public ModifyWorkspaceAccessPropertiesResult modifyWorkspaceAccessProperties(ModifyWorkspaceAccessPropertiesRequest request) {request = beforeClientExecution(request);return executeModifyWorkspaceAccessProperties(request);},public ModifyWorkspaceAccessPropertiesResult modifyWorkspaceAccessPropertiesModifyWorkspaceAccessPropertiesRequest request request  beforeClientExecutionrequestreturn executeModifyWorkspaceAccessPropertiesrequest
public DescribeFleetAttributesResult describeFleetAttributes(DescribeFleetAttributesRequest request) {request = beforeClientExecution(request);return executeDescribeFleetAttributes(request);},public DescribeFleetAttributesResult describeFleetAttributesDescribeFleetAttributesRequest request request  beforeClientExecutionrequestreturn executeDescribeFleetAttributesrequest
public CreateBuildResult createBuild(CreateBuildRequest request) {request = beforeClientExecution(request);return executeCreateBuild(request);},public CreateBuildResult createBuildCreateBuildRequest request request  beforeClientExecutionrequestreturn executeCreateBuildrequest
"public static FloatBuffer wrap(float[] array, int start, int floatCount) {Arrays.checkOffsetAndCount(array.length, start, floatCount);FloatBuffer buf = new ReadWriteFloatArrayBuffer(array);buf.position = start;buf.limit = start + floatCount;return buf;}",public static FloatBuffer wrapfloat array int start int floatCount ArrayscheckOffsetAndCountarraylength start floatCountFloatBuffer buf  new ReadWriteFloatArrayBufferarraybufposition  startbuflimit  start  floatCountreturn buf
"public String toString() {StringBuilder result = new StringBuilder();DateFormatTokenizer tokenizer = new DateFormatTokenizer(format);String token;while( ( token = tokenizer.getNextToken() ) != null ) {if( result.length() > 0 ) {result.append( "", "" );}result.append(""["").append(token).append(""]"");}return result.toString();}",public String toString StringBuilder result  new StringBuilderDateFormatTokenizer tokenizer  new DateFormatTokenizerformatString tokenwhile  token  tokenizergetNextToken   null  if resultlength  0  resultappend   resultappendappendtokenappendreturn resulttoString
public byte readByte() {return data[pos++];},public byte readByte return datapos
public CreateDatasetResult createDataset(CreateDatasetRequest request) {request = beforeClientExecution(request);return executeCreateDataset(request);},public CreateDatasetResult createDatasetCreateDatasetRequest request request  beforeClientExecutionrequestreturn executeCreateDatasetrequest
public BytesRef next() {termOrd++;if (termOrd < terms.length) {return setTerm();} else {return null;}},public BytesRef next termOrdif termOrd  termslength return setTerm else return null
public static FontCharset valueOf(int value){return (value < 0 || value >= _table.length) ? null :_table[value];},public static FontCharset valueOfint valuereturn value  0  value  tablelength  null tablevalue
"public static String escape(String s) {StringBuilder sb = new StringBuilder();for (int i = 0; i < s.length(); i++) {char c = s.charAt(i);if (c == '\\' || c == '+' || c == '-' || c == '!' || c == '(' || c == ')'|| c == ':' || c == '^' || c == '[' || c == ']' || c == '\""'|| c == '{' || c == '}' || c == '~' || c == '*' || c == '?'|| c == '|' || c == '&' || c == '/') {sb.append('\\');}sb.append(c);}return sb.toString();}",public static String escapeString s StringBuilder sb  new StringBuilderfor int i  0 i  slength i char c  scharAtiif c    c    c    c    c    c   c    c    c    c    c   c    c    c    c    c   c    c    c   sbappendsbappendcreturn sbtoString
public RejectVpcEndpointConnectionsResult rejectVpcEndpointConnections(RejectVpcEndpointConnectionsRequest request) {request = beforeClientExecution(request);return executeRejectVpcEndpointConnections(request);},public RejectVpcEndpointConnectionsResult rejectVpcEndpointConnectionsRejectVpcEndpointConnectionsRequest request request  beforeClientExecutionrequestreturn executeRejectVpcEndpointConnectionsrequest
public V next() { return nextEntry().value; },public V next  return nextEntryvalue 
"public ShingleAnalyzerWrapper(Analyzer delegate,int minShingleSize,int maxShingleSize,String tokenSeparator,boolean outputUnigrams,boolean outputUnigramsIfNoShingles,String fillerToken) {super(delegate.getReuseStrategy());this.delegate = delegate;if (maxShingleSize < 2) {throw new IllegalArgumentException(""Max shingle size must be >= 2"");}this.maxShingleSize = maxShingleSize;if (minShingleSize < 2) {throw new IllegalArgumentException(""Min shingle size must be >= 2"");}if (minShingleSize > maxShingleSize) {throw new IllegalArgumentException(""Min shingle size must be <= max shingle size"");}this.minShingleSize = minShingleSize;this.tokenSeparator = (tokenSeparator == null ? """" : tokenSeparator);this.outputUnigrams = outputUnigrams;this.outputUnigramsIfNoShingles = outputUnigramsIfNoShingles;this.fillerToken = fillerToken;}",public ShingleAnalyzerWrapperAnalyzer delegateint minShingleSizeint maxShingleSizeString tokenSeparatorboolean outputUnigramsboolean outputUnigramsIfNoShinglesString fillerToken superdelegategetReuseStrategythisdelegate  delegateif maxShingleSize  2 throw new IllegalArgumentExceptionMax shingle size must be  2thismaxShingleSize  maxShingleSizeif minShingleSize  2 throw new IllegalArgumentExceptionMin shingle size must be  2if minShingleSize  maxShingleSize throw new IllegalArgumentExceptionMin shingle size must be  max shingle sizethisminShingleSize  minShingleSizethistokenSeparator  tokenSeparator  null    tokenSeparatorthisoutputUnigrams  outputUnigramsthisoutputUnigramsIfNoShingles  outputUnigramsIfNoShinglesthisfillerToken  fillerToken
public CreateInterconnectResult createInterconnect(CreateInterconnectRequest request) {request = beforeClientExecution(request);return executeCreateInterconnect(request);},public CreateInterconnectResult createInterconnectCreateInterconnectRequest request request  beforeClientExecutionrequestreturn executeCreateInterconnectrequest
public DeleteTrafficMirrorTargetResult deleteTrafficMirrorTarget(DeleteTrafficMirrorTargetRequest request) {request = beforeClientExecution(request);return executeDeleteTrafficMirrorTarget(request);},public DeleteTrafficMirrorTargetResult deleteTrafficMirrorTargetDeleteTrafficMirrorTargetRequest request request  beforeClientExecutionrequestreturn executeDeleteTrafficMirrorTargetrequest
public UpdateMonitoringScheduleResult updateMonitoringSchedule(UpdateMonitoringScheduleRequest request) {request = beforeClientExecution(request);return executeUpdateMonitoringSchedule(request);},public UpdateMonitoringScheduleResult updateMonitoringScheduleUpdateMonitoringScheduleRequest request request  beforeClientExecutionrequestreturn executeUpdateMonitoringSchedulerequest
public DeleteGatewayGroupResult deleteGatewayGroup(DeleteGatewayGroupRequest request) {request = beforeClientExecution(request);return executeDeleteGatewayGroup(request);},public DeleteGatewayGroupResult deleteGatewayGroupDeleteGatewayGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteGatewayGrouprequest
public ListStackSetOperationsResult listStackSetOperations(ListStackSetOperationsRequest request) {request = beforeClientExecution(request);return executeListStackSetOperations(request);},public ListStackSetOperationsResult listStackSetOperationsListStackSetOperationsRequest request request  beforeClientExecutionrequestreturn executeListStackSetOperationsrequest
public ListOfOutputs(Outputs<T> outputs) {this.outputs = outputs;},public ListOfOutputsOutputsT outputs thisoutputs  outputs
"public ExceedsLimit(long limit, long size) {this.limit = limit;this.size = size;}",public ExceedsLimitlong limit long size thislimit  limitthissize  size
"public GetIndustryInfoRequest() {super(""industry-brain"", ""2018-07-12"", ""GetIndustryInfo"");setProtocol(ProtocolType.HTTPS);}",public GetIndustryInfoRequest superindustrybrain 20180712 GetIndustryInfosetProtocolProtocolTypeHTTPS
public CreateVpnGatewayRequest(String type) {setType(type);},public CreateVpnGatewayRequestString type setTypetype
public int compareTo(PointTransitions other) {return point - other.point;},public int compareToPointTransitions other return point  otherpoint
public DeleteQueuedReservedInstancesResult deleteQueuedReservedInstances(DeleteQueuedReservedInstancesRequest request) {request = beforeClientExecution(request);return executeDeleteQueuedReservedInstances(request);},public DeleteQueuedReservedInstancesResult deleteQueuedReservedInstancesDeleteQueuedReservedInstancesRequest request request  beforeClientExecutionrequestreturn executeDeleteQueuedReservedInstancesrequest
"public static final AbbreviatedObjectId fromString(String str) {if (str.length() > Constants.OBJECT_ID_STRING_LENGTH)throw new IllegalArgumentException(MessageFormat.format(JGitText.get().invalidId, str));final byte[] b = Constants.encodeASCII(str);return fromHexString(b, 0, b.length);}",public static final AbbreviatedObjectId fromStringString str if strlength  ConstantsOBJECTIDSTRINGLENGTHthrow new IllegalArgumentExceptionMessageFormatformatJGitTextgetinvalidId strfinal byte b  ConstantsencodeASCIIstrreturn fromHexStringb 0 blength
public final int getByte(int index) {int w;switch (index >> 2) {case 0:w = w1;break;case 1:w = w2;break;case 2:w = w3;break;case 3:w = w4;break;case 4:w = w5;break;default:throw new ArrayIndexOutOfBoundsException(index);}return (w >>> (8 * (3 - (index & 3)))) & 0xff;},public final int getByteint index int wswitch index  2 case 0w  w1breakcase 1w  w2breakcase 2w  w3breakcase 3w  w4breakcase 4w  w5breakdefaultthrow new ArrayIndexOutOfBoundsExceptionindexreturn w  8  3  index  3  0xff
public SpanFirstBuilder(SpanQueryBuilder factory) {this.factory = factory;},public SpanFirstBuilderSpanQueryBuilder factory thisfactory  factory
public DescribeInstancesResult describeInstances(DescribeInstancesRequest request) {request = beforeClientExecution(request);return executeDescribeInstances(request);},public DescribeInstancesResult describeInstancesDescribeInstancesRequest request request  beforeClientExecutionrequestreturn executeDescribeInstancesrequest
public DescribeProjectsResult describeProjects(DescribeProjectsRequest request) {request = beforeClientExecution(request);return executeDescribeProjects(request);},public DescribeProjectsResult describeProjectsDescribeProjectsRequest request request  beforeClientExecutionrequestreturn executeDescribeProjectsrequest
"public static String toHexString(String s) {StringBuilder sb = new StringBuilder();for(int i=0;i<s.length();i++) {char ch = s.charAt(i);if (i > 0) {sb.append(' ');}if (ch < 128) {sb.append(ch);} else {if (ch >= UNI_SUR_HIGH_START && ch <= UNI_SUR_HIGH_END) {sb.append(""H:"");} else if (ch >= UNI_SUR_LOW_START && ch <= UNI_SUR_LOW_END) {sb.append(""L:"");} else if (ch > UNI_SUR_LOW_END) {if (ch == 0xffff) {sb.append(""F:"");} else {sb.append(""E:"");}}sb.append(""0x"").append(Integer.toHexString(ch));}}return sb.toString();}",public static String toHexStringString s StringBuilder sb  new StringBuilderforint i0islengthi char ch  scharAtiif i  0 sbappend if ch  128 sbappendch else if ch  UNISURHIGHSTART  ch  UNISURHIGHEND sbappendH else if ch  UNISURLOWSTART  ch  UNISURLOWEND sbappendL else if ch  UNISURLOWEND if ch  0xffff sbappendF else sbappendEsbappend0xappendIntegertoHexStringchreturn sbtoString
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0) {double result;try {double d0 = NumericFunction.singleOperandEvaluate(arg0, srcRowIndex, srcColumnIndex);result = Math.log(d0) / LOG_10_TO_BASE_e;NumericFunction.checkValue(result);} catch (EvaluationException e) {return e.getErrorEval();}return new NumberEval(result);}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 double resulttry double d0  NumericFunctionsingleOperandEvaluatearg0 srcRowIndex srcColumnIndexresult  Mathlogd0  LOG10TOBASEeNumericFunctioncheckValueresult catch EvaluationException e return egetErrorEvalreturn new NumberEvalresult
"public long byteCount(int packedIntsVersion, int valueCount, int bitsPerValue) {assert bitsPerValue >= 0 && bitsPerValue <= 64 : bitsPerValue;return 8L * longCount(packedIntsVersion, valueCount, bitsPerValue);}",public long byteCountint packedIntsVersion int valueCount int bitsPerValue assert bitsPerValue  0  bitsPerValue  64  bitsPerValuereturn 8L  longCountpackedIntsVersion valueCount bitsPerValue
"public Policy(String id, Collection<Statement> statements) {this(id);setStatements(statements);}",public PolicyString id CollectionStatement statements thisidsetStatementsstatements
public FunctionQuery(ValueSource func) {this.func=func;},public FunctionQueryValueSource func thisfuncfunc
public UpdateGameServerResult updateGameServer(UpdateGameServerRequest request) {request = beforeClientExecution(request);return executeUpdateGameServer(request);},public UpdateGameServerResult updateGameServerUpdateGameServerRequest request request  beforeClientExecutionrequestreturn executeUpdateGameServerrequest
public GetDetectorVersionResult getDetectorVersion(GetDetectorVersionRequest request) {request = beforeClientExecution(request);return executeGetDetectorVersion(request);},public GetDetectorVersionResult getDetectorVersionGetDetectorVersionRequest request request  beforeClientExecutionrequestreturn executeGetDetectorVersionrequest
"public void addField(String fieldName, String text, Analyzer analyzer) {if (fieldName == null)throw new IllegalArgumentException(""fieldName must not be null"");if (text == null)throw new IllegalArgumentException(""text must not be null"");if (analyzer == null)throw new IllegalArgumentException(""analyzer must not be null"");TokenStream stream = analyzer.tokenStream(fieldName, text);storeTerms(getInfo(fieldName, defaultFieldType), stream,analyzer.getPositionIncrementGap(fieldName), analyzer.getOffsetGap(fieldName));}",public void addFieldString fieldName String text Analyzer analyzer if fieldName  nullthrow new IllegalArgumentExceptionfieldName must not be nullif text  nullthrow new IllegalArgumentExceptiontext must not be nullif analyzer  nullthrow new IllegalArgumentExceptionanalyzer must not be nullTokenStream stream  analyzertokenStreamfieldName textstoreTermsgetInfofieldName defaultFieldType streamanalyzergetPositionIncrementGapfieldName analyzergetOffsetGapfieldName
public boolean isEnabled(String component) {return false;},public boolean isEnabledString component return false
"public long next() {final long idx = 1 + (ord / indexInterval);if (idx >= fieldIndex.numIndexTerms) {return -1;}ord += indexInterval;final long offset = fieldIndex.termOffsets.get(idx);final int length = (int) (fieldIndex.termOffsets.get(1+idx) - offset);termBytesReader.fillSlice(term, fieldIndex.termBytesStart + offset, length);return fieldIndex.termsStart + fieldIndex.termsDictOffsets.get(idx);}",public long next final long idx  1  ord  indexIntervalif idx  fieldIndexnumIndexTerms return 1ord  indexIntervalfinal long offset  fieldIndextermOffsetsgetidxfinal int length  int fieldIndextermOffsetsget1idx  offsettermBytesReaderfillSliceterm fieldIndextermBytesStart  offset lengthreturn fieldIndextermsStart  fieldIndextermsDictOffsetsgetidx
public DisassociateMemberFromGroupResult disassociateMemberFromGroup(DisassociateMemberFromGroupRequest request) {request = beforeClientExecution(request);return executeDisassociateMemberFromGroup(request);},public DisassociateMemberFromGroupResult disassociateMemberFromGroupDisassociateMemberFromGroupRequest request request  beforeClientExecutionrequestreturn executeDisassociateMemberFromGrouprequest
"public UnmergedPathException(DirCacheEntry dce) {super(MessageFormat.format(JGitText.get().unmergedPath, dce.getPathString()));entry = dce;}",public UnmergedPathExceptionDirCacheEntry dce superMessageFormatformatJGitTextgetunmergedPath dcegetPathStringentry  dce
"public Name(NameRecord nameRecord, int index) {_nameRecord = nameRecord;_index = index;}",public NameNameRecord nameRecord int index nameRecord  nameRecordindex  index
"public void add(ET object) {if (expectedModCount == list.modCount) {Link<ET> next = link.next;Link<ET> newLink = new Link<ET>(object, link, next);link.next = newLink;next.previous = newLink;link = newLink;lastLink = null;pos++;expectedModCount++;list.size++;list.modCount++;} else {throw new ConcurrentModificationException();}}",public void addET object if expectedModCount  listmodCount LinkET next  linknextLinkET newLink  new LinkETobject link nextlinknext  newLinknextprevious  newLinklink  newLinklastLink  nullposexpectedModCountlistsizelistmodCount else throw new ConcurrentModificationException
public final ByteOrder order() {return order;},public final ByteOrder order return order
public ValueFiller getValueFiller() {return new ValueFiller();},public ValueFiller getValueFiller return new ValueFiller
public SubmoduleInitCommand addPath(String path) {paths.add(path);return this;},public SubmoduleInitCommand addPathString path pathsaddpathreturn this
public DeleteInterconnectResult deleteInterconnect(DeleteInterconnectRequest request) {request = beforeClientExecution(request);return executeDeleteInterconnect(request);},public DeleteInterconnectResult deleteInterconnectDeleteInterconnectRequest request request  beforeClientExecutionrequestreturn executeDeleteInterconnectrequest
"public Credential(String keyId, String secret) {this.accessKeyId = keyId;this.accessSecret = secret;this.refreshDate = new Date();}",public CredentialString keyId String secret thisaccessKeyId  keyIdthisaccessSecret  secretthisrefreshDate  new Date
"public DeleteRepoWebhookRequest() {super(""cr"", ""2016-06-07"", ""DeleteRepoWebhook"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/webhooks/[WebhookId]"");setMethod(MethodType.DELETE);}",public DeleteRepoWebhookRequest supercr 20160607 DeleteRepoWebhook crsetUriPatternreposRepoNamespaceRepoNamewebhooksWebhookIdsetMethodMethodTypeDELETE
public DeleteDeviceResult deleteDevice(DeleteDeviceRequest request) {request = beforeClientExecution(request);return executeDeleteDevice(request);},public DeleteDeviceResult deleteDeviceDeleteDeviceRequest request request  beforeClientExecutionrequestreturn executeDeleteDevicerequest
public CreateEventBusResult createEventBus(CreateEventBusRequest request) {request = beforeClientExecution(request);return executeCreateEventBus(request);},public CreateEventBusResult createEventBusCreateEventBusRequest request request  beforeClientExecutionrequestreturn executeCreateEventBusrequest
public boolean isEnabled() {return enabled;},public boolean isEnabled return enabled
public boolean isSigned() {return signed;},public boolean isSigned return signed
public DeleteRuleVersionResult deleteRuleVersion(DeleteRuleVersionRequest request) {request = beforeClientExecution(request);return executeDeleteRuleVersion(request);},public DeleteRuleVersionResult deleteRuleVersionDeleteRuleVersionRequest request request  beforeClientExecutionrequestreturn executeDeleteRuleVersionrequest
public long seek(long ord) {throw new UnsupportedOperationException();},public long seeklong ord throw new UnsupportedOperationException
"public CreateAppCookieStickinessPolicyRequest(String loadBalancerName, String policyName, String cookieName) {setLoadBalancerName(loadBalancerName);setPolicyName(policyName);setCookieName(cookieName);}",public CreateAppCookieStickinessPolicyRequestString loadBalancerName String policyName String cookieName setLoadBalancerNameloadBalancerNamesetPolicyNamepolicyNamesetCookieNamecookieName
public BlameCommand setDiffAlgorithm(DiffAlgorithm diffAlgorithm) {this.diffAlgorithm = diffAlgorithm;return this;},public BlameCommand setDiffAlgorithmDiffAlgorithm diffAlgorithm thisdiffAlgorithm  diffAlgorithmreturn this
public DisassociateSkillFromUsersResult disassociateSkillFromUsers(DisassociateSkillFromUsersRequest request) {request = beforeClientExecution(request);return executeDisassociateSkillFromUsers(request);},public DisassociateSkillFromUsersResult disassociateSkillFromUsersDisassociateSkillFromUsersRequest request request  beforeClientExecutionrequestreturn executeDisassociateSkillFromUsersrequest
"public PatchIdDiffFormatter() {super(new DigestOutputStream(NullOutputStream.INSTANCE,Constants.newMessageDigest()));digest = ((DigestOutputStream) getOutputStream()).getMessageDigest();}",public PatchIdDiffFormatter supernew DigestOutputStreamNullOutputStreamINSTANCEConstantsnewMessageDigestdigest  DigestOutputStream getOutputStreamgetMessageDigest
public SendMessageResult sendMessage(SendMessageRequest request) {request = beforeClientExecution(request);return executeSendMessage(request);},public SendMessageResult sendMessageSendMessageRequest request request  beforeClientExecutionrequestreturn executeSendMessagerequest
public static ParsePathType pathType(Path f) {int pathLength = 0;while (f != null && f.getFileName() != null && ++pathLength < MAX_PATH_LENGTH) {ParsePathType ppt = pathName2Type.get(f.getFileName().toString().toUpperCase(Locale.ROOT));if (ppt!=null) {return ppt;}f = f.getParent();}return DEFAULT_PATH_TYPE;},public static ParsePathType pathTypePath f int pathLength  0while f  null  fgetFileName  null  pathLength  MAXPATHLENGTH ParsePathType ppt  pathName2TypegetfgetFileNametoStringtoUpperCaseLocaleROOTif pptnull return pptf  fgetParentreturn DEFAULTPATHTYPE
public static long estimateIndexSize(int sourceLength) {return sourceLength + (sourceLength * 3 / 4);},public static long estimateIndexSizeint sourceLength return sourceLength  sourceLength  3  4
public UpdateDashboardPermissionsResult updateDashboardPermissions(UpdateDashboardPermissionsRequest request) {request = beforeClientExecution(request);return executeUpdateDashboardPermissions(request);},public UpdateDashboardPermissionsResult updateDashboardPermissionsUpdateDashboardPermissionsRequest request request  beforeClientExecutionrequestreturn executeUpdateDashboardPermissionsrequest
"public String formatAsString() {switch (_cellType) {case NUMERIC:return String.valueOf(_numberValue);case STRING:return '""' + _textValue + '""';case BOOLEAN:return _booleanValue ? ""TRUE"" : ""FALSE"";case ERROR:return ErrorEval.getText(_errorCode);default:return ""<error unexpected cell type "" + _cellType + "">"";}}",public String formatAsString switch cellType case NUMERICreturn StringvalueOfnumberValuecase STRINGreturn   textValue  case BOOLEANreturn booleanValue  TRUE  FALSEcase ERRORreturn ErrorEvalgetTexterrorCodedefaultreturn error unexpected cell type   cellType  
public final void add(RevFlagSet set) {flags |= set.mask;},public final void addRevFlagSet set flags  setmask
public URIish setHost(String n) {final URIish r = new URIish(this);r.host = n;return r;},public URIish setHostString n final URIish r  new URIishthisrhost  nreturn r
public void clearFormulaEntry() {CellCacheEntry[] usedCells = _sensitiveInputCells;if (usedCells != null) {for (int i = usedCells.length-1; i>=0; i--) {usedCells[i].clearConsumingCell(this);}}_sensitiveInputCells = null;clearValue();},public void clearFormulaEntry CellCacheEntry usedCells  sensitiveInputCellsif usedCells  null for int i  usedCellslength1 i0 i usedCellsiclearConsumingCellthissensitiveInputCells  nullclearValue
public GetDiskSnapshotResult getDiskSnapshot(GetDiskSnapshotRequest request) {request = beforeClientExecution(request);return executeGetDiskSnapshot(request);},public GetDiskSnapshotResult getDiskSnapshotGetDiskSnapshotRequest request request  beforeClientExecutionrequestreturn executeGetDiskSnapshotrequest
public DescribeIpv6PoolsResult describeIpv6Pools(DescribeIpv6PoolsRequest request) {request = beforeClientExecution(request);return executeDescribeIpv6Pools(request);},public DescribeIpv6PoolsResult describeIpv6PoolsDescribeIpv6PoolsRequest request request  beforeClientExecutionrequestreturn executeDescribeIpv6Poolsrequest
public UpdateDetectorResult updateDetector(UpdateDetectorRequest request) {request = beforeClientExecution(request);return executeUpdateDetector(request);},public UpdateDetectorResult updateDetectorUpdateDetectorRequest request request  beforeClientExecutionrequestreturn executeUpdateDetectorrequest
public DeleteInstanceResult deleteInstance(DeleteInstanceRequest request) {request = beforeClientExecution(request);return executeDeleteInstance(request);},public DeleteInstanceResult deleteInstanceDeleteInstanceRequest request request  beforeClientExecutionrequestreturn executeDeleteInstancerequest
public ListThreatIntelSetsResult listThreatIntelSets(ListThreatIntelSetsRequest request) {request = beforeClientExecution(request);return executeListThreatIntelSets(request);},public ListThreatIntelSetsResult listThreatIntelSetsListThreatIntelSetsRequest request request  beforeClientExecutionrequestreturn executeListThreatIntelSetsrequest
public ExportClientVpnClientConfigurationResult exportClientVpnClientConfiguration(ExportClientVpnClientConfigurationRequest request) {request = beforeClientExecution(request);return executeExportClientVpnClientConfiguration(request);},public ExportClientVpnClientConfigurationResult exportClientVpnClientConfigurationExportClientVpnClientConfigurationRequest request request  beforeClientExecutionrequestreturn executeExportClientVpnClientConfigurationrequest
"public float currentScore(int docId, String field, int start, int end, int numPayloadsSeen, float currentScore, float currentPayloadScore) {if (numPayloadsSeen == 0) {return currentPayloadScore;} else {return Math.max(currentPayloadScore, currentScore);}}",public float currentScoreint docId String field int start int end int numPayloadsSeen float currentScore float currentPayloadScore if numPayloadsSeen  0 return currentPayloadScore else return MathmaxcurrentPayloadScore currentScore
"public CreateDBParameterGroupRequest(String dBParameterGroupName, String dBParameterGroupFamily, String description) {setDBParameterGroupName(dBParameterGroupName);setDBParameterGroupFamily(dBParameterGroupFamily);setDescription(description);}",public CreateDBParameterGroupRequestString dBParameterGroupName String dBParameterGroupFamily String description setDBParameterGroupNamedBParameterGroupNamesetDBParameterGroupFamilydBParameterGroupFamilysetDescriptiondescription
"public void add(int forwardId, int backwardId, int cost) {int offset = (backwardId * forwardSize + forwardId) * 2;costs.putShort(offset, (short) cost);}",public void addint forwardId int backwardId int cost int offset  backwardId  forwardSize  forwardId  2costsputShortoffset short cost
public boolean isPeeled() {return true;},public boolean isPeeled return true
public CreateTransitVirtualInterfaceResult createTransitVirtualInterface(CreateTransitVirtualInterfaceRequest request) {request = beforeClientExecution(request);return executeCreateTransitVirtualInterface(request);},public CreateTransitVirtualInterfaceResult createTransitVirtualInterfaceCreateTransitVirtualInterfaceRequest request request  beforeClientExecutionrequestreturn executeCreateTransitVirtualInterfacerequest
public BatchDetectSentimentResult batchDetectSentiment(BatchDetectSentimentRequest request) {request = beforeClientExecution(request);return executeBatchDetectSentiment(request);},public BatchDetectSentimentResult batchDetectSentimentBatchDetectSentimentRequest request request  beforeClientExecutionrequestreturn executeBatchDetectSentimentrequest
public boolean equals(Object o) {if ( o==null || !(o instanceof Interval) ) {return false;}Interval other = (Interval)o;return this.a==other.a && this.b==other.b;},public boolean equalsObject o if  onull  o instanceof Interval  return falseInterval other  Intervaloreturn thisaothera  thisbotherb
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append(""[USESELFS]\n"");buffer.append(""    .options = "").append(HexDump.shortToHex(_options)).append(""\n"");buffer.append(""[/USESELFS]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappendUSESELFSnbufferappend    options  appendHexDumpshortToHexoptionsappendnbufferappendUSESELFSnreturn buffertoString
public SmallDocSet union(SmallDocSet other) {SmallDocSet bigger;SmallDocSet smaller;if (other.intSet.size() > this.intSet.size()) {bigger = other;smaller = this;} else {bigger = this;smaller = other;}for (int v : smaller.intSet.keys) {if (v == smaller.intSet.emptyVal)continue;bigger.set(v);}return bigger;},public SmallDocSet unionSmallDocSet other SmallDocSet biggerSmallDocSet smallerif otherintSetsize  thisintSetsize bigger  othersmaller  this else bigger  thissmaller  otherfor int v  smallerintSetkeys if v  smallerintSetemptyValcontinuebiggersetvreturn bigger
public boolean equals(Object o) {if (o instanceof Edit) {final Edit e = (Edit) o;return this.beginA == e.beginA && this.endA == e.endA&& this.beginB == e.beginB && this.endB == e.endB;}return false;},public boolean equalsObject o if o instanceof Edit final Edit e  Edit oreturn thisbeginA  ebeginA  thisendA  eendA thisbeginB  ebeginB  thisendB  eendBreturn false
public int getBigFileThreshold() {return bigFileThreshold;},public int getBigFileThreshold return bigFileThreshold
"public String toString() {final StringBuilder r = new StringBuilder();r.append(getSeverity().name().toLowerCase(Locale.ROOT));r.append("": at offset ""); r.append(getOffset());r.append("": ""); r.append(getMessage());r.append(""\n""); r.append(""  in ""); r.append(getLineText());return r.toString();}",public String toString final StringBuilder r  new StringBuilderrappendgetSeveritynametoLowerCaseLocaleROOTrappend at offset  rappendgetOffsetrappend  rappendgetMessagerappendn rappend  in  rappendgetLineTextreturn rtoString
"public IntBuffer slice() {return new ReadWriteIntArrayBuffer(remaining(), backingArray, offset + position);}",public IntBuffer slice return new ReadWriteIntArrayBufferremaining backingArray offset  position
public DeleteApplicationResult deleteApplication(DeleteApplicationRequest request) {request = beforeClientExecution(request);return executeDeleteApplication(request);},public DeleteApplicationResult deleteApplicationDeleteApplicationRequest request request  beforeClientExecutionrequestreturn executeDeleteApplicationrequest
"public TokenOffsetPayloadTokenFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public TokenOffsetPayloadTokenFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public boolean equals(Object o) {if (this.getClass() != o.getClass()) return false;MultiFunction other = (MultiFunction)o;return this.sources.equals(other.sources);},public boolean equalsObject o if thisgetClass  ogetClass return falseMultiFunction other  MultiFunctionoreturn thissourcesequalsothersources
"public SpanQuery getSpanQuery(Element e) throws ParserException {SpanQueryBuilder builder = builders.get(e.getNodeName());if (builder == null) {throw new ParserException(""No SpanQueryObjectBuilder defined for node "" + e.getNodeName());}return builder.getSpanQuery(e);}",public SpanQuery getSpanQueryElement e throws ParserException SpanQueryBuilder builder  buildersgetegetNodeNameif builder  null throw new ParserExceptionNo SpanQueryObjectBuilder defined for node   egetNodeNamereturn buildergetSpanQuerye
"public void incRef() {final int rc = refCount.incrementAndGet();assert rc > 1: ""seg="" + info;}",public void incRef final int rc  refCountincrementAndGetassert rc  1 seg  info
public String formula() {return _formula;},public String formula return formula
public T removeTop() {T currentTop = top;if (iter.hasNext()) {top = iter.next();} else {top = null;}return currentTop;},public T removeTop T currentTop  topif iterhasNext top  iternext else top  nullreturn currentTop
public ObjectId getExpectedOldObjectId() {return expValue;},public ObjectId getExpectedOldObjectId return expValue
"public DefaultPassageFormatter(String preTag, String postTag, String ellipsis, boolean escape) {if (preTag == null || postTag == null || ellipsis == null) {throw new NullPointerException();}this.preTag = preTag;this.postTag = postTag;this.ellipsis = ellipsis;this.escape = escape;}",public DefaultPassageFormatterString preTag String postTag String ellipsis boolean escape if preTag  null  postTag  null  ellipsis  null throw new NullPointerExceptionthispreTag  preTagthispostTag  postTagthisellipsis  ellipsisthisescape  escape
public UpdateImagePermissionsResult updateImagePermissions(UpdateImagePermissionsRequest request) {request = beforeClientExecution(request);return executeUpdateImagePermissions(request);},public UpdateImagePermissionsResult updateImagePermissionsUpdateImagePermissionsRequest request request  beforeClientExecutionrequestreturn executeUpdateImagePermissionsrequest
public ListCustomVerificationEmailTemplatesResult listCustomVerificationEmailTemplates(ListCustomVerificationEmailTemplatesRequest request) {request = beforeClientExecution(request);return executeListCustomVerificationEmailTemplates(request);},public ListCustomVerificationEmailTemplatesResult listCustomVerificationEmailTemplatesListCustomVerificationEmailTemplatesRequest request request  beforeClientExecutionrequestreturn executeListCustomVerificationEmailTemplatesrequest
"public int read(byte[] buffer, int byteOffset, int byteCount) throws IOException {return IoBridge.read(fd, buffer, byteOffset, byteCount);}",public int readbyte buffer int byteOffset int byteCount throws IOException return IoBridgereadfd buffer byteOffset byteCount
"public StringCharacterIterator(String value, int location) {string = value;start = 0;end = string.length();if (location < 0 || location > end) {throw new IllegalArgumentException();}offset = location;}",public StringCharacterIteratorString value int location string  valuestart  0end  stringlengthif location  0  location  end throw new IllegalArgumentExceptionoffset  location
public DeleteQueryLoggingConfigResult deleteQueryLoggingConfig(DeleteQueryLoggingConfigRequest request) {request = beforeClientExecution(request);return executeDeleteQueryLoggingConfig(request);},public DeleteQueryLoggingConfigResult deleteQueryLoggingConfigDeleteQueryLoggingConfigRequest request request  beforeClientExecutionrequestreturn executeDeleteQueryLoggingConfigrequest
"public InvalidPatternException(String message, String pattern) {super(message);this.pattern = pattern;}",public InvalidPatternExceptionString message String pattern supermessagethispattern  pattern
"public int resolveNameXIx(int refIndex, int definedNameIndex) {int extBookIndex = _externSheetRecord.getExtbookIndexFromRefIndex(refIndex);return _externalBookBlocks[extBookIndex].getNameIx(definedNameIndex);}",public int resolveNameXIxint refIndex int definedNameIndex int extBookIndex  externSheetRecordgetExtbookIndexFromRefIndexrefIndexreturn externalBookBlocksextBookIndexgetNameIxdefinedNameIndex
public boolean equals(Object obj) {if (this == obj)return true;if (!super.equals(obj))return false;if (getClass() != obj.getClass())return false;FuzzyQuery other = (FuzzyQuery) obj;if (maxEdits != other.maxEdits)return false;if (prefixLength != other.prefixLength)return false;if (maxExpansions != other.maxExpansions)return false;if (transpositions != other.transpositions)return false;if (term == null) {if (other.term != null)return false;} else if (!term.equals(other.term))return false;return true;},public boolean equalsObject obj if this  objreturn trueif superequalsobjreturn falseif getClass  objgetClassreturn falseFuzzyQuery other  FuzzyQuery objif maxEdits  othermaxEditsreturn falseif prefixLength  otherprefixLengthreturn falseif maxExpansions  othermaxExpansionsreturn falseif transpositions  othertranspositionsreturn falseif term  null if otherterm  nullreturn false else if termequalsothertermreturn falsereturn true
"public Term getLuceneTerm(String fieldName) {return new Term(fieldName, getTermText());}",public Term getLuceneTermString fieldName return new TermfieldName getTermText
"public static MessageDigest newMessageDigest() {try {return MessageDigest.getInstance(LONG_HASH_FUNCTION);} catch (NoSuchAlgorithmException nsae) {throw new RuntimeException(MessageFormat.format(LfsText.get().requiredHashFunctionNotAvailable,LONG_HASH_FUNCTION), nsae);}}",public static MessageDigest newMessageDigest try return MessageDigestgetInstanceLONGHASHFUNCTION catch NoSuchAlgorithmException nsae throw new RuntimeExceptionMessageFormatformatLfsTextgetrequiredHashFunctionNotAvailableLONGHASHFUNCTION nsae
public void reset() {synchronized (lock) {count = 0;}},public void reset synchronized lock count  0
public HyphenationTree() {stoplist = new HashMap<>(23); classmap = new TernaryTree();vspace = new ByteVector();vspace.alloc(1); },public HyphenationTree stoplist  new HashMap23 classmap  new TernaryTreevspace  new ByteVectorvspacealloc1 
public DescribeCollectionResult describeCollection(DescribeCollectionRequest request) {request = beforeClientExecution(request);return executeDescribeCollection(request);},public DescribeCollectionResult describeCollectionDescribeCollectionRequest request request  beforeClientExecutionrequestreturn executeDescribeCollectionrequest
"public synchronized StringBuffer insert(int index, char[] chars) {insert0(index, chars);return this;}",public synchronized StringBuffer insertint index char chars insert0index charsreturn this
"public void decode(byte[] blocks, int blocksOffset, long[] values, int valuesOffset, int iterations) {for (int i = 0; i < iterations; ++i) {final long byte0 = blocks[blocksOffset++] & 0xFF;final long byte1 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = (byte0 << 2) | (byte1 >>> 6);final long byte2 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte1 & 63) << 4) | (byte2 >>> 4);final long byte3 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte2 & 15) << 6) | (byte3 >>> 2);final long byte4 = blocks[blocksOffset++] & 0xFF;values[valuesOffset++] = ((byte3 & 3) << 8) | byte4;}}",public void decodebyte blocks int blocksOffset long values int valuesOffset int iterations for int i  0 i  iterations i final long byte0  blocksblocksOffset  0xFFfinal long byte1  blocksblocksOffset  0xFFvaluesvaluesOffset  byte0  2  byte1  6final long byte2  blocksblocksOffset  0xFFvaluesvaluesOffset  byte1  63  4  byte2  4final long byte3  blocksblocksOffset  0xFFvaluesvaluesOffset  byte2  15  6  byte3  2final long byte4  blocksblocksOffset  0xFFvaluesvaluesOffset  byte3  3  8  byte4
"public GetSearchRequest() {super(""cr"", ""2016-06-07"", ""GetSearch"", ""cr"");setUriPattern(""/search-delete"");setMethod(MethodType.GET);}",public GetSearchRequest supercr 20160607 GetSearch crsetUriPatternsearchdeletesetMethodMethodTypeGET
"public void consume() {boolean skipEofCheck;if (p >= 0) {if (fetchedEOF) {skipEofCheck = p < tokens.size() - 1;}else {skipEofCheck = p < tokens.size();}}else {skipEofCheck = false;}if (!skipEofCheck && LA(1) == EOF) {throw new IllegalStateException(""cannot consume EOF"");}if (sync(p + 1)) {p = adjustSeekIndex(p + 1);}}",public void consume boolean skipEofCheckif p  0 if fetchedEOF skipEofCheck  p  tokenssize  1else skipEofCheck  p  tokenssizeelse skipEofCheck  falseif skipEofCheck  LA1  EOF throw new IllegalStateExceptioncannot consume EOFif syncp  1 p  adjustSeekIndexp  1
"public CharBlockArray append(String s) {int remain = s.length();int offset = 0;while (remain > 0) {if (this.current.length == this.blockSize) {addBlock();}int toCopy = remain;int remainingInBlock = this.blockSize - this.current.length;if (remainingInBlock < toCopy) {toCopy = remainingInBlock;}s.getChars(offset, offset + toCopy, this.current.chars, this.current.length);offset += toCopy;remain -= toCopy;this.current.length += toCopy;}this.length += s.length();return this;}",public CharBlockArray appendString s int remain  slengthint offset  0while remain  0 if thiscurrentlength  thisblockSize addBlockint toCopy  remainint remainingInBlock  thisblockSize  thiscurrentlengthif remainingInBlock  toCopy toCopy  remainingInBlocksgetCharsoffset offset  toCopy thiscurrentchars thiscurrentlengthoffset  toCopyremain  toCopythiscurrentlength  toCopythislength  slengthreturn this
public ConfigureHealthCheckResult configureHealthCheck(ConfigureHealthCheckRequest request) {request = beforeClientExecution(request);return executeConfigureHealthCheck(request);},public ConfigureHealthCheckResult configureHealthCheckConfigureHealthCheckRequest request request  beforeClientExecutionrequestreturn executeConfigureHealthCheckrequest
public CommonRoaRequest(String product) {super(product);setSysAcceptFormat(FormatType.JSON);},public CommonRoaRequestString product superproductsetSysAcceptFormatFormatTypeJSON
"public static int strlen(char[] a) {return strlen(a, 0);}",public static int strlenchar a return strlena 0
"public void setReaderValue(Reader value) {if (!(fieldsData instanceof Reader)) {throw new IllegalArgumentException(""cannot change value type from "" + fieldsData.getClass().getSimpleName() + "" to Reader"");}fieldsData = value;}",public void setReaderValueReader value if fieldsData instanceof Reader throw new IllegalArgumentExceptioncannot change value type from   fieldsDatagetClassgetSimpleName   to ReaderfieldsData  value
public DeleteUsagePlanResult deleteUsagePlan(DeleteUsagePlanRequest request) {request = beforeClientExecution(request);return executeDeleteUsagePlan(request);},public DeleteUsagePlanResult deleteUsagePlanDeleteUsagePlanRequest request request  beforeClientExecutionrequestreturn executeDeleteUsagePlanrequest
public DeleteThreatIntelSetResult deleteThreatIntelSet(DeleteThreatIntelSetRequest request) {request = beforeClientExecution(request);return executeDeleteThreatIntelSet(request);},public DeleteThreatIntelSetResult deleteThreatIntelSetDeleteThreatIntelSetRequest request request  beforeClientExecutionrequestreturn executeDeleteThreatIntelSetrequest
public DescribePlacementGroupsResult describePlacementGroups(DescribePlacementGroupsRequest request) {request = beforeClientExecution(request);return executeDescribePlacementGroups(request);},public DescribePlacementGroupsResult describePlacementGroupsDescribePlacementGroupsRequest request request  beforeClientExecutionrequestreturn executeDescribePlacementGroupsrequest
public EnableAddOnResult enableAddOn(EnableAddOnRequest request) {request = beforeClientExecution(request);return executeEnableAddOn(request);},public EnableAddOnResult enableAddOnEnableAddOnRequest request request  beforeClientExecutionrequestreturn executeEnableAddOnrequest
public TreeFilter clone() {final TreeFilter[] s = new TreeFilter[subfilters.length];for (int i = 0; i < s.length; i++)s[i] = subfilters[i].clone();return new List(s);},public TreeFilter clone final TreeFilter s  new TreeFiltersubfilterslengthfor int i  0 i  slength isi  subfiltersiclonereturn new Lists
public ListTagsForResourceOutput listTagsForResource(ListTagsForResourceRequest request) {request = beforeClientExecution(request);return executeListTagsForResource(request);},public ListTagsForResourceOutput listTagsForResourceListTagsForResourceRequest request request  beforeClientExecutionrequestreturn executeListTagsForResourcerequest
public WeightedSpanTerm getWeightedSpanTerm(String token) {return fieldWeightedSpanTerms.get(token);},public WeightedSpanTerm getWeightedSpanTermString token return fieldWeightedSpanTermsgettoken
public Slope() {func = new LinearRegressionFunction(FUNCTION.SLOPE);},public Slope func  new LinearRegressionFunctionFUNCTIONSLOPE
public String toStringUnquoted() {return getTruncated();},public String toStringUnquoted return getTruncated
public UpdateSubnetGroupResult updateSubnetGroup(UpdateSubnetGroupRequest request) {request = beforeClientExecution(request);return executeUpdateSubnetGroup(request);},public UpdateSubnetGroupResult updateSubnetGroupUpdateSubnetGroupRequest request request  beforeClientExecutionrequestreturn executeUpdateSubnetGrouprequest
public void remove(int index) {checkIndex(index);_cfHeaders.remove(index);},public void removeint index checkIndexindexcfHeadersremoveindex
"public static long pop_intersect(long[] arr1, long[] arr2, int wordOffset, int numWords) {long popCount = 0;for (int i = wordOffset, end = wordOffset + numWords; i < end; ++i) {popCount += Long.bitCount(arr1[i] & arr2[i]);}return popCount;}",public static long popintersectlong arr1 long arr2 int wordOffset int numWords long popCount  0for int i  wordOffset end  wordOffset  numWords i  end i popCount  LongbitCountarr1i  arr2ireturn popCount
public boolean shouldBeRecursive() {return true;},public boolean shouldBeRecursive return true
"public JapaneseBaseFormFilterFactory(Map<String,String> args) {super(args);if (!args.isEmpty()) {throw new IllegalArgumentException(""Unknown parameters: "" + args);}}",public JapaneseBaseFormFilterFactoryMapStringString args superargsif argsisEmpty throw new IllegalArgumentExceptionUnknown parameters   args
public void visitContainedRecords(RecordVisitor rv) {rv.visitRecord(header);for (CFRuleBase rule : rules) {rv.visitRecord(rule);}},public void visitContainedRecordsRecordVisitor rv rvvisitRecordheaderfor CFRuleBase rule  rules rvvisitRecordrule
"public void dumpDrawingGroupRecords(boolean fat) {DrawingGroupRecord r = (DrawingGroupRecord) workbook.findFirstRecordBySid( DrawingGroupRecord.sid );if (r == null) {return;}r.decode();List<EscherRecord> escherRecords = r.getEscherRecords();PrintWriter w = new PrintWriter(new OutputStreamWriter(System.out, Charset.defaultCharset()));for (EscherRecord escherRecord : escherRecords) {if (fat) {System.out.println(escherRecord);} else {escherRecord.display(w, 0);}}w.flush();}",public void dumpDrawingGroupRecordsboolean fat DrawingGroupRecord r  DrawingGroupRecord workbookfindFirstRecordBySid DrawingGroupRecordsid if r  null returnrdecodeListEscherRecord escherRecords  rgetEscherRecordsPrintWriter w  new PrintWriternew OutputStreamWriterSystemout CharsetdefaultCharsetfor EscherRecord escherRecord  escherRecords if fat SystemoutprintlnescherRecord else escherRecorddisplayw 0wflush
public int getLinesDeleted() {return nDeleted;},public int getLinesDeleted return nDeleted
"public String toString() {StringBuilder sb = new StringBuilder(64);sb.append(getClass().getName()).append("" ["");sb.append(_offset).append(""..."").append(getLastIndex());sb.append(""]"");return sb.toString();}",public String toString StringBuilder sb  new StringBuilder64sbappendgetClassgetNameappend sbappendoffsetappendappendgetLastIndexsbappendreturn sbtoString
"public int[] compact() {assert bytesStart != null : ""bytesStart is null - not initialized"";int upto = 0;for (int i = 0; i < hashSize; i++) {if (ids[i] != -1) {if (upto < i) {ids[upto] = ids[i];ids[i] = -1;}upto++;}}assert upto == count;lastCount = count;return ids;}",public int compact assert bytesStart  null  bytesStart is null  not initializedint upto  0for int i  0 i  hashSize i if idsi  1 if upto  i idsupto  idsiidsi  1uptoassert upto  countlastCount  countreturn ids
"public AccessKey(String userName, String accessKeyId, StatusType status, String secretAccessKey) {setUserName(userName);setAccessKeyId(accessKeyId);setStatus(status.toString());setSecretAccessKey(secretAccessKey);}",public AccessKeyString userName String accessKeyId StatusType status String secretAccessKey setUserNameuserNamesetAccessKeyIdaccessKeyIdsetStatusstatustoStringsetSecretAccessKeysecretAccessKey
public GetDomainResult getDomain(GetDomainRequest request) {request = beforeClientExecution(request);return executeGetDomain(request);},public GetDomainResult getDomainGetDomainRequest request request  beforeClientExecutionrequestreturn executeGetDomainrequest
public ListTypeRegistrationsResult listTypeRegistrations(ListTypeRegistrationsRequest request) {request = beforeClientExecution(request);return executeListTypeRegistrations(request);},public ListTypeRegistrationsResult listTypeRegistrationsListTypeRegistrationsRequest request request  beforeClientExecutionrequestreturn executeListTypeRegistrationsrequest
public boolean isSymbolic() {return false;},public boolean isSymbolic return false
public DeleteTableRequest(String tableName) {setTableName(tableName);},public DeleteTableRequestString tableName setTableNametableName
public UpdateAccountSettingsResult updateAccountSettings(UpdateAccountSettingsRequest request) {request = beforeClientExecution(request);return executeUpdateAccountSettings(request);},public UpdateAccountSettingsResult updateAccountSettingsUpdateAccountSettingsRequest request request  beforeClientExecutionrequestreturn executeUpdateAccountSettingsrequest
public SearcherTracker(IndexSearcher searcher) {this.searcher = searcher;version = ((DirectoryReader) searcher.getIndexReader()).getVersion();searcher.getIndexReader().incRef();recordTimeSec = System.nanoTime() / NANOS_PER_SEC;},public SearcherTrackerIndexSearcher searcher thissearcher  searcherversion  DirectoryReader searchergetIndexReadergetVersionsearchergetIndexReaderincRefrecordTimeSec  SystemnanoTime  NANOSPERSEC
"public Principal(String accountId) {this(""AWS"", accountId);if (accountId == null) {throw new IllegalArgumentException(""Null AWS account ID specified"");}}",public PrincipalString accountId thisAWS accountIdif accountId  null throw new IllegalArgumentExceptionNull AWS account ID specified
public V setValue(V object) {V result = value;value = object;return result;},public V setValueV object V result  valuevalue  objectreturn result
"public ListMomentPhotosRequest() {super(""CloudPhoto"", ""2017-07-11"", ""ListMomentPhotos"", ""cloudphoto"");setProtocol(ProtocolType.HTTPS);}",public ListMomentPhotosRequest superCloudPhoto 20170711 ListMomentPhotos cloudphotosetProtocolProtocolTypeHTTPS
public boolean contains(Object o) {return map.containsKey(o);},public boolean containsObject o return mapcontainsKeyo
"public LinearOffsetRange(int offset, int length) {if(length == 0) {throw new RuntimeException(""length may not be zero"");}_offset = offset;_length = length;}",public LinearOffsetRangeint offset int length iflength  0 throw new RuntimeExceptionlength may not be zerooffset  offsetlength  length
public ListPipelinesResult listPipelines() {return listPipelines(new ListPipelinesRequest());},public ListPipelinesResult listPipelines return listPipelinesnew ListPipelinesRequest
"public static boolean indexExists(Directory directory) throws IOException {String[] files = directory.listAll();String prefix = IndexFileNames.SEGMENTS + ""_"";for(String file : files) {if (file.startsWith(prefix)) {return true;}}return false;}",public static boolean indexExistsDirectory directory throws IOException String files  directorylistAllString prefix  IndexFileNamesSEGMENTS  forString file  files if filestartsWithprefix return truereturn false
public DisassociateFromMasterAccountResult disassociateFromMasterAccount(DisassociateFromMasterAccountRequest request) {request = beforeClientExecution(request);return executeDisassociateFromMasterAccount(request);},public DisassociateFromMasterAccountResult disassociateFromMasterAccountDisassociateFromMasterAccountRequest request request  beforeClientExecutionrequestreturn executeDisassociateFromMasterAccountrequest
public GetVoiceTemplateResult getVoiceTemplate(GetVoiceTemplateRequest request) {request = beforeClientExecution(request);return executeGetVoiceTemplate(request);},public GetVoiceTemplateResult getVoiceTemplateGetVoiceTemplateRequest request request  beforeClientExecutionrequestreturn executeGetVoiceTemplaterequest
public long ramBytesUsed() {return RamUsageEstimator.sizeOf(filter.getBits());},public long ramBytesUsed return RamUsageEstimatorsizeOffiltergetBits
public RejectInvitationResult rejectInvitation(RejectInvitationRequest request) {request = beforeClientExecution(request);return executeRejectInvitation(request);},public RejectInvitationResult rejectInvitationRejectInvitationRequest request request  beforeClientExecutionrequestreturn executeRejectInvitationrequest
public RejectQualificationRequestResult rejectQualificationRequest(RejectQualificationRequestRequest request) {request = beforeClientExecution(request);return executeRejectQualificationRequest(request);},public RejectQualificationRequestResult rejectQualificationRequestRejectQualificationRequestRequest request request  beforeClientExecutionrequestreturn executeRejectQualificationRequestrequest
public final long[] array() {return protectedArray();},public final long array return protectedArray
public void writeChars(String value) throws IOException {checkWritePrimitiveTypes();primitiveTypes.writeChars(value);},public void writeCharsString value throws IOException checkWritePrimitiveTypesprimitiveTypeswriteCharsvalue
"public void finish(FieldInfos fis, int numDocs) throws IOException {if (numDocsWritten != numDocs) {throw new RuntimeException(""mergeVectors produced an invalid result: mergedDocs is "" + numDocs + "" but vec numDocs is "" + numDocsWritten + "" file="" + out.toString() + ""; now aborting this merge to prevent index corruption"");}write(END);newLine();SimpleTextUtil.writeChecksum(out, scratch);}",public void finishFieldInfos fis int numDocs throws IOException if numDocsWritten  numDocs throw new RuntimeExceptionmergeVectors produced an invalid result mergedDocs is   numDocs   but vec numDocs is   numDocsWritten   file  outtoString   now aborting this merge to prevent index corruptionwriteENDnewLineSimpleTextUtilwriteChecksumout scratch
"public void readBytes(byte[] b, int offset, int len) throws IOException {while (len > 0) {final int cnt = is.read(b, offset, len);if (cnt < 0) {throw new EOFException();}len -= cnt;offset += cnt;}}",public void readBytesbyte b int offset int len throws IOException while len  0 final int cnt  isreadb offset lenif cnt  0 throw new EOFExceptionlen  cntoffset  cnt
"public long ramBytesUsed() {long ramBytesUsed = BASE_RAM_BYTES_USED;ramBytesUsed += fields.size() * 2L * RamUsageEstimator.NUM_BYTES_OBJECT_REF;ramBytesUsed += formats.size() * 2L * RamUsageEstimator.NUM_BYTES_OBJECT_REF;for(Map.Entry<String,FieldsProducer> entry: formats.entrySet()) {ramBytesUsed += entry.getValue().ramBytesUsed();}return ramBytesUsed;}",public long ramBytesUsed long ramBytesUsed  BASERAMBYTESUSEDramBytesUsed  fieldssize  2L  RamUsageEstimatorNUMBYTESOBJECTREFramBytesUsed  formatssize  2L  RamUsageEstimatorNUMBYTESOBJECTREFforMapEntryStringFieldsProducer entry formatsentrySet ramBytesUsed  entrygetValueramBytesUsedreturn ramBytesUsed
public boolean equals(Object obj) {if (this == obj) return true;if (null == obj || getClass() != obj.getClass()) return false;JaroWinklerDistance o = (JaroWinklerDistance)obj;return (Float.floatToIntBits(o.threshold)== Float.floatToIntBits(this.threshold));},public boolean equalsObject obj if this  obj return trueif null  obj  getClass  objgetClass return falseJaroWinklerDistance o  JaroWinklerDistanceobjreturn FloatfloatToIntBitsothreshold FloatfloatToIntBitsthisthreshold
public BatchRefUpdate addCommand(ReceiveCommand... cmd) {return addCommand(Arrays.asList(cmd));},public BatchRefUpdate addCommandReceiveCommand cmd return addCommandArraysasListcmd
"public void write(byte[] buf, int off, int len) throws IOException {try {beginWrite();dst.write(buf, off, len);} catch (InterruptedIOException e) {throw writeTimedOut(e);} finally {endWrite();}}",public void writebyte buf int off int len throws IOException try beginWritedstwritebuf off len catch InterruptedIOException e throw writeTimedOute finally endWrite
public DeregisterGameServerResult deregisterGameServer(DeregisterGameServerRequest request) {request = beforeClientExecution(request);return executeDeregisterGameServer(request);},public DeregisterGameServerResult deregisterGameServerDeregisterGameServerRequest request request  beforeClientExecutionrequestreturn executeDeregisterGameServerrequest
public void write(byte[] b) {try {super.write(b);} catch (IOException e) {throw new RuntimeException(e);}},public void writebyte b try superwriteb catch IOException e throw new RuntimeExceptione
"public boolean matches(int symbol, int minVocabSymbol, int maxVocabSymbol) {return symbol >= from && symbol <= to;}",public boolean matchesint symbol int minVocabSymbol int maxVocabSymbol return symbol  from  symbol  to
"public void finish(FieldInfos fis, int numDocs) throws IOException {if (numBufferedDocs > 0) {flush();numDirtyChunks++; } else {assert bufferedDocs.size() == 0;}if (docBase != numDocs) {throw new RuntimeException(""Wrote "" + docBase + "" docs, finish called with numDocs="" + numDocs);}indexWriter.finish(numDocs, fieldsStream.getFilePointer());fieldsStream.writeVLong(numChunks);fieldsStream.writeVLong(numDirtyChunks);CodecUtil.writeFooter(fieldsStream);assert bufferedDocs.size() == 0;}",public void finishFieldInfos fis int numDocs throws IOException if numBufferedDocs  0 flushnumDirtyChunks  else assert bufferedDocssize  0if docBase  numDocs throw new RuntimeExceptionWrote   docBase   docs finish called with numDocs  numDocsindexWriterfinishnumDocs fieldsStreamgetFilePointerfieldsStreamwriteVLongnumChunksfieldsStreamwriteVLongnumDirtyChunksCodecUtilwriteFooterfieldsStreamassert bufferedDocssize  0
public Iterator<String> iterator() {final Iterator<String> i = names.values().iterator();return new Iterator<String>();},public IteratorString iterator final IteratorString i  namesvaluesiteratorreturn new IteratorString
"public String toString(){StringBuilder buffer = new StringBuilder();buffer.append(""[DEFAULTCOLWIDTH]\n"");buffer.append(""    .colwidth      = "").append(Integer.toHexString(getColWidth())).append(""\n"");buffer.append(""[/DEFAULTCOLWIDTH]\n"");return buffer.toString();}",public String toStringStringBuilder buffer  new StringBuilderbufferappendDEFAULTCOLWIDTHnbufferappend    colwidth       appendIntegertoHexStringgetColWidthappendnbufferappendDEFAULTCOLWIDTHnreturn buffertoString
public DataValidityTable(RecordStream rs) {_headerRec = (DVALRecord) rs.getNext();List<DVRecord> temp = new ArrayList<>();while (rs.peekNextClass() == DVRecord.class) {temp.add((DVRecord) rs.getNext());}_validationList = temp;},public DataValidityTableRecordStream rs headerRec  DVALRecord rsgetNextListDVRecord temp  new ArrayListwhile rspeekNextClass  DVRecordclass tempaddDVRecord rsgetNextvalidationList  temp
public DeleteRoomMembershipResult deleteRoomMembership(DeleteRoomMembershipRequest request) {request = beforeClientExecution(request);return executeDeleteRoomMembership(request);},public DeleteRoomMembershipResult deleteRoomMembershipDeleteRoomMembershipRequest request request  beforeClientExecutionrequestreturn executeDeleteRoomMembershiprequest
"public QueryParserTokenManager(CharStream stream, int lexState){this(stream);SwitchTo(lexState);}",public QueryParserTokenManagerCharStream stream int lexStatethisstreamSwitchTolexState
public RebootDBInstanceRequest(String dBInstanceIdentifier) {setDBInstanceIdentifier(dBInstanceIdentifier);},public RebootDBInstanceRequestString dBInstanceIdentifier setDBInstanceIdentifierdBInstanceIdentifier
public CreateAutoScalingGroupResult createAutoScalingGroup(CreateAutoScalingGroupRequest request) {request = beforeClientExecution(request);return executeCreateAutoScalingGroup(request);},public CreateAutoScalingGroupResult createAutoScalingGroupCreateAutoScalingGroupRequest request request  beforeClientExecutionrequestreturn executeCreateAutoScalingGrouprequest
"public K floorKey(K key) {Entry<K, V> entry = findBounded(key, FLOOR);return entry != null ? entry.getKey() : null;}",public K floorKeyK key EntryK V entry  findBoundedkey FLOORreturn entry  null  entrygetKey  null
"public boolean include(RevWalk walker, RevCommit c) {return true;}",public boolean includeRevWalk walker RevCommit c return true
public boolean isValidating() {return getFeature (XmlPullParser.FEATURE_VALIDATION);},public boolean isValidating return getFeature XmlPullParserFEATUREVALIDATION
public synchronized void write(int oneByte) {if (out == null) {setError();return;}try {out.write(oneByte);int b = oneByte & 0xFF;boolean isNewline = b == 0x0A || b == 0x15;if (autoFlush && isNewline) {flush();}} catch (IOException e) {setError();}},public synchronized void writeint oneByte if out  null setErrorreturntry outwriteoneByteint b  oneByte  0xFFboolean isNewline  b  0x0A  b  0x15if autoFlush  isNewline flush catch IOException e setError
public UpdateScalingParametersResult updateScalingParameters(UpdateScalingParametersRequest request) {request = beforeClientExecution(request);return executeUpdateScalingParameters(request);},public UpdateScalingParametersResult updateScalingParametersUpdateScalingParametersRequest request request  beforeClientExecutionrequestreturn executeUpdateScalingParametersrequest
public ModifyDBClusterParameterGroupResult modifyDBClusterParameterGroup(ModifyDBClusterParameterGroupRequest request) {request = beforeClientExecution(request);return executeModifyDBClusterParameterGroup(request);},public ModifyDBClusterParameterGroupResult modifyDBClusterParameterGroupModifyDBClusterParameterGroupRequest request request  beforeClientExecutionrequestreturn executeModifyDBClusterParameterGrouprequest
public GetOperationsForResourceResult getOperationsForResource(GetOperationsForResourceRequest request) {request = beforeClientExecution(request);return executeGetOperationsForResource(request);},public GetOperationsForResourceResult getOperationsForResourceGetOperationsForResourceRequest request request  beforeClientExecutionrequestreturn executeGetOperationsForResourcerequest
public NLPTokenizerOp(TokenizerModel model) {tokenizer = new TokenizerME(model);},public NLPTokenizerOpTokenizerModel model tokenizer  new TokenizerMEmodel
"public StartImageScanRequest() {super(""cr"", ""2016-06-07"", ""StartImageScan"", ""cr"");setUriPattern(""/repos/[RepoNamespace]/[RepoName]/tags/[Tag]/scan"");setMethod(MethodType.PUT);}",public StartImageScanRequest supercr 20160607 StartImageScan crsetUriPatternreposRepoNamespaceRepoNametagsTagscansetMethodMethodTypePUT
public UpdateFleetResult updateFleet(UpdateFleetRequest request) {request = beforeClientExecution(request);return executeUpdateFleet(request);},public UpdateFleetResult updateFleetUpdateFleetRequest request request  beforeClientExecutionrequestreturn executeUpdateFleetrequest
"public Editable newEditable(CharSequence source) {return new CalculatorEditable(source, mLogic);}",public Editable newEditableCharSequence source return new CalculatorEditablesource mLogic
public static TreeFilter createFromStrings(String... paths) {if (paths.length == 0)throw new IllegalArgumentException(JGitText.get().atLeastOnePathIsRequired);final int length = paths.length;final PathFilter[] p = new PathFilter[length];for (int i = 0; i < length; i++)p[i] = PathFilter.create(paths[i]);return create(p);},public static TreeFilter createFromStringsString paths if pathslength  0throw new IllegalArgumentExceptionJGitTextgetatLeastOnePathIsRequiredfinal int length  pathslengthfinal PathFilter p  new PathFilterlengthfor int i  0 i  length ipi  PathFiltercreatepathsireturn createp
public DescribeHostedConnectionsResult describeHostedConnections(DescribeHostedConnectionsRequest request) {request = beforeClientExecution(request);return executeDescribeHostedConnections(request);},public DescribeHostedConnectionsResult describeHostedConnectionsDescribeHostedConnectionsRequest request request  beforeClientExecutionrequestreturn executeDescribeHostedConnectionsrequest
public RejectTransitGatewayPeeringAttachmentResult rejectTransitGatewayPeeringAttachment(RejectTransitGatewayPeeringAttachmentRequest request) {request = beforeClientExecution(request);return executeRejectTransitGatewayPeeringAttachment(request);},public RejectTransitGatewayPeeringAttachmentResult rejectTransitGatewayPeeringAttachmentRejectTransitGatewayPeeringAttachmentRequest request request  beforeClientExecutionrequestreturn executeRejectTransitGatewayPeeringAttachmentrequest
public static double toPoints(long emu){return (double)emu/EMU_PER_POINT;},public static double toPointslong emureturn doubleemuEMUPERPOINT
"public ValueEval evaluate(int srcRowIndex, int srcColumnIndex, ValueEval arg0, ValueEval arg1) {return arg1;}",public ValueEval evaluateint srcRowIndex int srcColumnIndex ValueEval arg0 ValueEval arg1 return arg1
public final BytesRef getBinaryValue(String name) {for (IndexableField field : fields) {if (field.name().equals(name)) {final BytesRef bytes = field.binaryValue();if (bytes != null) {return bytes;}}}return null;},public final BytesRef getBinaryValueString name for IndexableField field  fields if fieldnameequalsname final BytesRef bytes  fieldbinaryValueif bytes  null return bytesreturn null
public CRNBlock(RecordStream rs) {_countRecord = (CRNCountRecord) rs.getNext();int nCRNs = _countRecord.getNumberOfCRNs();CRNRecord[] crns = new CRNRecord[nCRNs];for (int i = 0; i < crns.length; i++) {crns[i] = (CRNRecord) rs.getNext();}_crns = crns;},public CRNBlockRecordStream rs countRecord  CRNCountRecord rsgetNextint nCRNs  countRecordgetNumberOfCRNsCRNRecord crns  new CRNRecordnCRNsfor int i  0 i  crnslength i crnsi  CRNRecord rsgetNextcrns  crns
"public int get(int index, long[] arr, int off, int len) {return current.get(index, arr, off, len);}",public int getint index long arr int off int len return currentgetindex arr off len
public LooseRef peel(ObjectIdRef newLeaf) {return this;},public LooseRef peelObjectIdRef newLeaf return this
public UpdateModelVersionResult updateModelVersion(UpdateModelVersionRequest request) {request = beforeClientExecution(request);return executeUpdateModelVersion(request);},public UpdateModelVersionResult updateModelVersionUpdateModelVersionRequest request request  beforeClientExecutionrequestreturn executeUpdateModelVersionrequest
"public Builder() {PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton();fstCompiler = new FSTCompiler<>(FST.INPUT_TYPE.BYTE1, outputs);scratchInts = new IntsRefBuilder();}",public Builder PositiveIntOutputs outputs  PositiveIntOutputsgetSingletonfstCompiler  new FSTCompilerFSTINPUTTYPEBYTE1 outputsscratchInts  new IntsRefBuilder
public boolean stem() {int v_1 = cursor;r_mark_regions();cursor = v_1;limit_backward = cursor;cursor = limit;int v_2 = limit - cursor;r_main_suffix();cursor = limit - v_2;int v_3 = limit - cursor;r_consonant_pair();cursor = limit - v_3;int v_4 = limit - cursor;r_other_suffix();cursor = limit - v_4;cursor = limit_backward;return true;},public boolean stem int v1  cursorrmarkregionscursor  v1limitbackward  cursorcursor  limitint v2  limit  cursorrmainsuffixcursor  limit  v2int v3  limit  cursorrconsonantpaircursor  limit  v3int v4  limit  cursorrothersuffixcursor  limit  v4cursor  limitbackwardreturn true
public int describeContents() {return 0;},public int describeContents return 0
"public FetchConnection openFetch() throws TransportException {if (src == null)throw new TransportException(uri, JGitText.get().onlyOneFetchSupported);try {return new BundleFetchConnection(this, src);} finally {src = null;}}",public FetchConnection openFetch throws TransportException if src  nullthrow new TransportExceptionuri JGitTextgetonlyOneFetchSupportedtry return new BundleFetchConnectionthis src finally src  null
public DeleteWorkGroupResult deleteWorkGroup(DeleteWorkGroupRequest request) {request = beforeClientExecution(request);return executeDeleteWorkGroup(request);},public DeleteWorkGroupResult deleteWorkGroupDeleteWorkGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteWorkGrouprequest
public GetApiResult getApi(GetApiRequest request) {request = beforeClientExecution(request);return executeGetApi(request);},public GetApiResult getApiGetApiRequest request request  beforeClientExecutionrequestreturn executeGetApirequest
"public LongBuffer slice() {return new ReadOnlyLongArrayBuffer(remaining(), backingArray, offset + position);}",public LongBuffer slice return new ReadOnlyLongArrayBufferremaining backingArray offset  position
"public String toString() {String opName = getClass().getName();int index = opName.indexOf('$');opName = opName.substring(index+1, opName.length());return ""<""+opName+""@""+tokens.get(index)+"":\""""+text+""\"">"";}",public String toString String opName  getClassgetNameint index  opNameindexOfopName  opNamesubstringindex1 opNamelengthreturn opNametokensgetindextext
"public String toString() {return ""Action["" + token + ""]"";}",public String toString return Action  token  
public static EvaluationException invalidRef() {return new EvaluationException(ErrorEval.REF_INVALID);},public static EvaluationException invalidRef return new EvaluationExceptionErrorEvalREFINVALID
public Iterator<Entry> getEntries() {return new FilteringIterator();},public IteratorEntry getEntries return new FilteringIterator
"public String toString() {StringBuilder buffer = new StringBuilder();buffer.append("" [FUTURE HEADER]\n"");buffer.append(""   Type "" + recordType);buffer.append(""   Flags "" + grbitFrt);buffer.append("" [/FUTURE HEADER]\n"");return buffer.toString();}",public String toString StringBuilder buffer  new StringBuilderbufferappend FUTURE HEADERnbufferappend   Type   recordTypebufferappend   Flags   grbitFrtbufferappend FUTURE HEADERnreturn buffertoString
public void copy(MutableValue source) {MutableValueStr s = (MutableValueStr) source;exists = s.exists;value.copyBytes(s.value);},public void copyMutableValue source MutableValueStr s  MutableValueStr sourceexists  sexistsvaluecopyBytessvalue
"public ReaderSlice(int start, int length, int readerIndex) {this.start = start;this.length = length;this.readerIndex = readerIndex;}",public ReaderSliceint start int length int readerIndex thisstart  startthislength  lengththisreaderIndex  readerIndex
public AddTagsResult addTags(AddTagsRequest request) {request = beforeClientExecution(request);return executeAddTags(request);},public AddTagsResult addTagsAddTagsRequest request request  beforeClientExecutionrequestreturn executeAddTagsrequest
public static URI create(String uri) {try {return new URI(uri);} catch (URISyntaxException e) {throw new IllegalArgumentException(e.getMessage());}},public static URI createString uri try return new URIuri catch URISyntaxException e throw new IllegalArgumentExceptionegetMessage
public UpdateConfigurationSetTrackingOptionsResult updateConfigurationSetTrackingOptions(UpdateConfigurationSetTrackingOptionsRequest request) {request = beforeClientExecution(request);return executeUpdateConfigurationSetTrackingOptions(request);},public UpdateConfigurationSetTrackingOptionsResult updateConfigurationSetTrackingOptionsUpdateConfigurationSetTrackingOptionsRequest request request  beforeClientExecutionrequestreturn executeUpdateConfigurationSetTrackingOptionsrequest
"public void recycleByteBlocks(byte[][] blocks, int start, int end) {bytesUsed.addAndGet(-((end-start)* blockSize));for (int i = start; i < end; i++) {blocks[i] = null;}}",public void recycleByteBlocksbyte blocks int start int end bytesUsedaddAndGetendstart blockSizefor int i  start i  end i blocksi  null
public DoubleBuffer compact() {throw new ReadOnlyBufferException();},public DoubleBuffer compact throw new ReadOnlyBufferException
public GetVoiceConnectorStreamingConfigurationResult getVoiceConnectorStreamingConfiguration(GetVoiceConnectorStreamingConfigurationRequest request) {request = beforeClientExecution(request);return executeGetVoiceConnectorStreamingConfiguration(request);},public GetVoiceConnectorStreamingConfigurationResult getVoiceConnectorStreamingConfigurationGetVoiceConnectorStreamingConfigurationRequest request request  beforeClientExecutionrequestreturn executeGetVoiceConnectorStreamingConfigurationrequest
public boolean hasNext() {return pos + 1 < size();},public boolean hasNext return pos  1  size
public double getRKNumberAt(int coffset) {return RKUtil.decodeNumber(field_3_rks[coffset].rk);},public double getRKNumberAtint coffset return RKUtildecodeNumberfield3rkscoffsetrk
public ReimportApiResult reimportApi(ReimportApiRequest request) {request = beforeClientExecution(request);return executeReimportApi(request);},public ReimportApiResult reimportApiReimportApiRequest request request  beforeClientExecutionrequestreturn executeReimportApirequest
public boolean hasNext() {return link.previous != list.voidLink;},public boolean hasNext return linkprevious  listvoidLink
"public void fill(BytesRef b, long start) {final int index = (int) (start >> blockBits);final int offset = (int) (start & blockMask);final byte[] block = b.bytes = blocks[index];if ((block[offset] & 128) == 0) {b.length = block[offset];b.offset = offset+1;} else {b.length = ((block[offset] & 0x7f) << 8) | (block[1+offset] & 0xff);b.offset = offset+2;assert b.length > 0;}}",public void fillBytesRef b long start final int index  int start  blockBitsfinal int offset  int start  blockMaskfinal byte block  bbytes  blocksindexif blockoffset  128  0 blength  blockoffsetboffset  offset1 else blength  blockoffset  0x7f  8  block1offset  0xffboffset  offset2assert blength  0
"public void trimToSize() {if (n < array.length) {byte[] aux = new byte[n];System.arraycopy(array, 0, aux, 0, n);array = aux;}}",public void trimToSize if n  arraylength byte aux  new bytenSystemarraycopyarray 0 aux 0 narray  aux
public SubmoduleUpdateCommand submoduleUpdate() {return new SubmoduleUpdateCommand(repo);},public SubmoduleUpdateCommand submoduleUpdate return new SubmoduleUpdateCommandrepo
"public static ShortBuffer wrap(short[] array, int start, int shortCount) {Arrays.checkOffsetAndCount(array.length, start, shortCount);ShortBuffer buf = new ReadWriteShortArrayBuffer(array);buf.position = start;buf.limit = start + shortCount;return buf;}",public static ShortBuffer wrapshort array int start int shortCount ArrayscheckOffsetAndCountarraylength start shortCountShortBuffer buf  new ReadWriteShortArrayBufferarraybufposition  startbuflimit  start  shortCountreturn buf
public GetVpcLinksResult getVpcLinks(GetVpcLinksRequest request) {request = beforeClientExecution(request);return executeGetVpcLinks(request);},public GetVpcLinksResult getVpcLinksGetVpcLinksRequest request request  beforeClientExecutionrequestreturn executeGetVpcLinksrequest
public RemoveResourcePermissionResult removeResourcePermission(RemoveResourcePermissionRequest request) {request = beforeClientExecution(request);return executeRemoveResourcePermission(request);},public RemoveResourcePermissionResult removeResourcePermissionRemoveResourcePermissionRequest request request  beforeClientExecutionrequestreturn executeRemoveResourcePermissionrequest
public ListIndexResult listIndex(ListIndexRequest request) {request = beforeClientExecution(request);return executeListIndex(request);},public ListIndexResult listIndexListIndexRequest request request  beforeClientExecutionrequestreturn executeListIndexrequest
public List<Integer> toList() {List<Integer> values = new ArrayList<Integer>();int n = intervals.size();for (int i = 0; i < n; i++) {Interval I = intervals.get(i);int a = I.a;int b = I.b;for (int v=a; v<=b; v++) {values.add(v);}}return values;},public ListInteger toList ListInteger values  new ArrayListIntegerint n  intervalssizefor int i  0 i  n i Interval I  intervalsgetiint a  Iaint b  Ibfor int va vb v valuesaddvreturn values
"public CreateCustomerGatewayRequest(GatewayType type, String publicIp, Integer bgpAsn) {setType(type.toString());setPublicIp(publicIp);setBgpAsn(bgpAsn);}",public CreateCustomerGatewayRequestGatewayType type String publicIp Integer bgpAsn setTypetypetoStringsetPublicIppublicIpsetBgpAsnbgpAsn
"public int getWeekNo(Calendar cal, int weekStartOn) {if (weekStartOn == 1) {cal.setFirstDayOfWeek(Calendar.SUNDAY);} else {cal.setFirstDayOfWeek(Calendar.MONDAY);}return cal.get(Calendar.WEEK_OF_YEAR);}",public int getWeekNoCalendar cal int weekStartOn if weekStartOn  1 calsetFirstDayOfWeekCalendarSUNDAY else calsetFirstDayOfWeekCalendarMONDAYreturn calgetCalendarWEEKOFYEAR
"public String toString() {String s = ""o:""+offset+"" p:""+position+"" c:""+count;if (rptGroup >=0 ) {s += "" rpt:""+rptGroup+"",i""+rptInd;}return s;}",public String toString String s  ooffset pposition ccountif rptGroup 0  s   rptrptGroupirptIndreturn s
@Override public ListIterator<E> listIterator() {return listIterator(0);},Override public ListIteratorE listIterator return listIterator0
public GetUserEndpointsResult getUserEndpoints(GetUserEndpointsRequest request) {request = beforeClientExecution(request);return executeGetUserEndpoints(request);},public GetUserEndpointsResult getUserEndpointsGetUserEndpointsRequest request request  beforeClientExecutionrequestreturn executeGetUserEndpointsrequest
public UAX29URLEmailTokenizerImpl(java.io.Reader in) {this.zzReader = in;},public UAX29URLEmailTokenizerImpljavaioReader in thiszzReader  in
"public ResetCommand addPath(String path) {if (mode != null)throw new JGitInternalException(MessageFormat.format(JGitText.get().illegalCombinationOfArguments, ""<paths>..."", ""[--mixed | --soft | --hard]"")); filepaths.add(path);return this;}",public ResetCommand addPathString path if mode  nullthrow new JGitInternalExceptionMessageFormatformatJGitTextgetillegalCombinationOfArguments paths mixed  soft  hard filepathsaddpathreturn this
"public org.apache.poi.hssf.record.Record findNextRecordBySid(short sid, int pos) {int matches = 0;for (org.apache.poi.hssf.record.Record record : records.getRecords() ) {if (record.getSid() == sid && matches++ == pos) {return record;}}return null;}",public orgapachepoihssfrecordRecord findNextRecordBySidshort sid int pos int matches  0for orgapachepoihssfrecordRecord record  recordsgetRecords  if recordgetSid  sid  matches  pos return recordreturn null
public int[] toArray() {return toIntegerList().toArray();},public int toArray return toIntegerListtoArray
public GetDomainNamesResult getDomainNames(GetDomainNamesRequest request) {request = beforeClientExecution(request);return executeGetDomainNames(request);},public GetDomainNamesResult getDomainNamesGetDomainNamesRequest request request  beforeClientExecutionrequestreturn executeGetDomainNamesrequest
public UpdateTemplateAliasResult updateTemplateAlias(UpdateTemplateAliasRequest request) {request = beforeClientExecution(request);return executeUpdateTemplateAlias(request);},public UpdateTemplateAliasResult updateTemplateAliasUpdateTemplateAliasRequest request request  beforeClientExecutionrequestreturn executeUpdateTemplateAliasrequest
public String getReceivePack() {return receivePack;},public String getReceivePack return receivePack
public synchronized Set<K> keySet() {Set<K> ks = keySet;return (ks != null) ? ks : (keySet = new KeySet());},public synchronized SetK keySet SetK ks  keySetreturn ks  null  ks  keySet  new KeySet
"public AssociateAddressRequest(String instanceId, String publicIp) {setInstanceId(instanceId);setPublicIp(publicIp);}",public AssociateAddressRequestString instanceId String publicIp setInstanceIdinstanceIdsetPublicIppublicIp
public static CharBuffer wrap(CharSequence chseq) {return new CharSequenceAdapter(chseq);},public static CharBuffer wrapCharSequence chseq return new CharSequenceAdapterchseq
"public void reset() {reset(true, true);}",public void reset resettrue true
"public static double nChooseK(int n, int k) {double d = 1;if (n<0 || k<0 || n<k) {d= Double.NaN;}else {int minnk = Math.min(n-k, k);int maxnk = Math.max(n-k, k);for (int i=maxnk; i<n; i++) {d *= i+1;}d /= factorial(minnk);}return d;}",public static double nChooseKint n int k double d  1if n0  k0  nk d DoubleNaNelse int minnk  Mathminnk kint maxnk  Mathmaxnk kfor int imaxnk in i d  i1d  factorialminnkreturn d
"public static String toHex(String value) {return (value == null || value.length() == 0)? ""[]"": toHex(value.getBytes(LocaleUtil.CHARSET_1252));}",public static String toHexString value return value  null  valuelength  0  toHexvaluegetBytesLocaleUtilCHARSET1252
public String getAccessSecret() {return getCredentials().getAccessKeySecret();},public String getAccessSecret return getCredentialsgetAccessKeySecret
"public static BoundSheetRecord[] orderByBofPosition(List<BoundSheetRecord> boundSheetRecords) {BoundSheetRecord[] bsrs = new BoundSheetRecord[boundSheetRecords.size()];boundSheetRecords.toArray(bsrs);Arrays.sort(bsrs, BoundSheetRecord::compareRecords);return bsrs;}",public static BoundSheetRecord orderByBofPositionListBoundSheetRecord boundSheetRecords BoundSheetRecord bsrs  new BoundSheetRecordboundSheetRecordssizeboundSheetRecordstoArraybsrsArrayssortbsrs BoundSheetRecordcompareRecordsreturn bsrs
public DeleteNotebookInstanceResult deleteNotebookInstance(DeleteNotebookInstanceRequest request) {request = beforeClientExecution(request);return executeDeleteNotebookInstance(request);},public DeleteNotebookInstanceResult deleteNotebookInstanceDeleteNotebookInstanceRequest request request  beforeClientExecutionrequestreturn executeDeleteNotebookInstancerequest
public DTDHandler getDTDHandler () {return (theDTDHandler == this) ? null : theDTDHandler;},public DTDHandler getDTDHandler  return theDTDHandler  this  null  theDTDHandler
"public static File resolve(File directory, FS fs) {if (isGitRepository(directory, fs))return directory;if (isGitRepository(new File(directory, Constants.DOT_GIT), fs))return new File(directory, Constants.DOT_GIT);final String name = directory.getName();final File parent = directory.getParentFile();if (isGitRepository(new File(parent, name + Constants.DOT_GIT_EXT), fs))return new File(parent, name + Constants.DOT_GIT_EXT);return null;}",public static File resolveFile directory FS fs if isGitRepositorydirectory fsreturn directoryif isGitRepositorynew Filedirectory ConstantsDOTGIT fsreturn new Filedirectory ConstantsDOTGITfinal String name  directorygetNamefinal File parent  directorygetParentFileif isGitRepositorynew Fileparent name  ConstantsDOTGITEXT fsreturn new Fileparent name  ConstantsDOTGITEXTreturn null
public WorkflowTypeInfos listWorkflowTypes(ListWorkflowTypesRequest request) {request = beforeClientExecution(request);return executeListWorkflowTypes(request);},public WorkflowTypeInfos listWorkflowTypesListWorkflowTypesRequest request request  beforeClientExecutionrequestreturn executeListWorkflowTypesrequest
public Snapshot copyClusterSnapshot(CopyClusterSnapshotRequest request) {request = beforeClientExecution(request);return executeCopyClusterSnapshot(request);},public Snapshot copyClusterSnapshotCopyClusterSnapshotRequest request request  beforeClientExecutionrequestreturn executeCopyClusterSnapshotrequest
public Ptg[] getFormulaTokens(EvaluationCell evalCell) {HSSFCell cell = ((HSSFEvaluationCell)evalCell).getHSSFCell();FormulaRecordAggregate fra = (FormulaRecordAggregate) cell.getCellValueRecord();return fra.getFormulaTokens();},public Ptg getFormulaTokensEvaluationCell evalCell HSSFCell cell  HSSFEvaluationCellevalCellgetHSSFCellFormulaRecordAggregate fra  FormulaRecordAggregate cellgetCellValueRecordreturn fragetFormulaTokens
public DisassociateVPCFromHostedZoneResult disassociateVPCFromHostedZone(DisassociateVPCFromHostedZoneRequest request) {request = beforeClientExecution(request);return executeDisassociateVPCFromHostedZone(request);},public DisassociateVPCFromHostedZoneResult disassociateVPCFromHostedZoneDisassociateVPCFromHostedZoneRequest request request  beforeClientExecutionrequestreturn executeDisassociateVPCFromHostedZonerequest
"public StringBuffer insert(int index, int i) {return insert(index, Integer.toString(i));}",public StringBuffer insertint index int i return insertindex IntegertoStringi
"public void setBytesValue(BytesRef value) {if (!(fieldsData instanceof BytesRef)) {throw new IllegalArgumentException(""cannot change value type from "" + fieldsData.getClass().getSimpleName() + "" to BytesRef"");}if (type.indexOptions() != IndexOptions.NONE) {throw new IllegalArgumentException(""cannot set a BytesRef value on an indexed field"");}if (value == null) {throw new IllegalArgumentException(""value must not be null"");}fieldsData = value;}",public void setBytesValueBytesRef value if fieldsData instanceof BytesRef throw new IllegalArgumentExceptioncannot change value type from   fieldsDatagetClassgetSimpleName   to BytesRefif typeindexOptions  IndexOptionsNONE throw new IllegalArgumentExceptioncannot set a BytesRef value on an indexed fieldif value  null throw new IllegalArgumentExceptionvalue must not be nullfieldsData  value
public boolean equals( Object o ) {return o instanceof GermanStemmer;},public boolean equals Object o  return o instanceof GermanStemmer
public UntagMeetingResult untagMeeting(UntagMeetingRequest request) {request = beforeClientExecution(request);return executeUntagMeeting(request);},public UntagMeetingResult untagMeetingUntagMeetingRequest request request  beforeClientExecutionrequestreturn executeUntagMeetingrequest
"public String toString() {return ""[PRECISION]\n"" +""    .precision       = "" + getFullPrecision() +""\n"" +""[/PRECISION]\n"";}",public String toString return PRECISIONn     precision          getFullPrecision n PRECISIONn
"static public double pmt(double r, int nper, double pv, double fv) {return pmt(r, nper, pv, fv, 0);}",static public double pmtdouble r int nper double pv double fv return pmtr nper pv fv 0
"public ValueEval getArea3DEval(Area3DPxg aptg) {SheetRangeEvaluator sre = createExternSheetRefEvaluator(aptg.getSheetName(), aptg.getLastSheetName(), aptg.getExternalWorkbookNumber());return new LazyAreaEval(aptg.getFirstRow(), aptg.getFirstColumn(),aptg.getLastRow(), aptg.getLastColumn(), sre);}",public ValueEval getArea3DEvalArea3DPxg aptg SheetRangeEvaluator sre  createExternSheetRefEvaluatoraptggetSheetName aptggetLastSheetName aptggetExternalWorkbookNumberreturn new LazyAreaEvalaptggetFirstRow aptggetFirstColumnaptggetLastRow aptggetLastColumn sre
public boolean equals(Object obj) {if (obj instanceof Rect) {Rect rhs = (Rect) obj;if (isValid() != rhs.isValid()) {return false;}if (!isValid() && !rhs.isValid()) {return true;}return this.x == rhs.x && this.y == rhs.y && this.w == rhs.w && this.h == rhs.h;}return false;},public boolean equalsObject obj if obj instanceof Rect Rect rhs  Rect objif isValid  rhsisValid return falseif isValid  rhsisValid return truereturn thisx  rhsx  thisy  rhsy  thisw  rhsw  thish  rhshreturn false
public final boolean containsColumn(int col) {return _firstColumn <= col && _lastColumn >= col;},public final boolean containsColumnint col return firstColumn  col  lastColumn  col
"public RunJobFlowRequest(String name, JobFlowInstancesConfig instances) {setName(name);setInstances(instances);}",public RunJobFlowRequestString name JobFlowInstancesConfig instances setNamenamesetInstancesinstances
"public String toString() {if (noBreak == null && postBreak == null && preBreak != null&& preBreak.equals(""-"")) {return ""-"";}StringBuilder res = new StringBuilder(""{"");res.append(preBreak);res.append(""}{"");res.append(postBreak);res.append(""}{"");res.append(noBreak);res.append('}');return res.toString();}",public String toString if noBreak  null  postBreak  null  preBreak  null preBreakequals return StringBuilder res  new StringBuilderresappendpreBreakresappendresappendpostBreakresappendresappendnoBreakresappendreturn restoString
public ListPublishedSchemaArnsResult listPublishedSchemaArns(ListPublishedSchemaArnsRequest request) {request = beforeClientExecution(request);return executeListPublishedSchemaArns(request);},public ListPublishedSchemaArnsResult listPublishedSchemaArnsListPublishedSchemaArnsRequest request request  beforeClientExecutionrequestreturn executeListPublishedSchemaArnsrequest
"public StoredField(String name, double value) {super(name, TYPE);fieldsData = value;}",public StoredFieldString name double value supername TYPEfieldsData  value
public DescribeNetworkAclsResult describeNetworkAcls() {return describeNetworkAcls(new DescribeNetworkAclsRequest());},public DescribeNetworkAclsResult describeNetworkAcls return describeNetworkAclsnew DescribeNetworkAclsRequest
public PushCommand add(Ref ref) {refSpecs.add(new RefSpec(ref.getLeaf().getName()));return this;},public PushCommand addRef ref refSpecsaddnew RefSpecrefgetLeafgetNamereturn this
public DeleteVoiceConnectorGroupResult deleteVoiceConnectorGroup(DeleteVoiceConnectorGroupRequest request) {request = beforeClientExecution(request);return executeDeleteVoiceConnectorGroup(request);},public DeleteVoiceConnectorGroupResult deleteVoiceConnectorGroupDeleteVoiceConnectorGroupRequest request request  beforeClientExecutionrequestreturn executeDeleteVoiceConnectorGrouprequest
public IntervalSet(List<Interval> intervals) {this.intervals = intervals;},public IntervalSetListInterval intervals thisintervals  intervals
public IteratorQueue(Iterator<T> iter) {this.iter = iter;T removeTop = removeTop();assert removeTop == null;},public IteratorQueueIteratorT iter thisiter  iterT removeTop  removeTopassert removeTop  null
"public static long[] grow(long[] array) {return grow(array, 1 + array.length);}",public static long growlong array return growarray 1  arraylength
"public StemmerOverrideMap(FST<BytesRef> fst, boolean ignoreCase) {this.fst = fst;this.ignoreCase = ignoreCase;}",public StemmerOverrideMapFSTBytesRef fst boolean ignoreCase thisfst  fstthisignoreCase  ignoreCase
public DeleteAdmChannelResult deleteAdmChannel(DeleteAdmChannelRequest request) {request = beforeClientExecution(request);return executeDeleteAdmChannel(request);},public DeleteAdmChannelResult deleteAdmChannelDeleteAdmChannelRequest request request  beforeClientExecutionrequestreturn executeDeleteAdmChannelrequest
"public SetSubscriptionAttributesRequest(String subscriptionArn, String attributeName, String attributeValue) {setSubscriptionArn(subscriptionArn);setAttributeName(attributeName);setAttributeValue(attributeValue);}",public SetSubscriptionAttributesRequestString subscriptionArn String attributeName String attributeValue setSubscriptionArnsubscriptionArnsetAttributeNameattributeNamesetAttributeValueattributeValue
public void unsafeWrite(char b) {buf[len++] = b;},public void unsafeWritechar b buflen  b
@Override public boolean remove(Object key) {int count = 0;Collection<V> collection = subMap.remove(key);if (collection != null) {count = collection.size();collection.clear();totalSize -= count;}return count > 0;},Override public boolean removeObject key int count  0CollectionV collection  subMapremovekeyif collection  null count  collectionsizecollectioncleartotalSize  countreturn count  0
public boolean markSupported() {return false;},public boolean markSupported return false
